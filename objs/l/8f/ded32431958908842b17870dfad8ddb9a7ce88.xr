var __xr_tmp = [
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a> * 4 &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_node\">for_each_online_node</a>(<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, \"%s%d\", <a class=\"id\" href=\"#i\">i</a> ? \" \" : \"\", <a class=\"id\" href=\"#node_distance\">node_distance</a>(<a class=\"id\" href=\"#nid\">nid</a>, <a class=\"id\" href=\"#i\">i</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, \"\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"static <a class=\"id\" href=\"#SYSDEV_ATTR\">SYSDEV_ATTR</a>(<a class=\"id\" href=\"#distance\">distance</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#node_read_distance\">node_read_distance</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HUGETLBFS\">CONFIG_HUGETLBFS</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * hugetlbfs per node attributes registration interface:</span>", 
"<span class=\"comment\"> * When/if hugetlb[fs] subsystem initializes [sometime after this module],</span>", 
"<span class=\"comment\"> * it will register its per node attributes for all online nodes with</span>", 
"<span class=\"comment\"> * memory.  It will also call register_hugetlbfs_with_node(), below, to</span>", 
"<span class=\"comment\"> * register its attribute registration functions with this node driver.</span>", 
"<span class=\"comment\"> * Once these hooks have been initialized, the node driver will call into</span>", 
"<span class=\"comment\"> * the hugetlb module to [un]register attributes for hot-plugged nodes.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#node_registration_func_t\">node_registration_func_t</a> <a class=\"id\" href=\"#__hugetlb_register_node\">__hugetlb_register_node</a>;", 
"static <a class=\"id\" href=\"#node_registration_func_t\">node_registration_func_t</a> <a class=\"id\" href=\"#__hugetlb_unregister_node\">__hugetlb_unregister_node</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#hugetlb_register_node\">hugetlb_register_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__hugetlb_register_node\">__hugetlb_register_node</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_state\">node_state</a>(<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#N_HIGH_MEMORY\">N_HIGH_MEMORY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__hugetlb_register_node\">__hugetlb_register_node</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hugetlb_unregister_node\">hugetlb_unregister_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__hugetlb_unregister_node\">__hugetlb_unregister_node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__hugetlb_unregister_node\">__hugetlb_unregister_node</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#register_hugetlbfs_with_node\">register_hugetlbfs_with_node</a>(<a class=\"id\" href=\"#node_registration_func_t\">node_registration_func_t</a> <a class=\"id\" href=\"#doregister\">doregister</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#node_registration_func_t\">node_registration_func_t</a> <a class=\"id\" href=\"#unregister\">unregister</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__hugetlb_register_node\">__hugetlb_register_node</a>   = <a class=\"id\" href=\"#doregister\">doregister</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__hugetlb_unregister_node\">__hugetlb_unregister_node</a> = <a class=\"id\" href=\"#unregister\">unregister</a>;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hugetlb_register_node\">hugetlb_register_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a>) {}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hugetlb_unregister_node\">hugetlb_unregister_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a>) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * register_node - Setup a sysfs device for a node.</span>", 
"<span class=\"comment\"> * @num - Node number to use when creating the device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Initialize and register the node device.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#register_node\">register_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a>, int <a class=\"id\" href=\"#num\">num</a>, struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#cls\">cls</a> = &amp;<a class=\"id\" href=\"#node_class\">node_class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_register\">sysdev_register</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>){", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysdev_create_file\">sysdev_create_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_cpumap\">attr_cpumap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysdev_create_file\">sysdev_create_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_cpulist\">attr_cpulist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysdev_create_file\">sysdev_create_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_meminfo\">attr_meminfo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysdev_create_file\">sysdev_create_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_numastat\">attr_numastat</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysdev_create_file\">sysdev_create_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_distance\">attr_distance</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scan_unevictable_register_node\">scan_unevictable_register_node</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hugetlb_register_node\">hugetlb_register_node</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compaction_register_node\">compaction_register_node</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * unregister_node - unregister a node device</span>", 
"<span class=\"comment\"> * @node: node going away</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unregisters a node device @node.  All the devices on the node must be</span>", 
"<span class=\"comment\"> * unregistered before calling this function.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#unregister_node\">unregister_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_remove_file\">sysdev_remove_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_cpumap\">attr_cpumap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_remove_file\">sysdev_remove_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_cpulist\">attr_cpulist</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_remove_file\">sysdev_remove_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_meminfo\">attr_meminfo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_remove_file\">sysdev_remove_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_numastat\">attr_numastat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_remove_file\">sysdev_remove_file</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>, &amp;<a class=\"id\" href=\"#attr_distance\">attr_distance</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scan_unevictable_unregister_node\">scan_unevictable_unregister_node</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hugetlb_unregister_node\">hugetlb_unregister_node</a>(<a class=\"id\" href=\"#node\">node</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no-op, if memoryless node */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_unregister\">sysdev_unregister</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#node\">node</a> <a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a>];", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * register cpu under node</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#register_cpu_under_node\">register_cpu_under_node</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, unsigned int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#obj\">obj</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#node_online\">node_online</a>(<a class=\"id\" href=\"#nid\">nid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj\">obj</a> = <a class=\"id\" href=\"#get_cpu_sysdev\">get_cpu_sysdev</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj\">obj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#obj\">obj</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#obj\">obj</a>-><a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#obj\">obj</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>));", 
"}", 
"", 
"int <a class=\"id\" href=\"#unregister_cpu_under_node\">unregister_cpu_under_node</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, unsigned int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#obj\">obj</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#node_online\">node_online</a>(<a class=\"id\" href=\"#nid\">nid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj\">obj</a> = <a class=\"id\" href=\"#get_cpu_sysdev\">get_cpu_sysdev</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj\">obj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#obj\">obj</a>-><a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#obj\">obj</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MEMORY_HOTPLUG_SPARSE\">CONFIG_MEMORY_HOTPLUG_SPARSE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#page_initialized\">page_initialized</a>(<a class=\"id\" href=\"#page\">page</a>)  (<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#lru\">lru</a>.<a class=\"id\" href=\"#next\">next</a>)", 
"", 
"static int <a class=\"id\" href=\"#get_nid_for_pfn\">get_nid_for_pfn</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pfn_valid_within\">pfn_valid_within</a>(<a class=\"id\" href=\"#pfn\">pfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page_initialized\">page_initialized</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pfn_to_nid\">pfn_to_nid</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"}", 
"", 
"<span class=\"comment\">/* register memory section under specified node if it spans that node */</span>", 
"int <a class=\"id\" href=\"#register_mem_sect_under_node\">register_mem_sect_under_node</a>(struct <a class=\"id\" href=\"#memory_block\">memory_block</a> *<a class=\"id\" href=\"#mem_blk\">mem_blk</a>, int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#sect_start_pfn\">sect_start_pfn</a>, <a class=\"id\" href=\"#sect_end_pfn\">sect_end_pfn</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mem_blk\">mem_blk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#node_online\">node_online</a>(<a class=\"id\" href=\"#nid\">nid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sect_start_pfn\">sect_start_pfn</a> = <a class=\"id\" href=\"#section_nr_to_pfn\">section_nr_to_pfn</a>(<a class=\"id\" href=\"#mem_blk\">mem_blk</a>-><a class=\"id\" href=\"#phys_index\">phys_index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sect_end_pfn\">sect_end_pfn</a> = <a class=\"id\" href=\"#sect_start_pfn\">sect_start_pfn</a> + <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a> - 1;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#sect_start_pfn\">sect_start_pfn</a>; <a class=\"id\" href=\"#pfn\">pfn</a> <= <a class=\"id\" href=\"#sect_end_pfn\">sect_end_pfn</a>; <a class=\"id\" href=\"#pfn\">pfn</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#page_nid\">page_nid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_nid\">page_nid</a> = <a class=\"id\" href=\"#get_nid_for_pfn\">get_nid_for_pfn</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_nid\">page_nid</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_nid\">page_nid</a> != <a class=\"id\" href=\"#nid\">nid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysfs_create_link_nowarn\">sysfs_create_link_nowarn</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#mem_blk\">mem_blk</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#mem_blk\">mem_blk</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sysfs_create_link_nowarn\">sysfs_create_link_nowarn</a>(&amp;<a class=\"id\" href=\"#mem_blk\">mem_blk</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* mem section does not span the specified node */</span>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* unregister memory section under all nodes that it spans */</span>", 
"int <a class=\"id\" href=\"#unregister_mem_sect_under_nodes\">unregister_mem_sect_under_nodes</a>(struct <a class=\"id\" href=\"#memory_block\">memory_block</a> *<a class=\"id\" href=\"#mem_blk\">mem_blk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NODEMASK_ALLOC\">NODEMASK_ALLOC</a>(<a class=\"id\" href=\"#nodemask_t\">nodemask_t</a>, <a class=\"id\" href=\"#unlinked_nodes\">unlinked_nodes</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#sect_start_pfn\">sect_start_pfn</a>, <a class=\"id\" href=\"#sect_end_pfn\">sect_end_pfn</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mem_blk\">mem_blk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NODEMASK_FREE\">NODEMASK_FREE</a>(<a class=\"id\" href=\"#unlinked_nodes\">unlinked_nodes</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#unlinked_nodes\">unlinked_nodes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nodes_clear\">nodes_clear</a>(*<a class=\"id\" href=\"#unlinked_nodes\">unlinked_nodes</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sect_start_pfn\">sect_start_pfn</a> = <a class=\"id\" href=\"#section_nr_to_pfn\">section_nr_to_pfn</a>(<a class=\"id\" href=\"#mem_blk\">mem_blk</a>-><a class=\"id\" href=\"#phys_index\">phys_index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sect_end_pfn\">sect_end_pfn</a> = <a class=\"id\" href=\"#sect_start_pfn\">sect_start_pfn</a> + <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a> - 1;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#sect_start_pfn\">sect_start_pfn</a>; <a class=\"id\" href=\"#pfn\">pfn</a> <= <a class=\"id\" href=\"#sect_end_pfn\">sect_end_pfn</a>; <a class=\"id\" href=\"#pfn\">pfn</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nid\">nid</a> = <a class=\"id\" href=\"#get_nid_for_pfn\">get_nid_for_pfn</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nid\">nid</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#node_online\">node_online</a>(<a class=\"id\" href=\"#nid\">nid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node_test_and_set\">node_test_and_set</a>(<a class=\"id\" href=\"#nid\">nid</a>, *<a class=\"id\" href=\"#unlinked_nodes\">unlinked_nodes</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#mem_blk\">mem_blk</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#mem_blk\">mem_blk</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NODEMASK_FREE\">NODEMASK_FREE</a>(<a class=\"id\" href=\"#unlinked_nodes\">unlinked_nodes</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#link_mem_sections\">link_mem_sections</a>(int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a> = <a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#nid\">nid</a>)-><a class=\"id\" href=\"#node_start_pfn\">node_start_pfn</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a> + <a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#nid\">nid</a>)-><a class=\"id\" href=\"#node_spanned_pages\">node_spanned_pages</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a>; <a class=\"id\" href=\"#pfn\">pfn</a> &lt; <a class=\"id\" href=\"#end_pfn\">end_pfn</a>; <a class=\"id\" href=\"#pfn\">pfn</a> += <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#section_nr\">section_nr</a> = <a class=\"id\" href=\"#pfn_to_section_nr\">pfn_to_section_nr</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_section\">mem_section</a> *<a class=\"id\" href=\"#mem_sect\">mem_sect</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#memory_block\">memory_block</a> *<a class=\"id\" href=\"#mem_blk\">mem_blk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#present_section_nr\">present_section_nr</a>(<a class=\"id\" href=\"#section_nr\">section_nr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mem_sect\">mem_sect</a> = <a class=\"id\" href=\"#__nr_to_section\">__nr_to_section</a>(<a class=\"id\" href=\"#section_nr\">section_nr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mem_blk\">mem_blk</a> = <a class=\"id\" href=\"#find_memory_block\">find_memory_block</a>(<a class=\"id\" href=\"#mem_sect\">mem_sect</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#register_mem_sect_under_node\">register_mem_sect_under_node</a>(<a class=\"id\" href=\"#mem_blk\">mem_blk</a>, <a class=\"id\" href=\"#nid\">nid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* discard ref obtained in find_memory_block() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#mem_blk\">mem_blk</a>-><a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HUGETLBFS\">CONFIG_HUGETLBFS</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Handle per node hstate attribute [un]registration on transistions</span>", 
"<span class=\"comment\"> * to/from memoryless state.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#node_hugetlb_work\">node_hugetlb_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#node_work\">node_work</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We only get here when a node transitions to/from memoryless state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We can detect which transition occurred by examining whether the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * node has memory now.  hugetlb_register_node() already check this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we try to register the attributes.  If that fails, then the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * node has transitioned to memoryless, try to unregister the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * attributes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hugetlb_register_node\">hugetlb_register_node</a>(<a class=\"id\" href=\"#node\">node</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hugetlb_unregister_node\">hugetlb_unregister_node</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_node_hugetlb_work\">init_node_hugetlb_work</a>(int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#node_work\">node_work</a>, <a class=\"id\" href=\"#node_hugetlb_work\">node_hugetlb_work</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#node_memory_callback\">node_memory_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#memory_notify\">memory_notify</a> *<a class=\"id\" href=\"#mnb\">mnb</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a> = <a class=\"id\" href=\"#mnb\">mnb</a>-><a class=\"id\" href=\"#status_change_nid\">status_change_nid</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_ONLINE\">MEM_ONLINE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_OFFLINE\">MEM_OFFLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * offload per node hstate [un]registration to a work thread</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * when transitioning to/from memoryless state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nid\">nid</a> != <a class=\"id\" href=\"#NUMA_NO_NODE\">NUMA_NO_NODE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>].<a class=\"id\" href=\"#node_work\">node_work</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_GOING_ONLINE\">MEM_GOING_ONLINE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_GOING_OFFLINE\">MEM_GOING_OFFLINE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_CANCEL_ONLINE\">MEM_CANCEL_ONLINE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_CANCEL_OFFLINE\">MEM_CANCEL_OFFLINE</a>:", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_HUGETLBFS */</span>", 
"#else<span class=\"ts\"/><span class=\"comment\">/* !CONFIG_MEMORY_HOTPLUG_SPARSE */</span>", 
"", 
"static int <a class=\"id\" href=\"#link_mem_sections\">link_mem_sections</a>(int <a class=\"id\" href=\"#nid\">nid</a>) { return 0; }", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_MEMORY_HOTPLUG_SPARSE */</span>", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_MEMORY_HOTPLUG_SPARSE\">CONFIG_MEMORY_HOTPLUG_SPARSE</a>) || \\", 
"    !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_HUGETLBFS\">CONFIG_HUGETLBFS</a>)", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#node_memory_callback\">node_memory_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_node_hugetlb_work\">init_node_hugetlb_work</a>(int <a class=\"id\" href=\"#nid\">nid</a>) { }", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#register_one_node\">register_one_node</a>(int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node_online\">node_online</a>(<a class=\"id\" href=\"#nid\">nid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#p_node\">p_node</a> = <a class=\"id\" href=\"#parent_node\">parent_node</a>(<a class=\"id\" href=\"#nid\">nid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p_node\">p_node</a> != <a class=\"id\" href=\"#nid\">nid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = &amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#p_node\">p_node</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#register_node\">register_node</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>], <a class=\"id\" href=\"#nid\">nid</a>, <a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* link cpu under this node */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_present_cpu\">for_each_present_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_to_node\">cpu_to_node</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) == <a class=\"id\" href=\"#nid\">nid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#register_cpu_under_node\">register_cpu_under_node</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#nid\">nid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* link memory sections under this node */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#link_mem_sections\">link_mem_sections</a>(<a class=\"id\" href=\"#nid\">nid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* initialize work queue for memory hot plug */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_node_hugetlb_work\">init_node_hugetlb_work</a>(<a class=\"id\" href=\"#nid\">nid</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"}", 
"", 
"void <a class=\"id\" href=\"#unregister_one_node\">unregister_one_node</a>(int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_node\">unregister_node</a>(&amp;<a class=\"id\" href=\"#node_devices\">node_devices</a>[<a class=\"id\" href=\"#nid\">nid</a>]);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * node states attributes</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#print_nodes_state\">print_nodes_state</a>(enum <a class=\"id\" href=\"#node_states\">node_states</a> <a class=\"id\" href=\"#state\">state</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#nodelist_scnprintf\">nodelist_scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#node_states\">node_states</a>[<a class=\"id\" href=\"#state\">state</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &gt; 0 && <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> &gt; <a class=\"id\" href=\"#n\">n</a> + 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#n\">n</a>++) = '\\n';", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#n\">n</a>++) = '\\0';", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#node_attr\">node_attr</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysdev_class_attribute\">sysdev_class_attribute</a> <a class=\"id\" href=\"#attr\">attr</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#node_states\">node_states</a> <a class=\"id\" href=\"#state\">state</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_node_state\">show_node_state</a>(struct <a class=\"id\" href=\"#sysdev_class\">sysdev_class</a> *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#sysdev_class_attribute\">sysdev_class_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#node_attr\">node_attr</a> *<a class=\"id\" href=\"#na\">na</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#attr\">attr</a>, struct <a class=\"id\" href=\"#node_attr\">node_attr</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#print_nodes_state\">print_nodes_state</a>(<a class=\"id\" href=\"#na\">na</a>-><a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_NODE_ATTR\">_NODE_ATTR</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#state\">state</a>) \\", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#_SYSDEV_CLASS_ATTR\">_SYSDEV_CLASS_ATTR</a>(<a class=\"id\" href=\"#name\">name</a>, 0444, <a class=\"id\" href=\"#show_node_state\">show_node_state</a>, <a class=\"id\" href=\"#NULL\">NULL</a>), <a class=\"id\" href=\"#state\">state</a> }", 
"", 
"static struct <a class=\"id\" href=\"#node_attr\">node_attr</a> <a class=\"id\" href=\"#node_state_attr\">node_state_attr</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_NODE_ATTR\">_NODE_ATTR</a>(<a class=\"id\" href=\"#possible\">possible</a>, <a class=\"id\" href=\"#N_POSSIBLE\">N_POSSIBLE</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_NODE_ATTR\">_NODE_ATTR</a>(<a class=\"id\" href=\"#online\">online</a>, <a class=\"id\" href=\"#N_ONLINE\">N_ONLINE</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_NODE_ATTR\">_NODE_ATTR</a>(<a class=\"id\" href=\"#has_normal_memory\">has_normal_memory</a>, <a class=\"id\" href=\"#N_NORMAL_MEMORY\">N_NORMAL_MEMORY</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_NODE_ATTR\">_NODE_ATTR</a>(<a class=\"id\" href=\"#has_cpu\">has_cpu</a>, <a class=\"id\" href=\"#N_CPU\">N_CPU</a>),", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGHMEM\">CONFIG_HIGHMEM</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_NODE_ATTR\">_NODE_ATTR</a>(<a class=\"id\" href=\"#has_high_memory\">has_high_memory</a>, <a class=\"id\" href=\"#N_HIGH_MEMORY\">N_HIGH_MEMORY</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#sysdev_class_attribute\">sysdev_class_attribute</a> *<a class=\"id\" href=\"#node_state_attrs\">node_state_attrs</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#node_state_attr\">node_state_attr</a>[0].<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#node_state_attr\">node_state_attr</a>[1].<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#node_state_attr\">node_state_attr</a>[2].<a class=\"id\" href=\"#attr\">attr</a>,", 
];
xr_frag_insert('l/8f/ded32431958908842b17870dfad8ddb9a7ce88.xr', __xr_tmp);
