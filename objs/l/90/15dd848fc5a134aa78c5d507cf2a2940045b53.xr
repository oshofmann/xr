var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Machine check handler.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * K8 parts Copyright 2002,2003 Andi Kleen, SuSE Labs.</span>", 
"<span class=\"comment\"> * Rest from unknown author(s).</span>", 
"<span class=\"comment\"> * 2004 Andi Kleen. Rewrote most of it.</span>", 
"<span class=\"comment\"> * Copyright 2008 Intel Corporation</span>", 
"<span class=\"comment\"> * Author: Andi Kleen</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#thread_info\">thread_info</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#miscdevice\">miscdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ratelimit\">ratelimit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kallsyms\">kallsyms</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kobject\">kobject</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kdebug\">kdebug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysfs\">sysfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nmi\">nmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debugfs\">debugfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#edac_mce\">edac_mce</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hw_irq\">hw_irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#idle\">idle</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ipi\">ipi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mce\">mce</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#msr\">msr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mce-internal.h\"", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#mce_read_mutex\">mce_read_mutex</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rcu_dereference_check_mce\">rcu_dereference_check_mce</a>(<a class=\"id\" href=\"#p\">p</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_dereference_index_check\">rcu_dereference_index_check</a>((<a class=\"id\" href=\"#p\">p</a>), \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#rcu_read_lock_sched_held\">rcu_read_lock_sched_held</a>() || \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#lockdep_is_held\">lockdep_is_held</a>(&amp;<a class=\"id\" href=\"#mce_read_mutex\">mce_read_mutex</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CREATE_TRACE_POINTS\">CREATE_TRACE_POINTS</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#mce\">mce</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#mce_disabled\">mce_disabled</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MISC_MCELOG_MINOR\">MISC_MCELOG_MINOR</a><span class=\"ts\"/>227", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SPINUNIT\">SPINUNIT</a> 100<span class=\"ts\"/><span class=\"comment\">/* 100ns */</span>", 
"", 
"<a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#mce_entry\">mce_entry</a>;", 
"", 
"<a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(unsigned, <a class=\"id\" href=\"#mce_exception_count\">mce_exception_count</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Tolerant levels:</span>", 
"<span class=\"comment\"> *   0: always panic on uncorrected errors, log corrected errors</span>", 
"<span class=\"comment\"> *   1: panic or SIGBUS on uncorrected errors, log corrected errors</span>", 
"<span class=\"comment\"> *   2: SIGBUS or log uncorrected errors (if possible), log corrected errors</span>", 
"<span class=\"comment\"> *   3: never panic or SIGBUS, log all errors (for testing only)</span>", 
"<span class=\"comment\"> */</span>", 
"static int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tolerant\">tolerant</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 1;", 
"static int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#banks\">banks</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rip_msr\">rip_msr</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_bootlog\">mce_bootlog</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = -1;", 
"static int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#monarch_timeout\">monarch_timeout</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = -1;", 
"static int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_panic_timeout\">mce_panic_timeout</a><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_dont_log_ce\">mce_dont_log_ce</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_cmci_disabled\">mce_cmci_disabled</a><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_ignore_ce\">mce_ignore_ce</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_ser\">mce_ser</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"struct <a class=\"id\" href=\"#mce_bank\">mce_bank</a>                *<a class=\"id\" href=\"#mce_banks\">mce_banks</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"<span class=\"comment\">/* User mode helper program triggered by machine check event */</span>", 
"static unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_need_notify\">mce_need_notify</a>;", 
"static char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_helper\">mce_helper</a>[128];", 
"static char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#mce_helper_argv\">mce_helper_argv</a>[2] = { <a class=\"id\" href=\"#mce_helper\">mce_helper</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"", 
"static <a class=\"id\" href=\"#DECLARE_WAIT_QUEUE_HEAD\">DECLARE_WAIT_QUEUE_HEAD</a>(<a class=\"id\" href=\"#mce_wait\">mce_wait</a>);", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#mce\">mce</a>, <a class=\"id\" href=\"#mces_seen\">mces_seen</a>);", 
"static int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_missing\">cpu_missing</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * CPU/chipset specific EDAC code can register a notifier call here to print</span>", 
"<span class=\"comment\"> * MCE errors in a human-readable form.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ATOMIC_NOTIFIER_HEAD\">ATOMIC_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#x86_mce_decoder_chain\">x86_mce_decoder_chain</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#x86_mce_decoder_chain\">x86_mce_decoder_chain</a>);", 
"", 
"static int <a class=\"id\" href=\"#default_decode_mce\">default_decode_mce</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>, unsigned long <a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(<a class=\"id\" href=\"#HW_ERR\">HW_ERR</a> \"No human readable MCE decoding support on this CPU type.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(<a class=\"id\" href=\"#HW_ERR\">HW_ERR</a> \"Run the message through 'mcelog --ascii' to decode.\\n\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_STOP\">NOTIFY_STOP</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#mce_dec_nb\">mce_dec_nb</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#default_decode_mce\">default_decode_mce</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#priority\">priority</a>      = -1,", 
"};", 
"", 
"<span class=\"comment\">/* MCA banks polled by the period polling timer for corrected events */</span>", 
"<a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(<a class=\"id\" href=\"#mce_banks_t\">mce_banks_t</a>, <a class=\"id\" href=\"#mce_poll_banks\">mce_poll_banks</a>) = {", 
"<span class=\"ts\"/>[0 ... <a class=\"id\" href=\"#BITS_TO_LONGS\">BITS_TO_LONGS</a>(<a class=\"id\" href=\"#MAX_NR_BANKS\">MAX_NR_BANKS</a>)-1] = ~0UL", 
"};", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a>, <a class=\"id\" href=\"#mce_work\">mce_work</a>);", 
"", 
"<span class=\"comment\">/* Do initial initialization of a struct mce */</span>", 
"void <a class=\"id\" href=\"#mce_setup\">mce_setup</a>(struct <a class=\"id\" href=\"#mce\">mce</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#m\">m</a>, 0, sizeof(struct <a class=\"id\" href=\"#mce\">mce</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#extcpu\">extcpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdtscll\">rdtscll</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#tsc\">tsc</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* We hope get_seconds stays lockless */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#time\">time</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cpuvendor\">cpuvendor</a> = <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cpuid\">cpuid</a> = <a class=\"id\" href=\"#cpuid_eax\">cpuid_eax</a>(1);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#socketid\">socketid</a> = <a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#extcpu\">extcpu</a>).<a class=\"id\" href=\"#phys_proc_id\">phys_proc_id</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicid\">apicid</a> = <a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#extcpu\">extcpu</a>).<a class=\"id\" href=\"#initial_apicid\">initial_apicid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_IA32_MCG_CAP\">MSR_IA32_MCG_CAP</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#mcgcap\">mcgcap</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#mce\">mce</a>, <a class=\"id\" href=\"#injectm\">injectm</a>);", 
"<a class=\"id\" href=\"#EXPORT_PER_CPU_SYMBOL_GPL\">EXPORT_PER_CPU_SYMBOL_GPL</a>(<a class=\"id\" href=\"#injectm\">injectm</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Lockless MCE logging infrastructure.</span>", 
"<span class=\"comment\"> * This avoids deadlocks on printk locks without having to break locks. Also</span>", 
"<span class=\"comment\"> * separate MCEs from kernel messages to avoid bogus bug reports.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#mce_log\">mce_log</a> <a class=\"id\" href=\"#mcelog\">mcelog</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#signature\">signature</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MCE_LOG_SIGNATURE\">MCE_LOG_SIGNATURE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#len\">len</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#MCE_LOG_LEN\">MCE_LOG_LEN</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recordlen\">recordlen</a><span class=\"ts\"/>= sizeof(struct <a class=\"id\" href=\"#mce\">mce</a>),", 
"};", 
"", 
"void <a class=\"id\" href=\"#mce_log\">mce_log</a>(struct <a class=\"id\" href=\"#mce\">mce</a> *<a class=\"id\" href=\"#mce\">mce</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Emit the trace record: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_mce_record\">trace_mce_record</a>(<a class=\"id\" href=\"#mce\">mce</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mce\">mce</a>-><a class=\"id\" href=\"#finished\">finished</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#rcu_dereference_check_mce\">rcu_dereference_check_mce</a>(<a class=\"id\" href=\"#mcelog\">mcelog</a>.<a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If edac_mce is enabled, it will check the error type</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and will process it, if it is a known error.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Otherwise, the error will be sent through mcelog</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * interface</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#edac_mce_parse\">edac_mce_parse</a>(<a class=\"id\" href=\"#mce\">mce</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * When the buffer fills up discard new entries.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Assume that the earlier errors are the more</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * interesting ones:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a> >= <a class=\"id\" href=\"#MCE_LOG_LEN\">MCE_LOG_LEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#MCE_OVERFLOW\">MCE_OVERFLOW</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long *)&amp;<a class=\"id\" href=\"#mcelog\">mcelog</a>.<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Old left over entry. Skip: */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mcelog\">mcelog</a>.<a class=\"id\" href=\"#entry\">entry</a>[<a class=\"id\" href=\"#entry\">entry</a>].<a class=\"id\" href=\"#finished\">finished</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_rmb\">smp_rmb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#entry\">entry</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmpxchg\">cmpxchg</a>(&amp;<a class=\"id\" href=\"#mcelog\">mcelog</a>.<a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#next\">next</a>) == <a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#mcelog\">mcelog</a>.<a class=\"id\" href=\"#entry\">entry</a> + <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#mce\">mce</a>, sizeof(struct <a class=\"id\" href=\"#mce\">mce</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mcelog\">mcelog</a>.<a class=\"id\" href=\"#entry\">entry</a>[<a class=\"id\" href=\"#entry\">entry</a>].<a class=\"id\" href=\"#finished\">finished</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mce\">mce</a>-><a class=\"id\" href=\"#finished\">finished</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(0, &amp;<a class=\"id\" href=\"#mce_need_notify\">mce_need_notify</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#print_mce\">print_mce</a>(struct <a class=\"id\" href=\"#mce\">mce</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(<a class=\"id\" href=\"#HW_ERR\">HW_ERR</a> \"CPU %d: Machine Check Exception: %Lx Bank %d: %016Lx\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#extcpu\">extcpu</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#mcgstatus\">mcgstatus</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#bank\">bank</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#status\">status</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#ip\">ip</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(<a class=\"id\" href=\"#HW_ERR\">HW_ERR</a> \"RIP%s %02x:<%016Lx> \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#mcgstatus\">mcgstatus</a> &amp; <a class=\"id\" href=\"#MCG_STATUS_EIPV\">MCG_STATUS_EIPV</a>) ? \" !INEXACT!\" : \"\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cs\">cs</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#ip\">ip</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cs\">cs</a> == <a class=\"id\" href=\"#__KERNEL_CS\">__KERNEL_CS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_symbol\">print_symbol</a>(\"{%s}\", <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(<a class=\"id\" href=\"#HW_ERR\">HW_ERR</a> \"TSC %llx \", <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#tsc\">tsc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"ADDR %llx \", <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#misc\">misc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"MISC %llx \", <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#misc\">misc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(<a class=\"id\" href=\"#HW_ERR\">HW_ERR</a> \"PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cpuvendor\">cpuvendor</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cpuid\">cpuid</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#time\">time</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#socketid\">socketid</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicid\">apicid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Print out human-readable details about the MCE error,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (if the CPU has an implementation for that)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_call_chain\">atomic_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#x86_mce_decoder_chain\">x86_mce_decoder_chain</a>, 0, <a class=\"id\" href=\"#m\">m</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PANIC_TIMEOUT\">PANIC_TIMEOUT</a> 5 <span class=\"comment\">/* 5 seconds */</span>", 
"", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#mce_paniced\">mce_paniced</a>;", 
"", 
"static int <a class=\"id\" href=\"#fake_panic\">fake_panic</a>;", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#mce_fake_paniced\">mce_fake_paniced</a>;", 
"", 
"<span class=\"comment\">/* Panic in progress. Enable interrupts and wait for final IPI */</span>", 
"static void <a class=\"id\" href=\"#wait_for_panic\">wait_for_panic</a>(void)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#PANIC_TIMEOUT\">PANIC_TIMEOUT</a>*<a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#timeout\">timeout</a>-- &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#panic_timeout\">panic_timeout</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic_timeout\">panic_timeout</a> = <a class=\"id\" href=\"#mce_panic_timeout\">mce_panic_timeout</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Panicing machine check CPU died\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mce_panic\">mce_panic</a>(char *<a class=\"id\" href=\"#msg\">msg</a>, struct <a class=\"id\" href=\"#mce\">mce</a> *<a class=\"id\" href=\"#final\">final</a>, char *<a class=\"id\" href=\"#exp\">exp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#apei_err\">apei_err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fake_panic\">fake_panic</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Make sure only one CPU runs in machine check panic</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_inc_return\">atomic_inc_return</a>(&amp;<a class=\"id\" href=\"#mce_paniced\">mce_paniced</a>) &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_for_panic\">wait_for_panic</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bust_spinlocks\">bust_spinlocks</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#console_verbose\">console_verbose</a>();", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't log too much for fake panic */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_inc_return\">atomic_inc_return</a>(&amp;<a class=\"id\" href=\"#mce_fake_paniced\">mce_fake_paniced</a>) &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* First print corrected ones that are still unlogged */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MCE_LOG_LEN\">MCE_LOG_LEN</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mce\">mce</a> *<a class=\"id\" href=\"#m\">m</a> = &amp;<a class=\"id\" href=\"#mcelog\">mcelog</a>.<a class=\"id\" href=\"#entry\">entry</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#MCI_STATUS_VAL\">MCI_STATUS_VAL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#MCI_STATUS_UC\">MCI_STATUS_UC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_mce\">print_mce</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#apei_err\">apei_err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apei_err\">apei_err</a> = <a class=\"id\" href=\"#apei_write_mce\">apei_write_mce</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Now print uncorrected but with the final one last */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MCE_LOG_LEN\">MCE_LOG_LEN</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mce\">mce</a> *<a class=\"id\" href=\"#m\">m</a> = &amp;<a class=\"id\" href=\"#mcelog\">mcelog</a>.<a class=\"id\" href=\"#entry\">entry</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#MCI_STATUS_VAL\">MCI_STATUS_VAL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#MCI_STATUS_UC\">MCI_STATUS_UC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#final\">final</a> || <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#final\">final</a>, sizeof(struct <a class=\"id\" href=\"#mce\">mce</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_mce\">print_mce</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#apei_err\">apei_err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apei_err\">apei_err</a> = <a class=\"id\" href=\"#apei_write_mce\">apei_write_mce</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#final\">final</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_mce\">print_mce</a>(<a class=\"id\" href=\"#final\">final</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#apei_err\">apei_err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apei_err\">apei_err</a> = <a class=\"id\" href=\"#apei_write_mce\">apei_write_mce</a>(<a class=\"id\" href=\"#final\">final</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_missing\">cpu_missing</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(<a class=\"id\" href=\"#HW_ERR\">HW_ERR</a> \"Some CPUs didn't answer in synchronization\\n\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#exp\">exp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(<a class=\"id\" href=\"#HW_ERR\">HW_ERR</a> \"Machine check: %s\\n\", <a class=\"id\" href=\"#exp\">exp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fake_panic\">fake_panic</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#panic_timeout\">panic_timeout</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic_timeout\">panic_timeout</a> = <a class=\"id\" href=\"#mce_panic_timeout\">mce_panic_timeout</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(<a class=\"id\" href=\"#msg\">msg</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(<a class=\"id\" href=\"#HW_ERR\">HW_ERR</a> \"Fake kernel panic: %s\\n\", <a class=\"id\" href=\"#msg\">msg</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Support code for software error injection */</span>", 
"", 
"static int <a class=\"id\" href=\"#msr_to_offset\">msr_to_offset</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#msr\">msr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#bank\">bank</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#injectm\">injectm</a>.<a class=\"id\" href=\"#bank\">bank</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#msr\">msr</a> == <a class=\"id\" href=\"#rip_msr\">rip_msr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#mce\">mce</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#msr\">msr</a> == <a class=\"id\" href=\"#MSR_IA32_MCx_STATUS\">MSR_IA32_MCx_STATUS</a>(<a class=\"id\" href=\"#bank\">bank</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#mce\">mce</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#msr\">msr</a> == <a class=\"id\" href=\"#MSR_IA32_MCx_ADDR\">MSR_IA32_MCx_ADDR</a>(<a class=\"id\" href=\"#bank\">bank</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#mce\">mce</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#msr\">msr</a> == <a class=\"id\" href=\"#MSR_IA32_MCx_MISC\">MSR_IA32_MCx_MISC</a>(<a class=\"id\" href=\"#bank\">bank</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#mce\">mce</a>, <a class=\"id\" href=\"#misc\">misc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#msr\">msr</a> == <a class=\"id\" href=\"#MSR_IA32_MCG_STATUS\">MSR_IA32_MCG_STATUS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#mce\">mce</a>, <a class=\"id\" href=\"#mcgstatus\">mcgstatus</a>);", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"<span class=\"comment\">/* MSR access wrappers used for error injection */</span>", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mce_rdmsrl\">mce_rdmsrl</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#msr\">msr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#v\">v</a>;", 
"", 
];
xr_frag_insert('l/90/15dd848fc5a134aa78c5d507cf2a2940045b53.xr', __xr_tmp);
