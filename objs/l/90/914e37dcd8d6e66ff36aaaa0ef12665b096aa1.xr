var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 2.5 block I/O model</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 Jens Axboe &lt;axboe@suse.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License version 2 as</span>", 
"<span class=\"comment\"> * published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public Licens</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_BIO_H\">__LINUX_BIO_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_BIO_H\">__LINUX_BIO_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mempool\">mempool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioprio\">ioprio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLOCK\">CONFIG_BLOCK</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* struct bio, bio_vec and BIO_* flags are defined in blk_types.h */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blk_types\">blk_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_DEBUG\">BIO_DEBUG</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#BIO_DEBUG\">BIO_DEBUG</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_BUG_ON\">BIO_BUG_ON</a><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_BUG_ON\">BIO_BUG_ON</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_MAX_PAGES\">BIO_MAX_PAGES</a><span class=\"ts\"/><span class=\"ts\"/>256", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_MAX_SIZE\">BIO_MAX_SIZE</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#BIO_MAX_PAGES\">BIO_MAX_PAGES</a> << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_MAX_SECTORS\">BIO_MAX_SECTORS</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#BIO_MAX_SIZE\">BIO_MAX_SIZE</a> >> 9)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * upper 16 bits of bi_rw define the io priority of this bio</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_PRIO_SHIFT\">BIO_PRIO_SHIFT</a><span class=\"ts\"/>(8 * sizeof(unsigned long) - <a class=\"id\" href=\"#IOPRIO_BITS\">IOPRIO_BITS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_prio\">bio_prio</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> >> <a class=\"id\" href=\"#BIO_PRIO_SHIFT\">BIO_PRIO_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_prio_valid\">bio_prio_valid</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/><a class=\"id\" href=\"#ioprio_valid\">ioprio_valid</a>(<a class=\"id\" href=\"#bio_prio\">bio_prio</a>(<a class=\"id\" href=\"#bio\">bio</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_set_prio\">bio_set_prio</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#prio\">prio</a>)<span class=\"ts\"/><span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#prio\">prio</a> >= (1 << <a class=\"id\" href=\"#IOPRIO_BITS\">IOPRIO_BITS</a>));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> &= ((1UL << <a class=\"id\" href=\"#BIO_PRIO_SHIFT\">BIO_PRIO_SHIFT</a>) - 1);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> |= ((unsigned long) (<a class=\"id\" href=\"#prio\">prio</a>) << <a class=\"id\" href=\"#BIO_PRIO_SHIFT\">BIO_PRIO_SHIFT</a>);<span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * various member access, note that bio_data should of course not be used</span>", 
"<span class=\"comment\"> * on highmem page vectors</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#idx\">idx</a>)<span class=\"ts\"/>(&amp;((<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a>[(<a class=\"id\" href=\"#idx\">idx</a>)]))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_iovec\">bio_iovec</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>((<a class=\"id\" href=\"#bio\">bio</a>), (<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_idx\">bi_idx</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_page\">bio_page</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_iovec\">bio_iovec</a>((<a class=\"id\" href=\"#bio\">bio</a>))-><a class=\"id\" href=\"#bv_page\">bv_page</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_offset\">bio_offset</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_iovec\">bio_iovec</a>((<a class=\"id\" href=\"#bio\">bio</a>))-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_segments\">bio_segments</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a> - (<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_idx\">bi_idx</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_sectors\">bio_sectors</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_size\">bi_size</a> >> 9)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_empty_barrier\">bio_empty_barrier</a>(<a class=\"id\" href=\"#bio\">bio</a>) \\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> &amp; <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a>) && \\", 
"<span class=\"ts\"/> !<a class=\"id\" href=\"#bio_has_data\">bio_has_data</a>(<a class=\"id\" href=\"#bio\">bio</a>) && \\", 
"<span class=\"ts\"/> !(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>))", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#bio_cur_bytes\">bio_cur_bytes</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bio_iovec\">bio_iovec</a>(<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/>else <span class=\"comment\">/* dataless requests such as discard */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#bio_data\">bio_data</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#bio_page\">bio_page</a>(<a class=\"id\" href=\"#bio\">bio</a>)) + <a class=\"id\" href=\"#bio_offset\">bio_offset</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#bio_has_allocated_vec\">bio_has_allocated_vec</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a> && <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a> != <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_inline_vecs\">bi_inline_vecs</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * will die</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_to_phys\">bio_to_phys</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#page_to_phys\">page_to_phys</a>(<a class=\"id\" href=\"#bio_page\">bio_page</a>((<a class=\"id\" href=\"#bio\">bio</a>))) + (unsigned long) <a class=\"id\" href=\"#bio_offset\">bio_offset</a>((<a class=\"id\" href=\"#bio\">bio</a>)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bvec_to_phys\">bvec_to_phys</a>(<a class=\"id\" href=\"#bv\">bv</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#page_to_phys\">page_to_phys</a>((<a class=\"id\" href=\"#bv\">bv</a>)-><a class=\"id\" href=\"#bv_page\">bv_page</a>) + (unsigned long) (<a class=\"id\" href=\"#bv\">bv</a>)-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * queues that have highmem support enabled may still need to revert to</span>", 
"<span class=\"comment\"> * PIO transfers occasionally and thus map high pages temporarily. For</span>", 
"<span class=\"comment\"> * permanent PIO fall back, user is probably better off disabling highmem</span>", 
"<span class=\"comment\"> * I/O completely on that queue (see ide-dma for example)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__bio_kmap_atomic\">__bio_kmap_atomic</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#kmtype\">kmtype</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>((<a class=\"id\" href=\"#bio\">bio</a>), (<a class=\"id\" href=\"#idx\">idx</a>))-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#kmtype\">kmtype</a>) +<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>((<a class=\"id\" href=\"#bio\">bio</a>), (<a class=\"id\" href=\"#idx\">idx</a>))-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__bio_kunmap_atomic\">__bio_kunmap_atomic</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#kmtype\">kmtype</a>) <a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#kmtype\">kmtype</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * merge helpers etc</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__BVEC_END\">__BVEC_END</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>((<a class=\"id\" href=\"#bio\">bio</a>), (<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a> - 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__BVEC_START\">__BVEC_START</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/><a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>((<a class=\"id\" href=\"#bio\">bio</a>), (<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_idx\">bi_idx</a>)", 
"", 
"<span class=\"comment\">/* Default implementation of BIOVEC_PHYS_MERGEABLE */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__BIOVEC_PHYS_MERGEABLE\">__BIOVEC_PHYS_MERGEABLE</a>(<a class=\"id\" href=\"#vec1\">vec1</a>, <a class=\"id\" href=\"#vec2\">vec2</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#bvec_to_phys\">bvec_to_phys</a>((<a class=\"id\" href=\"#vec1\">vec1</a>)) + (<a class=\"id\" href=\"#vec1\">vec1</a>)-><a class=\"id\" href=\"#bv_len\">bv_len</a>) == <a class=\"id\" href=\"#bvec_to_phys\">bvec_to_phys</a>((<a class=\"id\" href=\"#vec2\">vec2</a>)))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * allow arch override, for eg virtualized architectures (put in asm/io.h)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#BIOVEC_PHYS_MERGEABLE\">BIOVEC_PHYS_MERGEABLE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIOVEC_PHYS_MERGEABLE\">BIOVEC_PHYS_MERGEABLE</a>(<a class=\"id\" href=\"#vec1\">vec1</a>, <a class=\"id\" href=\"#vec2\">vec2</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__BIOVEC_PHYS_MERGEABLE\">__BIOVEC_PHYS_MERGEABLE</a>(<a class=\"id\" href=\"#vec1\">vec1</a>, <a class=\"id\" href=\"#vec2\">vec2</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__BIO_SEG_BOUNDARY\">__BIO_SEG_BOUNDARY</a>(<a class=\"id\" href=\"#addr1\">addr1</a>, <a class=\"id\" href=\"#addr2\">addr2</a>, <a class=\"id\" href=\"#mask\">mask</a>) \\", 
"<span class=\"ts\"/>(((<a class=\"id\" href=\"#addr1\">addr1</a>) | (<a class=\"id\" href=\"#mask\">mask</a>)) == (((<a class=\"id\" href=\"#addr2\">addr2</a>) - 1) | (<a class=\"id\" href=\"#mask\">mask</a>)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIOVEC_SEG_BOUNDARY\">BIOVEC_SEG_BOUNDARY</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#b1\">b1</a>, <a class=\"id\" href=\"#b2\">b2</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__BIO_SEG_BOUNDARY\">__BIO_SEG_BOUNDARY</a>(<a class=\"id\" href=\"#bvec_to_phys\">bvec_to_phys</a>((<a class=\"id\" href=\"#b1\">b1</a>)), <a class=\"id\" href=\"#bvec_to_phys\">bvec_to_phys</a>((<a class=\"id\" href=\"#b2\">b2</a>)) + (<a class=\"id\" href=\"#b2\">b2</a>)-><a class=\"id\" href=\"#bv_len\">bv_len</a>, <a class=\"id\" href=\"#queue_segment_boundary\">queue_segment_boundary</a>((<a class=\"id\" href=\"#q\">q</a>)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_SEG_BOUNDARY\">BIO_SEG_BOUNDARY</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#b1\">b1</a>, <a class=\"id\" href=\"#b2\">b2</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BIOVEC_SEG_BOUNDARY\">BIOVEC_SEG_BOUNDARY</a>((<a class=\"id\" href=\"#q\">q</a>), <a class=\"id\" href=\"#__BVEC_END\">__BVEC_END</a>((<a class=\"id\" href=\"#b1\">b1</a>)), <a class=\"id\" href=\"#__BVEC_START\">__BVEC_START</a>((<a class=\"id\" href=\"#b2\">b2</a>)))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_io_error\">bio_io_error</a>(<a class=\"id\" href=\"#bio\">bio</a>) <a class=\"id\" href=\"#bio_endio\">bio_endio</a>((<a class=\"id\" href=\"#bio\">bio</a>), -<a class=\"id\" href=\"#EIO\">EIO</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * drivers should not use the __ version unless they _really_ want to</span>", 
"<span class=\"comment\"> * run through the entire bio and not just pending pieces</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__bio_for_each_segment\">__bio_for_each_segment</a>(<a class=\"id\" href=\"#bvl\">bvl</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#start_idx\">start_idx</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#bvl\">bvl</a> = <a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>((<a class=\"id\" href=\"#bio\">bio</a>), (<a class=\"id\" href=\"#start_idx\">start_idx</a>)), <a class=\"id\" href=\"#i\">i</a> = (<a class=\"id\" href=\"#start_idx\">start_idx</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#i\">i</a> &lt; (<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#bvl\">bvl</a>++, <a class=\"id\" href=\"#i\">i</a>++)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_for_each_segment\">bio_for_each_segment</a>(<a class=\"id\" href=\"#bvl\">bvl</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__bio_for_each_segment\">__bio_for_each_segment</a>(<a class=\"id\" href=\"#bvl\">bvl</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>, (<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_idx\">bi_idx</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * get a reference to a bio, so it won't disappear. the intended use is</span>", 
"<span class=\"comment\"> * something like:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * bio_get(bio);</span>", 
"<span class=\"comment\"> * submit_bio(rw, bio);</span>", 
"<span class=\"comment\"> * if (bio-&gt;bi_flags ...)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>do_something</span>", 
"<span class=\"comment\"> * bio_put(bio);</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * without the bio_get(), it could potentially complete I/O before submit_bio</span>", 
"<span class=\"comment\"> * returns. and then bio would be freed memory when if (bio-&gt;bi_flags ...)</span>", 
"<span class=\"comment\"> * runs</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_get\">bio_get</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;(<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_cnt\">bi_cnt</a>)", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_BLK_DEV_INTEGRITY\">CONFIG_BLK_DEV_INTEGRITY</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * bio integrity payload</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bip_bio\">bip_bio</a>;<span class=\"ts\"/><span class=\"comment\">/* parent bio */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bip_sector\">bip_sector</a>;<span class=\"ts\"/><span class=\"comment\">/* virtual start sector */</span>", 
"", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bip_buf\">bip_buf</a>;<span class=\"ts\"/><span class=\"comment\">/* generated integrity data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_end_io_t\">bio_end_io_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bip_end_io\">bip_end_io</a>;<span class=\"ts\"/><span class=\"comment\">/* saved I/O completion fn */</span>", 
];
xr_frag_insert('l/90/914e37dcd8d6e66ff36aaaa0ef12665b096aa1.xr', __xr_tmp);
