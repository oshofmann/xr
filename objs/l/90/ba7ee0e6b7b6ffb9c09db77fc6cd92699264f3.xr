var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A generic kernel FIFO implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2009/2010 Stefani Seibold &lt;stefani@seibold.net&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kfifo\">kfifo</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * internal helper to calculate the unused elements in a fifo</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#kfifo_unused\">kfifo_unused</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> + 1) - (<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> - <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#__kfifo_alloc\">__kfifo_alloc</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#esize\">esize</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * round down to the next power of 2, since our 'let the indices</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * wrap' technique works only in this case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#rounddown_pow_of_two\">rounddown_pow_of_two</a>(<a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a> = <a class=\"id\" href=\"#esize\">esize</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &lt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#size\">size</a> * <a class=\"id\" href=\"#esize\">esize</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#size\">size</a> - 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_alloc\">__kfifo_alloc</a>);", 
"", 
"void <a class=\"id\" href=\"#__kfifo_free\">__kfifo_free</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_free\">__kfifo_free</a>);", 
"", 
"int <a class=\"id\" href=\"#__kfifo_init\">__kfifo_init</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, void *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#esize\">esize</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> /= <a class=\"id\" href=\"#esize\">esize</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#rounddown_pow_of_two\">rounddown_pow_of_two</a>(<a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a> = <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &lt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#size\">size</a> - 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_init\">__kfifo_init</a>);", 
"", 
"static void <a class=\"id\" href=\"#kfifo_copy_in\">kfifo_copy_in</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, const void *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, unsigned int <a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> + 1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#esize\">esize</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> &= <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#esize\">esize</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#off\">off</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#src\">src</a> + <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make sure that the data in the fifo is up to date before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * incrementing the fifo-&gt;in index counter</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_in\">__kfifo_in</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#kfifo_unused\">kfifo_unused</a>(<a class=\"id\" href=\"#fifo\">fifo</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#l\">l</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfifo_copy_in\">kfifo_copy_in</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_in\">__kfifo_in</a>);", 
"", 
"static void <a class=\"id\" href=\"#kfifo_copy_out\">kfifo_copy_out</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, void *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, unsigned int <a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> + 1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#esize\">esize</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> &= <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#esize\">esize</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#off\">off</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a> + <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make sure that the data is copied before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * incrementing the fifo-&gt;out index counter</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_out_peek\">__kfifo_out_peek</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> - <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#l\">l</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfifo_copy_out\">kfifo_copy_out</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_out_peek\">__kfifo_out_peek</a>);", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_out\">__kfifo_out</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#__kfifo_out_peek\">__kfifo_out_peek</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_out\">__kfifo_out</a>);", 
"", 
"static unsigned long <a class=\"id\" href=\"#kfifo_copy_from_user\">kfifo_copy_from_user</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/>const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#from\">from</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>, unsigned int <a class=\"id\" href=\"#off\">off</a>,", 
"<span class=\"ts\"/>unsigned int *<a class=\"id\" href=\"#copied\">copied</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> + 1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#esize\">esize</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> &= <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#esize\">esize</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#off\">off</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#ret\">ret</a> + <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#esize\">esize</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#from\">from</a> + <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#esize\">esize</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make sure that the data in the fifo is up to date before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * incrementing the fifo-&gt;in index counter</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* return the number of elements which are not copied */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__kfifo_from_user\">__kfifo_from_user</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>, unsigned int *<a class=\"id\" href=\"#copied\">copied</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#esize\">esize</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#esize\">esize</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> /= <a class=\"id\" href=\"#esize\">esize</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#kfifo_unused\">kfifo_unused</a>(<a class=\"id\" href=\"#fifo\">fifo</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#l\">l</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#kfifo_copy_from_user\">kfifo_copy_from_user</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#copied\">copied</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_from_user\">__kfifo_from_user</a>);", 
"", 
"static unsigned long <a class=\"id\" href=\"#kfifo_copy_to_user\">kfifo_copy_to_user</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, unsigned int <a class=\"id\" href=\"#off\">off</a>, unsigned int *<a class=\"id\" href=\"#copied\">copied</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> + 1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#esize\">esize</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> &= <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#esize\">esize</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#off\">off</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#ret\">ret</a> + <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#esize\">esize</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#to\">to</a> + <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#esize\">esize</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make sure that the data is copied before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * incrementing the fifo-&gt;out index counter</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* return the number of elements which are not copied */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__kfifo_to_user\">__kfifo_to_user</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>, unsigned int *<a class=\"id\" href=\"#copied\">copied</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#esize\">esize</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#esize\">esize</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> /= <a class=\"id\" href=\"#esize\">esize</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> - <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#l\">l</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#kfifo_copy_to_user\">kfifo_copy_to_user</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#copied\">copied</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_to_user\">__kfifo_to_user</a>);", 
"", 
"static int <a class=\"id\" href=\"#setup_sgl_buf\">setup_sgl_buf</a>(struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sgl\">sgl</a>, void *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nents\">nents</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#off\">off</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nents\">nents</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> >= <a class=\"id\" href=\"#l\">l</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#off\">off</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#npage\">npage</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#npage\">npage</a> = <a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_to_phys\">page_to_phys</a>(<a class=\"id\" href=\"#page\">page</a>) != <a class=\"id\" href=\"#page_to_phys\">page_to_phys</a>(<a class=\"id\" href=\"#npage\">npage</a>) - <a class=\"id\" href=\"#l\">l</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_page\">sg_set_page</a>(<a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#l\">l</a> - <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sgl\">sgl</a> = <a class=\"id\" href=\"#sg_next\">sg_next</a>(<a class=\"id\" href=\"#sgl\">sgl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#n\">n</a> == <a class=\"id\" href=\"#nents\">nents</a> || <a class=\"id\" href=\"#sgl\">sgl</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#npage\">npage</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#l\">l</a> - <a class=\"id\" href=\"#off\">off</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#off\">off</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_page\">sg_set_page</a>(<a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a> + 1;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#setup_sgl\">setup_sgl</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sgl\">sgl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nents\">nents</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>, unsigned int <a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a> + 1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#esize\">esize</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> &= <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#esize\">esize</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> *= <a class=\"id\" href=\"#esize\">esize</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#off\">off</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#setup_sgl_buf\">setup_sgl_buf</a>(<a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#nents\">nents</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> += <a class=\"id\" href=\"#setup_sgl_buf\">setup_sgl_buf</a>(<a class=\"id\" href=\"#sgl\">sgl</a> + <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#nents\">nents</a> - <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#l\">l</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_dma_in_prepare\">__kfifo_dma_in_prepare</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sgl\">sgl</a>, int <a class=\"id\" href=\"#nents\">nents</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#kfifo_unused\">kfifo_unused</a>(<a class=\"id\" href=\"#fifo\">fifo</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#l\">l</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#setup_sgl\">setup_sgl</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#nents\">nents</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_dma_in_prepare\">__kfifo_dma_in_prepare</a>);", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_dma_out_prepare\">__kfifo_dma_out_prepare</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sgl\">sgl</a>, int <a class=\"id\" href=\"#nents\">nents</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> - <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#l\">l</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#setup_sgl\">setup_sgl</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#nents\">nents</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_dma_out_prepare\">__kfifo_dma_out_prepare</a>);", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_max_r\">__kfifo_max_r</a>(unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max\">max</a> = (1 << (<a class=\"id\" href=\"#recsize\">recsize</a> << 3)) - 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#__KFIFO_PEEK\">__KFIFO_PEEK</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#mask\">mask</a>) \\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#data\">data</a>)[(<a class=\"id\" href=\"#out\">out</a>) &amp; (<a class=\"id\" href=\"#mask\">mask</a>)])", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * __kfifo_peek_n internal helper function for determinate the length of</span>", 
"<span class=\"comment\"> * the next record in the fifo</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned int <a class=\"id\" href=\"#__kfifo_peek_n\">__kfifo_peek_n</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#__KFIFO_PEEK\">__KFIFO_PEEK</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"ts\"/>if (--<a class=\"id\" href=\"#recsize\">recsize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> |= <a class=\"id\" href=\"#__KFIFO_PEEK\">__KFIFO_PEEK</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> + 1, <a class=\"id\" href=\"#mask\">mask</a>) << 8;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#l\">l</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#__KFIFO_POKE\">__KFIFO_POKE</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#val\">val</a>) \\", 
"<span class=\"ts\"/>( \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#data\">data</a>)[(<a class=\"id\" href=\"#in\">in</a>) &amp; (<a class=\"id\" href=\"#mask\">mask</a>)] = (unsigned char)(<a class=\"id\" href=\"#val\">val</a>) \\", 
"<span class=\"ts\"/>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * __kfifo_poke_n internal helper function for storeing the length of</span>", 
"<span class=\"comment\"> * the record into the fifo</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__kfifo_poke_n\">__kfifo_poke_n</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, unsigned int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__KFIFO_POKE\">__KFIFO_POKE</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#recsize\">recsize</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__KFIFO_POKE\">__KFIFO_POKE</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> + 1, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#n\">n</a> >> 8);", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_len_r\">__kfifo_len_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__kfifo_peek_n\">__kfifo_peek_n</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_len_r\">__kfifo_len_r</a>);", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_in_r\">__kfifo_in_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, const void *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#recsize\">recsize</a> &gt; <a class=\"id\" href=\"#kfifo_unused\">kfifo_unused</a>(<a class=\"id\" href=\"#fifo\">fifo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kfifo_poke_n\">__kfifo_poke_n</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfifo_copy_in\">kfifo_copy_in</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> + <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> += <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#recsize\">recsize</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_in_r\">__kfifo_in_r</a>);", 
"", 
"static unsigned int <a class=\"id\" href=\"#kfifo_out_copy_r\">kfifo_out_copy_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>, unsigned int *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#__kfifo_peek_n\">__kfifo_peek_n</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; *<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = *<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfifo_copy_out\">kfifo_copy_out</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_out_peek_r\">__kfifo_out_peek_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, void *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> == <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kfifo_out_copy_r\">kfifo_out_copy_r</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#recsize\">recsize</a>, &amp;<a class=\"id\" href=\"#n\">n</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_out_peek_r\">__kfifo_out_peek_r</a>);", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_out_r\">__kfifo_out_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, void *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> == <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#kfifo_out_copy_r\">kfifo_out_copy_r</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#recsize\">recsize</a>, &amp;<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> += <a class=\"id\" href=\"#n\">n</a> + <a class=\"id\" href=\"#recsize\">recsize</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_out_r\">__kfifo_out_r</a>);", 
"", 
"void <a class=\"id\" href=\"#__kfifo_skip_r\">__kfifo_skip_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#__kfifo_peek_n\">__kfifo_peek_n</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> += <a class=\"id\" href=\"#n\">n</a> + <a class=\"id\" href=\"#recsize\">recsize</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_skip_r\">__kfifo_skip_r</a>);", 
"", 
"int <a class=\"id\" href=\"#__kfifo_from_user_r\">__kfifo_from_user_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>, unsigned int *<a class=\"id\" href=\"#copied\">copied</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#__kfifo_max_r\">__kfifo_max_r</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#recsize\">recsize</a> &gt; <a class=\"id\" href=\"#kfifo_unused\">kfifo_unused</a>(<a class=\"id\" href=\"#fifo\">fifo</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kfifo_poke_n\">__kfifo_poke_n</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#kfifo_copy_from_user\">kfifo_copy_from_user</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> + <a class=\"id\" href=\"#recsize\">recsize</a>, <a class=\"id\" href=\"#copied\">copied</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> += <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#recsize\">recsize</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_from_user_r\">__kfifo_from_user_r</a>);", 
"", 
"int <a class=\"id\" href=\"#__kfifo_to_user_r\">__kfifo_to_user_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>, unsigned int *<a class=\"id\" href=\"#copied\">copied</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> == <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#__kfifo_peek_n\">__kfifo_peek_n</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#kfifo_copy_to_user\">kfifo_copy_to_user</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#recsize\">recsize</a>, <a class=\"id\" href=\"#copied\">copied</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> += <a class=\"id\" href=\"#n\">n</a> + <a class=\"id\" href=\"#recsize\">recsize</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_to_user_r\">__kfifo_to_user_r</a>);", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_dma_in_prepare_r\">__kfifo_dma_in_prepare_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sgl\">sgl</a>, int <a class=\"id\" href=\"#nents\">nents</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nents\">nents</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#__kfifo_max_r\">__kfifo_max_r</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#recsize\">recsize</a> &gt; <a class=\"id\" href=\"#kfifo_unused\">kfifo_unused</a>(<a class=\"id\" href=\"#fifo\">fifo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#setup_sgl\">setup_sgl</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#nents\">nents</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> + <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_dma_in_prepare_r\">__kfifo_dma_in_prepare_r</a>);", 
"", 
"void <a class=\"id\" href=\"#__kfifo_dma_in_finish_r\">__kfifo_dma_in_finish_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#__kfifo_max_r\">__kfifo_max_r</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kfifo_poke_n\">__kfifo_poke_n</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> += <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#recsize\">recsize</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_dma_in_finish_r\">__kfifo_dma_in_finish_r</a>);", 
"", 
"unsigned int <a class=\"id\" href=\"#__kfifo_dma_out_prepare_r\">__kfifo_dma_out_prepare_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sgl\">sgl</a>, int <a class=\"id\" href=\"#nents\">nents</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nents\">nents</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#__kfifo_max_r\">__kfifo_max_r</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#recsize\">recsize</a> &gt; <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#in\">in</a> - <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#setup_sgl\">setup_sgl</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#nents\">nents</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_dma_out_prepare_r\">__kfifo_dma_out_prepare_r</a>);", 
"", 
"void <a class=\"id\" href=\"#__kfifo_dma_out_finish_r\">__kfifo_dma_out_finish_r</a>(struct <a class=\"id\" href=\"#__kfifo\">__kfifo</a> *<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#recsize\">recsize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#__kfifo_peek_n\">__kfifo_peek_n</a>(<a class=\"id\" href=\"#fifo\">fifo</a>, <a class=\"id\" href=\"#recsize\">recsize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fifo\">fifo</a>-><a class=\"id\" href=\"#out\">out</a> += <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#recsize\">recsize</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__kfifo_dma_out_finish_r\">__kfifo_dma_out_finish_r</a>);", 
];
xr_frag_insert('l/90/ba7ee0e6b7b6ffb9c09db77fc6cd92699264f3.xr', __xr_tmp);
