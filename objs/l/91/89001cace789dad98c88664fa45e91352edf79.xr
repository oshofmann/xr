var __xr_tmp = [
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> &gt; 128)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_index\">__dev_get_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>, <a class=\"id\" href=\"#if_list\">if_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a> == <a class=\"id\" href=\"#plen\">plen</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(<a class=\"id\" href=\"#pfx\">pfx</a>, &amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_hold\">in6_ifa_hold</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_del_addr\">ipv6_del_addr</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the last address is deleted administratively,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   disable IPv6 on this interface.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_ifdown\">addrconf_ifdown</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#addrconf_add_ifaddr\">addrconf_add_ifaddr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_ifreq\">in6_ifreq</a> <a class=\"id\" href=\"#ireq\">ireq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ireq\">ireq</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(struct <a class=\"id\" href=\"#in6_ifreq\">in6_ifreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#inet6_addr_add\">inet6_addr_add</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ireq\">ireq</a>.<a class=\"id\" href=\"#ifr6_ifindex\">ifr6_ifindex</a>, &amp;<a class=\"id\" href=\"#ireq\">ireq</a>.<a class=\"id\" href=\"#ifr6_addr\">ifr6_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ireq\">ireq</a>.<a class=\"id\" href=\"#ifr6_prefixlen\">ifr6_prefixlen</a>, <a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#INFINITY_LIFE_TIME\">INFINITY_LIFE_TIME</a>, <a class=\"id\" href=\"#INFINITY_LIFE_TIME\">INFINITY_LIFE_TIME</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#addrconf_del_ifaddr\">addrconf_del_ifaddr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_ifreq\">in6_ifreq</a> <a class=\"id\" href=\"#ireq\">ireq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ireq\">ireq</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(struct <a class=\"id\" href=\"#in6_ifreq\">in6_ifreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#inet6_addr_del\">inet6_addr_del</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ireq\">ireq</a>.<a class=\"id\" href=\"#ifr6_ifindex\">ifr6_ifindex</a>, &amp;<a class=\"id\" href=\"#ireq\">ireq</a>.<a class=\"id\" href=\"#ifr6_addr\">ifr6_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ireq\">ireq</a>.<a class=\"id\" href=\"#ifr6_prefixlen\">ifr6_prefixlen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#add_addr\">add_addr</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#plen\">plen</a>, int <a class=\"id\" href=\"#scope\">scope</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#ipv6_add_addr\">ipv6_add_addr</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#scope\">scope</a>, <a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ifp\">ifp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_ifa_notify\">ipv6_ifa_notify</a>(<a class=\"id\" href=\"#RTM_NEWADDR\">RTM_NEWADDR</a>, <a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT\">CONFIG_IPV6_SIT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT_MODULE\">CONFIG_IPV6_SIT_MODULE</a>)", 
"static void <a class=\"id\" href=\"#sit_add_v4_addrs\">sit_add_v4_addrs</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#scope\">scope</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>, 0, sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3], <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, 4);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] = <a class=\"id\" href=\"#htonl\">htonl</a>(0xfe800000);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#IFA_LINK\">IFA_LINK</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#IPV6_ADDR_COMPATv4\">IPV6_ADDR_COMPATv4</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_addr\">add_addr</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>, 128, <a class=\"id\" href=\"#scope\">scope</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev\">for_each_netdev</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> * <a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a> && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> * <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flag\">flag</a> = <a class=\"id\" href=\"#scope\">scope</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>; <a class=\"id\" href=\"#ifa\">ifa</a>; <a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#plen\">plen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3] = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> == <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> >= <a class=\"id\" href=\"#RT_SCOPE_HOST\">RT_SCOPE_HOST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#IFA_HOST\">IFA_HOST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#plen\">plen</a> = 64;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#plen\">plen</a> = 96;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_addr\">add_addr</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#init_loopback\">init_loopback</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a>  *<a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ::1 */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ipv6_find_idev\">ipv6_find_idev</a>(<a class=\"id\" href=\"#dev\">dev</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"init loopback: add_dev failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_addr\">add_addr</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#in6addr_loopback\">in6addr_loopback</a>, 128, <a class=\"id\" href=\"#IFA_HOST\">IFA_HOST</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#addrconf_add_linklocal\">addrconf_add_linklocal</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> * <a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#addr_flags\">addr_flags</a> = <a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_OPTIMISTIC_DAD\">CONFIG_IPV6_OPTIMISTIC_DAD</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#optimistic_dad\">optimistic_dad</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#forwarding\">forwarding</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_flags\">addr_flags</a> |= <a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#ipv6_add_addr\">ipv6_add_addr</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#addr\">addr</a>, 64, <a class=\"id\" href=\"#IFA_LINK\">IFA_LINK</a>, <a class=\"id\" href=\"#addr_flags\">addr_flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ifp\">ifp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_prefix_route\">addrconf_prefix_route</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>, <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_dad_start\">addrconf_dad_start</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#addrconf_dev_config\">addrconf_dev_config</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a>    * <a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ARPHRD_ETHER\">ARPHRD_ETHER</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ARPHRD_FDDI\">ARPHRD_FDDI</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ARPHRD_IEEE802_TR\">ARPHRD_IEEE802_TR</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ARPHRD_ARCNET\">ARPHRD_ARCNET</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ARPHRD_INFINIBAND\">ARPHRD_INFINIBAND</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Alas, we support only Ethernet autoconfiguration. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#addrconf_add_dev\">addrconf_add_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#idev\">idev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>, 0, sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] = <a class=\"id\" href=\"#htonl\">htonl</a>(0xFE800000);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_generate_eui64\">ipv6_generate_eui64</a>(<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a> + 8, <a class=\"id\" href=\"#dev\">dev</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_add_linklocal\">addrconf_add_linklocal</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>);", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT\">CONFIG_IPV6_SIT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT_MODULE\">CONFIG_IPV6_SIT_MODULE</a>)", 
"static void <a class=\"id\" href=\"#addrconf_sit_config\">addrconf_sit_config</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Configure the tunnel with one of our IPv4</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * addresses... we should configure all of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * our v4 addrs in the tunnel</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ipv6_find_idev\">ipv6_find_idev</a>(<a class=\"id\" href=\"#dev\">dev</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"init sit: add_dev failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#priv_flags\">priv_flags</a> &amp; <a class=\"id\" href=\"#IFF_ISATAP\">IFF_ISATAP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_set\">ipv6_addr_set</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>,  <a class=\"id\" href=\"#htonl\">htonl</a>(0xFE800000), 0, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_prefix_route\">addrconf_prefix_route</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>, 64, <a class=\"id\" href=\"#dev\">dev</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_generate_eui64\">ipv6_generate_eui64</a>(<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a> + 8, <a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_add_linklocal\">addrconf_add_linklocal</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sit_add_v4_addrs\">sit_add_v4_addrs</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_add_mroute\">addrconf_add_mroute</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_add_lroute\">addrconf_add_lroute</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sit_route_add\">sit_route_add</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#ipv6_inherit_linklocal\">ipv6_inherit_linklocal</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#link_dev\">link_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#lladdr\">lladdr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_get_lladdr\">ipv6_get_lladdr</a>(<a class=\"id\" href=\"#link_dev\">link_dev</a>, &amp;<a class=\"id\" href=\"#lladdr\">lladdr</a>, <a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_add_linklocal\">addrconf_add_linklocal</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#lladdr\">lladdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ip6_tnl_add_linklocal\">ip6_tnl_add_linklocal</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#link_dev\">link_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* first try to inherit the link-local address from the link device */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#iflink\">iflink</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#link_dev\">link_dev</a> = <a class=\"id\" href=\"#__dev_get_by_index\">__dev_get_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#iflink\">iflink</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_inherit_linklocal\">ipv6_inherit_linklocal</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#link_dev\">link_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* then try to inherit it from any device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev\">for_each_netdev</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#link_dev\">link_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_inherit_linklocal\">ipv6_inherit_linklocal</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#link_dev\">link_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"init ip6-ip6: add_linklocal failed\\n\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Autoconfigure tunnel with a link-local address so routing protocols,</span>", 
"<span class=\"comment\"> * DHCPv6, MLD etc. can be run over the virtual link</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#addrconf_ip6_tnl_config\">addrconf_ip6_tnl_config</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#addrconf_add_dev\">addrconf_add_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#idev\">idev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"init ip6-ip6: add_dev failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_tnl_add_linklocal\">ip6_tnl_add_linklocal</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#addrconf_notify\">addrconf_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#this\">this</a>, unsigned long <a class=\"id\" href=\"#event\">event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void * <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = (struct <a class=\"id\" href=\"#net_device\">net_device</a> *) <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#run_pending\">run_pending</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_REGISTER\">NETDEV_REGISTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> >= <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ipv6_add_dev\">ipv6_add_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#notifier_from_errno\">notifier_from_errno</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_UP\">NETDEV_UP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_CHANGE\">NETDEV_CHANGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_SLAVE\">IFF_SLAVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#NETDEV_UP\">NETDEV_UP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#addrconf_qdisc_ok\">addrconf_qdisc_ok</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device is not ready yet. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ADDRCONF(NETDEV_UP): %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"link is not ready\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> >= <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ipv6_add_dev\">ipv6_add_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#if_flags\">if_flags</a> |= <a class=\"id\" href=\"#IF_READY\">IF_READY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#run_pending\">run_pending</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#addrconf_qdisc_ok\">addrconf_qdisc_ok</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device is still not ready. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#if_flags\">if_flags</a> &amp; <a class=\"id\" href=\"#IF_READY\">IF_READY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device is already configured. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#if_flags\">if_flags</a> |= <a class=\"id\" href=\"#IF_READY\">IF_READY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ADDRCONF(NETDEV_CHANGE): %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"link becomes ready\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#run_pending\">run_pending</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT\">CONFIG_IPV6_SIT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT_MODULE\">CONFIG_IPV6_SIT_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_SIT\">ARPHRD_SIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_sit_config\">addrconf_sit_config</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_TUNNEL6\">ARPHRD_TUNNEL6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_ip6_tnl_config\">addrconf_ip6_tnl_config</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_LOOPBACK\">ARPHRD_LOOPBACK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_loopback\">init_loopback</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_dev_config\">addrconf_dev_config</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#run_pending\">run_pending</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_dad_run\">addrconf_dad_run</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the MTU changed during the interface down,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * when the interface up, the changed MTU must be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * reflected in the idev as well as routers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#mtu6\">mtu6</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> >= <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt6_mtu_change\">rt6_mtu_change</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#mtu6\">mtu6</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet6_ifinfo_notify\">inet6_ifinfo_notify</a>(<a class=\"id\" href=\"#RTM_NEWLINK\">RTM_NEWLINK</a>, <a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the changed mtu during down is lower than</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * IPV6_MIN_MTU stop IPv6 on this interface.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> &lt; <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_ifdown\">addrconf_ifdown</a>(<a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_CHANGEMTU\">NETDEV_CHANGEMTU</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> >= <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt6_mtu_change\">rt6_mtu_change</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#mtu6\">mtu6</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> >= <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ipv6_add_dev\">ipv6_add_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
];
xr_frag_insert('l/91/89001cace789dad98c88664fa45e91352edf79.xr', __xr_tmp);
