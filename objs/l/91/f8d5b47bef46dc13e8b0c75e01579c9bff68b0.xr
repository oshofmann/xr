var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Input layer to RF Kill interface connector</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2007 Dmitry Torokhov</span>", 
"<span class=\"comment\"> * Copyright 2009 Johannes Berg &lt;johannes@sipsolutions.net&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License version 2 as published</span>", 
"<span class=\"comment\"> * by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If you ever run into a situation in which you have a SW_ type rfkill</span>", 
"<span class=\"comment\"> * input device, then you can revive code that was removed in the patch</span>", 
"<span class=\"comment\"> * \"rfkill-input: remove unused code\".</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#input\">input</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rfkill\">rfkill</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"rfkill.h\"", 
"", 
"enum <a class=\"id\" href=\"#rfkill_input_master_mode\">rfkill_input_master_mode</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RFKILL_INPUT_MASTER_UNLOCK\">RFKILL_INPUT_MASTER_UNLOCK</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RFKILL_INPUT_MASTER_RESTORE\">RFKILL_INPUT_MASTER_RESTORE</a> = 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RFKILL_INPUT_MASTER_UNBLOCKALL\">RFKILL_INPUT_MASTER_UNBLOCKALL</a> = 2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NUM_RFKILL_INPUT_MASTER_MODES\">NUM_RFKILL_INPUT_MASTER_MODES</a>", 
"};", 
"", 
"<span class=\"comment\">/* Delay (in ms) between consecutive switch ops */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RFKILL_OPS_DELAY\">RFKILL_OPS_DELAY</a> 200", 
"", 
"static enum <a class=\"id\" href=\"#rfkill_input_master_mode\">rfkill_input_master_mode</a> <a class=\"id\" href=\"#rfkill_master_switch_mode\">rfkill_master_switch_mode</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RFKILL_INPUT_MASTER_UNBLOCKALL\">RFKILL_INPUT_MASTER_UNBLOCKALL</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#master_switch_mode\">master_switch_mode</a>, <a class=\"id\" href=\"#rfkill_master_switch_mode\">rfkill_master_switch_mode</a>, <a class=\"id\" href=\"#uint\">uint</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#master_switch_mode\">master_switch_mode</a>,", 
"<span class=\"ts\"/>\"SW_RFKILL_ALL ON should: 0=do nothing (only unlock); 1=restore; 2=unblock all\");", 
"", 
"static <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>;", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rfkill_op_pending\">rfkill_op_pending</a>;", 
"static unsigned long <a class=\"id\" href=\"#rfkill_sw_pending\">rfkill_sw_pending</a>[<a class=\"id\" href=\"#BITS_TO_LONGS\">BITS_TO_LONGS</a>(<a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>)];", 
"static unsigned long <a class=\"id\" href=\"#rfkill_sw_state\">rfkill_sw_state</a>[<a class=\"id\" href=\"#BITS_TO_LONGS\">BITS_TO_LONGS</a>(<a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>)];", 
"", 
"enum <a class=\"id\" href=\"#rfkill_sched_op\">rfkill_sched_op</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RFKILL_GLOBAL_OP_EPO\">RFKILL_GLOBAL_OP_EPO</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RFKILL_GLOBAL_OP_RESTORE\">RFKILL_GLOBAL_OP_RESTORE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RFKILL_GLOBAL_OP_UNLOCK\">RFKILL_GLOBAL_OP_UNLOCK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RFKILL_GLOBAL_OP_UNBLOCK\">RFKILL_GLOBAL_OP_UNBLOCK</a>,", 
"};", 
"", 
"static enum <a class=\"id\" href=\"#rfkill_sched_op\">rfkill_sched_op</a> <a class=\"id\" href=\"#rfkill_master_switch_op\">rfkill_master_switch_op</a>;", 
"static enum <a class=\"id\" href=\"#rfkill_sched_op\">rfkill_sched_op</a> <a class=\"id\" href=\"#rfkill_op\">rfkill_op</a>;", 
"", 
"static void <a class=\"id\" href=\"#__rfkill_handle_global_op\">__rfkill_handle_global_op</a>(enum <a class=\"id\" href=\"#rfkill_sched_op\">rfkill_sched_op</a> <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#op\">op</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_GLOBAL_OP_EPO\">RFKILL_GLOBAL_OP_EPO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_epo\">rfkill_epo</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_GLOBAL_OP_RESTORE\">RFKILL_GLOBAL_OP_RESTORE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_restore_states\">rfkill_restore_states</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_GLOBAL_OP_UNLOCK\">RFKILL_GLOBAL_OP_UNLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_remove_epo_lock\">rfkill_remove_epo_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_GLOBAL_OP_UNBLOCK\">RFKILL_GLOBAL_OP_UNBLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_remove_epo_lock\">rfkill_remove_epo_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_switch_all\">rfkill_switch_all</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* memory corruption or bug, fail safely */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_epo\">rfkill_epo</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, \"Unknown requested operation %d! \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"rfkill Emergency Power Off activated\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__rfkill_handle_normal_op\">__rfkill_handle_normal_op</a>(const enum <a class=\"id\" href=\"#rfkill_type\">rfkill_type</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#complement\">complement</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blocked\">blocked</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocked\">blocked</a> = <a class=\"id\" href=\"#rfkill_get_global_sw_state\">rfkill_get_global_sw_state</a>(<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#complement\">complement</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocked\">blocked</a> = !<a class=\"id\" href=\"#blocked\">blocked</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_switch_all\">rfkill_switch_all</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#blocked\">blocked</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_op_handler\">rfkill_op_handler</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill_op_pending\">rfkill_op_pending</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#rfkill_sched_op\">rfkill_sched_op</a> <a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#rfkill_op\">rfkill_op</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_op_pending\">rfkill_op_pending</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#rfkill_sw_pending\">rfkill_sw_pending</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#rfkill_sw_pending\">rfkill_sw_pending</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rfkill_handle_global_op\">__rfkill_handle_global_op</a>(<a class=\"id\" href=\"#op\">op</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * handle global ops first -- during unlocked period</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we might have gotten a new global op.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill_op_pending\">rfkill_op_pending</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill_is_epo_lock_active\">rfkill_is_epo_lock_active</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__test_and_clear_bit\">__test_and_clear_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rfkill_sw_pending\">rfkill_sw_pending</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#__test_and_clear_bit\">__test_and_clear_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rfkill_sw_state\">rfkill_sw_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rfkill_handle_normal_op\">__rfkill_handle_normal_op</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#rfkill_op_pending\">rfkill_op_pending</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#DECLARE_DELAYED_WORK\">DECLARE_DELAYED_WORK</a>(<a class=\"id\" href=\"#rfkill_op_work\">rfkill_op_work</a>, <a class=\"id\" href=\"#rfkill_op_handler\">rfkill_op_handler</a>);", 
"static unsigned long <a class=\"id\" href=\"#rfkill_last_scheduled\">rfkill_last_scheduled</a>;", 
"", 
"static unsigned long <a class=\"id\" href=\"#rfkill_ratelimit\">rfkill_ratelimit</a>(const unsigned long <a class=\"id\" href=\"#last\">last</a>)", 
"{", 
"<span class=\"ts\"/>const unsigned long <a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#RFKILL_OPS_DELAY\">RFKILL_OPS_DELAY</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#last\">last</a> + <a class=\"id\" href=\"#delay\">delay</a>)) ? 0 : <a class=\"id\" href=\"#delay\">delay</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_schedule_ratelimited\">rfkill_schedule_ratelimited</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#delayed_work_pending\">delayed_work_pending</a>(&amp;<a class=\"id\" href=\"#rfkill_op_work\">rfkill_op_work</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#rfkill_op_work\">rfkill_op_work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#rfkill_ratelimit\">rfkill_ratelimit</a>(<a class=\"id\" href=\"#rfkill_last_scheduled\">rfkill_last_scheduled</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_last_scheduled\">rfkill_last_scheduled</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_schedule_global_op\">rfkill_schedule_global_op</a>(enum <a class=\"id\" href=\"#rfkill_sched_op\">rfkill_sched_op</a> <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_op\">rfkill_op</a> = <a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_op_pending\">rfkill_op_pending</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#RFKILL_GLOBAL_OP_EPO\">RFKILL_GLOBAL_OP_EPO</a> && !<a class=\"id\" href=\"#rfkill_is_epo_lock_active\">rfkill_is_epo_lock_active</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bypass the limiter for EPO */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work\">cancel_delayed_work</a>(&amp;<a class=\"id\" href=\"#rfkill_op_work\">rfkill_op_work</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#rfkill_op_work\">rfkill_op_work</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_last_scheduled\">rfkill_last_scheduled</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_ratelimited\">rfkill_schedule_ratelimited</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_schedule_toggle\">rfkill_schedule_toggle</a>(enum <a class=\"id\" href=\"#rfkill_type\">rfkill_type</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill_is_epo_lock_active\">rfkill_is_epo_lock_active</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill_op_pending\">rfkill_op_pending</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#rfkill_sw_pending\">rfkill_sw_pending</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__change_bit\">__change_bit</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#rfkill_sw_state\">rfkill_sw_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_ratelimited\">rfkill_schedule_ratelimited</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_schedule_evsw_rfkillall\">rfkill_schedule_evsw_rfkillall</a>(int <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_global_op\">rfkill_schedule_global_op</a>(<a class=\"id\" href=\"#rfkill_master_switch_op\">rfkill_master_switch_op</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_global_op\">rfkill_schedule_global_op</a>(<a class=\"id\" href=\"#RFKILL_GLOBAL_OP_EPO\">RFKILL_GLOBAL_OP_EPO</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_event\">rfkill_event</a>(struct <a class=\"id\" href=\"#input_handle\">input_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>, unsigned int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#code\">code</a>, int <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#EV_KEY\">EV_KEY</a> && <a class=\"id\" href=\"#data\">data</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#code\">code</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_WLAN\">KEY_WLAN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_toggle\">rfkill_schedule_toggle</a>(<a class=\"id\" href=\"#RFKILL_TYPE_WLAN\">RFKILL_TYPE_WLAN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_BLUETOOTH\">KEY_BLUETOOTH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_toggle\">rfkill_schedule_toggle</a>(<a class=\"id\" href=\"#RFKILL_TYPE_BLUETOOTH\">RFKILL_TYPE_BLUETOOTH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_UWB\">KEY_UWB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_toggle\">rfkill_schedule_toggle</a>(<a class=\"id\" href=\"#RFKILL_TYPE_UWB\">RFKILL_TYPE_UWB</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_WIMAX\">KEY_WIMAX</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_toggle\">rfkill_schedule_toggle</a>(<a class=\"id\" href=\"#RFKILL_TYPE_WIMAX\">RFKILL_TYPE_WIMAX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_RFKILL\">KEY_RFKILL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_toggle\">rfkill_schedule_toggle</a>(<a class=\"id\" href=\"#RFKILL_TYPE_ALL\">RFKILL_TYPE_ALL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#EV_SW\">EV_SW</a> && <a class=\"id\" href=\"#code\">code</a> == <a class=\"id\" href=\"#SW_RFKILL_ALL\">SW_RFKILL_ALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_evsw_rfkillall\">rfkill_schedule_evsw_rfkillall</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rfkill_connect\">rfkill_connect</a>(struct <a class=\"id\" href=\"#input_handler\">input_handler</a> *<a class=\"id\" href=\"#handler\">handler</a>, struct <a class=\"id\" href=\"#input_dev\">input_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#input_device_id\">input_device_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#input_handle\">input_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#input_handle\">input_handle</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#handler\">handler</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#name\">name</a> = \"rfkill\";", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* causes rfkill_start() to be called */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#input_register_handle\">input_register_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free_handle\">err_free_handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#input_open_device\">input_open_device</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_unregister_handle\">err_unregister_handle</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#err_unregister_handle\">err_unregister_handle</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_unregister_handle\">input_unregister_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
" <a class=\"id\" href=\"#err_free_handle\">err_free_handle</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_start\">rfkill_start</a>(struct <a class=\"id\" href=\"#input_handle\">input_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Take event_lock to guard against configuration changes, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * should be able to deal with concurrency with rfkill_event()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * just fine (which event_lock will also avoid).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#event_lock\">event_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EV_SW\">EV_SW</a>, <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#evbit\">evbit</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#SW_RFKILL_ALL\">SW_RFKILL_ALL</a>, <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#swbit\">swbit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_schedule_evsw_rfkillall\">rfkill_schedule_evsw_rfkillall</a>(<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#SW_RFKILL_ALL\">SW_RFKILL_ALL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sw\">sw</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#event_lock\">event_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_disconnect\">rfkill_disconnect</a>(struct <a class=\"id\" href=\"#input_handle\">input_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_close_device\">input_close_device</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_unregister_handle\">input_unregister_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#input_device_id\">input_device_id</a> <a class=\"id\" href=\"#rfkill_ids\">rfkill_ids</a>[] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_EVBIT\">INPUT_DEVICE_ID_MATCH_EVBIT</a> | <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_KEYBIT\">INPUT_DEVICE_ID_MATCH_KEYBIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#evbit\">evbit</a> = { <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#EV_KEY\">EV_KEY</a>) },", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#keybit\">keybit</a> = { [<a class=\"id\" href=\"#BIT_WORD\">BIT_WORD</a>(<a class=\"id\" href=\"#KEY_WLAN\">KEY_WLAN</a>)] = <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#KEY_WLAN\">KEY_WLAN</a>) },", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_EVBIT\">INPUT_DEVICE_ID_MATCH_EVBIT</a> | <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_KEYBIT\">INPUT_DEVICE_ID_MATCH_KEYBIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#evbit\">evbit</a> = { <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#EV_KEY\">EV_KEY</a>) },", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#keybit\">keybit</a> = { [<a class=\"id\" href=\"#BIT_WORD\">BIT_WORD</a>(<a class=\"id\" href=\"#KEY_BLUETOOTH\">KEY_BLUETOOTH</a>)] = <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#KEY_BLUETOOTH\">KEY_BLUETOOTH</a>) },", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_EVBIT\">INPUT_DEVICE_ID_MATCH_EVBIT</a> | <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_KEYBIT\">INPUT_DEVICE_ID_MATCH_KEYBIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#evbit\">evbit</a> = { <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#EV_KEY\">EV_KEY</a>) },", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#keybit\">keybit</a> = { [<a class=\"id\" href=\"#BIT_WORD\">BIT_WORD</a>(<a class=\"id\" href=\"#KEY_UWB\">KEY_UWB</a>)] = <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#KEY_UWB\">KEY_UWB</a>) },", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_EVBIT\">INPUT_DEVICE_ID_MATCH_EVBIT</a> | <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_KEYBIT\">INPUT_DEVICE_ID_MATCH_KEYBIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#evbit\">evbit</a> = { <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#EV_KEY\">EV_KEY</a>) },", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#keybit\">keybit</a> = { [<a class=\"id\" href=\"#BIT_WORD\">BIT_WORD</a>(<a class=\"id\" href=\"#KEY_WIMAX\">KEY_WIMAX</a>)] = <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#KEY_WIMAX\">KEY_WIMAX</a>) },", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_EVBIT\">INPUT_DEVICE_ID_MATCH_EVBIT</a> | <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_KEYBIT\">INPUT_DEVICE_ID_MATCH_KEYBIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#evbit\">evbit</a> = { <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#EV_KEY\">EV_KEY</a>) },", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#keybit\">keybit</a> = { [<a class=\"id\" href=\"#BIT_WORD\">BIT_WORD</a>(<a class=\"id\" href=\"#KEY_RFKILL\">KEY_RFKILL</a>)] = <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#KEY_RFKILL\">KEY_RFKILL</a>) },", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_EVBIT\">INPUT_DEVICE_ID_MATCH_EVBIT</a> | <a class=\"id\" href=\"#INPUT_DEVICE_ID_MATCH_SWBIT\">INPUT_DEVICE_ID_MATCH_SWBIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#evbit\">evbit</a> = { <a class=\"id\" href=\"#BIT\">BIT</a>(<a class=\"id\" href=\"#EV_SW\">EV_SW</a>) },", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#swbit\">swbit</a> = { [<a class=\"id\" href=\"#BIT_WORD\">BIT_WORD</a>(<a class=\"id\" href=\"#SW_RFKILL_ALL\">SW_RFKILL_ALL</a>)] = <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#SW_RFKILL_ALL\">SW_RFKILL_ALL</a>) },", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ }", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#input_handler\">input_handler</a> <a class=\"id\" href=\"#rfkill_handler\">rfkill_handler</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/>\"rfkill\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#rfkill_event\">rfkill_event</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a> = <a class=\"id\" href=\"#rfkill_connect\">rfkill_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#rfkill_start\">rfkill_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#disconnect\">disconnect</a> = <a class=\"id\" href=\"#rfkill_disconnect\">rfkill_disconnect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a> = <a class=\"id\" href=\"#rfkill_ids\">rfkill_ids</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#rfkill_handler_init\">rfkill_handler_init</a>(void)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#rfkill_master_switch_mode\">rfkill_master_switch_mode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_INPUT_MASTER_UNBLOCKALL\">RFKILL_INPUT_MASTER_UNBLOCKALL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_master_switch_op\">rfkill_master_switch_op</a> = <a class=\"id\" href=\"#RFKILL_GLOBAL_OP_UNBLOCK\">RFKILL_GLOBAL_OP_UNBLOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_INPUT_MASTER_RESTORE\">RFKILL_INPUT_MASTER_RESTORE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_master_switch_op\">rfkill_master_switch_op</a> = <a class=\"id\" href=\"#RFKILL_GLOBAL_OP_RESTORE\">RFKILL_GLOBAL_OP_RESTORE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_INPUT_MASTER_UNLOCK\">RFKILL_INPUT_MASTER_UNLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_master_switch_op\">rfkill_master_switch_op</a> = <a class=\"id\" href=\"#RFKILL_GLOBAL_OP_UNLOCK\">RFKILL_GLOBAL_OP_UNLOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#rfkill_op_lock\">rfkill_op_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Avoid delay at first schedule */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_last_scheduled\">rfkill_last_scheduled</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#RFKILL_OPS_DELAY\">RFKILL_OPS_DELAY</a>) - 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#input_register_handler\">input_register_handler</a>(&amp;<a class=\"id\" href=\"#rfkill_handler\">rfkill_handler</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#rfkill_handler_exit\">rfkill_handler_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_unregister_handler\">input_unregister_handler</a>(&amp;<a class=\"id\" href=\"#rfkill_handler\">rfkill_handler</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#rfkill_op_work\">rfkill_op_work</a>);", 
"}", 
];
xr_frag_insert('l/91/f8d5b47bef46dc13e8b0c75e01579c9bff68b0.xr', __xr_tmp);
