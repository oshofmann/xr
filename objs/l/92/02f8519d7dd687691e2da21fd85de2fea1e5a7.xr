var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is the state information which is persistent across opens.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#uart_state\">uart_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_state\">pm_state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#circ_buf\">circ_buf</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xmit\">xmit</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#tlet\">tlet</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a><span class=\"ts\"/>*<a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_XMIT_SIZE\">UART_XMIT_SIZE</a><span class=\"ts\"/><a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>", 
"", 
"", 
"<span class=\"comment\">/* number of characters left in xmit buffer before we ask for more */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#WAKEUP_CHARS\">WAKEUP_CHARS</a><span class=\"ts\"/><span class=\"ts\"/>256", 
"", 
"struct <a class=\"id\" href=\"#module\">module</a>;", 
"struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a>;", 
"", 
"struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#driver_name\">driver_name</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dev_name\">dev_name</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#major\">major</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#minor\">minor</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#console\">console</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#cons\">cons</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * these are private; the low level driver should not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * touch these; they should be initialised to NULL</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a><span class=\"ts\"/>*<a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a><span class=\"ts\"/>*<a class=\"id\" href=\"#tty_driver\">tty_driver</a>;", 
"};", 
"", 
"void <a class=\"id\" href=\"#uart_write_wakeup\">uart_write_wakeup</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Baud rate helpers.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#uart_update_timeout\">uart_update_timeout</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, unsigned int <a class=\"id\" href=\"#cflag\">cflag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#baud\">baud</a>);", 
"unsigned int <a class=\"id\" href=\"#uart_get_baud_rate\">uart_get_baud_rate</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#termios\">termios</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#old\">old</a>, unsigned int <a class=\"id\" href=\"#min\">min</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max\">max</a>);", 
"unsigned int <a class=\"id\" href=\"#uart_get_divisor\">uart_get_divisor</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, unsigned int <a class=\"id\" href=\"#baud\">baud</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Console helpers.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uart_get_console\">uart_get_console</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#ports\">ports</a>, int <a class=\"id\" href=\"#nr\">nr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#console\">console</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"void <a class=\"id\" href=\"#uart_parse_options\">uart_parse_options</a>(char *<a class=\"id\" href=\"#options\">options</a>, int *<a class=\"id\" href=\"#baud\">baud</a>, int *<a class=\"id\" href=\"#parity\">parity</a>, int *<a class=\"id\" href=\"#bits\">bits</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int *<a class=\"id\" href=\"#flow\">flow</a>);", 
"int <a class=\"id\" href=\"#uart_set_options\">uart_set_options</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#console\">console</a> *<a class=\"id\" href=\"#co\">co</a>, int <a class=\"id\" href=\"#baud\">baud</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#parity\">parity</a>, int <a class=\"id\" href=\"#bits\">bits</a>, int <a class=\"id\" href=\"#flow\">flow</a>);", 
"struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#uart_console_device\">uart_console_device</a>(struct <a class=\"id\" href=\"#console\">console</a> *<a class=\"id\" href=\"#co\">co</a>, int *<a class=\"id\" href=\"#index\">index</a>);", 
"void <a class=\"id\" href=\"#uart_console_write\">uart_console_write</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, const char *<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void (*<a class=\"id\" href=\"#putchar\">putchar</a>)(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *, int));", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Port/driver registration/removal</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#uart_register_driver\">uart_register_driver</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#uart\">uart</a>);", 
"void <a class=\"id\" href=\"#uart_unregister_driver\">uart_unregister_driver</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#uart\">uart</a>);", 
"int <a class=\"id\" href=\"#uart_add_one_port\">uart_add_one_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#reg\">reg</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>);", 
"int <a class=\"id\" href=\"#uart_remove_one_port\">uart_remove_one_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#reg\">reg</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>);", 
"int <a class=\"id\" href=\"#uart_match_port\">uart_match_port</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port1\">port1</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port2\">port2</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Power Management</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#uart_suspend_port\">uart_suspend_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#reg\">reg</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>);", 
"int <a class=\"id\" href=\"#uart_resume_port\">uart_resume_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#reg\">reg</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#uart_circ_empty\">uart_circ_empty</a>(<a class=\"id\" href=\"#circ\">circ</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#circ\">circ</a>)-><a class=\"id\" href=\"#head\">head</a> == (<a class=\"id\" href=\"#circ\">circ</a>)-><a class=\"id\" href=\"#tail\">tail</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#uart_circ_clear\">uart_circ_clear</a>(<a class=\"id\" href=\"#circ\">circ</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#circ\">circ</a>)-><a class=\"id\" href=\"#head\">head</a> = (<a class=\"id\" href=\"#circ\">circ</a>)-><a class=\"id\" href=\"#tail\">tail</a> = 0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#uart_circ_chars_pending\">uart_circ_chars_pending</a>(<a class=\"id\" href=\"#circ\">circ</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#CIRC_CNT\">CIRC_CNT</a>((<a class=\"id\" href=\"#circ\">circ</a>)-><a class=\"id\" href=\"#head\">head</a>, (<a class=\"id\" href=\"#circ\">circ</a>)-><a class=\"id\" href=\"#tail\">tail</a>, <a class=\"id\" href=\"#UART_XMIT_SIZE\">UART_XMIT_SIZE</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#uart_circ_chars_free\">uart_circ_chars_free</a>(<a class=\"id\" href=\"#circ\">circ</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#CIRC_SPACE\">CIRC_SPACE</a>((<a class=\"id\" href=\"#circ\">circ</a>)-><a class=\"id\" href=\"#head\">head</a>, (<a class=\"id\" href=\"#circ\">circ</a>)-><a class=\"id\" href=\"#tail\">tail</a>, <a class=\"id\" href=\"#UART_XMIT_SIZE\">UART_XMIT_SIZE</a>))", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#uart_tx_stopped\">uart_tx_stopped</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/>if(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#stopped\">stopped</a> || <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hw_stopped\">hw_stopped</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The following are helper functions for the low level drivers.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#uart_handle_sysrq_char\">uart_handle_sysrq_char</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, unsigned int <a class=\"id\" href=\"#ch\">ch</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#SUPPORT_SYSRQ\">SUPPORT_SYSRQ</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#sysrq\">sysrq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ch\">ch</a> && <a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#sysrq\">sysrq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle_sysrq\">handle_sysrq</a>(<a class=\"id\" href=\"#ch\">ch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#sysrq\">sysrq</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#sysrq\">sysrq</a> = 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#SUPPORT_SYSRQ\">SUPPORT_SYSRQ</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#uart_handle_sysrq_char\">uart_handle_sysrq_char</a>(<a class=\"id\" href=\"#port\">port</a>,<a class=\"id\" href=\"#ch\">ch</a>) <a class=\"id\" href=\"#uart_handle_sysrq_char\">uart_handle_sysrq_char</a>(<a class=\"id\" href=\"#port\">port</a>, 0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We do the SysRQ and SAK checking like this...</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#uart_handle_break\">uart_handle_break</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#state\">state</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#SUPPORT_SYSRQ\">SUPPORT_SYSRQ</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#cons\">cons</a> && <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#index\">index</a> == <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#line\">line</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#sysrq\">sysrq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#sysrq\">sysrq</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#HZ\">HZ</a>*5;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#sysrq\">sysrq</a> = 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_SAK\">UPF_SAK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_SAK\">do_SAK</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_handle_dcd_change - handle a change of carrier detect state</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@uport: uart_port structure for the open port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@status: new carrier detect status, nonzero if active</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#uart_handle_dcd_change\">uart_handle_dcd_change</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a>, unsigned int <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref\">tty_ldisc_ref</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#ts\">ts</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a> && <a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dcd_change\">dcd_change</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#getnstimeofday\">getnstimeofday</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#dcd\">dcd</a>++;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HARD_PPS\">CONFIG_HARD_PPS</a>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_HARDPPS_CD\">UPF_HARDPPS_CD</a>) && <a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hardpps\">hardpps</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_CHECK_CD\">ASYNC_CHECK_CD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#open_wait\">open_wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_hangup\">tty_hangup</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a> && <a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dcd_change\">dcd_change</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dcd_change\">dcd_change</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#status\">status</a>, &amp;<a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_handle_cts_change - handle a change of clear-to-send state</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@uport: uart_port structure for the open port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@status: new clear to send status, nonzero if active</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#uart_handle_cts_change\">uart_handle_cts_change</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a>, unsigned int <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#cts\">cts</a>++;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_CTS_FLOW\">ASYNC_CTS_FLOW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hw_stopped\">hw_stopped</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hw_stopped\">hw_stopped</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#start_tx\">start_tx</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_write_wakeup\">uart_write_wakeup</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#status\">status</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hw_stopped\">hw_stopped</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#stop_tx\">stop_tx</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty_flip\">tty_flip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#uart_insert_char\">uart_insert_char</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, unsigned int <a class=\"id\" href=\"#status\">status</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#overrun\">overrun</a>, unsigned int <a class=\"id\" href=\"#ch\">ch</a>, unsigned int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ignore_status_mask\">ignore_status_mask</a> &amp; ~<a class=\"id\" href=\"#overrun\">overrun</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_insert_flip_char\">tty_insert_flip_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ch\">ch</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Overrun is special.  Since it's reported immediately,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it doesn't affect the current character.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; ~<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ignore_status_mask\">ignore_status_mask</a> &amp; <a class=\"id\" href=\"#overrun\">overrun</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_insert_flip_char\">tty_insert_flip_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, 0, <a class=\"id\" href=\"#TTY_OVERRUN\">TTY_OVERRUN</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>UART_ENABLE_MS - determine if port should enable modem status irqs</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_ENABLE_MS\">UART_ENABLE_MS</a>(<a class=\"id\" href=\"#port\">port</a>,<a class=\"id\" href=\"#cflag\">cflag</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#port\">port</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_HARDPPS_CD\">UPF_HARDPPS_CD</a> || \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#cflag\">cflag</a>) &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a> || \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> !((<a class=\"id\" href=\"#cflag\">cflag</a>) &amp; <a class=\"id\" href=\"#CLOCAL\">CLOCAL</a>))", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* LINUX_SERIAL_CORE_H */</span>", 
];
xr_frag_insert('l/92/02f8519d7dd687691e2da21fd85de2fea1e5a7.xr', __xr_tmp);
