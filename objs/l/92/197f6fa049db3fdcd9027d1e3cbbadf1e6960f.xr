var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Driver model for leds and led triggers</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005 John Lenz &lt;lenz@cs.wisc.edu&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2005 Richard Purdie &lt;rpurdie@openedhand.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License version 2 as</span>", 
"<span class=\"comment\"> * published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_LEDS_H_INCLUDED\">__LINUX_LEDS_H_INCLUDED</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_LEDS_H_INCLUDED\">__LINUX_LEDS_H_INCLUDED</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rwsem\">rwsem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * LED Core</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"enum <a class=\"id\" href=\"#led_brightness\">led_brightness</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LED_OFF\">LED_OFF</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LED_HALF\">LED_HALF</a><span class=\"ts\"/>= 127,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LED_FULL\">LED_FULL</a><span class=\"ts\"/>= 255,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#brightness\">brightness</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#max_brightness\">max_brightness</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Lower 16 bits reflect status */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LED_SUSPENDED\">LED_SUSPENDED</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 0)", 
"<span class=\"ts\"/><span class=\"comment\">/* Upper 16 bits reflect control information */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LED_CORE_SUSPENDRESUME\">LED_CORE_SUSPENDRESUME</a><span class=\"ts\"/>(1 << 16)", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set LED brightness level */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Must not sleep, use a workqueue if needed */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#brightness_set\">brightness_set</a>)(struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led_cdev\">led_cdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  enum <a class=\"id\" href=\"#led_brightness\">led_brightness</a> <a class=\"id\" href=\"#brightness\">brightness</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Get LED brightness level */</span>", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#led_brightness\">led_brightness</a> (*<a class=\"id\" href=\"#brightness_get\">brightness_get</a>)(struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led_cdev\">led_cdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Activate hardware accelerated blink, delays are in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * miliseconds and if none is provided then a sensible default</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * should be chosen. The call can adjust the timings if it can't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * match the values specified exactly. */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#blink_set\">blink_set</a>)(struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led_cdev\">led_cdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long *<a class=\"id\" href=\"#delay_on\">delay_on</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long *<a class=\"id\" href=\"#delay_off\">delay_off</a>);", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/> <a class=\"id\" href=\"#node\">node</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* LED Device list */</span>", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#default_trigger\">default_trigger</a>;<span class=\"ts\"/><span class=\"comment\">/* Trigger to use */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LEDS_TRIGGERS\">CONFIG_LEDS_TRIGGERS</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Protects the trigger data below */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a><span class=\"ts\"/> <a class=\"id\" href=\"#trigger_lock\">trigger_lock</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a><span class=\"ts\"/>*<a class=\"id\" href=\"#trigger\">trigger</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/> <a class=\"id\" href=\"#trig_list\">trig_list</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#trigger_data\">trigger_data</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#led_classdev_register\">led_classdev_register</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led_cdev\">led_cdev</a>);", 
"extern void <a class=\"id\" href=\"#led_classdev_unregister\">led_classdev_unregister</a>(struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led_cdev\">led_cdev</a>);", 
"extern void <a class=\"id\" href=\"#led_classdev_suspend\">led_classdev_suspend</a>(struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led_cdev\">led_cdev</a>);", 
"extern void <a class=\"id\" href=\"#led_classdev_resume\">led_classdev_resume</a>(struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led_cdev\">led_cdev</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * LED Triggers</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LEDS_TRIGGERS\">CONFIG_LEDS_TRIGGERS</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRIG_NAME_MAX\">TRIG_NAME_MAX</a> 50", 
"", 
"struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* Trigger Properties */</span>", 
"<span class=\"ts\"/>const char<span class=\"ts\"/> *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#activate\">activate</a>)(struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led_cdev\">led_cdev</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#deactivate\">deactivate</a>)(struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led_cdev\">led_cdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* LEDs under control by this trigger (for simple triggers) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_t\">rwlock_t</a><span class=\"ts\"/>  <a class=\"id\" href=\"#leddev_list_lock\">leddev_list_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a>  <a class=\"id\" href=\"#led_cdevs\">led_cdevs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Link to next registered trigger */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a>  <a class=\"id\" href=\"#next_trig\">next_trig</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Registration functions for complex triggers */</span>", 
"extern int <a class=\"id\" href=\"#led_trigger_register\">led_trigger_register</a>(struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a> *<a class=\"id\" href=\"#trigger\">trigger</a>);", 
"extern void <a class=\"id\" href=\"#led_trigger_unregister\">led_trigger_unregister</a>(struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a> *<a class=\"id\" href=\"#trigger\">trigger</a>);", 
"", 
"<span class=\"comment\">/* Registration functions for simple triggers */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_LED_TRIGGER\">DEFINE_LED_TRIGGER</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><span class=\"ts\"/>static struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a> *<a class=\"id\" href=\"#x\">x</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_LED_TRIGGER_GLOBAL\">DEFINE_LED_TRIGGER_GLOBAL</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/>struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a> *<a class=\"id\" href=\"#x\">x</a>;", 
"extern void <a class=\"id\" href=\"#led_trigger_register_simple\">led_trigger_register_simple</a>(const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a> **<a class=\"id\" href=\"#trigger\">trigger</a>);", 
"extern void <a class=\"id\" href=\"#led_trigger_unregister_simple\">led_trigger_unregister_simple</a>(struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a> *<a class=\"id\" href=\"#trigger\">trigger</a>);", 
"extern void <a class=\"id\" href=\"#led_trigger_event\">led_trigger_event</a>(struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a> *<a class=\"id\" href=\"#trigger\">trigger</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#led_brightness\">led_brightness</a> <a class=\"id\" href=\"#event\">event</a>);", 
"", 
"#else", 
"", 
"<span class=\"comment\">/* Triggers aren't active - null macros */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_LED_TRIGGER\">DEFINE_LED_TRIGGER</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_LED_TRIGGER_GLOBAL\">DEFINE_LED_TRIGGER_GLOBAL</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#led_trigger_register_simple\">led_trigger_register_simple</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#y\">y</a>) do {} while(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#led_trigger_unregister_simple\">led_trigger_unregister_simple</a>(<a class=\"id\" href=\"#x\">x</a>) do {} while(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#led_trigger_event\">led_trigger_event</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#y\">y</a>) do {} while(0)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Trigger specific functions */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LEDS_TRIGGER_IDE_DISK\">CONFIG_LEDS_TRIGGER_IDE_DISK</a>", 
"extern void <a class=\"id\" href=\"#ledtrig_ide_activity\">ledtrig_ide_activity</a>(void);", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ledtrig_ide_activity\">ledtrig_ide_activity</a>() do {} while(0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic LED platform data for describing LED names and default triggers.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#led_info\">led_info</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>*<a class=\"id\" href=\"#default_trigger\">default_trigger</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#led_platform_data\">led_platform_data</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_leds\">num_leds</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#led_info\">led_info</a><span class=\"ts\"/>*<a class=\"id\" href=\"#leds\">leds</a>;", 
"};", 
"", 
"<span class=\"comment\">/* For the leds-gpio driver */</span>", 
"struct <a class=\"id\" href=\"#gpio_led\">gpio_led</a> {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#default_trigger\">default_trigger</a>;", 
"<span class=\"ts\"/>unsigned <span class=\"ts\"/><a class=\"id\" href=\"#gpio\">gpio</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#active_low\">active_low</a> : 1;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#retain_state_suspended\">retain_state_suspended</a> : 1;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#default_state\">default_state</a> : 2;", 
"<span class=\"ts\"/><span class=\"comment\">/* default_state should be one of LEDS_GPIO_DEFSTATE_(ON|OFF|KEEP) */</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LEDS_GPIO_DEFSTATE_OFF\">LEDS_GPIO_DEFSTATE_OFF</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LEDS_GPIO_DEFSTATE_ON\">LEDS_GPIO_DEFSTATE_ON</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LEDS_GPIO_DEFSTATE_KEEP\">LEDS_GPIO_DEFSTATE_KEEP</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"struct <a class=\"id\" href=\"#gpio_led_platform_data\">gpio_led_platform_data</a> {", 
"<span class=\"ts\"/>int <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_leds\">num_leds</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_led\">gpio_led</a> *<a class=\"id\" href=\"#leds\">leds</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GPIO_LED_NO_BLINK_LOW\">GPIO_LED_NO_BLINK_LOW</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* No blink GPIO state low */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GPIO_LED_NO_BLINK_HIGH\">GPIO_LED_NO_BLINK_HIGH</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* No blink GPIO state high */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GPIO_LED_BLINK\">GPIO_LED_BLINK</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* Plase, blink */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#gpio_blink_set\">gpio_blink_set</a>)(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>, int <a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#delay_on\">delay_on</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#delay_off\">delay_off</a>);", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* __LINUX_LEDS_H_INCLUDED */</span>", 
];
xr_frag_insert('l/92/197f6fa049db3fdcd9027d1e3cbbadf1e6960f.xr', __xr_tmp);
