var __xr_tmp = [
"<span class=\"comment\">/* bounce buffer handling for block devices</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - Split from highmem.c</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mempool\">mempool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#block\">block</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POOL_SIZE\">POOL_SIZE</a><span class=\"ts\"/>64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ISA_POOL_SIZE\">ISA_POOL_SIZE</a><span class=\"ts\"/>16", 
"", 
"static <a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#page_pool\">page_pool</a>, *<a class=\"id\" href=\"#isa_page_pool\">isa_page_pool</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGHMEM\">CONFIG_HIGHMEM</a>", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#init_emergency_pool\">init_emergency_pool</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysinfo\">sysinfo</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#si_meminfo\">si_meminfo</a>(&amp;<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#si_swapinfo\">si_swapinfo</a>(&amp;<a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#totalhigh\">totalhigh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_pool\">page_pool</a> = <a class=\"id\" href=\"#mempool_create_page_pool\">mempool_create_page_pool</a>(<a class=\"id\" href=\"#POOL_SIZE\">POOL_SIZE</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#page_pool\">page_pool</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"highmem bounce pool size: %d pages\\n\", <a class=\"id\" href=\"#POOL_SIZE\">POOL_SIZE</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#__initcall\">__initcall</a>(<a class=\"id\" href=\"#init_emergency_pool\">init_emergency_pool</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * highmem version, map in to vec</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#bounce_copy_vec\">bounce_copy_vec</a>(struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#to\">to</a>, unsigned char *<a class=\"id\" href=\"#vfrom\">vfrom</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#vto\">vto</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vto\">vto</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#KM_BOUNCE_READ\">KM_BOUNCE_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#vto\">vto</a> + <a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>, <a class=\"id\" href=\"#vfrom\">vfrom</a>, <a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#vto\">vto</a>, <a class=\"id\" href=\"#KM_BOUNCE_READ\">KM_BOUNCE_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_HIGHMEM */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bounce_copy_vec\">bounce_copy_vec</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#vfrom\">vfrom</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#page_address\">page_address</a>((<a class=\"id\" href=\"#to\">to</a>)-><a class=\"id\" href=\"#bv_page\">bv_page</a>) + (<a class=\"id\" href=\"#to\">to</a>)-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>, <a class=\"id\" href=\"#vfrom\">vfrom</a>, (<a class=\"id\" href=\"#to\">to</a>)-><a class=\"id\" href=\"#bv_len\">bv_len</a>)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HIGHMEM */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * allocate pages in the DMA region for the ISA pool</span>", 
"<span class=\"comment\"> */</span>", 
"static void *<a class=\"id\" href=\"#mempool_alloc_pages_isa\">mempool_alloc_pages_isa</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mempool_alloc_pages\">mempool_alloc_pages</a>(<a class=\"id\" href=\"#gfp_mask\">gfp_mask</a> | <a class=\"id\" href=\"#GFP_DMA\">GFP_DMA</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * gets called \"every\" time someone init's a queue with BLK_BOUNCE_ISA</span>", 
"<span class=\"comment\"> * as the max address, so check if the pool has already been created.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#init_emergency_isa_pool\">init_emergency_isa_pool</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#isa_page_pool\">isa_page_pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isa_page_pool\">isa_page_pool</a> = <a class=\"id\" href=\"#mempool_create\">mempool_create</a>(<a class=\"id\" href=\"#ISA_POOL_SIZE\">ISA_POOL_SIZE</a>, <a class=\"id\" href=\"#mempool_alloc_pages_isa\">mempool_alloc_pages_isa</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mempool_free_pages\">mempool_free_pages</a>, (void *) 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#isa_page_pool\">isa_page_pool</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"isa bounce pool size: %d pages\\n\", <a class=\"id\" href=\"#ISA_POOL_SIZE\">ISA_POOL_SIZE</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Simple bounce buffer support for highmem pages. Depending on the</span>", 
"<span class=\"comment\"> * queue gfp mask set, *to may or may not be a highmem page. kmap it</span>", 
"<span class=\"comment\"> * always, it will do the Right Thing</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#copy_to_high_bio_irq\">copy_to_high_bio_irq</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#to\">to</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#from\">from</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#vfrom\">vfrom</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#tovec\">tovec</a>, *<a class=\"id\" href=\"#fromvec\">fromvec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__bio_for_each_segment\">__bio_for_each_segment</a>(<a class=\"id\" href=\"#tovec\">tovec</a>, <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#i\">i</a>, 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fromvec\">fromvec</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a> + <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not bounced</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tovec\">tovec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a> == <a class=\"id\" href=\"#fromvec\">fromvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * fromvec-&gt;bv_offset and fromvec-&gt;bv_len might have been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * modified by the block layer, so use the original copy,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bounce_copy_vec already uses tovec-&gt;bv_len</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfrom\">vfrom</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#fromvec\">fromvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>) + <a class=\"id\" href=\"#tovec\">tovec</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bounce_copy_vec\">bounce_copy_vec</a>(<a class=\"id\" href=\"#tovec\">tovec</a>, <a class=\"id\" href=\"#vfrom\">vfrom</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#tovec\">tovec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bounce_end_io\">bounce_end_io</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#pool\">pool</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio_orig\">bio_orig</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>, *<a class=\"id\" href=\"#org_vec\">org_vec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#BIO_EOPNOTSUPP\">BIO_EOPNOTSUPP</a>, &amp;<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#BIO_EOPNOTSUPP\">BIO_EOPNOTSUPP</a>, &amp;<a class=\"id\" href=\"#bio_orig\">bio_orig</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * free up bounce indirect pages used</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__bio_for_each_segment\">__bio_for_each_segment</a>(<a class=\"id\" href=\"#bvec\">bvec</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>, 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#org_vec\">org_vec</a> = <a class=\"id\" href=\"#bio_orig\">bio_orig</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a> + <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a> == <a class=\"id\" href=\"#org_vec\">org_vec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dec_zone_page_state\">dec_zone_page_state</a>(<a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#NR_BOUNCE\">NR_BOUNCE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_free\">mempool_free</a>(<a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#pool\">pool</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_endio\">bio_endio</a>(<a class=\"id\" href=\"#bio_orig\">bio_orig</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bounce_end_io_write\">bounce_end_io_write</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bounce_end_io\">bounce_end_io</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#page_pool\">page_pool</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bounce_end_io_write_isa\">bounce_end_io_write_isa</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bounce_end_io\">bounce_end_io</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#isa_page_pool\">isa_page_pool</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__bounce_end_io_read\">__bounce_end_io_read</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#pool\">pool</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio_orig\">bio_orig</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#BIO_UPTODATE\">BIO_UPTODATE</a>, &amp;<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_to_high_bio_irq\">copy_to_high_bio_irq</a>(<a class=\"id\" href=\"#bio_orig\">bio_orig</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bounce_end_io\">bounce_end_io</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#pool\">pool</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bounce_end_io_read\">bounce_end_io_read</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__bounce_end_io_read\">__bounce_end_io_read</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#page_pool\">page_pool</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bounce_end_io_read_isa\">bounce_end_io_read_isa</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__bounce_end_io_read\">__bounce_end_io_read</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#isa_page_pool\">isa_page_pool</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__blk_queue_bounce\">__blk_queue_bounce</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio_orig\">bio_orig</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#pool\">pool</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rw\">rw</a> = <a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(*<a class=\"id\" href=\"#bio_orig\">bio_orig</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#to\">to</a>, *<a class=\"id\" href=\"#from\">from</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_for_each_segment\">bio_for_each_segment</a>(<a class=\"id\" href=\"#from\">from</a>, *<a class=\"id\" href=\"#bio_orig\">bio_orig</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is destination page below bounce pfn?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#page\">page</a>) <= <a class=\"id\" href=\"#queue_bounce_pfn\">queue_bounce_pfn</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * irk, bounce it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cnt\">cnt</a> = (*<a class=\"id\" href=\"#bio_orig\">bio_orig</a>)-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_alloc\">bio_alloc</a>(<a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a>, 0, <a class=\"id\" href=\"#cnt\">cnt</a> * sizeof(struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a> + <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a> = <a class=\"id\" href=\"#mempool_alloc\">mempool_alloc</a>(<a class=\"id\" href=\"#pool\">pool</a>, <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#bounce_gfp\">bounce_gfp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inc_zone_page_state\">inc_zone_page_state</a>(<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#NR_BOUNCE\">NR_BOUNCE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#WRITE\">WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#vto\">vto</a>, *<a class=\"id\" href=\"#vfrom\">vfrom</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vto\">vto</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>) + <a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfrom\">vfrom</a> = <a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>) + <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#vto\">vto</a>, <a class=\"id\" href=\"#vfrom\">vfrom</a>, <a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * no pages bounced</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_block_bio_bounce\">trace_block_bio_bounce</a>(<a class=\"id\" href=\"#q\">q</a>, *<a class=\"id\" href=\"#bio_orig\">bio_orig</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * at least one page was bounced, fill in possible non-highmem</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pages</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__bio_for_each_segment\">__bio_for_each_segment</a>(<a class=\"id\" href=\"#from\">from</a>, *<a class=\"id\" href=\"#bio_orig\">bio_orig</a>, <a class=\"id\" href=\"#i\">i</a>, 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = (*<a class=\"id\" href=\"#bio_orig\">bio_orig</a>)-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a> |= (1 << <a class=\"id\" href=\"#BIO_BOUNCED\">BIO_BOUNCED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> = (*<a class=\"id\" href=\"#bio_orig\">bio_orig</a>)-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> = (*<a class=\"id\" href=\"#bio_orig\">bio_orig</a>)-><a class=\"id\" href=\"#bi_rw\">bi_rw</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a> = (*<a class=\"id\" href=\"#bio_orig\">bio_orig</a>)-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_idx\">bi_idx</a> = (*<a class=\"id\" href=\"#bio_orig\">bio_orig</a>)-><a class=\"id\" href=\"#bi_idx\">bi_idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> = (*<a class=\"id\" href=\"#bio_orig\">bio_orig</a>)-><a class=\"id\" href=\"#bi_size\">bi_size</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pool\">pool</a> == <a class=\"id\" href=\"#page_pool\">page_pool</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#bounce_end_io_write\">bounce_end_io_write</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#READ\">READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#bounce_end_io_read\">bounce_end_io_read</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#bounce_end_io_write_isa\">bounce_end_io_write_isa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#READ\">READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#bounce_end_io_read_isa\">bounce_end_io_read_isa</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a> = *<a class=\"id\" href=\"#bio_orig\">bio_orig</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#bio_orig\">bio_orig</a> = <a class=\"id\" href=\"#bio\">bio</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#blk_queue_bounce\">blk_queue_bounce</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio_orig\">bio_orig</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#pool\">pool</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Data-less bio, nothing to bounce</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio_has_data\">bio_has_data</a>(*<a class=\"id\" href=\"#bio_orig\">bio_orig</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for non-isa bounce case, just check if the bounce pfn is equal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to or bigger than the highest pfn in the system -- in that case,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't waste time iterating over bio segments</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#bounce_gfp\">bounce_gfp</a> &amp; <a class=\"id\" href=\"#GFP_DMA\">GFP_DMA</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#queue_bounce_pfn\">queue_bounce_pfn</a>(<a class=\"id\" href=\"#q\">q</a>) >= <a class=\"id\" href=\"#blk_max_pfn\">blk_max_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pool\">pool</a> = <a class=\"id\" href=\"#page_pool\">page_pool</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#isa_page_pool\">isa_page_pool</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pool\">pool</a> = <a class=\"id\" href=\"#isa_page_pool\">isa_page_pool</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * slow path</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__blk_queue_bounce\">__blk_queue_bounce</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bio_orig\">bio_orig</a>, <a class=\"id\" href=\"#pool\">pool</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_queue_bounce\">blk_queue_bounce</a>);", 
];
xr_frag_insert('l/92/201bdb192ff09993433276161bd1916ac6a276.xr', __xr_tmp);
