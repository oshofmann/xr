var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_ACPI_H\">_ASM_X86_ACPI_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_ACPI_H\">_ASM_X86_ACPI_H</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001 Paul Diefenbaugh &lt;paul.s.diefenbaugh@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001 Patrick Mochel &lt;mochel@osdl.org&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> *  (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> *  along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#pdc_intel\">pdc_intel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#numa\">numa</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mmu\">mmu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mpspec\">mpspec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPILER_DEPENDENT_INT64\">COMPILER_DEPENDENT_INT64</a>   long long", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPILER_DEPENDENT_UINT64\">COMPILER_DEPENDENT_UINT64</a>  unsigned long long", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Calling conventions:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ACPI_SYSTEM_XFACE        - Interfaces to host OS (handlers, threads)</span>", 
"<span class=\"comment\"> * ACPI_EXTERNAL_XFACE      - External ACPI interfaces</span>", 
"<span class=\"comment\"> * ACPI_INTERNAL_XFACE      - Internal ACPI interfaces</span>", 
"<span class=\"comment\"> * ACPI_INTERNAL_VAR_XFACE  - Internal variable-parameter list interfaces</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_SYSTEM_XFACE\">ACPI_SYSTEM_XFACE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EXTERNAL_XFACE\">ACPI_EXTERNAL_XFACE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_INTERNAL_XFACE\">ACPI_INTERNAL_XFACE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_INTERNAL_VAR_XFACE\">ACPI_INTERNAL_VAR_XFACE</a>", 
"", 
"<span class=\"comment\">/* Asm macros */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_ASM_MACROS\">ACPI_ASM_MACROS</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BREAKPOINT3\">BREAKPOINT3</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DISABLE_IRQS\">ACPI_DISABLE_IRQS</a>() <a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>()", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_ENABLE_IRQS\">ACPI_ENABLE_IRQS</a>()  <a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>()", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_FLUSH_CPU_CACHE\">ACPI_FLUSH_CPU_CACHE</a>()<span class=\"ts\"/><a class=\"id\" href=\"#wbinvd\">wbinvd</a>()", 
"", 
"int <a class=\"id\" href=\"#__acpi_acquire_global_lock\">__acpi_acquire_global_lock</a>(unsigned int *<a class=\"id\" href=\"#lock\">lock</a>);", 
"int <a class=\"id\" href=\"#__acpi_release_global_lock\">__acpi_release_global_lock</a>(unsigned int *<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_ACQUIRE_GLOBAL_LOCK\">ACPI_ACQUIRE_GLOBAL_LOCK</a>(<a class=\"id\" href=\"#facs\">facs</a>, <a class=\"id\" href=\"#Acq\">Acq</a>) \\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#Acq\">Acq</a>) = <a class=\"id\" href=\"#__acpi_acquire_global_lock\">__acpi_acquire_global_lock</a>(&amp;<a class=\"id\" href=\"#facs\">facs</a>-><a class=\"id\" href=\"#global_lock\">global_lock</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_RELEASE_GLOBAL_LOCK\">ACPI_RELEASE_GLOBAL_LOCK</a>(<a class=\"id\" href=\"#facs\">facs</a>, <a class=\"id\" href=\"#Acq\">Acq</a>) \\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#Acq\">Acq</a>) = <a class=\"id\" href=\"#__acpi_release_global_lock\">__acpi_release_global_lock</a>(&amp;<a class=\"id\" href=\"#facs\">facs</a>-><a class=\"id\" href=\"#global_lock\">global_lock</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Math helper asm macros</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DIV_64_BY_32\">ACPI_DIV_64_BY_32</a>(<a class=\"id\" href=\"#n_hi\">n_hi</a>, <a class=\"id\" href=\"#n_lo\">n_lo</a>, <a class=\"id\" href=\"#d32\">d32</a>, <a class=\"id\" href=\"#q32\">q32</a>, <a class=\"id\" href=\"#r32\">r32</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"divl %2;\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/>    : \"=a\"(<a class=\"id\" href=\"#q32\">q32</a>), \"=d\"(<a class=\"id\" href=\"#r32\">r32</a>)<span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/>    : \"r\"(<a class=\"id\" href=\"#d32\">d32</a>),<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/>     \"0\"(<a class=\"id\" href=\"#n_lo\">n_lo</a>), \"1\"(<a class=\"id\" href=\"#n_hi\">n_hi</a>))", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_SHIFT_RIGHT_64\">ACPI_SHIFT_RIGHT_64</a>(<a class=\"id\" href=\"#n_hi\">n_hi</a>, <a class=\"id\" href=\"#n_lo\">n_lo</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"shrl   $1,%2 ;\"<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>    \"rcrl   $1,%3;\"<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>    : \"=r\"(<a class=\"id\" href=\"#n_hi\">n_hi</a>), \"=r\"(<a class=\"id\" href=\"#n_lo\">n_lo</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>    : \"0\"(<a class=\"id\" href=\"#n_hi\">n_hi</a>), \"1\"(<a class=\"id\" href=\"#n_lo\">n_lo</a>))", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI\">CONFIG_ACPI</a>", 
"extern int <a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a>;", 
"extern int <a class=\"id\" href=\"#acpi_ioapic\">acpi_ioapic</a>;", 
"extern int <a class=\"id\" href=\"#acpi_noirq\">acpi_noirq</a>;", 
"extern int <a class=\"id\" href=\"#acpi_strict\">acpi_strict</a>;", 
"extern int <a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a>;", 
"extern int <a class=\"id\" href=\"#acpi_pci_disabled\">acpi_pci_disabled</a>;", 
"extern int <a class=\"id\" href=\"#acpi_skip_timer_override\">acpi_skip_timer_override</a>;", 
"extern int <a class=\"id\" href=\"#acpi_use_timer_override\">acpi_use_timer_override</a>;", 
"", 
"extern <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a>;", 
"extern int <a class=\"id\" href=\"#acpi_sci_override_gsi\">acpi_sci_override_gsi</a>;", 
"void <a class=\"id\" href=\"#acpi_pic_sci_set_trigger\">acpi_pic_sci_set_trigger</a>(unsigned int, <a class=\"id\" href=\"#u16\">u16</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#disable_acpi\">disable_acpi</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_pci_disabled\">acpi_pci_disabled</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_noirq\">acpi_noirq</a> = 1;", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#acpi_gsi_to_irq\">acpi_gsi_to_irq</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>, unsigned int *<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#acpi_noirq_set\">acpi_noirq_set</a>(void) { <a class=\"id\" href=\"#acpi_noirq\">acpi_noirq</a> = 1; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#acpi_disable_pci\">acpi_disable_pci</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_pci_disabled\">acpi_pci_disabled</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_noirq_set\">acpi_noirq_set</a>();", 
"}", 
"", 
"<span class=\"comment\">/* routines for saving/restoring kernel state */</span>", 
"extern int <a class=\"id\" href=\"#acpi_save_state_mem\">acpi_save_state_mem</a>(void);", 
"extern void <a class=\"id\" href=\"#acpi_restore_state_mem\">acpi_restore_state_mem</a>(void);", 
"", 
"extern unsigned long <a class=\"id\" href=\"#acpi_wakeup_address\">acpi_wakeup_address</a>;", 
"", 
"<span class=\"comment\">/* early initialization routine */</span>", 
"extern void <a class=\"id\" href=\"#acpi_reserve_wakeup_memory\">acpi_reserve_wakeup_memory</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check if the CPU can handle C2 and deeper</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#acpi_processor_cstate_check\">acpi_processor_cstate_check</a>(unsigned int <a class=\"id\" href=\"#max_cstate\">max_cstate</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Early models (&lt;=5) of AMD Opterons are not supposed to go into</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * C2 state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Steppings 0x0A and later are good</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> == 0x0F &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> == <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> <= 0x05 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_mask\">x86_mask</a> &lt; 0x0A)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#c1e_detected\">c1e_detected</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#max_cstate\">max_cstate</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#arch_has_acpi_pdc\">arch_has_acpi_pdc</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a> = &amp;<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(0);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> == <a class=\"id\" href=\"#X86_VENDOR_INTEL\">X86_VENDOR_INTEL</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> == <a class=\"id\" href=\"#X86_VENDOR_CENTAUR\">X86_VENDOR_CENTAUR</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#arch_acpi_set_pdc_bits\">arch_acpi_set_pdc_bits</a>(<a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a> = &amp;<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[2] |= <a class=\"id\" href=\"#ACPI_PDC_C_CAPABILITY_SMP\">ACPI_PDC_C_CAPABILITY_SMP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_EST\">X86_FEATURE_EST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[2] |= <a class=\"id\" href=\"#ACPI_PDC_EST_CAPABILITY_SWSMP\">ACPI_PDC_EST_CAPABILITY_SWSMP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_ACPI\">X86_FEATURE_ACPI</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[2] |= <a class=\"id\" href=\"#ACPI_PDC_T_FFH\">ACPI_PDC_T_FFH</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If mwait/monitor is unsupported, C2/C3_FFH will be disabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_MWAIT\">X86_FEATURE_MWAIT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[2] &= ~(<a class=\"id\" href=\"#ACPI_PDC_C_C2C3_FFH\">ACPI_PDC_C_C2C3_FFH</a>);", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_ACPI */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a> 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#acpi_ioapic\">acpi_ioapic</a> 0", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#acpi_noirq_set\">acpi_noirq_set</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#acpi_disable_pci\">acpi_disable_pci</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#disable_acpi\">disable_acpi</a>(void) { }", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_ACPI */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_HAS_POWER_INIT\">ARCH_HAS_POWER_INIT</a><span class=\"ts\"/>1", 
"", 
"struct <a class=\"id\" href=\"#bootnode\">bootnode</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI_NUMA\">CONFIG_ACPI_NUMA</a>", 
"extern int <a class=\"id\" href=\"#acpi_numa\">acpi_numa</a>;", 
"extern int <a class=\"id\" href=\"#acpi_get_nodes\">acpi_get_nodes</a>(struct <a class=\"id\" href=\"#bootnode\">bootnode</a> *<a class=\"id\" href=\"#physnodes\">physnodes</a>);", 
"extern int <a class=\"id\" href=\"#acpi_scan_nodes\">acpi_scan_nodes</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_NODE_MEMBLKS\">NR_NODE_MEMBLKS</a> (<a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a>*2)", 
"extern void <a class=\"id\" href=\"#acpi_fake_nodes\">acpi_fake_nodes</a>(const struct <a class=\"id\" href=\"#bootnode\">bootnode</a> *<a class=\"id\" href=\"#fake_nodes\">fake_nodes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#num_nodes\">num_nodes</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#acpi_fake_nodes\">acpi_fake_nodes</a>(const struct <a class=\"id\" href=\"#bootnode\">bootnode</a> *<a class=\"id\" href=\"#fake_nodes\">fake_nodes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#num_nodes\">num_nodes</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#acpi_unlazy_tlb\">acpi_unlazy_tlb</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#leave_mm\">leave_mm</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_ACPI_H */</span>", 
];
xr_frag_insert('l/92/6fa6088ce5067f2eb36e46c92056eda9dc5dbc.xr', __xr_tmp);
