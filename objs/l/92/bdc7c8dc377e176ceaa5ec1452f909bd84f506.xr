var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/drivers/base/map.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (C) Copyright Al Viro 2002,2003</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Released under GPL v2.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: data structure needs to be changed.  It works, but for large dev_t</span>", 
"<span class=\"comment\"> * it will be too slow.  It is isolated, though, so these changes will be</span>", 
"<span class=\"comment\"> * local to that file.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kdev_t\">kdev_t</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kobject\">kobject</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kobj_map\">kobj_map</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#kobj_map\">kobj_map</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#probe\">probe</a> {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#probe\">probe</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#range\">range</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj_probe_t\">kobj_probe_t</a> *<a class=\"id\" href=\"#get\">get</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#lock\">lock</a>)(<a class=\"id\" href=\"#dev_t\">dev_t</a>, void *);", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>} *<a class=\"id\" href=\"#probes\">probes</a>[255];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>;", 
"};", 
"", 
"int <a class=\"id\" href=\"#kobj_map\">kobj_map</a>(struct <a class=\"id\" href=\"#kobj_map\">kobj_map</a> *<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>, unsigned long <a class=\"id\" href=\"#range\">range</a>,", 
"<span class=\"ts\"/>     struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a>, <a class=\"id\" href=\"#kobj_probe_t\">kobj_probe_t</a> *<a class=\"id\" href=\"#probe\">probe</a>,", 
"<span class=\"ts\"/>     int (*<a class=\"id\" href=\"#lock\">lock</a>)(<a class=\"id\" href=\"#dev_t\">dev_t</a>, void *), void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a> + <a class=\"id\" href=\"#range\">range</a> - 1) - <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>) + 1;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#probe\">probe</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &gt; 255)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = 255;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#probe\">probe</a>) * <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#p\">p</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#module\">module</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#get\">get</a> = <a class=\"id\" href=\"#probe\">probe</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range\">range</a> = <a class=\"id\" href=\"#range\">range</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#p\">p</a> -= <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#p\">p</a>++, <a class=\"id\" href=\"#index\">index</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#probe\">probe</a> **<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#probes\">probes</a>[<a class=\"id\" href=\"#index\">index</a> % 255];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (*<a class=\"id\" href=\"#s\">s</a> && (*<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#range\">range</a> &lt; <a class=\"id\" href=\"#range\">range</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = &amp;(*<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a> = *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#kobj_unmap\">kobj_unmap</a>(struct <a class=\"id\" href=\"#kobj_map\">kobj_map</a> *<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>, unsigned long <a class=\"id\" href=\"#range\">range</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a> + <a class=\"id\" href=\"#range\">range</a> - 1) - <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>) + 1;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#probe\">probe</a> *<a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &gt; 255)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = 255;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#index\">index</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#probe\">probe</a> **<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#probes\">probes</a>[<a class=\"id\" href=\"#index\">index</a> % 255]; *<a class=\"id\" href=\"#s\">s</a>; <a class=\"id\" href=\"#s\">s</a> = &amp;(*<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#probe\">probe</a> *<a class=\"id\" href=\"#p\">p</a> = *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a> && <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range\">range</a> == <a class=\"id\" href=\"#range\">range</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#found\">found</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj_lookup\">kobj_lookup</a>(struct <a class=\"id\" href=\"#kobj_map\">kobj_map</a> *<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>, int *<a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#probe\">probe</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#best\">best</a> = ~0UL;", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#probes\">probes</a>[<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>) % 255]; <a class=\"id\" href=\"#p\">p</a>; <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *(*<a class=\"id\" href=\"#probe\">probe</a>)(<a class=\"id\" href=\"#dev_t\">dev_t</a>, int *, void *);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#dev\">dev</a> &gt; <a class=\"id\" href=\"#dev\">dev</a> || <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#dev\">dev</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range\">range</a> - 1 &lt; <a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range\">range</a> - 1 >= <a class=\"id\" href=\"#best\">best</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#probe\">probe</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#get\">get</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best\">best</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range\">range</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#dev\">dev</a> - <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#lock\">lock</a> && <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#lock\">lock</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#data\">data</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#probe\">probe</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Currently -&gt;owner protects _only_ -&gt;probe() itself. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#kobj_map\">kobj_map</a> *<a class=\"id\" href=\"#kobj_map_init\">kobj_map_init</a>(<a class=\"id\" href=\"#kobj_probe_t\">kobj_probe_t</a> *<a class=\"id\" href=\"#base_probe\">base_probe</a>, struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobj_map\">kobj_map</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#kobj_map\">kobj_map</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#probe\">probe</a> *<a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#base\">base</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#p\">p</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) || (<a class=\"id\" href=\"#base\">base</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#dev\">dev</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#range\">range</a> = ~0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#get\">get</a> = <a class=\"id\" href=\"#base_probe\">base_probe</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 255; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#probes\">probes</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
];
xr_frag_insert('l/92/bdc7c8dc377e176ceaa5ec1452f909bd84f506.xr', __xr_tmp);
