var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NetLabel Kernel API</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file defines the kernel API for the NetLabel system.  The NetLabel</span>", 
"<span class=\"comment\"> * system manages static and dynamic label mappings for network protocols such</span>", 
"<span class=\"comment\"> * as CIPSO and RIPSO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Paul Moore &lt;paul.moore@hp.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * (c) Copyright Hewlett-Packard Development Company, L.P., 2006, 2008</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software;  you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY;  without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See</span>", 
"<span class=\"comment\"> * the GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program;  if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlabel\">netlabel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#cipso_ipv4\">cipso_ipv4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bug\">bug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_domainhash.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_unlabeled.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_cipso_v4.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_user.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_mgmt.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_addrlist.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Configuration Functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_cfg_map_del - Remove a NetLabel/LSM domain mapping</span>", 
"<span class=\"comment\"> * @domain: the domain mapping to remove</span>", 
"<span class=\"comment\"> * @family: address family</span>", 
"<span class=\"comment\"> * @addr: IP address</span>", 
"<span class=\"comment\"> * @mask: IP address mask</span>", 
"<span class=\"comment\"> * @audit_info: NetLabel audit information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Removes a NetLabel/LSM domain mapping.  A @domain value of NULL causes the</span>", 
"<span class=\"comment\"> * default domain mapping to be removed.  Returns zero on success, negative</span>", 
"<span class=\"comment\"> * values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_cfg_map_del\">netlbl_cfg_map_del</a>(const char *<a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const void *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const void *<a class=\"id\" href=\"#mask\">mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#netlbl_audit\">netlbl_audit</a> *<a class=\"id\" href=\"#audit_info\">audit_info</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#mask\">mask</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#netlbl_domhsh_remove\">netlbl_domhsh_remove</a>(<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#audit_info\">audit_info</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#mask\">mask</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#netlbl_domhsh_remove_af4\">netlbl_domhsh_remove_af4</a>(<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#mask\">mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_info\">audit_info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPFNOSUPPORT\">EPFNOSUPPORT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_cfg_unlbl_map_add - Add a new unlabeled mapping</span>", 
"<span class=\"comment\"> * @domain: the domain mapping to add</span>", 
"<span class=\"comment\"> * @family: address family</span>", 
"<span class=\"comment\"> * @addr: IP address</span>", 
"<span class=\"comment\"> * @mask: IP address mask</span>", 
"<span class=\"comment\"> * @audit_info: NetLabel audit information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Adds a new unlabeled NetLabel/LSM domain mapping.  A @domain value of NULL</span>", 
"<span class=\"comment\"> * causes a new default domain mapping to be added.  Returns zero on success,</span>", 
"<span class=\"comment\"> * negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_cfg_unlbl_map_add\">netlbl_cfg_unlbl_map_add</a>(const char *<a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const void *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const void *<a class=\"id\" href=\"#mask\">mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#netlbl_audit\">netlbl_audit</a> *<a class=\"id\" href=\"#audit_info\">audit_info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_dom_map\">netlbl_dom_map</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_domaddr_map\">netlbl_domaddr_map</a> *<a class=\"id\" href=\"#addrmap\">addrmap</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_domaddr4_map\">netlbl_domaddr4_map</a> *<a class=\"id\" href=\"#map4\">map4</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_domaddr6_map\">netlbl_domaddr6_map</a> *<a class=\"id\" href=\"#map6\">map6</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in_addr\">in_addr</a> *<a class=\"id\" href=\"#addr4\">addr4</a>, *<a class=\"id\" href=\"#mask4\">mask4</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr6\">addr6</a>, *<a class=\"id\" href=\"#mask6\">mask6</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#entry\">entry</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#domain\">domain</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#domain\">domain</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#mask\">mask</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED\">NETLBL_NLTYPE_UNLABELED</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#mask\">mask</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrmap\">addrmap</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#addrmap\">addrmap</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrmap\">addrmap</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#addrmap\">addrmap</a>-><a class=\"id\" href=\"#list4\">list4</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#addrmap\">addrmap</a>-><a class=\"id\" href=\"#list6\">list6</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr4\">addr4</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask4\">mask4</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map4\">map4</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#map4\">map4</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#map4\">map4</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map4\">map4</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED\">NETLBL_NLTYPE_UNLABELED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map4\">map4</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#addr4\">addr4</a>-><a class=\"id\" href=\"#s_addr\">s_addr</a> &amp; <a class=\"id\" href=\"#mask4\">mask4</a>-><a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map4\">map4</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#mask4\">mask4</a>-><a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map4\">map4</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#valid\">valid</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_af4list_add\">netlbl_af4list_add</a>(&amp;<a class=\"id\" href=\"#map4\">map4</a>-><a class=\"id\" href=\"#list\">list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#addrmap\">addrmap</a>-><a class=\"id\" href=\"#list4\">list4</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_val\">ret_val</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr6\">addr6</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask6\">mask6</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map6\">map6</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#map6\">map6</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#map6\">map6</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map6\">map6</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED\">NETLBL_NLTYPE_UNLABELED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#map6\">map6</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr6\">addr6</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map6\">map6</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] &= <a class=\"id\" href=\"#mask6\">mask6</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map6\">map6</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] &= <a class=\"id\" href=\"#mask6\">mask6</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map6\">map6</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] &= <a class=\"id\" href=\"#mask6\">mask6</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map6\">map6</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3] &= <a class=\"id\" href=\"#mask6\">mask6</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#map6\">map6</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#mask6\">mask6</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map6\">map6</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#valid\">valid</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_af4list_add\">netlbl_af4list_add</a>(&amp;<a class=\"id\" href=\"#map4\">map4</a>-><a class=\"id\" href=\"#list\">list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#addrmap\">addrmap</a>-><a class=\"id\" href=\"#list4\">list4</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_val\">ret_val</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#addrsel\">addrsel</a> = <a class=\"id\" href=\"#addrmap\">addrmap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NETLBL_NLTYPE_ADDRSELECT\">NETLBL_NLTYPE_ADDRSELECT</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_domhsh_add\">netlbl_domhsh_add</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#audit_info\">audit_info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_val\">ret_val</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#cfg_unlbl_map_add_failure\">cfg_unlbl_map_add_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#addrmap\">addrmap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#map4\">map4</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#map6\">map6</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_cfg_unlbl_static_add - Adds a new static label</span>", 
"<span class=\"comment\"> * @net: network namespace</span>", 
"<span class=\"comment\"> * @dev_name: interface name</span>", 
"<span class=\"comment\"> * @addr: IP address in network byte order (struct in[6]_addr)</span>", 
"<span class=\"comment\"> * @mask: address mask in network byte order (struct in[6]_addr)</span>", 
"<span class=\"comment\"> * @family: address family</span>", 
"<span class=\"comment\"> * @secid: LSM secid value for the entry</span>", 
"<span class=\"comment\"> * @audit_info: NetLabel audit information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Adds a new NetLabel static label to be used when protocol provided labels</span>", 
"<span class=\"comment\"> * are not present on incoming traffic.  If @dev_name is NULL then the default</span>", 
"<span class=\"comment\"> * interface will be used.  Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_cfg_unlbl_static_add\">netlbl_cfg_unlbl_static_add</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#dev_name\">dev_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#mask\">mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#secid\">secid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_audit\">netlbl_audit</a> *<a class=\"id\" href=\"#audit_info\">audit_info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_len\">addr_len</a> = sizeof(struct <a class=\"id\" href=\"#in_addr\">in_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_len\">addr_len</a> = sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPFNOSUPPORT\">EPFNOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netlbl_unlhsh_add\">netlbl_unlhsh_add</a>(<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev_name\">dev_name</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#addr_len\">addr_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#secid\">secid</a>, <a class=\"id\" href=\"#audit_info\">audit_info</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_cfg_unlbl_static_del - Removes an existing static label</span>", 
"<span class=\"comment\"> * @net: network namespace</span>", 
"<span class=\"comment\"> * @dev_name: interface name</span>", 
"<span class=\"comment\"> * @addr: IP address in network byte order (struct in[6]_addr)</span>", 
"<span class=\"comment\"> * @mask: address mask in network byte order (struct in[6]_addr)</span>", 
"<span class=\"comment\"> * @family: address family</span>", 
"<span class=\"comment\"> * @secid: LSM secid value for the entry</span>", 
"<span class=\"comment\"> * @audit_info: NetLabel audit information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Removes an existing NetLabel static label used when protocol provided labels</span>", 
"<span class=\"comment\"> * are not present on incoming traffic.  If @dev_name is NULL then the default</span>", 
"<span class=\"comment\"> * interface will be used.  Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_cfg_unlbl_static_del\">netlbl_cfg_unlbl_static_del</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#dev_name\">dev_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#mask\">mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_audit\">netlbl_audit</a> *<a class=\"id\" href=\"#audit_info\">audit_info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_len\">addr_len</a> = sizeof(struct <a class=\"id\" href=\"#in_addr\">in_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_len\">addr_len</a> = sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPFNOSUPPORT\">EPFNOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netlbl_unlhsh_remove\">netlbl_unlhsh_remove</a>(<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dev_name\">dev_name</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#addr_len\">addr_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#audit_info\">audit_info</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_cfg_cipsov4_add - Add a new CIPSOv4 DOI definition</span>", 
"<span class=\"comment\"> * @doi_def: CIPSO DOI definition</span>", 
"<span class=\"comment\"> * @audit_info: NetLabel audit information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Add a new CIPSO DOI definition as defined by @doi_def.  Returns zero on</span>", 
"<span class=\"comment\"> * success and negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_cfg_cipsov4_add\">netlbl_cfg_cipsov4_add</a>(struct <a class=\"id\" href=\"#cipso_v4_doi\">cipso_v4_doi</a> *<a class=\"id\" href=\"#doi_def\">doi_def</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#netlbl_audit\">netlbl_audit</a> *<a class=\"id\" href=\"#audit_info\">audit_info</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cipso_v4_doi_add\">cipso_v4_doi_add</a>(<a class=\"id\" href=\"#doi_def\">doi_def</a>, <a class=\"id\" href=\"#audit_info\">audit_info</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_cfg_cipsov4_del - Remove an existing CIPSOv4 DOI definition</span>", 
"<span class=\"comment\"> * @doi: CIPSO DOI</span>", 
"<span class=\"comment\"> * @audit_info: NetLabel audit information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Remove an existing CIPSO DOI definition matching @doi.  Returns zero on</span>", 
"<span class=\"comment\"> * success and negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#netlbl_cfg_cipsov4_del\">netlbl_cfg_cipsov4_del</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#doi\">doi</a>, struct <a class=\"id\" href=\"#netlbl_audit\">netlbl_audit</a> *<a class=\"id\" href=\"#audit_info\">audit_info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cipso_v4_doi_remove\">cipso_v4_doi_remove</a>(<a class=\"id\" href=\"#doi\">doi</a>, <a class=\"id\" href=\"#audit_info\">audit_info</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_cfg_cipsov4_map_add - Add a new CIPSOv4 DOI mapping</span>", 
"<span class=\"comment\"> * @doi: the CIPSO DOI</span>", 
"<span class=\"comment\"> * @domain: the domain mapping to add</span>", 
"<span class=\"comment\"> * @addr: IP address</span>", 
"<span class=\"comment\"> * @mask: IP address mask</span>", 
"<span class=\"comment\"> * @audit_info: NetLabel audit information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Add a new NetLabel/LSM domain mapping for the given CIPSO DOI to the NetLabel</span>", 
"<span class=\"comment\"> * subsystem.  A @domain value of NULL adds a new default domain mapping.</span>", 
"<span class=\"comment\"> * Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_cfg_cipsov4_map_add\">netlbl_cfg_cipsov4_map_add</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#doi\">doi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#in_addr\">in_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#in_addr\">in_addr</a> *<a class=\"id\" href=\"#mask\">mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#netlbl_audit\">netlbl_audit</a> *<a class=\"id\" href=\"#audit_info\">audit_info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cipso_v4_doi\">cipso_v4_doi</a> *<a class=\"id\" href=\"#doi_def\">doi_def</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_dom_map\">netlbl_dom_map</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_domaddr_map\">netlbl_domaddr_map</a> *<a class=\"id\" href=\"#addrmap\">addrmap</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_domaddr4_map\">netlbl_domaddr4_map</a> *<a class=\"id\" href=\"#addrinfo\">addrinfo</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#doi_def\">doi_def</a> = <a class=\"id\" href=\"#cipso_v4_doi_getdef\">cipso_v4_doi_getdef</a>(<a class=\"id\" href=\"#doi\">doi</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#doi_def\">doi_def</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#entry\">entry</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#domain\">domain</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#domain\">domain</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_cipsov4_map_add_failure\">cfg_cipsov4_map_add_failure</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#mask\">mask</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#cipsov4\">cipsov4</a> = <a class=\"id\" href=\"#doi_def\">doi_def</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV4\">NETLBL_NLTYPE_CIPSOV4</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#mask\">mask</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrmap\">addrmap</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#addrmap\">addrmap</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrmap\">addrmap</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_cipsov4_map_add_failure\">cfg_cipsov4_map_add_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#addrmap\">addrmap</a>-><a class=\"id\" href=\"#list4\">list4</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#addrmap\">addrmap</a>-><a class=\"id\" href=\"#list6\">list6</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrinfo\">addrinfo</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#addrinfo\">addrinfo</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrinfo\">addrinfo</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_cipsov4_map_add_failure\">cfg_cipsov4_map_add_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrinfo\">addrinfo</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#cipsov4\">cipsov4</a> = <a class=\"id\" href=\"#doi_def\">doi_def</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrinfo\">addrinfo</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV4\">NETLBL_NLTYPE_CIPSOV4</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrinfo\">addrinfo</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#s_addr\">s_addr</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>-><a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrinfo\">addrinfo</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#mask\">mask</a>-><a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrinfo\">addrinfo</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#valid\">valid</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_af4list_add\">netlbl_af4list_add</a>(&amp;<a class=\"id\" href=\"#addrinfo\">addrinfo</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#addrmap\">addrmap</a>-><a class=\"id\" href=\"#list4\">list4</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_val\">ret_val</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_cipsov4_map_add_failure\">cfg_cipsov4_map_add_failure</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#addrsel\">addrsel</a> = <a class=\"id\" href=\"#addrmap\">addrmap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NETLBL_NLTYPE_ADDRSELECT\">NETLBL_NLTYPE_ADDRSELECT</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_cipsov4_map_add_failure\">cfg_cipsov4_map_add_failure</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_domhsh_add\">netlbl_domhsh_add</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#audit_info\">audit_info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_val\">ret_val</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cfg_cipsov4_map_add_failure\">cfg_cipsov4_map_add_failure</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#cfg_cipsov4_map_add_failure\">cfg_cipsov4_map_add_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cipso_v4_doi_putdef\">cipso_v4_doi_putdef</a>(<a class=\"id\" href=\"#doi_def\">doi_def</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#addrmap\">addrmap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#addrinfo\">addrinfo</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Security Attribute Functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_secattr_catmap_walk - Walk a LSM secattr catmap looking for a bit</span>", 
"<span class=\"comment\"> * @catmap: the category bitmap</span>", 
"<span class=\"comment\"> * @offset: the offset to start searching at, in bits</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * This function walks a LSM secattr category bitmap starting at @offset and</span>", 
"<span class=\"comment\"> * returns the spot of the first set bit or -ENOENT if no bits are set.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_secattr_catmap_walk\">netlbl_secattr_catmap_walk</a>(struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#catmap\">catmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#catmap\">catmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#node_idx\">node_idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#node_bit\">node_bit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETLBL_CATMAP_MAPTYPE\">NETLBL_CATMAP_MAPTYPE</a> <a class=\"id\" href=\"#bitmap\">bitmap</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &gt; <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#offset\">offset</a> >= (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_idx\">node_idx</a> = (<a class=\"id\" href=\"#offset\">offset</a> - <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>) / <a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a> = <a class=\"id\" href=\"#offset\">offset</a> - <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a> * <a class=\"id\" href=\"#node_idx\">node_idx</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_idx\">node_idx</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap\">bitmap</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a>[<a class=\"id\" href=\"#node_idx\">node_idx</a>] >> <a class=\"id\" href=\"#node_bit\">node_bit</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bitmap\">bitmap</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#bitmap\">bitmap</a> &amp; <a class=\"id\" href=\"#NETLBL_CATMAP_BIT\">NETLBL_CATMAP_BIT</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap\">bitmap</a> >>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a> * <a class=\"id\" href=\"#node_idx\">node_idx</a>) + <a class=\"id\" href=\"#node_bit\">node_bit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#node_idx\">node_idx</a> >= <a class=\"id\" href=\"#NETLBL_CATMAP_MAPCNT\">NETLBL_CATMAP_MAPCNT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_idx\">node_idx</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap\">bitmap</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a>[<a class=\"id\" href=\"#node_idx\">node_idx</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_secattr_catmap_walk_rng - Find the end of a string of set bits</span>", 
"<span class=\"comment\"> * @catmap: the category bitmap</span>", 
"<span class=\"comment\"> * @offset: the offset to start searching at, in bits</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * This function walks a LSM secattr category bitmap starting at @offset and</span>", 
"<span class=\"comment\"> * returns the spot of the first cleared bit or -ENOENT if the offset is past</span>", 
"<span class=\"comment\"> * the end of the bitmap.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_secattr_catmap_walk_rng\">netlbl_secattr_catmap_walk_rng</a>(struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#catmap\">catmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#catmap\">catmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#node_idx\">node_idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#node_bit\">node_bit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETLBL_CATMAP_MAPTYPE\">NETLBL_CATMAP_MAPTYPE</a> <a class=\"id\" href=\"#bitmask\">bitmask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETLBL_CATMAP_MAPTYPE\">NETLBL_CATMAP_MAPTYPE</a> <a class=\"id\" href=\"#bitmap\">bitmap</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &gt; <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#offset\">offset</a> >= (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_idx\">node_idx</a> = (<a class=\"id\" href=\"#offset\">offset</a> - <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>) / <a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a> = <a class=\"id\" href=\"#offset\">offset</a> - <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a> * <a class=\"id\" href=\"#node_idx\">node_idx</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_idx\">node_idx</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmask\">bitmask</a> = <a class=\"id\" href=\"#NETLBL_CATMAP_BIT\">NETLBL_CATMAP_BIT</a> << <a class=\"id\" href=\"#node_bit\">node_bit</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap\">bitmap</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a>[<a class=\"id\" href=\"#node_idx\">node_idx</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#bitmask\">bitmask</a> != 0 && (<a class=\"id\" href=\"#bitmap\">bitmap</a> &amp; <a class=\"id\" href=\"#bitmask\">bitmask</a>) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmask\">bitmask</a> <<= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bitmask\">bitmask</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a> * <a class=\"id\" href=\"#node_idx\">node_idx</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (++<a class=\"id\" href=\"#node_idx\">node_idx</a> >= <a class=\"id\" href=\"#NETLBL_CATMAP_MAPCNT\">NETLBL_CATMAP_MAPCNT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> +<span class=\"ts\"/><a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_idx\">node_idx</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmask\">bitmask</a> = <a class=\"id\" href=\"#NETLBL_CATMAP_BIT\">NETLBL_CATMAP_BIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_secattr_catmap_setbit - Set a bit in a LSM secattr catmap</span>", 
"<span class=\"comment\"> * @catmap: the category bitmap</span>", 
"<span class=\"comment\"> * @bit: the bit to set</span>", 
"<span class=\"comment\"> * @flags: memory allocation flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Set the bit specified by @bit in @catmap.  Returns zero on success,</span>", 
"<span class=\"comment\"> * negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_secattr_catmap_setbit\">netlbl_secattr_catmap_setbit</a>(struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#catmap\">catmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bit\">bit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#catmap\">catmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#node_bit\">node_bit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#node_idx\">node_idx</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#bit\">bit</a> >= (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bit\">bit</a> >= (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#netlbl_secattr_catmap_alloc\">netlbl_secattr_catmap_alloc</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> = <a class=\"id\" href=\"#bit\">bit</a> &amp; ~(<a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a> - 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* gcc always rounds to zero when doing integer division */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node_idx\">node_idx</a> = (<a class=\"id\" href=\"#bit\">bit</a> - <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>) / <a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node_bit\">node_bit</a> = <a class=\"id\" href=\"#bit\">bit</a> - <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> - (<a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a> * <a class=\"id\" href=\"#node_idx\">node_idx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a>[<a class=\"id\" href=\"#node_idx\">node_idx</a>] |= <a class=\"id\" href=\"#NETLBL_CATMAP_BIT\">NETLBL_CATMAP_BIT</a> << <a class=\"id\" href=\"#node_bit\">node_bit</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_secattr_catmap_setrng - Set a range of bits in a LSM secattr catmap</span>", 
"<span class=\"comment\"> * @catmap: the category bitmap</span>", 
"<span class=\"comment\"> * @start: the starting bit</span>", 
"<span class=\"comment\"> * @end: the last bit in the string</span>", 
"<span class=\"comment\"> * @flags: memory allocation flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Set a range of bits, starting at @start and ending with @end.  Returns zero</span>", 
"<span class=\"comment\"> * on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_secattr_catmap_setrng\">netlbl_secattr_catmap_setrng</a>(struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#catmap\">catmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#catmap\">catmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#iter_max_spot\">iter_max_spot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#spot\">spot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX - This could probably be made a bit faster by combining writes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to the catmap instead of setting a single bit each time, but for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * right now skipping to the start of the range in the catmap should</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be a nice improvement over calling the individual setbit function</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * repeatedly from a loop. */</span>", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#start\">start</a> >= (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter_max_spot\">iter_max_spot</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#spot\">spot</a> = <a class=\"id\" href=\"#start\">start</a>; <a class=\"id\" href=\"#spot\">spot</a> <= <a class=\"id\" href=\"#end\">end</a> && <a class=\"id\" href=\"#ret_val\">ret_val</a> == 0; <a class=\"id\" href=\"#spot\">spot</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#spot\">spot</a> >= <a class=\"id\" href=\"#iter_max_spot\">iter_max_spot</a> && <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter_max_spot\">iter_max_spot</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_secattr_catmap_setbit\">netlbl_secattr_catmap_setbit</a>(<a class=\"id\" href=\"#iter\">iter</a>, <a class=\"id\" href=\"#spot\">spot</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * LSM Functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_enabled - Determine if the NetLabel subsystem is enabled</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * The LSM can use this function to determine if it should use NetLabel</span>", 
"<span class=\"comment\"> * security attributes in it's enforcement mechanism.  Currently, NetLabel is</span>", 
"<span class=\"comment\"> * considered to be enabled when it's configuration contains a valid setup for</span>", 
"<span class=\"comment\"> * at least one labeled protocol (i.e. NetLabel can understand incoming</span>", 
"<span class=\"comment\"> * labeled packets of at least one type); otherwise NetLabel is considered to</span>", 
"<span class=\"comment\"> * be disabled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_enabled\">netlbl_enabled</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* At some point we probably want to expose this mechanism to the user</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as well so that admins can toggle NetLabel regardless of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * configuration */</span>", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#netlabel_mgmt_protocount\">netlabel_mgmt_protocount</a>) &gt; 0);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_sock_setattr - Label a socket using the correct protocol</span>", 
"<span class=\"comment\"> * @sk: the socket to label</span>", 
"<span class=\"comment\"> * @family: protocol family</span>", 
"<span class=\"comment\"> * @secattr: the security attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Attach the correct label to the given socket using the security attributes</span>", 
"<span class=\"comment\"> * specified in @secattr.  This function requires exclusive access to @sk,</span>", 
"<span class=\"comment\"> * which means it either needs to be in the process of being created or locked.</span>", 
"<span class=\"comment\"> * Returns zero on success, -EDESTADDRREQ if the domain is configured to use</span>", 
"<span class=\"comment\"> * network address selectors (can't blindly label the socket), and negative</span>", 
"<span class=\"comment\"> * values on all other failures.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_sock_setattr\">netlbl_sock_setattr</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_dom_map\">netlbl_dom_map</a> *<a class=\"id\" href=\"#dom_entry\">dom_entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dom_entry\">dom_entry</a> = <a class=\"id\" href=\"#netlbl_domhsh_getentry\">netlbl_domhsh_getentry</a>(<a class=\"id\" href=\"#secattr\">secattr</a>-><a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dom_entry\">dom_entry</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#socket_setattr_return\">socket_setattr_return</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#dom_entry\">dom_entry</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NETLBL_NLTYPE_ADDRSELECT\">NETLBL_NLTYPE_ADDRSELECT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#EDESTADDRREQ\">EDESTADDRREQ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV4\">NETLBL_NLTYPE_CIPSOV4</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#cipso_v4_sock_setattr\">cipso_v4_sock_setattr</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dom_entry\">dom_entry</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#cipsov4\">cipsov4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED\">NETLBL_NLTYPE_UNLABELED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* since we don't support any IPv6 labeling protocols right</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * now we can optimize everything away until we do */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* IPv6 */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#socket_setattr_return\">socket_setattr_return</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_sock_delattr - Delete all the NetLabel labels on a socket</span>", 
"<span class=\"comment\"> * @sk: the socket</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Remove all the NetLabel labeling from @sk.  The caller is responsible for</span>", 
"<span class=\"comment\"> * ensuring that @sk is locked.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#netlbl_sock_delattr\">netlbl_sock_delattr</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cipso_v4_sock_delattr\">cipso_v4_sock_delattr</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_sock_getattr - Determine the security attributes of a sock</span>", 
"<span class=\"comment\"> * @sk: the sock</span>", 
"<span class=\"comment\"> * @secattr: the security attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Examines the given sock to see if any NetLabel style labeling has been</span>", 
"<span class=\"comment\"> * applied to the sock, if so it parses the socket label and returns the</span>", 
"<span class=\"comment\"> * security attributes in @secattr.  Returns zero on success, negative values</span>", 
"<span class=\"comment\"> * on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_sock_getattr\">netlbl_sock_getattr</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#cipso_v4_sock_getattr\">cipso_v4_sock_getattr</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOMSG\">ENOMSG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* IPv6 */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_conn_setattr - Label a connected socket using the correct protocol</span>", 
"<span class=\"comment\"> * @sk: the socket to label</span>", 
"<span class=\"comment\"> * @addr: the destination address</span>", 
"<span class=\"comment\"> * @secattr: the security attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Attach the correct label to the given connected socket using the security</span>", 
"<span class=\"comment\"> * attributes specified in @secattr.  The caller is responsible for ensuring</span>", 
"<span class=\"comment\"> * that @sk is locked.  Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_conn_setattr\">netlbl_conn_setattr</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *<a class=\"id\" href=\"#addr4\">addr4</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_domaddr4_map\">netlbl_domaddr4_map</a> *<a class=\"id\" href=\"#af4_entry\">af4_entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr4\">addr4</a> = (struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#af4_entry\">af4_entry</a> = <a class=\"id\" href=\"#netlbl_domhsh_getentry_af4\">netlbl_domhsh_getentry_af4</a>(<a class=\"id\" href=\"#secattr\">secattr</a>-><a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#addr4\">addr4</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#af4_entry\">af4_entry</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#conn_setattr_return\">conn_setattr_return</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#af4_entry\">af4_entry</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV4\">NETLBL_NLTYPE_CIPSOV4</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#cipso_v4_sock_setattr\">cipso_v4_sock_setattr</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#af4_entry\">af4_entry</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#cipsov4\">cipsov4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED\">NETLBL_NLTYPE_UNLABELED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* just delete the protocols we support for right now</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * but we could remove other protocols if needed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cipso_v4_sock_delattr\">cipso_v4_sock_delattr</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* since we don't support any IPv6 labeling protocols right</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * now we can optimize everything away until we do */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* IPv6 */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#conn_setattr_return\">conn_setattr_return</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_req_setattr - Label a request socket using the correct protocol</span>", 
"<span class=\"comment\"> * @req: the request socket to label</span>", 
"<span class=\"comment\"> * @secattr: the security attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Attach the correct label to the given socket using the security attributes</span>", 
"<span class=\"comment\"> * specified in @secattr.  Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_req_setattr\">netlbl_req_setattr</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_dom_map\">netlbl_dom_map</a> *<a class=\"id\" href=\"#dom_entry\">dom_entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_domaddr4_map\">netlbl_domaddr4_map</a> *<a class=\"id\" href=\"#af4_entry\">af4_entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#proto_type\">proto_type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cipso_v4_doi\">cipso_v4_doi</a> *<a class=\"id\" href=\"#proto_cv4\">proto_cv4</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dom_entry\">dom_entry</a> = <a class=\"id\" href=\"#netlbl_domhsh_getentry\">netlbl_domhsh_getentry</a>(<a class=\"id\" href=\"#secattr\">secattr</a>-><a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dom_entry\">dom_entry</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#req_setattr_return\">req_setattr_return</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dom_entry\">dom_entry</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#NETLBL_NLTYPE_ADDRSELECT\">NETLBL_NLTYPE_ADDRSELECT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#req_inet\">req_inet</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#af4_entry\">af4_entry</a> = <a class=\"id\" href=\"#netlbl_domhsh_getentry_af4\">netlbl_domhsh_getentry_af4</a>(<a class=\"id\" href=\"#secattr\">secattr</a>-><a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#req_inet\">req_inet</a>-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#af4_entry\">af4_entry</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#req_setattr_return\">req_setattr_return</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proto_type\">proto_type</a> = <a class=\"id\" href=\"#af4_entry\">af4_entry</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proto_cv4\">proto_cv4</a> = <a class=\"id\" href=\"#af4_entry\">af4_entry</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#cipsov4\">cipsov4</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proto_type\">proto_type</a> = <a class=\"id\" href=\"#dom_entry\">dom_entry</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proto_cv4\">proto_cv4</a> = <a class=\"id\" href=\"#dom_entry\">dom_entry</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#cipsov4\">cipsov4</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#proto_type\">proto_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV4\">NETLBL_NLTYPE_CIPSOV4</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#cipso_v4_req_setattr\">cipso_v4_req_setattr</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#proto_cv4\">proto_cv4</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED\">NETLBL_NLTYPE_UNLABELED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* just delete the protocols we support for right now</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * but we could remove other protocols if needed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cipso_v4_req_delattr\">cipso_v4_req_delattr</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* since we don't support any IPv6 labeling protocols right</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * now we can optimize everything away until we do */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* IPv6 */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#req_setattr_return\">req_setattr_return</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\">* netlbl_req_delattr - Delete all the NetLabel labels on a socket</span>", 
"<span class=\"comment\">* @req: the socket</span>", 
"<span class=\"comment\">*</span>", 
"<span class=\"comment\">* Description:</span>", 
"<span class=\"comment\">* Remove all the NetLabel labeling from @req.</span>", 
"<span class=\"comment\">*</span>", 
"<span class=\"comment\">*/</span>", 
"void <a class=\"id\" href=\"#netlbl_req_delattr\">netlbl_req_delattr</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cipso_v4_req_delattr\">cipso_v4_req_delattr</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_skbuff_setattr - Label a packet using the correct protocol</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @family: protocol family</span>", 
"<span class=\"comment\"> * @secattr: the security attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Attach the correct label to the given packet using the security attributes</span>", 
"<span class=\"comment\"> * specified in @secattr.  Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_skbuff_setattr\">netlbl_skbuff_setattr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#hdr4\">hdr4</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_domaddr4_map\">netlbl_domaddr4_map</a> *<a class=\"id\" href=\"#af4_entry\">af4_entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr4\">hdr4</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#af4_entry\">af4_entry</a> = <a class=\"id\" href=\"#netlbl_domhsh_getentry_af4\">netlbl_domhsh_getentry_af4</a>(<a class=\"id\" href=\"#secattr\">secattr</a>-><a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#hdr4\">hdr4</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#af4_entry\">af4_entry</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#skbuff_setattr_return\">skbuff_setattr_return</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#af4_entry\">af4_entry</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV4\">NETLBL_NLTYPE_CIPSOV4</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#cipso_v4_skbuff_setattr\">cipso_v4_skbuff_setattr</a>(<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#af4_entry\">af4_entry</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#cipsov4\">cipsov4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED\">NETLBL_NLTYPE_UNLABELED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* just delete the protocols we support for right now</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * but we could remove other protocols if needed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#cipso_v4_skbuff_delattr\">cipso_v4_skbuff_delattr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* since we don't support any IPv6 labeling protocols right</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * now we can optimize everything away until we do */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* IPv6 */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#skbuff_setattr_return\">skbuff_setattr_return</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_skbuff_getattr - Determine the security attributes of a packet</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @family: protocol family</span>", 
"<span class=\"comment\"> * @secattr: the security attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Examines the given packet to see if a recognized form of packet labeling</span>", 
"<span class=\"comment\"> * is present, if so it parses the packet label and returns the security</span>", 
"<span class=\"comment\"> * attributes in @secattr.  Returns zero on success, negative values on</span>", 
"<span class=\"comment\"> * failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_skbuff_getattr\">netlbl_skbuff_getattr</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#CIPSO_V4_OPTEXIST\">CIPSO_V4_OPTEXIST</a>(<a class=\"id\" href=\"#skb\">skb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cipso_v4_skbuff_getattr\">cipso_v4_skbuff_getattr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#secattr\">secattr</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* IPv6 */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netlbl_unlabel_getattr\">netlbl_unlabel_getattr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_skbuff_err - Handle a LSM error on a sk_buff</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @error: the error code</span>", 
"<span class=\"comment\"> * @gateway: true if host is acting as a gateway, false otherwise</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Deal with a LSM problem when handling the packet in @skb, typically this is</span>", 
"<span class=\"comment\"> * a permission denied problem (-EACCES).  The correct action is determined</span>", 
"<span class=\"comment\"> * according to the packet's labeling protocol.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#netlbl_skbuff_err\">netlbl_skbuff_err</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#error\">error</a>, int <a class=\"id\" href=\"#gateway\">gateway</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CIPSO_V4_OPTEXIST\">CIPSO_V4_OPTEXIST</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cipso_v4_error\">cipso_v4_error</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#gateway\">gateway</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_cache_invalidate - Invalidate all of the NetLabel protocol caches</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * For all of the NetLabel protocols that support some form of label mapping</span>", 
"<span class=\"comment\"> * cache, invalidate the cache.  Returns zero on success, negative values on</span>", 
"<span class=\"comment\"> * error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#netlbl_cache_invalidate\">netlbl_cache_invalidate</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cipso_v4_cache_invalidate\">cipso_v4_cache_invalidate</a>();", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_cache_add - Add an entry to a NetLabel protocol cache</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @secattr: the packet's security attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Add the LSM security attributes for the given packet to the underlying</span>", 
"<span class=\"comment\"> * NetLabel protocol's label mapping cache.  Returns zero on success, negative</span>", 
"<span class=\"comment\"> * values on error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlbl_cache_add\">netlbl_cache_add</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#secattr\">secattr</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NETLBL_SECATTR_CACHE\">NETLBL_SECATTR_CACHE</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMSG\">ENOMSG</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CIPSO_V4_OPTEXIST\">CIPSO_V4_OPTEXIST</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cipso_v4_cache_add\">cipso_v4_cache_add</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMSG\">ENOMSG</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Protocol Engine Functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_audit_start - Start an audit message</span>", 
"<span class=\"comment\"> * @type: audit message type</span>", 
"<span class=\"comment\"> * @audit_info: NetLabel audit information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Start an audit message using the type specified in @type and fill the audit</span>", 
"<span class=\"comment\"> * message with some fields common to all NetLabel audit messages.  This</span>", 
"<span class=\"comment\"> * function should only be used by protocol engines, not LSMs.  Returns a</span>", 
"<span class=\"comment\"> * pointer to the audit buffer on success, NULL on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#netlbl_audit_start\">netlbl_audit_start</a>(int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_audit\">netlbl_audit</a> *<a class=\"id\" href=\"#audit_info\">audit_info</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netlbl_audit_start_common\">netlbl_audit_start_common</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#audit_info\">audit_info</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Setup Functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_init - Initialize NetLabel</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Perform the required NetLabel initialization before first use.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#netlbl_init\">netlbl_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"NetLabel: Initializing\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"NetLabel:  domain hash size = %u\\n\",", 
"<span class=\"ts\"/>       (1 << <a class=\"id\" href=\"#NETLBL_DOMHSH_BITSIZE\">NETLBL_DOMHSH_BITSIZE</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"NetLabel:  protocols =\"", 
"<span class=\"ts\"/>       \" UNLABELED\"", 
"<span class=\"ts\"/>       \" CIPSOv4\"", 
"<span class=\"ts\"/>       \"\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_domhsh_init\">netlbl_domhsh_init</a>(<a class=\"id\" href=\"#NETLBL_DOMHSH_BITSIZE\">NETLBL_DOMHSH_BITSIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_val\">ret_val</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#init_failure\">init_failure</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_unlabel_init\">netlbl_unlabel_init</a>(<a class=\"id\" href=\"#NETLBL_UNLHSH_BITSIZE\">NETLBL_UNLHSH_BITSIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_val\">ret_val</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#init_failure\">init_failure</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_netlink_init\">netlbl_netlink_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_val\">ret_val</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#init_failure\">init_failure</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_val\">ret_val</a> = <a class=\"id\" href=\"#netlbl_unlabel_defconf\">netlbl_unlabel_defconf</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_val\">ret_val</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#init_failure\">init_failure</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"NetLabel:  unlabeled traffic allowed by default\\n\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#init_failure\">init_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"NetLabel: failed to initialize properly (%d)\\n\", <a class=\"id\" href=\"#ret_val\">ret_val</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#netlbl_init\">netlbl_init</a>);", 
];
xr_frag_insert('l/92/d71a531bd3927b7ce9c9458a45d6cad0416607.xr', __xr_tmp);
