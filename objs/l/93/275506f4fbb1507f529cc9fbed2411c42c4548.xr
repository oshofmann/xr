var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_FD_H\">_LINUX_FD_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_FD_H\">_LINUX_FD_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioctl\">ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* New file layout: Now the ioctl definitions immediately follow the</span>", 
"<span class=\"comment\"> * definitions of the structures that they use */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Geometry</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#floppy_struct\">floppy_struct</a> {", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* nr of sectors total */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sect\">sect</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sectors per track */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* nr of heads */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#track\">track</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* nr of tracks */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stretch\">stretch</a>;<span class=\"ts\"/><span class=\"comment\">/* bit 0 !=0 means double track steps */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bit 1 != 0 means swap sides */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bits 2..9 give the first sector */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  number (the LSB is flipped) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_STRETCH\">FD_STRETCH</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_SWAPSIDES\">FD_SWAPSIDES</a> 2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_ZEROBASED\">FD_ZEROBASED</a> 4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_SECTBASEMASK\">FD_SECTBASEMASK</a> 0x3FC", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_MKSECTBASE\">FD_MKSECTBASE</a>(<a class=\"id\" href=\"#s\">s</a>) (((<a class=\"id\" href=\"#s\">s</a>) ^ 1) << 2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_SECTBASE\">FD_SECTBASE</a>(<a class=\"id\" href=\"#floppy\">floppy</a>) ((((<a class=\"id\" href=\"#floppy\">floppy</a>)-><a class=\"id\" href=\"#stretch\">stretch</a> &amp; <a class=\"id\" href=\"#FD_SECTBASEMASK\">FD_SECTBASEMASK</a>) >> 2) ^ 1)", 
"", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#gap\">gap</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* gap1 size */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rate\">rate</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* data rate. |= 0x40 for perpendicular */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_2M\">FD_2M</a> 0x4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_SIZECODEMASK\">FD_SIZECODEMASK</a> 0x38", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_SIZECODE\">FD_SIZECODE</a>(<a class=\"id\" href=\"#floppy\">floppy</a>) (((((<a class=\"id\" href=\"#floppy\">floppy</a>)-><a class=\"id\" href=\"#rate\">rate</a>&amp;<a class=\"id\" href=\"#FD_SIZECODEMASK\">FD_SIZECODEMASK</a>)>> 3)+ 2) %8)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_SECTSIZE\">FD_SECTSIZE</a>(<a class=\"id\" href=\"#floppy\">floppy</a>) ( (<a class=\"id\" href=\"#floppy\">floppy</a>)-><a class=\"id\" href=\"#rate\">rate</a> &amp; <a class=\"id\" href=\"#FD_2M\">FD_2M</a> ? \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     512 : 128 << <a class=\"id\" href=\"#FD_SIZECODE\">FD_SIZECODE</a>(<a class=\"id\" href=\"#floppy\">floppy</a>) )", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_PERP\">FD_PERP</a> 0x40", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spec1\">spec1</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* stepping rate, head unload time */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fmt_gap\">fmt_gap</a>;<span class=\"ts\"/><span class=\"comment\">/* gap2 size */</span>", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>* <a class=\"id\" href=\"#name\">name</a>; <span class=\"comment\">/* used only for predefined formats */</span>", 
"};", 
"", 
"", 
"<span class=\"comment\">/* commands needing write access have 0x40 set */</span>", 
"<span class=\"comment\">/* commands needing super user access have 0x80 set */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDCLRPRM\">FDCLRPRM</a> <a class=\"id\" href=\"#_IO\">_IO</a>(2, 0x41)", 
"<span class=\"comment\">/* clear user-defined parameters */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDSETPRM\">FDSETPRM</a> <a class=\"id\" href=\"#_IOW\">_IOW</a>(2, 0x42, struct <a class=\"id\" href=\"#floppy_struct\">floppy_struct</a>) ", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDSETMEDIAPRM\">FDSETMEDIAPRM</a> <a class=\"id\" href=\"#FDSETPRM\">FDSETPRM</a>", 
"<span class=\"comment\">/* set user-defined parameters for current media */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDDEFPRM\">FDDEFPRM</a> <a class=\"id\" href=\"#_IOW\">_IOW</a>(2, 0x43, struct <a class=\"id\" href=\"#floppy_struct\">floppy_struct</a>) ", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDGETPRM\">FDGETPRM</a> <a class=\"id\" href=\"#_IOR\">_IOR</a>(2, 0x04, struct <a class=\"id\" href=\"#floppy_struct\">floppy_struct</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDDEFMEDIAPRM\">FDDEFMEDIAPRM</a> <a class=\"id\" href=\"#FDDEFPRM\">FDDEFPRM</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDGETMEDIAPRM\">FDGETMEDIAPRM</a> <a class=\"id\" href=\"#FDGETPRM\">FDGETPRM</a>", 
"<span class=\"comment\">/* set/get disk parameters */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#FDMSGON\">FDMSGON</a>  <a class=\"id\" href=\"#_IO\">_IO</a>(2,0x45)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#FDMSGOFF\">FDMSGOFF</a> <a class=\"id\" href=\"#_IO\">_IO</a>(2,0x46)", 
"<span class=\"comment\">/* issue/don't issue kernel messages on media type change */</span>", 
"", 
"", 
"<span class=\"comment\">/* </span>", 
"<span class=\"comment\"> * Formatting (obsolete)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_FILL_BYTE\">FD_FILL_BYTE</a> 0xF6 <span class=\"comment\">/* format fill byte. */</span>", 
"", 
"struct <a class=\"id\" href=\"#format_descr\">format_descr</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#device\">device</a>,<a class=\"id\" href=\"#head\">head</a>,<a class=\"id\" href=\"#track\">track</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDFMTBEG\">FDFMTBEG</a> <a class=\"id\" href=\"#_IO\">_IO</a>(2,0x47)", 
"<span class=\"comment\">/* begin formatting a disk */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#FDFMTTRK\">FDFMTTRK</a> <a class=\"id\" href=\"#_IOW\">_IOW</a>(2,0x48, struct <a class=\"id\" href=\"#format_descr\">format_descr</a>)", 
"<span class=\"comment\">/* format the specified track */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDFMTEND\">FDFMTEND</a> <a class=\"id\" href=\"#_IO\">_IO</a>(2,0x49)", 
"<span class=\"comment\">/* end formatting a disk */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Error thresholds</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#floppy_max_errors\">floppy_max_errors</a> {", 
"<span class=\"ts\"/>unsigned int", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#abort\">abort</a>,      <span class=\"comment\">/* number of errors to be reached before aborting */</span>", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#read_track\">read_track</a>, <span class=\"comment\">/* maximal number of errors permitted to read an</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       * entire track at once */</span>", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#reset\">reset</a>,      <span class=\"comment\">/* maximal number of errors before a reset is tried */</span>", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#recal\">recal</a>,      <span class=\"comment\">/* maximal number of errors before a recalibrate is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       * tried */</span>", 
"", 
"<span class=\"ts\"/>  <span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   * Threshold for reporting FDC errors to the console.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   * Setting this to zero may flood your screen when using</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   * ultra cheap floppies ;-)</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   */</span>", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#reporting\">reporting</a>;", 
"", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDSETEMSGTRESH\">FDSETEMSGTRESH</a><span class=\"ts\"/><a class=\"id\" href=\"#_IO\">_IO</a>(2,0x4a)", 
"<span class=\"comment\">/* set fdc error reporting threshold */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDFLUSH\">FDFLUSH</a>  <a class=\"id\" href=\"#_IO\">_IO</a>(2,0x4b)", 
"<span class=\"comment\">/* flush buffers for media; either for verifying media, or for</span>", 
"<span class=\"comment\"> * handling a media change without closing the file descriptor */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDSETMAXERRS\">FDSETMAXERRS</a> <a class=\"id\" href=\"#_IOW\">_IOW</a>(2, 0x4c, struct <a class=\"id\" href=\"#floppy_max_errors\">floppy_max_errors</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDGETMAXERRS\">FDGETMAXERRS</a> <a class=\"id\" href=\"#_IOR\">_IOR</a>(2, 0x0e, struct <a class=\"id\" href=\"#floppy_max_errors\">floppy_max_errors</a>)", 
"<span class=\"comment\">/* set/get abortion and read_track threshold. See also floppy_drive_params</span>", 
"<span class=\"comment\"> * structure */</span>", 
"", 
"", 
"typedef char <a class=\"id\" href=\"#floppy_drive_name\">floppy_drive_name</a>[16];", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDGETDRVTYP\">FDGETDRVTYP</a> <a class=\"id\" href=\"#_IOR\">_IOR</a>(2, 0x0f, <a class=\"id\" href=\"#floppy_drive_name\">floppy_drive_name</a>)", 
"<span class=\"comment\">/* get drive type: 5 1/4 or 3 1/2 */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Drive parameters (user modifiable)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#floppy_drive_params\">floppy_drive_params</a> {", 
"<span class=\"ts\"/>signed char <a class=\"id\" href=\"#cmos\">cmos</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CMOS type */</span>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* Spec2 is (HLD&lt;&lt;1 | ND), where HLD is head load time (1=2ms, 2=4 ms </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * etc) and ND is set means no DMA. Hardcoded to 6 (HLD=6ms, use DMA).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_dtr\">max_dtr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Step rate, usec */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#hlt\">hlt</a>;     <span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Head load/settle time, msec */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#hut\">hut</a>;     <span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Head unload time (remnant of </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 8\" drives) */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#srt\">srt</a>;     <span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Step rate, usec */</span>", 
"", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#spinup\">spinup</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* time needed for spinup (expressed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in jiffies) */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#spindown\">spindown</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* timeout needed for spindown */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#spindown_offset\">spindown_offset</a>;<span class=\"ts\"/><span class=\"comment\">/* decides in which position the disk</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * will stop */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#select_delay\">select_delay</a>;<span class=\"ts\"/><span class=\"comment\">/* delay to wait after select */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#rps\">rps</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* rotations per second */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#tracks\">tracks</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* maximum number of tracks */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#timeout\">timeout</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* timeout for interrupt requests */</span>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#interleave_sect\">interleave_sect</a>;<span class=\"ts\"/><span class=\"comment\">/* if there are more sectors, use </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * interleave */</span>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#floppy_max_errors\">floppy_max_errors</a> <a class=\"id\" href=\"#max_errors\">max_errors</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* various flags, including ftd_msg */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Announce successful media type detection and media information loss after</span>", 
"<span class=\"comment\"> * disk changes.</span>", 
"<span class=\"comment\"> * Also used to enable/disable printing of overrun warnings.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTD_MSG\">FTD_MSG</a> 0x10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_BROKEN_DCL\">FD_BROKEN_DCL</a> 0x20", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_DEBUG\">FD_DEBUG</a> 0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_SILENT_DCL_CLEAR\">FD_SILENT_DCL_CLEAR</a> 0x4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_INVERTED_DCL\">FD_INVERTED_DCL</a> 0x80 <span class=\"comment\">/* must be 0x80, because of hardware </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>considerations */</span>", 
"", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#read_track\">read_track</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* use readtrack during probing? */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Auto-detection. Each drive type has eight formats which are</span>", 
"<span class=\"comment\"> * used in succession to try to read the disk. If the FDC cannot lock onto</span>", 
"<span class=\"comment\"> * the disk, the next format is tried. This uses the variable 'probing'.</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/>short <a class=\"id\" href=\"#autodetect\">autodetect</a>[8];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* autodetected formats */</span>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#checkfreq\">checkfreq</a>; <span class=\"comment\">/* how often should the drive be checked for disk </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* changes */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#native_format\">native_format</a>; <span class=\"comment\">/* native format of this drive */</span>", 
"};", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_NEED_TWADDLE_BIT\">FD_NEED_TWADDLE_BIT</a>,<span class=\"ts\"/><span class=\"comment\">/* more magic */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_VERIFY_BIT\">FD_VERIFY_BIT</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* inquire for write protection */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_DISK_NEWCHANGE_BIT\">FD_DISK_NEWCHANGE_BIT</a>,<span class=\"ts\"/><span class=\"comment\">/* change detected, and no action undertaken yet</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to clear media change status */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_UNUSED_BIT\">FD_UNUSED_BIT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_DISK_CHANGED_BIT\">FD_DISK_CHANGED_BIT</a>,<span class=\"ts\"/><span class=\"comment\">/* disk has been changed since last i/o */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_DISK_WRITABLE_BIT\">FD_DISK_WRITABLE_BIT</a><span class=\"ts\"/><span class=\"comment\">/* disk is writable */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDSETDRVPRM\">FDSETDRVPRM</a> <a class=\"id\" href=\"#_IOW\">_IOW</a>(2, 0x90, struct <a class=\"id\" href=\"#floppy_drive_params\">floppy_drive_params</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDGETDRVPRM\">FDGETDRVPRM</a> <a class=\"id\" href=\"#_IOR\">_IOR</a>(2, 0x11, struct <a class=\"id\" href=\"#floppy_drive_params\">floppy_drive_params</a>)", 
"<span class=\"comment\">/* set/get drive parameters */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Current drive state (not directly modifiable by user, readonly)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#floppy_drive_struct\">floppy_drive_struct</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"comment\">/* values for these flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_NEED_TWADDLE\">FD_NEED_TWADDLE</a> (1 << <a class=\"id\" href=\"#FD_NEED_TWADDLE_BIT\">FD_NEED_TWADDLE_BIT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_VERIFY\">FD_VERIFY</a> (1 << <a class=\"id\" href=\"#FD_VERIFY_BIT\">FD_VERIFY_BIT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_DISK_NEWCHANGE\">FD_DISK_NEWCHANGE</a> (1 << <a class=\"id\" href=\"#FD_DISK_NEWCHANGE_BIT\">FD_DISK_NEWCHANGE_BIT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_DISK_CHANGED\">FD_DISK_CHANGED</a> (1 << <a class=\"id\" href=\"#FD_DISK_CHANGED_BIT\">FD_DISK_CHANGED_BIT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_DISK_WRITABLE\">FD_DISK_WRITABLE</a> (1 << <a class=\"id\" href=\"#FD_DISK_WRITABLE_BIT\">FD_DISK_WRITABLE_BIT</a>)", 
"", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#spinup_date\">spinup_date</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#select_date\">select_date</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#first_read_date\">first_read_date</a>;", 
"<span class=\"ts\"/>short <a class=\"id\" href=\"#probed_format\">probed_format</a>;", 
"<span class=\"ts\"/>short <a class=\"id\" href=\"#track\">track</a>; <span class=\"comment\">/* current track */</span>", 
"<span class=\"ts\"/>short <a class=\"id\" href=\"#maxblock\">maxblock</a>; <span class=\"comment\">/* id of highest block read */</span>", 
"<span class=\"ts\"/>short <a class=\"id\" href=\"#maxtrack\">maxtrack</a>; <span class=\"comment\">/* id of highest half track read */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#generation\">generation</a>; <span class=\"comment\">/* how many diskchanges? */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * (User-provided) media information is _not_ discarded after a media change</span>", 
"<span class=\"comment\"> * if the corresponding keep_data flag is non-zero. Positive values are</span>", 
"<span class=\"comment\"> * decremented after each probe.</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#keep_data\">keep_data</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* Prevent \"aliased\" accesses. */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fd_ref\">fd_ref</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fd_device\">fd_device</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_checked\">last_checked</a>; <span class=\"comment\">/* when was the drive last checked for a disk </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   * change? */</span>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#dmabuf\">dmabuf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bufblocks\">bufblocks</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDGETDRVSTAT\">FDGETDRVSTAT</a> <a class=\"id\" href=\"#_IOR\">_IOR</a>(2, 0x12, struct <a class=\"id\" href=\"#floppy_drive_struct\">floppy_drive_struct</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDPOLLDRVSTAT\">FDPOLLDRVSTAT</a> <a class=\"id\" href=\"#_IOR\">_IOR</a>(2, 0x13, struct <a class=\"id\" href=\"#floppy_drive_struct\">floppy_drive_struct</a>)", 
"<span class=\"comment\">/* get drive state: GET returns the cached state, POLL polls for new state */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * reset FDC</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#reset_mode\">reset_mode</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_RESET_IF_NEEDED\">FD_RESET_IF_NEEDED</a>,<span class=\"ts\"/><span class=\"comment\">/* reset only if the reset flags is set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_RESET_IF_RAWCMD\">FD_RESET_IF_RAWCMD</a>,<span class=\"ts\"/><span class=\"comment\">/* obsolete */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_RESET_ALWAYS\">FD_RESET_ALWAYS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reset always */</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDRESET\">FDRESET</a> <a class=\"id\" href=\"#_IO\">_IO</a>(2, 0x54)", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * FDC state</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#floppy_fdc_state\">floppy_fdc_state</a> {<span class=\"ts\"/>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#spec1\">spec1</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* spec1 value last used */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#spec2\">spec2</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* spec2 value last used */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dtr\">dtr</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#version\">version</a>;<span class=\"ts\"/><span class=\"comment\">/* FDC version code */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#dor\">dor</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#address\">address</a>;<span class=\"ts\"/><span class=\"comment\">/* io address */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#rawcmd\">rawcmd</a>:2;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reset\">reset</a>:1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#need_configure\">need_configure</a>:1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#perp_mode\">perp_mode</a>:2;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#has_fifo\">has_fifo</a>:1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#driver_version\">driver_version</a>;<span class=\"ts\"/><span class=\"comment\">/* version code for floppy driver */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_DRIVER_VERSION\">FD_DRIVER_VERSION</a> 0x100", 
"<span class=\"comment\">/* user programs using the floppy API should use floppy_fdc_state to</span>", 
"<span class=\"comment\"> * get the version number of the floppy driver that they are running</span>", 
"<span class=\"comment\"> * on. If this version number is bigger than the one compiled into the</span>", 
"<span class=\"comment\"> * user program (the FD_DRIVER_VERSION define), it should be prepared</span>", 
"<span class=\"comment\"> * to bigger structures</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#track\">track</a>[4];", 
"<span class=\"ts\"/><span class=\"comment\">/* Position of the heads of the 4 units attached to this FDC,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as stored on the FDC. In the future, the position as stored</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on the FDC might not agree with the actual physical</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * position of these drive heads. By allowing such</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * disagreement, it will be possible to reset the FDC without</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * incurring the expensive cost of repositioning all heads.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Right now, these positions are hard wired to 0. */</span>", 
"", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDGETFDCSTAT\">FDGETFDCSTAT</a> <a class=\"id\" href=\"#_IOR\">_IOR</a>(2, 0x15, struct <a class=\"id\" href=\"#floppy_fdc_state\">floppy_fdc_state</a>)", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Asynchronous Write error tracking</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#floppy_write_errors\">floppy_write_errors</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* Write error logging.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * These fields can be cleared with the FDWERRORCLR ioctl.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Only writes that were attempted but failed due to a physical media</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * error are logged.  write(2) calls that fail and return an error code</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to the user process are not counted.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#write_errors\">write_errors</a>;  <span class=\"comment\">/* number of physical write errors </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     * encountered */</span>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* position of first and last write errors */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#first_error_sector\">first_error_sector</a>;", 
"<span class=\"ts\"/>int           <a class=\"id\" href=\"#first_error_generation\">first_error_generation</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_error_sector\">last_error_sector</a>;", 
"<span class=\"ts\"/>int           <a class=\"id\" href=\"#last_error_generation\">last_error_generation</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#badness\">badness</a>; <span class=\"comment\">/* highest retry count for a read or write </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       * operation */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDWERRORCLR\">FDWERRORCLR</a>  <a class=\"id\" href=\"#_IO\">_IO</a>(2, 0x56)", 
"<span class=\"comment\">/* clear write error and badness information */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDWERRORGET\">FDWERRORGET</a>  <a class=\"id\" href=\"#_IOR\">_IOR</a>(2, 0x17, struct <a class=\"id\" href=\"#floppy_write_errors\">floppy_write_errors</a>)", 
"<span class=\"comment\">/* get write error and badness information */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Raw commands</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"comment\">/* new interface flag: now we can do them in batches */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDHAVEBATCHEDRAWCMD\">FDHAVEBATCHEDRAWCMD</a>", 
"", 
"struct <a class=\"id\" href=\"#floppy_raw_cmd\">floppy_raw_cmd</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_READ\">FD_RAW_READ</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_WRITE\">FD_RAW_WRITE</a> 2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_NO_MOTOR\">FD_RAW_NO_MOTOR</a> 4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_DISK_CHANGE\">FD_RAW_DISK_CHANGE</a> 4 <span class=\"comment\">/* out: disk change flag was set */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_INTR\">FD_RAW_INTR</a> 8    <span class=\"comment\">/* wait for an interrupt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_SPIN\">FD_RAW_SPIN</a> 0x10 <span class=\"comment\">/* spin up the disk for this command */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_NO_MOTOR_AFTER\">FD_RAW_NO_MOTOR_AFTER</a> 0x20 <span class=\"comment\">/* switch the motor off after command </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    * completion */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_NEED_DISK\">FD_RAW_NEED_DISK</a> 0x40  <span class=\"comment\">/* this command needs a disk to be present */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_NEED_SEEK\">FD_RAW_NEED_SEEK</a> 0x80  <span class=\"comment\">/* this command uses an implied seek (soft) */</span>", 
"", 
"<span class=\"comment\">/* more \"in\" flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_MORE\">FD_RAW_MORE</a> 0x100  <span class=\"comment\">/* more records follow */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_STOP_IF_FAILURE\">FD_RAW_STOP_IF_FAILURE</a> 0x200 <span class=\"comment\">/* stop if we encounter a failure */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_STOP_IF_SUCCESS\">FD_RAW_STOP_IF_SUCCESS</a> 0x400 <span class=\"comment\">/* stop if command successful */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_SOFTFAILURE\">FD_RAW_SOFTFAILURE</a> 0x800 <span class=\"comment\">/* consider the return value for failure</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  * detection too */</span>", 
"", 
"<span class=\"comment\">/* more \"out\" flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_FAILURE\">FD_RAW_FAILURE</a> 0x10000 <span class=\"comment\">/* command sent to fdc, fdc returned error */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FD_RAW_HARDFAILURE\">FD_RAW_HARDFAILURE</a> 0x20000 <span class=\"comment\">/* fdc had to be reset, or timed out */</span>", 
"", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#kernel_data\">kernel_data</a>; <span class=\"comment\">/* location of data buffer in the kernel */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#floppy_raw_cmd\">floppy_raw_cmd</a> *<a class=\"id\" href=\"#next\">next</a>; <span class=\"comment\">/* used for chaining of raw cmd's </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      * within the kernel */</span>", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#length\">length</a>; <span class=\"comment\">/* in: length of dma transfer. out: remaining bytes */</span>", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#phys_length\">phys_length</a>; <span class=\"comment\">/* physical length, if different from dma length */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#buffer_length\">buffer_length</a>; <span class=\"comment\">/* length of allocated buffer */</span>", 
"", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#rate\">rate</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#cmd_count\">cmd_count</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#cmd\">cmd</a>[16];", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#reply_count\">reply_count</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#reply\">reply</a>[16];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#track\">track</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#resultcode\">resultcode</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reserved1\">reserved1</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reserved2\">reserved2</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDRAWCMD\">FDRAWCMD</a> <a class=\"id\" href=\"#_IO\">_IO</a>(2, 0x58)", 
"<span class=\"comment\">/* send a raw command to the fdc. Structure size not included, because of</span>", 
"<span class=\"comment\"> * batches */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDTWADDLE\">FDTWADDLE</a> <a class=\"id\" href=\"#_IO\">_IO</a>(2, 0x59)", 
"<span class=\"comment\">/* flicker motor-on bit before reading a sector. Experimental */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDEJECT\">FDEJECT</a> <a class=\"id\" href=\"#_IO\">_IO</a>(2, 0x5a)", 
"<span class=\"comment\">/* eject the disk */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/93/275506f4fbb1507f529cc9fbed2411c42c4548.xr', __xr_tmp);
