var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a> || !<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>) &lt; <a class=\"id\" href=\"#avefreei\">avefreei</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#best_desc\">best_desc</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_blocks_count\">bg_free_blocks_count</a>) &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#best_desc\">best_desc</a>-><a class=\"id\" href=\"#bg_free_blocks_count\">bg_free_blocks_count</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_group\">best_group</a> = <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_desc\">best_desc</a> = <a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#best_group\">best_group</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Orlov's allocator for directories.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We always try to spread first-level directories.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If there are blockgroups with both free inodes and free blocks counts</span>", 
"<span class=\"comment\"> * not worse than average we return one with smallest directory count.</span>", 
"<span class=\"comment\"> * Otherwise we simply return a random group.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For the rest rules look so:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It's OK to put directory into a group unless</span>", 
"<span class=\"comment\"> * it has too many directories already (max_dirs) or</span>", 
"<span class=\"comment\"> * it has too few free inodes left (min_inodes) or</span>", 
"<span class=\"comment\"> * it has too few free blocks left (min_blocks) or</span>", 
"<span class=\"comment\"> * it's already running too large debt (max_debt).</span>", 
"<span class=\"comment\"> * Parent's group is preferred, if it doesn't satisfy these</span>", 
"<span class=\"comment\"> * conditions we search cyclically through the rest. If none</span>", 
"<span class=\"comment\"> * of the groups look good we just look for a group with more</span>", 
"<span class=\"comment\"> * free inodes than average (starting at parent's group).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Debt is incremented each time we allocate a directory and decremented</span>", 
"<span class=\"comment\"> * when we allocate an inode, within 0--255.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INODE_COST\">INODE_COST</a> 64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLOCK_COST\">BLOCK_COST</a> 256", 
"", 
"static int <a class=\"id\" href=\"#find_group_orlov\">find_group_orlov</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#parent_group\">parent_group</a> = <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#parent\">parent</a>)-><a class=\"id\" href=\"#i_block_group\">i_block_group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#inodes_per_group\">inodes_per_group</a> = <a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freei\">freei</a>, <a class=\"id\" href=\"#avefreei\">avefreei</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#freeb\">freeb</a>, <a class=\"id\" href=\"#avefreeb\">avefreeb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#blocks_per_dir\">blocks_per_dir</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ndirs\">ndirs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#max_debt\">max_debt</a>, <a class=\"id\" href=\"#max_dirs\">max_dirs</a>, <a class=\"id\" href=\"#min_inodes\">min_inodes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_grpblk_t\">ext3_grpblk_t</a> <a class=\"id\" href=\"#min_blocks\">min_blocks</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#group\">group</a> = -1, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_group_desc\">ext3_group_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freei\">freei</a> = <a class=\"id\" href=\"#percpu_counter_read_positive\">percpu_counter_read_positive</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avefreei\">avefreei</a> = <a class=\"id\" href=\"#freei\">freei</a> / <a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freeb\">freeb</a> = <a class=\"id\" href=\"#percpu_counter_read_positive\">percpu_counter_read_positive</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avefreeb\">avefreeb</a> = <a class=\"id\" href=\"#freeb\">freeb</a> / <a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndirs\">ndirs</a> = <a class=\"id\" href=\"#percpu_counter_read_positive\">percpu_counter_read_positive</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#parent\">parent</a> == <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#parent\">parent</a>)-><a class=\"id\" href=\"#i_flags\">i_flags</a> &amp; <a class=\"id\" href=\"#EXT3_TOPDIR_FL\">EXT3_TOPDIR_FL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#best_ndir\">best_ndir</a> = <a class=\"id\" href=\"#inodes_per_group\">inodes_per_group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#best_group\">best_group</a> = -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#group\">group</a>, sizeof(<a class=\"id\" href=\"#group\">group</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent_group\">parent_group</a> = (unsigned)<a class=\"id\" href=\"#group\">group</a> % <a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = (<a class=\"id\" href=\"#parent_group\">parent_group</a> + <a class=\"id\" href=\"#i\">i</a>) % <a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a> || !<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_used_dirs_count\">bg_used_dirs_count</a>) >= <a class=\"id\" href=\"#best_ndir\">best_ndir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>) &lt; <a class=\"id\" href=\"#avefreei\">avefreei</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_blocks_count\">bg_free_blocks_count</a>) &lt; <a class=\"id\" href=\"#avefreeb\">avefreeb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_group\">best_group</a> = <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_ndir\">best_ndir</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_used_dirs_count\">bg_used_dirs_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#best_group\">best_group</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#best_group\">best_group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fallback\">fallback</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocks_per_dir\">blocks_per_dir</a> = (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>) - <a class=\"id\" href=\"#freeb\">freeb</a>) / <a class=\"id\" href=\"#ndirs\">ndirs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_dirs\">max_dirs</a> = <a class=\"id\" href=\"#ndirs\">ndirs</a> / <a class=\"id\" href=\"#ngroups\">ngroups</a> + <a class=\"id\" href=\"#inodes_per_group\">inodes_per_group</a> / 16;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#min_inodes\">min_inodes</a> = <a class=\"id\" href=\"#avefreei\">avefreei</a> - <a class=\"id\" href=\"#inodes_per_group\">inodes_per_group</a> / 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#min_blocks\">min_blocks</a> = <a class=\"id\" href=\"#avefreeb\">avefreeb</a> - <a class=\"id\" href=\"#EXT3_BLOCKS_PER_GROUP\">EXT3_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) / 4;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_debt\">max_debt</a> = <a class=\"id\" href=\"#EXT3_BLOCKS_PER_GROUP\">EXT3_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) / <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#blocks_per_dir\">blocks_per_dir</a>, (<a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a>)<a class=\"id\" href=\"#BLOCK_COST\">BLOCK_COST</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_debt\">max_debt</a> * <a class=\"id\" href=\"#INODE_COST\">INODE_COST</a> &gt; <a class=\"id\" href=\"#inodes_per_group\">inodes_per_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_debt\">max_debt</a> = <a class=\"id\" href=\"#inodes_per_group\">inodes_per_group</a> / <a class=\"id\" href=\"#INODE_COST\">INODE_COST</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_debt\">max_debt</a> &gt; 255)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_debt\">max_debt</a> = 255;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_debt\">max_debt</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_debt\">max_debt</a> = 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = (<a class=\"id\" href=\"#parent_group\">parent_group</a> + <a class=\"id\" href=\"#i\">i</a>) % <a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a> || !<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_used_dirs_count\">bg_used_dirs_count</a>) >= <a class=\"id\" href=\"#max_dirs\">max_dirs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>) &lt; <a class=\"id\" href=\"#min_inodes\">min_inodes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_blocks_count\">bg_free_blocks_count</a>) &lt; <a class=\"id\" href=\"#min_blocks\">min_blocks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#fallback\">fallback</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = (<a class=\"id\" href=\"#parent_group\">parent_group</a> + <a class=\"id\" href=\"#i\">i</a>) % <a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a> || !<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>) >= <a class=\"id\" href=\"#avefreei\">avefreei</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#avefreei\">avefreei</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The free-inodes counter is approximate, and for really small</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * filesystems the above test can fail to find any blockgroups</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avefreei\">avefreei</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fallback\">fallback</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#find_group_other\">find_group_other</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#parent_group\">parent_group</a> = <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#parent\">parent</a>)-><a class=\"id\" href=\"#i_block_group\">i_block_group</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_group_desc\">ext3_group_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Try to place the inode in its parent directory</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#parent_group\">parent_group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a> && <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_blocks_count\">bg_free_blocks_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#group\">group</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We're going to place this inode in a different blockgroup from its</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * parent.  We want to cause files in a common directory to all land in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the same blockgroup.  But we want files which are in a different</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * directory which shares a blockgroup with our parent to land in a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * different blockgroup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So add our directory's i_ino into the starting point for the hash.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = (<a class=\"id\" href=\"#group\">group</a> + <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>) % <a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use a quadratic hash to find a group with a free inode and some free</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 1; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a>; <a class=\"id\" href=\"#i\">i</a> <<= 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> += <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#group\">group</a> >= <a class=\"id\" href=\"#ngroups\">ngroups</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> -= <a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a> && <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_blocks_count\">bg_free_blocks_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * That failed: try linear search for a free inode, even if that group</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * has no free blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#parent_group\">parent_group</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#group\">group</a> >= <a class=\"id\" href=\"#ngroups\">ngroups</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a> && <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * There are two policies for allocating an inode.  If the new inode is</span>", 
"<span class=\"comment\"> * a directory, then a forward search is made for a block group with both</span>", 
"<span class=\"comment\"> * free space and a low directory-to-inode ratio; if that fails, then of</span>", 
"<span class=\"comment\"> * the groups with above-average free space, that group with the fewest</span>", 
"<span class=\"comment\"> * directories already is chosen.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For other inodes, search forward from the parent directory's block</span>", 
"<span class=\"comment\"> * group to find a free inode.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext3_new_inode\">ext3_new_inode</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh2\">bh2</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ino\">ino</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_group_desc\">ext3_group_desc</a> * <a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> * <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_inode_info\">ext3_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cannot create files in a deleted directory */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a> || !<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EPERM\">EPERM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#new_inode\">new_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#mode\">mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#find_group_dir\">find_group_dir</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#find_group_orlov\">find_group_orlov</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#find_group_other\">find_group_other</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group\">group</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, &amp;<a class=\"id\" href=\"#bh2\">bh2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#read_inode_bitmap\">read_inode_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = 0;", 
"", 
"<a class=\"id\" href=\"#repeat_in_this_group\">repeat_in_this_group</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#ext3_find_next_zero_bit\">ext3_find_next_zero_bit</a>((unsigned long *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>), <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a> &lt; <a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>, \"get_write_access\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_get_write_access\">ext3_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext3_set_bit_atomic\">ext3_set_bit_atomic</a>(<a class=\"id\" href=\"#sb_bgl_lock\">sb_bgl_lock</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#group\">group</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we won it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"call ext3_journal_dirty_metadata\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_dirty_metadata\">ext3_journal_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#got\">got</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we lost it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_release_buffer\">journal_release_buffer</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#ino\">ino</a> &lt; <a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat_in_this_group\">repeat_in_this_group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This case is possible in concurrent environment.  It is very</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * rare.  We cannot repeat the find_group_xxx() call because</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that will simply return the same blockgroup, because the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * group descriptor metadata has not yet been updated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * So we just go onto the next blockgroup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#group\">group</a> == <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<a class=\"id\" href=\"#got\">got</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> += <a class=\"id\" href=\"#group\">group</a> * <a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) + 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a> &lt; <a class=\"id\" href=\"#EXT3_FIRST_INO\">EXT3_FIRST_INO</a>(<a class=\"id\" href=\"#sb\">sb</a>) || <a class=\"id\" href=\"#ino\">ino</a> &gt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a> (<a class=\"id\" href=\"#sb\">sb</a>, \"ext3_new_inode\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"reserved inode or inode > inodes count - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"block_group = %d, inode=%lu\", <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh2\">bh2</a>, \"get_write_access\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_get_write_access\">ext3_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh2\">bh2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#sb_bgl_lock\">sb_bgl_lock</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#group\">group</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>, -1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#mode\">mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_used_dirs_count\">bg_used_dirs_count</a>, 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#sb_bgl_lock\">sb_bgl_lock</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#group\">group</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh2\">bh2</a>, \"call ext3_journal_dirty_metadata\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_dirty_metadata\">ext3_journal_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh2\">bh2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_dec\">percpu_counter_dec</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#mode\">mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_inc\">percpu_counter_inc</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>);", 
"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = <a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_init_owner\">inode_init_owner</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a> = <a class=\"id\" href=\"#ino\">ino</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* This is the optimal IO size (for stat), not the fs block size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME_SEC\">CURRENT_TIME_SEC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>, 0, sizeof(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_dir_start_lookup\">i_dir_start_lookup</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_disksize\">i_disksize</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_mask_flags\">ext3_mask_flags</a>(<a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#dir\">dir</a>)-><a class=\"id\" href=\"#i_flags\">i_flags</a> &amp; <a class=\"id\" href=\"#EXT3_FL_INHERITED\">EXT3_FL_INHERITED</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXT3_FRAGMENTS\">EXT3_FRAGMENTS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_faddr\">i_faddr</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_frag_no\">i_frag_no</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_frag_size\">i_frag_size</a> = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_dir_acl\">i_dir_acl</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_dtime\">i_dtime</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_block_alloc_info\">i_block_alloc_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_block_group\">i_block_group</a> = <a class=\"id\" href=\"#group\">group</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_set_inode_flags\">ext3_set_inode_flags</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_DIRSYNC\">IS_DIRSYNC</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_sync\">h_sync</a> = 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#insert_inode_locked\">insert_inode_locked</a>(<a class=\"id\" href=\"#inode\">inode</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_drop\">fail_drop</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_next_gen_lock\">s_next_gen_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_next_generation\">s_next_generation</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_next_gen_lock\">s_next_gen_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_state_flags\">i_state_flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_set_inode_state\">ext3_set_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_STATE_NEW\">EXT3_STATE_NEW</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT3_INODE_SIZE\">EXT3_INODE_SIZE</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>) &gt; <a class=\"id\" href=\"#EXT3_GOOD_OLD_INODE_SIZE\">EXT3_GOOD_OLD_INODE_SIZE</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#ext3_inode\">ext3_inode</a>) - <a class=\"id\" href=\"#EXT3_GOOD_OLD_INODE_SIZE\">EXT3_GOOD_OLD_INODE_SIZE</a> : 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dquot_alloc_inode\">dquot_alloc_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_drop\">fail_drop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_init_acl\">ext3_init_acl</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_free_drop\">fail_free_drop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_init_security\">ext3_init_security</a>(<a class=\"id\" href=\"#handle\">handle</a>,<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_free_drop\">fail_free_drop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_mark_inode_dirty\">ext3_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_std_error\">ext3_std_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_free_drop\">fail_free_drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_debug\">ext3_debug</a>(\"allocating inode %lu\\n\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#really_out\">really_out</a>;", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_std_error\">ext3_std_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<a class=\"id\" href=\"#really_out\">really_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#fail_free_drop\">fail_free_drop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_inode\">dquot_free_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<a class=\"id\" href=\"#fail_drop\">fail_drop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_drop\">dquot_drop</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> |= <a class=\"id\" href=\"#S_NOQUOTA\">S_NOQUOTA</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_new_inode\">unlock_new_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Verify that we are loading a valid orphan from disk */</span>", 
"struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext3_orphan_get\">ext3_orphan_get</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, unsigned long <a class=\"id\" href=\"#ino\">ino</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_ino\">max_ino</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#block_group\">block_group</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Error cases - e2fsck has already cleaned up for us */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a> &gt; <a class=\"id\" href=\"#max_ino\">max_ino</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_warning\">ext3_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"bad orphan ino %lu!  e2fsck was run?\", <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#block_group\">block_group</a> = (<a class=\"id\" href=\"#ino\">ino</a> - 1) / <a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit\">bit</a> = (<a class=\"id\" href=\"#ino\">ino</a> - 1) % <a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#read_inode_bitmap\">read_inode_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_warning\">ext3_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"inode bitmap error for orphan %lu\", <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Having the inode bit set should be a 100% indicator that this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is a valid orphan (no e2fsck run on fs).  Orphans also include</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inodes that were being truncated, so we can't check i_nlink==0.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext3_test_bit\">ext3_test_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_orphan\">bad_orphan</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext3_iget\">ext3_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#iget_failed\">iget_failed</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the orphans has i_nlinks &gt; 0 then it should be able to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * truncated, otherwise it won't be removed from the orphan list</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * during processing and an infinite loop will result.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> && !<a class=\"id\" href=\"#ext3_can_truncate\">ext3_can_truncate</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_orphan\">bad_orphan</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#NEXT_ORPHAN\">NEXT_ORPHAN</a>(<a class=\"id\" href=\"#inode\">inode</a>) &gt; <a class=\"id\" href=\"#max_ino\">max_ino</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_orphan\">bad_orphan</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<a class=\"id\" href=\"#iget_failed\">iget_failed</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#bad_orphan\">bad_orphan</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_warning\">ext3_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"bad orphan inode %lu!  e2fsck was run?\", <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"ext3_test_bit(bit=%d, block=%llu) = %d\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#bit\">bit</a>, (unsigned long long)<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#ext3_test_bit\">ext3_test_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"inode=%p\\n\", <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"is_bad_inode(inode)=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#is_bad_inode\">is_bad_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"NEXT_ORPHAN(inode)=%u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#NEXT_ORPHAN\">NEXT_ORPHAN</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"max_ino=%lu\\n\", <a class=\"id\" href=\"#max_ino\">max_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"i_nlink=%u\\n\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Avoid freeing blocks if we got a bad deleted inode */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"unsigned long <a class=\"id\" href=\"#ext3_count_free_inodes\">ext3_count_free_inodes</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#desc_count\">desc_count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_group_desc\">ext3_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXT3FS_DEBUG\">EXT3FS_DEBUG</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bitmap_count\">bitmap_count</a>, <a class=\"id\" href=\"#x\">x</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc_count\">desc_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap_count\">bitmap_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc_count\">desc_count</a> += <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#read_inode_bitmap\">read_inode_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#ext3_count_free\">ext3_count_free</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>, <a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) / 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"group %d: stored = %d, counted = %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>), <a class=\"id\" href=\"#x\">x</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap_count\">bitmap_count</a> += <a class=\"id\" href=\"#x\">x</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"ext3_count_free_inodes: stored = %u, computed = %lu, %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_inodes_count\">s_free_inodes_count</a>), <a class=\"id\" href=\"#desc_count\">desc_count</a>, <a class=\"id\" href=\"#bitmap_count\">bitmap_count</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#desc_count\">desc_count</a>;", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc_count\">desc_count</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc_count\">desc_count</a> += <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_free_inodes_count\">bg_free_inodes_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#desc_count\">desc_count</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/* Called at mount-time, super-block is locked */</span>", 
"unsigned long <a class=\"id\" href=\"#ext3_count_dirs\">ext3_count_dirs</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_group_desc\">ext3_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_used_dirs_count\">bg_used_dirs_count</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
];
xr_frag_insert('l/93/bc3b14b53164ceaefb0cdb4ae40be0e26a4692.xr', __xr_tmp);
