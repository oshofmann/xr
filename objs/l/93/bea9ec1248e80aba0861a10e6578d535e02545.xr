var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__TRACE_STAT_H\">__TRACE_STAT_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__TRACE_STAT_H\">__TRACE_STAT_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If you want to provide a stat file (one-shot statistics), fill</span>", 
"<span class=\"comment\"> * an iterator with stat_start/stat_next and a stat_show callbacks.</span>", 
"<span class=\"comment\"> * The others callbacks are optional.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tracer_stat\">tracer_stat</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* The name of your stat file */</span>", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Iteration over statistic entries */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*(*<a class=\"id\" href=\"#stat_start\">stat_start</a>)(struct <a class=\"id\" href=\"#tracer_stat\">tracer_stat</a> *<a class=\"id\" href=\"#trace\">trace</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*(*<a class=\"id\" href=\"#stat_next\">stat_next</a>)(void *<a class=\"id\" href=\"#prev\">prev</a>, int <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Compare two entries for stats sorting */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#stat_cmp\">stat_cmp</a>)(void *<a class=\"id\" href=\"#p1\">p1</a>, void *<a class=\"id\" href=\"#p2\">p2</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Print a stat entry */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#stat_show\">stat_show</a>)(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Release an entry */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#stat_release\">stat_release</a>)(void *<a class=\"id\" href=\"#stat\">stat</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Print the headers of your stat entries */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#stat_headers\">stat_headers</a>)(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>);", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Destroy or create a stat file</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#register_stat_tracer\">register_stat_tracer</a>(struct <a class=\"id\" href=\"#tracer_stat\">tracer_stat</a> *<a class=\"id\" href=\"#trace\">trace</a>);", 
"extern void <a class=\"id\" href=\"#unregister_stat_tracer\">unregister_stat_tracer</a>(struct <a class=\"id\" href=\"#tracer_stat\">tracer_stat</a> *<a class=\"id\" href=\"#trace\">trace</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __TRACE_STAT_H */</span>", 
];
xr_frag_insert('l/93/bea9ec1248e80aba0861a10e6578d535e02545.xr', __xr_tmp);
