var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#trampoline\">trampoline</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_ACPI_SLEEP\">CONFIG_ACPI_SLEEP</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__trampinit\">__trampinit</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__trampinitdata\">__trampinitdata</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__trampinit\">__trampinit</a> <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__trampinitdata\">__trampinitdata</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* ready for x86_64 and x86 */</span>", 
"unsigned char *<a class=\"id\" href=\"#__trampinitdata\">__trampinitdata</a> <a class=\"id\" href=\"#trampoline_base\">trampoline_base</a>;", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_trampoline_memory\">reserve_trampoline_memory</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mem\">mem</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Has to be in very low memory so we can execute real-mode AP code. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mem\">mem</a> = <a class=\"id\" href=\"#find_e820_area\">find_e820_area</a>(0, 1<<20, <a class=\"id\" href=\"#TRAMPOLINE_SIZE\">TRAMPOLINE_SIZE</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mem\">mem</a> == -1L)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Cannot allocate trampoline\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trampoline_base\">trampoline_base</a> = <a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#mem\">mem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#mem\">mem</a>, <a class=\"id\" href=\"#mem\">mem</a> + <a class=\"id\" href=\"#TRAMPOLINE_SIZE\">TRAMPOLINE_SIZE</a>, \"TRAMPOLINE\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Currently trivial. Write the real-&gt;protected mode</span>", 
"<span class=\"comment\"> * bootstrap into the page concerned. The caller</span>", 
"<span class=\"comment\"> * has made sure it's suitably aligned.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned long <a class=\"id\" href=\"#__trampinit\">__trampinit</a> <a class=\"id\" href=\"#setup_trampoline\">setup_trampoline</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#trampoline_base\">trampoline_base</a>, <a class=\"id\" href=\"#trampoline_data\">trampoline_data</a>, <a class=\"id\" href=\"#TRAMPOLINE_SIZE\">TRAMPOLINE_SIZE</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#trampoline_base\">trampoline_base</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_trampoline_page_table\">setup_trampoline_page_table</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy kernel address range */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clone_pgd_range\">clone_pgd_range</a>(<a class=\"id\" href=\"#trampoline_pg_dir\">trampoline_pg_dir</a> + <a class=\"id\" href=\"#KERNEL_PGD_BOUNDARY\">KERNEL_PGD_BOUNDARY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a> + <a class=\"id\" href=\"#KERNEL_PGD_BOUNDARY\">KERNEL_PGD_BOUNDARY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERNEL_PGD_PTRS\">KERNEL_PGD_PTRS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize low mappings */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clone_pgd_range\">clone_pgd_range</a>(<a class=\"id\" href=\"#trampoline_pg_dir\">trampoline_pg_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a> + <a class=\"id\" href=\"#KERNEL_PGD_BOUNDARY\">KERNEL_PGD_BOUNDARY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_t\">min_t</a>(unsigned long, <a class=\"id\" href=\"#KERNEL_PGD_PTRS\">KERNEL_PGD_PTRS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#KERNEL_PGD_BOUNDARY\">KERNEL_PGD_BOUNDARY</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
];
xr_frag_insert('l/93/d59ff3958e7df7bef86489f0a288897eb570ec.xr', __xr_tmp);
