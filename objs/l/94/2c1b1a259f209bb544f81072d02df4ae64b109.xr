var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2001, 2002 Sistina Software (UK) Limited.</span>", 
"<span class=\"comment\"> * Copyright (C) 2004-2008 Red Hat, Inc. All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"dm.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"dm-uevent.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#moduleparam\">moduleparam</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkpg\">blkpg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mempool\">mempool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#idr\">idr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hdreg\">hdreg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#block\">block</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_MSG_PREFIX\">DM_MSG_PREFIX</a> \"core\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Cookies are numeric values sent with CHANGE and REMOVE</span>", 
"<span class=\"comment\"> * uevents while resuming, removing or renaming the device.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_COOKIE_ENV_VAR_NAME\">DM_COOKIE_ENV_VAR_NAME</a> \"DM_COOKIE\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_COOKIE_LENGTH\">DM_COOKIE_LENGTH</a> 24", 
"", 
"static const char *<a class=\"id\" href=\"#_name\">_name</a> = <a class=\"id\" href=\"#DM_NAME\">DM_NAME</a>;", 
"", 
"static unsigned int <a class=\"id\" href=\"#major\">major</a> = 0;", 
"static unsigned int <a class=\"id\" href=\"#_major\">_major</a> = 0;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For bio-based dm.</span>", 
"<span class=\"comment\"> * One of these is allocated per bio.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_io\">dm_io</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#io_count\">io_count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_time\">start_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#endio_lock\">endio_lock</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For bio-based dm.</span>", 
"<span class=\"comment\"> * One of these is allocated per target within a bio.  Hopefully</span>", 
"<span class=\"comment\"> * this will be simplified out one day.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_target_io\">dm_target_io</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io\">dm_io</a> *<a class=\"id\" href=\"#io\">io</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#ti\">ti</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#map_info\">map_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For request-based dm.</span>", 
"<span class=\"comment\"> * One of these is allocated per request.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_rq_target_io\">dm_rq_target_io</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#ti\">ti</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#orig\">orig</a>, <a class=\"id\" href=\"#clone\">clone</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#map_info\">map_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For request-based dm.</span>", 
"<span class=\"comment\"> * One of these is allocated per bio.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_rq_clone_bio_info\">dm_rq_clone_bio_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#orig\">orig</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_rq_target_io\">dm_rq_target_io</a> *<a class=\"id\" href=\"#tio\">tio</a>;", 
"};", 
"", 
"union <a class=\"id\" href=\"#map_info\">map_info</a> *<a class=\"id\" href=\"#dm_get_mapinfo\">dm_get_mapinfo</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a> && <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;((struct <a class=\"id\" href=\"#dm_target_io\">dm_target_io</a> *)<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>)-><a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"union <a class=\"id\" href=\"#map_info\">map_info</a> *<a class=\"id\" href=\"#dm_get_rq_mapinfo\">dm_get_rq_mapinfo</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a> && <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#end_io_data\">end_io_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;((struct <a class=\"id\" href=\"#dm_rq_target_io\">dm_rq_target_io</a> *)<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#end_io_data\">end_io_data</a>)-><a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#dm_get_rq_mapinfo\">dm_get_rq_mapinfo</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MINOR_ALLOCED\">MINOR_ALLOCED</a> ((void *)-1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Bits for the md-&gt;flags field.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMF_BLOCK_IO_FOR_SUSPEND\">DMF_BLOCK_IO_FOR_SUSPEND</a> 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMF_SUSPENDED\">DMF_SUSPENDED</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMF_FROZEN\">DMF_FROZEN</a> 2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMF_FREEING\">DMF_FREEING</a> 3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMF_DELETING\">DMF_DELETING</a> 4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMF_NOFLUSH_SUSPENDING\">DMF_NOFLUSH_SUSPENDING</a> 5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMF_QUEUE_IO_TO_THREAD\">DMF_QUEUE_IO_TO_THREAD</a> 6", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Work processed by per-device workqueue.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> <a class=\"id\" href=\"#io_lock\">io_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#suspend_lock\">suspend_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> <a class=\"id\" href=\"#map_lock\">map_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#holders\">holders</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#open_count\">open_count</a>;", 
"", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Protect queue and type against concurrent access. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#type_lock\">type_lock</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[16];", 
"", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#interface_ptr\">interface_ptr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A list of ios that arrived while we were suspended.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#pending\">pending</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> <a class=\"id\" href=\"#wait\">wait</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a> <a class=\"id\" href=\"#work\">work</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_list\">bio_list</a> <a class=\"id\" href=\"#deferred\">deferred</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#deferred_lock\">deferred_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * An error from the barrier request currently being processed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#barrier_error\">barrier_error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Protect barrier_error from concurrent endio processing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in request-based dm.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#barrier_error_lock\">barrier_error_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Processing queue (flush/barriers)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#wq\">wq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a> <a class=\"id\" href=\"#barrier_work\">barrier_work</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* A pointer to the currently processing pre/post flush request */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#flush_request\">flush_request</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The current mapping.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#map\">map</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * io objects are allocated from here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#io_pool\">io_pool</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#tio_pool\">tio_pool</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_set\">bio_set</a> *<a class=\"id\" href=\"#bs\">bs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Event handling.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#event_nr\">event_nr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> <a class=\"id\" href=\"#eventq\">eventq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#uevent_seq\">uevent_seq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#uevent_list\">uevent_list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#uevent_lock\">uevent_lock</a>; <span class=\"comment\">/* Protect access to uevent_list */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * freeze/thaw support require holding onto a super block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#frozen_sb\">frozen_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* forced geometry settings */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hd_geometry\">hd_geometry</a> <a class=\"id\" href=\"#geometry\">geometry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* For saving the address of __make_request for request based dm */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_request_fn\">make_request_fn</a> *<a class=\"id\" href=\"#saved_make_request_fn\">saved_make_request_fn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* sysfs handle */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* zero-length barrier that will be cloned and submitted to targets */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> <a class=\"id\" href=\"#barrier_bio\">barrier_bio</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For mempools pre-allocation at the table loading time.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_md_mempools\">dm_md_mempools</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#io_pool\">io_pool</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#tio_pool\">tio_pool</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_set\">bio_set</a> *<a class=\"id\" href=\"#bs\">bs</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_IOS\">MIN_IOS</a> 256", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#_io_cache\">_io_cache</a>;", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#_tio_cache\">_tio_cache</a>;", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#_rq_tio_cache\">_rq_tio_cache</a>;", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#_rq_bio_info_cache\">_rq_bio_info_cache</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#local_init\">local_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate a slab for the dm_ios */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_io_cache\">_io_cache</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#dm_io\">dm_io</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#_io_cache\">_io_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate a slab for the target ios */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_tio_cache\">_tio_cache</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#dm_target_io\">dm_target_io</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#_tio_cache\">_tio_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_io_cache\">out_free_io_cache</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_rq_tio_cache\">_rq_tio_cache</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#dm_rq_target_io\">dm_rq_target_io</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#_rq_tio_cache\">_rq_tio_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_tio_cache\">out_free_tio_cache</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_rq_bio_info_cache\">_rq_bio_info_cache</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#dm_rq_clone_bio_info\">dm_rq_clone_bio_info</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#_rq_bio_info_cache\">_rq_bio_info_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_rq_tio_cache\">out_free_rq_tio_cache</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_uevent_init\">dm_uevent_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_rq_bio_info_cache\">out_free_rq_bio_info_cache</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_major\">_major</a> = <a class=\"id\" href=\"#major\">major</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#register_blkdev\">register_blkdev</a>(<a class=\"id\" href=\"#_major\">_major</a>, <a class=\"id\" href=\"#_name\">_name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_uevent_exit\">out_uevent_exit</a>;", 
"", 
];
xr_frag_insert('l/94/2c1b1a259f209bb544f81072d02df4ae64b109.xr', __xr_tmp);
