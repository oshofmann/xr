var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/include/linux/sunrpc/xprt.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Declarations for the RPC transport interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1995, 1996 Olaf Kirch &lt;okir@monad.swb.de&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_SUNRPC_XPRT_H\">_LINUX_SUNRPC_XPRT_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_SUNRPC_XPRT_H\">_LINUX_SUNRPC_XPRT_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uio\">uio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kref\">kref</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ktime\">ktime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sunrpc\">sunrpc</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sunrpc\">sunrpc</a>/<a class=\"id\" href=\"#xdr\">xdr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sunrpc\">sunrpc</a>/<a class=\"id\" href=\"#msg_prot\">msg_prot</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_MIN_SLOT_TABLE\">RPC_MIN_SLOT_TABLE</a><span class=\"ts\"/>(2U)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_DEF_SLOT_TABLE\">RPC_DEF_SLOT_TABLE</a><span class=\"ts\"/>(16U)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_MAX_SLOT_TABLE\">RPC_MAX_SLOT_TABLE</a><span class=\"ts\"/>(128U)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This describes a timeout strategy</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rpc_timeout\">rpc_timeout</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_initval\">to_initval</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* initial timeout */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_maxval\">to_maxval</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* max timeout */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_increment\">to_increment</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if !exponential */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_retries\">to_retries</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* max # of retries */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_exponential\">to_exponential</a>;", 
"};", 
"", 
"enum <a class=\"id\" href=\"#rpc_display_format_t\">rpc_display_format_t</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RPC_DISPLAY_ADDR\">RPC_DISPLAY_ADDR</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RPC_DISPLAY_PORT\">RPC_DISPLAY_PORT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RPC_DISPLAY_PROTO\">RPC_DISPLAY_PROTO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RPC_DISPLAY_HEX_ADDR\">RPC_DISPLAY_HEX_ADDR</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RPC_DISPLAY_HEX_PORT\">RPC_DISPLAY_HEX_PORT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RPC_DISPLAY_NETID\">RPC_DISPLAY_NETID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RPC_DISPLAY_MAX\">RPC_DISPLAY_MAX</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a>;", 
"struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a>;", 
"struct <a class=\"id\" href=\"#seq_file\">seq_file</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This describes a complete RPC request</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is the user-visible part</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<span class=\"ts\"/><a class=\"id\" href=\"#rq_xprt\">rq_xprt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RPC client */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xdr_buf\">xdr_buf</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_snd_buf\">rq_snd_buf</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* send buffer */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xdr_buf\">xdr_buf</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_rcv_buf\">rq_rcv_buf</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* recv buffer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is the private part</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<span class=\"ts\"/><a class=\"id\" href=\"#rq_task\">rq_task</a>;<span class=\"ts\"/><span class=\"comment\">/* RPC task data */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_cred\">rpc_cred</a> *<span class=\"ts\"/><a class=\"id\" href=\"#rq_cred\">rq_cred</a>;<span class=\"ts\"/><span class=\"comment\">/* Bound cred */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_xid\">rq_xid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* request XID */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_cong\">rq_cong</a>;<span class=\"ts\"/><span class=\"comment\">/* has incremented xprt-&gt;cong */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_seqno\">rq_seqno</a>;<span class=\"ts\"/><span class=\"comment\">/* gss seq no. used on req. */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_enc_pages_num\">rq_enc_pages_num</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a><span class=\"ts\"/><span class=\"ts\"/>**<a class=\"id\" href=\"#rq_enc_pages\">rq_enc_pages</a>;<span class=\"ts\"/><span class=\"comment\">/* scratch pages for use by</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   gss privacy code */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#rq_release_snd_buf\">rq_release_snd_buf</a>)(struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> *); <span class=\"comment\">/* release rq_enc_pages */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#rq_list\">rq_list</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_buffer\">rq_buffer</a>;<span class=\"ts\"/><span class=\"comment\">/* XDR encode buffer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_callsize\">rq_callsize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_rcvsize\">rq_rcvsize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_xmit_bytes_sent\">rq_xmit_bytes_sent</a>;<span class=\"ts\"/><span class=\"comment\">/* total bytes sent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_reply_bytes_recvd\">rq_reply_bytes_recvd</a>;<span class=\"ts\"/><span class=\"comment\">/* total reply bytes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* received */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xdr_buf\">xdr_buf</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_private_buf\">rq_private_buf</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The receive buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * used in the softirq.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_majortimeo\">rq_majortimeo</a>;<span class=\"ts\"/><span class=\"comment\">/* major timeout alarm */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_timeout\">rq_timeout</a>;<span class=\"ts\"/><span class=\"comment\">/* Current timeout value */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_rtt\">rq_rtt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* round-trip time */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_retries\">rq_retries</a>;<span class=\"ts\"/><span class=\"comment\">/* # of retries */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_connect_cookie\">rq_connect_cookie</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* A cookie used to track the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   state of the transport</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   connection */</span>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Partial send handling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_bytes_sent\">rq_bytes_sent</a>;<span class=\"ts\"/><span class=\"comment\">/* Bytes we have sent */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_xtime\">rq_xtime</a>;<span class=\"ts\"/><span class=\"comment\">/* transmit time stamp */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_ntrans\">rq_ntrans</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NFS_V4_1\">CONFIG_NFS_V4_1</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#rq_bc_list\">rq_bc_list</a>;<span class=\"ts\"/><span class=\"comment\">/* Callback service list */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_bc_pa_state\">rq_bc_pa_state</a>;<span class=\"ts\"/><span class=\"comment\">/* Backchannel prealloc state */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#rq_bc_pa_list\">rq_bc_pa_list</a>;<span class=\"ts\"/><span class=\"comment\">/* Backchannel prealloc list */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NFS_V4_1 */</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rq_svec\">rq_svec</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_snd_buf\">rq_snd_buf</a>.<a class=\"id\" href=\"#head\">head</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rq_slen\">rq_slen</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_snd_buf\">rq_snd_buf</a>.<a class=\"id\" href=\"#len\">len</a>", 
"", 
"struct <a class=\"id\" href=\"#rpc_xprt_ops\">rpc_xprt_ops</a> {", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#set_buffer_size\">set_buffer_size</a>)(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#sndsize\">sndsize</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#rcvsize\">rcvsize</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#reserve_xprt\">reserve_xprt</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#release_xprt\">release_xprt</a>)(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#rpcbind\">rpcbind</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#set_port\">set_port</a>)(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, unsigned short <a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#connect\">connect</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>void *<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#buf_alloc\">buf_alloc</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#buf_free\">buf_free</a>)(void *<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#send_request\">send_request</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#set_retrans_timeout\">set_retrans_timeout</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#timer\">timer</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#release_request\">release_request</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#close\">close</a>)(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#destroy\">destroy</a>)(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#print_stats\">print_stats</a>)(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>);", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RPC transport identifiers</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * To preserve compatibility with the historical use of raw IP protocol</span>", 
"<span class=\"comment\"> * id's for transport selection, UDP and TCP identifiers are specified</span>", 
"<span class=\"comment\"> * with the previous values. No such restriction exists for new transports,</span>", 
"<span class=\"comment\"> * except that they may not collide with these values (17 and 6,</span>", 
"<span class=\"comment\"> * respectively).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_TRANSPORT_BC\">XPRT_TRANSPORT_BC</a>       (1 << 31)", 
"enum <a class=\"id\" href=\"#xprt_transports\">xprt_transports</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XPRT_TRANSPORT_UDP\">XPRT_TRANSPORT_UDP</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XPRT_TRANSPORT_TCP\">XPRT_TRANSPORT_TCP</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XPRT_TRANSPORT_BC_TCP\">XPRT_TRANSPORT_BC_TCP</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a> | <a class=\"id\" href=\"#XPRT_TRANSPORT_BC\">XPRT_TRANSPORT_BC</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XPRT_TRANSPORT_RDMA\">XPRT_TRANSPORT_RDMA</a><span class=\"ts\"/>= 256", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kref\">kref</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref\">kref</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Reference count */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_xprt_ops\">rpc_xprt_ops</a> *<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* transport methods */</span>", 
"", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#rpc_timeout\">rpc_timeout</a> *<a class=\"id\" href=\"#timeout\">timeout</a>;<span class=\"ts\"/><span class=\"comment\">/* timeout parms */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* server address */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrlen\">addrlen</a>;<span class=\"ts\"/><span class=\"comment\">/* size of server address */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot\">prot</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IP protocol */</span>", 
"", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cong\">cong</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* current congestion */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cwnd\">cwnd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* congestion window */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_payload\">max_payload</a>;<span class=\"ts\"/><span class=\"comment\">/* largest RPC payload size,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   in bytes */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsh_size\">tsh_size</a>;<span class=\"ts\"/><span class=\"comment\">/* size of transport specific</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   header */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a><span class=\"ts\"/><a class=\"id\" href=\"#binding\">binding</a>;<span class=\"ts\"/><span class=\"comment\">/* requests waiting on rpcbind */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a><span class=\"ts\"/><a class=\"id\" href=\"#sending\">sending</a>;<span class=\"ts\"/><span class=\"comment\">/* requests waiting to send */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a><span class=\"ts\"/><a class=\"id\" href=\"#resend\">resend</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* requests waiting to resend */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a><span class=\"ts\"/><a class=\"id\" href=\"#pending\">pending</a>;<span class=\"ts\"/><span class=\"comment\">/* requests in flight */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a><span class=\"ts\"/><a class=\"id\" href=\"#backlog\">backlog</a>;<span class=\"ts\"/><span class=\"comment\">/* waiting for slot */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* free slots */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> *<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* slot table storage */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_reqs\">max_reqs</a>;<span class=\"ts\"/><span class=\"comment\">/* total slots */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* transport state */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shutdown\">shutdown</a>   : 1,<span class=\"ts\"/><span class=\"comment\">/* being shut down */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resvport\">resvport</a>   : 1; <span class=\"comment\">/* use a reserved port */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_index\">bind_index</a>;<span class=\"ts\"/><span class=\"comment\">/* bind function index */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Connection of transports</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_timeout\">bind_timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reestablish_timeout\">reestablish_timeout</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#connect_cookie\">connect_cookie</a>;<span class=\"ts\"/><span class=\"comment\">/* A cookie that gets bumped</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   every time the transport</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   is reconnected */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Disconnection of idle transports</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#task_cleanup\">task_cleanup</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a><span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_used\">last_used</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle_timeout\">idle_timeout</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Send stuff</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transport_lock\">transport_lock</a>;<span class=\"ts\"/><span class=\"comment\">/* lock transport info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserve_lock\">reserve_lock</a>;<span class=\"ts\"/><span class=\"comment\">/* lock slot table */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xid\">xid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Next XID value to use */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<span class=\"ts\"/><a class=\"id\" href=\"#snd_task\">snd_task</a>;<span class=\"ts\"/><span class=\"comment\">/* Task blocked in send */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_xprt\">svc_xprt</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bc_xprt\">bc_xprt</a>;<span class=\"ts\"/><span class=\"comment\">/* NFSv4.1 backchannel */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NFS_V4_1\">CONFIG_NFS_V4_1</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bc_serv\">bc_serv</a>;       <span class=\"comment\">/* The RPC service which will */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* process the callback */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bc_alloc_count\">bc_alloc_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Total number of preallocs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bc_pa_lock\">bc_pa_lock</a>;<span class=\"ts\"/><span class=\"comment\">/* Protects the preallocated</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * items */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#bc_pa_list\">bc_pa_list</a>;<span class=\"ts\"/><span class=\"comment\">/* List of preallocated</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * backchannel rpc_rqst's */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NFS_V4_1 */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#recv\">recv</a>;", 
"", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_count\">bind_count</a>,<span class=\"ts\"/><span class=\"comment\">/* total number of binds */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#connect_count\">connect_count</a>,<span class=\"ts\"/><span class=\"comment\">/* total number of connects */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#connect_start\">connect_start</a>,<span class=\"ts\"/><span class=\"comment\">/* connect start timestamp */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#connect_time\">connect_time</a>,<span class=\"ts\"/><span class=\"comment\">/* jiffies waiting for connect */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sends\">sends</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* how many complete requests */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#recvs\">recvs</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* how many complete requests */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bad_xids\">bad_xids</a>;<span class=\"ts\"/><span class=\"comment\">/* lookup_rqst didn't find XID */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long long<span class=\"ts\"/><a class=\"id\" href=\"#req_u\">req_u</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* average requests on the wire */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bklog_u\">bklog_u</a>;<span class=\"ts\"/><span class=\"comment\">/* backlog queue utilization */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#stat\">stat</a>;", 
"", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#address_strings\">address_strings</a>[<a class=\"id\" href=\"#RPC_DISPLAY_MAX\">RPC_DISPLAY_MAX</a>];", 
"};", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NFS_V4_1\">CONFIG_NFS_V4_1</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Backchannel flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#RPC_BC_PA_IN_USE\">RPC_BC_PA_IN_USE</a><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Preallocated backchannel */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* buffer in use */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NFS_V4_1 */</span>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NFS_V4_1\">CONFIG_NFS_V4_1</a>)", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#bc_prealloc\">bc_prealloc</a>(struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#RPC_BC_PA_IN_USE\">RPC_BC_PA_IN_USE</a>, &amp;<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rq_bc_pa_state\">rq_bc_pa_state</a>);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#bc_prealloc\">bc_prealloc</a>(struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NFS_V4_1 */</span>", 
"", 
"struct <a class=\"id\" href=\"#xprt_create\">xprt_create</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ident\">ident</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XPRT_TRANSPORT identifier */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<span class=\"ts\"/><a class=\"id\" href=\"#srcaddr\">srcaddr</a>;<span class=\"ts\"/><span class=\"comment\">/* optional local address */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<span class=\"ts\"/><a class=\"id\" href=\"#dstaddr\">dstaddr</a>;<span class=\"ts\"/><span class=\"comment\">/* remote peer address */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrlen\">addrlen</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_xprt\">svc_xprt</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bc_xprt\">bc_xprt</a>;<span class=\"ts\"/><span class=\"comment\">/* NFSv4.1 backchannel */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#xprt_class\">xprt_class</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ident\">ident</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XPRT_TRANSPORT identifier */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<span class=\"ts\"/>(*<a class=\"id\" href=\"#setup\">setup</a>)(struct <a class=\"id\" href=\"#xprt_create\">xprt_create</a> *);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[32];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic internal transport functions</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#xprt_create_transport\">xprt_create_transport</a>(struct <a class=\"id\" href=\"#xprt_create\">xprt_create</a> *<a class=\"id\" href=\"#args\">args</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_connect\">xprt_connect</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_reserve\">xprt_reserve</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_reserve_xprt\">xprt_reserve_xprt</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_reserve_xprt_cong\">xprt_reserve_xprt_cong</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_prepare_transmit\">xprt_prepare_transmit</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_transmit\">xprt_transmit</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_end_transmit\">xprt_end_transmit</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_adjust_timeout\">xprt_adjust_timeout</a>(struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_release_xprt\">xprt_release_xprt</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_release_xprt_cong\">xprt_release_xprt_cong</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_release\">xprt_release</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<span class=\"ts\"/><a class=\"id\" href=\"#xprt_get\">xprt_get</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_put\">xprt_put</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#xprt_skip_transport_header\">xprt_skip_transport_header</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a> + <a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#tsh_size\">tsh_size</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Transport switch helper functions</span>", 
"<span class=\"comment\"> */</span>", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_register_transport\">xprt_register_transport</a>(struct <a class=\"id\" href=\"#xprt_class\">xprt_class</a> *<a class=\"id\" href=\"#type\">type</a>);", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_unregister_transport\">xprt_unregister_transport</a>(struct <a class=\"id\" href=\"#xprt_class\">xprt_class</a> *<a class=\"id\" href=\"#type\">type</a>);", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_load_transport\">xprt_load_transport</a>(const char *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_set_retrans_timeout_def\">xprt_set_retrans_timeout_def</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_set_retrans_timeout_rtt\">xprt_set_retrans_timeout_rtt</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_wake_pending_tasks\">xprt_wake_pending_tasks</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, int <a class=\"id\" href=\"#status\">status</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_wait_for_buffer_space\">xprt_wait_for_buffer_space</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#rpc_action\">rpc_action</a> <a class=\"id\" href=\"#action\">action</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_write_space\">xprt_write_space</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_adjust_cwnd\">xprt_adjust_cwnd</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>, int <a class=\"id\" href=\"#result\">result</a>);", 
"struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> *<span class=\"ts\"/><a class=\"id\" href=\"#xprt_lookup_rqst\">xprt_lookup_rqst</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#xid\">xid</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_complete_rqst\">xprt_complete_rqst</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>, int <a class=\"id\" href=\"#copied\">copied</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_release_rqst_cong\">xprt_release_rqst_cong</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_disconnect_done\">xprt_disconnect_done</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_force_disconnect\">xprt_force_disconnect</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_conditional_disconnect\">xprt_conditional_disconnect</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>, unsigned int <a class=\"id\" href=\"#cookie\">cookie</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reserved bit positions in xprt-&gt;state</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_LOCKED\">XPRT_LOCKED</a><span class=\"ts\"/><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_CONNECTED\">XPRT_CONNECTED</a><span class=\"ts\"/><span class=\"ts\"/>(1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_CONNECTING\">XPRT_CONNECTING</a><span class=\"ts\"/><span class=\"ts\"/>(2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_CLOSE_WAIT\">XPRT_CLOSE_WAIT</a><span class=\"ts\"/><span class=\"ts\"/>(3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_BOUND\">XPRT_BOUND</a><span class=\"ts\"/><span class=\"ts\"/>(4)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_BINDING\">XPRT_BINDING</a><span class=\"ts\"/><span class=\"ts\"/>(5)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_CLOSING\">XPRT_CLOSING</a><span class=\"ts\"/><span class=\"ts\"/>(6)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_CONNECTION_ABORT\">XPRT_CONNECTION_ABORT</a><span class=\"ts\"/>(7)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XPRT_CONNECTION_CLOSE\">XPRT_CONNECTION_CLOSE</a><span class=\"ts\"/>(8)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#xprt_set_connected\">xprt_set_connected</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#XPRT_CONNECTED\">XPRT_CONNECTED</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#xprt_clear_connected\">xprt_clear_connected</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#XPRT_CONNECTED\">XPRT_CONNECTED</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#xprt_connected\">xprt_connected</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#XPRT_CONNECTED\">XPRT_CONNECTED</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#xprt_test_and_set_connected\">xprt_test_and_set_connected</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#XPRT_CONNECTED\">XPRT_CONNECTED</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#xprt_test_and_clear_connected\">xprt_test_and_clear_connected</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#XPRT_CONNECTED\">XPRT_CONNECTED</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#xprt_clear_connecting\">xprt_clear_connecting</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__before_clear_bit\">smp_mb__before_clear_bit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#XPRT_CONNECTING\">XPRT_CONNECTING</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__after_clear_bit\">smp_mb__after_clear_bit</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#xprt_connecting\">xprt_connecting</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#XPRT_CONNECTING\">XPRT_CONNECTING</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#xprt_test_and_set_connecting\">xprt_test_and_set_connecting</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#XPRT_CONNECTING\">XPRT_CONNECTING</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#xprt_set_bound\">xprt_set_bound</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#XPRT_BOUND\">XPRT_BOUND</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#xprt_bound\">xprt_bound</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#XPRT_BOUND\">XPRT_BOUND</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#xprt_clear_bound\">xprt_clear_bound</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#XPRT_BOUND\">XPRT_BOUND</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#xprt_clear_binding\">xprt_clear_binding</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__before_clear_bit\">smp_mb__before_clear_bit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#XPRT_BINDING\">XPRT_BINDING</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__after_clear_bit\">smp_mb__after_clear_bit</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#xprt_test_and_set_binding\">xprt_test_and_set_binding</a>(struct <a class=\"id\" href=\"#rpc_xprt\">rpc_xprt</a> *<a class=\"id\" href=\"#xprt\">xprt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#XPRT_BINDING\">XPRT_BINDING</a>, &amp;<a class=\"id\" href=\"#xprt\">xprt</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__*/</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_SUNRPC_XPRT_H */</span>", 
];
xr_frag_insert('l/95/0cb2935fe727f4af06be9a77b7a18e586c8275.xr', __xr_tmp);
