var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#INFLATE_H\">INFLATE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INFLATE_H\">INFLATE_H</a>", 
"", 
"<span class=\"comment\">/* inflate.h -- internal inflate state definition</span>", 
"<span class=\"comment\"> * Copyright (C) 1995-2004 Mark Adler</span>", 
"<span class=\"comment\"> * For conditions of distribution and use, see copyright notice in zlib.h</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* WARNING: this file should *not* be used by applications. It is</span>", 
"<span class=\"comment\">   part of the implementation of the compression library and is</span>", 
"<span class=\"comment\">   subject to change. Applications should only use zlib.h.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Possible inflate modes between inflate() calls */</span>", 
"typedef enum {", 
"    <a class=\"id\" href=\"#HEAD\">HEAD</a>,       <span class=\"comment\">/* i: waiting for magic header */</span>", 
"    <a class=\"id\" href=\"#FLAGS\">FLAGS</a>,      <span class=\"comment\">/* i: waiting for method and flags (gzip) */</span>", 
"    <a class=\"id\" href=\"#TIME\">TIME</a>,       <span class=\"comment\">/* i: waiting for modification time (gzip) */</span>", 
"    <a class=\"id\" href=\"#OS\">OS</a>,         <span class=\"comment\">/* i: waiting for extra flags and operating system (gzip) */</span>", 
"    <a class=\"id\" href=\"#EXLEN\">EXLEN</a>,      <span class=\"comment\">/* i: waiting for extra length (gzip) */</span>", 
"    <a class=\"id\" href=\"#EXTRA\">EXTRA</a>,      <span class=\"comment\">/* i: waiting for extra bytes (gzip) */</span>", 
"    <a class=\"id\" href=\"#NAME\">NAME</a>,       <span class=\"comment\">/* i: waiting for end of file name (gzip) */</span>", 
"    <a class=\"id\" href=\"#COMMENT\">COMMENT</a>,    <span class=\"comment\">/* i: waiting for end of comment (gzip) */</span>", 
"    <a class=\"id\" href=\"#HCRC\">HCRC</a>,       <span class=\"comment\">/* i: waiting for header crc (gzip) */</span>", 
"    <a class=\"id\" href=\"#DICTID\">DICTID</a>,     <span class=\"comment\">/* i: waiting for dictionary check value */</span>", 
"    <a class=\"id\" href=\"#DICT\">DICT</a>,       <span class=\"comment\">/* waiting for inflateSetDictionary() call */</span>", 
"        <a class=\"id\" href=\"#TYPE\">TYPE</a>,       <span class=\"comment\">/* i: waiting for type bits, including last-flag bit */</span>", 
"        <a class=\"id\" href=\"#TYPEDO\">TYPEDO</a>,     <span class=\"comment\">/* i: same, but skip check to exit inflate on new block */</span>", 
"        <a class=\"id\" href=\"#STORED\">STORED</a>,     <span class=\"comment\">/* i: waiting for stored size (length and complement) */</span>", 
"        <a class=\"id\" href=\"#COPY\">COPY</a>,       <span class=\"comment\">/* i/o: waiting for input or output to copy stored block */</span>", 
"        <a class=\"id\" href=\"#TABLE\">TABLE</a>,      <span class=\"comment\">/* i: waiting for dynamic block table lengths */</span>", 
"        <a class=\"id\" href=\"#LENLENS\">LENLENS</a>,    <span class=\"comment\">/* i: waiting for code length code lengths */</span>", 
"        <a class=\"id\" href=\"#CODELENS\">CODELENS</a>,   <span class=\"comment\">/* i: waiting for length/lit and distance code lengths */</span>", 
"            <a class=\"id\" href=\"#LEN\">LEN</a>,        <span class=\"comment\">/* i: waiting for length/lit code */</span>", 
"            <a class=\"id\" href=\"#LENEXT\">LENEXT</a>,     <span class=\"comment\">/* i: waiting for length extra bits */</span>", 
"            <a class=\"id\" href=\"#DIST\">DIST</a>,       <span class=\"comment\">/* i: waiting for distance code */</span>", 
"            <a class=\"id\" href=\"#DISTEXT\">DISTEXT</a>,    <span class=\"comment\">/* i: waiting for distance extra bits */</span>", 
"            <a class=\"id\" href=\"#MATCH\">MATCH</a>,      <span class=\"comment\">/* o: waiting for output space to copy string */</span>", 
"            <a class=\"id\" href=\"#LIT\">LIT</a>,        <span class=\"comment\">/* o: waiting for output space to write literal */</span>", 
"    <a class=\"id\" href=\"#CHECK\">CHECK</a>,      <span class=\"comment\">/* i: waiting for 32-bit check value */</span>", 
"    <a class=\"id\" href=\"#LENGTH\">LENGTH</a>,     <span class=\"comment\">/* i: waiting for 32-bit length (gzip) */</span>", 
"    <a class=\"id\" href=\"#DONE\">DONE</a>,       <span class=\"comment\">/* finished check, done -- remain here until reset */</span>", 
"    <a class=\"id\" href=\"#BAD\">BAD</a>,        <span class=\"comment\">/* got a data error -- remain here until reset */</span>", 
"    <a class=\"id\" href=\"#MEM\">MEM</a>,        <span class=\"comment\">/* got an inflate() memory error -- remain here until reset */</span>", 
"    <a class=\"id\" href=\"#SYNC\">SYNC</a>        <span class=\"comment\">/* looking for synchronization bytes to restart inflate() */</span>", 
"} <a class=\"id\" href=\"#inflate_mode\">inflate_mode</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">    State transitions between above modes -</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    (most modes can go to the BAD or MEM mode -- not shown for clarity)</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    Process header:</span>", 
"<span class=\"comment\">        HEAD -&gt; (gzip) or (zlib)</span>", 
"<span class=\"comment\">        (gzip) -&gt; FLAGS -&gt; TIME -&gt; OS -&gt; EXLEN -&gt; EXTRA -&gt; NAME</span>", 
"<span class=\"comment\">        NAME -&gt; COMMENT -&gt; HCRC -&gt; TYPE</span>", 
"<span class=\"comment\">        (zlib) -&gt; DICTID or TYPE</span>", 
"<span class=\"comment\">        DICTID -&gt; DICT -&gt; TYPE</span>", 
"<span class=\"comment\">    Read deflate blocks:</span>", 
"<span class=\"comment\">            TYPE -&gt; STORED or TABLE or LEN or CHECK</span>", 
"<span class=\"comment\">            STORED -&gt; COPY -&gt; TYPE</span>", 
"<span class=\"comment\">            TABLE -&gt; LENLENS -&gt; CODELENS -&gt; LEN</span>", 
"<span class=\"comment\">    Read deflate codes:</span>", 
"<span class=\"comment\">                LEN -&gt; LENEXT or LIT or TYPE</span>", 
"<span class=\"comment\">                LENEXT -&gt; DIST -&gt; DISTEXT -&gt; MATCH -&gt; LEN</span>", 
"<span class=\"comment\">                LIT -&gt; LEN</span>", 
"<span class=\"comment\">    Process trailer:</span>", 
"<span class=\"comment\">        CHECK -&gt; LENGTH -&gt; DONE</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* state maintained between inflate() calls.  Approximately 7K bytes. */</span>", 
"struct <a class=\"id\" href=\"#inflate_state\">inflate_state</a> {", 
"    <a class=\"id\" href=\"#inflate_mode\">inflate_mode</a> <a class=\"id\" href=\"#mode\">mode</a>;          <span class=\"comment\">/* current inflate mode */</span>", 
"    int <a class=\"id\" href=\"#last\">last</a>;                   <span class=\"comment\">/* true if processing last block */</span>", 
"    int <a class=\"id\" href=\"#wrap\">wrap</a>;                   <span class=\"comment\">/* bit 0 true for zlib, bit 1 true for gzip */</span>", 
"    int <a class=\"id\" href=\"#havedict\">havedict</a>;               <span class=\"comment\">/* true if dictionary provided */</span>", 
"    int <a class=\"id\" href=\"#flags\">flags</a>;                  <span class=\"comment\">/* gzip header method and flags (0 if zlib) */</span>", 
"    unsigned <a class=\"id\" href=\"#dmax\">dmax</a>;              <span class=\"comment\">/* zlib header max distance (INFLATE_STRICT) */</span>", 
"    unsigned long <a class=\"id\" href=\"#check\">check</a>;        <span class=\"comment\">/* protected copy of check value */</span>", 
"    unsigned long <a class=\"id\" href=\"#total\">total</a>;        <span class=\"comment\">/* protected copy of output count */</span>", 
" <span class=\"comment\">/*   gz_headerp head; */</span>           <span class=\"comment\">/* where to save gzip header information */</span>", 
"        <span class=\"comment\">/* sliding window */</span>", 
"    unsigned <a class=\"id\" href=\"#wbits\">wbits</a>;             <span class=\"comment\">/* log base 2 of requested window size */</span>", 
"    unsigned <a class=\"id\" href=\"#wsize\">wsize</a>;             <span class=\"comment\">/* window size or zero if not using window */</span>", 
"    unsigned <a class=\"id\" href=\"#whave\">whave</a>;             <span class=\"comment\">/* valid bytes in the window */</span>", 
"    unsigned <a class=\"id\" href=\"#write\">write</a>;             <span class=\"comment\">/* window write index */</span>", 
"    unsigned char *<a class=\"id\" href=\"#window\">window</a>;  <span class=\"comment\">/* allocated sliding window, if needed */</span>", 
"        <span class=\"comment\">/* bit accumulator */</span>", 
"    unsigned long <a class=\"id\" href=\"#hold\">hold</a>;         <span class=\"comment\">/* input bit accumulator */</span>", 
"    unsigned <a class=\"id\" href=\"#bits\">bits</a>;              <span class=\"comment\">/* number of bits in \"in\" */</span>", 
"        <span class=\"comment\">/* for string and stored block copying */</span>", 
"    unsigned <a class=\"id\" href=\"#length\">length</a>;            <span class=\"comment\">/* literal or length of data to copy */</span>", 
"    unsigned <a class=\"id\" href=\"#offset\">offset</a>;            <span class=\"comment\">/* distance back to copy string from */</span>", 
"        <span class=\"comment\">/* for table and code decoding */</span>", 
"    unsigned <a class=\"id\" href=\"#extra\">extra</a>;             <span class=\"comment\">/* extra bits needed */</span>", 
"        <span class=\"comment\">/* fixed and dynamic code tables */</span>", 
"    <a class=\"id\" href=\"#code\">code</a> const *<a class=\"id\" href=\"#lencode\">lencode</a>;    <span class=\"comment\">/* starting table for length/literal codes */</span>", 
"    <a class=\"id\" href=\"#code\">code</a> const *<a class=\"id\" href=\"#distcode\">distcode</a>;   <span class=\"comment\">/* starting table for distance codes */</span>", 
"    unsigned <a class=\"id\" href=\"#lenbits\">lenbits</a>;           <span class=\"comment\">/* index bits for lencode */</span>", 
"    unsigned <a class=\"id\" href=\"#distbits\">distbits</a>;          <span class=\"comment\">/* index bits for distcode */</span>", 
"        <span class=\"comment\">/* dynamic table building */</span>", 
"    unsigned <a class=\"id\" href=\"#ncode\">ncode</a>;             <span class=\"comment\">/* number of code length code lengths */</span>", 
"    unsigned <a class=\"id\" href=\"#nlen\">nlen</a>;              <span class=\"comment\">/* number of length code lengths */</span>", 
"    unsigned <a class=\"id\" href=\"#ndist\">ndist</a>;             <span class=\"comment\">/* number of distance code lengths */</span>", 
"    unsigned <a class=\"id\" href=\"#have\">have</a>;              <span class=\"comment\">/* number of code lengths in lens[] */</span>", 
"    <a class=\"id\" href=\"#code\">code</a> *<a class=\"id\" href=\"#next\">next</a>;             <span class=\"comment\">/* next available space in codes[] */</span>", 
"    unsigned short <a class=\"id\" href=\"#lens\">lens</a>[320];   <span class=\"comment\">/* temporary storage for code lengths */</span>", 
"    unsigned short <a class=\"id\" href=\"#work\">work</a>[288];   <span class=\"comment\">/* work area for code table building */</span>", 
"    <a class=\"id\" href=\"#code\">code</a> <a class=\"id\" href=\"#codes\">codes</a>[<a class=\"id\" href=\"#ENOUGH\">ENOUGH</a>];         <span class=\"comment\">/* space for code tables */</span>", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/95/251fb18531dd5837e000e131fe466a996f5ee3.xr', __xr_tmp);
