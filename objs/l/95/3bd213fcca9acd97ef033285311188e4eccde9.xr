var __xr_tmp = [
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smp_send_reschedule\">smp_send_reschedule</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_ops\">smp_ops</a>.<a class=\"id\" href=\"#smp_send_reschedule\">smp_send_reschedule</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#arch_send_call_function_single_ipi\">arch_send_call_function_single_ipi</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_ops\">smp_ops</a>.<a class=\"id\" href=\"#send_call_func_single_ipi\">send_call_func_single_ipi</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#arch_send_call_function_ipi_mask\">arch_send_call_function_ipi_mask</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_ops\">smp_ops</a>.<a class=\"id\" href=\"#send_call_func_ipi\">send_call_func_ipi</a>(<a class=\"id\" href=\"#mask\">mask</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#cpu_disable_common\">cpu_disable_common</a>(void);", 
"void <a class=\"id\" href=\"#native_smp_prepare_boot_cpu\">native_smp_prepare_boot_cpu</a>(void);", 
"void <a class=\"id\" href=\"#native_smp_prepare_cpus\">native_smp_prepare_cpus</a>(unsigned int <a class=\"id\" href=\"#max_cpus\">max_cpus</a>);", 
"void <a class=\"id\" href=\"#native_smp_cpus_done\">native_smp_cpus_done</a>(unsigned int <a class=\"id\" href=\"#max_cpus\">max_cpus</a>);", 
"int <a class=\"id\" href=\"#native_cpu_up\">native_cpu_up</a>(unsigned int <a class=\"id\" href=\"#cpunum\">cpunum</a>);", 
"int <a class=\"id\" href=\"#native_cpu_disable\">native_cpu_disable</a>(void);", 
"void <a class=\"id\" href=\"#native_cpu_die\">native_cpu_die</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"void <a class=\"id\" href=\"#native_play_dead\">native_play_dead</a>(void);", 
"void <a class=\"id\" href=\"#play_dead_common\">play_dead_common</a>(void);", 
"void <a class=\"id\" href=\"#wbinvd_on_cpu\">wbinvd_on_cpu</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"int <a class=\"id\" href=\"#wbinvd_on_all_cpus\">wbinvd_on_all_cpus</a>(void);", 
"", 
"void <a class=\"id\" href=\"#native_send_call_func_ipi\">native_send_call_func_ipi</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>);", 
"void <a class=\"id\" href=\"#native_send_call_func_single_ipi\">native_send_call_func_single_ipi</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"void <a class=\"id\" href=\"#smp_store_cpu_info\">smp_store_cpu_info</a>(int <a class=\"id\" href=\"#id\">id</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpu_physical_id\">cpu_physical_id</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#x86_cpu_to_apicid\">x86_cpu_to_apicid</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"", 
"<span class=\"comment\">/* We don't mark CPUs online until __cpu_up(), so we need another measure */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#num_booting_cpus\">num_booting_cpus</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpumask_weight\">cpumask_weight</a>(<a class=\"id\" href=\"#cpu_callout_mask\">cpu_callout_mask</a>);", 
"}", 
"#else <span class=\"comment\">/* !CONFIG_SMP */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#wbinvd_on_cpu\">wbinvd_on_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)     <a class=\"id\" href=\"#wbinvd\">wbinvd</a>()", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#wbinvd_on_all_cpus\">wbinvd_on_all_cpus</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wbinvd\">wbinvd</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"extern unsigned <a class=\"id\" href=\"#disabled_cpus\">disabled_cpus</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32_SMP\">CONFIG_X86_32_SMP</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is needed by all SMP systems. It must _always_ be valid</span>", 
"<span class=\"comment\"> * from the initial startup. We map APIC_BASE very early in page_setup(),</span>", 
"<span class=\"comment\"> * so this is correct in the x86 case.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#raw_smp_processor_id\">raw_smp_processor_id</a>() (<a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#cpu_number\">cpu_number</a>))", 
"extern int <a class=\"id\" href=\"#safe_smp_processor_id\">safe_smp_processor_id</a>(void);", 
"", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_64_SMP\">CONFIG_X86_64_SMP</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#raw_smp_processor_id\">raw_smp_processor_id</a>() (<a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#cpu_number\">cpu_number</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#stack_smp_processor_id\">stack_smp_processor_id</a>()<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thread_info\">thread_info</a> *<a class=\"id\" href=\"#ti\">ti</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__asm__\">__asm__</a>(\"andq %%rsp,%0; \":\"=r\" (<a class=\"id\" href=\"#ti\">ti</a>) : \"0\" (<a class=\"id\" href=\"#CURRENT_MASK\">CURRENT_MASK</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"})", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#safe_smp_processor_id\">safe_smp_processor_id</a>()<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>()", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#logical_smp_processor_id\">logical_smp_processor_id</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* we don't want to mark this access volatile - bad code generation */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#GET_APIC_LOGICAL_ID\">GET_APIC_LOGICAL_ID</a>(<a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LDR\">APIC_LDR</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern int <a class=\"id\" href=\"#hard_smp_processor_id\">hard_smp_processor_id</a>(void);", 
"", 
"#else <span class=\"comment\">/* CONFIG_X86_LOCAL_APIC */</span>", 
"", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#hard_smp_processor_id\">hard_smp_processor_id</a>()<span class=\"ts\"/>0", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_LOCAL_APIC */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ASSEMBLY__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_SMP_H */</span>", 
];
xr_frag_insert('l/95/3bd213fcca9acd97ef033285311188e4eccde9.xr', __xr_tmp);
