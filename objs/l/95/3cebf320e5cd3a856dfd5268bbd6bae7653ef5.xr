var __xr_tmp = [
"<span class=\"comment\"><span class=\"ts\"/> * Were softirqs turned off above:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#softirq_count\">softirq_count</a>() == <a class=\"id\" href=\"#SOFTIRQ_OFFSET\">SOFTIRQ_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_softirqs_off\">trace_softirqs_off</a>(<a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_local_irq_restore\">raw_local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#preempt_count\">preempt_count</a>() == <a class=\"id\" href=\"#SOFTIRQ_OFFSET\">SOFTIRQ_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_preempt_off\">trace_preempt_off</a>(<a class=\"id\" href=\"#CALLER_ADDR0\">CALLER_ADDR0</a>, <a class=\"id\" href=\"#get_parent_ip\">get_parent_ip</a>(<a class=\"id\" href=\"#CALLER_ADDR1\">CALLER_ADDR1</a>));", 
"}", 
"#else <span class=\"comment\">/* !CONFIG_TRACE_IRQFLAGS */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__local_bh_disable\">__local_bh_disable</a>(unsigned long <a class=\"id\" href=\"#ip\">ip</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_preempt_count\">add_preempt_count</a>(<a class=\"id\" href=\"#SOFTIRQ_OFFSET\">SOFTIRQ_OFFSET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>();", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TRACE_IRQFLAGS */</span>", 
"", 
"void <a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__local_bh_disable\">__local_bh_disable</a>((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(0));", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Special-case - softirqs can safely be enabled in</span>", 
"<span class=\"comment\"> * cond_resched_softirq(), or by __do_softirq(),</span>", 
"<span class=\"comment\"> * without processing still-pending softirqs:</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#_local_bh_enable\">_local_bh_enable</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#in_irq\">in_irq</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#softirq_count\">softirq_count</a>() == <a class=\"id\" href=\"#SOFTIRQ_OFFSET\">SOFTIRQ_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_softirqs_on\">trace_softirqs_on</a>((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sub_preempt_count\">sub_preempt_count</a>(<a class=\"id\" href=\"#SOFTIRQ_OFFSET\">SOFTIRQ_OFFSET</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_local_bh_enable\">_local_bh_enable</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#_local_bh_enable_ip\">_local_bh_enable_ip</a>(unsigned long <a class=\"id\" href=\"#ip\">ip</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#in_irq\">in_irq</a>() || <a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TRACE_IRQFLAGS\">CONFIG_TRACE_IRQFLAGS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Are softirqs going to be turned on now:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#softirq_count\">softirq_count</a>() == <a class=\"id\" href=\"#SOFTIRQ_OFFSET\">SOFTIRQ_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_softirqs_on\">trace_softirqs_on</a>(<a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Keep preemption disabled until we are done with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * softirq processing:</span>", 
"<span class=\"comment\"> <span class=\"ts\"/> */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#sub_preempt_count\">sub_preempt_count</a>(<a class=\"id\" href=\"#SOFTIRQ_OFFSET\">SOFTIRQ_OFFSET</a> - 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>() && <a class=\"id\" href=\"#local_softirq_pending\">local_softirq_pending</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_softirq\">do_softirq</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dec_preempt_count\">dec_preempt_count</a>();", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TRACE_IRQFLAGS\">CONFIG_TRACE_IRQFLAGS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_check_resched\">preempt_check_resched</a>();", 
"}", 
"", 
"void <a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_local_bh_enable_ip\">_local_bh_enable_ip</a>((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(0));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>);", 
"", 
"void <a class=\"id\" href=\"#local_bh_enable_ip\">local_bh_enable_ip</a>(unsigned long <a class=\"id\" href=\"#ip\">ip</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_local_bh_enable_ip\">_local_bh_enable_ip</a>(<a class=\"id\" href=\"#ip\">ip</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#local_bh_enable_ip\">local_bh_enable_ip</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We restart softirq processing MAX_SOFTIRQ_RESTART times,</span>", 
"<span class=\"comment\"> * and we fall back to softirqd after that.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This number has been established via experimentation.</span>", 
"<span class=\"comment\"> * The two things to balance is latency against fairness -</span>", 
"<span class=\"comment\"> * we want to handle softirqs as soon as possible, but they</span>", 
"<span class=\"comment\"> * should not be able to lock up the box.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_SOFTIRQ_RESTART\">MAX_SOFTIRQ_RESTART</a> 10", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> void <a class=\"id\" href=\"#__do_softirq\">__do_softirq</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#pending\">pending</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#max_restart\">max_restart</a> = <a class=\"id\" href=\"#MAX_SOFTIRQ_RESTART\">MAX_SOFTIRQ_RESTART</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pending\">pending</a> = <a class=\"id\" href=\"#local_softirq_pending\">local_softirq_pending</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#account_system_vtime\">account_system_vtime</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__local_bh_disable\">__local_bh_disable</a>((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lockdep_softirq_enter\">lockdep_softirq_enter</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<a class=\"id\" href=\"#restart\">restart</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Reset the pending bitmask before enabling irqs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_softirq_pending\">set_softirq_pending</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#softirq_vec\">softirq_vec</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pending\">pending</a> &amp; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#prev_count\">prev_count</a> = <a class=\"id\" href=\"#preempt_count\">preempt_count</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kstat_incr_softirqs_this_cpu\">kstat_incr_softirqs_this_cpu</a>(<a class=\"id\" href=\"#h\">h</a> - <a class=\"id\" href=\"#softirq_vec\">softirq_vec</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_softirq_entry\">trace_softirq_entry</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#softirq_vec\">softirq_vec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#action\">action</a>(<a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_softirq_exit\">trace_softirq_exit</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#softirq_vec\">softirq_vec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#prev_count\">prev_count</a> != <a class=\"id\" href=\"#preempt_count\">preempt_count</a>())) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"huh, entered softirq %td %s %p\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"with preempt_count %08x,\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" exited with %08x?\\n\", <a class=\"id\" href=\"#h\">h</a> - <a class=\"id\" href=\"#softirq_vec\">softirq_vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#softirq_to_name\">softirq_to_name</a>[<a class=\"id\" href=\"#h\">h</a> - <a class=\"id\" href=\"#softirq_vec\">softirq_vec</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#action\">action</a>, <a class=\"id\" href=\"#prev_count\">prev_count</a>, <a class=\"id\" href=\"#preempt_count\">preempt_count</a>());", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_count\">preempt_count</a>() = <a class=\"id\" href=\"#prev_count\">prev_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_bh_qs\">rcu_bh_qs</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pending\">pending</a> >>= 1;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pending\">pending</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pending\">pending</a> = <a class=\"id\" href=\"#local_softirq_pending\">local_softirq_pending</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pending\">pending</a> && --<a class=\"id\" href=\"#max_restart\">max_restart</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pending\">pending</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wakeup_softirqd\">wakeup_softirqd</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lockdep_softirq_exit\">lockdep_softirq_exit</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#account_system_vtime\">account_system_vtime</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_local_bh_enable\">_local_bh_enable</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ARCH_HAS_DO_SOFTIRQ\">__ARCH_HAS_DO_SOFTIRQ</a>", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> void <a class=\"id\" href=\"#do_softirq\">do_softirq</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#pending\">pending</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pending\">pending</a> = <a class=\"id\" href=\"#local_softirq_pending\">local_softirq_pending</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pending\">pending</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__do_softirq\">__do_softirq</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Enter an interrupt context.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#irq_enter\">irq_enter</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_irq_enter\">rcu_irq_enter</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idle_cpu\">idle_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) && !<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__irq_enter\">__irq_enter</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_check_idle\">tick_check_idle</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__irq_enter\">__irq_enter</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_IRQ_EXIT_IRQS_DISABLED\">__ARCH_IRQ_EXIT_IRQS_DISABLED</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#invoke_softirq\">invoke_softirq</a>()<span class=\"ts\"/><a class=\"id\" href=\"#__do_softirq\">__do_softirq</a>()", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#invoke_softirq\">invoke_softirq</a>()<span class=\"ts\"/><a class=\"id\" href=\"#do_softirq\">do_softirq</a>()", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Exit an interrupt context. Process softirqs if needed and possible:</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#irq_exit\">irq_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#account_system_vtime\">account_system_vtime</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_hardirq_exit\">trace_hardirq_exit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sub_preempt_count\">sub_preempt_count</a>(<a class=\"id\" href=\"#IRQ_EXIT_OFFSET\">IRQ_EXIT_OFFSET</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>() && <a class=\"id\" href=\"#local_softirq_pending\">local_softirq_pending</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#invoke_softirq\">invoke_softirq</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_irq_exit\">rcu_irq_exit</a>();", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NO_HZ\">CONFIG_NO_HZ</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure that timer wheel updates are propagated */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idle_cpu\">idle_cpu</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>()) && !<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>() && !<a class=\"id\" href=\"#need_resched\">need_resched</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_nohz_stop_sched_tick\">tick_nohz_stop_sched_tick</a>(0);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable_no_resched\">preempt_enable_no_resched</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function must run with irqs disabled!</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#raise_softirq_irqoff\">raise_softirq_irqoff</a>(unsigned int <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raise_softirq_irqoff\">__raise_softirq_irqoff</a>(<a class=\"id\" href=\"#nr\">nr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we're in an interrupt or softirq, we're done</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (this also catches softirq-disabled code). We will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * actually run the softirq once we return from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the irq or softirq.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Otherwise we wake up ksoftirqd to make sure we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * schedule the softirq soon.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wakeup_softirqd\">wakeup_softirqd</a>();", 
"}", 
"", 
"void <a class=\"id\" href=\"#raise_softirq\">raise_softirq</a>(unsigned int <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raise_softirq_irqoff\">raise_softirq_irqoff</a>(<a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#open_softirq\">open_softirq</a>(int <a class=\"id\" href=\"#nr\">nr</a>, void (*<a class=\"id\" href=\"#action\">action</a>)(struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *))", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#softirq_vec\">softirq_vec</a>[<a class=\"id\" href=\"#nr\">nr</a>].<a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#action\">action</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Tasklets</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tasklet_head\">tasklet_head</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> **<a class=\"id\" href=\"#tail\">tail</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#tasklet_head\">tasklet_head</a>, <a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>);", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#tasklet_head\">tasklet_head</a>, <a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>);", 
"", 
"void <a class=\"id\" href=\"#__tasklet_schedule\">__tasklet_schedule</a>(struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = &amp;(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raise_softirq_irqoff\">raise_softirq_irqoff</a>(<a class=\"id\" href=\"#TASKLET_SOFTIRQ\">TASKLET_SOFTIRQ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__tasklet_schedule\">__tasklet_schedule</a>);", 
"", 
"void <a class=\"id\" href=\"#__tasklet_hi_schedule\">__tasklet_hi_schedule</a>(struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = &amp;(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raise_softirq_irqoff\">raise_softirq_irqoff</a>(<a class=\"id\" href=\"#HI_SOFTIRQ\">HI_SOFTIRQ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__tasklet_hi_schedule\">__tasklet_hi_schedule</a>);", 
"", 
"void <a class=\"id\" href=\"#__tasklet_hi_schedule_first\">__tasklet_hi_schedule_first</a>(struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raise_softirq_irqoff\">__raise_softirq_irqoff</a>(<a class=\"id\" href=\"#HI_SOFTIRQ\">HI_SOFTIRQ</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__tasklet_hi_schedule_first\">__tasklet_hi_schedule_first</a>);", 
"", 
"static void <a class=\"id\" href=\"#tasklet_action\">tasklet_action</a>(struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#list\">list</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#list\">list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#list\">list</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tasklet_trylock\">tasklet_trylock</a>(<a class=\"id\" href=\"#t\">t</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#count\">count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#TASKLET_STATE_SCHED\">TASKLET_STATE_SCHED</a>, &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tasklet_unlock\">tasklet_unlock</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tasklet_unlock\">tasklet_unlock</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = &amp;(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__raise_softirq_irqoff\">__raise_softirq_irqoff</a>(<a class=\"id\" href=\"#TASKLET_SOFTIRQ\">TASKLET_SOFTIRQ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tasklet_hi_action\">tasklet_hi_action</a>(struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#list\">list</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#list\">list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#list\">list</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tasklet_trylock\">tasklet_trylock</a>(<a class=\"id\" href=\"#t\">t</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#count\">count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#TASKLET_STATE_SCHED\">TASKLET_STATE_SCHED</a>, &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tasklet_unlock\">tasklet_unlock</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tasklet_unlock\">tasklet_unlock</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = &amp;(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__raise_softirq_irqoff\">__raise_softirq_irqoff</a>(<a class=\"id\" href=\"#HI_SOFTIRQ\">HI_SOFTIRQ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"", 
"void <a class=\"id\" href=\"#tasklet_init\">tasklet_init</a>(struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  void (*<a class=\"id\" href=\"#func\">func</a>)(unsigned long), unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#state\">state</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#count\">count</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#func\">func</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tasklet_init\">tasklet_init</a>);", 
"", 
"void <a class=\"id\" href=\"#tasklet_kill\">tasklet_kill</a>(struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Attempt to kill tasklet from interrupt\\n\");", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#TASKLET_STATE_SCHED\">TASKLET_STATE_SCHED</a>, &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#yield\">yield</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TASKLET_STATE_SCHED\">TASKLET_STATE_SCHED</a>, &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#state\">state</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tasklet_unlock_wait\">tasklet_unlock_wait</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TASKLET_STATE_SCHED\">TASKLET_STATE_SCHED</a>, &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tasklet_kill\">tasklet_kill</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * tasklet_hrtimer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The trampoline is called when the hrtimer expires. It schedules a tasklet</span>", 
"<span class=\"comment\"> * to run __tasklet_hrtimer_trampoline() which in turn will call the intended</span>", 
"<span class=\"comment\"> * hrtimer callback, but from softirq context.</span>", 
"<span class=\"comment\"> */</span>", 
"static enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> <a class=\"id\" href=\"#__hrtimer_tasklet_trampoline\">__hrtimer_tasklet_trampoline</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_hrtimer\">tasklet_hrtimer</a> *<a class=\"id\" href=\"#ttimer\">ttimer</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#timer\">timer</a>, struct <a class=\"id\" href=\"#tasklet_hrtimer\">tasklet_hrtimer</a>, <a class=\"id\" href=\"#timer\">timer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tasklet_hi_schedule\">tasklet_hi_schedule</a>(&amp;<a class=\"id\" href=\"#ttimer\">ttimer</a>-><a class=\"id\" href=\"#tasklet\">tasklet</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#HRTIMER_NORESTART\">HRTIMER_NORESTART</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helper function which calls the hrtimer callback from</span>", 
"<span class=\"comment\"> * tasklet/softirq context</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__tasklet_hrtimer_trampoline\">__tasklet_hrtimer_trampoline</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_hrtimer\">tasklet_hrtimer</a> *<a class=\"id\" href=\"#ttimer\">ttimer</a> = (void *)<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> <a class=\"id\" href=\"#restart\">restart</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#restart\">restart</a> = <a class=\"id\" href=\"#ttimer\">ttimer</a>-><a class=\"id\" href=\"#function\">function</a>(&amp;<a class=\"id\" href=\"#ttimer\">ttimer</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#restart\">restart</a> != <a class=\"id\" href=\"#HRTIMER_NORESTART\">HRTIMER_NORESTART</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a>(&amp;<a class=\"id\" href=\"#ttimer\">ttimer</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tasklet_hrtimer_init - Init a tasklet/hrtimer combo for softirq callbacks</span>", 
"<span class=\"comment\"> * @ttimer:<span class=\"ts\"/> tasklet_hrtimer which is initialized</span>", 
"<span class=\"comment\"> * @function:<span class=\"ts\"/> hrtimer callback funtion which gets called from softirq context</span>", 
"<span class=\"comment\"> * @which_clock: clock id (CLOCK_MONOTONIC/CLOCK_REALTIME)</span>", 
"<span class=\"comment\"> * @mode:<span class=\"ts\"/> hrtimer mode (HRTIMER_MODE_ABS/HRTIMER_MODE_REL)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tasklet_hrtimer_init\">tasklet_hrtimer_init</a>(struct <a class=\"id\" href=\"#tasklet_hrtimer\">tasklet_hrtimer</a> *<a class=\"id\" href=\"#ttimer\">ttimer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> (*<a class=\"id\" href=\"#function\">function</a>)(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#which_clock\">which_clock</a>, enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_init\">hrtimer_init</a>(&amp;<a class=\"id\" href=\"#ttimer\">ttimer</a>-><a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#which_clock\">which_clock</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ttimer\">ttimer</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#__hrtimer_tasklet_trampoline\">__hrtimer_tasklet_trampoline</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tasklet_init\">tasklet_init</a>(&amp;<a class=\"id\" href=\"#ttimer\">ttimer</a>-><a class=\"id\" href=\"#tasklet\">tasklet</a>, <a class=\"id\" href=\"#__tasklet_hrtimer_trampoline\">__tasklet_hrtimer_trampoline</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     (unsigned long)<a class=\"id\" href=\"#ttimer\">ttimer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ttimer\">ttimer</a>-><a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#function\">function</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tasklet_hrtimer_init\">tasklet_hrtimer_init</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Remote softirq bits</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> [<a class=\"id\" href=\"#NR_SOFTIRQS\">NR_SOFTIRQS</a>], <a class=\"id\" href=\"#softirq_work_list\">softirq_work_list</a>);", 
"<a class=\"id\" href=\"#EXPORT_PER_CPU_SYMBOL\">EXPORT_PER_CPU_SYMBOL</a>(<a class=\"id\" href=\"#softirq_work_list\">softirq_work_list</a>);", 
"", 
"static void <a class=\"id\" href=\"#__local_trigger\">__local_trigger</a>(struct <a class=\"id\" href=\"#call_single_data\">call_single_data</a> *<a class=\"id\" href=\"#cp\">cp</a>, int <a class=\"id\" href=\"#softirq\">softirq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#softirq_work_list\">softirq_work_list</a>[<a class=\"id\" href=\"#softirq\">softirq</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#head\">head</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Trigger the softirq only if the list was previously empty.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#next\">next</a> == &amp;<a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raise_softirq_irqoff\">raise_softirq_irqoff</a>(<a class=\"id\" href=\"#softirq\">softirq</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_USE_GENERIC_SMP_HELPERS\">CONFIG_USE_GENERIC_SMP_HELPERS</a>", 
"static void <a class=\"id\" href=\"#remote_softirq_receive\">remote_softirq_receive</a>(void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#call_single_data\">call_single_data</a> *<a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#softirq\">softirq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#softirq\">softirq</a> = <a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__local_trigger\">__local_trigger</a>(<a class=\"id\" href=\"#cp\">cp</a>, <a class=\"id\" href=\"#softirq\">softirq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__try_remote_softirq\">__try_remote_softirq</a>(struct <a class=\"id\" href=\"#call_single_data\">call_single_data</a> *<a class=\"id\" href=\"#cp\">cp</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#softirq\">softirq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#remote_softirq_receive\">remote_softirq_receive</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#cp\">cp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#softirq\">softirq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__smp_call_function_single\">__smp_call_function_single</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#cp\">cp</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#else <span class=\"comment\">/* CONFIG_USE_GENERIC_SMP_HELPERS */</span>", 
"static int <a class=\"id\" href=\"#__try_remote_softirq\">__try_remote_softirq</a>(struct <a class=\"id\" href=\"#call_single_data\">call_single_data</a> *<a class=\"id\" href=\"#cp\">cp</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#softirq\">softirq</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __send_remote_softirq - try to schedule softirq work on a remote cpu</span>", 
"<span class=\"comment\"> * @cp: private SMP call function data area</span>", 
"<span class=\"comment\"> * @cpu: the remote cpu</span>", 
"<span class=\"comment\"> * @this_cpu: the currently executing cpu</span>", 
"<span class=\"comment\"> * @softirq: the softirq for the work</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Attempt to schedule softirq work on a remote cpu.  If this cannot be</span>", 
"<span class=\"comment\"> * done, the work is instead queued up on the local cpu.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Interrupts must be disabled.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__send_remote_softirq\">__send_remote_softirq</a>(struct <a class=\"id\" href=\"#call_single_data\">call_single_data</a> *<a class=\"id\" href=\"#cp\">cp</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#this_cpu\">this_cpu</a>, int <a class=\"id\" href=\"#softirq\">softirq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a> == <a class=\"id\" href=\"#this_cpu\">this_cpu</a> || <a class=\"id\" href=\"#__try_remote_softirq\">__try_remote_softirq</a>(<a class=\"id\" href=\"#cp\">cp</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#softirq\">softirq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__local_trigger\">__local_trigger</a>(<a class=\"id\" href=\"#cp\">cp</a>, <a class=\"id\" href=\"#softirq\">softirq</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__send_remote_softirq\">__send_remote_softirq</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * send_remote_softirq - try to schedule softirq work on a remote cpu</span>", 
"<span class=\"comment\"> * @cp: private SMP call function data area</span>", 
"<span class=\"comment\"> * @cpu: the remote cpu</span>", 
"<span class=\"comment\"> * @softirq: the softirq for the work</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Like __send_remote_softirq except that disabling interrupts and</span>", 
"<span class=\"comment\"> * computing the current cpu is done for the caller.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#send_remote_softirq\">send_remote_softirq</a>(struct <a class=\"id\" href=\"#call_single_data\">call_single_data</a> *<a class=\"id\" href=\"#cp\">cp</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#softirq\">softirq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#this_cpu\">this_cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_cpu\">this_cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__send_remote_softirq\">__send_remote_softirq</a>(<a class=\"id\" href=\"#cp\">cp</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#this_cpu\">this_cpu</a>, <a class=\"id\" href=\"#softirq\">softirq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#send_remote_softirq\">send_remote_softirq</a>);", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#remote_softirq_cpu_notify\">remote_softirq_cpu_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If a CPU goes away, splice its entries to the current CPU</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and trigger a run of the softirq</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#action\">action</a> == <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a> || <a class=\"id\" href=\"#action\">action</a> == <a class=\"id\" href=\"#CPU_DEAD_FROZEN\">CPU_DEAD_FROZEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = (unsigned long) <a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
];
xr_frag_insert('l/95/3cebf320e5cd3a856dfd5268bbd6bae7653ef5.xr', __xr_tmp);
