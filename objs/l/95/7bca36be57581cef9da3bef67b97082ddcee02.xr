var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> = <a class=\"id\" href=\"#l\">l</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"  -> %d->%lld \", <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>));", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CHECK_BINSEARCH\">CHECK_BINSEARCH</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a> *<a class=\"id\" href=\"#chix\">chix</a>, *<a class=\"id\" href=\"#ix\">ix</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chix\">chix</a> = <a class=\"id\" href=\"#ix\">ix</a> = <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>); <a class=\"id\" href=\"#k\">k</a>++, <a class=\"id\" href=\"#ix\">ix</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>  if (<a class=\"id\" href=\"#k\">k</a> != 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ix\">ix</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>) <= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ix\">ix</a>[-1].<a class=\"id\" href=\"#ei_block\">ei_block</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"k=%d, ix=0x%p, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"first=0x%p\\n\", <a class=\"id\" href=\"#k\">k</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ix\">ix</a>, <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#eh\">eh</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%u <= %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ix\">ix</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ix\">ix</a>[-1].<a class=\"id\" href=\"#ei_block\">ei_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#k\">k</a> && <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ix\">ix</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ix\">ix</a>[-1].<a class=\"id\" href=\"#ei_block\">ei_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ix\">ix</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chix\">chix</a> = <a class=\"id\" href=\"#ix\">ix</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#chix\">chix</a> != <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_binsearch:</span>", 
"<span class=\"comment\"> * binary search for closest extent of the given block</span>", 
"<span class=\"comment\"> * the header must be checked before calling this</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#ext4_ext_binsearch\">ext4_ext_binsearch</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#block\">block</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#r\">r</a>, *<a class=\"id\" href=\"#l\">l</a>, *<a class=\"id\" href=\"#m\">m</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this leaf is empty:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we get such a leaf in split/add case</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"binsearch for %u:  \", <a class=\"id\" href=\"#block\">block</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>) + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#EXT_LAST_EXTENT\">EXT_LAST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#l\">l</a> <= <a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#l\">l</a> + (<a class=\"id\" href=\"#r\">r</a> - <a class=\"id\" href=\"#l\">l</a>) / 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#m\">m</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#m\">m</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"%p(%u):%p(%u):%p(%u) \", <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#l\">l</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a> = <a class=\"id\" href=\"#l\">l</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"  -> %d:%llu:[%d]%d \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>));", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CHECK_BINSEARCH\">CHECK_BINSEARCH</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#chex\">chex</a>, *<a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chex\">chex</a> = <a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>); <a class=\"id\" href=\"#k\">k</a>++, <a class=\"id\" href=\"#ex\">ex</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#k\">k</a> && <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>[-1].<a class=\"id\" href=\"#ee_block\">ee_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chex\">chex</a> = <a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#chex\">chex</a> != <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"}", 
"", 
"int <a class=\"id\" href=\"#ext4_ext_tree_init\">ext4_ext_tree_init</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#ext_inode_hdr\">ext_inode_hdr</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_depth\">eh_depth</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_magic\">eh_magic</a> = <a class=\"id\" href=\"#EXT4_EXT_MAGIC\">EXT4_EXT_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_space_root\">ext4_ext_space_root</a>(<a class=\"id\" href=\"#inode\">inode</a>, 0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_invalidate_cache\">ext4_ext_invalidate_cache</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *", 
"<a class=\"id\" href=\"#ext4_ext_find_extent\">ext4_ext_find_extent</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>short int <a class=\"id\" href=\"#depth\">depth</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ppos\">ppos</a> = 0, <a class=\"id\" href=\"#alloc\">alloc</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#ext_inode_hdr\">ext_inode_hdr</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* account possible depth increase */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a>) * (<a class=\"id\" href=\"#depth\">depth</a> + 2),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloc\">alloc</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[0].<a class=\"id\" href=\"#p_hdr\">p_hdr</a> = <a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[0].<a class=\"id\" href=\"#p_bh\">p_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* walk through the tree */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#need_to_validate\">need_to_validate</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"depth %d: num %d, max %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>), <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_binsearch_idx\">ext4_ext_binsearch_idx</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_block\">p_block</a> = <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_depth\">p_depth</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_block\">p_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh_uptodate_or_lock\">bh_uptodate_or_lock</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bh_submit_read\">bh_submit_read</a>(<a class=\"id\" href=\"#bh\">bh</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* validate the extent entries */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_to_validate\">need_to_validate</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppos\">ppos</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ppos\">ppos</a> &gt; <a class=\"id\" href=\"#depth\">depth</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"ppos %d > depth %d\", <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_bh\">p_bh</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a> = <a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>--;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_to_validate\">need_to_validate</a> && <a class=\"id\" href=\"#ext4_ext_check\">ext4_ext_check</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#eh\">eh</a>, <a class=\"id\" href=\"#i\">i</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_depth\">p_depth</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find extent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_binsearch\">ext4_ext_binsearch</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* if not an empty leaf */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_block\">p_block</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_show_path\">ext4_ext_show_path</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#path\">path</a>;", 
"", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alloc\">alloc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_insert_index:</span>", 
"<span class=\"comment\"> * insert new index [@logical;@ptr] into the block at @curp;</span>", 
"<span class=\"comment\"> * check where to insert: before @curp or after @curp</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_ext_insert_index\">ext4_ext_insert_index</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#curp\">curp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a> *<a class=\"id\" href=\"#ix\">ix</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#curp\">curp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#logical\">logical</a> == <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"logical %d == ei_block %d!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#EXT_MAX_INDEX\">EXT_MAX_INDEX</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>) - <a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#logical\">logical</a> &gt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* insert after */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> != <a class=\"id\" href=\"#EXT_LAST_INDEX\">EXT_LAST_INDEX</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#len\">len</a> - 1) * sizeof(struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#len\">len</a> &lt; 0 ? 0 : <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"insert new index %d after: %llu. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"move %d from 0x%p to 0x%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> + 1), (<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> + 2));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> + 2, <a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> + 1, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a> = <a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> + 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* insert before */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#len\">len</a> * sizeof(struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#len\">len</a> &lt; 0 ? 0 : <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"insert new index %d before: %llu. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"move %d from 0x%p to 0x%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>, (<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> + 1));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> + 1, <a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a> = <a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#logical\">logical</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_idx_store_pblock\">ext4_idx_store_pblock</a>(<a class=\"id\" href=\"#ix\">ix</a>, <a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>, 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &gt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"logical %d == ei_block %d!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ix\">ix</a> &gt; <a class=\"id\" href=\"#EXT_LAST_INDEX\">EXT_LAST_INDEX</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"ix > EXT_LAST_INDEX!\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#curp\">curp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_std_error\">ext4_std_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_split:</span>", 
"<span class=\"comment\"> * inserts new subtree into the path, using free index entry</span>", 
"<span class=\"comment\"> * at depth @at:</span>", 
"<span class=\"comment\"> * - allocates all needed blocks (new leaf and all intermediate index blocks)</span>", 
"<span class=\"comment\"> * - makes decision where to split</span>", 
"<span class=\"comment\"> * - moves remaining extents and index entries (right to the split point)</span>", 
"<span class=\"comment\"> *   into the newly allocated blocks</span>", 
"<span class=\"comment\"> * - initializes subtree</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_ext_split\">ext4_ext_split</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#newext\">newext</a>, int <a class=\"id\" href=\"#at\">at</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#neh\">neh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a> *<a class=\"id\" href=\"#fidx\">fidx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#at\">at</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#a\">a</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#newblock\">newblock</a>, <a class=\"id\" href=\"#oldblock\">oldblock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#border\">border</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> *<a class=\"id\" href=\"#ablocks\">ablocks</a> = <a class=\"id\" href=\"#NULL\">NULL</a>; <span class=\"comment\">/* array of allocated blocks */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* make decision: where to split? */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: now decision is simplest: at current extent */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if current leaf will be split, then we should use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * border from split point */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> &gt; <a class=\"id\" href=\"#EXT_MAX_EXTENT\">EXT_MAX_EXTENT</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"p_ext > EXT_MAX_EXTENT!\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> != <a class=\"id\" href=\"#EXT_MAX_EXTENT\">EXT_MAX_EXTENT</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#border\">border</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>[1].<a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"leaf will be split.\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" next leaf starts at %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#border\">border</a>));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#border\">border</a> = <a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"leaf will be added.\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" next leaf starts at %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#border\">border</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If error occurs, then we break processing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and mark filesystem read-only. index won't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be inserted and tree will be in consistent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * state. Next mount will repair buffers too.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get array to track all allocated blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need this to handle errors and free blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * upon them.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ablocks\">ablocks</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>) * <a class=\"id\" href=\"#depth\">depth</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ablocks\">ablocks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate all needed blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"allocate %d blocks for indexes/leaf\\n\", <a class=\"id\" href=\"#depth\">depth</a> - <a class=\"id\" href=\"#at\">at</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#a\">a</a> = 0; <a class=\"id\" href=\"#a\">a</a> &lt; <a class=\"id\" href=\"#depth\">depth</a> - <a class=\"id\" href=\"#at\">at</a>; <a class=\"id\" href=\"#a\">a</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#ext4_ext_new_meta_block\">ext4_ext_new_meta_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#newext\">newext</a>, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newblock\">newblock</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ablocks\">ablocks</a>[<a class=\"id\" href=\"#a\">a</a>] = <a class=\"id\" href=\"#newblock\">newblock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* initialize new leaf */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#ablocks\">ablocks</a>[--<a class=\"id\" href=\"#a\">a</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#newblock\">newblock</a> == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"newblock == 0!\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_create_access\">ext4_journal_get_create_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a> = <a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_space_block\">ext4_ext_space_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, 0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_magic\">eh_magic</a> = <a class=\"id\" href=\"#EXT4_EXT_MAGIC\">EXT4_EXT_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_depth\">eh_depth</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#neh\">neh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* move remainder of path[depth] to the new leaf */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> !=", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"eh_entries %d != eh_max %d!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* start copy from next extent */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* TODO: we could do it by single memmove */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>++;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> <=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT_MAX_EXTENT\">EXT_MAX_EXTENT</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"move %d:%llu:[%d]%d in new leaf %llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*memmove(ex++, path[depth].p_ext++,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct ext4_extent));</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>neh-&gt;eh_entries++;*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>-<a class=\"id\" href=\"#m\">m</a>, sizeof(struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a>)*<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>, <a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* correct old leaf */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>, -<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* create intermediate indexes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#depth\">depth</a> - <a class=\"id\" href=\"#at\">at</a> - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#k\">k</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"k %d < 0!\", <a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"create %d intermediate indices\\n\", <a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* insert new index into current index block */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* current depth stored in i var */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#depth\">depth</a> - 1;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#k\">k</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oldblock\">oldblock</a> = <a class=\"id\" href=\"#newblock\">newblock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#ablocks\">ablocks</a>[--<a class=\"id\" href=\"#a\">a</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_create_access\">ext4_journal_get_create_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a> = <a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_magic\">eh_magic</a> = <a class=\"id\" href=\"#EXT4_EXT_MAGIC\">EXT4_EXT_MAGIC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_space_block_idx\">ext4_ext_space_block_idx</a>(<a class=\"id\" href=\"#inode\">inode</a>, 0));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_depth\">eh_depth</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#depth\">depth</a> - <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fidx\">fidx</a> = <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#neh\">neh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fidx\">fidx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a> = <a class=\"id\" href=\"#border\">border</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_idx_store_pblock\">ext4_idx_store_pblock</a>(<a class=\"id\" href=\"#fidx\">fidx</a>, <a class=\"id\" href=\"#oldblock\">oldblock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"int.index at %d (block %llu): %u -> %llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#newblock\">newblock</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#border\">border</a>), <a class=\"id\" href=\"#oldblock\">oldblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* copy indexes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"cur 0x%p, last 0x%p\\n\", <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT_MAX_INDEX\">EXT_MAX_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#EXT_MAX_INDEX\">EXT_MAX_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>) !=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT_LAST_INDEX\">EXT_LAST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"EXT_MAX_INDEX != EXT_LAST_INDEX ee_block %d!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a> <= <a class=\"id\" href=\"#EXT_MAX_INDEX\">EXT_MAX_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"%d: move %d:%llu in new index %llu\\n\", <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*memmove(++fidx, path[i].p_idx++,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct ext4_extent_idx));</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>neh-&gt;eh_entries++;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>BUG_ON(neh-&gt;eh_entries &gt; neh-&gt;eh_max);*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(++<a class=\"id\" href=\"#fidx\">fidx</a>, <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a> - <a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a>) * <a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>, <a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* correct old index */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>, -<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>--;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* insert new index */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_insert_index\">ext4_ext_insert_index</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#at\">at</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#border\">border</a>), <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* free all allocated blocks in error case */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#depth\">depth</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ablocks\">ablocks</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0, <a class=\"id\" href=\"#ablocks\">ablocks</a>[<a class=\"id\" href=\"#i\">i</a>], 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ablocks\">ablocks</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_grow_indepth:</span>", 
"<span class=\"comment\"> * implements tree growing procedure:</span>", 
"<span class=\"comment\"> * - allocates new block</span>", 
"<span class=\"comment\"> * - moves top-level data (index block or leaf) into the new block</span>", 
"<span class=\"comment\"> * - initializes new top-level, creating index that points to the</span>", 
"<span class=\"comment\"> *   just created block</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_ext_grow_indepth\">ext4_ext_grow_indepth</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#newext\">newext</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#curp\">curp</a> = <a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#neh\">neh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#newblock\">newblock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#ext4_ext_new_meta_block\">ext4_ext_new_meta_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#newext\">newext</a>, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newblock\">newblock</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_std_error\">ext4_std_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_create_access\">ext4_journal_get_create_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* move top-level index/leaf into new block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>, sizeof(<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data\">i_data</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set size of new block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a> = <a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* old root could have indexes or leaves</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so calculate e_max right way */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_space_block_idx\">ext4_ext_space_block_idx</a>(<a class=\"id\" href=\"#inode\">inode</a>, 0));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_space_block\">ext4_ext_space_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, 0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_magic\">eh_magic</a> = <a class=\"id\" href=\"#EXT4_EXT_MAGIC\">EXT4_EXT_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* create index in new top-level index: num,max,pointer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#curp\">curp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_magic\">eh_magic</a> = <a class=\"id\" href=\"#EXT4_EXT_MAGIC\">EXT4_EXT_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_space_root_idx\">ext4_ext_space_root_idx</a>(<a class=\"id\" href=\"#inode\">inode</a>, 0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> = <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>[0].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_depth\">eh_depth</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[0].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>)-><a class=\"id\" href=\"#ei_block\">ei_block</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#path\">path</a>[0].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>)-><a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_idx_store_pblock\">ext4_idx_store_pblock</a>(<a class=\"id\" href=\"#curp\">curp</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>, <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a> = <a class=\"id\" href=\"#ext_inode_hdr\">ext_inode_hdr</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"new root: num %d(%d), lblock %d, ptr %llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>), <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#neh\">neh</a>)-><a class=\"id\" href=\"#ei_block\">ei_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#neh\">neh</a>)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neh\">neh</a>-><a class=\"id\" href=\"#eh_depth\">eh_depth</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#curp\">curp</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_create_new_leaf:</span>", 
"<span class=\"comment\"> * finds empty index and adds new leaf.</span>", 
"<span class=\"comment\"> * if no free index is found, then it requests in-depth growing.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_ext_create_new_leaf\">ext4_ext_create_new_leaf</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#newext\">newext</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#curp\">curp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<a class=\"id\" href=\"#repeat\">repeat</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* walk up to the tree and look for free index entry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curp\">curp</a> = <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#i\">i</a> &gt; 0 && !<a class=\"id\" href=\"#EXT_HAS_FREE_INDEX\">EXT_HAS_FREE_INDEX</a>(<a class=\"id\" href=\"#curp\">curp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curp\">curp</a>--;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we use already allocated block for index block,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so subsequent data blocks should be contiguous */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT_HAS_FREE_INDEX\">EXT_HAS_FREE_INDEX</a>(<a class=\"id\" href=\"#curp\">curp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if we found index with free entry, then use that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * entry: create all needed subtree and add new leaf */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_split\">ext4_ext_split</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#newext\">newext</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* refill path */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#ext4_ext_find_extent\">ext4_ext_find_extent</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a>)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#path\">path</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* tree is full, time to grow in depth */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_grow_indepth\">ext4_ext_grow_indepth</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#newext\">newext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* refill path */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#ext4_ext_find_extent\">ext4_ext_find_extent</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a>)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#path\">path</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * only first (depth 0 -&gt; 1) produces free space;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in all other cases we have to split the grown tree</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> == <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* now we need to split */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * search the closest allocated block to the left for *logical</span>", 
"<span class=\"comment\"> * and returns it at @logical + it's physical address at @phys</span>", 
"<span class=\"comment\"> * if *logical is the smallest allocated block, the function</span>", 
"<span class=\"comment\"> * returns 0 at @phys</span>", 
"<span class=\"comment\"> * return value contains 0 (success) or error code</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext4_ext_search_left\">ext4_ext_search_left</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> *<a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> *<a class=\"id\" href=\"#phys\">phys</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a> *<a class=\"id\" href=\"#ix\">ix</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>, <a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#path\">path</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"path == NULL *logical %d!\", *<a class=\"id\" href=\"#logical\">logical</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#phys\">phys</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a> == 0 && <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* usually extent in the path covers blocks smaller</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then *logical, but it can be that extent is the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * first one in the file */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#logical\">logical</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>) != <a class=\"id\" href=\"#ex\">ex</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"EXT_FIRST_EXTENT != ex *logical %d ee_block %d!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>while (--<a class=\"id\" href=\"#depth\">depth</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ix\">ix</a> != <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"ix (%d) != EXT_FIRST_INDEX (%d) (depth %d)!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ix\">ix</a> != <a class=\"id\" href=\"#NULL\">NULL</a> ? <a class=\"id\" href=\"#ix\">ix</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a> : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>) != <a class=\"id\" href=\"#NULL\">NULL</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>)-><a class=\"id\" href=\"#ei_block\">ei_block</a> : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(*<a class=\"id\" href=\"#logical\">logical</a> &lt; (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#ee_len\">ee_len</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"logical %d < ee_block %d + ee_len %d!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>), <a class=\"id\" href=\"#ee_len\">ee_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#logical\">logical</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#ee_len\">ee_len</a> - 1;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#phys\">phys</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>) + <a class=\"id\" href=\"#ee_len\">ee_len</a> - 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * search the closest allocated block to the right for *logical</span>", 
"<span class=\"comment\"> * and returns it at @logical + it's physical address at @phys</span>", 
"<span class=\"comment\"> * if *logical is the smallest allocated block, the function</span>", 
"<span class=\"comment\"> * returns 0 at @phys</span>", 
"<span class=\"comment\"> * return value contains 0 (success) or error code</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext4_ext_search_right\">ext4_ext_search_right</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> *<a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> *<a class=\"id\" href=\"#phys\">phys</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a> *<a class=\"id\" href=\"#ix\">ix</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>;<span class=\"ts\"/><span class=\"comment\">/* Note, NOT eh_depth; depth from top of tree */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#path\">path</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"path == NULL *logical %d!\", *<a class=\"id\" href=\"#logical\">logical</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#phys\">phys</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a> == 0 && <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* usually extent in the path covers blocks smaller</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then *logical, but it can be that extent is the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * first one in the file */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#logical\">logical</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>) != <a class=\"id\" href=\"#ex\">ex</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"first_extent(path[%d].p_hdr) != ex\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>while (--<a class=\"id\" href=\"#depth\">depth</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ix\">ix</a> != <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"ix != EXT_FIRST_INDEX *logical %d!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<a class=\"id\" href=\"#logical\">logical</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#logical\">logical</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#phys\">phys</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(*<a class=\"id\" href=\"#logical\">logical</a> &lt; (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#ee_len\">ee_len</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"logical %d < ee_block %d + ee_len %d!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>), <a class=\"id\" href=\"#ee_len\">ee_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ex\">ex</a> != <a class=\"id\" href=\"#EXT_LAST_EXTENT\">EXT_LAST_EXTENT</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* next allocated block in this leaf */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#logical\">logical</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#phys\">phys</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* go up and search for index to the right */</span>", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#depth\">depth</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ix\">ix</a> != <a class=\"id\" href=\"#EXT_LAST_INDEX\">EXT_LAST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#got_index\">got_index</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we've gone up to the root and found no index to the right */</span>", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#got_index\">got_index</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* we've found index to the right, let's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * follow it and find the closest allocated</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block to the right */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#ix\">ix</a>);", 
"<span class=\"ts\"/>while (++<a class=\"id\" href=\"#depth\">depth</a> &lt; <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* subtract from p_depth to get proper eh_depth */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_check\">ext4_ext_check</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#eh\">eh</a>, <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a> - <a class=\"id\" href=\"#depth\">depth</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a> = <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#ix\">ix</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_check\">ext4_ext_check</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#eh\">eh</a>, <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a> - <a class=\"id\" href=\"#depth\">depth</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#logical\">logical</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#phys\">phys</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_next_allocated_block:</span>", 
"<span class=\"comment\"> * returns allocated block in subsequent extent or EXT_MAX_BLOCK.</span>", 
"<span class=\"comment\"> * NOTE: it considers block number from index entry as</span>", 
"<span class=\"comment\"> * allocated block. Thus, index entries have to be consistent</span>", 
"<span class=\"comment\"> * with leaves.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a>", 
"<a class=\"id\" href=\"#ext4_ext_next_allocated_block\">ext4_ext_next_allocated_block</a>(struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#path\">path</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a> == 0 && <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>;", 
"", 
];
xr_frag_insert('l/95/7bca36be57581cef9da3bef67b97082ddcee02.xr', __xr_tmp);
