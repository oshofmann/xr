var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copycount\">copycount</a> = <a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#msf\">msf</a>-><a class=\"id\" href=\"#imsf_numsrc\">imsf_numsrc</a> ? <a class=\"id\" href=\"#count\">count</a> : <a class=\"id\" href=\"#msf\">msf</a>-><a class=\"id\" href=\"#imsf_numsrc\">imsf_numsrc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#copycount\">copycount</a> * sizeof(<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msf\">msf</a>-><a class=\"id\" href=\"#imsf_numsrc\">imsf_numsrc</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#IP_MSFILTER_SIZE\">IP_MSFILTER_SIZE</a>(<a class=\"id\" href=\"#copycount\">copycount</a>), <a class=\"id\" href=\"#optlen\">optlen</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#msf\">msf</a>, <a class=\"id\" href=\"#IP_MSFILTER_SIZE\">IP_MSFILTER_SIZE</a>(0))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(&amp;<a class=\"id\" href=\"#optval\">optval</a>-><a class=\"id\" href=\"#imsf_slist\">imsf_slist</a>[0], <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>, <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip_mc_gsfget\">ip_mc_gsfget</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#group_filter\">group_filter</a> *<a class=\"id\" href=\"#gsf\">gsf</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#group_filter\">group_filter</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#copycount\">copycount</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *<a class=\"id\" href=\"#psin\">psin</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_mc_socklist\">ip_mc_socklist</a> *<a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_sf_socklist\">ip_sf_socklist</a> *<a class=\"id\" href=\"#psl\">psl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psin\">psin</a> = (struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_group\">gf_group</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#psin\">psin</a>-><a class=\"id\" href=\"#sin_family\">sin_family</a> != <a class=\"id\" href=\"#AF_INET\">AF_INET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#psin\">psin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv4_is_multicast\">ipv4_is_multicast</a>(<a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#multi\">multi</a>.<a class=\"id\" href=\"#imr_multiaddr\">imr_multiaddr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> == <a class=\"id\" href=\"#addr\">addr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#multi\">multi</a>.<a class=\"id\" href=\"#imr_ifindex\">imr_ifindex</a> == <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_interface\">gf_interface</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* must have a prior join */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_fmode\">gf_fmode</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflist\">sflist</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#psl\">psl</a> ? <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a> : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copycount\">copycount</a> = <a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a> ? <a class=\"id\" href=\"#count\">count</a> : <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#GROUP_FILTER_SIZE\">GROUP_FILTER_SIZE</a>(<a class=\"id\" href=\"#copycount\">copycount</a>), <a class=\"id\" href=\"#optlen\">optlen</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#gsf\">gsf</a>, <a class=\"id\" href=\"#GROUP_FILTER_SIZE\">GROUP_FILTER_SIZE</a>(0))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#copycount\">copycount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#ss\">ss</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psin\">psin</a> = (struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#ss\">ss</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>, 0, sizeof(<a class=\"id\" href=\"#ss\">ss</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psin\">psin</a>-><a class=\"id\" href=\"#sin_family\">sin_family</a> = <a class=\"id\" href=\"#AF_INET\">AF_INET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psin\">psin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> = <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(&amp;<a class=\"id\" href=\"#optval\">optval</a>-><a class=\"id\" href=\"#gf_slist\">gf_slist</a>[<a class=\"id\" href=\"#i\">i</a>], &amp;<a class=\"id\" href=\"#ss\">ss</a>, sizeof(<a class=\"id\" href=\"#ss\">ss</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * check if a multicast source filter allows delivery for a given &lt;src,dst,intf&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ip_mc_sf_allow\">ip_mc_sf_allow</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#loc_addr\">loc_addr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>, int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_mc_socklist\">ip_mc_socklist</a> *<a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_sf_socklist\">ip_sf_socklist</a> *<a class=\"id\" href=\"#psl\">psl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv4_is_multicast\">ipv4_is_multicast</a>(<a class=\"id\" href=\"#loc_addr\">loc_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>); <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#multi\">multi</a>.<a class=\"id\" href=\"#imr_multiaddr\">imr_multiaddr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> == <a class=\"id\" href=\"#loc_addr\">loc_addr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#multi\">multi</a>.<a class=\"id\" href=\"#imr_ifindex\">imr_ifindex</a> == <a class=\"id\" href=\"#dif\">dif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_all\">mc_all</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflist\">sflist</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> == <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#psl\">psl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>] == <a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> == <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a> && <a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> == <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a> && <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<a class=\"id\" href=\"#unlock\">unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A socket is closing.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ip_mc_drop_socket\">ip_mc_drop_socket</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_mc_socklist\">ip_mc_socklist</a> *<a class=\"id\" href=\"#iml\">iml</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#iml\">iml</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>, <a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#next\">next</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#inetdev_by_index\">inetdev_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#multi\">multi</a>.<a class=\"id\" href=\"#imr_ifindex\">imr_ifindex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ip_mc_leave_src\">ip_mc_leave_src</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#iml\">iml</a>, <a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
];
xr_frag_insert('l/96/1874bee10af2781ce52ea0358160911adf815c.xr', __xr_tmp);
