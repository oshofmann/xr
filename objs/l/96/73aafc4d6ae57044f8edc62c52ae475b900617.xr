var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *  modify it under the terms of the GNU General Public License as</span>", 
"<span class=\"comment\"> *  published by the Free Software Foundation, version 2 of the</span>", 
"<span class=\"comment\"> *  License.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nsproxy\">nsproxy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#user_namespace\">user_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highuid\">highuid</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cred\">cred</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Create a new user namespace, deriving the creator from the user in the</span>", 
"<span class=\"comment\"> * passed credentials, and replacing that user with the new root user for the</span>", 
"<span class=\"comment\"> * new namespace.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is called by copy_creds(), which will finish setting the target task's</span>", 
"<span class=\"comment\"> * credentials.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#create_user_ns\">create_user_ns</a>(struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *<a class=\"id\" href=\"#root_user\">root_user</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ns\">ns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0; <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#UIDHASH_SZ\">UIDHASH_SZ</a>; ++<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_HLIST_HEAD\">INIT_HLIST_HEAD</a>(<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#uidhash_table\">uidhash_table</a> + <a class=\"id\" href=\"#n\">n</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Alloc new root user.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_user\">root_user</a> = <a class=\"id\" href=\"#alloc_uid\">alloc_uid</a>(<a class=\"id\" href=\"#ns\">ns</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#root_user\">root_user</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set the new root user in the credentials under preparation */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#creator\">creator</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#root_user\">root_user</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#euid\">euid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#suid\">suid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#gid\">gid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#egid\">egid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#sgid\">sgid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_group_info\">put_group_info</a>(<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#group_info\">group_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#group_info\">group_info</a> = <a class=\"id\" href=\"#get_group_info\">get_group_info</a>(&amp;<a class=\"id\" href=\"#init_groups\">init_groups</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KEYS\">CONFIG_KEYS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* tgcred will be cleared in our caller bc CLONE_THREAD won't be set */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* root_user holds a reference to ns, our reference can be dropped */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_user_ns\">put_user_ns</a>(<a class=\"id\" href=\"#ns\">ns</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Deferred destructor for a user namespace.  This is required because</span>", 
"<span class=\"comment\"> * free_user_ns() may be called with uidhash_lock held, but we need to call</span>", 
"<span class=\"comment\"> * back to free_uid() which will want to take the lock again.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#free_user_ns_work\">free_user_ns_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a>, <a class=\"id\" href=\"#destroyer\">destroyer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_uid\">free_uid</a>(<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#creator\">creator</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ns\">ns</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#free_user_ns\">free_user_ns</a>(struct <a class=\"id\" href=\"#kref\">kref</a> *<a class=\"id\" href=\"#kref\">kref</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kref\">kref</a>, struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a>, <a class=\"id\" href=\"#kref\">kref</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#destroyer\">destroyer</a>, <a class=\"id\" href=\"#free_user_ns_work\">free_user_ns_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#destroyer\">destroyer</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#free_user_ns\">free_user_ns</a>);", 
"", 
"<a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#user_ns_map_uid\">user_ns_map_uid</a>(struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#to\">to</a>, const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#uid\">uid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#to\">to</a> == <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#user_ns\">user_ns</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#uid\">uid</a>;", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Is cred-&gt;user the creator of the target user_ns</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or the creator of one of it's parents?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for ( <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#to\">to</a>; <a class=\"id\" href=\"#tmp\">tmp</a> != &amp;<a class=\"id\" href=\"#init_user_ns\">init_user_ns</a>;", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#creator\">creator</a>-><a class=\"id\" href=\"#user_ns\">user_ns</a> ) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#user\">user</a> == <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#creator\">creator</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#uid_t\">uid_t</a>)0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No useful relationship so no mapping */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#overflowuid\">overflowuid</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#user_ns_map_gid\">user_ns_map_gid</a>(struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#to\">to</a>, const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#gid\">gid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#to\">to</a> == <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#user_ns\">user_ns</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#gid\">gid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Is cred-&gt;user the creator of the target user_ns</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or the creator of one of it's parents?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for ( <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#to\">to</a>; <a class=\"id\" href=\"#tmp\">tmp</a> != &amp;<a class=\"id\" href=\"#init_user_ns\">init_user_ns</a>;", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#creator\">creator</a>-><a class=\"id\" href=\"#user_ns\">user_ns</a> ) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#user\">user</a> == <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#creator\">creator</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#gid_t\">gid_t</a>)0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No useful relationship so no mapping */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#overflowgid\">overflowgid</a>;", 
"}", 
];
xr_frag_insert('l/96/73aafc4d6ae57044f8edc62c52ae475b900617.xr', __xr_tmp);
