var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/jbd/checkpoint.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by Stephen C. Tweedie &lt;sct@redhat.com&gt;, 1999</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 1999 Red Hat Software --- All Rights Reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is part of the Linux kernel and is made available under</span>", 
"<span class=\"comment\"> * the terms of the GNU General Public License, version 2, or at your</span>", 
"<span class=\"comment\"> * option, any later version, incorporated herein by reference.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Checkpoint routines for the generic filesystem journaling code.</span>", 
"<span class=\"comment\"> * Part of the ext2fs journaling system.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Checkpointing is the process of ensuring that a section of the log is</span>", 
"<span class=\"comment\"> * committed fully to disk, so that that portion of the log can be</span>", 
"<span class=\"comment\"> * reused.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd\">jbd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Unlink a buffer from a transaction checkpoint list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__buffer_unlink_first\">__buffer_unlink_first</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> == <a class=\"id\" href=\"#jh\">jh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> == <a class=\"id\" href=\"#jh\">jh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Unlink a buffer from a transaction checkpoint(io) list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__buffer_unlink\">__buffer_unlink</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__buffer_unlink_first\">__buffer_unlink_first</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> == <a class=\"id\" href=\"#jh\">jh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> == <a class=\"id\" href=\"#jh\">jh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Move a buffer from the checkpoint list to the checkpoint io list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__buffer_relink_io\">__buffer_relink_io</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__buffer_unlink_first\">__buffer_unlink_first</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Try to release a checkpointed buffer from its transaction.</span>", 
"<span class=\"comment\"> * Returns 1 if we released it and 2 if we also released the</span>", 
"<span class=\"comment\"> * whole transaction.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Requires j_list_lock</span>", 
"<span class=\"comment\"> * Called under jbd_lock_bh_state(jh2bh(jh)), and drops it</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__try_to_free_cp_buf\">__try_to_free_cp_buf</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_jlist\">b_jlist</a> == <a class=\"id\" href=\"#BJ_None\">BJ_None</a> && !<a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#buffer_dirty\">buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>) && !<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"remove from checkpoint list\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__journal_remove_checkpoint\">__journal_remove_checkpoint</a>(<a class=\"id\" href=\"#jh\">jh</a>) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_remove_journal_head\">journal_remove_journal_head</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"release\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * __log_wait_for_space: wait until there is space in the journal.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called under j-state_lock *only*.  It will be unlocked if we have to wait</span>", 
"<span class=\"comment\"> * for a checkpoint to free up some space in the log.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__log_wait_for_space\">__log_wait_for_space</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nblocks\">nblocks</a>, <a class=\"id\" href=\"#space_left\">space_left</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#assert_spin_locked\">assert_spin_locked</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#jbd_space_needed\">jbd_space_needed</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#__log_space_left\">__log_space_left</a>(<a class=\"id\" href=\"#journal\">journal</a>) &lt; <a class=\"id\" href=\"#nblocks\">nblocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JFS_ABORT\">JFS_ABORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Test again, another process may have checkpointed while we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * were waiting for the checkpoint lock. If there are no</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * transactions ready to be checkpointed, try to recover</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * journal space by calling cleanup_journal_tail(), and if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that doesn't work, by waiting for the currently committing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * transaction to complete.  If there is absolutely no way</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to make progress, this is either a BUG or corrupted</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * filesystem, so abort the journal and leave a stack</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * trace for forensic evidence.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#jbd_space_needed\">jbd_space_needed</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space_left\">space_left</a> = <a class=\"id\" href=\"#__log_space_left\">__log_space_left</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#space_left\">space_left</a> &lt; <a class=\"id\" href=\"#nblocks\">nblocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#chkpt\">chkpt</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid\">tid</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chkpt\">chkpt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#log_do_checkpoint\">log_do_checkpoint</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#cleanup_journal_tail\">cleanup_journal_tail</a>(<a class=\"id\" href=\"#journal\">journal</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We were able to recover space; yay! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#tid\">tid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#log_wait_commit\">log_wait_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: needed %d blocks and \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"only had %d space available\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#nblocks\">nblocks</a>, <a class=\"id\" href=\"#space_left\">space_left</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: no way to get more \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"journal space\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_abort\">journal_abort</a>(<a class=\"id\" href=\"#journal\">journal</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We were unable to perform jbd_trylock_bh_state() inside j_list_lock.</span>", 
"<span class=\"comment\"> * The caller must restart a list walk.  Wait for someone else to run</span>", 
"<span class=\"comment\"> * jbd_unlock_bh_state().</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#jbd_sync_bh\">jbd_sync_bh</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_bh\">get_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_lock_bh_state\">jbd_lock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Clean up transaction's list of buffers submitted for io.</span>", 
"<span class=\"comment\"> * We wait for any pending IO to complete and remove any clean</span>", 
"<span class=\"comment\"> * buffers. Note that we take the buffers in the opposite ordering</span>", 
"<span class=\"comment\"> * from the one in which they were submitted for IO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return 0 on success, and return &lt;0 if some buffers have failed</span>", 
"<span class=\"comment\"> * to be written out.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__wait_cp_io\">__wait_cp_io</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#this_tid\">this_tid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#released\">released</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_tid\">this_tid</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<a class=\"id\" href=\"#restart\">restart</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Did somebody clean up the transaction in the meanwhile? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> != <a class=\"id\" href=\"#transaction\">transaction</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a> != <a class=\"id\" href=\"#this_tid\">this_tid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#released\">released</a> && <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#jbd_trylock_bh_state\">jbd_trylock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_sync_bh\">jbd_sync_bh</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_buffer\">wait_on_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the journal_head may have gone by now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"brelse\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Now in whatever state the buffer currently is, we know that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * it has been written out and so we can drop it from the list</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#released\">released</a> = <a class=\"id\" href=\"#__journal_remove_checkpoint\">__journal_remove_checkpoint</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_remove_journal_head\">journal_remove_journal_head</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_BATCH\">NR_BATCH</a><span class=\"ts\"/>64", 
"", 
"static void", 
"<a class=\"id\" href=\"#__flush_batch\">__flush_batch</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#bhs\">bhs</a>, int *<a class=\"id\" href=\"#batch_count\">batch_count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; *<a class=\"id\" href=\"#batch_count\">batch_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_dirty_buffer\">write_dirty_buffer</a>(<a class=\"id\" href=\"#bhs\">bhs</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#WRITE\">WRITE</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; *<a class=\"id\" href=\"#batch_count\">batch_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bhs\">bhs</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_jwrite\">clear_buffer_jwrite</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"brelse\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#batch_count\">batch_count</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Try to flush one buffer from the checkpoint list to disk.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return 1 if something happened which requires us to abort the current</span>", 
"<span class=\"comment\"> * scan of the checkpoint list.  Return &lt;0 if the buffer has failed to</span>", 
"<span class=\"comment\"> * be written out.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held and drops it if 1 is returned</span>", 
"<span class=\"comment\"> * Called under jbd_lock_bh_state(jh2bh(jh)), and drops it</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__process_buffer\">__process_buffer</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#bhs\">bhs</a>, int *<a class=\"id\" href=\"#batch_count\">batch_count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_buffer\">wait_on_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the journal_head may have gone by now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"brelse\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_transaction\">b_transaction</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_transaction\">b_transaction</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#log_start_commit\">log_start_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#log_wait_commit\">log_wait_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#buffer_dirty\">buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, !<a class=\"id\" href=\"#buffer_jbddirty\">buffer_jbddirty</a>(<a class=\"id\" href=\"#bh\">bh</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"remove from checkpoint\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__journal_remove_checkpoint\">__journal_remove_checkpoint</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_remove_journal_head\">journal_remove_journal_head</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Important: we are about to write the buffer, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * possibly block, while still holding the journal lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We cannot afford to let the transaction logic start</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * messing around with this buffer before we write it to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * disk, as that would break recoverability.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"queue\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_bh\">get_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_BH\">J_ASSERT_BH</a>(<a class=\"id\" href=\"#bh\">bh</a>, !<a class=\"id\" href=\"#buffer_jwrite\">buffer_jwrite</a>(<a class=\"id\" href=\"#bh\">bh</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_jwrite\">set_buffer_jwrite</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bhs\">bhs</a>[*<a class=\"id\" href=\"#batch_count\">batch_count</a>] = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__buffer_relink_io\">__buffer_relink_io</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#batch_count\">batch_count</a>)++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#batch_count\">batch_count</a> == <a class=\"id\" href=\"#NR_BATCH\">NR_BATCH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flush_batch\">__flush_batch</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#bhs\">bhs</a>, <a class=\"id\" href=\"#batch_count\">batch_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Perform an actual checkpoint. We take the first transaction on the</span>", 
"<span class=\"comment\"> * list of transactions to be checkpointed and send all its buffers</span>", 
"<span class=\"comment\"> * to disk. We submit larger chunks of data at once.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The journal should be locked before calling this function.</span>", 
"<span class=\"comment\"> * Called with j_checkpoint_mutex held.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#log_do_checkpoint\">log_do_checkpoint</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#this_tid\">this_tid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Start checkpoint\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First thing: if there are any transactions in the log which</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't need checkpointing, just eliminate them from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * journal straight away.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#cleanup_journal_tail\">cleanup_journal_tail</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"cleanup_journal_tail returned %d\\n\", <a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * OK, we need to start writing disk blocks.  Take one transaction</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and write it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_tid\">this_tid</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<a class=\"id\" href=\"#restart\">restart</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If someone cleaned up this transaction while we slept, we're</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * done (maybe it's a new transaction, but it fell at the same</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * address).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> == <a class=\"id\" href=\"#transaction\">transaction</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a> == <a class=\"id\" href=\"#this_tid\">this_tid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#batch_count\">batch_count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bhs\">bhs</a>[<a class=\"id\" href=\"#NR_BATCH\">NR_BATCH</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#retry\">retry</a> = 0, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#retry\">retry</a> && <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#jbd_trylock_bh_state\">jbd_trylock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_sync_bh\">jbd_sync_bh</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry\">retry</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry\">retry</a> = <a class=\"id\" href=\"#__process_buffer\">__process_buffer</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#bhs\">bhs</a>,&amp;<a class=\"id\" href=\"#batch_count\">batch_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retry\">retry</a> &lt; 0 && !<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#retry\">retry</a> && (<a class=\"id\" href=\"#need_resched\">need_resched</a>() ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_needbreak\">spin_needbreak</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry\">retry</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#batch_count\">batch_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#retry\">retry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry\">retry</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flush_batch\">__flush_batch</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#bhs\">bhs</a>, &amp;<a class=\"id\" href=\"#batch_count\">batch_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retry\">retry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Now we have cleaned up the first transaction's checkpoint</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * list. Let's clean up the second one</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__wait_cp_io\">__wait_cp_io</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#transaction\">transaction</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_abort\">journal_abort</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#cleanup_journal_tail\">cleanup_journal_tail</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#result\">result</a> &lt; 0) ? <a class=\"id\" href=\"#result\">result</a> : 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check the list of checkpoint transactions for the journal to see if</span>", 
"<span class=\"comment\"> * we have already got rid of any since the last update of the log tail</span>", 
"<span class=\"comment\"> * in the journal superblock.  If so, we can instantly roll the</span>", 
"<span class=\"comment\"> * superblock forward to remove those transactions from the log.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return &lt;0 on error, 0 on success, 1 if there was nothing to clean up.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with the journal lock held.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the only part of the journaling code which really needs to be</span>", 
"<span class=\"comment\"> * aware of transaction aborts.  Checkpointing involves writing to the</span>", 
"<span class=\"comment\"> * main filesystem area rather than to the journal, so it can proceed</span>", 
"<span class=\"comment\"> * even in abort state, but we must not update the super block if</span>", 
"<span class=\"comment\"> * checkpointing may have failed.  Otherwise, we would lose some metadata</span>", 
"<span class=\"comment\"> * buffers which should be written-back to the filesystem.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#cleanup_journal_tail\">cleanup_journal_tail</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> * <a class=\"id\" href=\"#transaction\">transaction</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_tid\">first_tid</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#freed\">freed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#journal\">journal</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, work out the oldest transaction remaining in the log, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the log block it starts at.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the log is now empty, we need to work out which is the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * next transaction ID we will write, and where it will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * start. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_tid\">first_tid</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_log_start\">t_log_start</a>;", 
"<span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_tid\">first_tid</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_log_start\">t_log_start</a>;", 
"<span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_tid\">first_tid</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_head\">j_head</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_tid\">first_tid</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_head\">j_head</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#blocknr\">blocknr</a> != 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the oldest pinned transaction is at the tail of the log</span>", 
"<span class=\"comment\">           already then there's not much we can do right now. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a> == <a class=\"id\" href=\"#first_tid\">first_tid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, update the superblock to recover the freed space.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Physical blocks come first: have we wrapped beyond the end of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the log?  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a> = <a class=\"id\" href=\"#blocknr\">blocknr</a> - <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocknr\">blocknr</a> &lt; <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a> = <a class=\"id\" href=\"#freed\">freed</a> + <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_last\">j_last</a> - <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_first\">j_first</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1,", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"Cleaning journal tail from %d to %d (offset %u), \"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"freeing %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a>, <a class=\"id\" href=\"#first_tid\">first_tid</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#freed\">freed</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_free\">j_free</a> += <a class=\"id\" href=\"#freed\">freed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a> = <a class=\"id\" href=\"#first_tid\">first_tid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a> = <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JFS_ABORT\">JFS_ABORT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_update_superblock\">journal_update_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>, 1);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Checkpoint list management */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * journal_clean_one_cp_list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Find all the written-back checkpoint buffers in the given list and release them.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with the journal locked.</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> * Returns number of bufers reaped (for debug)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#journal_clean_one_cp_list\">journal_clean_one_cp_list</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>, int *<a class=\"id\" href=\"#released\">released</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#last_jh\">last_jh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#next_jh\">next_jh</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#freed\">freed</a> = 0;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#released\">released</a> = 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#jh\">jh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_jh\">last_jh</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a> = <a class=\"id\" href=\"#next_jh\">next_jh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_jh\">next_jh</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use trylock because of the ranking */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#jbd_trylock_bh_state\">jbd_trylock_bh_state</a>(<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__try_to_free_cp_buf\">__try_to_free_cp_buf</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#released\">released</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#freed\">freed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This function only frees up some memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if possible so we dont have an obligation</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to finish processing. Bail out if preemption</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * requested:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_resched\">need_resched</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#freed\">freed</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#jh\">jh</a> != <a class=\"id\" href=\"#last_jh\">last_jh</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#freed\">freed</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * journal_clean_checkpoint_list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Find all the written-back checkpoint buffers in the journal and release them.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with the journal locked.</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> * Returns number of buffers reaped (for debug)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#__journal_clean_checkpoint_list\">__journal_clean_checkpoint_list</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>, *<a class=\"id\" href=\"#last_transaction\">last_transaction</a>, *<a class=\"id\" href=\"#next_transaction\">next_transaction</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#released\">released</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#transaction\">transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_transaction\">last_transaction</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_cpprev\">t_cpprev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_transaction\">next_transaction</a> = <a class=\"id\" href=\"#transaction\">transaction</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#next_transaction\">next_transaction</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_transaction\">next_transaction</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_cpnext\">t_cpnext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#journal_clean_one_cp_list\">journal_clean_one_cp_list</a>(<a class=\"id\" href=\"#transaction\">transaction</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a>, &amp;<a class=\"id\" href=\"#released\">released</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This function only frees up some memory if possible so we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * dont have an obligation to finish processing. Bail out if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * preemption requested:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_resched\">need_resched</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#released\">released</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * It is essential that we are as careful as in the case of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * t_checkpoint_list with removing the buffer from the list as</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we can possibly see not yet submitted buffers on io_list</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#journal_clean_one_cp_list\">journal_clean_one_cp_list</a>(<a class=\"id\" href=\"#transaction\">transaction</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>, &amp;<a class=\"id\" href=\"#released\">released</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_resched\">need_resched</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#transaction\">transaction</a> != <a class=\"id\" href=\"#last_transaction\">last_transaction</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * journal_remove_checkpoint: called after a buffer has been committed</span>", 
"<span class=\"comment\"> * to disk (either by being write-back flushed to disk, or being</span>", 
"<span class=\"comment\"> * committed to the log).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We cannot safely clean a transaction out of the log until all of the</span>", 
"<span class=\"comment\"> * buffer updates committed in that transaction have safely been stored</span>", 
"<span class=\"comment\"> * elsewhere on disk.  To achieve this, all of the buffers in a</span>", 
"<span class=\"comment\"> * transaction need to be maintained on the transaction's checkpoint</span>", 
"<span class=\"comment\"> * lists until they have been rewritten, at which point this function is</span>", 
"<span class=\"comment\"> * called to remove the buffer from the existing transaction's</span>", 
"<span class=\"comment\"> * checkpoint lists.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The function returns 1 if it frees the transaction, 0 otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function is called with the journal locked.</span>", 
"<span class=\"comment\"> * This function is called with j_list_lock held.</span>", 
"<span class=\"comment\"> * This function is called with jbd_lock_bh_state(jh2bh(jh))</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#__journal_remove_checkpoint\">__journal_remove_checkpoint</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"entry\");", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"not on transaction\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_journal\">t_journal</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__buffer_unlink\">__buffer_unlink</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> != <a class=\"id\" href=\"#NULL\">NULL</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"transaction has no more buffers\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * There is one special case to worry about: if we have just pulled the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * buffer off a running or committing transaction's checkpoing list,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then even if the checkpoint list is empty, the transaction obviously</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cannot be dropped!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The locking here around t_state is a bit sleazy.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * See the comment at the end of journal_commit_transaction().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_state\">t_state</a> != <a class=\"id\" href=\"#T_FINISHED\">T_FINISHED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"belongs to running/committing transaction\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, that was the last buffer for the transaction: we can now</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   safely remove this transaction from the log */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__journal_drop_transaction\">__journal_drop_transaction</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#transaction\">transaction</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Just in case anybody was waiting for more transactions to be</span>", 
"<span class=\"comment\">           checkpointed... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_logspace\">j_wait_logspace</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"exit\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * journal_insert_checkpoint: put a committed buffer onto a checkpoint</span>", 
"<span class=\"comment\"> * list so that we know when it is safe to clean the transaction out of</span>", 
"<span class=\"comment\"> * the log.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with the journal locked.</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__journal_insert_checkpoint\">__journal_insert_checkpoint</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"entry\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#buffer_dirty\">buffer_dirty</a>(<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>)) || <a class=\"id\" href=\"#buffer_jbddirty\">buffer_jbddirty</a>(<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a> = <a class=\"id\" href=\"#transaction\">transaction</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We've finished with this transaction structure: adios...</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The transaction must have no links except for the checkpoint by this</span>", 
"<span class=\"comment\"> * point.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with the journal locked.</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#__journal_drop_transaction\">__journal_drop_transaction</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#assert_spin_locked\">assert_spin_locked</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_cpnext\">t_cpnext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_cpnext\">t_cpnext</a>-><a class=\"id\" href=\"#t_cpprev\">t_cpprev</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_cpprev\">t_cpprev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_cpprev\">t_cpprev</a>-><a class=\"id\" href=\"#t_cpnext\">t_cpnext</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_cpnext\">t_cpnext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> == <a class=\"id\" href=\"#transaction\">transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_cpnext\">t_cpnext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> == <a class=\"id\" href=\"#transaction\">transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_state\">t_state</a> == <a class=\"id\" href=\"#T_FINISHED\">T_FINISHED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_buffers\">t_buffers</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_sync_datalist\">t_sync_datalist</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_forget\">t_forget</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_iobuf_list\">t_iobuf_list</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_shadow_list\">t_shadow_list</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_log_list\">t_log_list</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_updates\">t_updates</a> == 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a> != <a class=\"id\" href=\"#transaction\">transaction</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a> != <a class=\"id\" href=\"#transaction\">transaction</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Dropping transaction %d, all done\\n\", <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#transaction\">transaction</a>);", 
"}", 
];
xr_frag_insert('l/96/78ada79475e1dd540aa8d4ef405bc53af51aa9.xr', __xr_tmp);
