var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_INET_ECN_H_\">_INET_ECN_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_INET_ECN_H_\">_INET_ECN_H_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_sock\">inet_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dsfield\">dsfield</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INET_ECN_NOT_ECT\">INET_ECN_NOT_ECT</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INET_ECN_ECT_1\">INET_ECN_ECT_1</a> = 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INET_ECN_ECT_0\">INET_ECN_ECT_0</a> = 2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INET_ECN_CE\">INET_ECN_CE</a> = 3,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a> = 3,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#INET_ECN_is_ce\">INET_ECN_is_ce</a>(<a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#dsfield\">dsfield</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#dsfield\">dsfield</a> &amp; <a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>) == <a class=\"id\" href=\"#INET_ECN_CE\">INET_ECN_CE</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#INET_ECN_is_not_ect\">INET_ECN_is_not_ect</a>(<a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#dsfield\">dsfield</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#dsfield\">dsfield</a> &amp; <a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>) == <a class=\"id\" href=\"#INET_ECN_NOT_ECT\">INET_ECN_NOT_ECT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#INET_ECN_is_capable\">INET_ECN_is_capable</a>(<a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#dsfield\">dsfield</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#dsfield\">dsfield</a> &amp; <a class=\"id\" href=\"#INET_ECN_ECT_0\">INET_ECN_ECT_0</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#INET_ECN_encapsulate\">INET_ECN_encapsulate</a>(<a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#outer\">outer</a>, <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#inner\">inner</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outer\">outer</a> &= ~<a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outer\">outer</a> |= !<a class=\"id\" href=\"#INET_ECN_is_ce\">INET_ECN_is_ce</a>(<a class=\"id\" href=\"#inner\">inner</a>) ? (<a class=\"id\" href=\"#inner\">inner</a> &amp; <a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#INET_ECN_ECT_0\">INET_ECN_ECT_0</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#outer\">outer</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#INET_ECN_xmit\">INET_ECN_xmit</a>(<a class=\"id\" href=\"#sk\">sk</a>) do { <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#tos\">tos</a> |= <a class=\"id\" href=\"#INET_ECN_ECT_0\">INET_ECN_ECT_0</a>; } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#INET_ECN_dontxmit\">INET_ECN_dontxmit</a>(<a class=\"id\" href=\"#sk\">sk</a>) \\", 
"<span class=\"ts\"/>do { <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#tos\">tos</a> &= ~<a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>; } while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP6_ECN_flow_init\">IP6_ECN_flow_init</a>(<a class=\"id\" href=\"#label\">label</a>) do {<span class=\"ts\"/><span class=\"ts\"/>\\", 
"      (<a class=\"id\" href=\"#label\">label</a>) &= ~<a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a> << 20);<span class=\"ts\"/>\\", 
"    } while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IP6_ECN_flow_xmit\">IP6_ECN_flow_xmit</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#label\">label</a>) do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_ECN_is_capable\">INET_ECN_is_capable</a>(<a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#tclass\">tclass</a>))<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#label\">label</a>) |= <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#INET_ECN_ECT_0\">INET_ECN_ECT_0</a> << 20);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"    } while (0)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#IP_ECN_set_ce\">IP_ECN_set_ce</a>(struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#check\">check</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#check\">check</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ecn\">ecn</a> = (<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a> + 1) &amp; <a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * After the last operation we have (in binary):</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * INET_ECN_NOT_ECT =&gt; 01</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * INET_ECN_ECT_1   =&gt; 10</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * INET_ECN_ECT_0   =&gt; 11</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * INET_ECN_CE      =&gt; 00</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ecn\">ecn</a> &amp; 2))", 
"<span class=\"ts\"/><span class=\"ts\"/>return !<a class=\"id\" href=\"#ecn\">ecn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The following gives us:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * INET_ECN_ECT_1 =&gt; check += htons(0xFFFD)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * INET_ECN_ECT_0 =&gt; check += htons(0xFFFE)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#check\">check</a> += (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u16\">u16</a>)<a class=\"id\" href=\"#htons\">htons</a>(0xFFFB) + (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u16\">u16</a>)<a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ecn\">ecn</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#check\">check</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#__sum16\">__sum16</a>)(<a class=\"id\" href=\"#check\">check</a> + (<a class=\"id\" href=\"#check\">check</a>>=0xFFFF));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a> |= <a class=\"id\" href=\"#INET_ECN_CE\">INET_ECN_CE</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#IP_ECN_clear\">IP_ECN_clear</a>(struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a> &= ~<a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ipv4_copy_dscp\">ipv4_copy_dscp</a>(unsigned int <a class=\"id\" href=\"#dscp\">dscp</a>, struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#inner\">inner</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dscp\">dscp</a> &= ~<a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv4_change_dsfield\">ipv4_change_dsfield</a>(<a class=\"id\" href=\"#inner\">inner</a>, <a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>, <a class=\"id\" href=\"#dscp\">dscp</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#IP6_ECN_set_ce\">IP6_ECN_set_ce</a>(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#iph\">iph</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_ECN_is_not_ect\">INET_ECN_is_not_ect</a>(<a class=\"id\" href=\"#ipv6_get_dsfield\">ipv6_get_dsfield</a>(<a class=\"id\" href=\"#iph\">iph</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>*(<a class=\"id\" href=\"#__be32\">__be32</a>*)<a class=\"id\" href=\"#iph\">iph</a> |= <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#INET_ECN_CE\">INET_ECN_CE</a> << 20);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#IP6_ECN_clear\">IP6_ECN_clear</a>(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#iph\">iph</a>)", 
"{", 
"<span class=\"ts\"/>*(<a class=\"id\" href=\"#__be32\">__be32</a>*)<a class=\"id\" href=\"#iph\">iph</a> &= ~<a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a> << 20);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ipv6_copy_dscp\">ipv6_copy_dscp</a>(unsigned int <a class=\"id\" href=\"#dscp\">dscp</a>, struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#inner\">inner</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dscp\">dscp</a> &= ~<a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_change_dsfield\">ipv6_change_dsfield</a>(<a class=\"id\" href=\"#inner\">inner</a>, <a class=\"id\" href=\"#INET_ECN_MASK\">INET_ECN_MASK</a>, <a class=\"id\" href=\"#dscp\">dscp</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#INET_ECN_set_ce\">INET_ECN_set_ce</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>):", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> + sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>) <= <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IP_ECN_set_ce\">IP_ECN_set_ce</a>(<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(<a class=\"id\" href=\"#ETH_P_IPV6\">ETH_P_IPV6</a>):", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> + sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) <= <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IP6_ECN_set_ce\">IP6_ECN_set_ce</a>(<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/96/871c308d1a61dd556e23c986133c99f77a20fe.xr', __xr_tmp);
