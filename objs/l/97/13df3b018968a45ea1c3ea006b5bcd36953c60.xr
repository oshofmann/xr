var __xr_tmp = [
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sg_miter_next\">sg_miter_next</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sg_miter_stop - stop mapping iteration</span>", 
"<span class=\"comment\"> * @miter: sg mapping iter to be stopped</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *   Stops mapping iterator @miter.  @miter should have been started</span>", 
"<span class=\"comment\"> *   started using sg_miter_start().  A stopped iteration can be</span>", 
"<span class=\"comment\"> *   resumed by calling sg_miter_next() on it.  This is useful when</span>", 
"<span class=\"comment\"> *   resources (kmap) need to be released during iteration.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Context:</span>", 
"<span class=\"comment\"> *   IRQ disabled if the SG_MITER_ATOMIC is set.  Don't care otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#sg_miter_stop\">sg_miter_stop</a>(struct <a class=\"id\" href=\"#sg_mapping_iter\">sg_mapping_iter</a> *<a class=\"id\" href=\"#miter\">miter</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#consumed\">consumed</a> &gt; <a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#length\">length</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* drop resources from the last iteration */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#__offset\">__offset</a> += <a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#consumed\">consumed</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#__flags\">__flags</a> &amp; <a class=\"id\" href=\"#SG_MITER_TO_SG\">SG_MITER_TO_SG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_kernel_dcache_page\">flush_kernel_dcache_page</a>(<a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#__flags\">__flags</a> &amp; <a class=\"id\" href=\"#SG_MITER_ATOMIC\">SG_MITER_ATOMIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#KM_BIO_SRC_IRQ\">KM_BIO_SRC_IRQ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#length\">length</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#miter\">miter</a>-><a class=\"id\" href=\"#consumed\">consumed</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sg_miter_stop\">sg_miter_stop</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sg_copy_buffer - Copy data between a linear buffer and an SG list</span>", 
"<span class=\"comment\"> * @sgl:<span class=\"ts\"/><span class=\"ts\"/> The SG list</span>", 
"<span class=\"comment\"> * @nents:<span class=\"ts\"/><span class=\"ts\"/> Number of SG entries</span>", 
"<span class=\"comment\"> * @buf:<span class=\"ts\"/><span class=\"ts\"/> Where to copy from</span>", 
"<span class=\"comment\"> * @buflen:<span class=\"ts\"/><span class=\"ts\"/> The number of bytes to copy</span>", 
"<span class=\"comment\"> * @to_buffer: <span class=\"ts\"/><span class=\"ts\"/> transfer direction (non zero == from an sg list to a</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> buffer, 0 == from a buffer to an sg list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the number of copied bytes.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> **/</span>", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#sg_copy_buffer\">sg_copy_buffer</a>(struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sgl\">sgl</a>, unsigned int <a class=\"id\" href=\"#nents\">nents</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buflen\">buflen</a>, int <a class=\"id\" href=\"#to_buffer\">to_buffer</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_mapping_iter\">sg_mapping_iter</a> <a class=\"id\" href=\"#miter\">miter</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sg_flags\">sg_flags</a> = <a class=\"id\" href=\"#SG_MITER_ATOMIC\">SG_MITER_ATOMIC</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#to_buffer\">to_buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_flags\">sg_flags</a> |= <a class=\"id\" href=\"#SG_MITER_FROM_SG\">SG_MITER_FROM_SG</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_flags\">sg_flags</a> |= <a class=\"id\" href=\"#SG_MITER_TO_SG\">SG_MITER_TO_SG</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_miter_start\">sg_miter_start</a>(&amp;<a class=\"id\" href=\"#miter\">miter</a>, <a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#nents\">nents</a>, <a class=\"id\" href=\"#sg_flags\">sg_flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#sg_miter_next\">sg_miter_next</a>(&amp;<a class=\"id\" href=\"#miter\">miter</a>) && <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#buflen\">buflen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#miter\">miter</a>.<a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#buflen\">buflen</a> - <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#to_buffer\">to_buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#miter\">miter</a>.<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#miter\">miter</a>.<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_miter_stop\">sg_miter_stop</a>(&amp;<a class=\"id\" href=\"#miter\">miter</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#offset\">offset</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sg_copy_from_buffer - Copy from a linear buffer to an SG list</span>", 
"<span class=\"comment\"> * @sgl:<span class=\"ts\"/><span class=\"ts\"/> The SG list</span>", 
"<span class=\"comment\"> * @nents:<span class=\"ts\"/><span class=\"ts\"/> Number of SG entries</span>", 
"<span class=\"comment\"> * @buf:<span class=\"ts\"/><span class=\"ts\"/> Where to copy from</span>", 
"<span class=\"comment\"> * @buflen:<span class=\"ts\"/><span class=\"ts\"/> The number of bytes to copy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the number of copied bytes.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> **/</span>", 
"<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#sg_copy_from_buffer\">sg_copy_from_buffer</a>(struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sgl\">sgl</a>, unsigned int <a class=\"id\" href=\"#nents\">nents</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sg_copy_buffer\">sg_copy_buffer</a>(<a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#nents\">nents</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buflen\">buflen</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sg_copy_from_buffer\">sg_copy_from_buffer</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sg_copy_to_buffer - Copy from an SG list to a linear buffer</span>", 
"<span class=\"comment\"> * @sgl:<span class=\"ts\"/><span class=\"ts\"/> The SG list</span>", 
"<span class=\"comment\"> * @nents:<span class=\"ts\"/><span class=\"ts\"/> Number of SG entries</span>", 
"<span class=\"comment\"> * @buf:<span class=\"ts\"/><span class=\"ts\"/> Where to copy to</span>", 
"<span class=\"comment\"> * @buflen:<span class=\"ts\"/><span class=\"ts\"/> The number of bytes to copy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the number of copied bytes.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> **/</span>", 
"<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#sg_copy_to_buffer\">sg_copy_to_buffer</a>(struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sgl\">sgl</a>, unsigned int <a class=\"id\" href=\"#nents\">nents</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sg_copy_buffer\">sg_copy_buffer</a>(<a class=\"id\" href=\"#sgl\">sgl</a>, <a class=\"id\" href=\"#nents\">nents</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buflen\">buflen</a>, 1);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sg_copy_to_buffer\">sg_copy_to_buffer</a>);", 
];
xr_frag_insert('l/97/13df3b018968a45ea1c3ea006b5bcd36953c60.xr', __xr_tmp);
