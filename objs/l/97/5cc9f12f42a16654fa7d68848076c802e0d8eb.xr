var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_KVM_PARA_H\">_ASM_X86_KVM_PARA_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_KVM_PARA_H\">_ASM_X86_KVM_PARA_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hyperv\">hyperv</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* This CPUID returns the signature 'KVMKVMKVM' in ebx, ecx, and edx.  It</span>", 
"<span class=\"comment\"> * should be used to determine that a VM is running under KVM.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_CPUID_SIGNATURE\">KVM_CPUID_SIGNATURE</a><span class=\"ts\"/>0x40000000", 
"", 
"<span class=\"comment\">/* This CPUID returns a feature bitmap in eax.  Before enabling a particular</span>", 
"<span class=\"comment\"> * paravirtualization, the appropriate feature bit should be checked.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_CPUID_FEATURES\">KVM_CPUID_FEATURES</a><span class=\"ts\"/>0x40000001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_FEATURE_CLOCKSOURCE\">KVM_FEATURE_CLOCKSOURCE</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_FEATURE_NOP_IO_DELAY\">KVM_FEATURE_NOP_IO_DELAY</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_FEATURE_MMU_OP\">KVM_FEATURE_MMU_OP</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"<span class=\"comment\">/* This indicates that the new set of kvmclock msrs</span>", 
"<span class=\"comment\"> * are available. The use of 0x11 and 0x12 is deprecated</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_FEATURE_CLOCKSOURCE2\">KVM_FEATURE_CLOCKSOURCE2</a>        3", 
"", 
"<span class=\"comment\">/* inktag paravirtualization cpuid feature */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_FEATURE_INK_PARA\">KVM_FEATURE_INK_PARA</a>  4", 
"", 
"<span class=\"comment\">/* The last 8 bits are used to indicate how to interpret the flags field</span>", 
"<span class=\"comment\"> * in pvclock structure. If no bits are set, all flags are ignored.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_FEATURE_CLOCKSOURCE_STABLE_BIT\">KVM_FEATURE_CLOCKSOURCE_STABLE_BIT</a><span class=\"ts\"/>24", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MSR_KVM_WALL_CLOCK\">MSR_KVM_WALL_CLOCK</a>  0x11", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MSR_KVM_SYSTEM_TIME\">MSR_KVM_SYSTEM_TIME</a> 0x12", 
"", 
"<span class=\"comment\">/* Custom MSRs falls in the range 0x4b564d00-0x4b564dff */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MSR_KVM_WALL_CLOCK_NEW\">MSR_KVM_WALL_CLOCK_NEW</a>  0x4b564d00", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MSR_KVM_SYSTEM_TIME_NEW\">MSR_KVM_SYSTEM_TIME_NEW</a> 0x4b564d01", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_MAX_MMU_OP_BATCH\">KVM_MAX_MMU_OP_BATCH</a>           32", 
"", 
"<span class=\"comment\">/* Operations for KVM_HC_MMU_OP */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_MMU_OP_WRITE_PTE\">KVM_MMU_OP_WRITE_PTE</a>            1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_MMU_OP_FLUSH_TLB\">KVM_MMU_OP_FLUSH_TLB</a><span class=\"ts\"/>        2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_MMU_OP_RELEASE_PT\">KVM_MMU_OP_RELEASE_PT</a><span class=\"ts\"/>        3", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Payload for KVM_HC_MMU_OP */</span>", 
"struct <a class=\"id\" href=\"#kvm_mmu_op_header\">kvm_mmu_op_header</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#pad\">pad</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kvm_mmu_op_write_pte\">kvm_mmu_op_write_pte</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kvm_mmu_op_header\">kvm_mmu_op_header</a> <a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#pte_phys\">pte_phys</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#pte_val\">pte_val</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kvm_mmu_op_flush_tlb\">kvm_mmu_op_flush_tlb</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kvm_mmu_op_header\">kvm_mmu_op_header</a> <a class=\"id\" href=\"#header\">header</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kvm_mmu_op_release_pt\">kvm_mmu_op_release_pt</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kvm_mmu_op_header\">kvm_mmu_op_header</a> <a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#pt_phys\">pt_phys</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern void <a class=\"id\" href=\"#kvmclock_init\">kvmclock_init</a>(void);", 
"", 
"", 
"<span class=\"comment\">/* This instruction is vmcall.  On non-VT architectures, it will generate a</span>", 
"<span class=\"comment\"> * trap that we will then rewrite to the appropriate instruction.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KVM_HYPERCALL\">KVM_HYPERCALL</a> \".byte 0x0f,0x01,0xc1\"", 
"", 
"<span class=\"comment\">/* For KVM hypercalls, a three-byte sequence of either the vmrun or the vmmrun</span>", 
"<span class=\"comment\"> * instruction.  The hypervisor may replace it with something else but only the</span>", 
"<span class=\"comment\"> * instructions are guaranteed to be supported.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Up to four arguments may be passed in rbx, rcx, rdx, and rsi respectively.</span>", 
"<span class=\"comment\"> * The hypercall number should be placed in rax and the return value will be</span>", 
"<span class=\"comment\"> * placed in rax.  No other registers will be clobbered unless explicited</span>", 
"<span class=\"comment\"> * noted by the particular hypercall.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> long <a class=\"id\" href=\"#kvm_hypercall0\">kvm_hypercall0</a>(unsigned int <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(<a class=\"id\" href=\"#KVM_HYPERCALL\">KVM_HYPERCALL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"=a\"(<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"a\"(<a class=\"id\" href=\"#nr\">nr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"memory\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> long <a class=\"id\" href=\"#kvm_hypercall1\">kvm_hypercall1</a>(unsigned int <a class=\"id\" href=\"#nr\">nr</a>, unsigned long <a class=\"id\" href=\"#p1\">p1</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(<a class=\"id\" href=\"#KVM_HYPERCALL\">KVM_HYPERCALL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"=a\"(<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"a\"(<a class=\"id\" href=\"#nr\">nr</a>), \"b\"(<a class=\"id\" href=\"#p1\">p1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"memory\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> long <a class=\"id\" href=\"#kvm_hypercall2\">kvm_hypercall2</a>(unsigned int <a class=\"id\" href=\"#nr\">nr</a>, unsigned long <a class=\"id\" href=\"#p1\">p1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#p2\">p2</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(<a class=\"id\" href=\"#KVM_HYPERCALL\">KVM_HYPERCALL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"=a\"(<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"a\"(<a class=\"id\" href=\"#nr\">nr</a>), \"b\"(<a class=\"id\" href=\"#p1\">p1</a>), \"c\"(<a class=\"id\" href=\"#p2\">p2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"memory\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> long <a class=\"id\" href=\"#kvm_hypercall3\">kvm_hypercall3</a>(unsigned int <a class=\"id\" href=\"#nr\">nr</a>, unsigned long <a class=\"id\" href=\"#p1\">p1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#p2\">p2</a>, unsigned long <a class=\"id\" href=\"#p3\">p3</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(<a class=\"id\" href=\"#KVM_HYPERCALL\">KVM_HYPERCALL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"=a\"(<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"a\"(<a class=\"id\" href=\"#nr\">nr</a>), \"b\"(<a class=\"id\" href=\"#p1\">p1</a>), \"c\"(<a class=\"id\" href=\"#p2\">p2</a>), \"d\"(<a class=\"id\" href=\"#p3\">p3</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"memory\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> long <a class=\"id\" href=\"#kvm_hypercall4\">kvm_hypercall4</a>(unsigned int <a class=\"id\" href=\"#nr\">nr</a>, unsigned long <a class=\"id\" href=\"#p1\">p1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#p2\">p2</a>, unsigned long <a class=\"id\" href=\"#p3\">p3</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#p4\">p4</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(<a class=\"id\" href=\"#KVM_HYPERCALL\">KVM_HYPERCALL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"=a\"(<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"a\"(<a class=\"id\" href=\"#nr\">nr</a>), \"b\"(<a class=\"id\" href=\"#p1\">p1</a>), \"c\"(<a class=\"id\" href=\"#p2\">p2</a>), \"d\"(<a class=\"id\" href=\"#p3\">p3</a>), \"S\"(<a class=\"id\" href=\"#p4\">p4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"memory\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#kvm_para_available\">kvm_para_available</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#eax\">eax</a>, <a class=\"id\" href=\"#ebx\">ebx</a>, <a class=\"id\" href=\"#ecx\">ecx</a>, <a class=\"id\" href=\"#edx\">edx</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#signature\">signature</a>[13];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(<a class=\"id\" href=\"#KVM_CPUID_SIGNATURE\">KVM_CPUID_SIGNATURE</a>, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#signature\">signature</a> + 0, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, 4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#signature\">signature</a> + 4, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, 4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#signature\">signature</a> + 8, &amp;<a class=\"id\" href=\"#edx\">edx</a>, 4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#signature\">signature</a>[12] = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#signature\">signature</a>, \"KVMKVMKVM\") == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#kvm_arch_para_features\">kvm_arch_para_features</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpuid_eax\">cpuid_eax</a>(<a class=\"id\" href=\"#KVM_CPUID_FEATURES\">KVM_CPUID_FEATURES</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_KVM_PARA_H */</span>", 
];
xr_frag_insert('l/97/5cc9f12f42a16654fa7d68848076c802e0d8eb.xr', __xr_tmp);
