var __xr_tmp = [
"<span class=\"comment\"> *<span class=\"ts\"/>ATA_TMOUT_FF_WAIT.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>EH context.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 if @linke is ready before @deadline; otherwise, -errno.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_wait_ready\">ata_wait_ready</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   int (*<a class=\"id\" href=\"#check_ready\">check_ready</a>)(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>))", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#nodev_deadline\">nodev_deadline</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#warned\">warned</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* choose which 0xff timeout to use, read comment in libata.h */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_HOST_PARALLEL_SCAN\">ATA_HOST_PARALLEL_SCAN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nodev_deadline\">nodev_deadline</a> = <a class=\"id\" href=\"#ata_deadline\">ata_deadline</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#ATA_TMOUT_FF_WAIT_LONG\">ATA_TMOUT_FF_WAIT_LONG</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nodev_deadline\">nodev_deadline</a> = <a class=\"id\" href=\"#ata_deadline\">ata_deadline</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#ATA_TMOUT_FF_WAIT\">ATA_TMOUT_FF_WAIT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Slave readiness can't be tested separately from master.  On</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * M/S emulation configuration, this function should be called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only on the master and it will handle both master and slave.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#link\">link</a> == <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#slave_link\">slave_link</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#nodev_deadline\">nodev_deadline</a>, <a class=\"id\" href=\"#deadline\">deadline</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nodev_deadline\">nodev_deadline</a> = <a class=\"id\" href=\"#deadline\">deadline</a>;", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ready\">ready</a>, <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ready\">ready</a> = <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#check_ready\">check_ready</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ready\">ready</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * -ENODEV could be transient.  Ignore -ENODEV if link</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is online.  Also, some SATA devices take a long</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * time to clear 0xff after reset.  Wait for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ATA_TMOUT_FF_WAIT[_LONG] on -ENODEV if link isn't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * offline.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Note that some PATA controllers (pata_ali) explode</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if status register is read more than once when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * there's no device attached.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ready\">ready</a> == -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_link_online\">ata_link_online</a>(<a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ready\">ready</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if ((<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_SATA\">ATA_FLAG_SATA</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> !<a class=\"id\" href=\"#ata_link_offline\">ata_link_offline</a>(<a class=\"id\" href=\"#link\">link</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#nodev_deadline\">nodev_deadline</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ready\">ready</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ready\">ready</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ready\">ready</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#deadline\">deadline</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#warned\">warned</a> && <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#start\">start</a> + 5 * <a class=\"id\" href=\"#HZ\">HZ</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#deadline\">deadline</a> - <a class=\"id\" href=\"#now\">now</a> &gt; 3 * <a class=\"id\" href=\"#HZ\">HZ</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"link is slow to respond, please be patient \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(ready=%d)\\n\", <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warned\">warned</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(50);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_wait_after_reset - wait for link to become ready after reset</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: link to be waited on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@deadline: deadline jiffies for the operation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@check_ready: callback to check link readiness</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Wait for @link to become ready after reset.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>EH context.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 if @linke is ready before @deadline; otherwise, -errno.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_wait_after_reset\">ata_wait_after_reset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#check_ready\">check_ready</a>)(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>))", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(<a class=\"id\" href=\"#ATA_WAIT_AFTER_RESET\">ATA_WAIT_AFTER_RESET</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_wait_ready\">ata_wait_ready</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#deadline\">deadline</a>, <a class=\"id\" href=\"#check_ready\">check_ready</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sata_link_debounce - debounce SATA phy status</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: ATA link to debounce SATA phy status for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@params: timing parameters { interval, duratinon, timeout } in msec</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@deadline: deadline jiffies for the operation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\">*<span class=\"ts\"/>Make sure SStatus of @link reaches stable state, determined by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>holding the same value where DET is not 1 for @duration polled</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>every @interval, before @timeout.  Timeout constraints the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>beginning of the stable state.  Because DET gets stuck at 1 on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>some controllers after hot unplugging, this functions waits</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>until timeout then returns 0 if DET is stable at 1.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@timeout is further limited by @deadline.  The sooner of the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>two is used.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, -errno on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sata_link_debounce\">sata_link_debounce</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, const unsigned long *<a class=\"id\" href=\"#params\">params</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#interval\">interval</a> = <a class=\"id\" href=\"#params\">params</a>[0];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#duration\">duration</a> = <a class=\"id\" href=\"#params\">params</a>[1];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_jiffies\">last_jiffies</a>, <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#last\">last</a>, <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#ata_deadline\">ata_deadline</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#params\">params</a>[2]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#deadline\">deadline</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deadline\">deadline</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_STATUS\">SCR_STATUS</a>, &amp;<a class=\"id\" href=\"#cur\">cur</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> &= 0xf;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_jiffies\">last_jiffies</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(<a class=\"id\" href=\"#interval\">interval</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_STATUS\">SCR_STATUS</a>, &amp;<a class=\"id\" href=\"#cur\">cur</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> &= 0xf;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* DET stable? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cur\">cur</a> == <a class=\"id\" href=\"#last\">last</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cur\">cur</a> == 1 && <a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#deadline\">deadline</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ata_deadline\">ata_deadline</a>(<a class=\"id\" href=\"#last_jiffies\">last_jiffies</a>, <a class=\"id\" href=\"#duration\">duration</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* unstable, start over */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_jiffies\">last_jiffies</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check deadline.  If debouncing failed, return</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * -EPIPE to tell upper layer to lower link speed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#deadline\">deadline</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPIPE\">EPIPE</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sata_link_resume - resume SATA link</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: ATA link to resume SATA</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@params: timing parameters { interval, duratinon, timeout } in msec</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@deadline: deadline jiffies for the operation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Resume SATA phy @link and debounce it.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, -errno on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sata_link_resume\">sata_link_resume</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, const unsigned long *<a class=\"id\" href=\"#params\">params</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tries\">tries</a> = <a class=\"id\" href=\"#ATA_LINK_RESUME_TRIES\">ATA_LINK_RESUME_TRIES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontrol\">scontrol</a>, <a class=\"id\" href=\"#serror\">serror</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Writes to SControl sometimes get ignored under certain</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * controllers (ata_piix SIDPR).  Make sure DET actually is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cleared.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scontrol\">scontrol</a> = (<a class=\"id\" href=\"#scontrol\">scontrol</a> &amp; 0x0f0) | 0x300;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_write\">sata_scr_write</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, <a class=\"id\" href=\"#scontrol\">scontrol</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Some PHYs react badly if SStatus is pounded</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * immediately after resuming.  Delay 200ms before</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * debouncing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(200);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* is SControl restored correctly? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#scontrol\">scontrol</a> &amp; 0xf0f) != 0x300 && --<a class=\"id\" href=\"#tries\">tries</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#scontrol\">scontrol</a> &amp; 0xf0f) != 0x300) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"failed to resume link (SControl %X)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scontrol\">scontrol</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tries\">tries</a> &lt; <a class=\"id\" href=\"#ATA_LINK_RESUME_TRIES\">ATA_LINK_RESUME_TRIES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"link resume succeeded after %d retries\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_LINK_RESUME_TRIES\">ATA_LINK_RESUME_TRIES</a> - <a class=\"id\" href=\"#tries\">tries</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_link_debounce\">sata_link_debounce</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#params\">params</a>, <a class=\"id\" href=\"#deadline\">deadline</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear SError, some PHYs require this even for SRST to work */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_ERROR\">SCR_ERROR</a>, &amp;<a class=\"id\" href=\"#serror\">serror</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_write\">sata_scr_write</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_ERROR\">SCR_ERROR</a>, <a class=\"id\" href=\"#serror\">serror</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a> != -<a class=\"id\" href=\"#EINVAL\">EINVAL</a> ? <a class=\"id\" href=\"#rc\">rc</a> : 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_std_prereset - prepare for reset</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: ATA link to be reset</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@deadline: deadline jiffies for the operation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link is about to be reset.  Initialize it.  Failure from</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>prereset makes libata abort whole reset sequence and give up</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that port, so prereset should be best-effort.  It does its</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>best to prepare for reset sequence but if things go wrong, it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>should just whine, not fail.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, -errno otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_std_prereset\">ata_std_prereset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_eh_context\">ata_eh_context</a> *<a class=\"id\" href=\"#ehc\">ehc</a> = &amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_context\">eh_context</a>;", 
"<span class=\"ts\"/>const unsigned long *<a class=\"id\" href=\"#timing\">timing</a> = <a class=\"id\" href=\"#sata_ehc_deb_timing\">sata_ehc_deb_timing</a>(<a class=\"id\" href=\"#ehc\">ehc</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if we're about to do hardreset, nothing more to do */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ehc\">ehc</a>-><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#action\">action</a> &amp; <a class=\"id\" href=\"#ATA_EH_HARDRESET\">ATA_EH_HARDRESET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if SATA, resume link */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_SATA\">ATA_FLAG_SATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_link_resume\">sata_link_resume</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#timing\">timing</a>, <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* whine about phy resume failure but proceed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> && <a class=\"id\" href=\"#rc\">rc</a> != -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"failed to resume \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"link for reset (errno=%d)\\n\", <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* no point in trying softreset on offline link */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_phys_link_offline\">ata_phys_link_offline</a>(<a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ehc\">ehc</a>-><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#action\">action</a> &= ~<a class=\"id\" href=\"#ATA_EH_SOFTRESET\">ATA_EH_SOFTRESET</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sata_link_hardreset - reset link via SATA phy reset</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: link to reset</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@timing: timing parameters { interval, duratinon, timeout } in msec</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@deadline: deadline jiffies for the operation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@online: optional out parameter indicating link onlineness</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@check_ready: optional callback to check link readiness</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>SATA phy-reset @link using DET bits of SControl register.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>After hardreset, link readiness is waited upon using</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_wait_ready() if @check_ready is specified.  LLDs are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>allowed to not specify @check_ready and wait itself after this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>function returns.  Device classification is LLD's</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>responsibility.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>*@online is set to one iff reset succeeded and @link is online</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>after reset.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, -errno otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sata_link_hardreset\">sata_link_hardreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, const unsigned long *<a class=\"id\" href=\"#timing\">timing</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> *<a class=\"id\" href=\"#online\">online</a>, int (*<a class=\"id\" href=\"#check_ready\">check_ready</a>)(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *))", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontrol\">scontrol</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ENTER\\n\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#online\">online</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#online\">online</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sata_set_spd_needed\">sata_set_spd_needed</a>(<a class=\"id\" href=\"#link\">link</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SATA spec says nothing about how to reconfigure</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * spd.  To be on the safe side, turn off phy during</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * reconfiguration.  This works for at least ICH7 AHCI</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and Sil3124.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scontrol\">scontrol</a> = (<a class=\"id\" href=\"#scontrol\">scontrol</a> &amp; 0x0f0) | 0x304;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_write\">sata_scr_write</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, <a class=\"id\" href=\"#scontrol\">scontrol</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sata_set_spd\">sata_set_spd</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* issue phy wake/reset */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontrol\">scontrol</a> = (<a class=\"id\" href=\"#scontrol\">scontrol</a> &amp; 0x0f0) | 0x301;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_write_flush\">sata_scr_write_flush</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, <a class=\"id\" href=\"#scontrol\">scontrol</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Couldn't find anything in SATA I/II specs, but AHCI-1.1</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 10.4.2 says at least 1 ms.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* bring link back */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_link_resume\">sata_link_resume</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#timing\">timing</a>, <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* if link is offline nothing more to do */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_phys_link_offline\">ata_phys_link_offline</a>(<a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Link is online.  From this point, -ENODEV too is an error. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#online\">online</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#online\">online</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sata_pmp_supported\">sata_pmp_supported</a>(<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>) && <a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(<a class=\"id\" href=\"#link\">link</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If PMP is supported, we have to do follow-up SRST.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Some PMPs don't send D2H Reg FIS after hardreset if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the first port is empty.  Wait only for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ATA_TMOUT_PMP_SRST_WAIT.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#check_ready\">check_ready</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pmp_deadline\">pmp_deadline</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmp_deadline\">pmp_deadline</a> = <a class=\"id\" href=\"#ata_deadline\">ata_deadline</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ATA_TMOUT_PMP_SRST_WAIT\">ATA_TMOUT_PMP_SRST_WAIT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#pmp_deadline\">pmp_deadline</a>, <a class=\"id\" href=\"#deadline\">deadline</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmp_deadline\">pmp_deadline</a> = <a class=\"id\" href=\"#deadline\">deadline</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_wait_ready\">ata_wait_ready</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#pmp_deadline\">pmp_deadline</a>, <a class=\"id\" href=\"#check_ready\">check_ready</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#check_ready\">check_ready</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_wait_ready\">ata_wait_ready</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#deadline\">deadline</a>, <a class=\"id\" href=\"#check_ready\">check_ready</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> && <a class=\"id\" href=\"#rc\">rc</a> != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* online is set iff link is online &amp;&amp; reset succeeded */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#online\">online</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#online\">online</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"COMRESET failed (errno=%d)\\n\", <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"EXIT, rc=%d\\n\", <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sata_std_hardreset - COMRESET w/o waiting or classification</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: link to reset</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@class: resulting class of attached device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@deadline: deadline jiffies for the operation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Standard SATA COMRESET w/o waiting or classification.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 if link offline, -EAGAIN if link online, -errno on errors.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sata_std_hardreset\">sata_std_hardreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>)", 
"{", 
"<span class=\"ts\"/>const unsigned long *<a class=\"id\" href=\"#timing\">timing</a> = <a class=\"id\" href=\"#sata_ehc_deb_timing\">sata_ehc_deb_timing</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_context\">eh_context</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#online\">online</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* do hardreset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_link_hardreset\">sata_link_hardreset</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#timing\">timing</a>, <a class=\"id\" href=\"#deadline\">deadline</a>, &amp;<a class=\"id\" href=\"#online\">online</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#online\">online</a> ? -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a> : <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_std_postreset - standard postreset callback</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: the target ata_link</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@classes: classes of attached devices</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function is invoked after a successful reset.  Note that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the device might have been reset more than once using</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>different reset methods before postreset is invoked.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_std_postreset\">ata_std_postreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#classes\">classes</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#serror\">serror</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ENTER\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* reset complete, clear SError */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_ERROR\">SCR_ERROR</a>, &amp;<a class=\"id\" href=\"#serror\">serror</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sata_scr_write\">sata_scr_write</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_ERROR\">SCR_ERROR</a>, <a class=\"id\" href=\"#serror\">serror</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* print link status */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sata_print_link_status\">sata_print_link_status</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"EXIT\\n\");", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_dev_same_device - Determine whether new ID matches configured device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device to compare against</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@new_class: class of the new device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@new_id: IDENTIFY page of the new device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Compare @new_class and @new_id against @dev and determine</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>whether @dev is the device indicated by @new_class and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@new_id.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1 if @dev matches @new_class and @new_id, 0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ata_dev_same_device\">ata_dev_same_device</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#new_class\">new_class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#new_id\">new_id</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#old_id\">old_id</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#model\">model</a>[2][<a class=\"id\" href=\"#ATA_ID_PROD_LEN\">ATA_ID_PROD_LEN</a> + 1];", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#serial\">serial</a>[2][<a class=\"id\" href=\"#ATA_ID_SERNO_LEN\">ATA_ID_SERNO_LEN</a> + 1];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> != <a class=\"id\" href=\"#new_class\">new_class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"class mismatch %d != %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#new_class\">new_class</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_id_c_string\">ata_id_c_string</a>(<a class=\"id\" href=\"#old_id\">old_id</a>, <a class=\"id\" href=\"#model\">model</a>[0], <a class=\"id\" href=\"#ATA_ID_PROD\">ATA_ID_PROD</a>, sizeof(<a class=\"id\" href=\"#model\">model</a>[0]));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_id_c_string\">ata_id_c_string</a>(<a class=\"id\" href=\"#new_id\">new_id</a>, <a class=\"id\" href=\"#model\">model</a>[1], <a class=\"id\" href=\"#ATA_ID_PROD\">ATA_ID_PROD</a>, sizeof(<a class=\"id\" href=\"#model\">model</a>[1]));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_id_c_string\">ata_id_c_string</a>(<a class=\"id\" href=\"#old_id\">old_id</a>, <a class=\"id\" href=\"#serial\">serial</a>[0], <a class=\"id\" href=\"#ATA_ID_SERNO\">ATA_ID_SERNO</a>, sizeof(<a class=\"id\" href=\"#serial\">serial</a>[0]));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_id_c_string\">ata_id_c_string</a>(<a class=\"id\" href=\"#new_id\">new_id</a>, <a class=\"id\" href=\"#serial\">serial</a>[1], <a class=\"id\" href=\"#ATA_ID_SERNO\">ATA_ID_SERNO</a>, sizeof(<a class=\"id\" href=\"#serial\">serial</a>[1]));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#model\">model</a>[0], <a class=\"id\" href=\"#model\">model</a>[1])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"model number mismatch \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"'%s' != '%s'\\n\", <a class=\"id\" href=\"#model\">model</a>[0], <a class=\"id\" href=\"#model\">model</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#serial\">serial</a>[0], <a class=\"id\" href=\"#serial\">serial</a>[1])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"serial number mismatch \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"'%s' != '%s'\\n\", <a class=\"id\" href=\"#serial\">serial</a>[0], <a class=\"id\" href=\"#serial\">serial</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_dev_reread_id - Re-read IDENTIFY data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: target ATA device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@readid_flags: read ID flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Re-read IDENTIFY page and make sure @dev is still attached to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the port.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, negative errno otherwise</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_dev_reread_id\">ata_dev_reread_id</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#readid_flags\">readid_flags</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a> = (void *)<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sector_buf\">sector_buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* read ID data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_dev_read_id\">ata_dev_read_id</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#readid_flags\">readid_flags</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* is the device still there? */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ata_dev_same_device\">ata_dev_same_device</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#id\">id</a>, sizeof(<a class=\"id\" href=\"#id\">id</a>[0]) * <a class=\"id\" href=\"#ATA_ID_WORDS\">ATA_ID_WORDS</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_dev_revalidate - Revalidate ATA device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device to revalidate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@new_class: new class code</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@readid_flags: read ID flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Re-read IDENTIFY page, make sure @dev is still attached to the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>port and reconfigure it according to the new IDENTIFY page.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, negative errno otherwise</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_dev_revalidate\">ata_dev_revalidate</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#new_class\">new_class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#readid_flags\">readid_flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#n_sectors\">n_sectors</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ata_dev_enabled\">ata_dev_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* fail early if !ATA &amp;&amp; !ATAPI to avoid issuing [P]IDENTIFY to PMP */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_class_enabled\">ata_class_enabled</a>(<a class=\"id\" href=\"#new_class\">new_class</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#new_class\">new_class</a> != <a class=\"id\" href=\"#ATA_DEV_ATA\">ATA_DEV_ATA</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#new_class\">new_class</a> != <a class=\"id\" href=\"#ATA_DEV_ATAPI\">ATA_DEV_ATAPI</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#new_class\">new_class</a> != <a class=\"id\" href=\"#ATA_DEV_SEMB\">ATA_DEV_SEMB</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"class mismatch %u != %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#new_class\">new_class</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* re-read ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_dev_reread_id\">ata_dev_reread_id</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#readid_flags\">readid_flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* configure device according to the new ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_dev_configure\">ata_dev_configure</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* verify n_sectors hasn't changed */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> != <a class=\"id\" href=\"#ATA_DEV_ATA\">ATA_DEV_ATA</a> || !<a class=\"id\" href=\"#n_sectors\">n_sectors</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a> == <a class=\"id\" href=\"#n_sectors\">n_sectors</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* n_sectors has changed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"n_sectors mismatch %llu != %llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       (unsigned long long)<a class=\"id\" href=\"#n_sectors\">n_sectors</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       (unsigned long long)<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Something could have caused HPA to be unlocked</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * involuntarily.  If n_native_sectors hasn't changed and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * new size matches it, keep the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a> == <a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a> &gt; <a class=\"id\" href=\"#n_sectors\">n_sectors</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a> == <a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"new n_sectors matches native, probably \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"late HPA unlock, n_sectors updated\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* use the larger n_sectors */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some BIOSes boot w/o HPA but resume w/ HPA locked.  Try</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unlocking HPA in those cases.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * https://bugzilla.kernel.org/show_bug.cgi?id=15396</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a> == <a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a> &lt; <a class=\"id\" href=\"#n_sectors\">n_sectors</a> && <a class=\"id\" href=\"#n_sectors\">n_sectors</a> == <a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a> &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp; <a class=\"id\" href=\"#ATA_HORKAGE_BROKEN_HPA\">ATA_HORKAGE_BROKEN_HPA</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"old n_sectors matches native, probably \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"late HPA lock, will try to unlock HPA\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* try unlocking HPA */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_UNLOCK_HPA\">ATA_DFLAG_UNLOCK_HPA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* restore original n_[native_]sectors and fail */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a> = <a class=\"id\" href=\"#n_native_sectors\">n_native_sectors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a> = <a class=\"id\" href=\"#n_sectors\">n_sectors</a>;", 
" <a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"revalidation failed (errno=%d)\\n\", <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ata_blacklist_entry\">ata_blacklist_entry</a> {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#model_num\">model_num</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#model_rev\">model_rev</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#horkage\">horkage</a>;", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#ata_blacklist_entry\">ata_blacklist_entry</a> <a class=\"id\" href=\"#ata_device_blacklist\">ata_device_blacklist</a> [] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* Devices with DMA related problems under Linux */</span>", 
"<span class=\"ts\"/>{ \"WDC AC11000H\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"WDC AC22100H\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"WDC AC32500H\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"WDC AC33100H\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"WDC AC31600H\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"WDC AC32100H\",<span class=\"ts\"/>\"24.09P07\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"WDC AC23200L\",<span class=\"ts\"/>\"21.10N21\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"Compaq CRD-8241B\", <span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"CRD-8400B\",<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"CRD-848[02]B\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"CRD-84\",<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"SanDisk SDP3B\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"SanDisk SDP3B-64\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"SANYO CD-ROM CRD\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"HITACHI CDR-8\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"HITACHI CDR-8[34]35\",<a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"Toshiba CD-ROM XM-6202B\", <a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"TOSHIBA CD-ROM XM-1702BC\", <a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"CD-532E-A\", <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"E-IDE CD-ROM CR-840\",<a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"CD-ROM Drive/F5A\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"WPI CDD-820\", <span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"SAMSUNG CD-ROM SC-148C\", <a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"SAMSUNG CD-ROM SC\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"ATAPI CD-ROM DRIVE 40X MAXIMUM\",<a class=\"id\" href=\"#NULL\">NULL</a>,<a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"_NEC DV5800A\", <span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"SAMSUNG CD-ROM SN-124\", \"N001\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/>{ \"Seagate STT20000A\", <a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NODMA\">ATA_HORKAGE_NODMA</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Odd clown on sil3726/4726 PMPs */</span>", 
"<span class=\"ts\"/>{ \"Config  Disk\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_DISABLE\">ATA_HORKAGE_DISABLE</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Weird ATAPI devices */</span>", 
"<span class=\"ts\"/>{ \"TORiSAN DVD-ROM DRD-N216\", <a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_MAX_SEC_128\">ATA_HORKAGE_MAX_SEC_128</a> },", 
"<span class=\"ts\"/>{ \"QUANTUM DAT    DAT72-000\", <a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_ATAPI_MOD16_DMA\">ATA_HORKAGE_ATAPI_MOD16_DMA</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Devices we expect to fail diagnostics */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Devices where NCQ should be avoided */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* NCQ is slow */</span>", 
"<span class=\"ts\"/>{ \"WDC WD740ADFD-00\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> },", 
"<span class=\"ts\"/>{ \"WDC WD740ADFD-00NLR1\", <a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a>, },", 
"<span class=\"ts\"/><span class=\"comment\">/* http://thread.gmane.org/gmane.linux.ide/14907 */</span>", 
"<span class=\"ts\"/>{ \"FUJITSU MHT2060BH\",<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* NCQ is broken */</span>", 
"<span class=\"ts\"/>{ \"Maxtor *\",<span class=\"ts\"/><span class=\"ts\"/>\"BANC*\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> },", 
"<span class=\"ts\"/>{ \"Maxtor 7V300F0\",<span class=\"ts\"/>\"VA111630\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> },", 
"<span class=\"ts\"/>{ \"ST380817AS\",<span class=\"ts\"/><span class=\"ts\"/>\"3.42\",<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> },", 
"<span class=\"ts\"/>{ \"ST3160023AS\",<span class=\"ts\"/>\"3.42\",<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> },", 
"<span class=\"ts\"/>{ \"OCZ CORE_SSD\",<span class=\"ts\"/>\"02.10104\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Seagate NCQ + FLUSH CACHE firmware bug */</span>", 
"<span class=\"ts\"/>{ \"ST31500341AS\",<span class=\"ts\"/>\"SD1[5-9]\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_FIRMWARE_WARN\">ATA_HORKAGE_FIRMWARE_WARN</a> },", 
"", 
"<span class=\"ts\"/>{ \"ST31000333AS\",<span class=\"ts\"/>\"SD1[5-9]\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_FIRMWARE_WARN\">ATA_HORKAGE_FIRMWARE_WARN</a> },", 
"", 
"<span class=\"ts\"/>{ \"ST3640[36]23AS\",<span class=\"ts\"/>\"SD1[5-9]\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_FIRMWARE_WARN\">ATA_HORKAGE_FIRMWARE_WARN</a> },", 
"", 
"<span class=\"ts\"/>{ \"ST3320[68]13AS\",<span class=\"ts\"/>\"SD1[5-9]\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_FIRMWARE_WARN\">ATA_HORKAGE_FIRMWARE_WARN</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Blacklist entries taken from Silicon Image 3124/3132</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Windows driver .inf file - also several Linux problem reports */</span>", 
"<span class=\"ts\"/>{ \"HTS541060G9SA00\",    \"MB3OC60D\",     <a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a>, },", 
"<span class=\"ts\"/>{ \"HTS541080G9SA00\",    \"MB4OC60D\",     <a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a>, },", 
"<span class=\"ts\"/>{ \"HTS541010G9SA00\",    \"MBZOC60D\",     <a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a>, },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* https://bugzilla.kernel.org/show_bug.cgi?id=15573 */</span>", 
"<span class=\"ts\"/>{ \"C300-CTFDDAC128MAG\",<span class=\"ts\"/>\"0001\",<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NONCQ\">ATA_HORKAGE_NONCQ</a>, },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* devices which puke on READ_NATIVE_MAX */</span>", 
"<span class=\"ts\"/>{ \"HDS724040KLSA80\",<span class=\"ts\"/>\"KFAOA20N\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_BROKEN_HPA\">ATA_HORKAGE_BROKEN_HPA</a>, },", 
"<span class=\"ts\"/>{ \"WDC WD3200JD-00KLB0\", \"WD-WCAMR1130137\", <a class=\"id\" href=\"#ATA_HORKAGE_BROKEN_HPA\">ATA_HORKAGE_BROKEN_HPA</a> },", 
"<span class=\"ts\"/>{ \"WDC WD2500JD-00HBB0\", \"WD-WMAL71490727\", <a class=\"id\" href=\"#ATA_HORKAGE_BROKEN_HPA\">ATA_HORKAGE_BROKEN_HPA</a> },", 
"<span class=\"ts\"/>{ \"MAXTOR 6L080L4\",<span class=\"ts\"/>\"A93.0500\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_BROKEN_HPA\">ATA_HORKAGE_BROKEN_HPA</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* this one allows HPA unlocking but fails IOs on the area */</span>", 
"<span class=\"ts\"/>{ \"OCZ-VERTEX\",<span class=\"ts\"/><span class=\"ts\"/>    \"1.30\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_BROKEN_HPA\">ATA_HORKAGE_BROKEN_HPA</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Devices which report 1 sector over size HPA */</span>", 
"<span class=\"ts\"/>{ \"ST340823A\",<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_HPA_SIZE\">ATA_HORKAGE_HPA_SIZE</a>, },", 
"<span class=\"ts\"/>{ \"ST320413A\",<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_HPA_SIZE\">ATA_HORKAGE_HPA_SIZE</a>, },", 
"<span class=\"ts\"/>{ \"ST310211A\",<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_HPA_SIZE\">ATA_HORKAGE_HPA_SIZE</a>, },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Devices which get the IVB wrong */</span>", 
"<span class=\"ts\"/>{ \"QUANTUM FIREBALLlct10 05\", \"A03.0900\", <a class=\"id\" href=\"#ATA_HORKAGE_IVB\">ATA_HORKAGE_IVB</a>, },", 
"<span class=\"ts\"/><span class=\"comment\">/* Maybe we should just blacklist TSSTcorp... */</span>", 
"<span class=\"ts\"/>{ \"TSSTcorp CDDVDW SH-S202[HJN]\", \"SB0[01]\",  <a class=\"id\" href=\"#ATA_HORKAGE_IVB\">ATA_HORKAGE_IVB</a>, },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Devices that do not need bridging limits applied */</span>", 
"<span class=\"ts\"/>{ \"MTRON MSP-SATA*\",<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_BRIDGE_OK\">ATA_HORKAGE_BRIDGE_OK</a>, },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Devices which aren't very happy with higher link speeds */</span>", 
"<span class=\"ts\"/>{ \"WD My Book\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_1_5_GBPS\">ATA_HORKAGE_1_5_GBPS</a>, },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Devices which choke on SETXFER.  Applies only if both the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * device and controller are SATA.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{ \"PIONEER DVD-RW  DVRTD08\",<span class=\"ts\"/>\"1.00\",<span class=\"ts\"/><a class=\"id\" href=\"#ATA_HORKAGE_NOSETXFER\">ATA_HORKAGE_NOSETXFER</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* End Marker */</span>", 
"<span class=\"ts\"/>{ }", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>glob_match - match a text string against a glob-style pattern</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@text: the string to be examined</span>", 
];
xr_frag_insert('l/98/26acb2e530bcee03facdba19180f59ac53d0c8.xr', __xr_tmp);
