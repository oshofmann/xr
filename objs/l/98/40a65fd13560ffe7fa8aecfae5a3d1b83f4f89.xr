var __xr_tmp = [
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bio_integrity_get_tag\">bio_integrity_get_tag</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, void *<a class=\"id\" href=\"#tag_buf\">tag_buf</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(<a class=\"id\" href=\"#bio\">bio</a>) != <a class=\"id\" href=\"#READ\">READ</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bio_integrity_tag\">bio_integrity_tag</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#tag_buf\">tag_buf</a>, <a class=\"id\" href=\"#len\">len</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_integrity_get_tag\">bio_integrity_get_tag</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_generate - Generate integrity metadata for a bio</span>", 
"<span class=\"comment\"> * @bio:<span class=\"ts\"/>bio to generate integrity metadata for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Generates integrity metadata for a bio by calling the</span>", 
"<span class=\"comment\"> * block device's generation callback function.  The bio must have a</span>", 
"<span class=\"comment\"> * bip attached with enough room to accommodate the generated</span>", 
"<span class=\"comment\"> * integrity metadata.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#bio_integrity_generate\">bio_integrity_generate</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a> = <a class=\"id\" href=\"#bdev_get_integrity\">bdev_get_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity_exchg\">blk_integrity_exchg</a> <a class=\"id\" href=\"#bix\">bix</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bv\">bv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#sectors\">sectors</a>, <a class=\"id\" href=\"#total\">total</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#prot_buf\">prot_buf</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>-><a class=\"id\" href=\"#bip_buf\">bip_buf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total\">total</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#disk_name\">disk_name</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#sector_size\">sector_size</a> = <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_for_each_segment\">bio_for_each_segment</a>(<a class=\"id\" href=\"#bv\">bv</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#kaddr\">kaddr</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#data_buf\">data_buf</a> = <a class=\"id\" href=\"#kaddr\">kaddr</a> + <a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#data_size\">data_size</a> = <a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#prot_buf\">prot_buf</a> = <a class=\"id\" href=\"#prot_buf\">prot_buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#sector\">sector</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#generate_fn\">generate_fn</a>(&amp;<a class=\"id\" href=\"#bix\">bix</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sectors\">sectors</a> = <a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> / <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector\">sector</a> += <a class=\"id\" href=\"#sectors\">sectors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot_buf\">prot_buf</a> += <a class=\"id\" href=\"#sectors\">sectors</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total\">total</a> += <a class=\"id\" href=\"#sectors\">sectors</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#total\">total</a> &gt; <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>-><a class=\"id\" href=\"#bip_size\">bip_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned short <a class=\"id\" href=\"#blk_integrity_tuple_size\">blk_integrity_tuple_size</a>(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bi\">bi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_prep - Prepare bio for integrity I/O</span>", 
"<span class=\"comment\"> * @bio:<span class=\"ts\"/>bio to prepare</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Allocates a buffer for integrity metadata, maps the</span>", 
"<span class=\"comment\"> * pages and attaches them to a bio.  The bio must have data</span>", 
"<span class=\"comment\"> * direction, target device and start sector set priot to calling.  In</span>", 
"<span class=\"comment\"> * the WRITE case, integrity metadata will be generated using the</span>", 
"<span class=\"comment\"> * block device's integrity function.  In the READ case, the buffer</span>", 
"<span class=\"comment\"> * will be prepared for DMA and a suitable end_io handler set up.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bio_integrity_prep\">bio_integrity_prep</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip\">bip</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bytes\">bytes</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sectors\">sectors</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a> = <a class=\"id\" href=\"#bdev_get_integrity\">bdev_get_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bi\">bi</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bio_integrity\">bio_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sectors\">sectors</a> = <a class=\"id\" href=\"#bio_integrity_hw_sectors\">bio_integrity_hw_sectors</a>(<a class=\"id\" href=\"#bi\">bi</a>, <a class=\"id\" href=\"#bio_sectors\">bio_sectors</a>(<a class=\"id\" href=\"#bio\">bio</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate kernel buffer for protection data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#sectors\">sectors</a> * <a class=\"id\" href=\"#blk_integrity_tuple_size\">blk_integrity_tuple_size</a>(<a class=\"id\" href=\"#bi\">bi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a> | <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#bounce_gfp\">bounce_gfp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#buf\">buf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"could not allocate integrity buffer\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (((unsigned long) <a class=\"id\" href=\"#buf\">buf</a>) + <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = ((unsigned long) <a class=\"id\" href=\"#buf\">buf</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate bio integrity payload and integrity vectors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a> = <a class=\"id\" href=\"#bio_integrity_alloc\">bio_integrity_alloc</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#bip\">bip</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"could not allocate data integrity bioset\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_buf\">bip_buf</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_size\">bip_size</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_sector\">bip_sector</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Map it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0 ; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_pages\">nr_pages</a> ; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bytes\">bytes</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bio_integrity_add_page\">bio_integrity_add_page</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#buf\">buf</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#bytes\">bytes</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Install custom I/O completion handler if read verify is enabled */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(<a class=\"id\" href=\"#bio\">bio</a>) == <a class=\"id\" href=\"#READ\">READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_end_io\">bip_end_io</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#bio_integrity_endio\">bio_integrity_endio</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Auto-generate integrity metadata if this is a write */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(<a class=\"id\" href=\"#bio\">bio</a>) == <a class=\"id\" href=\"#WRITE\">WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_integrity_generate\">bio_integrity_generate</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_integrity_prep\">bio_integrity_prep</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_verify - Verify integrity metadata for a bio</span>", 
"<span class=\"comment\"> * @bio:<span class=\"ts\"/>bio to verify</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: This function is called to verify the integrity of a</span>", 
"<span class=\"comment\"> * bio.<span class=\"ts\"/> The data in the bio io_vec is compared to the integrity</span>", 
"<span class=\"comment\"> * metadata returned by the HBA.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#bio_integrity_verify\">bio_integrity_verify</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a> = <a class=\"id\" href=\"#bdev_get_integrity\">bdev_get_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity_exchg\">blk_integrity_exchg</a> <a class=\"id\" href=\"#bix\">bix</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bv\">bv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>-><a class=\"id\" href=\"#bip_sector\">bip_sector</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#sectors\">sectors</a>, <a class=\"id\" href=\"#total\">total</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#prot_buf\">prot_buf</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>-><a class=\"id\" href=\"#bip_buf\">bip_buf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#total\">total</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#disk_name\">disk_name</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#sector_size\">sector_size</a> = <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_for_each_segment\">bio_for_each_segment</a>(<a class=\"id\" href=\"#bv\">bv</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#kaddr\">kaddr</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#data_buf\">data_buf</a> = <a class=\"id\" href=\"#kaddr\">kaddr</a> + <a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#data_size\">data_size</a> = <a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#prot_buf\">prot_buf</a> = <a class=\"id\" href=\"#prot_buf\">prot_buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bix\">bix</a>.<a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#sector\">sector</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#verify_fn\">verify_fn</a>(&amp;<a class=\"id\" href=\"#bix\">bix</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sectors\">sectors</a> = <a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> / <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector\">sector</a> += <a class=\"id\" href=\"#sectors\">sectors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot_buf\">prot_buf</a> += <a class=\"id\" href=\"#sectors\">sectors</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total\">total</a> += <a class=\"id\" href=\"#sectors\">sectors</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#total\">total</a> &gt; <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>-><a class=\"id\" href=\"#bip_size\">bip_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_verify_fn - Integrity I/O completion worker</span>", 
"<span class=\"comment\"> * @work:<span class=\"ts\"/>Work struct stored in bio to be verified</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: This workqueue function is called to complete a READ</span>", 
"<span class=\"comment\"> * request.  The function verifies the transferred integrity metadata</span>", 
"<span class=\"comment\"> * and then calls the original bio end_io function.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#bio_integrity_verify_fn\">bio_integrity_verify_fn</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip\">bip</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a>, <a class=\"id\" href=\"#bip_work\">bip_work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_bio\">bip_bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#bio_integrity_verify\">bio_integrity_verify</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Restore original bio completion handler */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_end_io\">bip_end_io</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_endio\">bio_endio</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_endio - Integrity I/O completion function</span>", 
"<span class=\"comment\"> * @bio:<span class=\"ts\"/>Protected bio</span>", 
"<span class=\"comment\"> * @error:<span class=\"ts\"/>Pointer to errno</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Completion for integrity I/O</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Normally I/O completion is done in interrupt context.  However,</span>", 
"<span class=\"comment\"> * verifying I/O integrity is a time-consuming task which must be run</span>", 
"<span class=\"comment\"> * in process context.<span class=\"ts\"/>This function postpones completion</span>", 
"<span class=\"comment\"> * accordingly.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bio_integrity_endio\">bio_integrity_endio</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip\">bip</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_bio\">bip_bio</a> != <a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* In case of an I/O error there is no point in verifying the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * integrity metadata.  Restore original bio end_io handler</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and run it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_end_io\">bip_end_io</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_endio\">bio_endio</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_work\">bip_work</a>, <a class=\"id\" href=\"#bio_integrity_verify_fn\">bio_integrity_verify_fn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_work\">queue_work</a>(<a class=\"id\" href=\"#kintegrityd_wq\">kintegrityd_wq</a>, &amp;<a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_work\">bip_work</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_integrity_endio\">bio_integrity_endio</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_mark_head - Advance bip_vec skip bytes</span>", 
"<span class=\"comment\"> * @bip:<span class=\"ts\"/>Integrity vector to advance</span>", 
"<span class=\"comment\"> * @skip:<span class=\"ts\"/>Number of bytes to advance it</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bio_integrity_mark_head\">bio_integrity_mark_head</a>(struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip\">bip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#skip\">skip</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#iv\">iv</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip_for_each_vec\">bip_for_each_vec</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#bip\">bip</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skip\">skip</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_idx\">bip_idx</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#skip\">skip</a> >= <a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skip\">skip</a> -= <a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else { <span class=\"comment\">/* skip &lt; iv-&gt;bv_len) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a> += <a class=\"id\" href=\"#skip\">skip</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> -= <a class=\"id\" href=\"#skip\">skip</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_idx\">bip_idx</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_mark_tail - Truncate bip_vec to be len bytes long</span>", 
"<span class=\"comment\"> * @bip:<span class=\"ts\"/>Integrity vector to truncate</span>", 
"<span class=\"comment\"> * @len:<span class=\"ts\"/>New length of integrity vector</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bio_integrity_mark_tail\">bio_integrity_mark_tail</a>(struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip\">bip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#iv\">iv</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip_for_each_vec\">bip_for_each_vec</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#bip\">bip</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_vcnt\">bip_vcnt</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#len\">len</a> >= <a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else { <span class=\"comment\">/* len &lt; iv-&gt;bv_len) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_advance - Advance integrity vector</span>", 
"<span class=\"comment\"> * @bio:<span class=\"ts\"/>bio whose integrity vector to update</span>", 
"<span class=\"comment\"> * @bytes_done:<span class=\"ts\"/>number of data bytes that have been completed</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: This function calculates how many integrity bytes the</span>", 
"<span class=\"comment\"> * number of completed data bytes correspond to and advances the</span>", 
"<span class=\"comment\"> * integrity vector accordingly.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bio_integrity_advance\">bio_integrity_advance</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, unsigned int <a class=\"id\" href=\"#bytes_done\">bytes_done</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip\">bip</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a> = <a class=\"id\" href=\"#bdev_get_integrity\">bdev_get_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nr_sectors\">nr_sectors</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bip\">bip</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bi\">bi</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_sectors\">nr_sectors</a> = <a class=\"id\" href=\"#bio_integrity_hw_sectors\">bio_integrity_hw_sectors</a>(<a class=\"id\" href=\"#bi\">bi</a>, <a class=\"id\" href=\"#bytes_done\">bytes_done</a> >> 9);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_integrity_mark_head\">bio_integrity_mark_head</a>(<a class=\"id\" href=\"#bip\">bip</a>, <a class=\"id\" href=\"#nr_sectors\">nr_sectors</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_integrity_advance\">bio_integrity_advance</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_trim - Trim integrity vector</span>", 
"<span class=\"comment\"> * @bio:<span class=\"ts\"/>bio whose integrity vector to update</span>", 
"<span class=\"comment\"> * @offset:<span class=\"ts\"/>offset to first data sector</span>", 
"<span class=\"comment\"> * @sectors:<span class=\"ts\"/>number of data sectors</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Used to trim the integrity vector in a cloned bio.</span>", 
"<span class=\"comment\"> * The ivec will be advanced corresponding to 'offset' data sectors</span>", 
"<span class=\"comment\"> * and the length will be truncated corresponding to 'len' data</span>", 
"<span class=\"comment\"> * sectors.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bio_integrity_trim\">bio_integrity_trim</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, unsigned int <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sectors\">sectors</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip\">bip</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a> = <a class=\"id\" href=\"#bdev_get_integrity\">bdev_get_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nr_sectors\">nr_sectors</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bip\">bip</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bi\">bi</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#bio_flagged\">bio_flagged</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#BIO_CLONED\">BIO_CLONED</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_sectors\">nr_sectors</a> = <a class=\"id\" href=\"#bio_integrity_hw_sectors\">bio_integrity_hw_sectors</a>(<a class=\"id\" href=\"#bi\">bi</a>, <a class=\"id\" href=\"#sectors\">sectors</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_sector\">bip_sector</a> = <a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_sector\">bip_sector</a> + <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_integrity_mark_head\">bio_integrity_mark_head</a>(<a class=\"id\" href=\"#bip\">bip</a>, <a class=\"id\" href=\"#offset\">offset</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_integrity_mark_tail\">bio_integrity_mark_tail</a>(<a class=\"id\" href=\"#bip\">bip</a>, <a class=\"id\" href=\"#sectors\">sectors</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_integrity_trim\">bio_integrity_trim</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_split - Split integrity metadata</span>", 
"<span class=\"comment\"> * @bio:<span class=\"ts\"/>Protected bio</span>", 
"<span class=\"comment\"> * @bp:<span class=\"ts\"/><span class=\"ts\"/>Resulting bio_pair</span>", 
"<span class=\"comment\"> * @sectors:<span class=\"ts\"/>Offset</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Splits an integrity page into a bio_pair.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bio_integrity_split\">bio_integrity_split</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, struct <a class=\"id\" href=\"#bio_pair\">bio_pair</a> *<a class=\"id\" href=\"#bp\">bp</a>, int <a class=\"id\" href=\"#sectors\">sectors</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip\">bip</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nr_sectors\">nr_sectors</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_integrity\">bio_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a> = <a class=\"id\" href=\"#bdev_get_integrity\">bdev_get_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bi\">bi</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_vcnt\">bip_vcnt</a> != 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_sectors\">nr_sectors</a> = <a class=\"id\" href=\"#bio_integrity_hw_sectors\">bio_integrity_hw_sectors</a>(<a class=\"id\" href=\"#bi\">bi</a>, <a class=\"id\" href=\"#sectors\">sectors</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bio1\">bio1</a>.<a class=\"id\" href=\"#bi_integrity\">bi_integrity</a> = &amp;<a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip1\">bip1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bio2\">bio2</a>.<a class=\"id\" href=\"#bi_integrity\">bi_integrity</a> = &amp;<a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip2\">bip2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#iv1\">iv1</a> = <a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_vec\">bip_vec</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#iv2\">iv2</a> = <a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_vec\">bip_vec</a>[0];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip1\">bip1</a>.<a class=\"id\" href=\"#bip_vec\">bip_vec</a>[0] = <a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#iv1\">iv1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip2\">bip2</a>.<a class=\"id\" href=\"#bip_vec\">bip_vec</a>[0] = <a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#iv2\">iv2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#iv1\">iv1</a>.<a class=\"id\" href=\"#bv_len\">bv_len</a> = <a class=\"id\" href=\"#sectors\">sectors</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#iv2\">iv2</a>.<a class=\"id\" href=\"#bv_offset\">bv_offset</a> += <a class=\"id\" href=\"#sectors\">sectors</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#iv2\">iv2</a>.<a class=\"id\" href=\"#bv_len\">bv_len</a> -= <a class=\"id\" href=\"#sectors\">sectors</a> * <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip1\">bip1</a>.<a class=\"id\" href=\"#bip_sector\">bip_sector</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>-><a class=\"id\" href=\"#bip_sector\">bip_sector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip2\">bip2</a>.<a class=\"id\" href=\"#bip_sector\">bip_sector</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>-><a class=\"id\" href=\"#bip_sector\">bip_sector</a> + <a class=\"id\" href=\"#nr_sectors\">nr_sectors</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip1\">bip1</a>.<a class=\"id\" href=\"#bip_vcnt\">bip_vcnt</a> = <a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip2\">bip2</a>.<a class=\"id\" href=\"#bip_vcnt\">bip_vcnt</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip1\">bip1</a>.<a class=\"id\" href=\"#bip_idx\">bip_idx</a> = <a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bip2\">bip2</a>.<a class=\"id\" href=\"#bip_idx\">bip_idx</a> = 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_integrity_split\">bio_integrity_split</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bio_integrity_clone - Callback for cloning bios with integrity metadata</span>", 
"<span class=\"comment\"> * @bio:<span class=\"ts\"/>New bio</span>", 
"<span class=\"comment\"> * @bio_src:<span class=\"ts\"/>Original bio</span>", 
"<span class=\"comment\"> * @gfp_mask:<span class=\"ts\"/>Memory allocation mask</span>", 
"<span class=\"comment\"> * @bs:<span class=\"ts\"/><span class=\"ts\"/>bio_set to allocate bip from</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:<span class=\"ts\"/>Called to allocate a bip when cloning a bio</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bio_integrity_clone\">bio_integrity_clone</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio_src\">bio_src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, struct <a class=\"id\" href=\"#bio_set\">bio_set</a> *<a class=\"id\" href=\"#bs\">bs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip_src\">bip_src</a> = <a class=\"id\" href=\"#bio_src\">bio_src</a>-><a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bip\">bip</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bip_src\">bip_src</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a> = <a class=\"id\" href=\"#bio_integrity_alloc_bioset\">bio_integrity_alloc_bioset</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, <a class=\"id\" href=\"#bip_src\">bip_src</a>-><a class=\"id\" href=\"#bip_vcnt\">bip_vcnt</a>, <a class=\"id\" href=\"#bs\">bs</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bip\">bip</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_vec\">bip_vec</a>, <a class=\"id\" href=\"#bip_src\">bip_src</a>-><a class=\"id\" href=\"#bip_vec\">bip_vec</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#bip_src\">bip_src</a>-><a class=\"id\" href=\"#bip_vcnt\">bip_vcnt</a> * sizeof(struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_sector\">bip_sector</a> = <a class=\"id\" href=\"#bip_src\">bip_src</a>-><a class=\"id\" href=\"#bip_sector\">bip_sector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_vcnt\">bip_vcnt</a> = <a class=\"id\" href=\"#bip_src\">bip_src</a>-><a class=\"id\" href=\"#bip_vcnt\">bip_vcnt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bip\">bip</a>-><a class=\"id\" href=\"#bip_idx\">bip_idx</a> = <a class=\"id\" href=\"#bip_src\">bip_src</a>-><a class=\"id\" href=\"#bip_idx\">bip_idx</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_integrity_clone\">bio_integrity_clone</a>);", 
"", 
"int <a class=\"id\" href=\"#bioset_integrity_create\">bioset_integrity_create</a>(struct <a class=\"id\" href=\"#bio_set\">bio_set</a> *<a class=\"id\" href=\"#bs\">bs</a>, int <a class=\"id\" href=\"#pool_size\">pool_size</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_slab\">max_slab</a> = <a class=\"id\" href=\"#vecs_to_idx\">vecs_to_idx</a>(<a class=\"id\" href=\"#BIO_MAX_PAGES\">BIO_MAX_PAGES</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bio_integrity_pool\">bio_integrity_pool</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_create_slab_pool\">mempool_create_slab_pool</a>(<a class=\"id\" href=\"#pool_size\">pool_size</a>, <a class=\"id\" href=\"#bip_slab\">bip_slab</a>[<a class=\"id\" href=\"#max_slab\">max_slab</a>].<a class=\"id\" href=\"#slab\">slab</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bio_integrity_pool\">bio_integrity_pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bioset_integrity_create\">bioset_integrity_create</a>);", 
"", 
"void <a class=\"id\" href=\"#bioset_integrity_free\">bioset_integrity_free</a>(struct <a class=\"id\" href=\"#bio_set\">bio_set</a> *<a class=\"id\" href=\"#bs\">bs</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bio_integrity_pool\">bio_integrity_pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bio_integrity_pool\">bio_integrity_pool</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bioset_integrity_free\">bioset_integrity_free</a>);", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#bio_integrity_init\">bio_integrity_init</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kintegrityd_wq\">kintegrityd_wq</a> = <a class=\"id\" href=\"#create_workqueue\">create_workqueue</a>(\"kintegrityd\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kintegrityd_wq\">kintegrityd_wq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Failed to create kintegrityd\\n\");", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0 ; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#BIOVEC_NR_POOLS\">BIOVEC_NR_POOLS</a> ; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = sizeof(struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#bip_slab\">bip_slab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#nr_vecs\">nr_vecs</a> * sizeof(struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bip_slab\">bip_slab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#slab\">slab</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(<a class=\"id\" href=\"#bip_slab\">bip_slab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#size\">size</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#SLAB_HWCACHE_ALIGN\">SLAB_HWCACHE_ALIGN</a>|<a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"}", 
];
xr_frag_insert('l/98/40a65fd13560ffe7fa8aecfae5a3d1b83f4f89.xr', __xr_tmp);
