var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static char * const <a class=\"id\" href=\"#migratetype_names\">migratetype_names</a>[<a class=\"id\" href=\"#MIGRATE_TYPES\">MIGRATE_TYPES</a>] = {", 
"<span class=\"ts\"/>\"Unmovable\",", 
"<span class=\"ts\"/>\"Reclaimable\",", 
"<span class=\"ts\"/>\"Movable\",", 
"<span class=\"ts\"/>\"Reserve\",", 
"<span class=\"ts\"/>\"Isolate\",", 
"};", 
"", 
"static void *<a class=\"id\" href=\"#frag_start\">frag_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#node\">node</a> = *<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pgdat\">pgdat</a> = <a class=\"id\" href=\"#first_online_pgdat\">first_online_pgdat</a>();", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#pgdat\">pgdat</a> && <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#pgdat\">pgdat</a> = <a class=\"id\" href=\"#next_online_pgdat\">next_online_pgdat</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pgdat\">pgdat</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#frag_next\">frag_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = (<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#next_online_pgdat\">next_online_pgdat</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#frag_stop\">frag_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"}", 
"", 
"<span class=\"comment\">/* Walk all the zones in a node and print using a callback */</span>", 
"static void <a class=\"id\" href=\"#walk_zones_in_node\">walk_zones_in_node</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void (*<a class=\"id\" href=\"#print\">print</a>)(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *, struct <a class=\"id\" href=\"#zone\">zone</a> *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#node_zones\">node_zones</a> = <a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_zones\">node_zones</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#node_zones\">node_zones</a>; <a class=\"id\" href=\"#zone\">zone</a> - <a class=\"id\" href=\"#node_zones\">node_zones</a> &lt; <a class=\"id\" href=\"#MAX_NR_ZONES\">MAX_NR_ZONES</a>; ++<a class=\"id\" href=\"#zone\">zone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#populated_zone\">populated_zone</a>(<a class=\"id\" href=\"#zone\">zone</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print\">print</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#zone\">zone</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"static void <a class=\"id\" href=\"#frag_show_print\">frag_show_print</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#order\">order</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Node %d, zone %8s \", <a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_id\">node_id</a>, <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#order\">order</a> = 0; <a class=\"id\" href=\"#order\">order</a> &lt; <a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a>; ++<a class=\"id\" href=\"#order\">order</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%6lu \", <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#free_area\">free_area</a>[<a class=\"id\" href=\"#order\">order</a>].<a class=\"id\" href=\"#nr_free\">nr_free</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This walks the free areas for each zone.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#frag_show\">frag_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = (<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#walk_zones_in_node\">walk_zones_in_node</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#frag_show_print\">frag_show_print</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pagetypeinfo_showfree_print\">pagetypeinfo_showfree_print</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>, struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#mtype\">mtype</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#mtype\">mtype</a> = 0; <a class=\"id\" href=\"#mtype\">mtype</a> &lt; <a class=\"id\" href=\"#MIGRATE_TYPES\">MIGRATE_TYPES</a>; <a class=\"id\" href=\"#mtype\">mtype</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Node %4d, zone %8s, type %12s \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_id\">node_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#migratetype_names\">migratetype_names</a>[<a class=\"id\" href=\"#mtype\">mtype</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#order\">order</a> = 0; <a class=\"id\" href=\"#order\">order</a> &lt; <a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a>; ++<a class=\"id\" href=\"#order\">order</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#freecount\">freecount</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#free_area\">free_area</a> *<a class=\"id\" href=\"#area\">area</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#curr\">curr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#area\">area</a> = &amp;(<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#free_area\">free_area</a>[<a class=\"id\" href=\"#order\">order</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#curr\">curr</a>, &amp;<a class=\"id\" href=\"#area\">area</a>-><a class=\"id\" href=\"#free_list\">free_list</a>[<a class=\"id\" href=\"#mtype\">mtype</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freecount\">freecount</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%6lu \", <a class=\"id\" href=\"#freecount\">freecount</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Print out the free pages at each order for each migatetype */</span>", 
"static int <a class=\"id\" href=\"#pagetypeinfo_showfree\">pagetypeinfo_showfree</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = (<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Print header */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%-43s \", \"Free pages count per migrate type at order\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#order\">order</a> = 0; <a class=\"id\" href=\"#order\">order</a> &lt; <a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a>; ++<a class=\"id\" href=\"#order\">order</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%6d \", <a class=\"id\" href=\"#order\">order</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#walk_zones_in_node\">walk_zones_in_node</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#pagetypeinfo_showfree_print\">pagetypeinfo_showfree_print</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pagetypeinfo_showblockcount_print\">pagetypeinfo_showblockcount_print</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>, struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mtype\">mtype</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a> = <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#zone_start_pfn\">zone_start_pfn</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a> + <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#spanned_pages\">spanned_pages</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#count\">count</a>[<a class=\"id\" href=\"#MIGRATE_TYPES\">MIGRATE_TYPES</a>] = { 0, };", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a>; <a class=\"id\" href=\"#pfn\">pfn</a> &lt; <a class=\"id\" href=\"#end_pfn\">end_pfn</a>; <a class=\"id\" href=\"#pfn\">pfn</a> += <a class=\"id\" href=\"#pageblock_nr_pages\">pageblock_nr_pages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pfn_valid\">pfn_valid</a>(<a class=\"id\" href=\"#pfn\">pfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Watch for unexpected holes punched in the memmap */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#memmap_valid_within\">memmap_valid_within</a>(<a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#zone\">zone</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtype\">mtype</a> = <a class=\"id\" href=\"#get_pageblock_migratetype\">get_pageblock_migratetype</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mtype\">mtype</a> &lt; <a class=\"id\" href=\"#MIGRATE_TYPES\">MIGRATE_TYPES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>[<a class=\"id\" href=\"#mtype\">mtype</a>]++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Print counts */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Node %d, zone %8s \", <a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_id\">node_id</a>, <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#mtype\">mtype</a> = 0; <a class=\"id\" href=\"#mtype\">mtype</a> &lt; <a class=\"id\" href=\"#MIGRATE_TYPES\">MIGRATE_TYPES</a>; <a class=\"id\" href=\"#mtype\">mtype</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%12lu \", <a class=\"id\" href=\"#count\">count</a>[<a class=\"id\" href=\"#mtype\">mtype</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"}", 
"", 
"<span class=\"comment\">/* Print out the free pages at each order for each migratetype */</span>", 
"static int <a class=\"id\" href=\"#pagetypeinfo_showblockcount\">pagetypeinfo_showblockcount</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mtype\">mtype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = (<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n%-23s\", \"Number of blocks type \");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#mtype\">mtype</a> = 0; <a class=\"id\" href=\"#mtype\">mtype</a> &lt; <a class=\"id\" href=\"#MIGRATE_TYPES\">MIGRATE_TYPES</a>; <a class=\"id\" href=\"#mtype\">mtype</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%12s \", <a class=\"id\" href=\"#migratetype_names\">migratetype_names</a>[<a class=\"id\" href=\"#mtype\">mtype</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"<span class=\"ts\"/><a class=\"id\" href=\"#walk_zones_in_node\">walk_zones_in_node</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#pagetypeinfo_showblockcount_print\">pagetypeinfo_showblockcount_print</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This prints out statistics in relation to grouping pages by mobility.</span>", 
"<span class=\"comment\"> * It is expensive to collect so do not constantly read the file.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pagetypeinfo_show\">pagetypeinfo_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = (<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check memoryless node */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#node_state\">node_state</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_id\">node_id</a>, <a class=\"id\" href=\"#N_HIGH_MEMORY\">N_HIGH_MEMORY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Page block order: %d\\n\", <a class=\"id\" href=\"#pageblock_order\">pageblock_order</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Pages per block:  %lu\\n\", <a class=\"id\" href=\"#pageblock_nr_pages\">pageblock_nr_pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagetypeinfo_showfree\">pagetypeinfo_showfree</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pgdat\">pgdat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagetypeinfo_showblockcount\">pagetypeinfo_showblockcount</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pgdat\">pgdat</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#fragmentation_op\">fragmentation_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_start\">frag_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_next\">frag_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_stop\">frag_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_show\">frag_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#fragmentation_open\">fragmentation_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#fragmentation_op\">fragmentation_op</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#fragmentation_file_operations\">fragmentation_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#fragmentation_open\">fragmentation_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#pagetypeinfo_op\">pagetypeinfo_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_start\">frag_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_next\">frag_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_stop\">frag_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pagetypeinfo_show\">pagetypeinfo_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#pagetypeinfo_open\">pagetypeinfo_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#pagetypeinfo_op\">pagetypeinfo_op</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#pagetypeinfo_file_ops\">pagetypeinfo_file_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#pagetypeinfo_open\">pagetypeinfo_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ZONE_DMA\">CONFIG_ZONE_DMA</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEXT_FOR_DMA\">TEXT_FOR_DMA</a>(<a class=\"id\" href=\"#xx\">xx</a>) <a class=\"id\" href=\"#xx\">xx</a> \"_dma\",", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEXT_FOR_DMA\">TEXT_FOR_DMA</a>(<a class=\"id\" href=\"#xx\">xx</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ZONE_DMA32\">CONFIG_ZONE_DMA32</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEXT_FOR_DMA32\">TEXT_FOR_DMA32</a>(<a class=\"id\" href=\"#xx\">xx</a>) <a class=\"id\" href=\"#xx\">xx</a> \"_dma32\",", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEXT_FOR_DMA32\">TEXT_FOR_DMA32</a>(<a class=\"id\" href=\"#xx\">xx</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGHMEM\">CONFIG_HIGHMEM</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEXT_FOR_HIGHMEM\">TEXT_FOR_HIGHMEM</a>(<a class=\"id\" href=\"#xx\">xx</a>) <a class=\"id\" href=\"#xx\">xx</a> \"_high\",", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEXT_FOR_HIGHMEM\">TEXT_FOR_HIGHMEM</a>(<a class=\"id\" href=\"#xx\">xx</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEXTS_FOR_ZONES\">TEXTS_FOR_ZONES</a>(<a class=\"id\" href=\"#xx\">xx</a>) <a class=\"id\" href=\"#TEXT_FOR_DMA\">TEXT_FOR_DMA</a>(<a class=\"id\" href=\"#xx\">xx</a>) <a class=\"id\" href=\"#TEXT_FOR_DMA32\">TEXT_FOR_DMA32</a>(<a class=\"id\" href=\"#xx\">xx</a>) <a class=\"id\" href=\"#xx\">xx</a> \"_normal\", \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TEXT_FOR_HIGHMEM\">TEXT_FOR_HIGHMEM</a>(<a class=\"id\" href=\"#xx\">xx</a>) <a class=\"id\" href=\"#xx\">xx</a> \"_movable\",", 
"", 
"static const char * const <a class=\"id\" href=\"#vmstat_text\">vmstat_text</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* Zoned VM counters */</span>", 
"<span class=\"ts\"/>\"nr_free_pages\",", 
"<span class=\"ts\"/>\"nr_inactive_anon\",", 
"<span class=\"ts\"/>\"nr_active_anon\",", 
"<span class=\"ts\"/>\"nr_inactive_file\",", 
"<span class=\"ts\"/>\"nr_active_file\",", 
"<span class=\"ts\"/>\"nr_unevictable\",", 
"<span class=\"ts\"/>\"nr_mlock\",", 
"<span class=\"ts\"/>\"nr_anon_pages\",", 
"<span class=\"ts\"/>\"nr_mapped\",", 
"<span class=\"ts\"/>\"nr_file_pages\",", 
"<span class=\"ts\"/>\"nr_dirty\",", 
"<span class=\"ts\"/>\"nr_writeback\",", 
"<span class=\"ts\"/>\"nr_slab_reclaimable\",", 
"<span class=\"ts\"/>\"nr_slab_unreclaimable\",", 
"<span class=\"ts\"/>\"nr_page_table_pages\",", 
"<span class=\"ts\"/>\"nr_kernel_stack\",", 
"<span class=\"ts\"/>\"nr_unstable\",", 
"<span class=\"ts\"/>\"nr_bounce\",", 
"<span class=\"ts\"/>\"nr_vmscan_write\",", 
"<span class=\"ts\"/>\"nr_writeback_temp\",", 
"<span class=\"ts\"/>\"nr_isolated_anon\",", 
"<span class=\"ts\"/>\"nr_isolated_file\",", 
"<span class=\"ts\"/>\"nr_shmem\",", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/>\"numa_hit\",", 
"<span class=\"ts\"/>\"numa_miss\",", 
"<span class=\"ts\"/>\"numa_foreign\",", 
"<span class=\"ts\"/>\"numa_interleave\",", 
"<span class=\"ts\"/>\"numa_local\",", 
"<span class=\"ts\"/>\"numa_other\",", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_VM_EVENT_COUNTERS\">CONFIG_VM_EVENT_COUNTERS</a>", 
"<span class=\"ts\"/>\"pgpgin\",", 
"<span class=\"ts\"/>\"pgpgout\",", 
"<span class=\"ts\"/>\"pswpin\",", 
"<span class=\"ts\"/>\"pswpout\",", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEXTS_FOR_ZONES\">TEXTS_FOR_ZONES</a>(\"pgalloc\")", 
"", 
"<span class=\"ts\"/>\"pgfree\",", 
"<span class=\"ts\"/>\"pgactivate\",", 
"<span class=\"ts\"/>\"pgdeactivate\",", 
"", 
"<span class=\"ts\"/>\"pgfault\",", 
"<span class=\"ts\"/>\"pgmajfault\",", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEXTS_FOR_ZONES\">TEXTS_FOR_ZONES</a>(\"pgrefill\")", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEXTS_FOR_ZONES\">TEXTS_FOR_ZONES</a>(\"pgsteal\")", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEXTS_FOR_ZONES\">TEXTS_FOR_ZONES</a>(\"pgscan_kswapd\")", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEXTS_FOR_ZONES\">TEXTS_FOR_ZONES</a>(\"pgscan_direct\")", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/>\"zone_reclaim_failed\",", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>\"pginodesteal\",", 
"<span class=\"ts\"/>\"slabs_scanned\",", 
"<span class=\"ts\"/>\"kswapd_steal\",", 
"<span class=\"ts\"/>\"kswapd_inodesteal\",", 
"<span class=\"ts\"/>\"kswapd_low_wmark_hit_quickly\",", 
"<span class=\"ts\"/>\"kswapd_high_wmark_hit_quickly\",", 
"<span class=\"ts\"/>\"kswapd_skip_congestion_wait\",", 
"<span class=\"ts\"/>\"pageoutrun\",", 
"<span class=\"ts\"/>\"allocstall\",", 
"", 
"<span class=\"ts\"/>\"pgrotated\",", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPACTION\">CONFIG_COMPACTION</a>", 
"<span class=\"ts\"/>\"compact_blocks_moved\",", 
"<span class=\"ts\"/>\"compact_pages_moved\",", 
"<span class=\"ts\"/>\"compact_pagemigrate_failed\",", 
"<span class=\"ts\"/>\"compact_stall\",", 
"<span class=\"ts\"/>\"compact_fail\",", 
"<span class=\"ts\"/>\"compact_success\",", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HUGETLB_PAGE\">CONFIG_HUGETLB_PAGE</a>", 
"<span class=\"ts\"/>\"htlb_buddy_alloc_success\",", 
"<span class=\"ts\"/>\"htlb_buddy_alloc_fail\",", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>\"unevictable_pgs_culled\",", 
"<span class=\"ts\"/>\"unevictable_pgs_scanned\",", 
"<span class=\"ts\"/>\"unevictable_pgs_rescued\",", 
"<span class=\"ts\"/>\"unevictable_pgs_mlocked\",", 
"<span class=\"ts\"/>\"unevictable_pgs_munlocked\",", 
"<span class=\"ts\"/>\"unevictable_pgs_cleared\",", 
"<span class=\"ts\"/>\"unevictable_pgs_stranded\",", 
"<span class=\"ts\"/>\"unevictable_pgs_mlockfreed\",", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static void <a class=\"id\" href=\"#zoneinfo_show_print\">zoneinfo_show_print</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Node %d, zone %8s\", <a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_id\">node_id</a>, <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n  pages free     %lu\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n        min      %lu\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n        low      %lu\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n        high     %lu\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n        scanned  %lu\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n        spanned  %lu\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n        present  %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#zone_nr_free_pages\">zone_nr_free_pages</a>(<a class=\"id\" href=\"#zone\">zone</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#min_wmark_pages\">min_wmark_pages</a>(<a class=\"id\" href=\"#zone\">zone</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#low_wmark_pages\">low_wmark_pages</a>(<a class=\"id\" href=\"#zone\">zone</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#high_wmark_pages\">high_wmark_pages</a>(<a class=\"id\" href=\"#zone\">zone</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#pages_scanned\">pages_scanned</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#spanned_pages\">spanned_pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#present_pages\">present_pages</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NR_VM_ZONE_STAT_ITEMS\">NR_VM_ZONE_STAT_ITEMS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n    %-12s %lu\", <a class=\"id\" href=\"#vmstat_text\">vmstat_text</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone_page_state\">zone_page_state</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#i\">i</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n        protection: (%lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lowmem_reserve\">lowmem_reserve</a>[0]);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 1; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lowmem_reserve\">lowmem_reserve</a>); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \", %lu\", <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lowmem_reserve\">lowmem_reserve</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \")\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n  pagesets\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#per_cpu_pageset\">per_cpu_pageset</a> *<a class=\"id\" href=\"#pageset\">pageset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pageset\">pageset</a> = <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#pageset\">pageset</a>, <a class=\"id\" href=\"#i\">i</a>);", 
];
xr_frag_insert('l/99/35c42ba9ba126c0e6af9b485a2b9843524f810.xr', __xr_tmp);
