var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Suspend support specific for i386/x86-64.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Distribute under GPLv2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2007 Rafael J. Wysocki &lt;rjw@sisk.pl&gt;</span>", 
"<span class=\"comment\"> * Copyright (c) 2002 Pavel Machek &lt;pavel@ucw.cz&gt;</span>", 
"<span class=\"comment\"> * Copyright (c) 2001 Patrick Mochel &lt;mochel@osdl.org&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#suspend\">suspend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mtrr\">mtrr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mce\">mce</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xcr\">xcr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#suspend\">suspend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#debugreg\">debugreg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"static struct <a class=\"id\" href=\"#saved_context\">saved_context</a> <a class=\"id\" href=\"#saved_context\">saved_context</a>;", 
"", 
"unsigned long <a class=\"id\" href=\"#saved_context_ebx\">saved_context_ebx</a>;", 
"unsigned long <a class=\"id\" href=\"#saved_context_esp\">saved_context_esp</a>, <a class=\"id\" href=\"#saved_context_ebp\">saved_context_ebp</a>;", 
"unsigned long <a class=\"id\" href=\"#saved_context_esi\">saved_context_esi</a>, <a class=\"id\" href=\"#saved_context_edi\">saved_context_edi</a>;", 
"unsigned long <a class=\"id\" href=\"#saved_context_eflags\">saved_context_eflags</a>;", 
"#else", 
"<span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"struct <a class=\"id\" href=\"#saved_context\">saved_context</a> <a class=\"id\" href=\"#saved_context\">saved_context</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>__save_processor_state - save CPU registers before creating a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>hibernation image and before restoring the memory state from it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ctxt - structure to store the registers contents in</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NOTE: If there is a CPU register the modification of which by the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>boot kernel (ie. the kernel used for loading the hibernation image)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>might affect the operations of the restored target kernel (ie. the one</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>saved in the hibernation image), then its contents must be saved by this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>function.  In other words, if kernel A is hibernated and different</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>kernel B is used for loading the hibernation image into memory, the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>kernel A's __save_processor_state() function must save all registers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>needed by kernel A, so that it can operate correctly after the resume</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>regardless of what kernel B does in the meantime.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__save_processor_state\">__save_processor_state</a>(struct <a class=\"id\" href=\"#saved_context\">saved_context</a> *<a class=\"id\" href=\"#ctxt\">ctxt</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_save_fixed_ranges\">mtrr_save_fixed_ranges</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_fpu_begin\">kernel_fpu_begin</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * descriptor tables</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#store_gdt\">store_gdt</a>(&amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gdt\">gdt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#store_idt\">store_idt</a>(&amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#idt\">idt</a>);", 
"#else", 
"<span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#store_gdt\">store_gdt</a>((struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> *)&amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gdt_limit\">gdt_limit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#store_idt\">store_idt</a>((struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> *)&amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#idt_limit\">idt_limit</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#store_tr\">store_tr</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#tr\">tr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XMM0..XMM15 should be handled by kernel_fpu_begin(). */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * segment registers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#savesegment\">savesegment</a>(<a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#savesegment\">savesegment</a>(<a class=\"id\" href=\"#fs\">fs</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#fs\">fs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#savesegment\">savesegment</a>(<a class=\"id\" href=\"#gs\">gs</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gs\">gs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#savesegment\">savesegment</a>(<a class=\"id\" href=\"#ss\">ss</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#ss\">ss</a>);", 
"#else", 
"<span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"movw %%ds, %0\" : \"=m\" (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#ds\">ds</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"movw %%es, %0\" : \"=m\" (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#es\">es</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"movw %%fs, %0\" : \"=m\" (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#fs\">fs</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"movw %%gs, %0\" : \"=m\" (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gs\">gs</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"movw %%ss, %0\" : \"=m\" (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#ss\">ss</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_FS_BASE\">MSR_FS_BASE</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#fs_base\">fs_base</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_GS_BASE\">MSR_GS_BASE</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gs_base\">gs_base</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_KERNEL_GS_BASE\">MSR_KERNEL_GS_BASE</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gs_kernel_base\">gs_kernel_base</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_save_fixed_ranges\">mtrr_save_fixed_ranges</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_EFER\">MSR_EFER</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#efer\">efer</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * control registers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr0\">cr0</a> = <a class=\"id\" href=\"#read_cr0\">read_cr0</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr2\">cr2</a> = <a class=\"id\" href=\"#read_cr2\">read_cr2</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr3\">cr3</a> = <a class=\"id\" href=\"#read_cr3\">read_cr3</a>();", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr4\">cr4</a> = <a class=\"id\" href=\"#read_cr4_safe\">read_cr4_safe</a>();", 
"#else", 
"<span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr4\">cr4</a> = <a class=\"id\" href=\"#read_cr4\">read_cr4</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr8\">cr8</a> = <a class=\"id\" href=\"#read_cr8\">read_cr8</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#misc_enable_saved\">misc_enable_saved</a> = !<a class=\"id\" href=\"#rdmsrl_safe\">rdmsrl_safe</a>(<a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE\">MSR_IA32_MISC_ENABLE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#misc_enable\">misc_enable</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Needed by apm.c */</span>", 
"void <a class=\"id\" href=\"#save_processor_state\">save_processor_state</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__save_processor_state\">__save_processor_state</a>(&amp;<a class=\"id\" href=\"#saved_context\">saved_context</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_sched_clock_state\">save_sched_clock_state</a>();", 
"}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#save_processor_state\">save_processor_state</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#do_fpu_end\">do_fpu_end</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Restore FPU regs if necessary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_fpu_end\">kernel_fpu_end</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fix_processor_context\">fix_processor_context</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tss_struct\">tss_struct</a> *<a class=\"id\" href=\"#t\">t</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#init_tss\">init_tss</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_tss_desc\">set_tss_desc</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#t\">t</a>);<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * This just modifies memory; should not be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * necessary. But... This is necessary, because</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 386 hardware has concept of busy TSS or some</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * similar stupidity.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_cpu_gdt_table\">get_cpu_gdt_table</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)[<a class=\"id\" href=\"#GDT_ENTRY_TSS\">GDT_ENTRY_TSS</a>].<a class=\"id\" href=\"#type\">type</a> = 9;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#syscall_init\">syscall_init</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This sets MSR_*STAR and related */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_TR_desc\">load_TR_desc</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This does ltr */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_LDT\">load_LDT</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#active_mm\">active_mm</a>-><a class=\"id\" href=\"#context\">context</a>);<span class=\"ts\"/><span class=\"comment\">/* This does lldt */</span>", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>__restore_processor_state - restore the contents of CPU registers saved</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>by __save_processor_state()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ctxt - structure to load the registers contents from</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__restore_processor_state\">__restore_processor_state</a>(struct <a class=\"id\" href=\"#saved_context\">saved_context</a> *<a class=\"id\" href=\"#ctxt\">ctxt</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#misc_enable_saved\">misc_enable_saved</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE\">MSR_IA32_MISC_ENABLE</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#misc_enable\">misc_enable</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * control registers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* cr4 was introduced in the Pentium CPU */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr4\">cr4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_cr4\">write_cr4</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr4\">cr4</a>);", 
"#else", 
"<span class=\"comment\">/* CONFIG X86_64 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#MSR_EFER\">MSR_EFER</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#efer\">efer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr8\">write_cr8</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr8\">cr8</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr4\">write_cr4</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr4\">cr4</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr3\">write_cr3</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr3\">cr3</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr2\">write_cr2</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr2\">cr2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr0\">write_cr0</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#cr0\">cr0</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * now restore the descriptor tables to their proper values</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ltr is done i fix_processor_context().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_gdt\">load_gdt</a>(&amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gdt\">gdt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_idt\">load_idt</a>(&amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#idt\">idt</a>);", 
"#else", 
"<span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_gdt\">load_gdt</a>((const struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> *)&amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gdt_limit\">gdt_limit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_idt\">load_idt</a>((const struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> *)&amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#idt_limit\">idt_limit</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * segment registers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loadsegment\">loadsegment</a>(<a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loadsegment\">loadsegment</a>(<a class=\"id\" href=\"#fs\">fs</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#fs\">fs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loadsegment\">loadsegment</a>(<a class=\"id\" href=\"#gs\">gs</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gs\">gs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loadsegment\">loadsegment</a>(<a class=\"id\" href=\"#ss\">ss</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#ss\">ss</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sysenter MSRs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_has\">boot_cpu_has</a>(<a class=\"id\" href=\"#X86_FEATURE_SEP\">X86_FEATURE_SEP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enable_sep_cpu\">enable_sep_cpu</a>();", 
"#else", 
"<span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"movw %0, %%ds\" :: \"r\" (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#ds\">ds</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"movw %0, %%es\" :: \"r\" (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#es\">es</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"movw %0, %%fs\" :: \"r\" (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#fs\">fs</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_gs_index\">load_gs_index</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gs\">gs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"movw %0, %%ss\" :: \"r\" (<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#ss\">ss</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#MSR_FS_BASE\">MSR_FS_BASE</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#fs_base\">fs_base</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#MSR_GS_BASE\">MSR_GS_BASE</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gs_base\">gs_base</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#MSR_KERNEL_GS_BASE\">MSR_KERNEL_GS_BASE</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gs_kernel_base\">gs_kernel_base</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * restore XCR0 for xsave capable cpu's.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_xsave\">cpu_has_xsave</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xsetbv\">xsetbv</a>(<a class=\"id\" href=\"#XCR_XFEATURE_ENABLED_MASK\">XCR_XFEATURE_ENABLED_MASK</a>, <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fix_processor_context\">fix_processor_context</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_fpu_end\">do_fpu_end</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_bp_restore\">mtrr_bp_restore</a>();", 
"}", 
"", 
"<span class=\"comment\">/* Needed by apm.c */</span>", 
"void <a class=\"id\" href=\"#restore_processor_state\">restore_processor_state</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__restore_processor_state\">__restore_processor_state</a>(&amp;<a class=\"id\" href=\"#saved_context\">saved_context</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#restore_sched_clock_state\">restore_sched_clock_state</a>();", 
"}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#restore_processor_state\">restore_processor_state</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/99/4d940e1c8d251e49772e5e109e8112168321a5.xr', __xr_tmp);
