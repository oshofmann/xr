var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>The Internet Protocol (IP) output module.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Donald Becker, &lt;becker@super.org&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox, &lt;Alan.Cox@linux.org&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Richard Underwood</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Stefan Becker, &lt;stefanb@yello.ping.de&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Jorge Cwik, &lt;jorge@laser.satlink.net&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Arnt Gulbrandsen, &lt;agulbra@nvg.unit.no&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Hirokazu Takahashi, &lt;taka@valinux.co.jp&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>See ip_input.c for original log</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Missing nonblock feature in ip_build_xmit.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Mike Kilburn<span class=\"ts\"/>:<span class=\"ts\"/>htons() missing in ip_build_xmit.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Bradford Johnson:<span class=\"ts\"/>Fix faulty handling of some frames when</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>no route is found.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alexander Demenshin:<span class=\"ts\"/>Missing sk/skb free in ip_queue_xmit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(in case if packet not accepted by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>output firewall rules)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Mike McLagan<span class=\"ts\"/>:<span class=\"ts\"/>Routing by source</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alexey Kuznetsov:<span class=\"ts\"/>use new route cache</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen:<span class=\"ts\"/><span class=\"ts\"/>Fix broken PMTU recovery and remove</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>some redundant tests.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Vitaly E. Lavrov<span class=\"ts\"/>:<span class=\"ts\"/>Transparent proxy revived after year coma.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen<span class=\"ts\"/>: <span class=\"ts\"/>Replace ip_reply with ip_send_reply.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen<span class=\"ts\"/>:<span class=\"ts\"/>Split fast and slow ip_build_xmit path</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for decreased register pressure on x86</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>and more readibility.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Marc Boucher<span class=\"ts\"/>:<span class=\"ts\"/>When call_out_firewall returns FW_QUEUE,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>silently drop skb instead of failing with -EPERM.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Detlev Wengorz<span class=\"ts\"/>:<span class=\"ts\"/>Copy protocol for fragments.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Hirokazu Takahashi:<span class=\"ts\"/>HW checksumming for outgoing UDP</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>datagrams.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Hirokazu Takahashi:<span class=\"ts\"/>sendfile() on UDP works now.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#etherdevice\">etherdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#arp\">arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#checksum\">checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inetpeer\">inetpeer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#igmp\">igmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv4\">netfilter_ipv4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_bridge\">netfilter_bridge</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mroute\">mroute</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#sysctl_ip_default_ttl\">sysctl_ip_default_ttl</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = <a class=\"id\" href=\"#IPDEFTTL\">IPDEFTTL</a>;", 
"", 
"<span class=\"comment\">/* Generate a checksum for an outgoing IP datagram. */</span>", 
"<a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#ip_send_check\">ip_send_check</a>(struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#check\">check</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#check\">check</a> = <a class=\"id\" href=\"#ip_fast_csum\">ip_fast_csum</a>((unsigned char *)<a class=\"id\" href=\"#iph\">iph</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ip_send_check\">ip_send_check</a>);", 
"", 
"int <a class=\"id\" href=\"#__ip_local_out\">__ip_local_out</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_send_check\">ip_send_check</a>(<a class=\"id\" href=\"#iph\">iph</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nf_hook\">nf_hook</a>(<a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>, <a class=\"id\" href=\"#NF_INET_LOCAL_OUT\">NF_INET_LOCAL_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dst_output\">dst_output</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip_local_out\">ip_local_out</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__ip_local_out\">__ip_local_out</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#err\">err</a> == 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dst_output\">dst_output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ip_local_out\">ip_local_out</a>);", 
"", 
"<span class=\"comment\">/* dev_loopback_xmit for use with netfilter. */</span>", 
"static int <a class=\"id\" href=\"#ip_dev_loopback_xmit\">ip_dev_loopback_xmit</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#newskb\">newskb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_mac_header\">skb_reset_mac_header</a>(<a class=\"id\" href=\"#newskb\">newskb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#newskb\">newskb</a>, <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#newskb\">newskb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newskb\">newskb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> = <a class=\"id\" href=\"#PACKET_LOOPBACK\">PACKET_LOOPBACK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newskb\">newskb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_UNNECESSARY\">CHECKSUM_UNNECESSARY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#newskb\">newskb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_rx_ni\">netif_rx_ni</a>(<a class=\"id\" href=\"#newskb\">newskb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_select_ttl\">ip_select_ttl</a>(struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ttl\">ttl</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#uc_ttl\">uc_ttl</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ttl\">ttl</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ttl\">ttl</a> = <a class=\"id\" href=\"#dst_metric\">dst_metric</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_HOPLIMIT\">RTAX_HOPLIMIT</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ttl\">ttl</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Add an ip header to a skbuff and send it out.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ip_build_and_send_pkt\">ip_build_and_send_pkt</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Build the IP header. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>) + (<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a> : 0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#version\">version</a>  = 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a>      = 5;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a>      = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#tos\">tos</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_dont_fragment\">ip_dont_fragment</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_DF\">IP_DF</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ttl\">ttl</a>      = <a class=\"id\" href=\"#ip_select_ttl\">ip_select_ttl</a>(<a class=\"id\" href=\"#inet\">inet</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>    = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>    = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_src\">rt_src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_select_ident\">ip_select_ident</a>(<a class=\"id\" href=\"#iph\">iph</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> += <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a>>>2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_options_build\">ip_options_build</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#rt\">rt</a>, 0);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#priority\">priority</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_priority\">sk_priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Send it out. */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ip_local_out\">ip_local_out</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ip_build_and_send_pkt\">ip_build_and_send_pkt</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_finish_output2\">ip_finish_output2</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rtable\">rtable</a> *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hh_len\">hh_len</a> = <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_type\">rt_type</a> == <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_UPD_PO_STATS\">IP_UPD_PO_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTMCAST\">IPSTATS_MIB_OUTMCAST</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_type\">rt_type</a> == <a class=\"id\" href=\"#RTN_BROADCAST\">RTN_BROADCAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_UPD_PO_STATS\">IP_UPD_PO_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTBCAST\">IPSTATS_MIB_OUTBCAST</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Be paranoid, rather than too clever. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>) &lt; <a class=\"id\" href=\"#hh_len\">hh_len</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#header_ops\">header_ops</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb2\">skb2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_realloc_headroom\">skb_realloc_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb2\">skb2</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_w\">skb_set_owner_w</a>(<a class=\"id\" href=\"#skb2\">skb2</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb2\">skb2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#hh\">hh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#neigh_hh_output\">neigh_hh_output</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#hh\">hh</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a>-><a class=\"id\" href=\"#output\">output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"ip_finish_output2: No header cache and no neighbour!\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_skb_dst_mtu\">ip_skb_dst_mtu</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a> ? <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#inet\">inet</a> && <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> == <a class=\"id\" href=\"#IP_PMTUDISC_PROBE\">IP_PMTUDISC_PROBE</a>) ?", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> : <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip_finish_output\">ip_finish_output</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NETFILTER\">CONFIG_NETFILTER</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_XFRM\">CONFIG_XFRM</a>)", 
"<span class=\"ts\"/><span class=\"comment\">/* Policy lookup after SNAT yielded a new policy */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#xfrm\">xfrm</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IPSKB_REROUTED\">IPSKB_REROUTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dst_output\">dst_output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#ip_skb_dst_mtu\">ip_skb_dst_mtu</a>(<a class=\"id\" href=\"#skb\">skb</a>) && !<a class=\"id\" href=\"#skb_is_gso\">skb_is_gso</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ip_fragment\">ip_fragment</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ip_finish_output2\">ip_finish_output2</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ip_finish_output2\">ip_finish_output2</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip_mc_output\">ip_mc_output</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>If the indicated interface is up and running, send the packet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_UPD_PO_STATS\">IP_UPD_PO_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUT\">IPSTATS_MIB_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Multicasts are looped back for other local users</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_flags\">rt_flags</a>&amp;<a class=\"id\" href=\"#RTCF_MULTICAST\">RTCF_MULTICAST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_mc_loop\">sk_mc_loop</a>(<a class=\"id\" href=\"#sk\">sk</a>)", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_MROUTE\">CONFIG_IP_MROUTE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Small optimization: do not loopback not local frames,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   which returned after forwarding; they will be  dropped</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   by ip_mr_input in any case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   Note, that local frames are looped back to be delivered</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   to local recipients.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   This check is duplicated in ip_mr_input at the moment.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>    &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_flags\">rt_flags</a> &amp; <a class=\"id\" href=\"#RTCF_LOCAL\">RTCF_LOCAL</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     !(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPSKB_FORWARDED\">IPSKB_FORWARDED</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>   ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#newskb\">newskb</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newskb\">newskb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>, <a class=\"id\" href=\"#NF_INET_POST_ROUTING\">NF_INET_POST_ROUTING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newskb\">newskb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#newskb\">newskb</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_dev_loopback_xmit\">ip_dev_loopback_xmit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Multicasts with ttl 0 must not go beyond the host */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ttl\">ttl</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_flags\">rt_flags</a>&amp;<a class=\"id\" href=\"#RTCF_BROADCAST\">RTCF_BROADCAST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#newskb\">newskb</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newskb\">newskb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>, <a class=\"id\" href=\"#NF_INET_POST_ROUTING\">NF_INET_POST_ROUTING</a>, <a class=\"id\" href=\"#newskb\">newskb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#newskb\">newskb</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ip_dev_loopback_xmit\">ip_dev_loopback_xmit</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_HOOK_COND\">NF_HOOK_COND</a>(<a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>, <a class=\"id\" href=\"#NF_INET_POST_ROUTING\">NF_INET_POST_ROUTING</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ip_finish_output\">ip_finish_output</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPSKB_REROUTED\">IPSKB_REROUTED</a>));", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip_output\">ip_output</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_UPD_PO_STATS\">IP_UPD_PO_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUT\">IPSTATS_MIB_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_HOOK_COND\">NF_HOOK_COND</a>(<a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>, <a class=\"id\" href=\"#NF_INET_POST_ROUTING\">NF_INET_POST_ROUTING</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ip_finish_output\">ip_finish_output</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPSKB_REROUTED\">IPSKB_REROUTED</a>));", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip_queue_xmit\">ip_queue_xmit</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Skip all of this if the packet is already routed,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * f.e. by something like SCTP.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#packet_routed\">packet_routed</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure we can route this packet. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rtable\">rtable</a> *)<a class=\"id\" href=\"#__sk_dst_check\">__sk_dst_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use correct destination address if we have options. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srr\">srr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#faddr\">faddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = { .<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#nl_u\">nl_u</a> = { .<a class=\"id\" href=\"#ip4_u\">ip4_u</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      { .<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#RT_CONN_FLAGS\">RT_CONN_FLAGS</a>(<a class=\"id\" href=\"#sk\">sk</a>) } },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#inet_sk_flowi_flags\">inet_sk_flowi_flags</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#uli_u\">uli_u</a> = { .<a class=\"id\" href=\"#ports\">ports</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       { .<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> .<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a> } } };", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If this fails, retransmit mechanism of transport layer will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * keep trying until route appears or the connection times</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * itself out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_sk_classify_flow\">security_sk_classify_flow</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_route_output_flow\">ip_route_output_flow</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#sk\">sk</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_route\">no_route</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_setup_caps\">sk_setup_caps</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set_noref\">skb_dst_set_noref</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<a class=\"id\" href=\"#packet_routed\">packet_routed</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#is_strictroute\">is_strictroute</a> && <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a> != <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_gateway\">rt_gateway</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_route\">no_route</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, we know where to send it, allocate and build IP header. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>) + (<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a> : 0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>*((<a class=\"id\" href=\"#__be16\">__be16</a> *)<a class=\"id\" href=\"#iph\">iph</a>) = <a class=\"id\" href=\"#htons\">htons</a>((4 << 12) | (5 << 8) | (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#tos\">tos</a> &amp; 0xff));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_dont_fragment\">ip_dont_fragment</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>) && !<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#local_df\">local_df</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_DF\">IP_DF</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ttl\">ttl</a>      = <a class=\"id\" href=\"#ip_select_ttl\">ip_select_ttl</a>(<a class=\"id\" href=\"#inet\">inet</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>    = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_src\">rt_src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>    = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Transport layer set skb-&gt;h.foo itself. */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> += <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a> >> 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_options_build\">ip_options_build</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>, <a class=\"id\" href=\"#rt\">rt</a>, 0);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_select_ident_more\">ip_select_ident_more</a>(<a class=\"id\" href=\"#iph\">iph</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_segs\">gso_segs</a> ?: 1) - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#priority\">priority</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_priority\">sk_priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#ip_local_out\">ip_local_out</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<a class=\"id\" href=\"#no_route\">no_route</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTNOROUTES\">IPSTATS_MIB_OUTNOROUTES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EHOSTUNREACH\">EHOSTUNREACH</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ip_queue_xmit\">ip_queue_xmit</a>);", 
"", 
"", 
"static void <a class=\"id\" href=\"#ip_copy_metadata\">ip_copy_metadata</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#to\">to</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#from\">from</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#priority\">priority</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#priority\">priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_drop\">skb_dst_drop</a>(<a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_copy\">skb_dst_copy</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#from\">from</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#mark\">mark</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy the flags to each fragment. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#to\">to</a>)-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#from\">from</a>)-><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_SCHED\">CONFIG_NET_SCHED</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#tc_index\">tc_index</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#tc_index\">tc_index</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_copy\">nf_copy</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#from\">from</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NETFILTER_XT_TARGET_TRACE\">CONFIG_NETFILTER_XT_TARGET_TRACE</a>) || \\", 
"    <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NETFILTER_XT_TARGET_TRACE_MODULE\">CONFIG_NETFILTER_XT_TARGET_TRACE_MODULE</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#nf_trace\">nf_trace</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#nf_trace\">nf_trace</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IP_VS\">CONFIG_IP_VS</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IP_VS_MODULE\">CONFIG_IP_VS_MODULE</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#ipvs_property\">ipvs_property</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#ipvs_property\">ipvs_property</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_copy_secmark\">skb_copy_secmark</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#from\">from</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This IP datagram is too large to be sent in one piece.  Break it up into</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>smaller pieces (each of size equal to IP header plus</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a block of the data of the original IP data part) that will yet fit in a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>single device frame, and queue such a frame for sending.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ip_fragment\">ip_fragment</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int (*<a class=\"id\" href=\"#output\">output</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb2\">skb2</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mtu\">mtu</a>, <a class=\"id\" href=\"#hlen\">hlen</a>, <a class=\"id\" href=\"#left\">left</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#ll_rs\">ll_rs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#not_last_frag\">not_last_frag</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Point into the IP datagram header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> &amp; <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_DF\">IP_DF</a>)) && !<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#local_df\">local_df</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmp_send\">icmp_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMP_DEST_UNREACH\">ICMP_DEST_UNREACH</a>, <a class=\"id\" href=\"#ICMP_FRAG_NEEDED\">ICMP_FRAG_NEEDED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#ip_skb_dst_mtu\">ip_skb_dst_mtu</a>(<a class=\"id\" href=\"#skb\">skb</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Setup starting values.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlen\">hlen</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> * 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>) - <a class=\"id\" href=\"#hlen\">hlen</a>;<span class=\"ts\"/><span class=\"comment\">/* Size of data space */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BRIDGE_NETFILTER\">CONFIG_BRIDGE_NETFILTER</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> -= <a class=\"id\" href=\"#nf_bridge_mtu_reduction\">nf_bridge_mtu_reduction</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IPSKB_FRAG_COMPLETE\">IPSKB_FRAG_COMPLETE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* When frag_list is given, use it. First, check its validity:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * some transformers could create wrong frag_list or break existing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one, it is not prohibited. In this case fall back to copying.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * LATER: this step can be merged to real generation of fragments,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we can switch to copy when see the first bad fragment.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_has_frags\">skb_has_frags</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#frag\">frag</a>, *<a class=\"id\" href=\"#frag2\">frag2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#first_len\">first_len</a> = <a class=\"id\" href=\"#skb_pagelen\">skb_pagelen</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#first_len\">first_len</a> - <a class=\"id\" href=\"#hlen\">hlen</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#first_len\">first_len</a> - <a class=\"id\" href=\"#hlen\">hlen</a>) &amp; 7) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> &amp; <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_MF\">IP_MF</a>|<a class=\"id\" href=\"#IP_OFFSET\">IP_OFFSET</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb_cloned\">skb_cloned</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#slow_path\">slow_path</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_walk_frags\">skb_walk_frags</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#frag\">frag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Correct geometry. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#len\">len</a> &amp; 7) && <a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#next\">next</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#frag\">frag</a>) &lt; <a class=\"id\" href=\"#hlen\">hlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#slow_path_clean\">slow_path_clean</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Partially cloned skb? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_shared\">skb_shared</a>(<a class=\"id\" href=\"#frag\">frag</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#slow_path_clean\">slow_path_clean</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#destructor\">destructor</a> = <a class=\"id\" href=\"#sock_wfree\">sock_wfree</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> -= <a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Everything is OK. Generate! */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frag_list\">frag_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_frag_list_init\">skb_frag_list_init</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> = <a class=\"id\" href=\"#first_len\">first_len</a> - <a class=\"id\" href=\"#skb_headlen\">skb_headlen</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#first_len\">first_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#first_len\">first_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_MF\">IP_MF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_send_check\">ip_send_check</a>(<a class=\"id\" href=\"#iph\">iph</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Prepare header of the next frame,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * before previous one went down. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frag\">frag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_push\">__skb_push</a>(<a class=\"id\" href=\"#frag\">frag</a>, <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#frag\">frag</a>), <a class=\"id\" href=\"#iph\">iph</a>, <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_copy_metadata\">ip_copy_metadata</a>(<a class=\"id\" href=\"#frag\">frag</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_options_fragment\">ip_options_fragment</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#hlen\">hlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#offset\">offset</a>>>3);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> |= <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_MF\">IP_MF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ready, complete checksum */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_send_check\">ip_send_check</a>(<a class=\"id\" href=\"#iph\">iph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#output\">output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGCREATES\">IPSTATS_MIB_FRAGCREATES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> || !<a class=\"id\" href=\"#frag\">frag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#frag\">frag</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGOKS\">IPSTATS_MIB_FRAGOKS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#frag\">frag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#slow_path_clean\">slow_path_clean</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_walk_frags\">skb_walk_frags</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#frag2\">frag2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frag2\">frag2</a> == <a class=\"id\" href=\"#frag\">frag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag2\">frag2</a>-><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag2\">frag2</a>-><a class=\"id\" href=\"#destructor\">destructor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#frag2\">frag2</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#slow_path\">slow_path</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#hlen\">hlen</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Space per frame */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#hlen\">hlen</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Where to start from */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* for bridged IP traffic encapsulated inside f.e. a vlan header,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we need to make room for the encapsulating header</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ll_rs\">ll_rs</a> = <a class=\"id\" href=\"#LL_RESERVED_SPACE_EXTRA\">LL_RESERVED_SPACE_EXTRA</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#nf_bridge_pad\">nf_bridge_pad</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Fragment the datagram.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a>) &amp; <a class=\"id\" href=\"#IP_OFFSET\">IP_OFFSET</a>) << 3;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#not_last_frag\">not_last_frag</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> &amp; <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_MF\">IP_MF</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Keep copying data until we run out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#left\">left</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IF: it doesn't fit, use 'mtu' - the data space left */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IF: we are not sending upto and including the packet end</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   then align the next start on an eight byte boundary */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#left\">left</a>)<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> &= ~7;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Allocate buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#alloc_skb\">alloc_skb</a>(<a class=\"id\" href=\"#len\">len</a>+<a class=\"id\" href=\"#hlen\">hlen</a>+<a class=\"id\" href=\"#ll_rs\">ll_rs</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NETDEBUG\">NETDEBUG</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"IP: frag: no memory for new fragment!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Set up data on packet</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_copy_metadata\">ip_copy_metadata</a>(<a class=\"id\" href=\"#skb2\">skb2</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb2\">skb2</a>, <a class=\"id\" href=\"#ll_rs\">ll_rs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb2\">skb2</a>, <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb2\">skb2</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = <a class=\"id\" href=\"#skb2\">skb2</a>-><a class=\"id\" href=\"#network_header\">network_header</a> + <a class=\"id\" href=\"#hlen\">hlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Charge the memory for the fragment to any owner</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>it might possess</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_w\">skb_set_owner_w</a>(<a class=\"id\" href=\"#skb2\">skb2</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Copy the packet header into the new buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_copy_from_linear_data\">skb_copy_from_linear_data</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb2\">skb2</a>), <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Copy a block of the IP datagram.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_copy_bits\">skb_copy_bits</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb2\">skb2</a>), <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Fill in the new header fields.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>((<a class=\"id\" href=\"#offset\">offset</a> >> 3));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ANK: dirty, but effective trick. Upgrade options only if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the segment to be fragmented was THE FIRST (otherwise,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * options are already fixed) and make it ONCE</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * on the initial skb, so that all the following fragments</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * will inherit fixed options.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_options_fragment\">ip_options_fragment</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Added AC : If we are fragmenting a fragment that's not the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>   last fragment then keep MF on each bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#left\">left</a> &gt; 0 || <a class=\"id\" href=\"#not_last_frag\">not_last_frag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> |= <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_MF\">IP_MF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Put this fragment into the sending queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_send_check\">ip_send_check</a>(<a class=\"id\" href=\"#iph\">iph</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#output\">output</a>(<a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGCREATES\">IPSTATS_MIB_FRAGCREATES</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGOKS\">IPSTATS_MIB_FRAGOKS</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ip_fragment\">ip_fragment</a>);", 
"", 
"int", 
"<a class=\"id\" href=\"#ip_generic_getfrag\">ip_generic_getfrag</a>(void *<a class=\"id\" href=\"#from\">from</a>, char *<a class=\"id\" href=\"#to\">to</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#odd\">odd</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a> = <a class=\"id\" href=\"#from\">from</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcpy_fromiovecend\">memcpy_fromiovecend</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#len\">len</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#csum\">csum</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#csum_partial_copy_fromiovecend\">csum_partial_copy_fromiovecend</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#len\">len</a>, &amp;<a class=\"id\" href=\"#csum\">csum</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_block_add\">csum_block_add</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#odd\">odd</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ip_generic_getfrag\">ip_generic_getfrag</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__wsum\">__wsum</a>", 
"<a class=\"id\" href=\"#csum_page\">csum_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#copy\">copy</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#kaddr\">kaddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#csum\">csum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kaddr\">kaddr</a> = <a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#copy\">copy</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#csum\">csum</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_ufo_append_data\">ip_ufo_append_data</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#getfrag\">getfrag</a>(void *<a class=\"id\" href=\"#from\">from</a>, char *<a class=\"id\" href=\"#to\">to</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#odd\">odd</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#from\">from</a>, int <a class=\"id\" href=\"#length\">length</a>, int <a class=\"id\" href=\"#hh_len\">hh_len</a>, int <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>, int <a class=\"id\" href=\"#mtu\">mtu</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* There is support for UDP fragmentation offload by network</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * device, so create one single skb packet containing complete</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * udp datagram</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek_tail\">skb_peek_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_alloc_send_skb\">sock_alloc_send_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hh_len\">hh_len</a> + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> + <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> + 20,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>), &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reserve space for Hardware header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hh_len\">hh_len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* create space for UDP/IP header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> + <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* initialize network header pointer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* initialize protocol header pointer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* specify the length of each IP datagram fragment */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> = <a class=\"id\" href=\"#mtu\">mtu</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb_append_datato_frags\">skb_append_datato_frags</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#getfrag\">getfrag</a>, <a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#length\">length</a> - <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ip_append_data() and ip_append_page() can make one large IP datagram</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>from many pieces of data. Each pieces will be holded on the socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>until ip_push_pending_frames() is called. Each piece can be a page</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>or non-page data.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Not only UDP, other transport protocols - e.g. raw sockets - can use</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>this interface potentially.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LATER: length must be adjusted by pad at tail, when it is required.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ip_append_data\">ip_append_data</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#getfrag\">getfrag</a>(void *<a class=\"id\" href=\"#from\">from</a>, char *<a class=\"id\" href=\"#to\">to</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#odd\">odd</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#from\">from</a>, int <a class=\"id\" href=\"#length\">length</a>, int <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ipcm_cookie\">ipcm_cookie</a> *<a class=\"id\" href=\"#ipc\">ipc</a>, struct <a class=\"id\" href=\"#rtable\">rtable</a> **<a class=\"id\" href=\"#rtp\">rtp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hh_len\">hh_len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>, <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#csummode\">csummode</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#MSG_PROBE\">MSG_PROBE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * setup for corking.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#ipc\">ipc</a>-><a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#ip_options\">ip_options</a>) + 40, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#opt\">opt</a>, sizeof(struct <a class=\"id\" href=\"#ip_options\">ip_options</a>)+<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IPCORK_OPT\">IPCORK_OPT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ipc\">ipc</a>-><a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = *<a class=\"id\" href=\"#rtp\">rtp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#rt\">rt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We steal reference to this route, caller should not release it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rtp\">rtp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fragsize\">fragsize</a> = <a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> == <a class=\"id\" href=\"#IP_PMTUDISC_PROBE\">IP_PMTUDISC_PROBE</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a> = &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#exthdrlen\">exthdrlen</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#header_len\">header_len</a>) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> += <a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rtable\">rtable</a> *)<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPCORK_OPT\">IPCORK_OPT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exthdrlen\">exthdrlen</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fragsize\">fragsize</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hh_len\">hh_len</a> = <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> = sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>) + (<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a> : 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#maxfraglen\">maxfraglen</a> = ((<a class=\"id\" href=\"#mtu\">mtu</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>) &amp; ~7) + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#length\">length</a> &gt; 0xFFFF - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_local_error\">ip_local_error</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mtu\">mtu</a>-<a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transhdrlen &gt; 0 means that this is the first fragment and we wish</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it won't be fragmented in the future.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> <= <a class=\"id\" href=\"#mtu\">mtu</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> &amp; <a class=\"id\" href=\"#NETIF_F_V4_CSUM\">NETIF_F_V4_CSUM</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#csummode\">csummode</a> = <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek_tail\">skb_peek_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>if (((<a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a>) || (<a class=\"id\" href=\"#skb\">skb</a> && <a class=\"id\" href=\"#skb_is_gso\">skb_is_gso</a>(<a class=\"id\" href=\"#skb\">skb</a>))) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a> == <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> &amp; <a class=\"id\" href=\"#NETIF_F_UFO\">NETIF_F_UFO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_ufo_append_data\">ip_ufo_append_data</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#getfrag\">getfrag</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#hh_len\">hh_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>, <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>, <a class=\"id\" href=\"#mtu\">mtu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* So, what's going on in the loop below?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We use calculated fragment length to generate chained skb,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * each of segments is IP fragment ready for sending to network after</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * adding appropriate IP header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#alloc_new_skb\">alloc_new_skb</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#length\">length</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if the remaining data fits into current packet. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#mtu\">mtu</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &lt; <a class=\"id\" href=\"#length\">length</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#datalen\">datalen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#fraglen\">fraglen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#alloclen\">alloclen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb_prev\">skb_prev</a>;", 
"<a class=\"id\" href=\"#alloc_new_skb\">alloc_new_skb</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_prev\">skb_prev</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_prev\">skb_prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fraggap\">fraggap</a> = <a class=\"id\" href=\"#skb_prev\">skb_prev</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fraggap\">fraggap</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If remaining data exceeds the mtu,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we know we need more fragment(s).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datalen\">datalen</a> = <a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#datalen\">datalen</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datalen\">datalen</a> = <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fraglen\">fraglen</a> = <a class=\"id\" href=\"#datalen\">datalen</a> + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_MORE\">MSG_MORE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>&amp;<a class=\"id\" href=\"#NETIF_F_SG\">NETIF_F_SG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> = <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> = <a class=\"id\" href=\"#datalen\">datalen</a> + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The last fragment gets additional space at tail.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note, with MSG_MORE we overallocate on fragments,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * because we have no idea what fragment will be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the last.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#datalen\">datalen</a> == <a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#fraggap\">fraggap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> += <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#trailer_len\">trailer_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_alloc_send_skb\">sock_alloc_send_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> + <a class=\"id\" href=\"#hh_len\">hh_len</a> + 15,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>), &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>) <=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    2 * <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_wmalloc\">sock_wmalloc</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#alloclen\">alloclen</a> + <a class=\"id\" href=\"#hh_len\">hh_len</a> + 15, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only the initial fragment is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   time stamped */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipc\">ipc</a>-><a class=\"id\" href=\"#shtx\">shtx</a>.<a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Fill in the control structures</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#csummode\">csummode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hh_len\">hh_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#skb_tx\">skb_tx</a>(<a class=\"id\" href=\"#skb\">skb</a>) = <a class=\"id\" href=\"#ipc\">ipc</a>-><a class=\"id\" href=\"#shtx\">shtx</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Find where to start putting bytes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#fraglen\">fraglen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_network_header\">skb_set_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fraggap\">fraggap</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#skb_copy_and_csum_bits\">skb_copy_and_csum_bits</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_prev\">skb_prev</a>, <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>, <a class=\"id\" href=\"#fraggap\">fraggap</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_prev\">skb_prev</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_sub\">csum_sub</a>(<a class=\"id\" href=\"#skb_prev\">skb_prev</a>-><a class=\"id\" href=\"#csum\">csum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pskb_trim_unique\">pskb_trim_unique</a>(<a class=\"id\" href=\"#skb_prev\">skb_prev</a>, <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#datalen\">datalen</a> - <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> - <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &gt; 0 && <a class=\"id\" href=\"#getfrag\">getfrag</a>(<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#fraggap\">fraggap</a>, <a class=\"id\" href=\"#skb\">skb</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> -= <a class=\"id\" href=\"#datalen\">datalen</a> - <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exthdrlen\">exthdrlen</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#csummode\">csummode</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Put the packet on the pending queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &gt; <a class=\"id\" href=\"#length\">length</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>&amp;<a class=\"id\" href=\"#NETIF_F_SG\">NETIF_F_SG</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#off\">off</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#getfrag\">getfrag</a>(<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#copy\">copy</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#skb\">skb</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_trim\">__skb_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_frag_t\">skb_frag_t</a> *<a class=\"id\" href=\"#frag\">frag</a> = &amp;<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>-1];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#left\">left</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a> && (<a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#off\">off</a>) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> >= <a class=\"id\" href=\"#left\">left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a> != <a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_page\">get_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_fill_page_desc\">skb_fill_page_desc</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = &amp;<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#alloc_pages\">alloc_pages</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)  {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_fill_page_desc\">skb_fill_page_desc</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#page\">page</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = &amp;<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#getfrag\">getfrag</a>(<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#page\">page</a>)+<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#page_offset\">page_offset</a>+<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#skb\">skb</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#copy\">copy</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> -= <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> -= <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ip_append_page\">ip_append_page</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hh_len\">hh_len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>, <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>, <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#hdrincl\">hdrincl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#MSG_PROBE\">MSG_PROBE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rtable\">rtable</a> *)<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPCORK_OPT\">IPCORK_OPT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>&amp;<a class=\"id\" href=\"#NETIF_F_SG\">NETIF_F_SG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hh_len\">hh_len</a> = <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fragsize\">fragsize</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> = sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>) + (<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a> : 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#maxfraglen\">maxfraglen</a> = ((<a class=\"id\" href=\"#mtu\">mtu</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>) &amp; ~7) + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#size\">size</a> &gt; 0xFFFF - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_local_error\">ip_local_error</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>, <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek_tail\">skb_peek_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#size\">size</a> + <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a> == <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> &amp; <a class=\"id\" href=\"#NETIF_F_UFO\">NETIF_F_UFO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> = <a class=\"id\" href=\"#mtu\">mtu</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a>;", 
"<span class=\"ts\"/>}", 
"", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#size\">size</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_is_gso\">skb_is_gso</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if the remaining data fits into current packet. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#mtu\">mtu</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb_prev\">skb_prev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#alloclen\">alloclen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_prev\">skb_prev</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fraggap\">fraggap</a> = <a class=\"id\" href=\"#skb_prev\">skb_prev</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> = <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> + <a class=\"id\" href=\"#hh_len\">hh_len</a> + <a class=\"id\" href=\"#fraggap\">fraggap</a> + 15;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_wmalloc\">sock_wmalloc</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#alloclen\">alloclen</a>, 1, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Fill in the control structures</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hh_len\">hh_len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Find where to start putting bytes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> + <a class=\"id\" href=\"#fraggap\">fraggap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fraggap\">fraggap</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#skb_copy_and_csum_bits\">skb_copy_and_csum_bits</a>(<a class=\"id\" href=\"#skb_prev\">skb_prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#fraggap\">fraggap</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_prev\">skb_prev</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_sub\">csum_sub</a>(<a class=\"id\" href=\"#skb_prev\">skb_prev</a>-><a class=\"id\" href=\"#csum\">csum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pskb_trim_unique\">pskb_trim_unique</a>(<a class=\"id\" href=\"#skb_prev\">skb_prev</a>, <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Put the packet on the pending queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_can_coalesce\">skb_can_coalesce</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#offset\">offset</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>-1].<a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_page\">get_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_fill_page_desc\">skb_fill_page_desc</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#csum\">csum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_page\">csum_page</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_block_add\">csum_block_add</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#len\">len</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> -= <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ip_cork_release\">ip_cork_release</a>(struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IPCORK_OPT\">IPCORK_OPT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Combined all pending IP fragments on the socket as one IP datagram</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and push them out.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ip_push_pending_frames\">ip_push_pending_frames</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, *<a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#tail_skb\">tail_skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rtable\">rtable</a> *)<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#df\">df</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#ttl\">ttl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#__skb_dequeue\">__skb_dequeue</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tail_skb\">tail_skb</a> = &amp;(<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frag_list\">frag_list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* move skb-&gt;data to ip header from ext header */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a> &lt; <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#tmp_skb\">tmp_skb</a> = <a class=\"id\" href=\"#__skb_dequeue\">__skb_dequeue</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>, <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tail_skb\">tail_skb</a> = <a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail_skb\">tail_skb</a> = &amp;(<a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> += <a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#destructor\">destructor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Unless user demanded real pmtu discovery (IP_PMTUDISC_DO), we allow</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to fragment the frame generated here. No matter, what transforms</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * how transforms change size of the packet, it will come out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> &lt; <a class=\"id\" href=\"#IP_PMTUDISC_DO\">IP_PMTUDISC_DO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#local_df\">local_df</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* DF bit is set when we want to see DF on outgoing frames.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If local_df is set too, we still allow to fragment this frame</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * locally. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> >= <a class=\"id\" href=\"#IP_PMTUDISC_DO\">IP_PMTUDISC_DO</a> ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>) &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#ip_dont_fragment\">ip_dont_fragment</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#df\">df</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_DF\">IP_DF</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPCORK_OPT\">IPCORK_OPT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_type\">rt_type</a> == <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ttl\">ttl</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_ttl\">mc_ttl</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ttl\">ttl</a> = <a class=\"id\" href=\"#ip_select_ttl\">ip_select_ttl</a>(<a class=\"id\" href=\"#inet\">inet</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = (struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *)<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#version\">version</a> = 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> = 5;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> += <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a>>>2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_options_build\">ip_options_build</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#rt\">rt</a>, 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#tos\">tos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#df\">df</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_select_ident\">ip_select_ident</a>(<a class=\"id\" href=\"#iph\">iph</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ttl\">ttl</a> = <a class=\"id\" href=\"#ttl\">ttl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_src\">rt_src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#priority\">priority</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_priority\">sk_priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Steal rt from cork.dst to avoid a pair of atomic_inc/atomic_dec</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on dst refcount</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set\">skb_dst_set</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#IPPROTO_ICMP\">IPPROTO_ICMP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmp_out_count\">icmp_out_count</a>(<a class=\"id\" href=\"#net\">net</a>, ((struct <a class=\"id\" href=\"#icmphdr\">icmphdr</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>))-><a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Netfilter gets whole the not fragmented skb. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_local_out\">ip_local_out</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#net_xmit_errno\">net_xmit_errno</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_cork_release\">ip_cork_release</a>(<a class=\"id\" href=\"#inet\">inet</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS\">IP_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Throw away all pending data on the socket.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ip_flush_pending_frames\">ip_flush_pending_frames</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#__skb_dequeue_tail\">__skb_dequeue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_cork_release\">ip_cork_release</a>(<a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fetch data from kernel space and fill in checksum if needed.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ip_reply_glue_bits\">ip_reply_glue_bits</a>(void *<a class=\"id\" href=\"#dptr\">dptr</a>, char *<a class=\"id\" href=\"#to\">to</a>, int <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#odd\">odd</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#csum\">csum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_partial_copy_nocheck\">csum_partial_copy_nocheck</a>(<a class=\"id\" href=\"#dptr\">dptr</a>+<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#len\">len</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_block_add\">csum_block_add</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#odd\">odd</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generic function to send a packet as reply to another packet.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Used to send TCP resets so far. ICMP should use this function too.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Should run single threaded per socket because it uses the sock</span>", 
"<span class=\"comment\"> *     <span class=\"ts\"/>structure to pass arguments.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ip_send_reply\">ip_send_reply</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#ip_reply_arg\">ip_reply_arg</a> *<a class=\"id\" href=\"#arg\">arg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>[40];", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#replyopts\">replyopts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipcm_cookie\">ipcm_cookie</a> <a class=\"id\" href=\"#ipc\">ipc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_options_echo\">ip_options_echo</a>(&amp;<a class=\"id\" href=\"#replyopts\">replyopts</a>.<a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_src\">rt_src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#shtx\">shtx</a>.<a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#replyopts\">replyopts</a>.<a class=\"id\" href=\"#opt\">opt</a>.<a class=\"id\" href=\"#optlen\">optlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#opt\">opt</a> = &amp;<a class=\"id\" href=\"#replyopts\">replyopts</a>.<a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srr\">srr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#replyopts\">replyopts</a>.<a class=\"id\" href=\"#opt\">opt</a>.<a class=\"id\" href=\"#faddr\">faddr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = { .<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#bound_dev_if\">bound_dev_if</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#nl_u\">nl_u</a> = { .<a class=\"id\" href=\"#ip4_u\">ip4_u</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      { .<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_spec_dst\">rt_spec_dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#RT_TOS\">RT_TOS</a>(<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#tos\">tos</a>) } },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* Not quite clean, but right. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#uli_u\">uli_u</a> = { .<a class=\"id\" href=\"#ports\">ports</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       { .<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dest\">dest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> .<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#source\">source</a> } },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ip_reply_arg_flowi_flags\">ip_reply_arg_flowi_flags</a>(<a class=\"id\" href=\"#arg\">arg</a>) };", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_skb_classify_flow\">security_skb_classify_flow</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_route_output_key\">ip_route_output_key</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* And let IP do all the hard work.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   This chunk is not reenterable, hence spinlock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Note that it uses the fact, that this function is called</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   with locally disabled BH and that sk cannot be already spinlocked.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_lock_sock\">bh_lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#tos\">tos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_priority\">sk_priority</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#priority\">priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#bound_dev_if\">bound_dev_if</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_append_data\">ip_append_data</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ip_reply_glue_bits\">ip_reply_glue_bits</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#iov\">iov</a>-><a class=\"id\" href=\"#iov_base\">iov_base</a>, <a class=\"id\" href=\"#len\">len</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#ipc\">ipc</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek\">skb_peek</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#csumoffset\">csumoffset</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*((<a class=\"id\" href=\"#__sum16\">__sum16</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#csumoffset\">csumoffset</a>) = <a class=\"id\" href=\"#csum_fold\">csum_fold</a>(<a class=\"id\" href=\"#csum_add\">csum_add</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#csum\">csum</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_push_pending_frames\">ip_push_pending_frames</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_unlock_sock\">bh_unlock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ip_init\">ip_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_init\">ip_rt_init</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_initpeers\">inet_initpeers</a>();", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IP_MULTICAST\">CONFIG_IP_MULTICAST</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#igmp_mc_proc_init\">igmp_mc_proc_init</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
];
xr_frag_insert('l/99/5dda73370e29a2b197139eb8075ca5cfe8e7a2.xr', __xr_tmp);
