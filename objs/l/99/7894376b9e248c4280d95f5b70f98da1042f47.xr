var __xr_tmp = [
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * acct_auto_close - turn off a filesystem's accounting if it is on</span>", 
"<span class=\"comment\"> * @m: vfsmount being shut down</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the accounting is turned on for a file in the subtree pointed to</span>", 
"<span class=\"comment\"> * to by m, turn accounting off.  Done when m is about to die.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#acct_auto_close_mnt\">acct_auto_close_mnt</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<a class=\"id\" href=\"#restart\">restart</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#acct\">acct</a>, &amp;<a class=\"id\" href=\"#acct_list\">acct_list</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a> && <a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#mnt\">mnt</a> == <a class=\"id\" href=\"#m\">m</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct_file_reopen\">acct_file_reopen</a>(<a class=\"id\" href=\"#acct\">acct</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * acct_auto_close - turn off a filesystem's accounting if it is on</span>", 
"<span class=\"comment\"> * @sb: super block for the filesystem</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the accounting is turned on for a file in the filesystem pointed</span>", 
"<span class=\"comment\"> * to by sb, turn accounting off.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#acct_auto_close\">acct_auto_close</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<a class=\"id\" href=\"#restart\">restart</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#acct\">acct</a>, &amp;<a class=\"id\" href=\"#acct_list\">acct_list</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a> && <a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_sb\">mnt_sb</a> == <a class=\"id\" href=\"#sb\">sb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct_file_reopen\">acct_file_reopen</a>(<a class=\"id\" href=\"#acct\">acct</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#acct_exit_ns\">acct_exit_ns</a>(struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a> = <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#bacct\">bacct</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acct\">acct</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_timer_sync\">del_timer_sync</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct_file_reopen\">acct_file_reopen</a>(<a class=\"id\" href=\"#acct\">acct</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#acct\">acct</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  encode an unsigned long into a comp_t</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This routine has been adopted from the encode_comp_t() function in</span>", 
"<span class=\"comment\"> *  the kern_acct.c file of the FreeBSD operating system. The encoding</span>", 
"<span class=\"comment\"> *  is a 13-bit fraction with a 3-bit (base 8) exponent.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#MANTSIZE\">MANTSIZE</a><span class=\"ts\"/>13<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 13 bit mantissa. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXPSIZE\">EXPSIZE</a><span class=\"ts\"/><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Base 8 (3 bit) exponent. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#MAXFRACT\">MAXFRACT</a><span class=\"ts\"/>((1 << <a class=\"id\" href=\"#MANTSIZE\">MANTSIZE</a>) - 1)<span class=\"ts\"/><span class=\"comment\">/* Maximum fractional value. */</span>", 
"", 
"static <a class=\"id\" href=\"#comp_t\">comp_t</a> <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(unsigned long <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#rnd\">rnd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exp\">exp</a> = <a class=\"id\" href=\"#rnd\">rnd</a> = 0;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#MAXFRACT\">MAXFRACT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rnd\">rnd</a> = <a class=\"id\" href=\"#value\">value</a> &amp; (1 << (<a class=\"id\" href=\"#EXPSIZE\">EXPSIZE</a> - 1));<span class=\"ts\"/><span class=\"comment\">/* Round up? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> >>= <a class=\"id\" href=\"#EXPSIZE\">EXPSIZE</a>;<span class=\"ts\"/><span class=\"comment\">/* Base 8 exponent == 3 bit shift. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exp\">exp</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we need to round up, do it (and handle overflow correctly).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rnd\">rnd</a> && (++<a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#MAXFRACT\">MAXFRACT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> >>= <a class=\"id\" href=\"#EXPSIZE\">EXPSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exp\">exp</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Clean it up and polish it off.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exp\">exp</a> <<= <a class=\"id\" href=\"#MANTSIZE\">MANTSIZE</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Shift the exponent into place */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exp\">exp</a> += <a class=\"id\" href=\"#value\">value</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* and add on the mantissa. */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#exp\">exp</a>;", 
"}", 
"", 
"#if <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==1 || <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==2", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * encode an u64 into a comp2_t (24 bits)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Format: 5 bit base 2 exponent, 20 bits mantissa.</span>", 
"<span class=\"comment\"> * The leading bit of the mantissa is not stored, but implied for</span>", 
"<span class=\"comment\"> * non-zero exponents.</span>", 
"<span class=\"comment\"> * Largest encodable value is 50 bits.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MANTSIZE2\">MANTSIZE2</a>       20                      <span class=\"comment\">/* 20 bit mantissa. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXPSIZE2\">EXPSIZE2</a>        5                       <span class=\"comment\">/* 5 bit base 2 exponent. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAXFRACT2\">MAXFRACT2</a>       ((1ul << <a class=\"id\" href=\"#MANTSIZE2\">MANTSIZE2</a>) - 1) <span class=\"comment\">/* Maximum fractional value. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAXEXP2\">MAXEXP2</a>         ((1 <<<a class=\"id\" href=\"#EXPSIZE2\">EXPSIZE2</a>) - 1)    <span class=\"comment\">/* Maximum exponent. */</span>", 
"", 
"static <a class=\"id\" href=\"#comp2_t\">comp2_t</a> <a class=\"id\" href=\"#encode_comp2_t\">encode_comp2_t</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#rnd\">rnd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exp\">exp</a> = (<a class=\"id\" href=\"#value\">value</a> &gt; (<a class=\"id\" href=\"#MAXFRACT2\">MAXFRACT2</a>>>1));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rnd\">rnd</a> = 0;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#MAXFRACT2\">MAXFRACT2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rnd\">rnd</a> = <a class=\"id\" href=\"#value\">value</a> &amp; 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> >>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exp\">exp</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we need to round up, do it (and handle overflow correctly).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rnd\">rnd</a> && (++<a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#MAXFRACT2\">MAXFRACT2</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> >>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exp\">exp</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#exp\">exp</a> &gt; <a class=\"id\" href=\"#MAXEXP2\">MAXEXP2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Overflow. Return largest representable number instead. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return (1ul << (<a class=\"id\" href=\"#MANTSIZE2\">MANTSIZE2</a>+<a class=\"id\" href=\"#EXPSIZE2\">EXPSIZE2</a>-1)) - 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#value\">value</a> &amp; (<a class=\"id\" href=\"#MAXFRACT2\">MAXFRACT2</a>>>1)) | (<a class=\"id\" href=\"#exp\">exp</a> << (<a class=\"id\" href=\"#MANTSIZE2\">MANTSIZE2</a>-1));", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==3", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * encode an u64 into a 32 bit IEEE float</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#encode_float\">encode_float</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#exp\">exp</a> = 190;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#u\">u</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a>==0) return 0;", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#s64\">s64</a>)<a class=\"id\" href=\"#value\">value</a> &gt; 0){", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> <<= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exp\">exp</a>--;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> = (<a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#value\">value</a> >> 40) &amp; 0x7fffffu;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#u\">u</a> | (<a class=\"id\" href=\"#exp\">exp</a> << 23);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Write an accounting entry for an exiting process</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  The acct_process() call is the workhorse of the process</span>", 
"<span class=\"comment\"> *  accounting system. The struct acct is built here and then written</span>", 
"<span class=\"comment\"> *  into the accounting file. This function should only be called from</span>", 
"<span class=\"comment\"> *  do_exit() or when switching to a different output file.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  do_acct_process does all actual work. Caller holds the reference to file.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#do_acct_process\">do_acct_process</a>(struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pacct_struct\">pacct_struct</a> *<a class=\"id\" href=\"#pacct\">pacct</a> = &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#pacct\">pacct</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acct_t\">acct_t</a> <a class=\"id\" href=\"#ac\">ac</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_segment_t\">mm_segment_t</a> <a class=\"id\" href=\"#fs\">fs</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flim\">flim</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#elapsed\">elapsed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#run_time\">run_time</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#uptime\">uptime</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#orig_cred\">orig_cred</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Perform file operations on behalf of whoever enabled accounting */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#orig_cred\">orig_cred</a> = <a class=\"id\" href=\"#override_creds\">override_creds</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_cred\">f_cred</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First check to see if there is enough free_space to continue</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the process accounting system.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#check_free_space\">check_free_space</a>(<a class=\"id\" href=\"#acct\">acct</a>, <a class=\"id\" href=\"#file\">file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fill the accounting struct with the needed info as recorded</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by the different kernel functions.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((<a class=\"id\" href=\"#caddr_t\">caddr_t</a>)&amp;<a class=\"id\" href=\"#ac\">ac</a>, 0, sizeof(<a class=\"id\" href=\"#acct_t\">acct_t</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_version\">ac_version</a> = <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a> | <a class=\"id\" href=\"#ACCT_BYTEORDER\">ACCT_BYTEORDER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_comm\">ac_comm</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>, sizeof(<a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_comm\">ac_comm</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* calculate run_time in nsec*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_posix_clock_monotonic_gettime\">do_posix_clock_monotonic_gettime</a>(&amp;<a class=\"id\" href=\"#uptime\">uptime</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#run_time\">run_time</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#uptime\">uptime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>*<a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a> + <a class=\"id\" href=\"#uptime\">uptime</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#run_time\">run_time</a> -= (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#group_leader\">group_leader</a>-><a class=\"id\" href=\"#start_time\">start_time</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> * <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       + <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#group_leader\">group_leader</a>-><a class=\"id\" href=\"#start_time\">start_time</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* convert nsec -&gt; AHZ */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elapsed\">elapsed</a> = <a class=\"id\" href=\"#nsec_to_AHZ\">nsec_to_AHZ</a>(<a class=\"id\" href=\"#run_time\">run_time</a>);", 
"#if <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==3", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_etime\">ac_etime</a> = <a class=\"id\" href=\"#encode_float\">encode_float</a>(<a class=\"id\" href=\"#elapsed\">elapsed</a>);", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_etime\">ac_etime</a> = <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(<a class=\"id\" href=\"#elapsed\">elapsed</a> &lt; (unsigned long) -1l ?", 
"<span class=\"ts\"/>                       (unsigned long) <a class=\"id\" href=\"#elapsed\">elapsed</a> : (unsigned long) -1l);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==1 || <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==2", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* new enlarged etime field */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#comp2_t\">comp2_t</a> <a class=\"id\" href=\"#etime\">etime</a> = <a class=\"id\" href=\"#encode_comp2_t\">encode_comp2_t</a>(<a class=\"id\" href=\"#elapsed\">elapsed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_etime_hi\">ac_etime_hi</a> = <a class=\"id\" href=\"#etime\">etime</a> >> 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_etime_lo\">ac_etime_lo</a> = (<a class=\"id\" href=\"#u16\">u16</a>) <a class=\"id\" href=\"#etime\">etime</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#elapsed\">elapsed</a>, <a class=\"id\" href=\"#AHZ\">AHZ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_btime\">ac_btime</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>() - <a class=\"id\" href=\"#elapsed\">elapsed</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* we really need to bite the bullet and change layout */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_uid\">ac_uid</a> = <a class=\"id\" href=\"#orig_cred\">orig_cred</a>-><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_gid\">ac_gid</a> = <a class=\"id\" href=\"#orig_cred\">orig_cred</a>-><a class=\"id\" href=\"#gid\">gid</a>;", 
"#if <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==2", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_ahz\">ac_ahz</a> = <a class=\"id\" href=\"#AHZ\">AHZ</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==1 || <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==2", 
"<span class=\"ts\"/><span class=\"comment\">/* backward-compatible 16 bit fields */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_uid16\">ac_uid16</a> = <a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_uid\">ac_uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_gid16\">ac_gid16</a> = <a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_gid\">ac_gid</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#ACCT_VERSION\">ACCT_VERSION</a>==3", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_pid\">ac_pid</a> = <a class=\"id\" href=\"#task_tgid_nr_ns\">task_tgid_nr_ns</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_ppid\">ac_ppid</a> = <a class=\"id\" href=\"#task_tgid_nr_ns\">task_tgid_nr_ns</a>(<a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#real_parent\">real_parent</a>), <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a>;<span class=\"ts\"/><span class=\"comment\">/* Safe as we hold the siglock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_tty\">ac_tty</a> = <a class=\"id\" href=\"#tty\">tty</a> ? <a class=\"id\" href=\"#old_encode_dev\">old_encode_dev</a>(<a class=\"id\" href=\"#tty_devnum\">tty_devnum</a>(<a class=\"id\" href=\"#tty\">tty</a>)) : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_utime\">ac_utime</a> = <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(<a class=\"id\" href=\"#jiffies_to_AHZ\">jiffies_to_AHZ</a>(<a class=\"id\" href=\"#cputime_to_jiffies\">cputime_to_jiffies</a>(<a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_utime\">ac_utime</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_stime\">ac_stime</a> = <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(<a class=\"id\" href=\"#jiffies_to_AHZ\">jiffies_to_AHZ</a>(<a class=\"id\" href=\"#cputime_to_jiffies\">cputime_to_jiffies</a>(<a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_stime\">ac_stime</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_flag\">ac_flag</a> = <a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_flag\">ac_flag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_mem\">ac_mem</a> = <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(<a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_mem\">ac_mem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_minflt\">ac_minflt</a> = <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(<a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_minflt\">ac_minflt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_majflt\">ac_majflt</a> = <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(<a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_majflt\">ac_majflt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_exitcode\">ac_exitcode</a> = <a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_exitcode\">ac_exitcode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_io\">ac_io</a> = <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(0 <span class=\"comment\">/* current-&gt;io_usage */</span>);<span class=\"ts\"/><span class=\"comment\">/* %% */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_rw\">ac_rw</a> = <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(<a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_io\">ac_io</a> / 1024);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>.<a class=\"id\" href=\"#ac_swaps\">ac_swaps</a> = <a class=\"id\" href=\"#encode_comp_t\">encode_comp_t</a>(0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Kernel segment override to datasegment and write it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to the accounting file.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a> = <a class=\"id\" href=\"#get_fs\">get_fs</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#KERNEL_DS\">KERNEL_DS</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Accounting records are not subject to resource limits.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flim\">flim</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#rlim\">rlim</a>[<a class=\"id\" href=\"#RLIMIT_FSIZE\">RLIMIT_FSIZE</a>].<a class=\"id\" href=\"#rlim_cur\">rlim_cur</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#rlim\">rlim</a>[<a class=\"id\" href=\"#RLIMIT_FSIZE\">RLIMIT_FSIZE</a>].<a class=\"id\" href=\"#rlim_cur\">rlim_cur</a> = <a class=\"id\" href=\"#RLIM_INFINITY\">RLIM_INFINITY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#file\">file</a>, (char *)&amp;<a class=\"id\" href=\"#ac\">ac</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#acct_t\">acct_t</a>), &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#rlim\">rlim</a>[<a class=\"id\" href=\"#RLIMIT_FSIZE\">RLIMIT_FSIZE</a>].<a class=\"id\" href=\"#rlim_cur\">rlim_cur</a> = <a class=\"id\" href=\"#flim\">flim</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#fs\">fs</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#revert_creds\">revert_creds</a>(<a class=\"id\" href=\"#orig_cred\">orig_cred</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * acct_collect - collect accounting information into pacct_struct</span>", 
"<span class=\"comment\"> * @exitcode: task exit code</span>", 
"<span class=\"comment\"> * @group_dead: not 0, if this thread is the last one in the process.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#acct_collect\">acct_collect</a>(long <a class=\"id\" href=\"#exitcode\">exitcode</a>, int <a class=\"id\" href=\"#group_dead\">group_dead</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pacct_struct\">pacct_struct</a> *<a class=\"id\" href=\"#pacct\">pacct</a> = &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#pacct\">pacct</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vsize\">vsize</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group_dead\">group_dead</a> && <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap\">mmap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#vma\">vma</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vsize\">vsize</a> += <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group_dead\">group_dead</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_mem\">ac_mem</a> = <a class=\"id\" href=\"#vsize\">vsize</a> / 1024;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#thread_group_leader\">thread_group_leader</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_exitcode\">ac_exitcode</a> = <a class=\"id\" href=\"#exitcode\">exitcode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_FORKNOEXEC\">PF_FORKNOEXEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_flag\">ac_flag</a> |= <a class=\"id\" href=\"#AFORK\">AFORK</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_SUPERPRIV\">PF_SUPERPRIV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_flag\">ac_flag</a> |= <a class=\"id\" href=\"#ASU\">ASU</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_DUMPCORE\">PF_DUMPCORE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_flag\">ac_flag</a> |= <a class=\"id\" href=\"#ACORE\">ACORE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_SIGNALED\">PF_SIGNALED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_flag\">ac_flag</a> |= <a class=\"id\" href=\"#AXSIG\">AXSIG</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_utime\">ac_utime</a> = <a class=\"id\" href=\"#cputime_add\">cputime_add</a>(<a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_utime\">ac_utime</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#utime\">utime</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_stime\">ac_stime</a> = <a class=\"id\" href=\"#cputime_add\">cputime_add</a>(<a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_stime\">ac_stime</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#stime\">stime</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_minflt\">ac_minflt</a> += <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#min_flt\">min_flt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pacct\">pacct</a>-><a class=\"id\" href=\"#ac_majflt\">ac_majflt</a> += <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#maj_flt\">maj_flt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#acct_process_in_ns\">acct_process_in_ns</a>(struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a> = <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#bacct\">bacct</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * accelerate the common fastpath:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acct\">acct</a> || !<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#file\">file</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_file\">get_file</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_acct_process\">do_acct_process</a>(<a class=\"id\" href=\"#acct\">acct</a>, <a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * acct_process - now just a wrapper around acct_process_in_ns,</span>", 
"<span class=\"comment\"> * which in turn is a wrapper around do_acct_process.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * handles process accounting for an exiting task</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#acct_process\">acct_process</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This loop is safe lockless, since current is still</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * alive and holds its namespace, which in turn holds</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * its parent.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#task_active_pid_ns\">task_active_pid_ns</a>(<a class=\"id\" href=\"#current\">current</a>); <a class=\"id\" href=\"#ns\">ns</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct_process_in_ns\">acct_process_in_ns</a>(<a class=\"id\" href=\"#ns\">ns</a>);", 
"}", 
];
xr_frag_insert('l/99/7894376b9e248c4280d95f5b70f98da1042f47.xr', __xr_tmp);
