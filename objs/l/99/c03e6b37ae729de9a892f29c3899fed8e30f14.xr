var __xr_tmp = [
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Elements of acpi_gbl_ns_type_names below must match</span>", 
"<span class=\"comment\"> * one-to-one with values of acpi_object_type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The type ACPI_TYPE_ANY (Untyped) is used as a \"don't care\" when searching;</span>", 
"<span class=\"comment\"> * when stored in a table it really means that we have thus far seen no</span>", 
"<span class=\"comment\"> * evidence to indicate what type is actually going to be stored for this entry.</span>", 
"<span class=\"comment\"> */</span>", 
"static const char <a class=\"id\" href=\"#acpi_gbl_bad_type\">acpi_gbl_bad_type</a>[] = \"UNDEFINED\";", 
"", 
"<span class=\"comment\">/* Printable names of the ACPI object types */</span>", 
"", 
"static const char *<a class=\"id\" href=\"#acpi_gbl_ns_type_names\">acpi_gbl_ns_type_names</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* 00 */</span> \"Untyped\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 01 */</span> \"Integer\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 02 */</span> \"String\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 03 */</span> \"Buffer\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 04 */</span> \"Package\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 05 */</span> \"FieldUnit\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 06 */</span> \"Device\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 07 */</span> \"Event\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 08 */</span> \"Method\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 09 */</span> \"Mutex\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 10 */</span> \"Region\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 11 */</span> \"Power\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 12 */</span> \"Processor\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 13 */</span> \"Thermal\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 14 */</span> \"BufferField\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 15 */</span> \"DdbHandle\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 16 */</span> \"DebugObject\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 17 */</span> \"RegionField\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 18 */</span> \"BankField\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 19 */</span> \"IndexField\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 20 */</span> \"Reference\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 21 */</span> \"Alias\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 22 */</span> \"MethodAlias\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 23 */</span> \"Notify\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 24 */</span> \"AddrHandler\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 25 */</span> \"ResourceDesc\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 26 */</span> \"ResourceFld\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 27 */</span> \"Scope\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 28 */</span> \"Extra\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 29 */</span> \"Data\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 30 */</span> \"Invalid\"", 
"};", 
"", 
"char *<a class=\"id\" href=\"#acpi_ut_get_type_name\">acpi_ut_get_type_name</a>(<a class=\"id\" href=\"#acpi_object_type\">acpi_object_type</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &gt; <a class=\"id\" href=\"#ACPI_TYPE_INVALID\">ACPI_TYPE_INVALID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(char, <a class=\"id\" href=\"#acpi_gbl_bad_type\">acpi_gbl_bad_type</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(char, <a class=\"id\" href=\"#acpi_gbl_ns_type_names\">acpi_gbl_ns_type_names</a>[<a class=\"id\" href=\"#type\">type</a>]));", 
"}", 
"", 
"char *<a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>)", 
"{", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (\"[NULL Object Descriptor]\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#acpi_ut_get_type_name\">acpi_ut_get_type_name</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>));", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_get_node_name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Object               - A namespace node</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Pointer to a string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Validate the node and return the node's ACPI name.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"char *<a class=\"id\" href=\"#acpi_ut_get_node_name\">acpi_ut_get_node_name</a>(void *<a class=\"id\" href=\"#object\">object</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a> = (struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *)<a class=\"id\" href=\"#object\">object</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Must return a string of exactly 4 characters == ACPI_NAME_SIZE */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#object\">object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (\"NULL\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for Root node */</span>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#object\">object</a> == <a class=\"id\" href=\"#ACPI_ROOT_OBJECT\">ACPI_ROOT_OBJECT</a>) || (<a class=\"id\" href=\"#object\">object</a> == <a class=\"id\" href=\"#acpi_gbl_root_node\">acpi_gbl_root_node</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (\"\\\"\\\\\\\" \");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Descriptor must be a namespace node */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#ACPI_DESC_TYPE_NAMED\">ACPI_DESC_TYPE_NAMED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (\"####\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Name must be a valid ACPI name */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_ut_valid_acpi_name\">acpi_ut_valid_acpi_name</a>(<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#integer\">integer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#integer\">integer</a> = <a class=\"id\" href=\"#acpi_ut_repair_name\">acpi_ut_repair_name</a>(<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#ascii\">ascii</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Return the name */</span>", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#ascii\">ascii</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_get_descriptor_name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Object               - An ACPI object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Pointer to a string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Validate object and return the descriptor type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<span class=\"comment\">/* Printable names of object descriptor types */</span>", 
"", 
"static const char *<a class=\"id\" href=\"#acpi_gbl_desc_type_names\">acpi_gbl_desc_type_names</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* 00 */</span> \"Invalid\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 01 */</span> \"Cached\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 02 */</span> \"State-Generic\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 03 */</span> \"State-Update\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 04 */</span> \"State-Package\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 05 */</span> \"State-Control\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 06 */</span> \"State-RootParseScope\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 07 */</span> \"State-ParseScope\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 08 */</span> \"State-WalkScope\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 09 */</span> \"State-Result\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 10 */</span> \"State-Notify\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 11 */</span> \"State-Thread\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 12 */</span> \"Walk\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 13 */</span> \"Parser\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 14 */</span> \"Operand\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 15 */</span> \"Node\"", 
"};", 
"", 
"char *<a class=\"id\" href=\"#acpi_ut_get_descriptor_name\">acpi_ut_get_descriptor_name</a>(void *<a class=\"id\" href=\"#object\">object</a>)", 
"{", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#object\">object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (\"NULL OBJECT\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#object\">object</a>) &gt; <a class=\"id\" href=\"#ACPI_DESC_TYPE_MAX\">ACPI_DESC_TYPE_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(char, <a class=\"id\" href=\"#acpi_gbl_bad_type\">acpi_gbl_bad_type</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(char,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_gbl_desc_type_names\">acpi_gbl_desc_type_names</a>[<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#object\">object</a>)]));", 
"", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_get_reference_name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Object               - An ACPI reference object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Pointer to a string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Decode a reference object sub-type to a string.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<span class=\"comment\">/* Printable names of reference object sub-types */</span>", 
"", 
"static const char *<a class=\"id\" href=\"#acpi_gbl_ref_class_names\">acpi_gbl_ref_class_names</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* 00 */</span> \"Local\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 01 */</span> \"Argument\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 02 */</span> \"RefOf\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 03 */</span> \"Index\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 04 */</span> \"DdbHandle\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 05 */</span> \"Named Object\",", 
"<span class=\"ts\"/><span class=\"comment\">/* 06 */</span> \"Debug\"", 
"};", 
"", 
"const char *<a class=\"id\" href=\"#acpi_ut_get_reference_name\">acpi_ut_get_reference_name</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#object\">object</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#object\">object</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"NULL Object\";", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#object\">object</a>) != <a class=\"id\" href=\"#ACPI_DESC_TYPE_OPERAND\">ACPI_DESC_TYPE_OPERAND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"Not an Operand object\";", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"Not a Reference object\";", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a> &gt; <a class=\"id\" href=\"#ACPI_REFCLASS_MAX\">ACPI_REFCLASS_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"Unknown Reference class\";", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_gbl_ref_class_names\">acpi_gbl_ref_class_names</a>[<a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a>];", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#ACPI_DEBUG_OUTPUT\">ACPI_DEBUG_OUTPUT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#ACPI_DEBUGGER\">ACPI_DEBUGGER</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Strings and procedures used for debug only</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_get_mutex_name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  mutex_id        - The predefined ID for this mutex.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      String containing the name of the mutex. Always returns a valid</span>", 
"<span class=\"comment\"> *              pointer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Translate a mutex ID into a name string (Debug only)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"char *<a class=\"id\" href=\"#acpi_ut_get_mutex_name\">acpi_ut_get_mutex_name</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mutex_id\">mutex_id</a>)", 
"{", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_id\">mutex_id</a> &gt; <a class=\"id\" href=\"#ACPI_MAX_MUTEX\">ACPI_MAX_MUTEX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (\"Invalid Mutex ID\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#acpi_gbl_mutex_names\">acpi_gbl_mutex_names</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>]);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_get_notify_name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  notify_value    - Value from the Notify() request</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      String corresponding to the Notify Value.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Translate a Notify Value to a notify namestring.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<span class=\"comment\">/* Names for Notify() values, used for debug output */</span>", 
"", 
"static const char *<a class=\"id\" href=\"#acpi_gbl_notify_value_names\">acpi_gbl_notify_value_names</a>[] = {", 
"<span class=\"ts\"/>\"Bus Check\",", 
"<span class=\"ts\"/>\"Device Check\",", 
"<span class=\"ts\"/>\"Device Wake\",", 
"<span class=\"ts\"/>\"Eject Request\",", 
"<span class=\"ts\"/>\"Device Check Light\",", 
"<span class=\"ts\"/>\"Frequency Mismatch\",", 
"<span class=\"ts\"/>\"Bus Mode Mismatch\",", 
"<span class=\"ts\"/>\"Power Fault\",", 
"<span class=\"ts\"/>\"Capabilities Check\",", 
"<span class=\"ts\"/>\"Device PLD Check\",", 
"<span class=\"ts\"/>\"Reserved\",", 
"<span class=\"ts\"/>\"System Locality Update\"", 
"};", 
"", 
"const char *<a class=\"id\" href=\"#acpi_ut_get_notify_name\">acpi_ut_get_notify_name</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#notify_value\">notify_value</a>)", 
"{", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#notify_value\">notify_value</a> <= <a class=\"id\" href=\"#ACPI_NOTIFY_MAX\">ACPI_NOTIFY_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#acpi_gbl_notify_value_names\">acpi_gbl_notify_value_names</a>[<a class=\"id\" href=\"#notify_value\">notify_value</a>]);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#notify_value\">notify_value</a> <= <a class=\"id\" href=\"#ACPI_MAX_SYS_NOTIFY\">ACPI_MAX_SYS_NOTIFY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (\"Reserved\");", 
"<span class=\"ts\"/>} else {<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Greater or equal to 0x80 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (\"**Device Specific**\");", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_valid_object_type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Type            - Object type to be validated</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      TRUE if valid object type, FALSE otherwise</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Validate an object type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_ut_valid_object_type\">acpi_ut_valid_object_type</a>(<a class=\"id\" href=\"#acpi_object_type\">acpi_object_type</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &gt; <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_MAX\">ACPI_TYPE_LOCAL_MAX</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note: Assumes all TYPEs are contiguous (external/local) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#FALSE\">FALSE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#TRUE\">TRUE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_init_globals</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Init library globals.  All globals that require specific</span>", 
"<span class=\"comment\"> *              initialization should be initialized here!</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ut_init_globals\">acpi_ut_init_globals</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ut_init_globals\">ut_init_globals</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create all memory caches */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_create_caches\">acpi_ut_create_caches</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Mutex locked flags */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ACPI_NUM_MUTEX\">ACPI_NUM_MUTEX</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mutex\">mutex</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#thread_id\">thread_id</a> = <a class=\"id\" href=\"#ACPI_MUTEX_NOT_ACQUIRED\">ACPI_MUTEX_NOT_ACQUIRED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#use_count\">use_count</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ACPI_NUM_OWNERID_MASKS\">ACPI_NUM_OWNERID_MASKS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_owner_id_mask\">acpi_gbl_owner_id_mask</a>[<a class=\"id\" href=\"#i\">i</a>] = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Last owner_iD is never valid */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_owner_id_mask\">acpi_gbl_owner_id_mask</a>[<a class=\"id\" href=\"#ACPI_NUM_OWNERID_MASKS\">ACPI_NUM_OWNERID_MASKS</a> - 1] = 0x80000000;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* GPE support */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_gpe_xrupt_list_head\">acpi_gbl_gpe_xrupt_list_head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_gpe_fadt_blocks\">acpi_gbl_gpe_fadt_blocks</a>[0] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_gpe_fadt_blocks\">acpi_gbl_gpe_fadt_blocks</a>[1] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_current_gpe_count\">acpi_current_gpe_count</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Global handlers */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_system_notify\">acpi_gbl_system_notify</a>.<a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_device_notify\">acpi_gbl_device_notify</a>.<a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_exception_handler\">acpi_gbl_exception_handler</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_init_handler\">acpi_gbl_init_handler</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_table_handler\">acpi_gbl_table_handler</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Global Lock support */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_global_lock_semaphore\">acpi_gbl_global_lock_semaphore</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_global_lock_mutex\">acpi_gbl_global_lock_mutex</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_global_lock_acquired\">acpi_gbl_global_lock_acquired</a> = <a class=\"id\" href=\"#FALSE\">FALSE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_global_lock_handle\">acpi_gbl_global_lock_handle</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_global_lock_present\">acpi_gbl_global_lock_present</a> = <a class=\"id\" href=\"#FALSE\">FALSE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Miscellaneous variables */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_DSDT\">acpi_gbl_DSDT</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_cm_single_step\">acpi_gbl_cm_single_step</a> = <a class=\"id\" href=\"#FALSE\">FALSE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_db_terminate_threads\">acpi_gbl_db_terminate_threads</a> = <a class=\"id\" href=\"#FALSE\">FALSE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_shutdown\">acpi_gbl_shutdown</a> = <a class=\"id\" href=\"#FALSE\">FALSE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_ns_lookup_count\">acpi_gbl_ns_lookup_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_ps_find_count\">acpi_gbl_ps_find_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_acpi_hardware_present\">acpi_gbl_acpi_hardware_present</a> = <a class=\"id\" href=\"#TRUE\">TRUE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_last_owner_id_index\">acpi_gbl_last_owner_id_index</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_next_owner_id_offset\">acpi_gbl_next_owner_id_offset</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_method_name\">acpi_gbl_trace_method_name</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_dbg_level\">acpi_gbl_trace_dbg_level</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_dbg_layer\">acpi_gbl_trace_dbg_layer</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_debugger_configuration\">acpi_gbl_debugger_configuration</a> = <a class=\"id\" href=\"#DEBUGGER_THREADING\">DEBUGGER_THREADING</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_db_output_flags\">acpi_gbl_db_output_flags</a> = <a class=\"id\" href=\"#ACPI_DB_CONSOLE_OUTPUT\">ACPI_DB_CONSOLE_OUTPUT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_osi_data\">acpi_gbl_osi_data</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Hardware oriented */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_events_initialized\">acpi_gbl_events_initialized</a> = <a class=\"id\" href=\"#FALSE\">FALSE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_system_awake_and_running\">acpi_gbl_system_awake_and_running</a> = <a class=\"id\" href=\"#TRUE\">TRUE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Namespace */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_module_code_list\">acpi_gbl_module_code_list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_node\">acpi_gbl_root_node</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_node_struct\">acpi_gbl_root_node_struct</a>.<a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#integer\">integer</a> = <a class=\"id\" href=\"#ACPI_ROOT_NAME\">ACPI_ROOT_NAME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_node_struct\">acpi_gbl_root_node_struct</a>.<a class=\"id\" href=\"#descriptor_type\">descriptor_type</a> = <a class=\"id\" href=\"#ACPI_DESC_TYPE_NAMED\">ACPI_DESC_TYPE_NAMED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_node_struct\">acpi_gbl_root_node_struct</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_DEVICE\">ACPI_TYPE_DEVICE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_node_struct\">acpi_gbl_root_node_struct</a>.<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_node_struct\">acpi_gbl_root_node_struct</a>.<a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_node_struct\">acpi_gbl_root_node_struct</a>.<a class=\"id\" href=\"#peer\">peer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_node_struct\">acpi_gbl_root_node_struct</a>.<a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_DEBUG_OUTPUT\">ACPI_DEBUG_OUTPUT</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_lowest_stack_pointer\">acpi_gbl_lowest_stack_pointer</a> = <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#acpi_size\">acpi_size</a>, <a class=\"id\" href=\"#ACPI_SIZE_MAX\">ACPI_SIZE_MAX</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_DBG_TRACK_ALLOCATIONS\">ACPI_DBG_TRACK_ALLOCATIONS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_display_final_mem_stats\">acpi_gbl_display_final_mem_stats</a> = <a class=\"id\" href=\"#FALSE\">FALSE</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>)", 
"<a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_dbg_level\">acpi_dbg_level</a>)", 
"<a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_dbg_layer\">acpi_dbg_layer</a>)", 
"<a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_current_gpe_count\">acpi_current_gpe_count</a>)", 
];
xr_frag_insert('l/99/c03e6b37ae729de9a892f29c3899fed8e30f14.xr', __xr_tmp);
