var __xr_tmp = [
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:       add ip6_append_data and related functions</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for datagram xmit</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter\">netfilter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv6\">netfilter_ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#rawv6\">rawv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#checksum\">checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mroute6\">mroute6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#ip6_fragment\">ip6_fragment</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int (*<a class=\"id\" href=\"#output\">output</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *));", 
"", 
"int <a class=\"id\" href=\"#__ip6_local_out\">__ip6_local_out</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#IPV6_MAXPLEN\">IPV6_MAXPLEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nf_hook\">nf_hook</a>(<a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>, <a class=\"id\" href=\"#NF_INET_LOCAL_OUT\">NF_INET_LOCAL_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dst_output\">dst_output</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_local_out\">ip6_local_out</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__ip6_local_out\">__ip6_local_out</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#err\">err</a> == 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dst_output\">dst_output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ip6_local_out\">ip6_local_out</a>);", 
"", 
"<span class=\"comment\">/* dev_loopback_xmit for use with netfilter. */</span>", 
"static int <a class=\"id\" href=\"#ip6_dev_loopback_xmit\">ip6_dev_loopback_xmit</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#newskb\">newskb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_mac_header\">skb_reset_mac_header</a>(<a class=\"id\" href=\"#newskb\">newskb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#newskb\">newskb</a>, <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#newskb\">newskb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newskb\">newskb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> = <a class=\"id\" href=\"#PACKET_LOOPBACK\">PACKET_LOOPBACK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newskb\">newskb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_UNNECESSARY\">CHECKSUM_UNNECESSARY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#newskb\">newskb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_rx_ni\">netif_rx_ni</a>(<a class=\"id\" href=\"#newskb\">newskb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_finish_output2\">ip6_finish_output2</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IPV6\">ETH_P_IPV6</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(&amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>) && <a class=\"id\" href=\"#sk_mc_loop\">sk_mc_loop</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#mroute6_socket\">mroute6_socket</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#skb\">skb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     !(<a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IP6SKB_FORWARDED\">IP6SKB_FORWARDED</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ipv6_chk_mcast_addr\">ipv6_chk_mcast_addr</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#newskb\">newskb</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do not check for IFF_ALLMULTI; multicast routing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   is not supported in any case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newskb\">newskb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>, <a class=\"id\" href=\"#NF_INET_POST_ROUTING\">NF_INET_POST_ROUTING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newskb\">newskb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#newskb\">newskb</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_dev_loopback_xmit\">ip6_dev_loopback_xmit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#hop_limit\">hop_limit</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#idev\">idev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_UPD_PO_STATS\">IP6_UPD_PO_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTMCAST\">IPSTATS_MIB_OUTMCAST</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#hh\">hh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#neigh_hh_output\">neigh_hh_output</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#hh\">hh</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a>-><a class=\"id\" href=\"#output\">output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTNOROUTES\">IPSTATS_MIB_OUTNOROUTES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip6_skb_dst_mtu\">ip6_skb_dst_mtu</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a> ? <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#np\">np</a> && <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> == <a class=\"id\" href=\"#IPV6_PMTUDISC_PROBE\">IPV6_PMTUDISC_PROBE</a>) ?", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> : <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_finish_output\">ip6_finish_output</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#ip6_skb_dst_mtu\">ip6_skb_dst_mtu</a>(<a class=\"id\" href=\"#skb\">skb</a>) && !<a class=\"id\" href=\"#skb_is_gso\">skb_is_gso</a>(<a class=\"id\" href=\"#skb\">skb</a>)) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dst_allfrag\">dst_allfrag</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ip6_fragment\">ip6_fragment</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ip6_finish_output2\">ip6_finish_output2</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ip6_finish_output2\">ip6_finish_output2</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_output\">ip6_output</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#idev\">idev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_HOOK_COND\">NF_HOOK_COND</a>(<a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>, <a class=\"id\" href=\"#NF_INET_POST_ROUTING\">NF_INET_POST_ROUTING</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ip6_finish_output\">ip6_finish_output</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IP6SKB_REROUTED\">IP6SKB_REROUTED</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>xmit an sk_buff (used by TCP, SCTP and DCCP)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ip6_xmit\">ip6_xmit</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/>     struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#first_hop\">first_hop</a> = &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a>  <a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#seg_len\">seg_len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hlimit\">hlimit</a> = -1;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tclass\">tclass</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#head_room\">head_room</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* First: exthdrs may take lots of space (~8K for now)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   MAX_HEADER is not enough.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head_room\">head_room</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_nflen\">opt_nflen</a> + <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_flen\">opt_flen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seg_len\">seg_len</a> += <a class=\"id\" href=\"#head_room\">head_room</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head_room\">head_room</a> += sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) + <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>) &lt; <a class=\"id\" href=\"#head_room\">head_room</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_realloc_headroom\">skb_realloc_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#head_room\">head_room</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb2\">skb2</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb2\">skb2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_w\">skb_set_owner_w</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_flen\">opt_flen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_frag_opts\">ipv6_push_frag_opts</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#opt\">opt</a>, &amp;<a class=\"id\" href=\"#proto\">proto</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_nflen\">opt_nflen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_nfrag_opts\">ipv6_push_nfrag_opts</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#opt\">opt</a>, &amp;<a class=\"id\" href=\"#proto\">proto</a>, &amp;<a class=\"id\" href=\"#first_hop\">first_hop</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Fill in the IPv6 header</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tclass\">tclass</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#tclass\">tclass</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlimit\">hlimit</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hlimit\">hlimit</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlimit\">hlimit</a> = <a class=\"id\" href=\"#ip6_dst_hoplimit\">ip6_dst_hoplimit</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/>*(<a class=\"id\" href=\"#__be32\">__be32</a> *)<a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#htonl\">htonl</a>(0x60000000 | (<a class=\"id\" href=\"#tclass\">tclass</a> << 20)) | <a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_flowlabel\">fl6_flowlabel</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#seg_len\">seg_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a> = <a class=\"id\" href=\"#hlimit\">hlimit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_src\">fl6_src</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#first_hop\">first_hop</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#priority\">priority</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_priority\">sk_priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#mtu\">mtu</a>) || <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#local_df\">local_df</a> || <a class=\"id\" href=\"#skb_is_gso\">skb_is_gso</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_UPD_PO_STATS\">IP6_UPD_PO_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_OUT\">IPSTATS_MIB_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>, <a class=\"id\" href=\"#NF_INET_LOCAL_OUT\">NF_INET_LOCAL_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dst_output\">dst_output</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"IPv6: sending pkt_too_big to self\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_PKT_TOOBIG\">ICMPV6_PKT_TOOBIG</a>, 0, <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ip6_xmit\">ip6_xmit</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>To avoid extra problems ND packets are send through this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>routine. It's code duplication but I really want to avoid</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>extra checks since ipv6_build_header is used by TCP (which</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is for us performance critical)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ip6_nd_hdr\">ip6_nd_hdr</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/>       const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/>       int <a class=\"id\" href=\"#proto\">proto</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#totlen\">totlen</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IPV6\">ETH_P_IPV6</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#totlen\">totlen</a> = <a class=\"id\" href=\"#len\">len</a> + sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>*(<a class=\"id\" href=\"#__be32\">__be32</a>*)<a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#htonl\">htonl</a>(0x60000000);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_call_ra_chain\">ip6_call_ra_chain</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#sel\">sel</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_ra_chain\">ip6_ra_chain</a> *<a class=\"id\" href=\"#ra\">ra</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#ip6_ra_lock\">ip6_ra_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#ip6_ra_chain\">ip6_ra_chain</a>; <a class=\"id\" href=\"#ra\">ra</a>; <a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> && <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#sel\">sel</a> == <a class=\"id\" href=\"#sel\">sel</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> == <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last\">last</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb2\">skb2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rawv6_rcv\">rawv6_rcv</a>(<a class=\"id\" href=\"#last\">last</a>, <a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last\">last</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rawv6_rcv\">rawv6_rcv</a>(<a class=\"id\" href=\"#last\">last</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#ip6_ra_lock\">ip6_ra_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#ip6_ra_lock\">ip6_ra_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_forward_proxy_check\">ip6_forward_proxy_check</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_ext_hdr\">ipv6_ext_hdr</a>(<a class=\"id\" href=\"#nexthdr\">nexthdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#ipv6_skip_exthdr\">ipv6_skip_exthdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#hdr\">hdr</a>), &amp;<a class=\"id\" href=\"#nexthdr\">nexthdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthdr\">nexthdr</a> == <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#icmp6\">icmp6</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, (<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#offset\">offset</a> + 1 - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmp6\">icmp6</a> = (struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *)(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#icmp6\">icmp6</a>-><a class=\"id\" href=\"#icmp6_type\">icmp6_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_ROUTER_SOLICITATION\">NDISC_ROUTER_SOLICITATION</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_ROUTER_ADVERTISEMENT\">NDISC_ROUTER_ADVERTISEMENT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_NEIGHBOUR_SOLICITATION\">NDISC_NEIGHBOUR_SOLICITATION</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_NEIGHBOUR_ADVERTISEMENT\">NDISC_NEIGHBOUR_ADVERTISEMENT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_REDIRECT\">NDISC_REDIRECT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For reaction involving unicast neighbor discovery</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * message destined to the proxied address, pass it to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * input function.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The proxying router can't forward traffic sent to a link-local</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * address, so signal the sender and discard the packet. This</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * behavior is clarified by the MIPv6 specification.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>) &amp; <a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_link_failure\">dst_link_failure</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip6_forward_finish\">ip6_forward_finish</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst_output\">dst_output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_forward\">ip6_forward</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#forwarding\">forwarding</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_warn_if_lro\">skb_warn_if_lro</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm6_policy_check\">xfrm6_policy_check</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#XFRM_POLICY_FWD\">XFRM_POLICY_FWD</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INDISCARDS\">IPSTATS_MIB_INDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_forward_csum\">skb_forward_csum</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We DO NOT make any processing on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>RA packets, pushing them to user level AS IS</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>without ane WARRANTY that application will be able</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>to interpret them. The reason is that we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>cannot make anything clever here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We are not end-node, so that if packet contains</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>AH/ESP, we cannot make anything.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Defragmentation also would be mistake, RA packets</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>cannot be fragmented, because there is no warranty</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>that different fragments will go along one path. --ANK</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#ra\">ra</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#ra\">ra</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip6_call_ra_chain\">ip6_call_ra_chain</a>(<a class=\"id\" href=\"#skb\">skb</a>, (<a class=\"id\" href=\"#ptr\">ptr</a>[2]<<8) + <a class=\"id\" href=\"#ptr\">ptr</a>[3]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>check and decrement ttl</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a> <= 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Force OUTPUT device used as source address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_TIME_EXCEED\">ICMPV6_TIME_EXCEED</a>, <a class=\"id\" href=\"#ICMPV6_EXC_HOPLIMIT\">ICMPV6_EXC_HOPLIMIT</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIMEDOUT\">ETIMEDOUT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX: idev-&gt;cnf.proxy_ndp? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#proxy_ndp\">proxy_ndp</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pneigh_lookup\">pneigh_lookup</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>, <a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#proxied\">proxied</a> = <a class=\"id\" href=\"#ip6_forward_proxy_check\">ip6_forward_proxy_check</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proxied\">proxied</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ip6_input\">ip6_input</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#proxied\">proxied</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_INDISCARDS\">IPSTATS_MIB_INDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm6_route_forward\">xfrm6_route_forward</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INDISCARDS\">IPSTATS_MIB_INDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* IPv6 specs say nothing about it, but it is clear that we cannot</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   send redirects to source routed frames.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   We don't send redirects to frames decapsulated from IPsec.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a> && <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a> == 0 &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#skb_sec_path\">skb_sec_path</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#target\">target</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>incoming and outgoing devices are the same</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>send a redirect.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *) <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &amp; <a class=\"id\" href=\"#RTF_GATEWAY\">RTF_GATEWAY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a> = (struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>*)&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a> = &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Limit redirects both by destination (here)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   and by source (inside ndisc_send_redirect)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xrlim_allow\">xrlim_allow</a>(<a class=\"id\" href=\"#dst\">dst</a>, 1*<a class=\"id\" href=\"#HZ\">HZ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_send_redirect\">ndisc_send_redirect</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#addrtype\">addrtype</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This check is security critical. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrtype\">addrtype</a> == <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#addrtype\">addrtype</a> &amp; (<a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a> | <a class=\"id\" href=\"#IPV6_ADDR_LOOPBACK\">IPV6_ADDR_LOOPBACK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrtype\">addrtype</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_DEST_UNREACH\">ICMPV6_DEST_UNREACH</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ICMPV6_NOT_NEIGHBOUR\">ICMPV6_NOT_NEIGHBOUR</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtu\">mtu</a> &lt; <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a> && !<a class=\"id\" href=\"#skb_is_gso\">skb_is_gso</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Again, force OUTPUT device used as source address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_PKT_TOOBIG\">ICMPV6_PKT_TOOBIG</a>, 0, <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INTOOBIGERRORS\">IPSTATS_MIB_INTOOBIGERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_cow\">skb_cow</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hard_header_len\">hard_header_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Mangling hops number delayed to point after skb COW */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a>--;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTFORWDATAGRAMS\">IPSTATS_MIB_OUTFORWDATAGRAMS</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>, <a class=\"id\" href=\"#NF_INET_FORWARD\">NF_INET_FORWARD</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ip6_forward_finish\">ip6_forward_finish</a>);", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INADDRERRORS\">IPSTATS_MIB_INADDRERRORS</a>);", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ip6_copy_metadata\">ip6_copy_metadata</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#to\">to</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#from\">from</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#priority\">priority</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#priority\">priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_drop\">skb_dst_drop</a>(<a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set\">skb_dst_set</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#dst_clone\">dst_clone</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#from\">from</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#mark\">mark</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_SCHED\">CONFIG_NET_SCHED</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#tc_index\">tc_index</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#tc_index\">tc_index</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_copy\">nf_copy</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#from\">from</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NETFILTER_XT_TARGET_TRACE\">CONFIG_NETFILTER_XT_TARGET_TRACE</a>) || \\", 
"    <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NETFILTER_XT_TARGET_TRACE_MODULE\">CONFIG_NETFILTER_XT_TARGET_TRACE_MODULE</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#nf_trace\">nf_trace</a> = <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#nf_trace\">nf_trace</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_copy_secmark\">skb_copy_secmark</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#from\">from</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_find_1stfragopt\">ip6_find_1stfragopt</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u8\">u8</a> **<a class=\"id\" href=\"#nexthdr\">nexthdr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#offset\">offset</a> = sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *<a class=\"id\" href=\"#exthdr\">exthdr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *)(<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>) + 1);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#packet_len\">packet_len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found_rhdr\">found_rhdr</a> = 0;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#nexthdr\">nexthdr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#offset\">offset</a> + 1 <= <a class=\"id\" href=\"#packet_len\">packet_len</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (**<a class=\"id\" href=\"#nexthdr\">nexthdr</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NEXTHDR_HOP\">NEXTHDR_HOP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NEXTHDR_ROUTING\">NEXTHDR_ROUTING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found_rhdr\">found_rhdr</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NEXTHDR_DEST\">NEXTHDR_DEST</a>:", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_find_tlv\">ipv6_find_tlv</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#IPV6_TLV_HAO\">IPV6_TLV_HAO</a>) >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#found_rhdr\">found_rhdr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#exthdr\">exthdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#nexthdr\">nexthdr</a> = &amp;<a class=\"id\" href=\"#exthdr\">exthdr</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exthdr\">exthdr</a> = (struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *)(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#offset\">offset</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_fragment\">ip6_fragment</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int (*<a class=\"id\" href=\"#output\">output</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#frag\">frag</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>*)<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a> ? <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a> *<a class=\"id\" href=\"#fh\">fh</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mtu\">mtu</a>, <a class=\"id\" href=\"#hlen\">hlen</a>, <a class=\"id\" href=\"#left\">left</a>, <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#frag_id\">frag_id</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#offset\">offset</a> = 0, <a class=\"id\" href=\"#err\">err</a>=0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#prevhdr\">prevhdr</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlen\">hlen</a> = <a class=\"id\" href=\"#ip6_find_1stfragopt\">ip6_find_1stfragopt</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#prevhdr\">prevhdr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = *<a class=\"id\" href=\"#prevhdr\">prevhdr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#ip6_skb_dst_mtu\">ip6_skb_dst_mtu</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We must not fragment if the socket is set to force MTU discovery</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or if the skb it not generated by a local socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#local_df\">local_df</a> && <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_PKT_TOOBIG\">ICMPV6_PKT_TOOBIG</a>, 0, <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a> && <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#frag_size\">frag_size</a> &lt; <a class=\"id\" href=\"#mtu\">mtu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#frag_size\">frag_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#frag_size\">frag_size</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> -= <a class=\"id\" href=\"#hlen\">hlen</a> + sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_has_frags\">skb_has_frags</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#first_len\">first_len</a> = <a class=\"id\" href=\"#skb_pagelen\">skb_pagelen</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#frag2\">frag2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#first_len\">first_len</a> - <a class=\"id\" href=\"#hlen\">hlen</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#first_len\">first_len</a> - <a class=\"id\" href=\"#hlen\">hlen</a>) &amp; 7) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb_cloned\">skb_cloned</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#slow_path\">slow_path</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_walk_frags\">skb_walk_frags</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#frag\">frag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Correct geometry. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#len\">len</a> &amp; 7) && <a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#next\">next</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#frag\">frag</a>) &lt; <a class=\"id\" href=\"#hlen\">hlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#slow_path_clean\">slow_path_clean</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Partially cloned skb? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_shared\">skb_shared</a>(<a class=\"id\" href=\"#frag\">frag</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#slow_path_clean\">slow_path_clean</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#destructor\">destructor</a> = <a class=\"id\" href=\"#sock_wfree\">sock_wfree</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> -= <a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frag_list\">frag_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_frag_list_init\">skb_frag_list_init</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* BUILD HEADER */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#prevhdr\">prevhdr</a> = <a class=\"id\" href=\"#NEXTHDR_FRAGMENT\">NEXTHDR_FRAGMENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a> = <a class=\"id\" href=\"#kmemdup\">kmemdup</a>(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>), <a class=\"id\" href=\"#hlen\">hlen</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a> = (struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>*)<a class=\"id\" href=\"#__skb_push\">__skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_push\">__skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>), <a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>, <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_select_ident\">ipv6_select_ident</a>(<a class=\"id\" href=\"#fh\">fh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#reserved\">reserved</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP6_MF\">IP6_MF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag_id\">frag_id</a> = <a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#identification\">identification</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_len\">first_len</a> = <a class=\"id\" href=\"#skb_pagelen\">skb_pagelen</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> = <a class=\"id\" href=\"#first_len\">first_len</a> - <a class=\"id\" href=\"#skb_headlen\">skb_headlen</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#first_len\">first_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#first_len\">first_len</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_hold\">dst_hold</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Prepare header of the next frame,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * before previous one went down. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frag\">frag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a> = (struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>*)<a class=\"id\" href=\"#__skb_push\">__skb_push</a>(<a class=\"id\" href=\"#frag\">frag</a>, sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_push\">__skb_push</a>(<a class=\"id\" href=\"#frag\">frag</a>, <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#frag\">frag</a>), <a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#hlen\">hlen</a> - sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#reserved\">reserved</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> |= <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP6_MF\">IP6_MF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#identification\">identification</a> = <a class=\"id\" href=\"#frag_id\">frag_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#frag\">frag</a>)-><a class=\"id\" href=\"#payload_len\">payload_len</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#len\">len</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_copy_metadata\">ip6_copy_metadata</a>(<a class=\"id\" href=\"#frag\">frag</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#output\">output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if(!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_FRAGCREATES\">IPSTATS_MIB_FRAGCREATES</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> || !<a class=\"id\" href=\"#frag\">frag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#frag\">frag</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_FRAGOKS\">IPSTATS_MIB_FRAGOKS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#frag\">frag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#slow_path_clean\">slow_path_clean</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_walk_frags\">skb_walk_frags</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#frag2\">frag2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frag2\">frag2</a> == <a class=\"id\" href=\"#frag\">frag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag2\">frag2</a>-><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag2\">frag2</a>-><a class=\"id\" href=\"#destructor\">destructor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#frag2\">frag2</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#slow_path\">slow_path</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#hlen\">hlen</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Space per frame */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#hlen\">hlen</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Where to start from */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Fragment the datagram.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#prevhdr\">prevhdr</a> = <a class=\"id\" href=\"#NEXTHDR_FRAGMENT\">NEXTHDR_FRAGMENT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Keep copying data until we run out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while(<a class=\"id\" href=\"#left\">left</a> &gt; 0)<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IF: it doesn't fit, use 'mtu' - the data space left */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IF: we are not sending upto and including the packet end</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   then align the next start on an eight byte boundary */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#left\">left</a>)<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> &= ~7;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Allocate buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#frag\">frag</a> = <a class=\"id\" href=\"#alloc_skb\">alloc_skb</a>(<a class=\"id\" href=\"#len\">len</a>+<a class=\"id\" href=\"#hlen\">hlen</a>+sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>)+<a class=\"id\" href=\"#LL_ALLOCATED_SPACE\">LL_ALLOCATED_SPACE</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NETDEBUG\">NETDEBUG</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"IPv6: frag: no memory for new fragment!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Set up data on packet</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_copy_metadata\">ip6_copy_metadata</a>(<a class=\"id\" href=\"#frag\">frag</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#frag\">frag</a>, <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#frag\">frag</a>, <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#hlen\">hlen</a> + sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a> = (struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a> *)(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#frag\">frag</a>) + <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = (<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#network_header\">network_header</a> + <a class=\"id\" href=\"#hlen\">hlen</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Charge the memory for the fragment to any owner</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>it might possess</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_w\">skb_set_owner_w</a>(<a class=\"id\" href=\"#frag\">frag</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Copy the packet header into the new buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_copy_from_linear_data\">skb_copy_from_linear_data</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#frag\">frag</a>), <a class=\"id\" href=\"#hlen\">hlen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Build fragment header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#reserved\">reserved</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#frag_id\">frag_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_select_ident\">ipv6_select_ident</a>(<a class=\"id\" href=\"#fh\">fh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag_id\">frag_id</a> = <a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#identification\">identification</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#identification\">identification</a> = <a class=\"id\" href=\"#frag_id\">frag_id</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Copy a block of the IP datagram.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_copy_bits\">skb_copy_bits</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#frag\">frag</a>), <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#left\">left</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> |= <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP6_MF\">IP6_MF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#frag\">frag</a>)-><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#len\">len</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Put this fragment into the sending queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#output\">output</a>(<a class=\"id\" href=\"#frag\">frag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_FRAGCREATES\">IPSTATS_MIB_FRAGCREATES</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_FRAGOKS\">IPSTATS_MIB_FRAGOKS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip6_rt_check\">ip6_rt_check</a>(struct <a class=\"id\" href=\"#rt6key\">rt6key</a> *<a class=\"id\" href=\"#rt_key\">rt_key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#fl_addr\">fl_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr_cache\">addr_cache</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#rt_key\">rt_key</a>-><a class=\"id\" href=\"#plen\">plen</a> != 128 || !<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(<a class=\"id\" href=\"#fl_addr\">fl_addr</a>, &amp;<a class=\"id\" href=\"#rt_key\">rt_key</a>-><a class=\"id\" href=\"#addr\">addr</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#addr_cache\">addr_cache</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || !<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(<a class=\"id\" href=\"#fl_addr\">fl_addr</a>, <a class=\"id\" href=\"#addr_cache\">addr_cache</a>)));", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#ip6_sk_dst_check\">ip6_sk_dst_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Yes, checking route validity in not connected</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * case is not very simple. Take into account,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that we do not support routing by source, TOS,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and MSG_DONTROUTE <span class=\"ts\"/><span class=\"ts\"/>--ANK (980726)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1. ip6_rt_check(): If route was host route,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    check that cached destination is current.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    If it is network route, we still may</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    check its validity using saved pointer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    to the last used address: daddr_cache.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    We do not want to save whole address now,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    (because main consumer of this service</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    is tcp, which has not this problem),</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    so that the last trick works only on connected</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    sockets.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 2. oif also should be the same.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip6_rt_check\">ip6_rt_check</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_dst\">rt6i_dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>, <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr_cache\">daddr_cache</a>) ||", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ip6_rt_check\">ip6_rt_check</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_src\">fl6_src</a>, <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#saddr_cache\">saddr_cache</a>) ||", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#oif\">oif</a> && <a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#oif\">oif</a> != <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_dst_lookup_tail\">ip6_dst_lookup_tail</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> **<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#dst\">dst</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#ip6_route_output\">ip6_route_output</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = (*<a class=\"id\" href=\"#dst\">dst</a>)-><a class=\"id\" href=\"#error\">error</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err_release\">out_err_release</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_src\">fl6_src</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_dev_get_saddr\">ipv6_dev_get_saddr</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(*<a class=\"id\" href=\"#dst\">dst</a>)-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#sk\">sk</a> ? <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#srcprefs\">srcprefs</a> : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_src\">fl6_src</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err_release\">out_err_release</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_OPTIMISTIC_DAD\">CONFIG_IPV6_OPTIMISTIC_DAD</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Here if the dst entry we've looked up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * has a neighbour entry that is in the INCOMPLETE</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * state and the src address from the flow is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * marked as OPTIMISTIC, we release the found</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dst entry and replace it instead with the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dst entry of the nexthop router</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((*<a class=\"id\" href=\"#dst\">dst</a>)-><a class=\"id\" href=\"#neighbour\">neighbour</a> && !((*<a class=\"id\" href=\"#dst\">dst</a>)-><a class=\"id\" href=\"#neighbour\">neighbour</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> &amp; <a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl_gw\">fl_gw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#redirect\">redirect</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#ipv6_get_ifaddr\">ipv6_get_ifaddr</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_src\">fl6_src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (*<a class=\"id\" href=\"#dst\">dst</a>)-><a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#redirect\">redirect</a> = (<a class=\"id\" href=\"#ifp\">ifp</a> && <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#redirect\">redirect</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We need to get the dst entry for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * default router instead</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(*<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#fl_gw\">fl_gw</a>, <a class=\"id\" href=\"#fl\">fl</a>, sizeof(struct <a class=\"id\" href=\"#flowi\">flowi</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#fl_gw\">fl_gw</a>.<a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>, 0, sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#ip6_route_output\">ip6_route_output</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#fl_gw\">fl_gw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = (*<a class=\"id\" href=\"#dst\">dst</a>)-><a class=\"id\" href=\"#error\">error</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err_release\">out_err_release</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_err_release\">out_err_release</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENETUNREACH\">ENETUNREACH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTNOROUTES\">IPSTATS_MIB_OUTNOROUTES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(*<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ip6_dst_lookup - perform route lookup on flow</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sk: socket which provides route info</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dst: pointer to dst_entry * for result</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fl: flow to lookup</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function performs a route lookup on the given flow.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It returns zero on success, or a standard errno code on error.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ip6_dst_lookup\">ip6_dst_lookup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> **<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ip6_dst_lookup_tail\">ip6_dst_lookup_tail</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ip6_dst_lookup\">ip6_dst_lookup</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ip6_sk_dst_lookup - perform socket cached route lookup on flow</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sk: socket which provides the dst cache and route info</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dst: pointer to dst_entry * for result</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fl: flow to lookup</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function performs a route lookup on the given flow with the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>possibility of using the cached route in the socket if it is valid.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It will take the socket dst lock when operating on the dst cache.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>As a result, this function can only be used in process context.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It returns zero on success, or a standard errno code on error.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ip6_sk_dst_lookup\">ip6_sk_dst_lookup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> **<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#sk_dst_check\">sk_dst_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#dst_cookie\">dst_cookie</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#ip6_sk_dst_check\">ip6_sk_dst_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, *<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ip6_dst_lookup_tail\">ip6_dst_lookup_tail</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ip6_sk_dst_lookup\">ip6_sk_dst_lookup</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip6_ufo_append_data\">ip6_ufo_append_data</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#getfrag\">getfrag</a>(void *<a class=\"id\" href=\"#from\">from</a>, char *<a class=\"id\" href=\"#to\">to</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#odd\">odd</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#from\">from</a>, int <a class=\"id\" href=\"#length\">length</a>, int <a class=\"id\" href=\"#hh_len\">hh_len</a>, int <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>, int <a class=\"id\" href=\"#mtu\">mtu</a>,unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* There is support for UDP large send offload by network</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * device, so create one single skb packet containing complete</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * udp datagram</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek_tail\">skb_peek_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_alloc_send_skb\">sock_alloc_send_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hh_len\">hh_len</a> + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> + <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> + 20,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>), &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reserve space for Hardware header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hh_len\">hh_len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* create space for UDP/IP header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>,<a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> + <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* initialize network header pointer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* initialize protocol header pointer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb_append_datato_frags\">skb_append_datato_frags</a>(<a class=\"id\" href=\"#sk\">sk</a>,<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#getfrag\">getfrag</a>, <a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#length\">length</a> - <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a> <a class=\"id\" href=\"#fhdr\">fhdr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Specify the length of each IPv6 datagram fragment.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * It has to be a multiple of 8.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> = (<a class=\"id\" href=\"#mtu\">mtu</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>)) &amp; ~7;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_select_ident\">ipv6_select_ident</a>(&amp;<a class=\"id\" href=\"#fhdr\">fhdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ip6_frag_id\">ip6_frag_id</a> = <a class=\"id\" href=\"#fhdr\">fhdr</a>.<a class=\"id\" href=\"#identification\">identification</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* There is not enough support do UPD LSO,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so follow normal path</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *<a class=\"id\" href=\"#ip6_opt_dup\">ip6_opt_dup</a>(struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#src\">src</a> ? <a class=\"id\" href=\"#kmemdup\">kmemdup</a>(<a class=\"id\" href=\"#src\">src</a>, (<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#hdrlen\">hdrlen</a> + 1) * 8, <a class=\"id\" href=\"#gfp\">gfp</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ipv6_rt_hdr\">ipv6_rt_hdr</a> *<a class=\"id\" href=\"#ip6_rthdr_dup\">ip6_rthdr_dup</a>(struct <a class=\"id\" href=\"#ipv6_rt_hdr\">ipv6_rt_hdr</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#src\">src</a> ? <a class=\"id\" href=\"#kmemdup\">kmemdup</a>(<a class=\"id\" href=\"#src\">src</a>, (<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#hdrlen\">hdrlen</a> + 1) * 8, <a class=\"id\" href=\"#gfp\">gfp</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_append_data\">ip6_append_data</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#getfrag\">getfrag</a>(void *<a class=\"id\" href=\"#from\">from</a>, char *<a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#odd\">odd</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#from\">from</a>, int <a class=\"id\" href=\"#length\">length</a>, int <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hlimit\">hlimit</a>, int <a class=\"id\" href=\"#tclass\">tclass</a>, struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#dontfrag\">dontfrag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>, <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hh_len\">hh_len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#csummode\">csummode</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#MSG_PROBE\">MSG_PROBE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * setup for corking</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_flen\">opt_flen</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_flen\">opt_flen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_nflen\">opt_nflen</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_nflen\">opt_nflen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a> = <a class=\"id\" href=\"#ip6_opt_dup\">ip6_opt_dup</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a> && !<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a> = <a class=\"id\" href=\"#ip6_opt_dup\">ip6_opt_dup</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a> && !<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a> = <a class=\"id\" href=\"#ip6_opt_dup\">ip6_opt_dup</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a> && !<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a> = <a class=\"id\" href=\"#ip6_rthdr_dup\">ip6_rthdr_dup</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a> && !<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* need source address above miyazawa*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_hold\">dst_hold</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a> = &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fl\">fl</a> = *<a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#hop_limit\">hop_limit</a> = <a class=\"id\" href=\"#hlimit\">hlimit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#tclass\">tclass</a> = <a class=\"id\" href=\"#tclass\">tclass</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> == <a class=\"id\" href=\"#IPV6_PMTUDISC_PROBE\">IPV6_PMTUDISC_PROBE</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> : <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#frag_size\">frag_size</a> &lt; <a class=\"id\" href=\"#mtu\">mtu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#frag_size\">frag_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#frag_size\">frag_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fragsize\">fragsize</a> = <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dst_allfrag\">dst_allfrag</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#path\">path</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IPCORK_ALLFRAG\">IPCORK_ALLFRAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exthdrlen\">exthdrlen</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#header_len\">header_len</a> + (<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_flen\">opt_flen</a> : 0) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_nfheader_len\">rt6i_nfheader_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> += <a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *)<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a> = &amp;<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exthdrlen\">exthdrlen</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fragsize\">fragsize</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hh_len\">hh_len</a> = <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> = sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) + <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_nfheader_len\">rt6i_nfheader_len</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_nflen\">opt_nflen</a> : 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#maxfraglen\">maxfraglen</a> = ((<a class=\"id\" href=\"#mtu\">mtu</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>) &amp; ~7) + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a> - sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtu\">mtu</a> <= sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) + <a class=\"id\" href=\"#IPV6_MAXPLEN\">IPV6_MAXPLEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#length\">length</a> &gt; sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) + <a class=\"id\" href=\"#IPV6_MAXPLEN\">IPV6_MAXPLEN</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_local_error\">ipv6_local_error</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#mtu\">mtu</a>-<a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Let's try using as much space as possible.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use MTU if total length of the message fits into the MTU.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Otherwise, we need to reserve fragment header and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fragment alignment (= 8-15 octects, in total).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that we may need to \"move\" the data from the tail of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of the buffer to the new fragment when we split</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the message.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FIXME: It may be fragmented into multiple chunks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *        at once if non-fragmentable extension headers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *        are too large.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * --yoshfuji</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dontfrag\">dontfrag</a> && (<a class=\"id\" href=\"#proto\">proto</a> == <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a> || <a class=\"id\" href=\"#proto\">proto</a> == <a class=\"id\" href=\"#IPPROTO_RAW\">IPPROTO_RAW</a>)){", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_local_rxpmtu\">ipv6_local_rxpmtu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#mtu\">mtu</a>-<a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proto\">proto</a> == <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> &amp; <a class=\"id\" href=\"#NETIF_F_UFO\">NETIF_F_UFO</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_ufo_append_data\">ip6_ufo_append_data</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#getfrag\">getfrag</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#length\">length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#hh_len\">hh_len</a>, <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>, <a class=\"id\" href=\"#mtu\">mtu</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek_tail\">skb_peek_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#alloc_new_skb\">alloc_new_skb</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#length\">length</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if the remaining data fits into current packet. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> <= <a class=\"id\" href=\"#mtu\">mtu</a> && !(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPCORK_ALLFRAG\">IPCORK_ALLFRAG</a>) ? <a class=\"id\" href=\"#mtu\">mtu</a> : <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>) - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &lt; <a class=\"id\" href=\"#length\">length</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#datalen\">datalen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#fraglen\">fraglen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#alloclen\">alloclen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb_prev\">skb_prev</a>;", 
"<a class=\"id\" href=\"#alloc_new_skb\">alloc_new_skb</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_prev\">skb_prev</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* There's no room in the current skb */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_prev\">skb_prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fraggap\">fraggap</a> = <a class=\"id\" href=\"#skb_prev\">skb_prev</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fraggap\">fraggap</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If remaining data exceeds the mtu,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we know we need more fragment(s).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datalen\">datalen</a> = <a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#datalen\">datalen</a> &gt; (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> <= <a class=\"id\" href=\"#mtu\">mtu</a> && !(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPCORK_ALLFRAG\">IPCORK_ALLFRAG</a>) ? <a class=\"id\" href=\"#mtu\">mtu</a> : <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>) - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datalen\">datalen</a> = <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a> - <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fraglen\">fraglen</a> = <a class=\"id\" href=\"#datalen\">datalen</a> + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_MORE\">MSG_MORE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>&amp;<a class=\"id\" href=\"#NETIF_F_SG\">NETIF_F_SG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> = <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> = <a class=\"id\" href=\"#datalen\">datalen</a> + <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The last fragment gets additional space at tail.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note: we overallocate on fragments with MSG_MODE</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * because we have no idea if we're the last one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#datalen\">datalen</a> == <a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#fraggap\">fraggap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> += <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#trailer_len\">trailer_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We just reserve space for fragment header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note: this may be overallocation if the message</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (without MSG_MORE) fits into the MTU.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> += sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_alloc_send_skb\">sock_alloc_send_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloclen\">alloclen</a> + <a class=\"id\" href=\"#hh_len\">hh_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>), &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>) <=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    2 * <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_wmalloc\">sock_wmalloc</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#alloclen\">alloclen</a> + <a class=\"id\" href=\"#hh_len\">hh_len</a>, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Fill in the control structures</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#csummode\">csummode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reserve for fragmentation */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hh_len\">hh_len</a>+sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Find where to start putting bytes</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#fraglen\">fraglen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_network_header\">skb_set_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#exthdrlen\">exthdrlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fragheaderlen\">fragheaderlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fraggap\">fraggap</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#skb_copy_and_csum_bits\">skb_copy_and_csum_bits</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_prev\">skb_prev</a>, <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>, <a class=\"id\" href=\"#fraggap\">fraggap</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_prev\">skb_prev</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_sub\">csum_sub</a>(<a class=\"id\" href=\"#skb_prev\">skb_prev</a>-><a class=\"id\" href=\"#csum\">csum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pskb_trim_unique\">pskb_trim_unique</a>(<a class=\"id\" href=\"#skb_prev\">skb_prev</a>, <a class=\"id\" href=\"#maxfraglen\">maxfraglen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#datalen\">datalen</a> - <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> - <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#copy\">copy</a> &gt; 0 && <a class=\"id\" href=\"#getfrag\">getfrag</a>(<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#fraggap\">fraggap</a>, <a class=\"id\" href=\"#skb\">skb</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> -= <a class=\"id\" href=\"#datalen\">datalen</a> - <a class=\"id\" href=\"#fraggap\">fraggap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transhdrlen\">transhdrlen</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exthdrlen\">exthdrlen</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#csummode\">csummode</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Put the packet on the pending queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &gt; <a class=\"id\" href=\"#length\">length</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>&amp;<a class=\"id\" href=\"#NETIF_F_SG\">NETIF_F_SG</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#off\">off</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#getfrag\">getfrag</a>(<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#copy\">copy</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#skb\">skb</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_trim\">__skb_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_frag_t\">skb_frag_t</a> *<a class=\"id\" href=\"#frag\">frag</a> = &amp;<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>-1];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#left\">left</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a> && (<a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#off\">off</a>) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> >= <a class=\"id\" href=\"#left\">left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a> != <a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_page\">get_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_fill_page_desc\">skb_fill_page_desc</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = &amp;<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if(<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#alloc_pages\">alloc_pages</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_fill_page_desc\">skb_fill_page_desc</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#page\">page</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a> = &amp;<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#getfrag\">getfrag</a>(<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#page\">page</a>)+<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#page_offset\">page_offset</a>+<a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#skb\">skb</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>-><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#copy\">copy</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> -= <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#length\">length</a> -= <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_idev\">rt6i_idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ip6_cork_release\">ip6_cork_release</a>(struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a>, struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IPCORK_ALLFRAG\">IPCORK_ALLFRAG</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fl\">fl</a>, 0, sizeof(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fl\">fl</a>));", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_push_pending_frames\">ip6_push_pending_frames</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, *<a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#tail_skb\">tail_skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#final_dst_buf\">final_dst_buf</a>, *<a class=\"id\" href=\"#final_dst\">final_dst</a> = &amp;<a class=\"id\" href=\"#final_dst_buf\">final_dst_buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *)<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a> = &amp;<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#__skb_dequeue\">__skb_dequeue</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tail_skb\">tail_skb</a> = &amp;(<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frag_list\">frag_list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* move skb-&gt;data to ip header from ext header */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a> &lt; <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#tmp_skb\">tmp_skb</a> = <a class=\"id\" href=\"#__skb_dequeue\">__skb_dequeue</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>, <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tail_skb\">tail_skb</a> = <a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail_skb\">tail_skb</a> = &amp;(<a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> += <a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#destructor\">destructor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_skb\">tmp_skb</a>-><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allow local fragmentation. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> &lt; <a class=\"id\" href=\"#IPV6_PMTUDISC_DO\">IPV6_PMTUDISC_DO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#local_df\">local_df</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(<a class=\"id\" href=\"#final_dst\">final_dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_flen\">opt_flen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_frag_opts\">ipv6_push_frag_opts</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#opt\">opt</a>, &amp;<a class=\"id\" href=\"#proto\">proto</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_nflen\">opt_nflen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_nfrag_opts\">ipv6_push_nfrag_opts</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#opt\">opt</a>, &amp;<a class=\"id\" href=\"#proto\">proto</a>, &amp;<a class=\"id\" href=\"#final_dst\">final_dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>*(<a class=\"id\" href=\"#__be32\">__be32</a>*)<a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_flowlabel\">fl6_flowlabel</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#htonl\">htonl</a>(0x60000000 | ((int)<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#tclass\">tclass</a> << 20));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#cork\">cork</a>.<a class=\"id\" href=\"#hop_limit\">hop_limit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_src\">fl6_src</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#final_dst\">final_dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#priority\">priority</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_priority\">sk_priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set\">skb_dst_set</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dst_clone\">dst_clone</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_UPD_PO_STATS\">IP6_UPD_PO_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_idev\">rt6i_idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUT\">IPSTATS_MIB_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#proto\">proto</a> == <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6MSGOUT_INC_STATS_BH\">ICMP6MSGOUT_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#icmp6_hdr\">icmp6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#icmp6_type\">icmp6_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6_INC_STATS_BH\">ICMP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ICMP6_MIB_OUTMSGS\">ICMP6_MIB_OUTMSGS</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_local_out\">ip6_local_out</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#net_xmit_errno\">net_xmit_errno</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_cork_release\">ip6_cork_release</a>(<a class=\"id\" href=\"#inet\">inet</a>, <a class=\"id\" href=\"#np\">np</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_idev\">rt6i_idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ip6_flush_pending_frames\">ip6_flush_pending_frames</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#__skb_dequeue_tail\">__skb_dequeue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_cork_release\">ip6_cork_release</a>(<a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"}", 
];
xr_frag_insert('l/99/f9a35a4501c8c70a98668e4dad85b5f38e9e50.xr', __xr_tmp);
