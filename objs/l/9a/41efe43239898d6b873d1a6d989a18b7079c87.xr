var __xr_tmp = [
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bytes_read\">bytes_read</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; (<a class=\"id\" href=\"#queue_max_hw_sectors\">queue_max_hw_sectors</a>(<a class=\"id\" href=\"#q\">q</a>) << 9))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ubuf\">ubuf</a> && (!<a class=\"id\" href=\"#map_data\">map_data</a> || !<a class=\"id\" href=\"#map_data\">map_data</a>-><a class=\"id\" href=\"#null_mapped\">null_mapped</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#bytes_read\">bytes_read</a> != <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#map_len\">map_len</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map_len\">map_len</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned long, <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#bytes_read\">bytes_read</a>, <a class=\"id\" href=\"#BIO_MAX_SIZE\">BIO_MAX_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = ((unsigned long)<a class=\"id\" href=\"#ubuf\">ubuf</a> + <a class=\"id\" href=\"#map_len\">map_len</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>>> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = (unsigned long)<a class=\"id\" href=\"#ubuf\">ubuf</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * A bad offset could cause us to require BIO_MAX_PAGES + 1</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pages. If this happens we just lower the requested</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * mapping len by a page so that we can fit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a> &gt; <a class=\"id\" href=\"#BIO_MAX_PAGES\">BIO_MAX_PAGES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map_len\">map_len</a> -= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__blk_rq_map_user\">__blk_rq_map_user</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#map_data\">map_data</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#map_len\">map_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unmap_rq\">unmap_rq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes_read\">bytes_read</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ubuf\">ubuf</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#map_data\">map_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map_data\">map_data</a>-><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio_flagged\">bio_flagged</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#BIO_USER_MAPPED\">BIO_USER_MAPPED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> |= <a class=\"id\" href=\"#REQ_COPY_USER\">REQ_COPY_USER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#unmap_rq\">unmap_rq</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_rq_unmap_user\">blk_rq_unmap_user</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_rq_map_user\">blk_rq_map_user</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_rq_map_user_iov - map user data to a request, for REQ_TYPE_BLOCK_PC usage</span>", 
"<span class=\"comment\"> * @q:<span class=\"ts\"/><span class=\"ts\"/>request queue where request should be inserted</span>", 
"<span class=\"comment\"> * @rq:<span class=\"ts\"/><span class=\"ts\"/>request to map data to</span>", 
"<span class=\"comment\"> * @map_data:   pointer to the rq_map_data holding pages (if necessary)</span>", 
"<span class=\"comment\"> * @iov:<span class=\"ts\"/>pointer to the iovec</span>", 
"<span class=\"comment\"> * @iov_count:<span class=\"ts\"/>number of elements in the iovec</span>", 
"<span class=\"comment\"> * @len:<span class=\"ts\"/>I/O byte count</span>", 
"<span class=\"comment\"> * @gfp_mask:<span class=\"ts\"/>memory allocation flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *    Data will be mapped directly for zero copy I/O, if possible. Otherwise</span>", 
"<span class=\"comment\"> *    a kernel bounce buffer is used.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    A matching blk_rq_unmap_user() must be issued at the end of I/O, while</span>", 
"<span class=\"comment\"> *    still in process context.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    Note: The mapped bio may need to be bounced through blk_queue_bounce()</span>", 
"<span class=\"comment\"> *    before being submitted to the device, as pages mapped may be out of</span>", 
"<span class=\"comment\"> *    reach. It's the callers responsibility to make sure this happens. The</span>", 
"<span class=\"comment\"> *    original bio must be passed back in to blk_rq_unmap_user() for proper</span>", 
"<span class=\"comment\"> *    unmapping.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#blk_rq_map_user_iov\">blk_rq_map_user_iov</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rq_map_data\">rq_map_data</a> *<a class=\"id\" href=\"#map_data\">map_data</a>, struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#iov_count\">iov_count</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#READ\">READ</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#unaligned\">unaligned</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iov\">iov</a> || <a class=\"id\" href=\"#iov_count\">iov_count</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#iov_count\">iov_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#uaddr\">uaddr</a> = (unsigned long)<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uaddr\">uaddr</a> &amp; <a class=\"id\" href=\"#queue_dma_alignment\">queue_dma_alignment</a>(<a class=\"id\" href=\"#q\">q</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unaligned\">unaligned</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unaligned\">unaligned</a> || (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#dma_pad_mask\">dma_pad_mask</a> &amp; <a class=\"id\" href=\"#len\">len</a>) || <a class=\"id\" href=\"#map_data\">map_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_copy_user_iov\">bio_copy_user_iov</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#map_data\">map_data</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#iov_count\">iov_count</a>, <a class=\"id\" href=\"#read\">read</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_map_user_iov\">bio_map_user_iov</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#iov_count\">iov_count</a>, <a class=\"id\" href=\"#read\">read</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#bio\">bio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> != <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Grab an extra reference to this bio, as bio_unmap_user()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * expects to be able to drop it twice as it happens on the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * normal IO completion path</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_get\">bio_get</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_endio\">bio_endio</a>(<a class=\"id\" href=\"#bio\">bio</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__blk_rq_unmap_user\">__blk_rq_unmap_user</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio_flagged\">bio_flagged</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#BIO_USER_MAPPED\">BIO_USER_MAPPED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> |= <a class=\"id\" href=\"#REQ_COPY_USER\">REQ_COPY_USER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_bounce\">blk_queue_bounce</a>(<a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_get\">bio_get</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_rq_bio_prep\">blk_rq_bio_prep</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_rq_map_user_iov\">blk_rq_map_user_iov</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_rq_unmap_user - unmap a request with user data</span>", 
"<span class=\"comment\"> * @bio:<span class=\"ts\"/>       start of bio list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *    Unmap a rq previously mapped by blk_rq_map_user(). The caller must</span>", 
"<span class=\"comment\"> *    supply the original rq-&gt;bio from the blk_rq_map_user() return, since</span>", 
"<span class=\"comment\"> *    the I/O completion may have changed rq-&gt;bio.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#blk_rq_unmap_user\">blk_rq_unmap_user</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#mapped_bio\">mapped_bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0, <a class=\"id\" href=\"#ret2\">ret2</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#bio\">bio</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapped_bio\">mapped_bio</a> = <a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#bio_flagged\">bio_flagged</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#BIO_BOUNCED\">BIO_BOUNCED</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapped_bio\">mapped_bio</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret2\">ret2</a> = <a class=\"id\" href=\"#__blk_rq_unmap_user\">__blk_rq_unmap_user</a>(<a class=\"id\" href=\"#mapped_bio\">mapped_bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret2\">ret2</a> && !<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ret2\">ret2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapped_bio\">mapped_bio</a> = <a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_next\">bi_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#mapped_bio\">mapped_bio</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_rq_unmap_user\">blk_rq_unmap_user</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_rq_map_kern - map kernel data to a request, for REQ_TYPE_BLOCK_PC usage</span>", 
"<span class=\"comment\"> * @q:<span class=\"ts\"/><span class=\"ts\"/>request queue where request should be inserted</span>", 
"<span class=\"comment\"> * @rq:<span class=\"ts\"/><span class=\"ts\"/>request to fill</span>", 
"<span class=\"comment\"> * @kbuf:<span class=\"ts\"/>the kernel buffer</span>", 
"<span class=\"comment\"> * @len:<span class=\"ts\"/>length of user data</span>", 
"<span class=\"comment\"> * @gfp_mask:<span class=\"ts\"/>memory allocation flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *    Data will be mapped directly if possible. Otherwise a bounce</span>", 
"<span class=\"comment\"> *    buffer is used. Can be called multple times to append multple</span>", 
"<span class=\"comment\"> *    buffers.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#blk_rq_map_kern\">blk_rq_map_kern</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, void *<a class=\"id\" href=\"#kbuf\">kbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reading\">reading</a> = <a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#READ\">READ</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#do_copy\">do_copy</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; (<a class=\"id\" href=\"#queue_max_hw_sectors\">queue_max_hw_sectors</a>(<a class=\"id\" href=\"#q\">q</a>) << 9))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a> || !<a class=\"id\" href=\"#kbuf\">kbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_copy\">do_copy</a> = !<a class=\"id\" href=\"#blk_rq_aligned\">blk_rq_aligned</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#kbuf\">kbuf</a>, <a class=\"id\" href=\"#len\">len</a>) || <a class=\"id\" href=\"#object_is_on_stack\">object_is_on_stack</a>(<a class=\"id\" href=\"#kbuf\">kbuf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#do_copy\">do_copy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_copy_kern\">bio_copy_kern</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#kbuf\">kbuf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, <a class=\"id\" href=\"#reading\">reading</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_map_kern\">bio_map_kern</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#kbuf\">kbuf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#bio\">bio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#WRITE\">WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> |= <a class=\"id\" href=\"#REQ_WRITE\">REQ_WRITE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#do_copy\">do_copy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> |= <a class=\"id\" href=\"#REQ_COPY_USER\">REQ_COPY_USER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#blk_rq_append_bio\">blk_rq_append_bio</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* request is too big */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_bounce\">blk_queue_bounce</a>(<a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_rq_map_kern\">blk_rq_map_kern</a>);", 
];
xr_frag_insert('l/9a/41efe43239898d6b873d1a6d989a18b7079c87.xr', __xr_tmp);
