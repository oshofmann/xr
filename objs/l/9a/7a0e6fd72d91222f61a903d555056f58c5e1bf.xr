var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pp\">pp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"struct <a class=\"id\" href=\"#svc_deferred_req\">svc_deferred_req</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot\">prot</a>;<span class=\"ts\"/><span class=\"comment\">/* protocol (UDP or TCP) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_xprt\">svc_xprt</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#xprt\">xprt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>;<span class=\"ts\"/><span class=\"comment\">/* where reply must go */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrlen\">addrlen</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#svc_addr_u\">svc_addr_u</a><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a>;<span class=\"ts\"/><span class=\"comment\">/* where reply must come from */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cache_deferred_req\">cache_deferred_req</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xprt_hlen\">xprt_hlen</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#argslen\">argslen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>[0];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * List of RPC programs on the same transport endpoint</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#svc_program\">svc_program</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_program\">svc_program</a> *<span class=\"ts\"/><a class=\"id\" href=\"#pg_next\">pg_next</a>;<span class=\"ts\"/><span class=\"comment\">/* other programs (same xprt) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_prog\">pg_prog</a>;<span class=\"ts\"/><span class=\"comment\">/* program number */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_lovers\">pg_lovers</a>;<span class=\"ts\"/><span class=\"comment\">/* lowest version */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_hivers\">pg_hivers</a>;<span class=\"ts\"/><span class=\"comment\">/* lowest version */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_nvers\">pg_nvers</a>;<span class=\"ts\"/><span class=\"comment\">/* number of versions */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_version\">svc_version</a> **<span class=\"ts\"/><a class=\"id\" href=\"#pg_vers\">pg_vers</a>;<span class=\"ts\"/><span class=\"comment\">/* version array */</span>", 
"<span class=\"ts\"/>char *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_name\">pg_name</a>;<span class=\"ts\"/><span class=\"comment\">/* service name */</span>", 
"<span class=\"ts\"/>char *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_class\">pg_class</a>;<span class=\"ts\"/><span class=\"comment\">/* class name: services sharing authentication */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_stat\">svc_stat</a> *<span class=\"ts\"/><a class=\"id\" href=\"#pg_stats\">pg_stats</a>;<span class=\"ts\"/><span class=\"comment\">/* rpc statistics */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#pg_authenticate\">pg_authenticate</a>)(struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *);", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RPC program version</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#svc_version\">svc_version</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vs_vers\">vs_vers</a>;<span class=\"ts\"/><span class=\"comment\">/* version number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vs_nproc\">vs_nproc</a>;<span class=\"ts\"/><span class=\"comment\">/* number of procedures */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_procedure\">svc_procedure</a> *<span class=\"ts\"/><a class=\"id\" href=\"#vs_proc\">vs_proc</a>;<span class=\"ts\"/><span class=\"comment\">/* per-procedure info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vs_xdrsize\">vs_xdrsize</a>;<span class=\"ts\"/><span class=\"comment\">/* xdrsize needed for this version */</span>", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vs_hidden\">vs_hidden</a> : 1;<span class=\"ts\"/><span class=\"comment\">/* Don't register with portmapper.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Only used for nfsacl so far. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Override dispatch function (e.g. when caching replies).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A return value of 0 means drop the request. </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * vs_dispatch == NULL means use default dispatcher.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#vs_dispatch\">vs_dispatch</a>)(struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *, <a class=\"id\" href=\"#__be32\">__be32</a> *);", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RPC procedure info</span>", 
"<span class=\"comment\"> */</span>", 
"typedef <a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/>(*<a class=\"id\" href=\"#svc_procfunc\">svc_procfunc</a>)(struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *, void *<a class=\"id\" href=\"#argp\">argp</a>, void *<a class=\"id\" href=\"#resp\">resp</a>);", 
"struct <a class=\"id\" href=\"#svc_procedure\">svc_procedure</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#svc_procfunc\">svc_procfunc</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc_func\">pc_func</a>;<span class=\"ts\"/><span class=\"comment\">/* process the request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kxdrproc_t\">kxdrproc_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc_decode\">pc_decode</a>;<span class=\"ts\"/><span class=\"comment\">/* XDR decode args */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kxdrproc_t\">kxdrproc_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc_encode\">pc_encode</a>;<span class=\"ts\"/><span class=\"comment\">/* XDR encode result */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kxdrproc_t\">kxdrproc_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc_release\">pc_release</a>;<span class=\"ts\"/><span class=\"comment\">/* XDR free result */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc_argsize\">pc_argsize</a>;<span class=\"ts\"/><span class=\"comment\">/* argument struct size */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc_ressize\">pc_ressize</a>;<span class=\"ts\"/><span class=\"comment\">/* result struct size */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc_count\">pc_count</a>;<span class=\"ts\"/><span class=\"comment\">/* call count */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc_cachetype\">pc_cachetype</a>;<span class=\"ts\"/><span class=\"comment\">/* cache info (NFS) */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc_xdrressize\">pc_xdrressize</a>;<span class=\"ts\"/><span class=\"comment\">/* maximum size of XDR reply */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Function prototypes.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *<a class=\"id\" href=\"#svc_create\">svc_create</a>(struct <a class=\"id\" href=\"#svc_program\">svc_program</a> *, unsigned int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    void (*<a class=\"id\" href=\"#shutdown\">shutdown</a>)(struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *));", 
"struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *<a class=\"id\" href=\"#svc_prepare_thread\">svc_prepare_thread</a>(struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *<a class=\"id\" href=\"#serv\">serv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_pool\">svc_pool</a> *<a class=\"id\" href=\"#pool\">pool</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#svc_exit_thread\">svc_exit_thread</a>(struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *);", 
"struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *  <a class=\"id\" href=\"#svc_create_pooled\">svc_create_pooled</a>(struct <a class=\"id\" href=\"#svc_program\">svc_program</a> *, unsigned int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void (*<a class=\"id\" href=\"#shutdown\">shutdown</a>)(struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#svc_thread_fn\">svc_thread_fn</a>, struct <a class=\"id\" href=\"#module\">module</a> *);", 
"int<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#svc_set_num_threads\">svc_set_num_threads</a>(struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *, struct <a class=\"id\" href=\"#svc_pool\">svc_pool</a> *, int);", 
"int<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#svc_pool_stats_open\">svc_pool_stats_open</a>(struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *<a class=\"id\" href=\"#serv\">serv</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#svc_destroy\">svc_destroy</a>(struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *);", 
"int<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#svc_process\">svc_process</a>(struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *);", 
"int<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#bc_svc_process\">bc_svc_process</a>(struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *, struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *);", 
"int<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#svc_register\">svc_register</a>(const struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *, const int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned short, const unsigned short);", 
"", 
"void<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#svc_wake_up\">svc_wake_up</a>(struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *);", 
"void<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#svc_reserve\">svc_reserve</a>(struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *<a class=\"id\" href=\"#rqstp\">rqstp</a>, int <a class=\"id\" href=\"#space\">space</a>);", 
"struct <a class=\"id\" href=\"#svc_pool\">svc_pool</a> *  <a class=\"id\" href=\"#svc_pool_for_cpu\">svc_pool_for_cpu</a>(struct <a class=\"id\" href=\"#svc_serv\">svc_serv</a> *<a class=\"id\" href=\"#serv\">serv</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"char *<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#svc_print_addr\">svc_print_addr</a>(struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *, char *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#RPC_MAX_ADDRBUFLEN\">RPC_MAX_ADDRBUFLEN</a><span class=\"ts\"/>(63U)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * When we want to reduce the size of the reserved space in the response</span>", 
"<span class=\"comment\"> * buffer, we need to take into account the size of any checksum data that</span>", 
"<span class=\"comment\"> * may be at the end of the packet. This is difficult to determine exactly</span>", 
"<span class=\"comment\"> * for all cases without actually generating the checksum, so we just use a</span>", 
"<span class=\"comment\"> * static value.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#svc_reserve_auth\">svc_reserve_auth</a>(struct <a class=\"id\" href=\"#svc_rqst\">svc_rqst</a> *<a class=\"id\" href=\"#rqstp\">rqstp</a>, int <a class=\"id\" href=\"#space\">space</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#added_space\">added_space</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rqstp\">rqstp</a>-><a class=\"id\" href=\"#rq_authop\">rq_authop</a>-><a class=\"id\" href=\"#flavour\">flavour</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#added_space\">added_space</a> = <a class=\"id\" href=\"#RPC_MAX_AUTH_SIZE\">RPC_MAX_AUTH_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#svc_reserve\">svc_reserve</a>(<a class=\"id\" href=\"#rqstp\">rqstp</a>, <a class=\"id\" href=\"#space\">space</a> + <a class=\"id\" href=\"#added_space\">added_space</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* SUNRPC_SVC_H */</span>", 
];
xr_frag_insert('l/9a/7a0e6fd72d91222f61a903d555056f58c5e1bf.xr', __xr_tmp);
