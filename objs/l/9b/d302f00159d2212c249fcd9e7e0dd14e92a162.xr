var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Implementation of the security services.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors : Stephen Smalley, &lt;sds@epoch.ncsc.mil&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     James Morris &lt;jmorris@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: Trusted Computer Solutions, Inc. &lt;dgoeddel@trustedcs.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Support for enhanced MLS infrastructure.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Support for context based audit filters.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: Frank Mayer &lt;mayerf@tresys.com&gt; and Karl MacMillan &lt;kmacmillan@tresys.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Added conditional policy language extensions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: Hewlett-Packard &lt;paul.moore@hp.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Added support for NetLabel</span>", 
"<span class=\"comment\"> *      Added support for the policy capability bitmap</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: Chad Sellers &lt;csellers@tresys.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Added validation of kernel classes and permissions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: KaiGai Kohei &lt;kaigai@ak.jp.nec.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Added support for bounds domain and audit messaged on masked permissions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: Guido Trentalancia &lt;guido@trentalancia.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Added support for runtime switching of the policy type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008, 2009 NEC Corporation</span>", 
"<span class=\"comment\"> * Copyright (C) 2006, 2007 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> * Copyright (C) 2004-2006 Trusted Computer Solutions, Inc.</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 - 2004, 2006 Tresys Technology, LLC</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 Red Hat, Inc., James Morris &lt;jmorris@redhat.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the Free Software Foundation, version 2.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#selinux\">selinux</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#flex_array\">flex_array</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlabel\">netlabel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"flask.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"avc.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"avc_ss.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"security.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"context.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"policydb.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"sidtab.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"services.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"conditional.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mls.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"objsec.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xfrm.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ebitmap.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"audit.h\"", 
"", 
"extern void <a class=\"id\" href=\"#selnl_notify_policyload\">selnl_notify_policyload</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seqno\">seqno</a>);", 
"", 
"int <a class=\"id\" href=\"#selinux_policycap_netpeer\">selinux_policycap_netpeer</a>;", 
"int <a class=\"id\" href=\"#selinux_policycap_openperm\">selinux_policycap_openperm</a>;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"static struct <a class=\"id\" href=\"#sidtab\">sidtab</a> <a class=\"id\" href=\"#sidtab\">sidtab</a>;", 
"struct <a class=\"id\" href=\"#policydb\">policydb</a> <a class=\"id\" href=\"#policydb\">policydb</a>;", 
"int <a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The largest sequence number that has been used when</span>", 
"<span class=\"comment\"> * providing an access decision to the access vector cache.</span>", 
"<span class=\"comment\"> * The sequence number only changes when a policy change</span>", 
"<span class=\"comment\"> * occurs.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#latest_granting\">latest_granting</a>;", 
"", 
"<span class=\"comment\">/* Forward declaration. */</span>", 
"static int <a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#context\">context</a>, char **<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#scontext_len\">scontext_len</a>);", 
"", 
"static void <a class=\"id\" href=\"#context_struct_compute_av\">context_struct_compute_av</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#av_decision\">av_decision</a> *<a class=\"id\" href=\"#avd\">avd</a>);", 
"", 
"struct <a class=\"id\" href=\"#selinux_mapping\">selinux_mapping</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#value\">value</a>; <span class=\"comment\">/* policy value */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#num_perms\">num_perms</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#perms\">perms</a>[sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * 8];", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#selinux_mapping\">selinux_mapping</a> *<a class=\"id\" href=\"#current_mapping\">current_mapping</a>;", 
"static <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#current_mapping_size\">current_mapping_size</a>;", 
"", 
"static int <a class=\"id\" href=\"#selinux_set_mapping\">selinux_set_mapping</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#pol\">pol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#security_class_mapping\">security_class_mapping</a> *<a class=\"id\" href=\"#map\">map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#selinux_mapping\">selinux_mapping</a> **<a class=\"id\" href=\"#out_map_p\">out_map_p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#out_map_size\">out_map_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#selinux_mapping\">selinux_mapping</a> *<a class=\"id\" href=\"#out_map\">out_map</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = sizeof(struct <a class=\"id\" href=\"#selinux_mapping\">selinux_mapping</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#print_unknown_handle\">print_unknown_handle</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find number of classes in the input mapping */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#map\">map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate space for the class records, plus one for class zero */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#out_map\">out_map</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(++<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#out_map\">out_map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Store the raw class and permission values */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = 0;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#security_class_mapping\">security_class_mapping</a> *<a class=\"id\" href=\"#p_in\">p_in</a> = <a class=\"id\" href=\"#map\">map</a> + (<a class=\"id\" href=\"#j\">j</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#selinux_mapping\">selinux_mapping</a> *<a class=\"id\" href=\"#p_out\">p_out</a> = <a class=\"id\" href=\"#out_map\">out_map</a> + <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* An empty class string skips ahead */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#p_in\">p_in</a>-><a class=\"id\" href=\"#name\">name</a>, \"\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_out\">p_out</a>-><a class=\"id\" href=\"#num_perms\">num_perms</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_out\">p_out</a>-><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#string_to_security_class\">string_to_security_class</a>(<a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#p_in\">p_in</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p_out\">p_out</a>-><a class=\"id\" href=\"#value\">value</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"SELinux:  Class %s not defined in policy.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p_in\">p_in</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pol\">pol</a>-><a class=\"id\" href=\"#reject_unknown\">reject_unknown</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_out\">p_out</a>-><a class=\"id\" href=\"#num_perms\">num_perms</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_unknown_handle\">print_unknown_handle</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#p_in\">p_in</a>-><a class=\"id\" href=\"#perms\">perms</a> && <a class=\"id\" href=\"#p_in\">p_in</a>-><a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#k\">k</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* An empty permission string skips ahead */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#p_in\">p_in</a>-><a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#k\">k</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_out\">p_out</a>-><a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#k\">k</a>] = <a class=\"id\" href=\"#string_to_av_perm\">string_to_av_perm</a>(<a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#p_out\">p_out</a>-><a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#p_in\">p_in</a>-><a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p_out\">p_out</a>-><a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#k\">k</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"SELinux:  Permission %s in class %s not defined in policy.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p_in\">p_in</a>-><a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#k\">k</a>], <a class=\"id\" href=\"#p_in\">p_in</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pol\">pol</a>-><a class=\"id\" href=\"#reject_unknown\">reject_unknown</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_unknown_handle\">print_unknown_handle</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_out\">p_out</a>-><a class=\"id\" href=\"#num_perms\">num_perms</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#print_unknown_handle\">print_unknown_handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"SELinux: the above unknown classes and permissions will be %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#pol\">pol</a>-><a class=\"id\" href=\"#allow_unknown\">allow_unknown</a> ? \"allowed\" : \"denied\");", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#out_map_p\">out_map_p</a> = <a class=\"id\" href=\"#out_map\">out_map</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#out_map_size\">out_map_size</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#out_map\">out_map</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get real, policy values from mapped values</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#unmap_class\">unmap_class</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tclass\">tclass</a> &lt; <a class=\"id\" href=\"#current_mapping_size\">current_mapping_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#current_mapping\">current_mapping</a>[<a class=\"id\" href=\"#tclass\">tclass</a>].<a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tclass\">tclass</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#map_decision\">map_decision</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>, struct <a class=\"id\" href=\"#av_decision\">av_decision</a> *<a class=\"id\" href=\"#avd\">avd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#allow_unknown\">allow_unknown</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tclass\">tclass</a> &lt; <a class=\"id\" href=\"#current_mapping_size\">current_mapping_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#current_mapping\">current_mapping</a>[<a class=\"id\" href=\"#tclass\">tclass</a>].<a class=\"id\" href=\"#num_perms\">num_perms</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#result\">result</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> &amp; <a class=\"id\" href=\"#current_mapping\">current_mapping</a>[<a class=\"id\" href=\"#tclass\">tclass</a>].<a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> |= 1<<<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#allow_unknown\">allow_unknown</a> && !<a class=\"id\" href=\"#current_mapping\">current_mapping</a>[<a class=\"id\" href=\"#tclass\">tclass</a>].<a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> |= 1<<<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> = <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#result\">result</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditallow\">auditallow</a> &amp; <a class=\"id\" href=\"#current_mapping\">current_mapping</a>[<a class=\"id\" href=\"#tclass\">tclass</a>].<a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> |= 1<<<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditallow\">auditallow</a> = <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#result\">result</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditdeny\">auditdeny</a> &amp; <a class=\"id\" href=\"#current_mapping\">current_mapping</a>[<a class=\"id\" href=\"#tclass\">tclass</a>].<a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> |= 1<<<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#allow_unknown\">allow_unknown</a> && !<a class=\"id\" href=\"#current_mapping\">current_mapping</a>[<a class=\"id\" href=\"#tclass\">tclass</a>].<a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> |= 1<<<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * In case the kernel has a bug and requests a permission</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * between num_perms and the maximum permission number, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * should audit that denial</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (; <a class=\"id\" href=\"#i\">i</a> &lt; (sizeof(<a class=\"id\" href=\"#u32\">u32</a>)*8); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> |= 1<<<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditdeny\">auditdeny</a> = <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_mls_enabled\">security_mls_enabled</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#mls_enabled\">mls_enabled</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return the boolean value of a constraint expression</span>", 
"<span class=\"comment\"> * when it is applied to the specified source and target</span>", 
"<span class=\"comment\"> * security contexts.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * xcontext is a special beast...  It is used by the validatetrans rules</span>", 
"<span class=\"comment\"> * only.  For these rules, scontext is the context before the transition,</span>", 
"<span class=\"comment\"> * tcontext is the context after the transition, and xcontext is the context</span>", 
"<span class=\"comment\"> * of the process performing the transition.  All other callers of</span>", 
"<span class=\"comment\"> * constraint_expr_eval should pass in NULL for xcontext.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#constraint_expr_eval\">constraint_expr_eval</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#xcontext\">xcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#constraint_expr\">constraint_expr</a> *<a class=\"id\" href=\"#cexpr\">cexpr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val1\">val1</a>, <a class=\"id\" href=\"#val2\">val2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#r1\">r1</a>, *<a class=\"id\" href=\"#r2\">r2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mls_level\">mls_level</a> *<a class=\"id\" href=\"#l1\">l1</a>, *<a class=\"id\" href=\"#l2\">l2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#constraint_expr\">constraint_expr</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#CEXPR_MAXDEPTH\">CEXPR_MAXDEPTH</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sp\">sp</a> = -1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#cexpr\">cexpr</a>; <a class=\"id\" href=\"#e\">e</a>; <a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#expr_type\">expr_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_NOT\">CEXPR_NOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#sp\">sp</a> &lt; 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#sp\">sp</a>] = !<a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#sp\">sp</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_AND\">CEXPR_AND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#sp\">sp</a> &lt; 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#sp\">sp</a>] &= <a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#sp\">sp</a> + 1];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_OR\">CEXPR_OR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#sp\">sp</a> &lt; 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#sp\">sp</a>] |= <a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#sp\">sp</a> + 1];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_ATTR\">CEXPR_ATTR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sp\">sp</a> == (<a class=\"id\" href=\"#CEXPR_MAXDEPTH\">CEXPR_MAXDEPTH</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#attr\">attr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_USER\">CEXPR_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val1\">val1</a> = <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val2\">val2</a> = <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_TYPE\">CEXPR_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val1\">val1</a> = <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val2\">val2</a> = <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_ROLE\">CEXPR_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val1\">val1</a> = <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val2\">val2</a> = <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r1\">r1</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a>[<a class=\"id\" href=\"#val1\">val1</a> - 1];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r2\">r2</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a>[<a class=\"id\" href=\"#val2\">val2</a> - 1];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#op\">op</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_DOM\">CEXPR_DOM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = <a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#r1\">r1</a>-><a class=\"id\" href=\"#dominates\">dominates</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#val2\">val2</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_DOMBY\">CEXPR_DOMBY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = <a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#r2\">r2</a>-><a class=\"id\" href=\"#dominates\">dominates</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#val1\">val1</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_INCOMP\">CEXPR_INCOMP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = (!<a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#r1\">r1</a>-><a class=\"id\" href=\"#dominates\">dominates</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#val2\">val2</a> - 1) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   !<a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#r2\">r2</a>-><a class=\"id\" href=\"#dominates\">dominates</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#val1\">val1</a> - 1));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_L1L2\">CEXPR_L1L2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1\">l1</a> = &amp;(<a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> = &amp;(<a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mls_ops\">mls_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_L1H2\">CEXPR_L1H2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1\">l1</a> = &amp;(<a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> = &amp;(<a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mls_ops\">mls_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_H1L2\">CEXPR_H1L2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1\">l1</a> = &amp;(<a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> = &amp;(<a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mls_ops\">mls_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_H1H2\">CEXPR_H1H2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1\">l1</a> = &amp;(<a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> = &amp;(<a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mls_ops\">mls_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_L1H1\">CEXPR_L1H1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1\">l1</a> = &amp;(<a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> = &amp;(<a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mls_ops\">mls_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_L2H2\">CEXPR_L2H2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1\">l1</a> = &amp;(<a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> = &amp;(<a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mls_ops\">mls_ops</a>;", 
"<a class=\"id\" href=\"#mls_ops\">mls_ops</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#op\">op</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_EQ\">CEXPR_EQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = <a class=\"id\" href=\"#mls_level_eq\">mls_level_eq</a>(<a class=\"id\" href=\"#l1\">l1</a>, <a class=\"id\" href=\"#l2\">l2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_NEQ\">CEXPR_NEQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = !<a class=\"id\" href=\"#mls_level_eq\">mls_level_eq</a>(<a class=\"id\" href=\"#l1\">l1</a>, <a class=\"id\" href=\"#l2\">l2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_DOM\">CEXPR_DOM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = <a class=\"id\" href=\"#mls_level_dom\">mls_level_dom</a>(<a class=\"id\" href=\"#l1\">l1</a>, <a class=\"id\" href=\"#l2\">l2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_DOMBY\">CEXPR_DOMBY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = <a class=\"id\" href=\"#mls_level_dom\">mls_level_dom</a>(<a class=\"id\" href=\"#l2\">l2</a>, <a class=\"id\" href=\"#l1\">l1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_INCOMP\">CEXPR_INCOMP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = <a class=\"id\" href=\"#mls_level_incomp\">mls_level_incomp</a>(<a class=\"id\" href=\"#l2\">l2</a>, <a class=\"id\" href=\"#l1\">l1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#op\">op</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_EQ\">CEXPR_EQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = (<a class=\"id\" href=\"#val1\">val1</a> == <a class=\"id\" href=\"#val2\">val2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_NEQ\">CEXPR_NEQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = (<a class=\"id\" href=\"#val1\">val1</a> != <a class=\"id\" href=\"#val2\">val2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_NAMES\">CEXPR_NAMES</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sp\">sp</a> == (<a class=\"id\" href=\"#CEXPR_MAXDEPTH\">CEXPR_MAXDEPTH</a>-1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#scontext\">scontext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#attr\">attr</a> &amp; <a class=\"id\" href=\"#CEXPR_TARGET\">CEXPR_TARGET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#tcontext\">tcontext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#attr\">attr</a> &amp; <a class=\"id\" href=\"#CEXPR_XTARGET\">CEXPR_XTARGET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#xcontext\">xcontext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#attr\">attr</a> &amp; <a class=\"id\" href=\"#CEXPR_USER\">CEXPR_USER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val1\">val1</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#attr\">attr</a> &amp; <a class=\"id\" href=\"#CEXPR_ROLE\">CEXPR_ROLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val1\">val1</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#attr\">attr</a> &amp; <a class=\"id\" href=\"#CEXPR_TYPE\">CEXPR_TYPE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val1\">val1</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#op\">op</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_EQ\">CEXPR_EQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = <a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#names\">names</a>, <a class=\"id\" href=\"#val1\">val1</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_NEQ\">CEXPR_NEQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[++<a class=\"id\" href=\"#sp\">sp</a>] = !<a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#names\">names</a>, <a class=\"id\" href=\"#val1\">val1</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#sp\">sp</a> != 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#s\">s</a>[0];", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * security_dump_masked_av - dumps masked permissions during</span>", 
"<span class=\"comment\"> * security_compute_av due to RBAC, MLS/Constraint and Type bounds.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dump_masked_av_helper\">dump_masked_av_helper</a>(void *<a class=\"id\" href=\"#k\">k</a>, void *<a class=\"id\" href=\"#d\">d</a>, void *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#perm_datum\">perm_datum</a> *<a class=\"id\" href=\"#pdatum\">pdatum</a> = <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>char **<a class=\"id\" href=\"#permission_names\">permission_names</a> = <a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pdatum\">pdatum</a>-><a class=\"id\" href=\"#value\">value</a> &lt; 1 || <a class=\"id\" href=\"#pdatum\">pdatum</a>-><a class=\"id\" href=\"#value\">value</a> &gt; 32);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#permission_names\">permission_names</a>[<a class=\"id\" href=\"#pdatum\">pdatum</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = (char *)<a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#security_dump_masked_av\">security_dump_masked_av</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#permissions\">permissions</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#reason\">reason</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_datum\">common_datum</a> *<a class=\"id\" href=\"#common_dat\">common_dat</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#tclass_dat\">tclass_dat</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tclass_name\">tclass_name</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#scontext_name\">scontext_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tcontext_name\">tcontext_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#permission_names\">permission_names</a>[32];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#need_comma\">need_comma</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#permissions\">permissions</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tclass_name\">tclass_name</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_class_val_to_name\">p_class_val_to_name</a>[<a class=\"id\" href=\"#tclass\">tclass</a> - 1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tclass_dat\">tclass_dat</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#class_val_to_struct\">class_val_to_struct</a>[<a class=\"id\" href=\"#tclass\">tclass</a> - 1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#common_dat\">common_dat</a> = <a class=\"id\" href=\"#tclass_dat\">tclass_dat</a>-><a class=\"id\" href=\"#comdatum\">comdatum</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* init permission_names */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#common_dat\">common_dat</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#common_dat\">common_dat</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_masked_av_helper\">dump_masked_av_helper</a>, <a class=\"id\" href=\"#permission_names\">permission_names</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#tclass_dat\">tclass_dat</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_masked_av_helper\">dump_masked_av_helper</a>, <a class=\"id\" href=\"#permission_names\">permission_names</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get scontext/tcontext in text form */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#scontext_name\">scontext_name</a>, &amp;<a class=\"id\" href=\"#length\">length</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#tcontext_name\">tcontext_name</a>, &amp;<a class=\"id\" href=\"#length\">length</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* audit a message */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#AUDIT_SELINUX_ERR\">AUDIT_SELINUX_ERR</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ab\">ab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"op=security_compute_av reason=%s \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"scontext=%s tcontext=%s tclass=%s perms=\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#reason\">reason</a>, <a class=\"id\" href=\"#scontext_name\">scontext_name</a>, <a class=\"id\" href=\"#tcontext_name\">tcontext_name</a>, <a class=\"id\" href=\"#tclass_name\">tclass_name</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#index\">index</a> = 0; <a class=\"id\" href=\"#index\">index</a> &lt; 32; <a class=\"id\" href=\"#index\">index</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a> = (1 << <a class=\"id\" href=\"#index\">index</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#permissions\">permissions</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"%s%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#need_comma\">need_comma</a> ? \",\" : \"\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#permission_names\">permission_names</a>[<a class=\"id\" href=\"#index\">index</a>]", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> ? <a class=\"id\" href=\"#permission_names\">permission_names</a>[<a class=\"id\" href=\"#index\">index</a>] : \"????\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_comma\">need_comma</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* release scontext/tcontext */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tcontext_name\">tcontext_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#scontext_name\">scontext_name</a>);", 
"", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * security_boundary_permission - drops violated permissions</span>", 
"<span class=\"comment\"> * on boundary constraint.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#type_attribute_bounds_av\">type_attribute_bounds_av</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#av_decision\">av_decision</a> *<a class=\"id\" href=\"#avd\">avd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> <a class=\"id\" href=\"#lo_scontext\">lo_scontext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> <a class=\"id\" href=\"#lo_tcontext\">lo_tcontext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#av_decision\">av_decision</a> <a class=\"id\" href=\"#lo_avd\">lo_avd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#type_datum\">type_datum</a> *<a class=\"id\" href=\"#source\">source</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#type_val_to_struct\">type_val_to_struct</a>[<a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#type\">type</a> - 1];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#type_datum\">type_datum</a> *<a class=\"id\" href=\"#target\">target</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#type_val_to_struct\">type_val_to_struct</a>[<a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#type\">type</a> - 1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#masked\">masked</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#source\">source</a>-><a class=\"id\" href=\"#bounds\">bounds</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#lo_avd\">lo_avd</a>, 0, sizeof(<a class=\"id\" href=\"#lo_avd\">lo_avd</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#lo_scontext\">lo_scontext</a>, <a class=\"id\" href=\"#scontext\">scontext</a>, sizeof(<a class=\"id\" href=\"#lo_scontext\">lo_scontext</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_scontext\">lo_scontext</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#source\">source</a>-><a class=\"id\" href=\"#bounds\">bounds</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context_struct_compute_av\">context_struct_compute_av</a>(&amp;<a class=\"id\" href=\"#lo_scontext\">lo_scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#lo_avd\">lo_avd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#lo_avd\">lo_avd</a>.<a class=\"id\" href=\"#allowed\">allowed</a> &amp; <a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>) == <a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no masked permission */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#masked\">masked</a> = ~<a class=\"id\" href=\"#lo_avd\">lo_avd</a>.<a class=\"id\" href=\"#allowed\">allowed</a> &amp; <a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#bounds\">bounds</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#lo_avd\">lo_avd</a>, 0, sizeof(<a class=\"id\" href=\"#lo_avd\">lo_avd</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#lo_tcontext\">lo_tcontext</a>, <a class=\"id\" href=\"#tcontext\">tcontext</a>, sizeof(<a class=\"id\" href=\"#lo_tcontext\">lo_tcontext</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_tcontext\">lo_tcontext</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#bounds\">bounds</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context_struct_compute_av\">context_struct_compute_av</a>(<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#lo_tcontext\">lo_tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#lo_avd\">lo_avd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#lo_avd\">lo_avd</a>.<a class=\"id\" href=\"#allowed\">allowed</a> &amp; <a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>) == <a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no masked permission */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#masked\">masked</a> = ~<a class=\"id\" href=\"#lo_avd\">lo_avd</a>.<a class=\"id\" href=\"#allowed\">allowed</a> &amp; <a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#source\">source</a>-><a class=\"id\" href=\"#bounds\">bounds</a> && <a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#bounds\">bounds</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#lo_avd\">lo_avd</a>, 0, sizeof(<a class=\"id\" href=\"#lo_avd\">lo_avd</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * lo_scontext and lo_tcontext are already</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * set up.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context_struct_compute_av\">context_struct_compute_av</a>(&amp;<a class=\"id\" href=\"#lo_scontext\">lo_scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#lo_tcontext\">lo_tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#lo_avd\">lo_avd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#lo_avd\">lo_avd</a>.<a class=\"id\" href=\"#allowed\">allowed</a> &amp; <a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>) == <a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no masked permission */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#masked\">masked</a> = ~<a class=\"id\" href=\"#lo_avd\">lo_avd</a>.<a class=\"id\" href=\"#allowed\">allowed</a> &amp; <a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#masked\">masked</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* mask violated permissions */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> &= ~<a class=\"id\" href=\"#masked\">masked</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* audit masked permissions */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_dump_masked_av\">security_dump_masked_av</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#masked\">masked</a>, \"bounds\");", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Compute access vectors based on a context structure pair for</span>", 
"<span class=\"comment\"> * the permissions in a particular class.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#context_struct_compute_av\">context_struct_compute_av</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#av_decision\">av_decision</a> *<a class=\"id\" href=\"#avd\">avd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#constraint_node\">constraint_node</a> *<a class=\"id\" href=\"#constraint\">constraint</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_allow\">role_allow</a> *<a class=\"id\" href=\"#ra\">ra</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> <a class=\"id\" href=\"#avkey\">avkey</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#tclass_datum\">tclass_datum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#sattr\">sattr</a>, *<a class=\"id\" href=\"#tattr\">tattr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#snode\">snode</a>, *<a class=\"id\" href=\"#tnode\">tnode</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditallow\">auditallow</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditdeny\">auditdeny</a> = 0xffffffff;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#tclass\">tclass</a> || <a class=\"id\" href=\"#tclass\">tclass</a> &gt; <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#printk_ratelimit\">printk_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"SELinux:  Invalid class %hu\\n\", <a class=\"id\" href=\"#tclass\">tclass</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tclass_datum\">tclass_datum</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#class_val_to_struct\">class_val_to_struct</a>[<a class=\"id\" href=\"#tclass\">tclass</a> - 1];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If a specific type enforcement rule was defined for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this permission check, then use it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avkey\">avkey</a>.<a class=\"id\" href=\"#target_class\">target_class</a> = <a class=\"id\" href=\"#tclass\">tclass</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avkey\">avkey</a>.<a class=\"id\" href=\"#specified\">specified</a> = <a class=\"id\" href=\"#AVTAB_AV\">AVTAB_AV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sattr\">sattr</a> = <a class=\"id\" href=\"#flex_array_get\">flex_array_get</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#type_attr_map_array\">type_attr_map_array</a>, <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#type\">type</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#sattr\">sattr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tattr\">tattr</a> = <a class=\"id\" href=\"#flex_array_get\">flex_array_get</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#type_attr_map_array\">type_attr_map_array</a>, <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#type\">type</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#tattr\">tattr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_for_each_positive_bit\">ebitmap_for_each_positive_bit</a>(<a class=\"id\" href=\"#sattr\">sattr</a>, <a class=\"id\" href=\"#snode\">snode</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_for_each_positive_bit\">ebitmap_for_each_positive_bit</a>(<a class=\"id\" href=\"#tattr\">tattr</a>, <a class=\"id\" href=\"#tnode\">tnode</a>, <a class=\"id\" href=\"#j\">j</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avkey\">avkey</a>.<a class=\"id\" href=\"#source_type\">source_type</a> = <a class=\"id\" href=\"#i\">i</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avkey\">avkey</a>.<a class=\"id\" href=\"#target_type\">target_type</a> = <a class=\"id\" href=\"#j\">j</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#avtab_search_node\">avtab_search_node</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#te_avtab\">te_avtab</a>, &amp;<a class=\"id\" href=\"#avkey\">avkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#avtab_search_node_next\">avtab_search_node_next</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#avkey\">avkey</a>.<a class=\"id\" href=\"#specified\">specified</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a> == <a class=\"id\" href=\"#AVTAB_ALLOWED\">AVTAB_ALLOWED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> |= <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#datum\">datum</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a> == <a class=\"id\" href=\"#AVTAB_AUDITALLOW\">AVTAB_AUDITALLOW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditallow\">auditallow</a> |= <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#datum\">datum</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a> == <a class=\"id\" href=\"#AVTAB_AUDITDENY\">AVTAB_AUDITDENY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditdeny\">auditdeny</a> &= <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#datum\">datum</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check conditional av table for additional permissions */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_compute_av\">cond_compute_av</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#te_cond_avtab\">te_cond_avtab</a>, &amp;<a class=\"id\" href=\"#avkey\">avkey</a>, <a class=\"id\" href=\"#avd\">avd</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Remove any permissions prohibited by a constraint (this includes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the MLS policy).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#constraint\">constraint</a> = <a class=\"id\" href=\"#tclass_datum\">tclass_datum</a>-><a class=\"id\" href=\"#constraints\">constraints</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#constraint\">constraint</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#permissions\">permissions</a> &amp; (<a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#constraint_expr_eval\">constraint_expr_eval</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#tcontext\">tcontext</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#expr\">expr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> &= ~(<a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#permissions\">permissions</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#constraint\">constraint</a> = <a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If checking process transition permission and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * role is changing, then check the (current_role, new_role)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pair.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tclass\">tclass</a> == <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#process_class\">process_class</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> &amp; <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#process_trans_perms\">process_trans_perms</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#role\">role</a> != <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#role\">role</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#role_allow\">role_allow</a>; <a class=\"id\" href=\"#ra\">ra</a>; <a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#role\">role</a> == <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#role\">role</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#role\">role</a> == <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#new_role\">new_role</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ra\">ra</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> &= ~<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#process_trans_perms\">process_trans_perms</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the given source and target types have boundary</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * constraint, lazy checks have to mask any violated</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * permission and notice it to userspace via audit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type_attribute_bounds_av\">type_attribute_bounds_av</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#avd\">avd</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#security_validtrans_handle_fail\">security_validtrans_handle_fail</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#ocontext\">ocontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#ncontext\">ncontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#o\">o</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#olen\">olen</a>, <a class=\"id\" href=\"#nlen\">nlen</a>, <a class=\"id\" href=\"#tlen\">tlen</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#ocontext\">ocontext</a>, &amp;<a class=\"id\" href=\"#o\">o</a>, &amp;<a class=\"id\" href=\"#olen\">olen</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#ncontext\">ncontext</a>, &amp;<a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#nlen\">nlen</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#tcontext\">tcontext</a>, &amp;<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#tlen\">tlen</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log\">audit_log</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#AUDIT_SELINUX_ERR\">AUDIT_SELINUX_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"security_validate_transition:  denied for\"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \" oldcontext=%s newcontext=%s taskcontext=%s tclass=%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#o\">o</a>, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_class_val_to_name\">p_class_val_to_name</a>[<a class=\"id\" href=\"#tclass\">tclass</a>-1]);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#o\">o</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#selinux_enforcing\">selinux_enforcing</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_validate_transition\">security_validate_transition</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#oldsid\">oldsid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#newsid\">newsid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tasksid\">tasksid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#orig_tclass\">orig_tclass</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#ocontext\">ocontext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#ncontext\">ncontext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#tcontext\">tcontext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#tclass_datum\">tclass_datum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#constraint_node\">constraint_node</a> *<a class=\"id\" href=\"#constraint\">constraint</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tclass\">tclass</a> = <a class=\"id\" href=\"#unmap_class\">unmap_class</a>(<a class=\"id\" href=\"#orig_tclass\">orig_tclass</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tclass\">tclass</a> || <a class=\"id\" href=\"#tclass\">tclass</a> &gt; <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#nprim\">nprim</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized class %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#tclass\">tclass</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tclass_datum\">tclass_datum</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#class_val_to_struct\">class_val_to_struct</a>[<a class=\"id\" href=\"#tclass\">tclass</a> - 1];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ocontext\">ocontext</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#oldsid\">oldsid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ocontext\">ocontext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#oldsid\">oldsid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ncontext\">ncontext</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#newsid\">newsid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ncontext\">ncontext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#newsid\">newsid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcontext\">tcontext</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#tasksid\">tasksid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcontext\">tcontext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#tasksid\">tasksid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#constraint\">constraint</a> = <a class=\"id\" href=\"#tclass_datum\">tclass_datum</a>-><a class=\"id\" href=\"#validatetrans\">validatetrans</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#constraint\">constraint</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#constraint_expr_eval\">constraint_expr_eval</a>(<a class=\"id\" href=\"#ocontext\">ocontext</a>, <a class=\"id\" href=\"#ncontext\">ncontext</a>, <a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#expr\">expr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_validtrans_handle_fail\">security_validtrans_handle_fail</a>(<a class=\"id\" href=\"#ocontext\">ocontext</a>, <a class=\"id\" href=\"#ncontext\">ncontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tcontext\">tcontext</a>, <a class=\"id\" href=\"#tclass\">tclass</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#constraint\">constraint</a> = <a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * security_bounded_transition - check whether the given</span>", 
"<span class=\"comment\"> * transition is directed to bounded, or not.</span>", 
"<span class=\"comment\"> * It returns 0, if @newsid is bounded by @oldsid.</span>", 
"<span class=\"comment\"> * Otherwise, it returns error code.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @oldsid : current security identifier</span>", 
"<span class=\"comment\"> * @newsid : destinated security identifier</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_bounded_transition\">security_bounded_transition</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#old_sid\">old_sid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#new_sid\">new_sid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#old_context\">old_context</a>, *<a class=\"id\" href=\"#new_context\">new_context</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#type_datum\">type_datum</a> *<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_context\">old_context</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#old_sid\">old_sid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#old_context\">old_context</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s: unrecognized SID %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#old_sid\">old_sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_context\">new_context</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#new_sid\">new_sid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_context\">new_context</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s: unrecognized SID %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#new_sid\">new_sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* type/domain unchanged */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_context\">old_context</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#new_context\">new_context</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#new_context\">new_context</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#true\">true</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#type_val_to_struct\">type_val_to_struct</a>[<a class=\"id\" href=\"#index\">index</a> - 1];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* not bounded anymore */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#bounds\">bounds</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* @newsid is bounded by @oldsid */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#bounds\">bounds</a> == <a class=\"id\" href=\"#old_context\">old_context</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#bounds\">bounds</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#old_name\">old_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#new_name\">new_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#old_context\">old_context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#old_name\">old_name</a>, &amp;<a class=\"id\" href=\"#length\">length</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#new_context\">new_context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#new_name\">new_name</a>, &amp;<a class=\"id\" href=\"#length\">length</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log\">audit_log</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#AUDIT_SELINUX_ERR\">AUDIT_SELINUX_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"op=security_bounded_transition \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"result=denied \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"oldcontext=%s newcontext=%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#old_name\">old_name</a>, <a class=\"id\" href=\"#new_name\">new_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#new_name\">new_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#old_name\">old_name</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#avd_init\">avd_init</a>(struct <a class=\"id\" href=\"#av_decision\">av_decision</a> *<a class=\"id\" href=\"#avd\">avd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditallow\">auditallow</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#auditdeny\">auditdeny</a> = 0xffffffff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#seqno\">seqno</a> = <a class=\"id\" href=\"#latest_granting\">latest_granting</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_compute_av - Compute access vector decisions.</span>", 
"<span class=\"comment\"> * @ssid: source security identifier</span>", 
"<span class=\"comment\"> * @tsid: target security identifier</span>", 
"<span class=\"comment\"> * @tclass: target security class</span>", 
"<span class=\"comment\"> * @avd: access vector decisions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compute a set of access vector decisions based on the</span>", 
"<span class=\"comment\"> * SID pair (@ssid, @tsid) for the permissions in @tclass.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#security_compute_av\">security_compute_av</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ssid\">ssid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsid\">tsid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#orig_tclass\">orig_tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#av_decision\">av_decision</a> *<a class=\"id\" href=\"#avd\">avd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#tcontext\">tcontext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd_init\">avd_init</a>(<a class=\"id\" href=\"#avd\">avd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#allow\">allow</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#ssid\">ssid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scontext\">scontext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#ssid\">ssid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* permissive domain? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#permissive_map\">permissive_map</a>, <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#type\">type</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#AVD_FLAGS_PERMISSIVE\">AVD_FLAGS_PERMISSIVE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcontext\">tcontext</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#tsid\">tsid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcontext\">tcontext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#tsid\">tsid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tclass\">tclass</a> = <a class=\"id\" href=\"#unmap_class\">unmap_class</a>(<a class=\"id\" href=\"#orig_tclass\">orig_tclass</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#orig_tclass\">orig_tclass</a> && !<a class=\"id\" href=\"#tclass\">tclass</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#allow_unknown\">allow_unknown</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#allow\">allow</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_struct_compute_av\">context_struct_compute_av</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#tcontext\">tcontext</a>, <a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#avd\">avd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map_decision\">map_decision</a>(<a class=\"id\" href=\"#orig_tclass\">orig_tclass</a>, <a class=\"id\" href=\"#avd\">avd</a>, <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#allow_unknown\">allow_unknown</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return;", 
"<a class=\"id\" href=\"#allow\">allow</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> = 0xffffffff;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#security_compute_av_user\">security_compute_av_user</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ssid\">ssid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsid\">tsid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#av_decision\">av_decision</a> *<a class=\"id\" href=\"#avd\">avd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#tcontext\">tcontext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd_init\">avd_init</a>(<a class=\"id\" href=\"#avd\">avd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#allow\">allow</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#ssid\">ssid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scontext\">scontext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#ssid\">ssid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* permissive domain? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#permissive_map\">permissive_map</a>, <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#type\">type</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#AVD_FLAGS_PERMISSIVE\">AVD_FLAGS_PERMISSIVE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcontext\">tcontext</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#tsid\">tsid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcontext\">tcontext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#tsid\">tsid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#tclass\">tclass</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#allow_unknown\">allow_unknown</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#allow\">allow</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_struct_compute_av\">context_struct_compute_av</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#tcontext\">tcontext</a>, <a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#avd\">avd</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return;", 
"<a class=\"id\" href=\"#allow\">allow</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avd\">avd</a>-><a class=\"id\" href=\"#allowed\">allowed</a> = 0xffffffff;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Write the security context string representation of</span>", 
"<span class=\"comment\"> * the context structure `context' into a dynamically</span>", 
"<span class=\"comment\"> * allocated string of the correct size.  Set `*scontext'</span>", 
"<span class=\"comment\"> * to point to this string and set `*scontext_len' to</span>", 
"<span class=\"comment\"> * the length of the string.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#context\">context</a>, char **<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#scontext_len\">scontext_len</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#scontextp\">scontextp</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontext_len\">scontext_len</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#scontext_len\">scontext_len</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(*<a class=\"id\" href=\"#scontext\">scontext</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Compute the size of the context. */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontext_len\">scontext_len</a> += <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_user_val_to_name\">p_user_val_to_name</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#user\">user</a> - 1]) + 1;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontext_len\">scontext_len</a> += <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_role_val_to_name\">p_role_val_to_name</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#role\">role</a> - 1]) + 1;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontext_len\">scontext_len</a> += <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_type_val_to_name\">p_type_val_to_name</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a> - 1]) + 1;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontext_len\">scontext_len</a> += <a class=\"id\" href=\"#mls_compute_context_len\">mls_compute_context_len</a>(<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate space for the context; caller must free this space. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontextp\">scontextp</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(*<a class=\"id\" href=\"#scontext_len\">scontext_len</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scontextp\">scontextp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#scontextp\">scontextp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Copy the user name, role name and type name into the context.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#scontextp\">scontextp</a>, \"%s:%s:%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_user_val_to_name\">p_user_val_to_name</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#user\">user</a> - 1],", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_role_val_to_name\">p_role_val_to_name</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#role\">role</a> - 1],", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_type_val_to_name\">p_type_val_to_name</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a> - 1]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontextp\">scontextp</a> += <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_user_val_to_name\">p_user_val_to_name</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#user\">user</a> - 1]) +", 
"<span class=\"ts\"/><span class=\"ts\"/>     1 + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_role_val_to_name\">p_role_val_to_name</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#role\">role</a> - 1]) +", 
"<span class=\"ts\"/><span class=\"ts\"/>     1 + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_type_val_to_name\">p_type_val_to_name</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a> - 1]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mls_sid_to_context\">mls_sid_to_context</a>(<a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#scontextp\">scontextp</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontextp\">scontextp</a> = 0;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"initial_sid_to_string.h\"", 
"", 
"const char *<a class=\"id\" href=\"#security_get_initial_sid_context\">security_get_initial_sid_context</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#sid\">sid</a> &gt; <a class=\"id\" href=\"#SECINITSID_NUM\">SECINITSID_NUM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#initial_sid_to_string\">initial_sid_to_string</a>[<a class=\"id\" href=\"#sid\">sid</a>];", 
"}", 
"", 
"static int <a class=\"id\" href=\"#security_sid_to_context_core\">security_sid_to_context_core</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>, char **<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#scontext_len\">scontext_len</a>, int <a class=\"id\" href=\"#force\">force</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontext_len\">scontext_len</a>  = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sid\">sid</a> <= <a class=\"id\" href=\"#SECINITSID_NUM\">SECINITSID_NUM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#scontextp\">scontextp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#scontext_len\">scontext_len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#initial_sid_to_string\">initial_sid_to_string</a>[<a class=\"id\" href=\"#sid\">sid</a>]) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scontextp\">scontextp</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(*<a class=\"id\" href=\"#scontext_len\">scontext_len</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#scontextp\">scontextp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#scontextp\">scontextp</a>, <a class=\"id\" href=\"#initial_sid_to_string\">initial_sid_to_string</a>[<a class=\"id\" href=\"#sid\">sid</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#scontextp\">scontextp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  called before initial \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"load_policy on unknown SID %d\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#force\">force</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#sidtab_search_force\">sidtab_search_force</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context\">context</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#scontext_len\">scontext_len</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_sid_to_context - Obtain a context for a given SID.</span>", 
"<span class=\"comment\"> * @sid: security identifier, SID</span>", 
"<span class=\"comment\"> * @scontext: security context</span>", 
"<span class=\"comment\"> * @scontext_len: length in bytes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Write the string representation of the context associated with @sid</span>", 
"<span class=\"comment\"> * into a dynamically allocated string of the correct size.  Set @scontext</span>", 
"<span class=\"comment\"> * to point to this string and set @scontext_len to the length of the string.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_sid_to_context\">security_sid_to_context</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>, char **<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#scontext_len\">scontext_len</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_sid_to_context_core\">security_sid_to_context_core</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#scontext_len\">scontext_len</a>, 0);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_sid_to_context_force\">security_sid_to_context_force</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>, char **<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#scontext_len\">scontext_len</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_sid_to_context_core\">security_sid_to_context_core</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#scontext_len\">scontext_len</a>, 1);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Caveat:  Mutates scontext.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#string_to_context_struct\">string_to_context_struct</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#pol\">pol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#sidtab\">sidtab</a> *<a class=\"id\" href=\"#sidtabp\">sidtabp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    char *<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontext_len\">scontext_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#def_sid\">def_sid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#type_datum\">type_datum</a> *<a class=\"id\" href=\"#typdatum\">typdatum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_datum\">user_datum</a> *<a class=\"id\" href=\"#usrdatum\">usrdatum</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#scontextp\">scontextp</a>, *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#oldc\">oldc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_init\">context_init</a>(<a class=\"id\" href=\"#ctx\">ctx</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parse the security context. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontextp\">scontextp</a> = (char *) <a class=\"id\" href=\"#scontext\">scontext</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Extract the user. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#scontextp\">scontextp</a>;", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#p\">p</a> && *<a class=\"id\" href=\"#p\">p</a> != ':')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>++;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#p\">p</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#usrdatum\">usrdatum</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#pol\">pol</a>-><a class=\"id\" href=\"#p_users\">p_users</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#scontextp\">scontextp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#usrdatum\">usrdatum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Extract role. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontextp\">scontextp</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#p\">p</a> && *<a class=\"id\" href=\"#p\">p</a> != ':')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>++;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#p\">p</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#pol\">pol</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#scontextp\">scontextp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#role\">role</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Extract type. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontextp\">scontextp</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#p\">p</a> && *<a class=\"id\" href=\"#p\">p</a> != ':')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oldc\">oldc</a> = *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typdatum\">typdatum</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#pol\">pol</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#scontextp\">scontextp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#typdatum\">typdatum</a> || <a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#attribute\">attribute</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#mls_context_to_sid\">mls_context_to_sid</a>(<a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#oldc\">oldc</a>, &amp;<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#sidtabp\">sidtabp</a>, <a class=\"id\" href=\"#def_sid\">def_sid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#p\">p</a> - <a class=\"id\" href=\"#scontext\">scontext</a>) &lt; <a class=\"id\" href=\"#scontext_len\">scontext_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the validity of the new context. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_context_isvalid\">policydb_context_isvalid</a>(<a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#ctx\">ctx</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(<a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#security_context_to_sid_core\">security_context_to_sid_core</a>(const char *<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontext_len\">scontext_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#def_sid\">def_sid</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#force\">force</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#scontext2\">scontext2</a>, *<a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 1; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#SECINITSID_NUM\">SECINITSID_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#initial_sid_to_string\">initial_sid_to_string</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#scontext\">scontext</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_KERNEL\">SECINITSID_KERNEL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy the string so that we can modify the copy as we parse it. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontext2\">scontext2</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#scontext_len\">scontext_len</a> + 1, <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scontext2\">scontext2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#scontext2\">scontext2</a>, <a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#scontext_len\">scontext_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontext2\">scontext2</a>[<a class=\"id\" href=\"#scontext_len\">scontext_len</a>] = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#force\">force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Save another copy for storing in uninterpreted form */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#scontext2\">scontext2</a>, <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#str\">str</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#scontext2\">scontext2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#string_to_context_struct\">string_to_context_struct</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>, &amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#scontext2\">scontext2</a>, <a class=\"id\" href=\"#scontext_len\">scontext_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#def_sid\">def_sid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a> && <a class=\"id\" href=\"#force\">force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#str\">str</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#scontext_len\">scontext_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, &amp;<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(&amp;<a class=\"id\" href=\"#context\">context</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#scontext2\">scontext2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_context_to_sid - Obtain a SID for a given security context.</span>", 
"<span class=\"comment\"> * @scontext: security context</span>", 
"<span class=\"comment\"> * @scontext_len: length in bytes</span>", 
"<span class=\"comment\"> * @sid: security identifier, SID</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Obtains a SID associated with the security context that</span>", 
"<span class=\"comment\"> * has the string representation specified by @scontext.</span>", 
"<span class=\"comment\"> * Returns -%EINVAL if the context is invalid, -%ENOMEM if insufficient</span>", 
"<span class=\"comment\"> * memory is available, or 0 on success.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_context_to_sid\">security_context_to_sid</a>(const char *<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontext_len\">scontext_len</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_context_to_sid_core\">security_context_to_sid_core</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#scontext_len\">scontext_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_context_to_sid_default - Obtain a SID for a given security context,</span>", 
"<span class=\"comment\"> * falling back to specified default if needed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @scontext: security context</span>", 
"<span class=\"comment\"> * @scontext_len: length in bytes</span>", 
"<span class=\"comment\"> * @sid: security identifier, SID</span>", 
"<span class=\"comment\"> * @def_sid: default SID to assign on error</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Obtains a SID associated with the security context that</span>", 
"<span class=\"comment\"> * has the string representation specified by @scontext.</span>", 
"<span class=\"comment\"> * The default SID is passed to the MLS layer to be used to allow</span>", 
"<span class=\"comment\"> * kernel labeling of the MLS field if the MLS field is not present</span>", 
"<span class=\"comment\"> * (for upgrading to MLS without full relabel).</span>", 
"<span class=\"comment\"> * Implicitly forces adding of the context even if it cannot be mapped yet.</span>", 
"<span class=\"comment\"> * Returns -%EINVAL if the context is invalid, -%ENOMEM if insufficient</span>", 
"<span class=\"comment\"> * memory is available, or 0 on success.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_context_to_sid_default\">security_context_to_sid_default</a>(const char *<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontext_len\">scontext_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#def_sid\">def_sid</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_context_to_sid_core\">security_context_to_sid_core</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#scontext_len\">scontext_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#def_sid\">def_sid</a>, <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>, 1);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_context_to_sid_force\">security_context_to_sid_force</a>(const char *<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontext_len\">scontext_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_context_to_sid_core\">security_context_to_sid_core</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#scontext_len\">scontext_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, 1);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#compute_sid_handle_invalid_context\">compute_sid_handle_invalid_context</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#newcontext\">newcontext</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#slen\">slen</a>, <a class=\"id\" href=\"#tlen\">tlen</a>, <a class=\"id\" href=\"#nlen\">nlen</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, &amp;<a class=\"id\" href=\"#s\">s</a>, &amp;<a class=\"id\" href=\"#slen\">slen</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#tcontext\">tcontext</a>, &amp;<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#tlen\">tlen</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#newcontext\">newcontext</a>, &amp;<a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#nlen\">nlen</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log\">audit_log</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#AUDIT_SELINUX_ERR\">AUDIT_SELINUX_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"security_compute_sid:  invalid context %s\"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \" for scontext=%s\"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \" tcontext=%s\"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \" tclass=%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_class_val_to_name\">p_class_val_to_name</a>[<a class=\"id\" href=\"#tclass\">tclass</a>-1]);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#selinux_enforcing\">selinux_enforcing</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#security_compute_sid\">security_compute_sid</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ssid\">ssid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsid\">tsid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#orig_tclass\">orig_tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#specified\">specified</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#out_sid\">out_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#kern\">kern</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#tcontext\">tcontext</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#newcontext\">newcontext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_trans\">role_trans</a> *<a class=\"id\" href=\"#roletr\">roletr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> <a class=\"id\" href=\"#avkey\">avkey</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#avdatum\">avdatum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#orig_tclass\">orig_tclass</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SECCLASS_PROCESS\">SECCLASS_PROCESS</a>: <span class=\"comment\">/* kernel value */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#out_sid\">out_sid</a> = <a class=\"id\" href=\"#ssid\">ssid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#out_sid\">out_sid</a> = <a class=\"id\" href=\"#tsid\">tsid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_init\">context_init</a>(&amp;<a class=\"id\" href=\"#newcontext\">newcontext</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kern\">kern</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tclass\">tclass</a> = <a class=\"id\" href=\"#unmap_class\">unmap_class</a>(<a class=\"id\" href=\"#orig_tclass\">orig_tclass</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tclass\">tclass</a> = <a class=\"id\" href=\"#orig_tclass\">orig_tclass</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scontext\">scontext</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#ssid\">ssid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scontext\">scontext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#ssid\">ssid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcontext\">tcontext</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#tsid\">tsid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcontext\">tcontext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#tsid\">tsid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the user identity. */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#specified\">specified</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AVTAB_TRANSITION\">AVTAB_TRANSITION</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AVTAB_CHANGE\">AVTAB_CHANGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use the process user identity. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newcontext\">newcontext</a>.<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AVTAB_MEMBER\">AVTAB_MEMBER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use the related object owner. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newcontext\">newcontext</a>.<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the role and type to default values. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tclass\">tclass</a> == <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#process_class\">process_class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use the current role and type of process. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newcontext\">newcontext</a>.<a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newcontext\">newcontext</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use the well-defined object role. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newcontext\">newcontext</a>.<a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#OBJECT_R_VAL\">OBJECT_R_VAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use the type of the related object. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newcontext\">newcontext</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Look for a type transition/member/change rule. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avkey\">avkey</a>.<a class=\"id\" href=\"#source_type\">source_type</a> = <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avkey\">avkey</a>.<a class=\"id\" href=\"#target_type\">target_type</a> = <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avkey\">avkey</a>.<a class=\"id\" href=\"#target_class\">target_class</a> = <a class=\"id\" href=\"#tclass\">tclass</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avkey\">avkey</a>.<a class=\"id\" href=\"#specified\">specified</a> = <a class=\"id\" href=\"#specified\">specified</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avdatum\">avdatum</a> = <a class=\"id\" href=\"#avtab_search\">avtab_search</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#te_avtab\">te_avtab</a>, &amp;<a class=\"id\" href=\"#avkey\">avkey</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If no permanent rule, also check for enabled conditional rules */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#avdatum\">avdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#avtab_search_node\">avtab_search_node</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#te_cond_avtab\">te_cond_avtab</a>, &amp;<a class=\"id\" href=\"#avkey\">avkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (; <a class=\"id\" href=\"#node\">node</a>; <a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#avtab_search_node_next\">avtab_search_node_next</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#specified\">specified</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a> &amp; <a class=\"id\" href=\"#AVTAB_ENABLED\">AVTAB_ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avdatum\">avdatum</a> = &amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#avdatum\">avdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use the type from the type transition/member/change rule. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newcontext\">newcontext</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#avdatum\">avdatum</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for class-specific changes. */</span>", 
"<span class=\"ts\"/>if  (<a class=\"id\" href=\"#tclass\">tclass</a> == <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#process_class\">process_class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#specified\">specified</a> &amp; <a class=\"id\" href=\"#AVTAB_TRANSITION\">AVTAB_TRANSITION</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Look for a role transition rule. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#roletr\">roletr</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#role_tr\">role_tr</a>; <a class=\"id\" href=\"#roletr\">roletr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#roletr\">roletr</a> = <a class=\"id\" href=\"#roletr\">roletr</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#roletr\">roletr</a>-><a class=\"id\" href=\"#role\">role</a> == <a class=\"id\" href=\"#scontext\">scontext</a>-><a class=\"id\" href=\"#role\">role</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#roletr\">roletr</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#tcontext\">tcontext</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use the role transition rule. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newcontext\">newcontext</a>.<a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#roletr\">roletr</a>-><a class=\"id\" href=\"#new_role\">new_role</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the MLS attributes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   This is done last because it may allocate memory. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#mls_compute_sid\">mls_compute_sid</a>(<a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#tcontext\">tcontext</a>, <a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#specified\">specified</a>, &amp;<a class=\"id\" href=\"#newcontext\">newcontext</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the validity of the context. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_context_isvalid\">policydb_context_isvalid</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>, &amp;<a class=\"id\" href=\"#newcontext\">newcontext</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#compute_sid_handle_invalid_context\">compute_sid_handle_invalid_context</a>(<a class=\"id\" href=\"#scontext\">scontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcontext\">tcontext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#newcontext\">newcontext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Obtain the sid for the context. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, &amp;<a class=\"id\" href=\"#newcontext\">newcontext</a>, <a class=\"id\" href=\"#out_sid\">out_sid</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(&amp;<a class=\"id\" href=\"#newcontext\">newcontext</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_transition_sid - Compute the SID for a new subject/object.</span>", 
"<span class=\"comment\"> * @ssid: source security identifier</span>", 
"<span class=\"comment\"> * @tsid: target security identifier</span>", 
"<span class=\"comment\"> * @tclass: target security class</span>", 
"<span class=\"comment\"> * @out_sid: security identifier for new subject/object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compute a SID to use for labeling a new subject or object in the</span>", 
"<span class=\"comment\"> * class @tclass based on a SID pair (@ssid, @tsid).</span>", 
"<span class=\"comment\"> * Return -%EINVAL if any of the parameters are invalid, -%ENOMEM</span>", 
"<span class=\"comment\"> * if insufficient memory is available, or %0 if the new SID was</span>", 
"<span class=\"comment\"> * computed successfully.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_transition_sid\">security_transition_sid</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ssid\">ssid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsid\">tsid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#out_sid\">out_sid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_compute_sid\">security_compute_sid</a>(<a class=\"id\" href=\"#ssid\">ssid</a>, <a class=\"id\" href=\"#tsid\">tsid</a>, <a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#AVTAB_TRANSITION\">AVTAB_TRANSITION</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#out_sid\">out_sid</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_transition_sid_user\">security_transition_sid_user</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ssid\">ssid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsid\">tsid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#out_sid\">out_sid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_compute_sid\">security_compute_sid</a>(<a class=\"id\" href=\"#ssid\">ssid</a>, <a class=\"id\" href=\"#tsid\">tsid</a>, <a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#AVTAB_TRANSITION\">AVTAB_TRANSITION</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#out_sid\">out_sid</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_member_sid - Compute the SID for member selection.</span>", 
"<span class=\"comment\"> * @ssid: source security identifier</span>", 
"<span class=\"comment\"> * @tsid: target security identifier</span>", 
"<span class=\"comment\"> * @tclass: target security class</span>", 
"<span class=\"comment\"> * @out_sid: security identifier for selected member</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compute a SID to use when selecting a member of a polyinstantiated</span>", 
"<span class=\"comment\"> * object of class @tclass based on a SID pair (@ssid, @tsid).</span>", 
"<span class=\"comment\"> * Return -%EINVAL if any of the parameters are invalid, -%ENOMEM</span>", 
"<span class=\"comment\"> * if insufficient memory is available, or %0 if the SID was</span>", 
"<span class=\"comment\"> * computed successfully.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_member_sid\">security_member_sid</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ssid\">ssid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsid\">tsid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#out_sid\">out_sid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_compute_sid\">security_compute_sid</a>(<a class=\"id\" href=\"#ssid\">ssid</a>, <a class=\"id\" href=\"#tsid\">tsid</a>, <a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#AVTAB_MEMBER\">AVTAB_MEMBER</a>, <a class=\"id\" href=\"#out_sid\">out_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_change_sid - Compute the SID for object relabeling.</span>", 
"<span class=\"comment\"> * @ssid: source security identifier</span>", 
"<span class=\"comment\"> * @tsid: target security identifier</span>", 
"<span class=\"comment\"> * @tclass: target security class</span>", 
"<span class=\"comment\"> * @out_sid: security identifier for selected member</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compute a SID to use for relabeling an object of class @tclass</span>", 
"<span class=\"comment\"> * based on a SID pair (@ssid, @tsid).</span>", 
"<span class=\"comment\"> * Return -%EINVAL if any of the parameters are invalid, -%ENOMEM</span>", 
"<span class=\"comment\"> * if insufficient memory is available, or %0 if the SID was</span>", 
"<span class=\"comment\"> * computed successfully.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_change_sid\">security_change_sid</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ssid\">ssid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsid\">tsid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#out_sid\">out_sid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_compute_sid\">security_compute_sid</a>(<a class=\"id\" href=\"#ssid\">ssid</a>, <a class=\"id\" href=\"#tsid\">tsid</a>, <a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#AVTAB_CHANGE\">AVTAB_CHANGE</a>, <a class=\"id\" href=\"#out_sid\">out_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Clone the SID into the new SID table. */</span>", 
"static int <a class=\"id\" href=\"#clone_sid\">clone_sid</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#context\">context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sidtab\">sidtab</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sid\">sid</a> &gt; <a class=\"id\" href=\"#SECINITSID_NUM\">SECINITSID_NUM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sidtab_insert\">sidtab_insert</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#convert_context_handle_invalid_context\">convert_context_handle_invalid_context</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_enforcing\">selinux_enforcing</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(<a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#s\">s</a>, &amp;<a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"SELinux:  Context %s would be invalid if enforcing\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#convert_context_args\">convert_context_args</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#oldp\">oldp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#newp\">newp</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Convert the values in the security context</span>", 
"<span class=\"comment\"> * structure `c' from the values specified</span>", 
"<span class=\"comment\"> * in the policy `p-&gt;oldp' to the values specified</span>", 
"<span class=\"comment\"> * in the policy `p-&gt;newp'.  Verify that the</span>", 
"<span class=\"comment\"> * context is valid under the new policy.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#convert_context\">convert_context</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#c\">c</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#convert_context_args\">convert_context_args</a> *<a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> <a class=\"id\" href=\"#oldc\">oldc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#oc\">oc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mls_range\">mls_range</a> *<a class=\"id\" href=\"#range\">range</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#type_datum\">type_datum</a> *<a class=\"id\" href=\"#typdatum\">typdatum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_datum\">user_datum</a> *<a class=\"id\" href=\"#usrdatum\">usrdatum</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a> <= <a class=\"id\" href=\"#SECINITSID_NUM\">SECINITSID_NUM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#str\">str</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> <a class=\"id\" href=\"#ctx\">ctx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#string_to_context_struct\">string_to_context_struct</a>(<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#len\">len</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"SELinux:  Context %s became valid (mapped).\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Replace string with mapped representation. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#c\">c</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>, sizeof(*<a class=\"id\" href=\"#c\">c</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rc\">rc</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Retain string representation for later mapping. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Other error condition, e.g. ENOMEM. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"SELinux:   Unable to map context %s, rc = %d.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#str\">str</a>, -<a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_cpy\">context_cpy</a>(&amp;<a class=\"id\" href=\"#oldc\">oldc</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert the user. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#usrdatum\">usrdatum</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>-><a class=\"id\" href=\"#p_users\">p_users</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#oldp\">oldp</a>-><a class=\"id\" href=\"#p_user_val_to_name\">p_user_val_to_name</a>[<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#user\">user</a> - 1]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#usrdatum\">usrdatum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert the role. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#oldp\">oldp</a>-><a class=\"id\" href=\"#p_role_val_to_name\">p_role_val_to_name</a>[<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#role\">role</a> - 1]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#role\">role</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert the type. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typdatum\">typdatum</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#oldp\">oldp</a>-><a class=\"id\" href=\"#p_type_val_to_name\">p_type_val_to_name</a>[<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#type\">type</a> - 1]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#typdatum\">typdatum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert the MLS fields if dealing with MLS policies */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#oldp\">oldp</a>-><a class=\"id\" href=\"#mls_enabled\">mls_enabled</a> && <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>-><a class=\"id\" href=\"#mls_enabled\">mls_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#mls_convert_context\">mls_convert_context</a>(<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#oldp\">oldp</a>, <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#oldp\">oldp</a>-><a class=\"id\" href=\"#mls_enabled\">mls_enabled</a> && !<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>-><a class=\"id\" href=\"#mls_enabled\">mls_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Switching between MLS and non-MLS policy:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * free any storage used by the MLS fields in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * context for all existing entries in the sidtab.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mls_context_destroy\">mls_context_destroy</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#oldp\">oldp</a>-><a class=\"id\" href=\"#mls_enabled\">mls_enabled</a> && <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>-><a class=\"id\" href=\"#mls_enabled\">mls_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Switching between non-MLS and MLS policy:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ensure that the MLS fields of the context for all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * existing entries in the sidtab are filled in with a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * suitable default value, likely taken from one of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * initial SIDs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oc\">oc</a> = <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>-><a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#OCON_ISID\">OCON_ISID</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#oc\">oc</a> && <a class=\"id\" href=\"#oc\">oc</a>-><a class=\"id\" href=\"#sid\">sid</a>[0] != <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oc\">oc</a> = <a class=\"id\" href=\"#oc\">oc</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#oc\">oc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  unable to look up\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" the initial SIDs list\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range\">range</a> = &amp;<a class=\"id\" href=\"#oc\">oc</a>-><a class=\"id\" href=\"#context\">context</a>[0].<a class=\"id\" href=\"#range\">range</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#mls_range_set\">mls_range_set</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#range\">range</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the validity of the new context. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_context_isvalid\">policydb_context_isvalid</a>(<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#newp\">newp</a>, <a class=\"id\" href=\"#c\">c</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#convert_context_handle_invalid_context\">convert_context_handle_invalid_context</a>(&amp;<a class=\"id\" href=\"#oldc\">oldc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(&amp;<a class=\"id\" href=\"#oldc\">oldc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Map old representation to string and save it. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(&amp;<a class=\"id\" href=\"#oldc\">oldc</a>, &amp;<a class=\"id\" href=\"#s\">s</a>, &amp;<a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(&amp;<a class=\"id\" href=\"#oldc\">oldc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/>       \"SELinux:  Context %s became invalid (unmapped).\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#security_load_policycaps\">security_load_policycaps</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_policycap_netpeer\">selinux_policycap_netpeer</a> = <a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#policycaps\">policycaps</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#POLICYDB_CAPABILITY_NETPEER\">POLICYDB_CAPABILITY_NETPEER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_policycap_openperm\">selinux_policycap_openperm</a> = <a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#policycaps\">policycaps</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#POLICYDB_CAPABILITY_OPENPERM\">POLICYDB_CAPABILITY_OPENPERM</a>);", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#selinux_complete_init\">selinux_complete_init</a>(void);", 
"static int <a class=\"id\" href=\"#security_preserve_bools\">security_preserve_bools</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_load_policy - Load a security policy configuration.</span>", 
"<span class=\"comment\"> * @data: binary policy data</span>", 
"<span class=\"comment\"> * @len: length of data in bytes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Load a new set of security policy configuration data,</span>", 
"<span class=\"comment\"> * validate it and convert the SID table as necessary.</span>", 
"<span class=\"comment\"> * This function will flush the access vector cache after</span>", 
"<span class=\"comment\"> * loading the new policy.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_load_policy\">security_load_policy</a>(void *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> <a class=\"id\" href=\"#oldpolicydb\">oldpolicydb</a>, <a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sidtab\">sidtab</a> <a class=\"id\" href=\"#oldsidtab\">oldsidtab</a>, <a class=\"id\" href=\"#newsidtab\">newsidtab</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#selinux_mapping\">selinux_mapping</a> *<a class=\"id\" href=\"#oldmap\">oldmap</a>, *<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#convert_context_args\">convert_context_args</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seqno\">seqno</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#map_size\">map_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policy_file\">policy_file</a> <a class=\"id\" href=\"#file\">file</a> = { <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a> }, *<a class=\"id\" href=\"#fp\">fp</a> = &amp;<a class=\"id\" href=\"#file\">file</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avtab_cache_init\">avtab_cache_init</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#policydb_read\">policydb_read</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avtab_cache_destroy\">avtab_cache_destroy</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#selinux_set_mapping\">selinux_set_mapping</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>, <a class=\"id\" href=\"#secclass_map\">secclass_map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#current_mapping\">current_mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#current_mapping_size\">current_mapping_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb_destroy\">policydb_destroy</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avtab_cache_destroy\">avtab_cache_destroy</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#policydb_load_isids\">policydb_load_isids</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>, &amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb_destroy\">policydb_destroy</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avtab_cache_destroy\">avtab_cache_destroy</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_load_policycaps\">security_load_policycaps</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ss_initialized\">ss_initialized</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seqno\">seqno</a> = ++<a class=\"id\" href=\"#latest_granting\">latest_granting</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_complete_init\">selinux_complete_init</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avc_ss_reset\">avc_ss_reset</a>(<a class=\"id\" href=\"#seqno\">seqno</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selnl_notify_policyload\">selnl_notify_policyload</a>(<a class=\"id\" href=\"#seqno\">seqno</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_cache_invalidate\">selinux_netlbl_cache_invalidate</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_xfrm_notify_policyload\">selinux_xfrm_notify_policyload</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"#if 0", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sidtab_hash_eval\">sidtab_hash_eval</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, \"sids\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#policydb_read\">policydb_read</a>(&amp;<a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If switching between different policy types, log MLS status */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#mls_enabled\">mls_enabled</a> && !<a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>.<a class=\"id\" href=\"#mls_enabled\">mls_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"SELinux: Disabling MLS support...\\n\");", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#mls_enabled\">mls_enabled</a> && <a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>.<a class=\"id\" href=\"#mls_enabled\">mls_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"SELinux: Enabling MLS support...\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#policydb_load_isids\">policydb_load_isids</a>(&amp;<a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>, &amp;<a class=\"id\" href=\"#newsidtab\">newsidtab</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  unable to load the initial SIDs\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb_destroy\">policydb_destroy</a>(&amp;<a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#selinux_set_mapping\">selinux_set_mapping</a>(&amp;<a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>, <a class=\"id\" href=\"#secclass_map\">secclass_map</a>, &amp;<a class=\"id\" href=\"#map\">map</a>, &amp;<a class=\"id\" href=\"#map_size\">map_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_preserve_bools\">security_preserve_bools</a>(&amp;<a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  unable to preserve booleans\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clone the SID table. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sidtab_shutdown\">sidtab_shutdown</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_map\">sidtab_map</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#clone_sid\">clone_sid</a>, &amp;<a class=\"id\" href=\"#newsidtab\">newsidtab</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Convert the internal representations of contexts</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in the new SID table.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>.<a class=\"id\" href=\"#oldp\">oldp</a> = &amp;<a class=\"id\" href=\"#policydb\">policydb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>.<a class=\"id\" href=\"#newp\">newp</a> = &amp;<a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_map\">sidtab_map</a>(&amp;<a class=\"id\" href=\"#newsidtab\">newsidtab</a>, <a class=\"id\" href=\"#convert_context\">convert_context</a>, &amp;<a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  unable to convert the internal\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" representation of contexts in the new SID\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" table\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Save the old policydb and SID table to free later. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#oldpolicydb\">oldpolicydb</a>, &amp;<a class=\"id\" href=\"#policydb\">policydb</a>, sizeof <a class=\"id\" href=\"#policydb\">policydb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sidtab_set\">sidtab_set</a>(&amp;<a class=\"id\" href=\"#oldsidtab\">oldsidtab</a>, &amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Install the new policydb and SID table. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irq\">write_lock_irq</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>, &amp;<a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>, sizeof <a class=\"id\" href=\"#policydb\">policydb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sidtab_set\">sidtab_set</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, &amp;<a class=\"id\" href=\"#newsidtab\">newsidtab</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_load_policycaps\">security_load_policycaps</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oldmap\">oldmap</a> = <a class=\"id\" href=\"#current_mapping\">current_mapping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current_mapping\">current_mapping</a> = <a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current_mapping_size\">current_mapping_size</a> = <a class=\"id\" href=\"#map_size\">map_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seqno\">seqno</a> = ++<a class=\"id\" href=\"#latest_granting\">latest_granting</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free the old policydb and SID table. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policydb_destroy\">policydb_destroy</a>(&amp;<a class=\"id\" href=\"#oldpolicydb\">oldpolicydb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sidtab_destroy\">sidtab_destroy</a>(&amp;<a class=\"id\" href=\"#oldsidtab\">oldsidtab</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#oldmap\">oldmap</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avc_ss_reset\">avc_ss_reset</a>(<a class=\"id\" href=\"#seqno\">seqno</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selnl_notify_policyload\">selnl_notify_policyload</a>(<a class=\"id\" href=\"#seqno\">seqno</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_cache_invalidate\">selinux_netlbl_cache_invalidate</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_xfrm_notify_policyload\">selinux_xfrm_notify_policyload</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sidtab_destroy\">sidtab_destroy</a>(&amp;<a class=\"id\" href=\"#newsidtab\">newsidtab</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policydb_destroy\">policydb_destroy</a>(&amp;<a class=\"id\" href=\"#newpolicydb\">newpolicydb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_port_sid - Obtain the SID for a port.</span>", 
"<span class=\"comment\"> * @protocol: protocol number</span>", 
"<span class=\"comment\"> * @port: port number</span>", 
"<span class=\"comment\"> * @out_sid: security identifier</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_port_sid\">security_port_sid</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#out_sid\">out_sid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#OCON_PORT\">OCON_PORT</a>];", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#protocol\">protocol</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#low_port\">low_port</a> <= <a class=\"id\" href=\"#port\">port</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#high_port\">high_port</a> >= <a class=\"id\" href=\"#port\">port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#out_sid\">out_sid</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0];", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#out_sid\">out_sid</a> = <a class=\"id\" href=\"#SECINITSID_PORT\">SECINITSID_PORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_netif_sid - Obtain the SID for a network interface.</span>", 
"<span class=\"comment\"> * @name: interface name</span>", 
"<span class=\"comment\"> * @if_sid: interface SID</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_netif_sid\">security_netif_sid</a>(char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#if_sid\">if_sid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#OCON_NETIF\">OCON_NETIF</a>];", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0] || !<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[1]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[1],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#if_sid\">if_sid</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0];", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#if_sid\">if_sid</a> = <a class=\"id\" href=\"#SECINITSID_NETIF\">SECINITSID_NETIF</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#match_ipv6_addrmask\">match_ipv6_addrmask</a>(<a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#input\">input</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#fail\">fail</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#i\">i</a>] != (<a class=\"id\" href=\"#input\">input</a>[<a class=\"id\" href=\"#i\">i</a>] &amp; <a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fail\">fail</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#fail\">fail</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_node_sid - Obtain the SID for a node (host).</span>", 
"<span class=\"comment\"> * @domain: communication domain aka address family</span>", 
"<span class=\"comment\"> * @addrp: address</span>", 
"<span class=\"comment\"> * @addrlen: address length in bytes</span>", 
"<span class=\"comment\"> * @out_sid: security identifier</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_node_sid\">security_node_sid</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      void *<a class=\"id\" href=\"#addrp\">addrp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#addrlen\">addrlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#out_sid\">out_sid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#domain\">domain</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrlen\">addrlen</a> != sizeof(<a class=\"id\" href=\"#u32\">u32</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = *((<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#addrp\">addrp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#OCON_NODE\">OCON_NODE</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#node\">node</a>.<a class=\"id\" href=\"#addr\">addr</a> == (<a class=\"id\" href=\"#addr\">addr</a> &amp; <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#node\">node</a>.<a class=\"id\" href=\"#mask\">mask</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrlen\">addrlen</a> != sizeof(<a class=\"id\" href=\"#u64\">u64</a>) * 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#OCON_NODE6\">OCON_NODE6</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_ipv6_addrmask\">match_ipv6_addrmask</a>(<a class=\"id\" href=\"#addrp\">addrp</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#node6\">node6</a>.<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#node6\">node6</a>.<a class=\"id\" href=\"#mask\">mask</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#out_sid\">out_sid</a> = <a class=\"id\" href=\"#SECINITSID_NODE\">SECINITSID_NODE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#out_sid\">out_sid</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0];", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#out_sid\">out_sid</a> = <a class=\"id\" href=\"#SECINITSID_NODE\">SECINITSID_NODE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIDS_NEL\">SIDS_NEL</a> 25", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_get_user_sids - Obtain reachable SIDs for a user.</span>", 
"<span class=\"comment\"> * @fromsid: starting SID</span>", 
"<span class=\"comment\"> * @username: username</span>", 
"<span class=\"comment\"> * @sids: array of reachable SIDs for user</span>", 
"<span class=\"comment\"> * @nel: number of elements in @sids</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Generate the set of SIDs for legal security contexts</span>", 
"<span class=\"comment\"> * for a given user that can be reached by @fromsid.</span>", 
"<span class=\"comment\"> * Set *@sids to point to a dynamically allocated</span>", 
"<span class=\"comment\"> * array containing the set of SIDs.  Set *@nel to the</span>", 
"<span class=\"comment\"> * number of elements in the array.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#security_get_user_sids\">security_get_user_sids</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fromsid\">fromsid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   char *<a class=\"id\" href=\"#username\">username</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u32\">u32</a> **<a class=\"id\" href=\"#sids\">sids</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#nel\">nel</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#fromcon\">fromcon</a>, <a class=\"id\" href=\"#usercon\">usercon</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#mysids\">mysids</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#mysids2\">mysids2</a>, <a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mynel\">mynel</a> = 0, <a class=\"id\" href=\"#maxnel\">maxnel</a> = <a class=\"id\" href=\"#SIDS_NEL\">SIDS_NEL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_datum\">user_datum</a> *<a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#rnode\">rnode</a>, *<a class=\"id\" href=\"#tnode\">tnode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#sids\">sids</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#nel\">nel</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_init\">context_init</a>(&amp;<a class=\"id\" href=\"#usercon\">usercon</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fromcon\">fromcon</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#fromsid\">fromsid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fromcon\">fromcon</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_users\">p_users</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#username\">username</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#user\">user</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#usercon\">usercon</a>.<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mysids\">mysids</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#maxnel\">maxnel</a>, sizeof(*<a class=\"id\" href=\"#mysids\">mysids</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mysids\">mysids</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_for_each_positive_bit\">ebitmap_for_each_positive_bit</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#roles\">roles</a>, <a class=\"id\" href=\"#rnode\">rnode</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#usercon\">usercon</a>.<a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#i\">i</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_for_each_positive_bit\">ebitmap_for_each_positive_bit</a>(&amp;<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#types\">types</a>, <a class=\"id\" href=\"#tnode\">tnode</a>, <a class=\"id\" href=\"#j\">j</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#usercon\">usercon</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#j\">j</a> + 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mls_setup_user_range\">mls_setup_user_range</a>(<a class=\"id\" href=\"#fromcon\">fromcon</a>, <a class=\"id\" href=\"#user\">user</a>, &amp;<a class=\"id\" href=\"#usercon\">usercon</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, &amp;<a class=\"id\" href=\"#usercon\">usercon</a>, &amp;<a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mynel\">mynel</a> &lt; <a class=\"id\" href=\"#maxnel\">maxnel</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mysids\">mysids</a>[<a class=\"id\" href=\"#mynel\">mynel</a>++] = <a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maxnel\">maxnel</a> += <a class=\"id\" href=\"#SIDS_NEL\">SIDS_NEL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mysids2\">mysids2</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#maxnel\">maxnel</a>, sizeof(*<a class=\"id\" href=\"#mysids2\">mysids2</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mysids2\">mysids2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#mysids2\">mysids2</a>, <a class=\"id\" href=\"#mysids\">mysids</a>, <a class=\"id\" href=\"#mynel\">mynel</a> * sizeof(*<a class=\"id\" href=\"#mysids2\">mysids2</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#mysids\">mysids</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mysids\">mysids</a> = <a class=\"id\" href=\"#mysids2\">mysids2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mysids\">mysids</a>[<a class=\"id\" href=\"#mynel\">mynel</a>++] = <a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> || !<a class=\"id\" href=\"#mynel\">mynel</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#mysids\">mysids</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mysids2\">mysids2</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#mynel\">mynel</a>, sizeof(*<a class=\"id\" href=\"#mysids2\">mysids2</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mysids2\">mysids2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#mysids\">mysids</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#mynel\">mynel</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm_noaudit\">avc_has_perm_noaudit</a>(<a class=\"id\" href=\"#fromsid\">fromsid</a>, <a class=\"id\" href=\"#mysids\">mysids</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#SECCLASS_PROCESS\">SECCLASS_PROCESS</a>, <span class=\"comment\">/* kernel value */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#PROCESS__TRANSITION\">PROCESS__TRANSITION</a>, <a class=\"id\" href=\"#AVC_STRICT\">AVC_STRICT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mysids2\">mysids2</a>[<a class=\"id\" href=\"#j\">j</a>++] = <a class=\"id\" href=\"#mysids\">mysids</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#mysids\">mysids</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#sids\">sids</a> = <a class=\"id\" href=\"#mysids2\">mysids2</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#j\">j</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_genfs_sid - Obtain a SID for a file in a filesystem</span>", 
"<span class=\"comment\"> * @fstype: filesystem type</span>", 
"<span class=\"comment\"> * @path: path from root of mount</span>", 
"<span class=\"comment\"> * @sclass: file security class</span>", 
"<span class=\"comment\"> * @sid: SID for path</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Obtain a SID to use for a file in a filesystem that</span>", 
"<span class=\"comment\"> * cannot support xattr or use a fixed labeling behavior like</span>", 
"<span class=\"comment\"> * transition SIDs or task SIDs.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_genfs_sid\">security_genfs_sid</a>(const char *<a class=\"id\" href=\"#fstype\">fstype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       char *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#orig_sclass\">orig_sclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#sclass\">sclass</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genfs\">genfs</a> *<a class=\"id\" href=\"#genfs\">genfs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0, <a class=\"id\" href=\"#cmp\">cmp</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#path\">path</a>[0] == '/' && <a class=\"id\" href=\"#path\">path</a>[1] == '/')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#unmap_class\">unmap_class</a>(<a class=\"id\" href=\"#orig_sclass\">orig_sclass</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#genfs\">genfs</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#genfs\">genfs</a>; <a class=\"id\" href=\"#genfs\">genfs</a>; <a class=\"id\" href=\"#genfs\">genfs</a> = <a class=\"id\" href=\"#genfs\">genfs</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmp\">cmp</a> = <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#fstype\">fstype</a>, <a class=\"id\" href=\"#genfs\">genfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmp\">cmp</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#genfs\">genfs</a> || <a class=\"id\" href=\"#cmp\">cmp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#genfs\">genfs</a>-><a class=\"id\" href=\"#head\">head</a>; <a class=\"id\" href=\"#c\">c</a>; <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#sclass\">sclass</a> || <a class=\"id\" href=\"#sclass\">sclass</a> == <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#sclass\">sclass</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#len\">len</a>) == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0];", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_fs_use - Determine how to handle labeling for a filesystem.</span>", 
"<span class=\"comment\"> * @fstype: filesystem type</span>", 
"<span class=\"comment\"> * @behavior: labeling behavior</span>", 
"<span class=\"comment\"> * @sid: SID for filesystem (superblock)</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_fs_use\">security_fs_use</a>(", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#fstype\">fstype</a>,", 
"<span class=\"ts\"/>unsigned int *<a class=\"id\" href=\"#behavior\">behavior</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#OCON_FSUSE\">OCON_FSUSE</a>];", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#fstype\">fstype</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#behavior\">behavior</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#behavior\">behavior</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0];", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_genfs_sid\">security_genfs_sid</a>(<a class=\"id\" href=\"#fstype\">fstype</a>, \"/\", <a class=\"id\" href=\"#SECCLASS_DIR\">SECCLASS_DIR</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#behavior\">behavior</a> = <a class=\"id\" href=\"#SECURITY_FS_USE_NONE\">SECURITY_FS_USE_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#behavior\">behavior</a> = <a class=\"id\" href=\"#SECURITY_FS_USE_GENFS\">SECURITY_FS_USE_GENFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_get_bools\">security_get_bools</a>(int *<a class=\"id\" href=\"#len\">len</a>, char ***<a class=\"id\" href=\"#names\">names</a>, int **<a class=\"id\" href=\"#values\">values</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#names\">names</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#values\">values</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_bools\">p_bools</a>.<a class=\"id\" href=\"#nprim\">nprim</a>;", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"       *<a class=\"id\" href=\"#names\">names</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(*<a class=\"id\" href=\"#len\">len</a>, sizeof(char *), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#names\">names</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"       *<a class=\"id\" href=\"#values\">values</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(*<a class=\"id\" href=\"#len\">len</a>, sizeof(int), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#values\">values</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; *<a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#name_len\">name_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#values\">values</a>)[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#bool_val_to_struct\">bool_val_to_struct</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_bool_val_to_name\">p_bool_val_to_name</a>[<a class=\"id\" href=\"#i\">i</a>]) + 1;", 
"<span class=\"ts\"/>       (*<a class=\"id\" href=\"#names\">names</a>)[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(char) * <a class=\"id\" href=\"#name_len\">name_len</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(*<a class=\"id\" href=\"#names\">names</a>)[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>((*<a class=\"id\" href=\"#names\">names</a>)[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_bool_val_to_name\">p_bool_val_to_name</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#names\">names</a>)[<a class=\"id\" href=\"#i\">i</a>][<a class=\"id\" href=\"#name_len\">name_len</a> - 1] = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#names\">names</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; *<a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>((*<a class=\"id\" href=\"#names\">names</a>)[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(*<a class=\"id\" href=\"#values\">values</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#security_set_bools\">security_set_bools</a>(int <a class=\"id\" href=\"#len\">len</a>, int *<a class=\"id\" href=\"#values\">values</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#lenp\">lenp</a>, <a class=\"id\" href=\"#seqno\">seqno</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cond_node\">cond_node</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irq\">write_lock_irq</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lenp\">lenp</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_bools\">p_bools</a>.<a class=\"id\" href=\"#nprim\">nprim</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> != <a class=\"id\" href=\"#lenp\">lenp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!!<a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>] != <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#bool_val_to_struct\">bool_val_to_struct</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log\">audit_log</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AUDIT_MAC_CONFIG_CHANGE\">AUDIT_MAC_CONFIG_CHANGE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"bool=%s val=%d old_val=%d auid=%u ses=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_bool_val_to_name\">p_bool_val_to_name</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!!<a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#bool_val_to_struct\">bool_val_to_struct</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_loginuid\">audit_get_loginuid</a>(<a class=\"id\" href=\"#current\">current</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_sessionid\">audit_get_sessionid</a>(<a class=\"id\" href=\"#current\">current</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#bool_val_to_struct\">bool_val_to_struct</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#state\">state</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#bool_val_to_struct\">bool_val_to_struct</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#state\">state</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#cond_list\">cond_list</a>; <a class=\"id\" href=\"#cur\">cur</a>; <a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#evaluate_cond_node\">evaluate_cond_node</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>, <a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seqno\">seqno</a> = ++<a class=\"id\" href=\"#latest_granting\">latest_granting</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avc_ss_reset\">avc_ss_reset</a>(<a class=\"id\" href=\"#seqno\">seqno</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selnl_notify_policyload\">selnl_notify_policyload</a>(<a class=\"id\" href=\"#seqno\">seqno</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_xfrm_notify_policyload\">selinux_xfrm_notify_policyload</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_get_bool_value\">security_get_bool_value</a>(int <a class=\"id\" href=\"#bool\">bool</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_bools\">p_bools</a>.<a class=\"id\" href=\"#nprim\">nprim</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bool\">bool</a> >= <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#bool_val_to_struct\">bool_val_to_struct</a>[<a class=\"id\" href=\"#bool\">bool</a>]-><a class=\"id\" href=\"#state\">state</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#security_preserve_bools\">security_preserve_bools</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#nbools\">nbools</a> = 0, *<a class=\"id\" href=\"#bvalues\">bvalues</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>char **<a class=\"id\" href=\"#bnames\">bnames</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cond_bool_datum\">cond_bool_datum</a> *<a class=\"id\" href=\"#booldatum\">booldatum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cond_node\">cond_node</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_get_bools\">security_get_bools</a>(&amp;<a class=\"id\" href=\"#nbools\">nbools</a>, &amp;<a class=\"id\" href=\"#bnames\">bnames</a>, &amp;<a class=\"id\" href=\"#bvalues\">bvalues</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nbools\">nbools</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#booldatum\">booldatum</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_bools\">p_bools</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#bnames\">bnames</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#booldatum\">booldatum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#booldatum\">booldatum</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#bvalues\">bvalues</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#cond_list\">cond_list</a>; <a class=\"id\" href=\"#cur\">cur</a>; <a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#evaluate_cond_node\">evaluate_cond_node</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bnames\">bnames</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nbools\">nbools</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bnames\">bnames</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bnames\">bnames</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bvalues\">bvalues</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * security_sid_mls_copy() - computes a new sid based on the given</span>", 
"<span class=\"comment\"> * sid and the mls portion of mls_sid.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_sid_mls_copy\">security_sid_mls_copy</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mls_sid\">mls_sid</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#new_sid\">new_sid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#context1\">context1</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#context2\">context2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> <a class=\"id\" href=\"#newcon\">newcon</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a> || !<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#mls_enabled\">mls_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#new_sid\">new_sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_init\">context_init</a>(&amp;<a class=\"id\" href=\"#newcon\">newcon</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context1\">context1</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context1\">context1</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context2\">context2</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#mls_sid\">mls_sid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context2\">context2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#mls_sid\">mls_sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newcon\">newcon</a>.<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#context1\">context1</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newcon\">newcon</a>.<a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#context1\">context1</a>-><a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newcon\">newcon</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#context1\">context1</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#mls_context_cpy\">mls_context_cpy</a>(&amp;<a class=\"id\" href=\"#newcon\">newcon</a>, <a class=\"id\" href=\"#context2\">context2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the validity of the new context. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_context_isvalid\">policydb_context_isvalid</a>(&amp;<a class=\"id\" href=\"#policydb\">policydb</a>, &amp;<a class=\"id\" href=\"#newcon\">newcon</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#convert_context_handle_invalid_context\">convert_context_handle_invalid_context</a>(&amp;<a class=\"id\" href=\"#newcon\">newcon</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_context_to_sid\">sidtab_context_to_sid</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, &amp;<a class=\"id\" href=\"#newcon\">newcon</a>, <a class=\"id\" href=\"#new_sid\">new_sid</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context_struct_to_string\">context_struct_to_string</a>(&amp;<a class=\"id\" href=\"#newcon\">newcon</a>, &amp;<a class=\"id\" href=\"#s\">s</a>, &amp;<a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log\">audit_log</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#AUDIT_SELINUX_ERR\">AUDIT_SELINUX_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"security_sid_mls_copy: invalid context %s\", <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(&amp;<a class=\"id\" href=\"#newcon\">newcon</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_net_peersid_resolve - Compare and resolve two network peer SIDs</span>", 
"<span class=\"comment\"> * @nlbl_sid: NetLabel SID</span>", 
"<span class=\"comment\"> * @nlbl_type: NetLabel labeling protocol type</span>", 
"<span class=\"comment\"> * @xfrm_sid: XFRM SID</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Compare the @nlbl_sid and @xfrm_sid values and if the two SIDs can be</span>", 
"<span class=\"comment\"> * resolved into a single SID it is returned via @peer_sid and the function</span>", 
"<span class=\"comment\"> * returns zero.  Otherwise @peer_sid is set to SECSID_NULL and the function</span>", 
"<span class=\"comment\"> * returns a negative value.  A table summarizing the behavior is below:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *                                 | function return |      @sid</span>", 
"<span class=\"comment\"> *   ------------------------------+-----------------+-----------------</span>", 
"<span class=\"comment\"> *   no peer labels                |        0        |    SECSID_NULL</span>", 
"<span class=\"comment\"> *   single peer label             |        0        |    &lt;peer_label&gt;</span>", 
"<span class=\"comment\"> *   multiple, consistent labels   |        0        |    &lt;peer_label&gt;</span>", 
"<span class=\"comment\"> *   multiple, inconsistent labels |    -&lt;errno&gt;     |    SECSID_NULL</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#security_net_peersid_resolve\">security_net_peersid_resolve</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nlbl_type\">nlbl_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#xfrm_sid\">xfrm_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#peer_sid\">peer_sid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#nlbl_ctx\">nlbl_ctx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#xfrm_ctx\">xfrm_ctx</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* handle the common (which also happens to be the set of easy) cases</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * right away, these two if statements catch everything involving a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * single or absent peer SID/label */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xfrm_sid\">xfrm_sid</a> == <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE: an nlbl_type == NETLBL_NLTYPE_UNLABELED is a \"fallback\" label</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and is treated as if nlbl_sid == SECSID_NULL when a XFRM SID/label</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is present */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a> == <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a> || <a class=\"id\" href=\"#nlbl_type\">nlbl_type</a> == <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED\">NETLBL_NLTYPE_UNLABELED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#xfrm_sid\">xfrm_sid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we don't need to check ss_initialized here since the only way both</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * nlbl_sid and xfrm_sid are not equal to SECSID_NULL would be if the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * security server was initialized and ss_initialized was true */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#mls_enabled\">mls_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlbl_ctx\">nlbl_ctx</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nlbl_ctx\">nlbl_ctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_slowpath\">out_slowpath</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfrm_ctx\">xfrm_ctx</a> = <a class=\"id\" href=\"#sidtab_search\">sidtab_search</a>(&amp;<a class=\"id\" href=\"#sidtab\">sidtab</a>, <a class=\"id\" href=\"#xfrm_sid\">xfrm_sid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm_ctx\">xfrm_ctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized SID %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#xfrm_sid\">xfrm_sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_slowpath\">out_slowpath</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = (<a class=\"id\" href=\"#mls_context_cmp\">mls_context_cmp</a>(<a class=\"id\" href=\"#nlbl_ctx\">nlbl_ctx</a>, <a class=\"id\" href=\"#xfrm_ctx\">xfrm_ctx</a>) ? 0 : -<a class=\"id\" href=\"#EACCES\">EACCES</a>);", 
"", 
"<a class=\"id\" href=\"#out_slowpath\">out_slowpath</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* at present NetLabel SIDs/labels really only carry MLS</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * information so if the MLS portion of the NetLabel SID</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * matches the MLS portion of the labeled XFRM SID/label</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * then pass along the XFRM SID as it is the most</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * expressive */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#xfrm_sid\">xfrm_sid</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#get_classes_callback\">get_classes_callback</a>(void *<a class=\"id\" href=\"#k\">k</a>, void *<a class=\"id\" href=\"#d\">d</a>, void *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#datum\">datum</a> = <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#k\">k</a>, **<a class=\"id\" href=\"#classes\">classes</a> = <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#datum\">datum</a>-><a class=\"id\" href=\"#value\">value</a> - 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#value\">value</a>] = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#value\">value</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_get_classes\">security_get_classes</a>(char ***<a class=\"id\" href=\"#classes\">classes</a>, int *<a class=\"id\" href=\"#nclasses\">nclasses</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#nclasses\">nclasses</a> = <a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#nprim\">nprim</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#classes\">classes</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(*<a class=\"id\" href=\"#nclasses\">nclasses</a>, sizeof(**<a class=\"id\" href=\"#classes\">classes</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#classes\">classes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#get_classes_callback\">get_classes_callback</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#classes\">classes</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; *<a class=\"id\" href=\"#nclasses\">nclasses</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>((*<a class=\"id\" href=\"#classes\">classes</a>)[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(*<a class=\"id\" href=\"#classes\">classes</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#get_permissions_callback\">get_permissions_callback</a>(void *<a class=\"id\" href=\"#k\">k</a>, void *<a class=\"id\" href=\"#d\">d</a>, void *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#perm_datum\">perm_datum</a> *<a class=\"id\" href=\"#datum\">datum</a> = <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#k\">k</a>, **<a class=\"id\" href=\"#perms\">perms</a> = <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#datum\">datum</a>-><a class=\"id\" href=\"#value\">value</a> - 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#value\">value</a>] = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#perms\">perms</a>[<a class=\"id\" href=\"#value\">value</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_get_permissions\">security_get_permissions</a>(char *<a class=\"id\" href=\"#class\">class</a>, char ***<a class=\"id\" href=\"#perms\">perms</a>, int *<a class=\"id\" href=\"#nperms\">nperms</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#match\">match</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#match\">match</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#policydb\">policydb</a>.<a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#class\">class</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#match\">match</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: %s:  unrecognized class %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#class\">class</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#nperms\">nperms</a> = <a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#nprim\">nprim</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#perms\">perms</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(*<a class=\"id\" href=\"#nperms\">nperms</a>, sizeof(**<a class=\"id\" href=\"#perms\">perms</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#perms\">perms</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#comdatum\">comdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_permissions_callback\">get_permissions_callback</a>, *<a class=\"id\" href=\"#perms\">perms</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#get_permissions_callback\">get_permissions_callback</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#perms\">perms</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#policy_rwlock\">policy_rwlock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; *<a class=\"id\" href=\"#nperms\">nperms</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>((*<a class=\"id\" href=\"#perms\">perms</a>)[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(*<a class=\"id\" href=\"#perms\">perms</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_get_reject_unknown\">security_get_reject_unknown</a>(void)", 
"{", 
];
xr_frag_insert('l/9b/d302f00159d2212c249fcd9e7e0dd14e92a162.xr', __xr_tmp);
