var __xr_tmp = [
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#num_bvecs\">num_bvecs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#remaining\">remaining</a> = <a class=\"id\" href=\"#where\">where</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * where-&gt;count may be zero if rw holds a write barrier and we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * need to send a zero-sized barrier.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Allocate a suitably sized-bio.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_bvecs\">num_bvecs</a> = <a class=\"id\" href=\"#dm_sector_div_up\">dm_sector_div_up</a>(<a class=\"id\" href=\"#remaining\">remaining</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> >> <a class=\"id\" href=\"#SECTOR_SHIFT\">SECTOR_SHIFT</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_bvecs\">num_bvecs</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#bio_get_nr_vecs\">bio_get_nr_vecs</a>(<a class=\"id\" href=\"#where\">where</a>-><a class=\"id\" href=\"#bdev\">bdev</a>), <a class=\"id\" href=\"#num_bvecs\">num_bvecs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_alloc_bioset\">bio_alloc_bioset</a>(<a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>, <a class=\"id\" href=\"#num_bvecs\">num_bvecs</a>, <a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#bios\">bios</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> = <a class=\"id\" href=\"#where\">where</a>-><a class=\"id\" href=\"#sector\">sector</a> + (<a class=\"id\" href=\"#where\">where</a>-><a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#remaining\">remaining</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = <a class=\"id\" href=\"#where\">where</a>-><a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#endio\">endio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_destructor\">bi_destructor</a> = <a class=\"id\" href=\"#dm_bio_destructor\">dm_bio_destructor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#store_io_and_region_in_bio\">store_io_and_region_in_bio</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#io\">io</a>, <a class=\"id\" href=\"#region\">region</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Try and add as many pages as possible.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#remaining\">remaining</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#get_page\">get_page</a>(<a class=\"id\" href=\"#dp\">dp</a>, &amp;<a class=\"id\" href=\"#page\">page</a>, &amp;<a class=\"id\" href=\"#len\">len</a>, &amp;<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#to_bytes\">to_bytes</a>(<a class=\"id\" href=\"#remaining\">remaining</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio_add_page\">bio_add_page</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#offset\">offset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#to_sector\">to_sector</a>(<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#next_page\">next_page</a>(<a class=\"id\" href=\"#dp\">dp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#submit_bio\">submit_bio</a>(<a class=\"id\" href=\"#rw\">rw</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#remaining\">remaining</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dispatch_io\">dispatch_io</a>(int <a class=\"id\" href=\"#rw\">rw</a>, unsigned int <a class=\"id\" href=\"#num_regions\">num_regions</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> *<a class=\"id\" href=\"#where\">where</a>, struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#io\">io</a> *<a class=\"id\" href=\"#io\">io</a>, int <a class=\"id\" href=\"#sync\">sync</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dpages\">dpages</a> <a class=\"id\" href=\"#old_pages\">old_pages</a> = *<a class=\"id\" href=\"#dp\">dp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#num_regions\">num_regions</a> &gt; <a class=\"id\" href=\"#DM_IO_MAX_REGIONS\">DM_IO_MAX_REGIONS</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sync\">sync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rw\">rw</a> |= <a class=\"id\" href=\"#REQ_SYNC\">REQ_SYNC</a> | <a class=\"id\" href=\"#REQ_UNPLUG\">REQ_UNPLUG</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For multiple regions we need to be careful to rewind</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the dp object for each call to do_region.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_regions\">num_regions</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dp\">dp</a> = <a class=\"id\" href=\"#old_pages\">old_pages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#where\">where</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#count\">count</a> || (<a class=\"id\" href=\"#rw\">rw</a> &amp; <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_region\">do_region</a>(<a class=\"id\" href=\"#rw\">rw</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#where\">where</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#io\">io</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Drop the extra reference that we were holding to avoid</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the io being completed too early.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dec_count\">dec_count</a>(<a class=\"id\" href=\"#io\">io</a>, 0, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sync_io\">sync_io</a>(struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#client\">client</a>, unsigned int <a class=\"id\" href=\"#num_regions\">num_regions</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> *<a class=\"id\" href=\"#where\">where</a>, int <a class=\"id\" href=\"#rw\">rw</a>, struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned long *<a class=\"id\" href=\"#error_bits\">error_bits</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * gcc &lt;= 4.3 can't do the alignment for stack variables, so we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * align it on our own.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * volatile prevents the optimizer from removing or reusing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * \"io_\" field from the stack frame (allowed in ANSI C).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>volatile char <a class=\"id\" href=\"#io_\">io_</a>[sizeof(struct <a class=\"id\" href=\"#io\">io</a>) + <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#io\">io</a>) - 1];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io\">io</a> *<a class=\"id\" href=\"#io\">io</a> = (struct <a class=\"id\" href=\"#io\">io</a> *)<a class=\"id\" href=\"#PTR_ALIGN\">PTR_ALIGN</a>(&amp;<a class=\"id\" href=\"#io_\">io_</a>, <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#io\">io</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_regions\">num_regions</a> &gt; 1 && (<a class=\"id\" href=\"#rw\">rw</a> &amp; <a class=\"id\" href=\"#RW_MASK\">RW_MASK</a>) != <a class=\"id\" href=\"#WRITE\">WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#error_bits\">error_bits</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#eopnotsupp_bits\">eopnotsupp_bits</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#count\">count</a>, 1); <span class=\"comment\">/* see dispatch_io() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#sleeper\">sleeper</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#client\">client</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dispatch_io\">dispatch_io</a>(<a class=\"id\" href=\"#rw\">rw</a>, <a class=\"id\" href=\"#num_regions\">num_regions</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#io\">io</a>, 1);", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_schedule\">io_schedule</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#eopnotsupp_bits\">eopnotsupp_bits</a> && (<a class=\"id\" href=\"#rw\">rw</a> &amp; <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rw\">rw</a> &= ~<a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error_bits\">error_bits</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#error_bits\">error_bits</a> = <a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#error_bits\">error_bits</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#error_bits\">error_bits</a> ? -<a class=\"id\" href=\"#EIO\">EIO</a> : 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#async_io\">async_io</a>(struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#client\">client</a>, unsigned int <a class=\"id\" href=\"#num_regions\">num_regions</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> *<a class=\"id\" href=\"#where\">where</a>, int <a class=\"id\" href=\"#rw\">rw</a>, struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#io_notify_fn\">io_notify_fn</a> <a class=\"id\" href=\"#fn\">fn</a>, void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io\">io</a> *<a class=\"id\" href=\"#io\">io</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_regions\">num_regions</a> &gt; 1 && (<a class=\"id\" href=\"#rw\">rw</a> &amp; <a class=\"id\" href=\"#RW_MASK\">RW_MASK</a>) != <a class=\"id\" href=\"#WRITE\">WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>(1, <a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a> = <a class=\"id\" href=\"#mempool_alloc\">mempool_alloc</a>(<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#pool\">pool</a>, <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#error_bits\">error_bits</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#eopnotsupp_bits\">eopnotsupp_bits</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#count\">count</a>, 1); <span class=\"comment\">/* see dispatch_io() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#sleeper\">sleeper</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#client\">client</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dispatch_io\">dispatch_io</a>(<a class=\"id\" href=\"#rw\">rw</a>, <a class=\"id\" href=\"#num_regions\">num_regions</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#io\">io</a>, 0);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dp_init\">dp_init</a>(struct <a class=\"id\" href=\"#dm_io_request\">dm_io_request</a> *<a class=\"id\" href=\"#io_req\">io_req</a>, struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up dpages based on memory type */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#mem\">mem</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DM_IO_PAGE_LIST\">DM_IO_PAGE_LIST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_dp_init\">list_dp_init</a>(<a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#mem\">mem</a>.<a class=\"id\" href=\"#ptr\">ptr</a>.<a class=\"id\" href=\"#pl\">pl</a>, <a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#mem\">mem</a>.<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DM_IO_BVEC\">DM_IO_BVEC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec_dp_init\">bvec_dp_init</a>(<a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#mem\">mem</a>.<a class=\"id\" href=\"#ptr\">ptr</a>.<a class=\"id\" href=\"#bvec\">bvec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DM_IO_VMA\">DM_IO_VMA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vm_dp_init\">vm_dp_init</a>(<a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#mem\">mem</a>.<a class=\"id\" href=\"#ptr\">ptr</a>.<a class=\"id\" href=\"#vma\">vma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DM_IO_KMEM\">DM_IO_KMEM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#km_dp_init\">km_dp_init</a>(<a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#mem\">mem</a>.<a class=\"id\" href=\"#ptr\">ptr</a>.<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * New collapsed (a)synchronous interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the IO is asynchronous (i.e. it has notify.fn), you must either unplug</span>", 
"<span class=\"comment\"> * the queue with blk_unplug() some time later or set REQ_SYNC in</span>", 
"<span class=\"comment\">io_req-&gt;bi_rw. If you fail to do one of these, the IO will be submitted to</span>", 
"<span class=\"comment\"> * the disk after q-&gt;unplug_delay, which defaults to 3ms in blk-settings.c.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_io\">dm_io</a>(struct <a class=\"id\" href=\"#dm_io_request\">dm_io_request</a> *<a class=\"id\" href=\"#io_req\">io_req</a>, unsigned <a class=\"id\" href=\"#num_regions\">num_regions</a>,", 
"<span class=\"ts\"/>  struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> *<a class=\"id\" href=\"#where\">where</a>, unsigned long *<a class=\"id\" href=\"#sync_error_bits\">sync_error_bits</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dpages\">dpages</a> <a class=\"id\" href=\"#dp\">dp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dp_init\">dp_init</a>(<a class=\"id\" href=\"#io_req\">io_req</a>, &amp;<a class=\"id\" href=\"#dp\">dp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#notify\">notify</a>.<a class=\"id\" href=\"#fn\">fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sync_io\">sync_io</a>(<a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#client\">client</a>, <a class=\"id\" href=\"#num_regions\">num_regions</a>, <a class=\"id\" href=\"#where\">where</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a>, &amp;<a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#sync_error_bits\">sync_error_bits</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#async_io\">async_io</a>(<a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#client\">client</a>, <a class=\"id\" href=\"#num_regions\">num_regions</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#notify\">notify</a>.<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#io_req\">io_req</a>-><a class=\"id\" href=\"#notify\">notify</a>.<a class=\"id\" href=\"#context\">context</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dm_io\">dm_io</a>);", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dm_io_init\">dm_io_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_dm_io_cache\">_dm_io_cache</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#io\">io</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#_dm_io_cache\">_dm_io_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_io_exit\">dm_io_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#_dm_io_cache\">_dm_io_cache</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_dm_io_cache\">_dm_io_cache</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
];
xr_frag_insert('l/9b/f342a6a8881a83c5e4289f19cf1985957e92dc.xr', __xr_tmp);
