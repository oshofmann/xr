var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bios_ebda\">bios_ebda</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIOS_LOWMEM_KILOBYTES\">BIOS_LOWMEM_KILOBYTES</a> 0x413", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The BIOS places the EBDA/XBDA at the top of conventional</span>", 
"<span class=\"comment\"> * memory, and usually decreases the reported amount of</span>", 
"<span class=\"comment\"> * conventional memory (int 0x12) too. This also contains a</span>", 
"<span class=\"comment\"> * workaround for Dell systems that neglect to reserve EBDA.</span>", 
"<span class=\"comment\"> * The same workaround also avoids a problem with the AMD768MPX</span>", 
"<span class=\"comment\"> * chipset: reserve a page before VGA to prevent PCI prefetch</span>", 
"<span class=\"comment\"> * into it (errata #56). Usually the page is reserved anyways,</span>", 
"<span class=\"comment\"> * unless you have no PS/2 mouse plugged in.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_ebda_region\">reserve_ebda_region</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#lowmem\">lowmem</a>, <a class=\"id\" href=\"#ebda_addr\">ebda_addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* To determine the position of the EBDA and the */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* end of conventional memory, we need to look at */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* the BIOS data area. In a paravirtual environment */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* that area is absent. We'll just have to assume */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* that the paravirt case can handle memory setup */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* correctly, without our help. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#paravirt_enabled\">paravirt_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* end of low (conventional) memory */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lowmem\">lowmem</a> = *(unsigned short *)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#BIOS_LOWMEM_KILOBYTES\">BIOS_LOWMEM_KILOBYTES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lowmem\">lowmem</a> <<= 10;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* start of EBDA area */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebda_addr\">ebda_addr</a> = <a class=\"id\" href=\"#get_bios_ebda\">get_bios_ebda</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fixup: bios puts an EBDA in the top 64K segment */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* of conventional memory, but does not adjust lowmem. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#lowmem\">lowmem</a> - <a class=\"id\" href=\"#ebda_addr\">ebda_addr</a>) <= 0x10000)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lowmem\">lowmem</a> = <a class=\"id\" href=\"#ebda_addr\">ebda_addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fixup: bios does not report an EBDA at all. */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Some old Dells seem to need 4k anyhow (bugzilla 2990) */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ebda_addr\">ebda_addr</a> == 0) && (<a class=\"id\" href=\"#lowmem\">lowmem</a> >= 0x9f000))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lowmem\">lowmem</a> = 0x9f000;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Paranoia: should never happen, but... */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#lowmem\">lowmem</a> == 0) || (<a class=\"id\" href=\"#lowmem\">lowmem</a> >= 0x100000))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lowmem\">lowmem</a> = 0x9f000;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* reserve all memory between lowmem and the 1MB mark */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_early_overlap_ok\">reserve_early_overlap_ok</a>(<a class=\"id\" href=\"#lowmem\">lowmem</a>, 0x100000, \"BIOS reserved\");", 
"}", 
];
xr_frag_insert('l/9b/f8cddc8c40a0878e347f037dc9518914a84bf9.xr', __xr_tmp);
