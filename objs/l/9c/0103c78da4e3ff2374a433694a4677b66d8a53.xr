var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * n_tty.c --- implements the N_TTY line discipline.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This code used to be in tty_io.c, but things are getting hairy</span>", 
"<span class=\"comment\"> * enough that it made sense to split things off.  (The N_TTY</span>", 
"<span class=\"comment\"> * processing has changed so much that it's hardly recognizable,</span>", 
"<span class=\"comment\"> * anyway...)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that the open routine for N_TTY is guaranteed never to return</span>", 
"<span class=\"comment\"> * an error.  This is because Linux will fall back to setting a line</span>", 
"<span class=\"comment\"> * to N_TTY if it can not switch to any other line discipline.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by Theodore Ts'o, Copyright 1994.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file also contains code originally written by Linus Torvalds,</span>", 
"<span class=\"comment\"> * Copyright 1991, 1992, 1993, and by Julian Cowley, Copyright 1994.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file may be redistributed under the terms of the GNU General Public</span>", 
"<span class=\"comment\"> * License.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Reduced memory usage for older ARM systems  - Russell King.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 2000/01/20   Fixed SMP locking on put_tty_queue using bits of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>the patch by Andrew J. Kroll &lt;ag784@freenet.buffalo.edu&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>who actually finally proved there really was a race.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 2002/03/18   Implemented n_tty_wakeup to send SIGIO POLL_OUTs to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>waiting writing processes-Sapan Bhatia &lt;sapan@corewars.org&gt;.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Also fixed a bug in BLOCKING mode where n_tty_write returns</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>EAGAIN</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty\">tty</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* number of characters left in xmit buffer before select has we have room */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#WAKEUP_CHARS\">WAKEUP_CHARS</a> 256", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This defines the low- and high-watermarks for throttling and</span>", 
"<span class=\"comment\"> * unthrottling the TTY driver.  These watermarks are used for</span>", 
"<span class=\"comment\"> * controlling the space in the read buffer.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_THRESHOLD_THROTTLE\">TTY_THRESHOLD_THROTTLE</a><span class=\"ts\"/><span class=\"ts\"/>128 <span class=\"comment\">/* now based on remaining room */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_THRESHOLD_UNTHROTTLE\">TTY_THRESHOLD_UNTHROTTLE</a> <span class=\"ts\"/>128", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Special byte codes used in the echo buffer to represent operations</span>", 
"<span class=\"comment\"> * or special handling of characters.  Bytes in the echo buffer that</span>", 
"<span class=\"comment\"> * are not part of such special blocks are treated as normal character</span>", 
"<span class=\"comment\"> * codes.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a> 0xff", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ECHO_OP_MOVE_BACK_COL\">ECHO_OP_MOVE_BACK_COL</a> 0x80", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ECHO_OP_SET_CANON_COL\">ECHO_OP_SET_CANON_COL</a> 0x81", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ECHO_OP_ERASE_TAB\">ECHO_OP_ERASE_TAB</a> 0x82", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tty_put_user\">tty_put_user</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, unsigned char <a class=\"id\" href=\"#x\">x</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_audit_add_data\">tty_audit_add_data</a>(<a class=\"id\" href=\"#tty\">tty</a>, &amp;<a class=\"id\" href=\"#x\">x</a>, 1);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#ptr\">ptr</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_set__room<span class=\"ts\"/>-<span class=\"ts\"/>receive space</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called by the driver to find out how much data it is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>permitted to feed to the line discipline without any being lost</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and thus to manage flow control. Not serialized. Answers for the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>\"instant\".</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#n_tty_set_room\">n_tty_set_room</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* tty-&gt;read_cnt is not read locked ? */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> - 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we are doing input canonicalization, and there are no</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pending newlines, let characters through without limit, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that erase characters will be handled.  Other excess</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * characters will be beeped.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#left\">left</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#icanon\">icanon</a> && !<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_data\">canon_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#receive_room\">receive_room</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#put_tty_queue_nolock\">put_tty_queue_nolock</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> &lt; <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>[<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>] = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> + 1) &amp; (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>put_tty_queue<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>add character to tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: character</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add a character to the tty read_buf queue. This is done under the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>read_lock to serialize character addition and also to protect us</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>against parallel reads or flushes</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>The problem of stomping on the buffers ends here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Why didn't anyone see this one coming? --AJK</span>", 
"<span class=\"comment\"><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue_nolock\">put_tty_queue_nolock</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>check_unthrottle<span class=\"ts\"/>-<span class=\"ts\"/>allow new receive data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty; tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Check whether to call the driver unthrottle functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Can sleep, may be called under the atomic_read_lock mutex but</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>this is not guaranteed.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#check_unthrottle\">check_unthrottle</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unthrottle\">tty_unthrottle</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reset_buffer_flags<span class=\"ts\"/>-<span class=\"ts\"/>reset buffer state</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal to reset</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Reset the read buffer counters, clear the flags,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and make sure the driver is unthrottled. Called</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>from n_tty_open() and n_tty_flush_buffer().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: tty_read_lock for read fields.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#reset_buffer_flags\">reset_buffer_flags</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_overrun\">echo_overrun</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_data\">canon_data</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#erasing\">erasing</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_flags\">read_flags</a>, 0, sizeof <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_flags\">read_flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n_tty_set_room\">n_tty_set_room</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#check_unthrottle\">check_unthrottle</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_flush_buffer<span class=\"ts\"/>-<span class=\"ts\"/>clean input queue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty:<span class=\"ts\"/>terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Flush the input buffer. Called when the line discipline is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>being closed, when the tty layer wants the buffer flushed (eg</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>at hangup) or when the N_TTY line discipline internally has to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>clean the pending queue (for example some signals).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: ctrl_lock, read_lock.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#n_tty_flush_buffer\">n_tty_flush_buffer</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* clear everything and unthrottle the driver */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reset_buffer_flags\">reset_buffer_flags</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#packet\">packet</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_status\">ctrl_status</a> |= <a class=\"id\" href=\"#TIOCPKT_FLUSHREAD\">TIOCPKT_FLUSHREAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_chars_in_buffer<span class=\"ts\"/>-<span class=\"ts\"/>report available bytes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Report the number of characters buffered to be delivered to user</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>at this instant in time.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: read_lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#n_tty_chars_in_buffer\">n_tty_chars_in_buffer</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#n\">n</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#icanon\">icanon</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_data\">canon_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> &gt; <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> + (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is_utf8_continuation<span class=\"ts\"/>-<span class=\"ts\"/>utf8 multibyte check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: byte to check</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns true if the utf8 character 'c' is a multibyte continuation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>character. We use this to correctly compute the on screen size</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of the character when printing</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_utf8_continuation\">is_utf8_continuation</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#c\">c</a> &amp; 0xc0) == 0x80;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is_continuation<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>multibyte check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: byte to check</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns true if the utf8 character 'c' is a multibyte continuation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>character and the terminal is in unicode mode.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_continuation\">is_continuation</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#I_IUTF8\">I_IUTF8</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#is_utf8_continuation\">is_utf8_continuation</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>do_output_char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>output one character</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: character (or partial unicode symbol)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@space: space available in tty driver write buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is a helper function that handles one output character</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(including special characters like TAB, CR, LF, etc.),</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>doing OPOST processing and putting the results in the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty driver's write buffer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note that Linux currently ignores TABDLY, CRDLY, VTDLY, FFDLY</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and NLDLY.  They simply aren't relevant in the world today.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If you ever need them, add them here.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns the number of bytes of buffer space used or -1 if</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>no space left.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: should be called under the output_lock to protect</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/> the column state and space left in the buffer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#do_output_char\">do_output_char</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#space\">space</a>)", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#spaces\">spaces</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#space\">space</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/>case '\\n':", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_ONLRET\">O_ONLRET</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_ONLCR\">O_ONLCR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#space\">space</a> &lt; 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_column\">canon_column</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#tty\">tty</a>, \"\\r\\n\", 2);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_column\">canon_column</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case '\\r':", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_ONOCR\">O_ONOCR</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_OCRNL\">O_OCRNL</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = '\\n';", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_ONLRET\">O_ONLRET</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_column\">canon_column</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_column\">canon_column</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case '\\t':", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spaces\">spaces</a> = 8 - (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> &amp; 7);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_TABDLY\">O_TABDLY</a>(<a class=\"id\" href=\"#tty\">tty</a>) == <a class=\"id\" href=\"#XTABS\">XTABS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#space\">space</a> &lt; <a class=\"id\" href=\"#spaces\">spaces</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> += <a class=\"id\" href=\"#spaces\">spaces</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#tty\">tty</a>, \"        \", <a class=\"id\" href=\"#spaces\">spaces</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#spaces\">spaces</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> += <a class=\"id\" href=\"#spaces\">spaces</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case '\\b':", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#iscntrl\">iscntrl</a>(<a class=\"id\" href=\"#c\">c</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_OLCUC\">O_OLCUC</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#toupper\">toupper</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_continuation\">is_continuation</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_put_char\">tty_put_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>process_output<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>output post processor</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: character (or partial unicode symbol)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Output one character with OPOST processing.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns -1 when the output device is full and the character</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>must be retried.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: output_lock to protect column state and space left</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/> (also, this is called from n_tty_write under the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  tty layer write lock)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#process_output\">process_output</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#output_lock\">output_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> = <a class=\"id\" href=\"#tty_write_room\">tty_write_room</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#do_output_char\">do_output_char</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#space\">space</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#output_lock\">output_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>process_output_block<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>block post processor</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: character buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@nr: number of bytes to output</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Output a block of characters with OPOST processing.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns the number of characters output.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This path is used to speed up block console writes, among other</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>things when processing blocks of output data. It handles only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the simple cases normally found and helps to generate blocks of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>symbols for the console driver and thus improve performance.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: output_lock to protect column state and space left</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/> (also, this is called from n_tty_write under the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  tty layer write lock)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#process_output_block\">process_output_block</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a>;", 
"<span class=\"ts\"/>int <span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#cp\">cp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#output_lock\">output_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> = <a class=\"id\" href=\"#tty_write_room\">tty_write_room</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#space\">space</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#output_lock\">output_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> &gt; <a class=\"id\" href=\"#space\">space</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#space\">space</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#buf\">buf</a>; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr\">nr</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#cp\">cp</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#c\">c</a> = *<a class=\"id\" href=\"#cp\">cp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case '\\n':", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_ONLRET\">O_ONLRET</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_ONLCR\">O_ONLCR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#break_out\">break_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_column\">canon_column</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case '\\r':", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_ONOCR\">O_ONOCR</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#break_out\">break_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_OCRNL\">O_OCRNL</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#break_out\">break_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_column\">canon_column</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case '\\t':", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#break_out\">break_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case '\\b':", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#iscntrl\">iscntrl</a>(<a class=\"id\" href=\"#c\">c</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_OLCUC\">O_OLCUC</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#break_out\">break_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_continuation\">is_continuation</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#break_out\">break_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#output_lock\">output_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>process_echoes<span class=\"ts\"/>-<span class=\"ts\"/>write pending echo characters</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Write previously buffered echo (and other ldisc-generated)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>characters to the tty.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Characters generated by the ldisc (including echoes) need to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>be buffered because the driver's write buffer can fill during</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>heavy program output.  Echoing straight to the driver will</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>often fail under these conditions, causing lost characters and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>resulting mismatches of ldisc state information.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Since the ldisc state must represent the characters actually sent</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to the driver at the time of the write, operations like certain</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>changes in column state are also saved in the buffer and executed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>here.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A circular fifo buffer is used so that the most recent characters</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>are prioritized.  Also, when control characters are echoed with a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>prefixed \"^\", the pair is treated atomically and thus not separated.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: output_lock to protect column state and space left,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/> echo_lock to protect the echo buffer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#process_echoes\">process_echoes</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a>, <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#cp\">cp</a>, *<a class=\"id\" href=\"#buf_end\">buf_end</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#output_lock\">output_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> = <a class=\"id\" href=\"#tty_write_room\">tty_write_room</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf_end\">buf_end</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a> + <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a> + <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#nr\">nr</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = *<a class=\"id\" href=\"#cp\">cp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#opp\">opp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#no_space_left\">no_space_left</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the buffer byte is the start of a multi-byte</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * operation, get the next byte, which is either the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * op code or a control character value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opp\">opp</a> = <a class=\"id\" href=\"#cp\">cp</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opp\">opp</a> == <a class=\"id\" href=\"#buf_end\">buf_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opp\">opp</a> -= <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a> = *<a class=\"id\" href=\"#opp\">opp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#op\">op</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num_chars\">num_chars</a>, <a class=\"id\" href=\"#num_bs\">num_bs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ECHO_OP_ERASE_TAB\">ECHO_OP_ERASE_TAB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#opp\">opp</a> == <a class=\"id\" href=\"#buf_end\">buf_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opp\">opp</a> -= <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_chars\">num_chars</a> = *<a class=\"id\" href=\"#opp\">opp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Determine how many columns to go back</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in order to erase the tab.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * This depends on the number of columns</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * used by other characters within the tab</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * area.  If this (modulo 8) count is from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the start of input rather than from a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * previous tab, we offset by canon column.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Otherwise, tab spacing is normal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#num_chars\">num_chars</a> &amp; 0x80))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_chars\">num_chars</a> += <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_column\">canon_column</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_bs\">num_bs</a> = 8 - (<a class=\"id\" href=\"#num_chars\">num_chars</a> &amp; 7);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_bs\">num_bs</a> &gt; <a class=\"id\" href=\"#space\">space</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_space_left\">no_space_left</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> -= <a class=\"id\" href=\"#num_bs\">num_bs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#num_bs\">num_bs</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_put_char\">tty_put_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, '\\b');", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> += 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> -= 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ECHO_OP_SET_CANON_COL\">ECHO_OP_SET_CANON_COL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_column\">canon_column</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ECHO_OP_MOVE_BACK_COL\">ECHO_OP_MOVE_BACK_COL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is an escaped echo op start code */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#space\">space</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_space_left\">no_space_left</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_put_char\">tty_put_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the op is not a special byte code,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * it is a ctrl char tagged to be echoed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * as \"^X\" (where X is the letter</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * representing the control char).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note that we must ensure there is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * enough space for the whole ctrl pair.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#space\">space</a> &lt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_space_left\">no_space_left</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_put_char\">tty_put_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, '^');", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_put_char\">tty_put_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#op\">op</a> ^ 0100);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#no_space_left\">no_space_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_OPOST\">O_OPOST</a>(<a class=\"id\" href=\"#tty\">tty</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_HW_COOK_OUT\">TTY_HW_COOK_OUT</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#do_output_char\">do_output_char</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#space\">space</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> -= <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#space\">space</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_put_char\">tty_put_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> -= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> += 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> -= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* When end of circular buffer reached, wrap around */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cp\">cp</a> >= <a class=\"id\" href=\"#buf_end\">buf_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> -= <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_overrun\">echo_overrun</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#num_processed\">num_processed</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a> - <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a> += <a class=\"id\" href=\"#num_processed\">num_processed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a> &= <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a> = <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_processed\">num_processed</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_overrun\">echo_overrun</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#output_lock\">output_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_chars\">flush_chars</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_chars\">flush_chars</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>add_echo_byte<span class=\"ts\"/>-<span class=\"ts\"/>add a byte to the echo buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: unicode byte to echo</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add a character or operation byte to the echo buffer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Should be called under the echo lock to protect the echo buffer.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#new_byte_pos\">new_byte_pos</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a> == <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Circular buffer is already at capacity */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_byte_pos\">new_byte_pos</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Since the buffer start position needs to be advanced,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be sure to step by a whole operation byte group.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a>[<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a>] == <a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a>[(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a> + 1) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - 1)] ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ECHO_OP_ERASE_TAB\">ECHO_OP_ERASE_TAB</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a> += 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a> -= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a> &= <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_overrun\">echo_overrun</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_byte_pos\">new_byte_pos</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_pos\">echo_pos</a> + <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_byte_pos\">new_byte_pos</a> &= <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_cnt\">echo_cnt</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a>[<a class=\"id\" href=\"#new_byte_pos\">new_byte_pos</a>] = <a class=\"id\" href=\"#c\">c</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>echo_move_back_col<span class=\"ts\"/>-<span class=\"ts\"/>add operation to move back a column</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add an operation to the echo buffer to move back one column.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: echo_lock to protect the echo buffer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#echo_move_back_col\">echo_move_back_col</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_MOVE_BACK_COL\">ECHO_OP_MOVE_BACK_COL</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>echo_set_canon_col<span class=\"ts\"/>-<span class=\"ts\"/>add operation to set the canon column</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add an operation to the echo buffer to set the canon column</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to the current column.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: echo_lock to protect the echo buffer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#echo_set_canon_col\">echo_set_canon_col</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_SET_CANON_COL\">ECHO_OP_SET_CANON_COL</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>echo_erase_tab<span class=\"ts\"/>-<span class=\"ts\"/>add operation to erase a tab</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@num_chars: number of character columns already used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@after_tab: true if num_chars starts after a previous tab</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add an operation to the echo buffer to erase a tab.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called by the eraser function, which knows how many character</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>columns have been used since either a previous tab or the start</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of input.  This information will be used later, along with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>canon column (if applicable), to go back the correct number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of columns.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: echo_lock to protect the echo buffer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#echo_erase_tab\">echo_erase_tab</a>(unsigned int <a class=\"id\" href=\"#num_chars\">num_chars</a>, int <a class=\"id\" href=\"#after_tab\">after_tab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_ERASE_TAB\">ECHO_OP_ERASE_TAB</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We only need to know this modulo 8 (tab spacing) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_chars\">num_chars</a> &= 7;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the high bit as a flag if num_chars is after a previous tab */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after_tab\">after_tab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_chars\">num_chars</a> |= 0x80;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#num_chars\">num_chars</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>echo_char_raw<span class=\"ts\"/>-<span class=\"ts\"/>echo a character raw</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: unicode byte to echo</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Echo user input back onto the screen. This must be called only when</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>L_ECHO(tty) is true. Called from the driver receive_buf path.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This variant does not treat control characters specially.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: echo_lock to protect the echo buffer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>echo_char<span class=\"ts\"/>-<span class=\"ts\"/>echo a character</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: unicode byte to echo</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Echo user input back onto the screen. This must be called only when</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>L_ECHO(tty) is true. Called from the driver receive_buf path.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This variant tags control characters to be echoed as \"^X\"</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(where X is the letter representing the control char).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: echo_lock to protect the echo buffer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#echo_char\">echo_char</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHOCTL\">L_ECHOCTL</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#iscntrl\">iscntrl</a>(<a class=\"id\" href=\"#c\">c</a>) && <a class=\"id\" href=\"#c\">c</a> != '\\t')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#ECHO_OP_START\">ECHO_OP_START</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_echo_byte\">add_echo_byte</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>finish_erasing<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>complete erase</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty doing the erase</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#finish_erasing\">finish_erasing</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#erasing\">erasing</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('/', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#erasing\">erasing</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>eraser<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>handle erase function</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: character input</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform erase and necessary output when an erase character is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>present in the stream from the driver layer. Handles the complexities</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of UTF-8 multibyte symbols.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: read_lock for tty buffers</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#eraser\">eraser</a>(unsigned char <a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>enum { <a class=\"id\" href=\"#ERASE\">ERASE</a>, <a class=\"id\" href=\"#WERASE\">WERASE</a>, <a class=\"id\" href=\"#KILL\">KILL</a> } <a class=\"id\" href=\"#kill_type\">kill_type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#seen_alnums\">seen_alnums</a>, <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: locking needed ? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> == <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* process_output('\\a', tty); */</span> <span class=\"comment\">/* what do you think? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#ERASE_CHAR\">ERASE_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_type\">kill_type</a> = <a class=\"id\" href=\"#ERASE\">ERASE</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#WERASE_CHAR\">WERASE_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_type\">kill_type</a> = <a class=\"id\" href=\"#WERASE\">WERASE</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> -= ((<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - 1));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#L_ECHOK\">L_ECHOK</a>(<a class=\"id\" href=\"#tty\">tty</a>) || !<a class=\"id\" href=\"#L_ECHOKE\">L_ECHOKE</a>(<a class=\"id\" href=\"#tty\">tty</a>) || !<a class=\"id\" href=\"#L_ECHOE\">L_ECHOE</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> -= ((<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - 1));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_erasing\">finish_erasing</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char\">echo_char</a>(<a class=\"id\" href=\"#KILL_CHAR\">KILL_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Add a newline if ECHOK is on and ECHOKE is off. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHOK\">L_ECHOK</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\n', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_type\">kill_type</a> = <a class=\"id\" href=\"#KILL\">KILL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seen_alnums\">seen_alnums</a> = 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: Locking ?? */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* erase a single possibly multibyte character */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = (<a class=\"id\" href=\"#head\">head</a> - 1) &amp; (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>[<a class=\"id\" href=\"#head\">head</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#is_continuation\">is_continuation</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#head\">head</a> != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* do not partially erase */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_continuation\">is_continuation</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kill_type\">kill_type</a> == <a class=\"id\" href=\"#WERASE\">WERASE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Equivalent to BSD's ALTWERASE. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#isalnum\">isalnum</a>(<a class=\"id\" href=\"#c\">c</a>) || <a class=\"id\" href=\"#c\">c</a> == '_')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seen_alnums\">seen_alnums</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#seen_alnums\">seen_alnums</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> - <a class=\"id\" href=\"#head\">head</a>) &amp; (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> = <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> -= <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHOPRT\">L_ECHOPRT</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#erasing\">erasing</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\\\', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#erasing\">erasing</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if cnt &gt; 1, output a multi-byte character */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char\">echo_char</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (--<a class=\"id\" href=\"#cnt\">cnt</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = (<a class=\"id\" href=\"#head\">head</a>+1) &amp; (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>[<a class=\"id\" href=\"#head\">head</a>], <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_move_back_col\">echo_move_back_col</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#kill_type\">kill_type</a> == <a class=\"id\" href=\"#ERASE\">ERASE</a> && !<a class=\"id\" href=\"#L_ECHOE\">L_ECHOE</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char\">echo_char</a>(<a class=\"id\" href=\"#ERASE_CHAR\">ERASE_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#c\">c</a> == '\\t') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num_chars\">num_chars</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#after_tab\">after_tab</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Count the columns used for characters</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * since the start of input or after a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * previous tab.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * This info is used to go back the correct</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * number of columns.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#tail\">tail</a> != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a> = (<a class=\"id\" href=\"#tail\">tail</a>-1) &amp; (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>[<a class=\"id\" href=\"#tail\">tail</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == '\\t') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#after_tab\">after_tab</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#iscntrl\">iscntrl</a>(<a class=\"id\" href=\"#c\">c</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHOCTL\">L_ECHOCTL</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_chars\">num_chars</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#is_continuation\">is_continuation</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_chars\">num_chars</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_erase_tab\">echo_erase_tab</a>(<a class=\"id\" href=\"#num_chars\">num_chars</a>, <a class=\"id\" href=\"#after_tab\">after_tab</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iscntrl\">iscntrl</a>(<a class=\"id\" href=\"#c\">c</a>) && <a class=\"id\" href=\"#L_ECHOCTL\">L_ECHOCTL</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\b', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>(' ', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\b', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#iscntrl\">iscntrl</a>(<a class=\"id\" href=\"#c\">c</a>) || <a class=\"id\" href=\"#L_ECHOCTL\">L_ECHOCTL</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\b', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>(' ', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\b', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kill_type\">kill_type</a> == <a class=\"id\" href=\"#ERASE\">ERASE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> == <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> && <a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_erasing\">finish_erasing</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>isig<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>handle the ISIG optio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sig: signal</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@flush: force flush</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called when a signal is being sent due to terminal input. This</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>may caus terminal flushing to take place according to the termios</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>settings and character used. Called from the driver receive_buf</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>path so serialized.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: ctrl_lock, read_lock (both via flush buffer)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#isig\">isig</a>(int <a class=\"id\" href=\"#sig\">sig</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#flush\">flush</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_pgrp\">kill_pgrp</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>, <a class=\"id\" href=\"#sig\">sig</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flush\">flush</a> || !<a class=\"id\" href=\"#L_NOFLSH\">L_NOFLSH</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_tty_flush_buffer\">n_tty_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_flush_buffer\">tty_driver_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_receive_break<span class=\"ts\"/>-<span class=\"ts\"/>handle break</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>An RS232 break event has been hit in the incoming bitstream. This</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>can cause a variety of events depending upon the termios settings.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called from the receive_buf path so single threaded.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#n_tty_receive_break\">n_tty_receive_break</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IGNBRK\">I_IGNBRK</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_BRKINT\">I_BRKINT</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#isig\">isig</a>(<a class=\"id\" href=\"#SIGINT\">SIGINT</a>, <a class=\"id\" href=\"#tty\">tty</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_PARMRK\">I_PARMRK</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>('\\377', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>('\\0', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>('\\0', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_receive_overrun<span class=\"ts\"/>-<span class=\"ts\"/>handle overrun reporting</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Data arrived faster than we could process it. While the tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>driver has flagged this the bits that were missed are gone</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>forever.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called from the receive_buf path so single threaded. Does not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>need locking as num_overrun and overrun_time are function</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>private.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#n_tty_receive_overrun\">n_tty_receive_overrun</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[64];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#num_overrun\">num_overrun</a>++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#overrun_time\">overrun_time</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#HZ\">HZ</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#overrun_time\">overrun_time</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s: %d input overrun(s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#num_overrun\">num_overrun</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#overrun_time\">overrun_time</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#num_overrun\">num_overrun</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_receive_parity_error<span class=\"ts\"/>-<span class=\"ts\"/>error notifier</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: character</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Process a parity error and queue the right data to indicate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the error case if necessary. Locking as per n_tty_receive_buf.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#n_tty_receive_parity_error\">n_tty_receive_parity_error</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned char <a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IGNPAR\">I_IGNPAR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_PARMRK\">I_PARMRK</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>('\\377', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>('\\0', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>} else<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_INPCK\">I_INPCK</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>('\\0', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_receive_char<span class=\"ts\"/>-<span class=\"ts\"/>perform processing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@c: character</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Process an individual character of input received from the driver.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is serialized with respect to itself by the rules for the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>driver above.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#n_tty_receive_char\">n_tty_receive_char</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, unsigned char <a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#parmrk\">parmrk</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#raw\">raw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_ISTRIP\">I_ISTRIP</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> &= 0x7f;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IUCLC\">I_IUCLC</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#L_IEXTEN\">L_IEXTEN</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#tolower\">tolower</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#L_EXTPROC\">L_EXTPROC</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#stopped\">stopped</a> && !<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flow_stopped\">flow_stopped</a> && <a class=\"id\" href=\"#I_IXON\">I_IXON</a>(<a class=\"id\" href=\"#tty\">tty</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#I_IXANY\">I_IXANY</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#c\">c</a> != <a class=\"id\" href=\"#START_CHAR\">START_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#c\">c</a> != <a class=\"id\" href=\"#STOP_CHAR\">STOP_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a> != <a class=\"id\" href=\"#INTR_CHAR\">INTR_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#c\">c</a> != <a class=\"id\" href=\"#QUIT_CHAR\">QUIT_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#c\">c</a> != <a class=\"id\" href=\"#SUSP_CHAR\">SUSP_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_tty\">start_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#closing\">closing</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IXON\">I_IXON</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#START_CHAR\">START_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_tty\">start_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#STOP_CHAR\">STOP_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stop_tty\">stop_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the previous character was LNEXT, or we know that this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * character is not one of the characters that we'll have to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * handle specially, do shortcut processing to speed things</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * up.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>) || <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#lnext\">lnext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#lnext\">lnext</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parmrk\">parmrk</a> = (<a class=\"id\" href=\"#c\">c</a> == (unsigned char) '\\377' && <a class=\"id\" href=\"#I_PARMRK\">I_PARMRK</a>(<a class=\"id\" href=\"#tty\">tty</a>)) ? 1 : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> >= (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#parmrk\">parmrk</a> - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* beep if no space */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_output\">process_output</a>('\\a', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_erasing\">finish_erasing</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Record the column of first canon char. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> == <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_set_canon_col\">echo_set_canon_col</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char\">echo_char</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parmrk\">parmrk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IXON\">I_IXON</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#START_CHAR\">START_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_tty\">start_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#STOP_CHAR\">STOP_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stop_tty\">stop_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ISIG\">L_ISIG</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#signal\">signal</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signal\">signal</a> = <a class=\"id\" href=\"#SIGINT\">SIGINT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#INTR_CHAR\">INTR_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send_signal\">send_signal</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signal\">signal</a> = <a class=\"id\" href=\"#SIGQUIT\">SIGQUIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#QUIT_CHAR\">QUIT_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send_signal\">send_signal</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signal\">signal</a> = <a class=\"id\" href=\"#SIGTSTP\">SIGTSTP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#SUSP_CHAR\">SUSP_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<a class=\"id\" href=\"#send_signal\">send_signal</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note that we do not use isig() here because we want</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the order to be:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 1) flush, 2) echo, 3) signal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#L_NOFLSH\">L_NOFLSH</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_tty_flush_buffer\">n_tty_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_flush_buffer\">tty_driver_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IXON\">I_IXON</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_tty\">start_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char\">echo_char</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_pgrp\">kill_pgrp</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>, <a class=\"id\" href=\"#signal\">signal</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == '\\r') {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IGNCR\">I_IGNCR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#I_ICRNL\">I_ICRNL</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = '\\n';", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#c\">c</a> == '\\n' && <a class=\"id\" href=\"#I_INLCR\">I_INLCR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = '\\r';", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#icanon\">icanon</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#ERASE_CHAR\">ERASE_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) || <a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#KILL_CHAR\">KILL_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#WERASE_CHAR\">WERASE_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#L_IEXTEN\">L_IEXTEN</a>(<a class=\"id\" href=\"#tty\">tty</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eraser\">eraser</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#LNEXT_CHAR\">LNEXT_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#L_IEXTEN\">L_IEXTEN</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#lnext\">lnext</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_erasing\">finish_erasing</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHOCTL\">L_ECHOCTL</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('^', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\b', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#REPRINT_CHAR\">REPRINT_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#L_IEXTEN\">L_IEXTEN</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_erasing\">finish_erasing</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char\">echo_char</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\n', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#tail\">tail</a> != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char\">echo_char</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>[<a class=\"id\" href=\"#tail\">tail</a>], <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a> = (<a class=\"id\" href=\"#tail\">tail</a>+1) &amp; (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == '\\n') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> >= <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_output\">process_output</a>('\\a', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>) || <a class=\"id\" href=\"#L_ECHONL\">L_ECHONL</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\n', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#handle_newline\">handle_newline</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#EOF_CHAR\">EOF_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> >= <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_PUSH\">TTY_PUSH</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#__DISABLED_CHAR\">__DISABLED_CHAR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#handle_newline\">handle_newline</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#EOL_CHAR\">EOL_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#EOL2_CHAR\">EOL2_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#L_IEXTEN\">L_IEXTEN</a>(<a class=\"id\" href=\"#tty\">tty</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parmrk\">parmrk</a> = (<a class=\"id\" href=\"#c\">c</a> == (unsigned char) '\\377' && <a class=\"id\" href=\"#I_PARMRK\">I_PARMRK</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> ? 1 : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> >= (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#parmrk\">parmrk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_output\">process_output</a>('\\a', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * XXX are EOL_CHAR and EOL2_CHAR echoed?!?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Record the column of first canon char. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> == <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_set_canon_col\">echo_set_canon_col</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char\">echo_char</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * XXX does PARMRK doubling happen for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * EOL_CHAR and EOL2_CHAR?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parmrk\">parmrk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<a class=\"id\" href=\"#handle_newline\">handle_newline</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_flags\">read_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue_nolock\">put_tty_queue_nolock</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_data\">canon_data</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#fasync\">fasync</a>, <a class=\"id\" href=\"#SIGIO\">SIGIO</a>, <a class=\"id\" href=\"#POLL_IN\">POLL_IN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parmrk\">parmrk</a> = (<a class=\"id\" href=\"#c\">c</a> == (unsigned char) '\\377' && <a class=\"id\" href=\"#I_PARMRK\">I_PARMRK</a>(<a class=\"id\" href=\"#tty\">tty</a>)) ? 1 : 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> >= (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#parmrk\">parmrk</a> - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* beep if no space */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_output\">process_output</a>('\\a', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_erasing\">finish_erasing</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == '\\n')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char_raw\">echo_char_raw</a>('\\n', <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Record the column of first canon char. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> == <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_set_canon_col\">echo_set_canon_col</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#echo_char\">echo_char</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_echoes\">process_echoes</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parmrk\">parmrk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_tty_queue\">put_tty_queue</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_write_wakeup<span class=\"ts\"/>-<span class=\"ts\"/>asynchronous I/O notifier</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Required for the ptys, serial driver etc. since processes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that attach themselves to the master and rely on ASYNC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IO must be woken up</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#n_tty_write_wakeup\">n_tty_write_wakeup</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#fasync\">fasync</a> && <a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#TTY_DO_WRITE_WAKEUP\">TTY_DO_WRITE_WAKEUP</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#fasync\">fasync</a>, <a class=\"id\" href=\"#SIGIO\">SIGIO</a>, <a class=\"id\" href=\"#POLL_OUT\">POLL_OUT</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_receive_buf<span class=\"ts\"/>-<span class=\"ts\"/>data receive</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cp: buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fp: flag buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@count: characters</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called by the terminal driver when a block of characters has</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>been received. This function must be called from soft contexts</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>not from interrupt context. The driver is responsible for making</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>calls one at a time and in order (or using flush_to_ldisc)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#n_tty_receive_buf\">n_tty_receive_buf</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, const unsigned char *<a class=\"id\" href=\"#cp\">cp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      char *<a class=\"id\" href=\"#fp\">fp</a>, int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#TTY_NORMAL\">TTY_NORMAL</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[64];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cpuflags\">cpuflags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#real_raw\">real_raw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#cpuflags\">cpuflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a> + <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>, <a class=\"id\" href=\"#cp\">cp</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> + <a class=\"id\" href=\"#i\">i</a>) &amp; (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> += <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> += <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a> + <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a>, <a class=\"id\" href=\"#cp\">cp</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_head\">read_head</a> + <a class=\"id\" href=\"#i\">i</a>) &amp; (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> += <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#cpuflags\">cpuflags</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#cp\">cp</a>, <a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#fp\">fp</a>; <a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#i\">i</a>--, <a class=\"id\" href=\"#p\">p</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = *<a class=\"id\" href=\"#f\">f</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#flags\">flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TTY_NORMAL\">TTY_NORMAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_tty_receive_char\">n_tty_receive_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, *<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TTY_BREAK\">TTY_BREAK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_tty_receive_break\">n_tty_receive_break</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TTY_PARITY\">TTY_PARITY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TTY_FRAME\">TTY_FRAME</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_tty_receive_parity_error\">n_tty_receive_parity_error</a>(<a class=\"id\" href=\"#tty\">tty</a>, *<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TTY_OVERRUN\">TTY_OVERRUN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_tty_receive_overrun\">n_tty_receive_overrun</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: unknown flag %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_chars\">flush_chars</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_chars\">flush_chars</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n_tty_set_room\">n_tty_set_room</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#icanon\">icanon</a> && (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> >= <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#minimum_to_wake\">minimum_to_wake</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#L_EXTPROC\">L_EXTPROC</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#fasync\">fasync</a>, <a class=\"id\" href=\"#SIGIO\">SIGIO</a>, <a class=\"id\" href=\"#POLL_IN\">POLL_IN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check the remaining room for the input canonicalization</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mode.  We don't want to throttle the driver if we're in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * canonical mode and don't have a newline yet!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#receive_room\">receive_room</a> &lt; <a class=\"id\" href=\"#TTY_THRESHOLD_THROTTLE\">TTY_THRESHOLD_THROTTLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_throttle\">tty_throttle</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#is_ignored\">is_ignored</a>(int <a class=\"id\" href=\"#sig\">sig</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#sigismember\">sigismember</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#sig\">sig</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#action\">action</a>[<a class=\"id\" href=\"#sig\">sig</a>-1].<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a> == <a class=\"id\" href=\"#SIG_IGN\">SIG_IGN</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_set_termios<span class=\"ts\"/>-<span class=\"ts\"/>termios data changed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@old: previous data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called by the tty layer when the user changes termios flags so</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that the line discipline can plan ahead. This function cannot sleep</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and is protected from re-entry by the tty layer. The user is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>guaranteed that this function will not be re-entered or in progress</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>when the ldisc is closed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: Caller holds tty-&gt;termios_mutex</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#n_tty_set_termios\">n_tty_set_termios</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#canon_change\">canon_change</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#canon_change\">canon_change</a> = (<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#c_lflag\">c_lflag</a> ^ <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_lflag\">c_lflag</a>) &amp; <a class=\"id\" href=\"#ICANON\">ICANON</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#canon_change\">canon_change</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_flags\">read_flags</a>, 0, sizeof <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_flags\">read_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_head\">canon_head</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_data\">canon_data</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#erasing\">erasing</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#canon_change\">canon_change</a> && !<a class=\"id\" href=\"#L_ICANON\">L_ICANON</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#icanon\">icanon</a> = (<a class=\"id\" href=\"#L_ICANON\">L_ICANON</a>(<a class=\"id\" href=\"#tty\">tty</a>) != 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_HW_COOK_IN\">TTY_HW_COOK_IN</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#raw\">raw</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#real_raw\">real_raw</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_tty_set_room\">n_tty_set_room</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_ISTRIP\">I_ISTRIP</a>(<a class=\"id\" href=\"#tty\">tty</a>) || <a class=\"id\" href=\"#I_IUCLC\">I_IUCLC</a>(<a class=\"id\" href=\"#tty\">tty</a>) || <a class=\"id\" href=\"#I_IGNCR\">I_IGNCR</a>(<a class=\"id\" href=\"#tty\">tty</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#I_ICRNL\">I_ICRNL</a>(<a class=\"id\" href=\"#tty\">tty</a>) || <a class=\"id\" href=\"#I_INLCR\">I_INLCR</a>(<a class=\"id\" href=\"#tty\">tty</a>) || <a class=\"id\" href=\"#L_ICANON\">L_ICANON</a>(<a class=\"id\" href=\"#tty\">tty</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#I_IXON\">I_IXON</a>(<a class=\"id\" href=\"#tty\">tty</a>) || <a class=\"id\" href=\"#L_ISIG\">L_ISIG</a>(<a class=\"id\" href=\"#tty\">tty</a>) || <a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#I_PARMRK\">I_PARMRK</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>, 0, 256/8);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IGNCR\">I_IGNCR</a>(<a class=\"id\" href=\"#tty\">tty</a>) || <a class=\"id\" href=\"#I_ICRNL\">I_ICRNL</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>('\\r', <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#I_INLCR\">I_INLCR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>('\\n', <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ICANON\">L_ICANON</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#ERASE_CHAR\">ERASE_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#KILL_CHAR\">KILL_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#EOF_CHAR\">EOF_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>('\\n', <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#EOL_CHAR\">EOL_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_IEXTEN\">L_IEXTEN</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#WERASE_CHAR\">WERASE_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#LNEXT_CHAR\">LNEXT_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#EOL2_CHAR\">EOL2_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ECHO\">L_ECHO</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#REPRINT_CHAR\">REPRINT_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IXON\">I_IXON</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#START_CHAR\">START_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#STOP_CHAR\">STOP_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_ISIG\">L_ISIG</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#INTR_CHAR\">INTR_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#QUIT_CHAR\">QUIT_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#SUSP_CHAR\">SUSP_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#__DISABLED_CHAR\">__DISABLED_CHAR</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#process_char_map\">process_char_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#raw\">raw</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#real_raw\">real_raw</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#raw\">raw</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#I_IGNBRK\">I_IGNBRK</a>(<a class=\"id\" href=\"#tty\">tty</a>) || (!<a class=\"id\" href=\"#I_BRKINT\">I_BRKINT</a>(<a class=\"id\" href=\"#tty\">tty</a>) && !<a class=\"id\" href=\"#I_PARMRK\">I_PARMRK</a>(<a class=\"id\" href=\"#tty\">tty</a>))) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#I_IGNPAR\">I_IGNPAR</a>(<a class=\"id\" href=\"#tty\">tty</a>) || !<a class=\"id\" href=\"#I_INPCK\">I_INPCK</a>(<a class=\"id\" href=\"#tty\">tty</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_REAL_RAW\">TTY_DRIVER_REAL_RAW</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#real_raw\">real_raw</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#real_raw\">real_raw</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n_tty_set_room\">n_tty_set_room</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* The termios change make the tty ready for I/O */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_close<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>close the ldisc for this tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called from the terminal layer when this line discipline is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>being shut down, either because of a close or becsuse of a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>discipline change. The function will not be called while other</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ldisc methods are in progress.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#n_tty_close\">n_tty_close</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n_tty_flush_buffer\">n_tty_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>n_tty_open<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>open an ldisc</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal to open</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called when this line discipline is being attached to the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>terminal device. Can sleep. Called serialized so that no</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>other events will occur in parallel. No further open will occur</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>until a close.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#n_tty_open\">n_tty_open</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* These are ugly. Currently a malloc failure here can panic */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_buf\">echo_buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reset_buffer_flags\">reset_buffer_flags</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#column\">column</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n_tty_set_termios\">n_tty_set_termios</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#minimum_to_wake\">minimum_to_wake</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#closing\">closing</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#input_available_p\">input_available_p</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#amt\">amt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_flush_to_ldisc\">tty_flush_to_ldisc</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#icanon\">icanon</a> && !<a class=\"id\" href=\"#L_EXTPROC\">L_EXTPROC</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#canon_data\">canon_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> >= (<a class=\"id\" href=\"#amt\">amt</a> ? <a class=\"id\" href=\"#amt\">amt</a> : 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>copy_from_read_buf<span class=\"ts\"/>-<span class=\"ts\"/>copy read data directly</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@b: user data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@nr: size of data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Helper function to speed up n_tty_read.  It is only called when</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICANON is off; it copies characters straight from the tty queue to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>user space directly.  It can be profitably called twice; once to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>drain the space from the tail pointer to the (physical) end of the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>buffer, and once to drain the space from the (physical) beginning of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the buffer to head pointer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called under the tty-&gt;atomic_read_lock sem</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#copy_from_read_buf\">copy_from_read_buf</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned char <a class=\"id\" href=\"#__user\">__user</a> **<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#nr\">nr</a>)", 
"", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a>, <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a> - <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#min\">min</a>(*<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(*<a class=\"id\" href=\"#b\">b</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>[<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a>], <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> -= <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_audit_add_data\">tty_audit_add_data</a>(<a class=\"id\" href=\"#tty\">tty</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_buf\">read_buf</a>[<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a>], <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_tail\">read_tail</a> + <a class=\"id\" href=\"#n\">n</a>) &amp; (<a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> -= <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Turn single EOF into zero-length read */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#L_EXTPROC\">L_EXTPROC</a>(<a class=\"id\" href=\"#tty\">tty</a>) && <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#icanon\">icanon</a> && <a class=\"id\" href=\"#n\">n</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_cnt\">read_cnt</a> && (*<a class=\"id\" href=\"#b\">b</a>)[<a class=\"id\" href=\"#n\">n</a>-1] == <a class=\"id\" href=\"#EOF_CHAR\">EOF_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#b\">b</a> += <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#nr\">nr</a> -= <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#redirected_tty_write\">redirected_tty_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *, const char <a class=\"id\" href=\"#__user\">__user</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>job_control<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>check job control</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@file: file handle</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform job control management checks on this file/tty descriptor</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and if appropriate send any needed signals and return a negative</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>error code if action should be taken.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>FIXME:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: None - redirected write test is safe, testing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>current-&gt;signal should possibly lock current-&gt;sighand</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pgrp locking ?</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#job_control\">job_control</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Job control check -- must be done at start and after</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   every sleep (POSIX.1 7.1.1.4). */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE: not yet done after every sleep pending a thorough</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   check of the logic of this change. -- jlc */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* don't stop on /dev/console */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a> != <a class=\"id\" href=\"#redirected_tty_write\">redirected_tty_write</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> == <a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"n_tty_read: no tty->pgrp!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#task_pgrp\">task_pgrp</a>(<a class=\"id\" href=\"#current\">current</a>) != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_ignored\">is_ignored</a>(<a class=\"id\" href=\"#SIGTTIN\">SIGTTIN</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#is_current_pgrp_orphaned\">is_current_pgrp_orphaned</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_pgrp\">kill_pgrp</a>(<a class=\"id\" href=\"#task_pgrp\">task_pgrp</a>(<a class=\"id\" href=\"#current\">current</a>), <a class=\"id\" href=\"#SIGTTIN\">SIGTTIN</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_thread_flag\">set_thread_flag</a>(<a class=\"id\" href=\"#TIF_SIGPENDING\">TIF_SIGPENDING</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
];
xr_frag_insert('l/9c/0103c78da4e3ff2374a433694a4677b66d8a53.xr', __xr_tmp);
