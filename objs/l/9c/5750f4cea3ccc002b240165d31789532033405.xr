var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"void <a class=\"id\" href=\"#devm_ioremap_release\">devm_ioremap_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(*(void <a class=\"id\" href=\"#__iomem\">__iomem</a> **)<a class=\"id\" href=\"#res\">res</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#devm_ioremap_match\">devm_ioremap_match</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#res\">res</a>, void *<a class=\"id\" href=\"#match_data\">match_data</a>)", 
"{", 
"<span class=\"ts\"/>return *(void **)<a class=\"id\" href=\"#res\">res</a> == <a class=\"id\" href=\"#match_data\">match_data</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * devm_ioremap - Managed ioremap()</span>", 
"<span class=\"comment\"> * @dev: Generic device to remap IO address for</span>", 
"<span class=\"comment\"> * @offset: BUS offset to map</span>", 
"<span class=\"comment\"> * @size: Size of map</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed ioremap().  Map is automatically unmapped on driver detach.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#devm_ioremap\">devm_ioremap</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> **<a class=\"id\" href=\"#ptr\">ptr</a>, *<a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#devres_alloc\">devres_alloc</a>(<a class=\"id\" href=\"#devm_ioremap_release\">devm_ioremap_release</a>, sizeof(*<a class=\"id\" href=\"#ptr\">ptr</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ioremap\">ioremap</a>(<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_add\">devres_add</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_free\">devres_free</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#devm_ioremap\">devm_ioremap</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * devm_ioremap_nocache - Managed ioremap_nocache()</span>", 
"<span class=\"comment\"> * @dev: Generic device to remap IO address for</span>", 
"<span class=\"comment\"> * @offset: BUS offset to map</span>", 
"<span class=\"comment\"> * @size: Size of map</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed ioremap_nocache().  Map is automatically unmapped on driver</span>", 
"<span class=\"comment\"> * detach.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#devm_ioremap_nocache\">devm_ioremap_nocache</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> **<a class=\"id\" href=\"#ptr\">ptr</a>, *<a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#devres_alloc\">devres_alloc</a>(<a class=\"id\" href=\"#devm_ioremap_release\">devm_ioremap_release</a>, sizeof(*<a class=\"id\" href=\"#ptr\">ptr</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ioremap_nocache\">ioremap_nocache</a>(<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_add\">devres_add</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_free\">devres_free</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#devm_ioremap_nocache\">devm_ioremap_nocache</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * devm_iounmap - Managed iounmap()</span>", 
"<span class=\"comment\"> * @dev: Generic device to unmap for</span>", 
"<span class=\"comment\"> * @addr: Address to unmap</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed iounmap().  @addr must have been mapped using devm_ioremap*().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#devm_iounmap\">devm_iounmap</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#devres_destroy\">devres_destroy</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#devm_ioremap_release\">devm_ioremap_release</a>, <a class=\"id\" href=\"#devm_ioremap_match\">devm_ioremap_match</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (void *)<a class=\"id\" href=\"#addr\">addr</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#devm_iounmap\">devm_iounmap</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAS_IOPORT\">CONFIG_HAS_IOPORT</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic iomap devres</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#devm_ioport_map_release\">devm_ioport_map_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioport_unmap\">ioport_unmap</a>(*(void <a class=\"id\" href=\"#__iomem\">__iomem</a> **)<a class=\"id\" href=\"#res\">res</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#devm_ioport_map_match\">devm_ioport_map_match</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#res\">res</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#match_data\">match_data</a>)", 
"{", 
"<span class=\"ts\"/>return *(void **)<a class=\"id\" href=\"#res\">res</a> == <a class=\"id\" href=\"#match_data\">match_data</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * devm_ioport_map - Managed ioport_map()</span>", 
"<span class=\"comment\"> * @dev: Generic device to map ioport for</span>", 
"<span class=\"comment\"> * @port: Port to map</span>", 
"<span class=\"comment\"> * @nr: Number of ports to map</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed ioport_map().  Map is automatically unmapped on driver</span>", 
"<span class=\"comment\"> * detach.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> * <a class=\"id\" href=\"#devm_ioport_map\">devm_ioport_map</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned long <a class=\"id\" href=\"#port\">port</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> **<a class=\"id\" href=\"#ptr\">ptr</a>, *<a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#devres_alloc\">devres_alloc</a>(<a class=\"id\" href=\"#devm_ioport_map_release\">devm_ioport_map_release</a>, sizeof(*<a class=\"id\" href=\"#ptr\">ptr</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ioport_map\">ioport_map</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_add\">devres_add</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_free\">devres_free</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#devm_ioport_map\">devm_ioport_map</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * devm_ioport_unmap - Managed ioport_unmap()</span>", 
"<span class=\"comment\"> * @dev: Generic device to unmap for</span>", 
"<span class=\"comment\"> * @addr: Address to unmap</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed ioport_unmap().  @addr must have been mapped using</span>", 
"<span class=\"comment\"> * devm_ioport_map().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#devm_ioport_unmap\">devm_ioport_unmap</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioport_unmap\">ioport_unmap</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#devres_destroy\">devres_destroy</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#devm_ioport_map_release\">devm_ioport_map_release</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#devm_ioport_map_match\">devm_ioport_map_match</a>, (void *)<a class=\"id\" href=\"#addr\">addr</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#devm_ioport_unmap\">devm_ioport_unmap</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PCI iomap devres</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIM_IOMAP_MAX\">PCIM_IOMAP_MAX</a><span class=\"ts\"/><a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>", 
"", 
"struct <a class=\"id\" href=\"#pcim_iomap_devres\">pcim_iomap_devres</a> {", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#table\">table</a>[<a class=\"id\" href=\"#PCIM_IOMAP_MAX\">PCIM_IOMAP_MAX</a>];", 
"};", 
"", 
"static void <a class=\"id\" href=\"#pcim_iomap_release\">pcim_iomap_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#gendev\">gendev</a>, void *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#gendev\">gendev</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcim_iomap_devres\">pcim_iomap_devres</a> *<a class=\"id\" href=\"#this\">this</a> = <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PCIM_IOMAP_MAX\">PCIM_IOMAP_MAX</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#table\">table</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_iounmap\">pci_iounmap</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#table\">table</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcim_iomap_table - access iomap allocation table</span>", 
"<span class=\"comment\"> * @pdev: PCI device to access iomap table for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Access iomap allocation table for @dev.  If iomap table doesn't</span>", 
"<span class=\"comment\"> * exist and @pdev is managed, it will be allocated.  All iomaps</span>", 
"<span class=\"comment\"> * recorded in the iomap table are automatically unmapped on driver</span>", 
"<span class=\"comment\"> * detach.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function might sleep when the table is first allocated but can</span>", 
"<span class=\"comment\"> * be safely called without context and guaranteed to succed once</span>", 
"<span class=\"comment\"> * allocated.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> * const * <a class=\"id\" href=\"#pcim_iomap_table\">pcim_iomap_table</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcim_iomap_devres\">pcim_iomap_devres</a> *<a class=\"id\" href=\"#dr\">dr</a>, *<a class=\"id\" href=\"#new_dr\">new_dr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a> = <a class=\"id\" href=\"#devres_find\">devres_find</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pcim_iomap_release\">pcim_iomap_release</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dr\">dr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dr\">dr</a>-><a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_dr\">new_dr</a> = <a class=\"id\" href=\"#devres_alloc\">devres_alloc</a>(<a class=\"id\" href=\"#pcim_iomap_release\">pcim_iomap_release</a>, sizeof(*<a class=\"id\" href=\"#new_dr\">new_dr</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_dr\">new_dr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a> = <a class=\"id\" href=\"#devres_get\">devres_get</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#new_dr\">new_dr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dr\">dr</a>-><a class=\"id\" href=\"#table\">table</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcim_iomap_table\">pcim_iomap_table</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcim_iomap - Managed pcim_iomap()</span>", 
"<span class=\"comment\"> * @pdev: PCI device to iomap for</span>", 
"<span class=\"comment\"> * @bar: BAR to iomap</span>", 
"<span class=\"comment\"> * @maxlen: Maximum length of iomap</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed pci_iomap().  Map is automatically unmapped on driver</span>", 
"<span class=\"comment\"> * detach.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> * <a class=\"id\" href=\"#pcim_iomap\">pcim_iomap</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, int <a class=\"id\" href=\"#bar\">bar</a>, unsigned long <a class=\"id\" href=\"#maxlen\">maxlen</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> **<a class=\"id\" href=\"#tbl\">tbl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bar\">bar</a> >= <a class=\"id\" href=\"#PCIM_IOMAP_MAX\">PCIM_IOMAP_MAX</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a> = (void <a class=\"id\" href=\"#__iomem\">__iomem</a> **)<a class=\"id\" href=\"#pcim_iomap_table\">pcim_iomap_table</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tbl\">tbl</a> || <a class=\"id\" href=\"#tbl\">tbl</a>[<a class=\"id\" href=\"#bar\">bar</a>])<span class=\"ts\"/><span class=\"comment\">/* duplicate mappings not allowed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>[<a class=\"id\" href=\"#bar\">bar</a>] = <a class=\"id\" href=\"#pci_iomap\">pci_iomap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#bar\">bar</a>, <a class=\"id\" href=\"#maxlen\">maxlen</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tbl\">tbl</a>[<a class=\"id\" href=\"#bar\">bar</a>];", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcim_iomap\">pcim_iomap</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcim_iounmap - Managed pci_iounmap()</span>", 
"<span class=\"comment\"> * @pdev: PCI device to iounmap for</span>", 
"<span class=\"comment\"> * @addr: Address to unmap</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed pci_iounmap().  @addr must have been mapped using pcim_iomap().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pcim_iounmap\">pcim_iounmap</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> **<a class=\"id\" href=\"#tbl\">tbl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_iounmap\">pci_iounmap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a> = (void <a class=\"id\" href=\"#__iomem\">__iomem</a> **)<a class=\"id\" href=\"#pcim_iomap_table\">pcim_iomap_table</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#tbl\">tbl</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PCIM_IOMAP_MAX\">PCIM_IOMAP_MAX</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tbl\">tbl</a>[<a class=\"id\" href=\"#i\">i</a>] == <a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcim_iounmap\">pcim_iounmap</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcim_iomap_regions - Request and iomap PCI BARs</span>", 
"<span class=\"comment\"> * @pdev: PCI device to map IO resources for</span>", 
"<span class=\"comment\"> * @mask: Mask of BARs to request and iomap</span>", 
"<span class=\"comment\"> * @name: Name used when requesting regions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Request and iomap regions specified by @mask.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pcim_iomap_regions\">pcim_iomap_regions</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mask\">mask</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> * const *<a class=\"id\" href=\"#iomap\">iomap</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iomap\">iomap</a> = <a class=\"id\" href=\"#pcim_iomap_table\">pcim_iomap_table</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iomap\">iomap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#DEVICE_COUNT_RESOURCE\">DEVICE_COUNT_RESOURCE</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mask\">mask</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_request_region\">pci_request_region</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pcim_iomap\">pcim_iomap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_region\">err_region</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#err_region\">err_region</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_release_region\">pci_release_region</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
" <a class=\"id\" href=\"#err_inval\">err_inval</a>:", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mask\">mask</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcim_iounmap\">pcim_iounmap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#iomap\">iomap</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_release_region\">pci_release_region</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcim_iomap_regions\">pcim_iomap_regions</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcim_iomap_regions_request_all - Request all BARs and iomap specified ones</span>", 
"<span class=\"comment\"> * @pdev: PCI device to map IO resources for</span>", 
"<span class=\"comment\"> * @mask: Mask of BARs to iomap</span>", 
"<span class=\"comment\"> * @name: Name used when requesting regions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Request all PCI BARs and iomap regions specified by @mask.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pcim_iomap_regions_request_all\">pcim_iomap_regions_request_all</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mask\">mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#request_mask\">request_mask</a> = ((1 << 6) - 1) &amp; ~<a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_request_selected_regions\">pci_request_selected_regions</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#request_mask\">request_mask</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pcim_iomap_regions\">pcim_iomap_regions</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_release_selected_regions\">pci_release_selected_regions</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#request_mask\">request_mask</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcim_iomap_regions_request_all\">pcim_iomap_regions_request_all</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcim_iounmap_regions - Unmap and release PCI BARs</span>", 
"<span class=\"comment\"> * @pdev: PCI device to map IO resources for</span>", 
"<span class=\"comment\"> * @mask: Mask of BARs to unmap and release</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unmap and release regions specified by @mask.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pcim_iounmap_regions\">pcim_iounmap_regions</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> * const *<a class=\"id\" href=\"#iomap\">iomap</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iomap\">iomap</a> = <a class=\"id\" href=\"#pcim_iomap_table\">pcim_iomap_table</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iomap\">iomap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#DEVICE_COUNT_RESOURCE\">DEVICE_COUNT_RESOURCE</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mask\">mask</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcim_iounmap\">pcim_iounmap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#iomap\">iomap</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_release_region\">pci_release_region</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcim_iounmap_regions\">pcim_iounmap_regions</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/9c/5750f4cea3ccc002b240165d31789532033405.xr', __xr_tmp);
