var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_IP_NETFILTER_H\">__LINUX_IP_NETFILTER_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_IP_NETFILTER_H\">__LINUX_IP_NETFILTER_H</a>", 
"", 
"<span class=\"comment\">/* IPv4-specific defines for netfilter. </span>", 
"<span class=\"comment\"> * (C)1998 Rusty Russell -- This code is GPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter\">netfilter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* only for userspace compatibility */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"<span class=\"comment\">/* IP Cache bits. */</span>", 
"<span class=\"comment\">/* Src IP address. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_SRC\">NFC_IP_SRC</a><span class=\"ts\"/><span class=\"ts\"/>0x0001", 
"<span class=\"comment\">/* Dest IP address. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_DST\">NFC_IP_DST</a><span class=\"ts\"/><span class=\"ts\"/>0x0002", 
"<span class=\"comment\">/* Input device. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_IF_IN\">NFC_IP_IF_IN</a><span class=\"ts\"/><span class=\"ts\"/>0x0004", 
"<span class=\"comment\">/* Output device. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_IF_OUT\">NFC_IP_IF_OUT</a><span class=\"ts\"/><span class=\"ts\"/>0x0008", 
"<span class=\"comment\">/* TOS. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_TOS\">NFC_IP_TOS</a><span class=\"ts\"/><span class=\"ts\"/>0x0010", 
"<span class=\"comment\">/* Protocol. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_PROTO\">NFC_IP_PROTO</a><span class=\"ts\"/><span class=\"ts\"/>0x0020", 
"<span class=\"comment\">/* IP options. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_OPTIONS\">NFC_IP_OPTIONS</a><span class=\"ts\"/><span class=\"ts\"/>0x0040", 
"<span class=\"comment\">/* Frag &amp; flags. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_FRAG\">NFC_IP_FRAG</a><span class=\"ts\"/><span class=\"ts\"/>0x0080", 
"", 
"<span class=\"comment\">/* Per-protocol information: only matters if proto match. */</span>", 
"<span class=\"comment\">/* TCP flags. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_TCPFLAGS\">NFC_IP_TCPFLAGS</a><span class=\"ts\"/><span class=\"ts\"/>0x0100", 
"<span class=\"comment\">/* Source port. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_SRC_PT\">NFC_IP_SRC_PT</a><span class=\"ts\"/><span class=\"ts\"/>0x0200", 
"<span class=\"comment\">/* Dest port. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_DST_PT\">NFC_IP_DST_PT</a><span class=\"ts\"/><span class=\"ts\"/>0x0400", 
"<span class=\"comment\">/* Something else about the proto */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFC_IP_PROTO_UNKNOWN\">NFC_IP_PROTO_UNKNOWN</a><span class=\"ts\"/>0x2000", 
"", 
"<span class=\"comment\">/* IP Hooks */</span>", 
"<span class=\"comment\">/* After promisc drops, checksum checks. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NF_IP_PRE_ROUTING\">NF_IP_PRE_ROUTING</a><span class=\"ts\"/>0", 
"<span class=\"comment\">/* If the packet is destined for this box. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NF_IP_LOCAL_IN\">NF_IP_LOCAL_IN</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"<span class=\"comment\">/* If the packet is destined for another interface. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NF_IP_FORWARD\">NF_IP_FORWARD</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"<span class=\"comment\">/* Packets coming from a local process. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NF_IP_LOCAL_OUT\">NF_IP_LOCAL_OUT</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"<span class=\"comment\">/* Packets about to hit the wire. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NF_IP_POST_ROUTING\">NF_IP_POST_ROUTING</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NF_IP_NUMHOOKS\">NF_IP_NUMHOOKS</a><span class=\"ts\"/><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* ! __KERNEL__ */</span>", 
"", 
"enum <a class=\"id\" href=\"#nf_ip_hook_priorities\">nf_ip_hook_priorities</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_FIRST\">NF_IP_PRI_FIRST</a> = <a class=\"id\" href=\"#INT_MIN\">INT_MIN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_CONNTRACK_DEFRAG\">NF_IP_PRI_CONNTRACK_DEFRAG</a> = -400,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_RAW\">NF_IP_PRI_RAW</a> = -300,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_SELINUX_FIRST\">NF_IP_PRI_SELINUX_FIRST</a> = -225,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_CONNTRACK\">NF_IP_PRI_CONNTRACK</a> = -200,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_MANGLE\">NF_IP_PRI_MANGLE</a> = -150,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_NAT_DST\">NF_IP_PRI_NAT_DST</a> = -100,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_FILTER\">NF_IP_PRI_FILTER</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_SECURITY\">NF_IP_PRI_SECURITY</a> = 50,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_NAT_SRC\">NF_IP_PRI_NAT_SRC</a> = 100,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_SELINUX_LAST\">NF_IP_PRI_SELINUX_LAST</a> = 225,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_CONNTRACK_CONFIRM\">NF_IP_PRI_CONNTRACK_CONFIRM</a> = <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_IP_PRI_LAST\">NF_IP_PRI_LAST</a> = <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>,", 
"};", 
"", 
"<span class=\"comment\">/* Arguments for setsockopt SOL_IP: */</span>", 
"<span class=\"comment\">/* 2.0 firewalling went from 64 through 71 (and +256, +512, etc). */</span>", 
"<span class=\"comment\">/* 2.2 firewalling (+ masq) went from 64 through 76 */</span>", 
"<span class=\"comment\">/* 2.4 firewalling went 64 through 67. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SO_ORIGINAL_DST\">SO_ORIGINAL_DST</a> 80", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"extern int <a class=\"id\" href=\"#ip_route_me_harder\">ip_route_me_harder</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, unsigned <a class=\"id\" href=\"#addr_type\">addr_type</a>);", 
"extern int <a class=\"id\" href=\"#ip_xfrm_me_harder\">ip_xfrm_me_harder</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern <a class=\"id\" href=\"#__sum16\">__sum16</a> <a class=\"id\" href=\"#nf_ip_checksum\">nf_ip_checksum</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, unsigned int <a class=\"id\" href=\"#hook\">hook</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#dataoff\">dataoff</a>, <a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/*__KERNEL__*/</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/*__LINUX_IP_NETFILTER_H*/</span>", 
];
xr_frag_insert('l/9d/74ad107b083b48b4ad1982e16ee2c38071f722.xr', __xr_tmp);
