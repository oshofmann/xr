var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Global definitions for the ARP (RFC 826) protocol.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version:<span class=\"ts\"/>@(#)if_arp.h<span class=\"ts\"/>1.0.1<span class=\"ts\"/>04/16/93</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Original taken from Berkeley UNIX 4.3, (c) UCB 1986-1988</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Portions taken from the KA9Q/NOS (v2.00m PA0GRI) source.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Florian La Roche,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Jonathan Layes &lt;layes@loran.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Arnaldo Carvalho de Melo &lt;acme@conectiva.com.br&gt; ARPHRD_HWX25</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_IF_ARP_H\">_LINUX_IF_ARP_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_IF_ARP_H\">_LINUX_IF_ARP_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* ARP protocol HARDWARE identifiers. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_NETROM\">ARPHRD_NETROM</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* from KA9Q: NET/ROM pseudo<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_ETHER\">ARPHRD_ETHER</a> <span class=\"ts\"/>1<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ethernet 10Mbps<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPHRD_EETHER\">ARPHRD_EETHER</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Experimental Ethernet<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPHRD_AX25\">ARPHRD_AX25</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* AX.25 Level 2<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPHRD_PRONET\">ARPHRD_PRONET</a><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PROnet token ring<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPHRD_CHAOS\">ARPHRD_CHAOS</a><span class=\"ts\"/>5<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Chaosnet<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPHRD_IEEE802\">ARPHRD_IEEE802</a><span class=\"ts\"/>6<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IEEE 802.2 Ethernet/TR/TB<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPHRD_ARCNET\">ARPHRD_ARCNET</a><span class=\"ts\"/>7<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ARCnet<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPHRD_APPLETLK\">ARPHRD_APPLETLK</a><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* APPLEtalk<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_DLCI\">ARPHRD_DLCI</a><span class=\"ts\"/>15<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Frame Relay DLCI<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_ATM\">ARPHRD_ATM</a><span class=\"ts\"/>19<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ATM <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_METRICOM\">ARPHRD_METRICOM</a><span class=\"ts\"/>23<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Metricom STRIP (new IANA id)<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPHRD_IEEE1394\">ARPHRD_IEEE1394</a><span class=\"ts\"/>24<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IEEE 1394 IPv4 - RFC 2734<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_EUI64\">ARPHRD_EUI64</a><span class=\"ts\"/>27<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* EUI-64                       */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_INFINIBAND\">ARPHRD_INFINIBAND</a> 32<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* InfiniBand<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"comment\">/* Dummy types for non ARP hardware */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_SLIP\">ARPHRD_SLIP</a><span class=\"ts\"/>256", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_CSLIP\">ARPHRD_CSLIP</a><span class=\"ts\"/>257", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_SLIP6\">ARPHRD_SLIP6</a><span class=\"ts\"/>258", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_CSLIP6\">ARPHRD_CSLIP6</a><span class=\"ts\"/>259", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_RSRVD\">ARPHRD_RSRVD</a><span class=\"ts\"/>260<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Notional KISS type <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_ADAPT\">ARPHRD_ADAPT</a><span class=\"ts\"/>264", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_ROSE\">ARPHRD_ROSE</a><span class=\"ts\"/>270", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_X25\">ARPHRD_X25</a><span class=\"ts\"/>271<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CCITT X.25<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_HWX25\">ARPHRD_HWX25</a><span class=\"ts\"/>272<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Boards with X.25 in firmware<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_CAN\">ARPHRD_CAN</a><span class=\"ts\"/>280<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Controller Area Network      */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_PPP\">ARPHRD_PPP</a><span class=\"ts\"/>512", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_CISCO\">ARPHRD_CISCO</a><span class=\"ts\"/>513<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Cisco HDLC<span class=\"ts\"/> <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_HDLC\">ARPHRD_HDLC</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPHRD_CISCO\">ARPHRD_CISCO</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_LAPB\">ARPHRD_LAPB</a><span class=\"ts\"/>516<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* LAPB<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_DDCMP\">ARPHRD_DDCMP</a>    517<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Digital's DDCMP protocol     */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_RAWHDLC\">ARPHRD_RAWHDLC</a><span class=\"ts\"/>518<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Raw HDLC<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_TUNNEL\">ARPHRD_TUNNEL</a><span class=\"ts\"/>768<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IPIP tunnel<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_TUNNEL6\">ARPHRD_TUNNEL6</a><span class=\"ts\"/>769<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IP6IP6 tunnel       <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_FRAD\">ARPHRD_FRAD</a><span class=\"ts\"/>770             <span class=\"comment\">/* Frame Relay Access Device    */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_SKIP\">ARPHRD_SKIP</a><span class=\"ts\"/>771<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SKIP vif<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_LOOPBACK\">ARPHRD_LOOPBACK</a><span class=\"ts\"/>772<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Loopback device<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_LOCALTLK\">ARPHRD_LOCALTLK</a> 773<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Localtalk device<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_FDDI\">ARPHRD_FDDI</a><span class=\"ts\"/>774<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fiber Distributed Data Interface */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_BIF\">ARPHRD_BIF</a>      775             <span class=\"comment\">/* AP1000 BIF                   */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_SIT\">ARPHRD_SIT</a><span class=\"ts\"/>776<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sit0 device - IPv6-in-IPv4<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_IPDDP\">ARPHRD_IPDDP</a><span class=\"ts\"/>777<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IP over DDP tunneller<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_IPGRE\">ARPHRD_IPGRE</a><span class=\"ts\"/>778<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* GRE over IP<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_PIMREG\">ARPHRD_PIMREG</a><span class=\"ts\"/>779<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PIMSM register interface<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_HIPPI\">ARPHRD_HIPPI</a><span class=\"ts\"/>780<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* High Performance Parallel Interface */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_ASH\">ARPHRD_ASH</a><span class=\"ts\"/>781<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Nexus 64Mbps Ash<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_ECONET\">ARPHRD_ECONET</a><span class=\"ts\"/>782<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Acorn Econet<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_IRDA\">ARPHRD_IRDA</a> <span class=\"ts\"/>783<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Linux-IrDA<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"comment\">/* ARP works differently on different FC media .. so  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_FCPP\">ARPHRD_FCPP</a><span class=\"ts\"/>784<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Point to point fibrechannel<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_FCAL\">ARPHRD_FCAL</a><span class=\"ts\"/>785<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fibrechannel arbitrated loop */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_FCPL\">ARPHRD_FCPL</a><span class=\"ts\"/>786<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fibrechannel public loop<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_FCFABRIC\">ARPHRD_FCFABRIC</a><span class=\"ts\"/>787<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fibrechannel fabric<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* 787-&gt;799 reserved for fibrechannel media types */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_IEEE802_TR\">ARPHRD_IEEE802_TR</a> 800<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Magic type ident for TR<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_IEEE80211\">ARPHRD_IEEE80211</a> 801<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IEEE 802.11<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_IEEE80211_PRISM\">ARPHRD_IEEE80211_PRISM</a> 802<span class=\"ts\"/><span class=\"comment\">/* IEEE 802.11 + Prism2 header  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_IEEE80211_RADIOTAP\">ARPHRD_IEEE80211_RADIOTAP</a> 803<span class=\"ts\"/><span class=\"comment\">/* IEEE 802.11 + radiotap header */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_IEEE802154\">ARPHRD_IEEE802154</a><span class=\"ts\"/>  804", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_PHONET\">ARPHRD_PHONET</a><span class=\"ts\"/>820<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PhoNet media type<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_PHONET_PIPE\">ARPHRD_PHONET_PIPE</a> 821<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PhoNet pipe header<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_CAIF\">ARPHRD_CAIF</a><span class=\"ts\"/>822<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CAIF media type<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_VOID\">ARPHRD_VOID</a><span class=\"ts\"/>  0xFFFF<span class=\"ts\"/><span class=\"comment\">/* Void type, nothing is known */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARPHRD_NONE\">ARPHRD_NONE</a><span class=\"ts\"/>  0xFFFE<span class=\"ts\"/><span class=\"comment\">/* zero header length */</span>", 
"", 
"<span class=\"comment\">/* ARP protocol opcodes. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPOP_REQUEST\">ARPOP_REQUEST</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ARP request<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPOP_REPLY\">ARPOP_REPLY</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ARP reply<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPOP_RREQUEST\">ARPOP_RREQUEST</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RARP request<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPOP_RREPLY\">ARPOP_RREPLY</a><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RARP reply<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPOP_InREQUEST\">ARPOP_InREQUEST</a><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* InARP request<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPOP_InREPLY\">ARPOP_InREPLY</a><span class=\"ts\"/>9<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* InARP reply<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ARPOP_NAK\">ARPOP_NAK</a><span class=\"ts\"/>10<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* (ATM)ARP NAK<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"", 
"<span class=\"comment\">/* ARP ioctl request. */</span>", 
"struct <a class=\"id\" href=\"#arpreq\">arpreq</a> {", 
"  struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#arp_pa\">arp_pa</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* protocol address<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"  struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#arp_ha\">arp_ha</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* hardware address<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"  int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_flags\">arp_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* flags<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"  struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a>       <a class=\"id\" href=\"#arp_netmask\">arp_netmask</a>;    <span class=\"comment\">/* netmask (only for proxy arps) */</span>", 
"  char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_dev\">arp_dev</a>[16];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#arpreq_old\">arpreq_old</a> {", 
"  struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#arp_pa\">arp_pa</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* protocol address<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"  struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#arp_ha\">arp_ha</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* hardware address<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"  int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_flags\">arp_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* flags<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"  struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a>       <a class=\"id\" href=\"#arp_netmask\">arp_netmask</a>;    <span class=\"comment\">/* netmask (only for proxy arps) */</span>", 
"};", 
"", 
"<span class=\"comment\">/* ARP Flag values. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATF_COM\">ATF_COM</a><span class=\"ts\"/><span class=\"ts\"/>0x02<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* completed entry (ha valid)<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ATF_PERM\">ATF_PERM</a><span class=\"ts\"/>0x04<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* permanent entry<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ATF_PUBL\">ATF_PUBL</a><span class=\"ts\"/>0x08<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* publish entry<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ATF_USETRAILERS\">ATF_USETRAILERS</a><span class=\"ts\"/>0x10<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* has requested trailers<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATF_NETMASK\">ATF_NETMASK</a>     0x20            <span class=\"comment\">/* want to use a netmask (only</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   for proxy entries) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATF_DONTPUB\">ATF_DONTPUB</a><span class=\"ts\"/>0x40<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* don't answer this addresses<span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This structure defines an ethernet arp header.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#arphdr\">arphdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* format of hardware address<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar_pro\">ar_pro</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* format of protocol address<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#ar_hln\">ar_hln</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* length of hardware address<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#ar_pln\">ar_pln</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* length of protocol address<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar_op\">ar_op</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ARP opcode (command)<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"#if 0", 
"<span class=\"ts\"/> <span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/>  *<span class=\"ts\"/> Ethernet looks like this : This bit is variable sized however...</span>", 
"<span class=\"comment\"><span class=\"ts\"/>  */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar_sha\">ar_sha</a>[<a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>];<span class=\"ts\"/><span class=\"comment\">/* sender hardware address<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar_sip\">ar_sip</a>[4];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sender IP address<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar_tha\">ar_tha</a>[<a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>];<span class=\"ts\"/><span class=\"comment\">/* target hardware address<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar_tip\">ar_tip</a>[4];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* target IP address<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#arphdr\">arphdr</a> *<a class=\"id\" href=\"#arp_hdr\">arp_hdr</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#arphdr\">arphdr</a> *)<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#arp_hdr_len\">arp_hdr_len</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* ARP header, plus 2 device addresses, plus 2 IP addresses. */</span>", 
"<span class=\"ts\"/>return sizeof(struct <a class=\"id\" href=\"#arphdr\">arphdr</a>) + (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a> + sizeof(<a class=\"id\" href=\"#u32\">u32</a>)) * 2;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _LINUX_IF_ARP_H */</span>", 
];
xr_frag_insert('l/9e/349c7a7e0de9cc0dba0733c82e523f83240514.xr', __xr_tmp);
