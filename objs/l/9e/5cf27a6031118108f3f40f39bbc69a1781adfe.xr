var __xr_tmp = [
"<span class=\"comment\">/* A network driver using virtio.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2007 Rusty Russell &lt;rusty@rustcorp.com.au&gt; IBM Corporation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"comment\">//#define DEBUG</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#etherdevice\">etherdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ethtool\">ethtool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio\">virtio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_net\">virtio_net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_vlan\">if_vlan</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#napi_weight\">napi_weight</a> = 128;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#napi_weight\">napi_weight</a>, int, 0444);", 
"", 
"static int <a class=\"id\" href=\"#csum\">csum</a> = 1, <a class=\"id\" href=\"#gso\">gso</a> = 1;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0444);", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#gso\">gso</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0444);", 
"", 
"<span class=\"comment\">/* FIXME: MTU in config. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_PACKET_LEN\">MAX_PACKET_LEN</a> (<a class=\"id\" href=\"#ETH_HLEN\">ETH_HLEN</a> + <a class=\"id\" href=\"#VLAN_HLEN\">VLAN_HLEN</a> + <a class=\"id\" href=\"#ETH_DATA_LEN\">ETH_DATA_LEN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GOOD_COPY_LEN\">GOOD_COPY_LEN</a><span class=\"ts\"/>128", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTNET_SEND_COMMAND_SG_MAX\">VIRTNET_SEND_COMMAND_SG_MAX</a>    2", 
"", 
"struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#rvq\">rvq</a>, *<a class=\"id\" href=\"#svq\">svq</a>, *<a class=\"id\" href=\"#cvq\">cvq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#napi_struct\">napi_struct</a> <a class=\"id\" href=\"#napi\">napi</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of input buffers, and max we've ever had. */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#max\">max</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* I like... big packets and I cannot lie! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#big_packets\">big_packets</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Host will merge rx buffers for big packets (shake it! shake it!) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#mergeable_rx_bufs\">mergeable_rx_bufs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Work struct for refilling if we run low on memory. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a> <a class=\"id\" href=\"#refill\">refill</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Chain pages by the private ptr. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#pages\">pages</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* fragments + linear part + virtio header */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#rx_sg\">rx_sg</a>[<a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a> + 2];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#tx_sg\">tx_sg</a>[<a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a> + 2];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a> {", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_net_hdr\">virtio_net_hdr</a> <a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_net_hdr_mrg_rxbuf\">virtio_net_hdr_mrg_rxbuf</a> <a class=\"id\" href=\"#mhdr\">mhdr</a>;", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num_sg\">num_sg</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#padded_vnet_hdr\">padded_vnet_hdr</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_net_hdr\">virtio_net_hdr</a> <a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * virtio_net_hdr should be in a separated sg buffer because of a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * QEMU bug, and data sg buffer shares same page with this header sg.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This padding makes next sg 16 byte aligned after virtio_net_hdr.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#padding\">padding</a>[6];", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a> *<a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a> *)<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#cb\">cb</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * private is used to chain pages for big packets, put the whole</span>", 
"<span class=\"comment\"> * most recent used list in the beginning for reuse</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#give_pages\">give_pages</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find end of list, sew whole thing into vi-&gt;pages. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#page\">page</a>; <a class=\"id\" href=\"#end\">end</a>-><a class=\"id\" href=\"#private\">private</a>; <a class=\"id\" href=\"#end\">end</a> = (struct <a class=\"id\" href=\"#page\">page</a> *)<a class=\"id\" href=\"#end\">end</a>-><a class=\"id\" href=\"#private\">private</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a>-><a class=\"id\" href=\"#private\">private</a> = (unsigned long)<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#get_a_page\">get_a_page</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#pages\">pages</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#pages\">pages</a> = (struct <a class=\"id\" href=\"#page\">page</a> *)<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clear private here, it is used to chain pages */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#private\">private</a> = 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#alloc_page\">alloc_page</a>(<a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#skb_xmit_done\">skb_xmit_done</a>(struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#svq\">svq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#svq\">svq</a>-><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Suppress further interrupts. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virtqueue_disable_cb\">virtqueue_disable_cb</a>(<a class=\"id\" href=\"#svq\">svq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We were probably waiting for more output buffers. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_wake_queue\">netif_wake_queue</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#set_skb_frag\">set_skb_frag</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#offset\">offset</a>, unsigned int *<a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_frag_t\">skb_frag_t</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = &amp;<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#min\">min</a>((unsigned)<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#offset\">offset</a>, *<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#page_offset\">page_offset</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> += <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a>++;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#page_to_skb\">page_to_skb</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#hdr_len\">hdr_len</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* copy small packet so we can reuse these pages for small data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#netdev_alloc_skb_ip_align\">netdev_alloc_skb_ip_align</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#GOOD_COPY_LEN\">GOOD_COPY_LEN</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#mergeable_rx_bufs\">mergeable_rx_bufs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr_len\">hdr_len</a> = sizeof <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#mhdr\">mhdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#hdr_len\">hdr_len</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr_len\">hdr_len</a> = sizeof <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = sizeof(struct <a class=\"id\" href=\"#padded_vnet_hdr\">padded_vnet_hdr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#hdr\">hdr</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#hdr_len\">hdr_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#hdr_len\">hdr_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &gt; <a class=\"id\" href=\"#skb_tailroom\">skb_tailroom</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#skb_tailroom\">skb_tailroom</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#copy\">copy</a>), <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#copy\">copy</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_skb_frag\">set_skb_frag</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#offset\">offset</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = (struct <a class=\"id\" href=\"#page\">page</a> *)<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#give_pages\">give_pages</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#receive_mergeable\">receive_mergeable</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_buf\">num_buf</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_buf\">num_buf</a> = <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#mhdr\">mhdr</a>.<a class=\"id\" href=\"#num_buffers\">num_buffers</a>;", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#num_buf\">num_buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: packet too long\\n\", <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_length_errors\">rx_length_errors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#virtqueue_get_buf\">virtqueue_get_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: rx error: %d buffers missing\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#mhdr\">mhdr</a>.<a class=\"id\" href=\"#num_buffers\">num_buffers</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_length_errors\">rx_length_errors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_skb_frag\">set_skb_frag</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#page\">page</a>, 0, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#receive_buf\">receive_buf</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#len\">len</a> &lt; sizeof(struct <a class=\"id\" href=\"#virtio_net_hdr\">virtio_net_hdr</a>) + <a class=\"id\" href=\"#ETH_HLEN\">ETH_HLEN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: short packet %i\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_length_errors\">rx_length_errors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#mergeable_rx_bufs\">mergeable_rx_bufs</a> || <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#big_packets\">big_packets</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#give_pages\">give_pages</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_kfree_skb\">dev_kfree_skb</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#mergeable_rx_bufs\">mergeable_rx_bufs</a> && !<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#big_packets\">big_packets</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= sizeof(struct <a class=\"id\" href=\"#virtio_net_hdr\">virtio_net_hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_trim\">skb_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#page_to_skb\">page_to_skb</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_dropped\">rx_dropped</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#give_pages\">give_pages</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#mergeable_rx_bufs\">mergeable_rx_bufs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#receive_mergeable\">receive_mergeable</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_kfree_skb\">dev_kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_bytes\">rx_bytes</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_packets\">rx_packets</a>++;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VIRTIO_NET_HDR_F_NEEDS_CSUM\">VIRTIO_NET_HDR_F_NEEDS_CSUM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"Needs csum!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_partial_csum_set\">skb_partial_csum_set</a>(<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#csum_start\">csum_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#csum_offset\">csum_offset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#frame_err\">frame_err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#eth_type_trans\">eth_type_trans</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"Receiving skb proto 0x%04x len %i type %i\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a>), <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> != <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_NONE\">VIRTIO_NET_HDR_GSO_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"GSO!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; ~<a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_ECN\">VIRTIO_NET_HDR_GSO_ECN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_TCPV4\">VIRTIO_NET_HDR_GSO_TCPV4</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_TCPV4\">SKB_GSO_TCPV4</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_UDP\">VIRTIO_NET_HDR_GSO_UDP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_TCPV6\">VIRTIO_NET_HDR_GSO_TCPV6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_TCPV6\">SKB_GSO_TCPV6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s: bad gso type %u.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#frame_err\">frame_err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_ECN\">VIRTIO_NET_HDR_GSO_ECN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> |= <a class=\"id\" href=\"#SKB_GSO_TCP_ECN\">SKB_GSO_TCP_ECN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> = <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_size\">gso_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s: zero gso size.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#frame_err\">frame_err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Header must be checked, and gso_segs computed. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> |= <a class=\"id\" href=\"#SKB_GSO_DODGY\">SKB_GSO_DODGY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_segs\">gso_segs</a> = 0;", 
];
xr_frag_insert('l/9e/5cf27a6031118108f3f40f39bbc69a1781adfe.xr', __xr_tmp);
