var __xr_tmp = [
"<span class=\"comment\">/* user_defined.c: user defined key type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 Red Hat, Inc. All Rights Reserved.</span>", 
"<span class=\"comment\"> * Written by David Howells (dhowells@redhat.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#keys\">keys</a>/<a class=\"id\" href=\"#user\">user</a>-<a class=\"id\" href=\"#type\">type</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * user defined keys take an arbitrary string as the description and an</span>", 
"<span class=\"comment\"> * arbitrary blob of data as the payload</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key_type\">key_type</a> <a class=\"id\" href=\"#key_type_user\">key_type_user</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"user\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#instantiate\">instantiate</a><span class=\"ts\"/>= <a class=\"id\" href=\"#user_instantiate\">user_instantiate</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#update\">update</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#user_update\">user_update</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#match\">match</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#user_match\">user_match</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#revoke\">revoke</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#user_revoke\">user_revoke</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy\">destroy</a><span class=\"ts\"/>= <a class=\"id\" href=\"#user_destroy\">user_destroy</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#describe\">describe</a><span class=\"ts\"/>= <a class=\"id\" href=\"#user_describe\">user_describe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#user_read\">user_read</a>,", 
"};", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#key_type_user\">key_type_user</a>);", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * instantiate a user defined key</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#user_instantiate\">user_instantiate</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, const void *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#datalen\">datalen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_key_payload\">user_key_payload</a> *<a class=\"id\" href=\"#upayload\">upayload</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#datalen\">datalen</a> <= 0 || <a class=\"id\" href=\"#datalen\">datalen</a> &gt; 32767 || !<a class=\"id\" href=\"#data\">data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_payload_reserve\">key_payload_reserve</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#datalen\">datalen</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upayload\">upayload</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#upayload\">upayload</a>) + <a class=\"id\" href=\"#datalen\">datalen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#upayload\">upayload</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* attach the data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upayload\">upayload</a>-><a class=\"id\" href=\"#datalen\">datalen</a> = <a class=\"id\" href=\"#datalen\">datalen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#upayload\">upayload</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#datalen\">datalen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#upayload\">upayload</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end user_instantiate() */</span>", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#user_instantiate\">user_instantiate</a>);", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * dispose of the old data from an updated user defined key</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#user_update_rcu_disposal\">user_update_rcu_disposal</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#rcu\">rcu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_key_payload\">user_key_payload</a> *<a class=\"id\" href=\"#upayload\">upayload</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upayload\">upayload</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#rcu\">rcu</a>, struct <a class=\"id\" href=\"#user_key_payload\">user_key_payload</a>, <a class=\"id\" href=\"#rcu\">rcu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#upayload\">upayload</a>);", 
"", 
"} <span class=\"comment\">/* end user_update_rcu_disposal() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * update a user defined key</span>", 
"<span class=\"comment\"> * - the key's semaphore is write-locked</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#user_update\">user_update</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, const void *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#datalen\">datalen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_key_payload\">user_key_payload</a> *<a class=\"id\" href=\"#upayload\">upayload</a>, *<a class=\"id\" href=\"#zap\">zap</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#datalen\">datalen</a> <= 0 || <a class=\"id\" href=\"#datalen\">datalen</a> &gt; 32767 || !<a class=\"id\" href=\"#data\">data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* construct a replacement payload */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upayload\">upayload</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#upayload\">upayload</a>) + <a class=\"id\" href=\"#datalen\">datalen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#upayload\">upayload</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upayload\">upayload</a>-><a class=\"id\" href=\"#datalen\">datalen</a> = <a class=\"id\" href=\"#datalen\">datalen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#upayload\">upayload</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#datalen\">datalen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check the quota and attach the new data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zap\">zap</a> = <a class=\"id\" href=\"#upayload\">upayload</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_payload_reserve\">key_payload_reserve</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#datalen\">datalen</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* attach the new data, displacing the old */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zap\">zap</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#upayload\">upayload</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#zap\">zap</a>-><a class=\"id\" href=\"#rcu\">rcu</a>, <a class=\"id\" href=\"#user_update_rcu_disposal\">user_update_rcu_disposal</a>);", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end user_update() */</span>", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#user_update\">user_update</a>);", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * match users on their name</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#user_match\">user_match</a>(const struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, const void *<a class=\"id\" href=\"#description\">description</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#description\">description</a>) == 0;", 
"", 
"} <span class=\"comment\">/* end user_match() */</span>", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#user_match\">user_match</a>);", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * dispose of the links from a revoked keyring</span>", 
"<span class=\"comment\"> * - called with the key sem write-locked</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#user_revoke\">user_revoke</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_key_payload\">user_key_payload</a> *<a class=\"id\" href=\"#upayload\">upayload</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear the quota */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_payload_reserve\">key_payload_reserve</a>(<a class=\"id\" href=\"#key\">key</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#upayload\">upayload</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#upayload\">upayload</a>-><a class=\"id\" href=\"#rcu\">rcu</a>, <a class=\"id\" href=\"#user_update_rcu_disposal\">user_update_rcu_disposal</a>);", 
"<span class=\"ts\"/>}", 
"", 
"} <span class=\"comment\">/* end user_revoke() */</span>", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#user_revoke\">user_revoke</a>);", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * dispose of the data dangling from the corpse of a user key</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#user_destroy\">user_destroy</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_key_payload\">user_key_payload</a> *<a class=\"id\" href=\"#upayload\">upayload</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#upayload\">upayload</a>);", 
"", 
"} <span class=\"comment\">/* end user_destroy() */</span>", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#user_destroy\">user_destroy</a>);", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * describe the user key</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#user_describe\">user_describe</a>(const struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#description\">description</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \": %u\", <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#datalen\">datalen</a>);", 
"", 
"} <span class=\"comment\">/* end user_describe() */</span>", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#user_describe\">user_describe</a>);", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * read the key data</span>", 
"<span class=\"comment\"> * - the key's semaphore is read-locked</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#user_read\">user_read</a>(const struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_key_payload\">user_key_payload</a> *<a class=\"id\" href=\"#upayload\">upayload</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upayload\">upayload</a> = <a class=\"id\" href=\"#rcu_dereference_protected\">rcu_dereference_protected</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#rwsem_is_locked\">rwsem_is_locked</a>(&amp;((struct <a class=\"id\" href=\"#key\">key</a> *)<a class=\"id\" href=\"#key\">key</a>)-><a class=\"id\" href=\"#sem\">sem</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#upayload\">upayload</a>-><a class=\"id\" href=\"#datalen\">datalen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we can return the data as is */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a> && <a class=\"id\" href=\"#buflen\">buflen</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buflen\">buflen</a> &gt; <a class=\"id\" href=\"#upayload\">upayload</a>-><a class=\"id\" href=\"#datalen\">datalen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#upayload\">upayload</a>-><a class=\"id\" href=\"#datalen\">datalen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#upayload\">upayload</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#buflen\">buflen</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end user_read() */</span>", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#user_read\">user_read</a>);", 
];
xr_frag_insert('l/9e/a0d100915cd65618e72932a1d298d125b65212.xr', __xr_tmp);
