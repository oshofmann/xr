var __xr_tmp = [
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#set_bf_sort\">set_bf_sort</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"HP ProLiant DL380\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"HP\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"ProLiant DL380\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__i386__\">__i386__</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#assign_all_busses\">assign_all_busses</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Compaq EVO N800c\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Compaq\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"EVO N800c\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#set_bf_sort\">set_bf_sort</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"HP ProLiant DL385 G2\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"HP\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"ProLiant DL385 G2\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#set_bf_sort\">set_bf_sort</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"HP ProLiant DL585 G2\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"HP\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"ProLiant DL585 G2\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{}", 
"};", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dmi_check_pciprobe\">dmi_check_pciprobe</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_check_system\">dmi_check_system</a>(<a class=\"id\" href=\"#pciprobe_dmi_table\">pciprobe_dmi_table</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> * <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pcibios_scan_root\">pcibios_scan_root</a>(int <a class=\"id\" href=\"#busnum\">busnum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_sysdata\">pci_sysdata</a> *<a class=\"id\" href=\"#sd\">sd</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#pci_find_next_bus\">pci_find_next_bus</a>(<a class=\"id\" href=\"#bus\">bus</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> == <a class=\"id\" href=\"#busnum\">busnum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Already scanned */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate per-root-bus (not per bus) arch-specific data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TODO: leak; this memory is never freed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It's arguable whether it's worth the trouble to care.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sd\">sd</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sd\">sd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PCI: OOM, not probing PCI bus %02x\\n\", <a class=\"id\" href=\"#busnum\">busnum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#get_mp_bus_to_node\">get_mp_bus_to_node</a>(<a class=\"id\" href=\"#busnum\">busnum</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"PCI: Probing PCI hardware (bus %02x)\\n\", <a class=\"id\" href=\"#busnum\">busnum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#pci_scan_bus_parented\">pci_scan_bus_parented</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#busnum\">busnum</a>, &amp;<a class=\"id\" href=\"#pci_root_ops\">pci_root_ops</a>, <a class=\"id\" href=\"#sd\">sd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sd\">sd</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bus\">bus</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pcibios_init\">pcibios_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a> = &amp;<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#raw_pci_ops\">raw_pci_ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"PCI: System does not support PCI\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set PCI cacheline size to that of the CPU if the CPU has reported it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (For older CPUs that don't support cpuid, we se it to 32 bytes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It's also good for 386/486s (which actually have 16)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as quite a few PCI devices do not support smaller values.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_clflush_size\">x86_clflush_size</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dfl_cache_line_size\">pci_dfl_cache_line_size</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_clflush_size\">x86_clflush_size</a> >> 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"PCI: pci_cache_line_size set to %d bytes\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dfl_cache_line_size\">pci_dfl_cache_line_size</a> << 2);", 
"<span class=\"ts\"/>} else {", 
" <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dfl_cache_line_size\">pci_dfl_cache_line_size</a> = 32 >> 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"PCI: Unknown cacheline size. Setting to 32 bytes\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcibios_resource_survey\">pcibios_resource_survey</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_bf_sort\">pci_bf_sort</a> >= <a class=\"id\" href=\"#pci_force_bf\">pci_force_bf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_sort_breadthfirst\">pci_sort_breadthfirst</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"char * <a class=\"id\" href=\"#__devinit\">__devinit</a>  <a class=\"id\" href=\"#pcibios_setup\">pcibios_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"off\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"bfsort\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bf_sort\">pci_bf_sort</a> = <a class=\"id\" href=\"#pci_force_bf\">pci_force_bf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"nobfsort\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bf_sort\">pci_bf_sort</a> = <a class=\"id\" href=\"#pci_force_nobf\">pci_force_nobf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_BIOS\">CONFIG_PCI_BIOS</a>", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"bios\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> = <a class=\"id\" href=\"#PCI_PROBE_BIOS\">PCI_PROBE_BIOS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"nobios\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> &= ~<a class=\"id\" href=\"#PCI_PROBE_BIOS\">PCI_PROBE_BIOS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"biosirq\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_BIOS_IRQ_SCAN\">PCI_BIOS_IRQ_SCAN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"pirqaddr=\", 9)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pirq_table_addr\">pirq_table_addr</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#str\">str</a>+9, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_DIRECT\">CONFIG_PCI_DIRECT</a>", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"conf1\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> = <a class=\"id\" href=\"#PCI_PROBE_CONF1\">PCI_PROBE_CONF1</a> | <a class=\"id\" href=\"#PCI_NO_CHECKS\">PCI_NO_CHECKS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"conf2\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> = <a class=\"id\" href=\"#PCI_PROBE_CONF2\">PCI_PROBE_CONF2</a> | <a class=\"id\" href=\"#PCI_NO_CHECKS\">PCI_NO_CHECKS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_MMCONFIG\">CONFIG_PCI_MMCONFIG</a>", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"nommconf\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> &= ~<a class=\"id\" href=\"#PCI_PROBE_MMCONF\">PCI_PROBE_MMCONF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"check_enable_amd_mmconf\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_CHECK_ENABLE_AMD_MMCONF\">PCI_CHECK_ENABLE_AMD_MMCONF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"noacpi\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_noirq_set\">acpi_noirq_set</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"noearly\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_PROBE_NOEARLY\">PCI_PROBE_NOEARLY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_X86_VISWS\">CONFIG_X86_VISWS</a>", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"usepirqmask\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_USE_PIRQ_MASK\">PCI_USE_PIRQ_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"irqmask=\", 8)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcibios_irq_mask\">pcibios_irq_mask</a> = <a class=\"id\" href=\"#simple_strtol\">simple_strtol</a>(<a class=\"id\" href=\"#str\">str</a>+8, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"lastbus=\", 8)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcibios_last_bus\">pcibios_last_bus</a> = <a class=\"id\" href=\"#simple_strtol\">simple_strtol</a>(<a class=\"id\" href=\"#str\">str</a>+8, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"rom\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_ASSIGN_ROMS\">PCI_ASSIGN_ROMS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"norom\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_NOASSIGN_ROMS\">PCI_NOASSIGN_ROMS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"nobar\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_NOASSIGN_BARS\">PCI_NOASSIGN_BARS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"assign-busses\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_ASSIGN_ALL_BUSSES\">PCI_ASSIGN_ALL_BUSSES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"use_crs\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_USE__CRS\">PCI_USE__CRS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"nocrs\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_ROOT_NO_CRS\">PCI_ROOT_NO_CRS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"earlydump\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_early_dump_regs\">pci_early_dump_regs</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"routeirq\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_routeirq\">pci_routeirq</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"skip_isa_align\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_CAN_SKIP_ISA_ALIGN\">PCI_CAN_SKIP_ISA_ALIGN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"noioapicquirk\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#noioapicquirk\">noioapicquirk</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"ioapicreroute\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#noioapicreroute\">noioapicreroute</a> != -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#noioapicreroute\">noioapicreroute</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"noioapicreroute\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#noioapicreroute\">noioapicreroute</a> != -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#noioapicreroute\">noioapicreroute</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#str\">str</a>;", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#pcibios_assign_all_busses\">pcibios_assign_all_busses</a>(void)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pci_probe\">pci_probe</a> &amp; <a class=\"id\" href=\"#PCI_ASSIGN_ALL_BUSSES\">PCI_ASSIGN_ALL_BUSSES</a>) ? 1 : 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#pcibios_enable_device\">pcibios_enable_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pci_enable_resources\">pci_enable_resources</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#mask\">mask</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev_msi_enabled\">pci_dev_msi_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pcibios_enable_irq\">pcibios_enable_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#pcibios_disable_device\">pcibios_disable_device</a> (struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev_msi_enabled\">pci_dev_msi_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>) && <a class=\"id\" href=\"#pcibios_disable_irq\">pcibios_disable_irq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcibios_disable_irq\">pcibios_disable_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#pci_ext_cfg_avail\">pci_ext_cfg_avail</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#raw_pci_ext_ops\">raw_pci_ext_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> * <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_scan_bus_on_node\">pci_scan_bus_on_node</a>(int <a class=\"id\" href=\"#busno\">busno</a>, struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_sysdata\">pci_sysdata</a> *<a class=\"id\" href=\"#sd\">sd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate per-root-bus (not per bus) arch-specific data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TODO: leak; this memory is never freed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It's arguable whether it's worth the trouble to care.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sd\">sd</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sd\">sd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PCI: OOM, skipping PCI bus %02x\\n\", <a class=\"id\" href=\"#busno\">busno</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#pci_scan_bus\">pci_scan_bus</a>(<a class=\"id\" href=\"#busno\">busno</a>, <a class=\"id\" href=\"#ops\">ops</a>, <a class=\"id\" href=\"#sd\">sd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sd\">sd</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bus\">bus</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> * <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_scan_bus_with_sysdata\">pci_scan_bus_with_sysdata</a>(int <a class=\"id\" href=\"#busno\">busno</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_scan_bus_on_node\">pci_scan_bus_on_node</a>(<a class=\"id\" href=\"#busno\">busno</a>, &amp;<a class=\"id\" href=\"#pci_root_ops\">pci_root_ops</a>, -1);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NUMA info for PCI busses</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Early arch code is responsible for filling in reasonable values here.</span>", 
"<span class=\"comment\"> * A node id of \"-1\" means \"use current node\".  In other words, if a bus</span>", 
"<span class=\"comment\"> * has a -1 node id, it's not tightly coupled to any particular chunk</span>", 
"<span class=\"comment\"> * of memory (as is the case on some Nehalem systems).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUS_NR\">BUS_NR</a> 256", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"", 
"static int <a class=\"id\" href=\"#mp_bus_to_node\">mp_bus_to_node</a>[<a class=\"id\" href=\"#BUS_NR\">BUS_NR</a>] = {", 
"<span class=\"ts\"/>[0 ... <a class=\"id\" href=\"#BUS_NR\">BUS_NR</a> - 1] = -1", 
"};", 
"", 
"void <a class=\"id\" href=\"#set_mp_bus_to_node\">set_mp_bus_to_node</a>(int <a class=\"id\" href=\"#busnum\">busnum</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#busnum\">busnum</a> >= 0 &&  <a class=\"id\" href=\"#busnum\">busnum</a> &lt; <a class=\"id\" href=\"#BUS_NR\">BUS_NR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_bus_to_node\">mp_bus_to_node</a>[<a class=\"id\" href=\"#busnum\">busnum</a>] = <a class=\"id\" href=\"#node\">node</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#get_mp_bus_to_node\">get_mp_bus_to_node</a>(int <a class=\"id\" href=\"#busnum\">busnum</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a> = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#busnum\">busnum</a> &lt; 0 || <a class=\"id\" href=\"#busnum\">busnum</a> &gt; (<a class=\"id\" href=\"#BUS_NR\">BUS_NR</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#mp_bus_to_node\">mp_bus_to_node</a>[<a class=\"id\" href=\"#busnum\">busnum</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * let numa_node_id to decide it later in dma_alloc_pages</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if there is no ram on that node</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a> != -1 && !<a class=\"id\" href=\"#node_online\">node_online</a>(<a class=\"id\" href=\"#node\">node</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = -1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#node\">node</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"static int <a class=\"id\" href=\"#mp_bus_to_node\">mp_bus_to_node</a>[<a class=\"id\" href=\"#BUS_NR\">BUS_NR</a>] = {", 
"<span class=\"ts\"/>[0 ... <a class=\"id\" href=\"#BUS_NR\">BUS_NR</a> - 1] = -1", 
"};", 
"", 
"void <a class=\"id\" href=\"#set_mp_bus_to_node\">set_mp_bus_to_node</a>(int <a class=\"id\" href=\"#busnum\">busnum</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#busnum\">busnum</a> >= 0 &&  <a class=\"id\" href=\"#busnum\">busnum</a> &lt; <a class=\"id\" href=\"#BUS_NR\">BUS_NR</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_bus_to_node\">mp_bus_to_node</a>[<a class=\"id\" href=\"#busnum\">busnum</a>] = (unsigned char) <a class=\"id\" href=\"#node\">node</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#get_mp_bus_to_node\">get_mp_bus_to_node</a>(int <a class=\"id\" href=\"#busnum\">busnum</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#busnum\">busnum</a> &lt; 0 || <a class=\"id\" href=\"#busnum\">busnum</a> &gt; (<a class=\"id\" href=\"#BUS_NR\">BUS_NR</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#mp_bus_to_node\">mp_bus_to_node</a>[<a class=\"id\" href=\"#busnum\">busnum</a>];", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#node\">node</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NUMA */</span>", 
];
xr_frag_insert('l/9e/caeaea8eede304093fd64c00ae14366f0ffd9f.xr', __xr_tmp);
