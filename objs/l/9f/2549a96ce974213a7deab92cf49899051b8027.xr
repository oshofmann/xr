var __xr_tmp = [
"", 
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: exprep - ACPI AML (p-code) execution - field prep utilities</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acinterp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"amlcode.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acnamesp.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_EXECUTER\">ACPI_EXECUTER</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"exprep\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a>", 
"<a class=\"id\" href=\"#acpi_ex_decode_field_access\">acpi_ex_decode_field_access</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#field_flags\">field_flags</a>, <a class=\"id\" href=\"#u32\">u32</a> * <a class=\"id\" href=\"#return_byte_alignment\">return_byte_alignment</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_UNDER_DEVELOPMENT\">ACPI_UNDER_DEVELOPMENT</a>", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a>", 
"<a class=\"id\" href=\"#acpi_ex_generate_access\">acpi_ex_generate_access</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_bit_offset\">field_bit_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_bit_length\">field_bit_length</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#region_length\">region_length</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_generate_access</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  field_bit_offset    - Start of field within parent region/buffer</span>", 
"<span class=\"comment\"> *              field_bit_length    - Length of field in bits</span>", 
"<span class=\"comment\"> *              region_length       - Length of parent in bytes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Field granularity (8, 16, 32 or 64) and</span>", 
"<span class=\"comment\"> *              byte_alignment (1, 2, 3, or 4)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Generate an optimal access width for fields defined with the</span>", 
"<span class=\"comment\"> *              any_acc keyword.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: Need to have the region_length in order to check for boundary</span>", 
"<span class=\"comment\"> *       conditions (end-of-region).  However, the region_length is a deferred</span>", 
"<span class=\"comment\"> *       operation.  Therefore, to complete this implementation, the generation</span>", 
"<span class=\"comment\"> *       of this access width must be deferred until the region length has</span>", 
"<span class=\"comment\"> *       been evaluated.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a>", 
"<a class=\"id\" href=\"#acpi_ex_generate_access\">acpi_ex_generate_access</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_bit_offset\">field_bit_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_bit_length\">field_bit_length</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#region_length\">region_length</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_byte_length\">field_byte_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_byte_offset\">field_byte_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_byte_end_offset\">field_byte_end_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_start_offset\">field_start_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_end_offset\">field_end_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#minimum_access_width\">minimum_access_width</a> = 0xFFFFFFFF;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#minimum_accesses\">minimum_accesses</a> = 0xFFFFFFFF;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#accesses\">accesses</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_generate_access\">ex_generate_access</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Round Field start offset and length to \"minimal\" byte boundaries */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field_byte_offset\">field_byte_offset</a> = <a class=\"id\" href=\"#ACPI_DIV_8\">ACPI_DIV_8</a>(<a class=\"id\" href=\"#ACPI_ROUND_DOWN\">ACPI_ROUND_DOWN</a>(<a class=\"id\" href=\"#field_bit_offset\">field_bit_offset</a>, 8));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field_byte_end_offset\">field_byte_end_offset</a> = <a class=\"id\" href=\"#ACPI_DIV_8\">ACPI_DIV_8</a>(<a class=\"id\" href=\"#ACPI_ROUND_UP\">ACPI_ROUND_UP</a>(<a class=\"id\" href=\"#field_bit_length\">field_bit_length</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#field_bit_offset\">field_bit_offset</a>, 8));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field_byte_length\">field_byte_length</a> = <a class=\"id\" href=\"#field_byte_end_offset\">field_byte_end_offset</a> - <a class=\"id\" href=\"#field_byte_offset\">field_byte_offset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Bit length %u, Bit offset %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#field_bit_length\">field_bit_length</a>, <a class=\"id\" href=\"#field_bit_offset\">field_bit_offset</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Byte Length %u, Byte Offset %u, End Offset %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#field_byte_length\">field_byte_length</a>, <a class=\"id\" href=\"#field_byte_offset\">field_byte_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#field_byte_end_offset\">field_byte_end_offset</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Iterative search for the maximum access width that is both aligned</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and does not go beyond the end of the region</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Start at byte_acc and work upwards to qword_acc max. (1,2,4,8 bytes)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#access_byte_width\">access_byte_width</a> = 1; <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a> <= 8;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a> <<= 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 1) Round end offset up to next access boundary and make sure that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    this does not go beyond the end of the parent region.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 2) When the Access width is greater than the field_byte_length, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    are done. (This does not optimize for the perfectly aligned</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    case yet).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_ROUND_UP\">ACPI_ROUND_UP</a>(<a class=\"id\" href=\"#field_byte_end_offset\">field_byte_end_offset</a>, <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>) <=", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#region_length\">region_length</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#field_start_offset\">field_start_offset</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ROUND_DOWN\">ACPI_ROUND_DOWN</a>(<a class=\"id\" href=\"#field_byte_offset\">field_byte_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>) /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#field_end_offset\">field_end_offset</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ROUND_UP\">ACPI_ROUND_UP</a>((<a class=\"id\" href=\"#field_byte_length\">field_byte_length</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#field_byte_offset\">field_byte_offset</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>) /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#accesses\">accesses</a> = <a class=\"id\" href=\"#field_end_offset\">field_end_offset</a> - <a class=\"id\" href=\"#field_start_offset\">field_start_offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"AccessWidth %u end is within region\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Field Start %u, Field End %u -- requires %u accesses\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#field_start_offset\">field_start_offset</a>, <a class=\"id\" href=\"#field_end_offset\">field_end_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#accesses\">accesses</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Single access is optimal */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#accesses\">accesses</a> <= 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Entire field can be accessed with one operation of size %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_VALUE\">return_VALUE</a>(<a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Fits in the region, but requires more than one read/write.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * try the next wider access on next iteration</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#accesses\">accesses</a> &lt; <a class=\"id\" href=\"#minimum_accesses\">minimum_accesses</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#minimum_accesses\">minimum_accesses</a> = <a class=\"id\" href=\"#accesses\">accesses</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#minimum_access_width\">minimum_access_width</a> = <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"AccessWidth %u end is NOT within region\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#access_byte_width\">access_byte_width</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Field goes beyond end-of-region!\\n\"));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Field does not fit in the region at all */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_VALUE\">return_VALUE</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * This width goes beyond the end-of-region, back off to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * previous access</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Backing off to previous optimal access width of %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#minimum_access_width\">minimum_access_width</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_VALUE\">return_VALUE</a>(<a class=\"id\" href=\"#minimum_access_width\">minimum_access_width</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Could not read/write field with one operation,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * just use max access width</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Cannot access field in one operation, using width 8\\n\"));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_VALUE\">return_VALUE</a>(8);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ACPI_UNDER_DEVELOPMENT */</span>", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_decode_field_access</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  obj_desc            - Field object</span>", 
"<span class=\"comment\"> *              field_flags         - Encoded fieldflags (contains access bits)</span>", 
"<span class=\"comment\"> *              return_byte_alignment - Where the byte alignment is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Field granularity (8, 16, 32 or 64) and</span>", 
"<span class=\"comment\"> *              byte_alignment (1, 2, 3, or 4)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Decode the access_type bits of a field definition.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a>", 
"<a class=\"id\" href=\"#acpi_ex_decode_field_access\">acpi_ex_decode_field_access</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#field_flags\">field_flags</a>, <a class=\"id\" href=\"#u32\">u32</a> * <a class=\"id\" href=\"#return_byte_alignment\">return_byte_alignment</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#access\">access</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#byte_alignment\">byte_alignment</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bit_length\">bit_length</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_decode_field_access\">ex_decode_field_access</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#access\">access</a> = (<a class=\"id\" href=\"#field_flags\">field_flags</a> &amp; <a class=\"id\" href=\"#AML_FIELD_ACCESS_TYPE_MASK\">AML_FIELD_ACCESS_TYPE_MASK</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#access\">access</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AML_FIELD_ACCESS_ANY\">AML_FIELD_ACCESS_ANY</a>:", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_UNDER_DEVELOPMENT\">ACPI_UNDER_DEVELOPMENT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#byte_alignment\">byte_alignment</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_generate_access\">acpi_ex_generate_access</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#start_field_bit_offset\">start_field_bit_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#bit_length\">bit_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    0xFFFFFFFF", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* Temp until we pass region_length as parameter */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>    );", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_length\">bit_length</a> = <a class=\"id\" href=\"#byte_alignment\">byte_alignment</a> * 8;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#byte_alignment\">byte_alignment</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_length\">bit_length</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AML_FIELD_ACCESS_BYTE\">AML_FIELD_ACCESS_BYTE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AML_FIELD_ACCESS_BUFFER\">AML_FIELD_ACCESS_BUFFER</a>:<span class=\"ts\"/><span class=\"comment\">/* ACPI 2.0 (SMBus Buffer) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#byte_alignment\">byte_alignment</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_length\">bit_length</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AML_FIELD_ACCESS_WORD\">AML_FIELD_ACCESS_WORD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#byte_alignment\">byte_alignment</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_length\">bit_length</a> = 16;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AML_FIELD_ACCESS_DWORD\">AML_FIELD_ACCESS_DWORD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#byte_alignment\">byte_alignment</a> = 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_length\">bit_length</a> = 32;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AML_FIELD_ACCESS_QWORD\">AML_FIELD_ACCESS_QWORD</a>:<span class=\"ts\"/><span class=\"comment\">/* ACPI 2.0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#byte_alignment\">byte_alignment</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_length\">bit_length</a> = 64;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Invalid field access type */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Unknown field access type 0x%X\", <a class=\"id\" href=\"#access\">access</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_UINT32\">return_UINT32</a>(0);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ACPI_TYPE_BUFFER_FIELD\">ACPI_TYPE_BUFFER_FIELD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * buffer_field access can be on any byte boundary, so the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * byte_alignment is always 1 byte -- regardless of any byte_alignment</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * implied by the field access type.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#byte_alignment\">byte_alignment</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#return_byte_alignment\">return_byte_alignment</a> = <a class=\"id\" href=\"#byte_alignment\">byte_alignment</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_UINT32\">return_UINT32</a>(<a class=\"id\" href=\"#bit_length\">bit_length</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_prep_common_field_object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  obj_desc            - The field object</span>", 
"<span class=\"comment\"> *              field_flags         - Access, lock_rule, and update_rule.</span>", 
"<span class=\"comment\"> *                                    The format of a field_flag is described</span>", 
"<span class=\"comment\"> *                                    in the ACPI specification</span>", 
"<span class=\"comment\"> *              field_attribute     - Special attributes (not used)</span>", 
"<span class=\"comment\"> *              field_bit_position  - Field start position</span>", 
"<span class=\"comment\"> *              field_bit_length    - Field length in number of bits</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Initialize the areas of the field object that are common</span>", 
"<span class=\"comment\"> *              to the various types of fields.  Note: This is very \"sensitive\"</span>", 
"<span class=\"comment\"> *              code because we are solving the general case for field</span>", 
"<span class=\"comment\"> *              alignment.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_prep_common_field_object\">acpi_ex_prep_common_field_object</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#field_flags\">field_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#field_attribute\">field_attribute</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_bit_position\">field_bit_position</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_bit_length\">field_bit_length</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#access_bit_width\">access_bit_width</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#byte_alignment\">byte_alignment</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nearest_byte_address\">nearest_byte_address</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_prep_common_field_object\">ex_prep_common_field_object</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: the structure being initialized is the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ACPI_COMMON_FIELD_INFO;  No structure fields outside of the common</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * area are initialized by this procedure.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#field_flags\">field_flags</a> = <a class=\"id\" href=\"#field_flags\">field_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#attribute\">attribute</a> = <a class=\"id\" href=\"#field_attribute\">field_attribute</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#bit_length\">bit_length</a> = <a class=\"id\" href=\"#field_bit_length\">field_bit_length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Decode the access type so we can compute offsets.  The access type gives</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * two pieces of information - the width of each field access and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * necessary byte_alignment (address granularity) of the access.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For any_acc, the access_bit_width is the largest width that is both</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * necessary and possible in an attempt to access the whole field in one</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I/O operation.  However, for any_acc, the byte_alignment is always one</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * byte.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For all Buffer Fields, the byte_alignment is always one byte.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For all other access types (Byte, Word, Dword, Qword), the Bitwidth is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the same (equivalent) as the byte_alignment.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#access_bit_width\">access_bit_width</a> = <a class=\"id\" href=\"#acpi_ex_decode_field_access\">acpi_ex_decode_field_access</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#field_flags\">field_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#byte_alignment\">byte_alignment</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_bit_width\">access_bit_width</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_OPERAND_VALUE\">AE_AML_OPERAND_VALUE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup width (access granularity) fields */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#access_byte_width\">access_byte_width</a> = (<a class=\"id\" href=\"#u8\">u8</a>)", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_DIV_8\">ACPI_DIV_8</a>(<a class=\"id\" href=\"#access_bit_width\">access_bit_width</a>);<span class=\"ts\"/><span class=\"comment\">/* 1,  2,  4,  8 */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#access_bit_width\">access_bit_width</a> = (<a class=\"id\" href=\"#u8\">u8</a>) <a class=\"id\" href=\"#access_bit_width\">access_bit_width</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * base_byte_offset is the address of the start of the field within the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * region.  It is the byte address of the first *datum* (field-width data</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unit) of the field. (i.e., the first datum that contains at least the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * first *bit* of the field.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: byte_alignment is always either equal to the access_bit_width or 8</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (Byte access), and it defines the addressing granularity of the parent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * region or buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nearest_byte_address\">nearest_byte_address</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ROUND_BITS_DOWN_TO_BYTES\">ACPI_ROUND_BITS_DOWN_TO_BYTES</a>(<a class=\"id\" href=\"#field_bit_position\">field_bit_position</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#base_byte_offset\">base_byte_offset</a> = (<a class=\"id\" href=\"#u32\">u32</a>)", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ROUND_DOWN\">ACPI_ROUND_DOWN</a>(<a class=\"id\" href=\"#nearest_byte_address\">nearest_byte_address</a>, <a class=\"id\" href=\"#byte_alignment\">byte_alignment</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * start_field_bit_offset is the offset of the first bit of the field within</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a field datum.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#start_field_bit_offset\">start_field_bit_offset</a> = (<a class=\"id\" href=\"#u8\">u8</a>)", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#field_bit_position\">field_bit_position</a> -", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#ACPI_MUL_8\">ACPI_MUL_8</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#base_byte_offset\">base_byte_offset</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_prep_field_value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Info    - Contains all field creation info</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Construct a union acpi_operand_object of type def_field and</span>", 
"<span class=\"comment\"> *              connect it to the parent Node.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ex_prep_field_value\">acpi_ex_prep_field_value</a>(struct <a class=\"id\" href=\"#acpi_create_field_info\">acpi_create_field_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#second_desc\">second_desc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_prep_field_value\">ex_prep_field_value</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameter validation */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_type\">field_type</a> != <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_INDEX_FIELD\">ACPI_TYPE_LOCAL_INDEX_FIELD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#region_node\">region_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Null RegionNode\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_NO_OPERAND\">AE_AML_NO_OPERAND</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#acpi_ns_get_type\">acpi_ns_get_type</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#region_node\">region_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_REGION\">ACPI_TYPE_REGION</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Needed Region, found type 0x%X (%s)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#acpi_ut_get_type_name\">acpi_ut_get_type_name</a>(<a class=\"id\" href=\"#type\">type</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate a new field object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = <a class=\"id\" href=\"#acpi_ut_create_internal_object\">acpi_ut_create_internal_object</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_type\">field_type</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize areas of the object that are common to all fields */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_node\">field_node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_prep_common_field_object\">acpi_ex_prep_common_field_object</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_flags\">field_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attribute\">attribute</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_position\">field_bit_position</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_length\">field_bit_length</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_delete_object_desc\">acpi_ut_delete_object_desc</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize areas of the object that are specific to the field type */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_type\">field_type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REGION_FIELD\">ACPI_TYPE_LOCAL_REGION_FIELD</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#field\">field</a>.<a class=\"id\" href=\"#region_obj\">region_obj</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#region_node\">region_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* An additional reference for the container */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#field\">field</a>.<a class=\"id\" href=\"#region_obj\">region_obj</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allow full data read from EC address space */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#field\">field</a>.<a class=\"id\" href=\"#region_obj\">region_obj</a>-><a class=\"id\" href=\"#region\">region</a>.<a class=\"id\" href=\"#space_id\">space_id</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ADR_SPACE_EC\">ACPI_ADR_SPACE_EC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#bit_length\">bit_length</a> &gt; 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#width\">width</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ROUND_BITS_UP_TO_BYTES\">ACPI_ROUND_BITS_UP_TO_BYTES</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#bit_length\">bit_length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">// access_bit_width is u8, don't overflow it</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#width\">width</a> &gt; 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#width\">width</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#access_byte_width\">access_byte_width</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#width\">width</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common_field\">common_field</a>.<a class=\"id\" href=\"#access_bit_width\">access_bit_width</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>8 * <a class=\"id\" href=\"#width\">width</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"RegionField: BitOff %X, Off %X, Gran %X, Region %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#field\">field</a>.<a class=\"id\" href=\"#start_field_bit_offset\">start_field_bit_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#field\">field</a>.<a class=\"id\" href=\"#base_byte_offset\">base_byte_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#field\">field</a>.<a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#field\">field</a>.<a class=\"id\" href=\"#region_obj\">region_obj</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_BANK_FIELD\">ACPI_TYPE_LOCAL_BANK_FIELD</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#bank_field\">bank_field</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#bank_value\">bank_value</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#bank_field\">bank_field</a>.<a class=\"id\" href=\"#region_obj\">region_obj</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#region_node\">region_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#bank_field\">bank_field</a>.<a class=\"id\" href=\"#bank_obj\">bank_obj</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#register_node\">register_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* An additional reference for the attached objects */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#bank_field\">bank_field</a>.<a class=\"id\" href=\"#region_obj\">region_obj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#bank_field\">bank_field</a>.<a class=\"id\" href=\"#bank_obj\">bank_obj</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Bank Field: BitOff %X, Off %X, Gran %X, Region %p, BankReg %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#bank_field\">bank_field</a>.<a class=\"id\" href=\"#start_field_bit_offset\">start_field_bit_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#bank_field\">bank_field</a>.<a class=\"id\" href=\"#base_byte_offset\">base_byte_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#field\">field</a>.<a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#bank_field\">bank_field</a>.<a class=\"id\" href=\"#region_obj\">region_obj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#bank_field\">bank_field</a>.<a class=\"id\" href=\"#bank_obj\">bank_obj</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Remember location in AML stream of the field unit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * opcode and operands -- since the bank_value</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * operands must be evaluated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_desc\">second_desc</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next_object\">next_object</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_desc\">second_desc</a>-><a class=\"id\" href=\"#extra\">extra</a>.<a class=\"id\" href=\"#aml_start\">aml_start</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#data_register_node\">data_register_node</a>)-><a class=\"id\" href=\"#named\">named</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_desc\">second_desc</a>-><a class=\"id\" href=\"#extra\">extra</a>.<a class=\"id\" href=\"#aml_length\">aml_length</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#data_register_node\">data_register_node</a>)-><a class=\"id\" href=\"#named\">named</a>.<a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_INDEX_FIELD\">ACPI_TYPE_LOCAL_INDEX_FIELD</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the Index and Data registers */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#index_obj\">index_obj</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#register_node\">register_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#data_obj\">data_obj</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#data_register_node\">data_register_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#data_obj\">data_obj</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    || !<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#index_obj\">index_obj</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Null Index Object during field prep\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_delete_object_desc\">acpi_ut_delete_object_desc</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* An additional reference for the attached objects */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#data_obj\">data_obj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#index_obj\">index_obj</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * April 2006: Changed to match MS behavior</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The value written to the Index register is the byte offset of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * target field in units of the granularity of the index_field</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Previously, the value was calculated as an index in terms of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * width of the Data register, as below:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *      obj_desc-&gt;index_field.Value = (u32)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *          (Info-&gt;field_bit_position / ACPI_MUL_8 (</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *              obj_desc-&gt;Field.access_byte_width));</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * February 2006: Tried value as a byte offset:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *      obj_desc-&gt;index_field.Value = (u32)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *          ACPI_DIV_8 (Info-&gt;field_bit_position);</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#value\">value</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#ACPI_ROUND_DOWN\">ACPI_ROUND_DOWN</a>(<a class=\"id\" href=\"#ACPI_DIV_8\">ACPI_DIV_8</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_position\">field_bit_position</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"IndexField: BitOff %X, Off %X, Value %X, Gran %X, Index %p, Data %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#start_field_bit_offset\">start_field_bit_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#base_byte_offset\">base_byte_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#field\">field</a>.<a class=\"id\" href=\"#access_byte_width\">access_byte_width</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#index_obj\">index_obj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#index_field\">index_field</a>.<a class=\"id\" href=\"#data_obj\">data_obj</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No other types should get here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Store the constructed descriptor (obj_desc) into the parent Node,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * preserving the current type of that named_obj.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_attach_object\">acpi_ns_attach_object</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_node\">field_node</a>, <a class=\"id\" href=\"#obj_desc\">obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#acpi_ns_get_type\">acpi_ns_get_type</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_node\">field_node</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_BFIELD\">ACPI_DB_BFIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Set NamedObj %p [%4.4s], ObjDesc %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_node\">field_node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_node_name\">acpi_ut_get_node_name</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_node\">field_node</a>), <a class=\"id\" href=\"#obj_desc\">obj_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Remove local reference to the object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
];
xr_frag_insert('l/9f/2549a96ce974213a7deab92cf49899051b8027.xr', __xr_tmp);
