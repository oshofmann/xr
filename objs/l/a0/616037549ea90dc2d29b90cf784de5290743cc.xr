var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * xsave/xrstor support.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Suresh Siddha &lt;suresh.b.siddha@intel.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compat\">compat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i387\">i387</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sigcontext32\">sigcontext32</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xcr\">xcr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Supported feature mask by the CPU and the kernel.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Represents init state for the supported extended state.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#xsave_struct\">xsave_struct</a> *<a class=\"id\" href=\"#init_xstate_buf\">init_xstate_buf</a>;", 
"", 
"struct <a class=\"id\" href=\"#_fpx_sw_bytes\">_fpx_sw_bytes</a> <a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"struct <a class=\"id\" href=\"#_fpx_sw_bytes\">_fpx_sw_bytes</a> <a class=\"id\" href=\"#fx_sw_reserved_ia32\">fx_sw_reserved_ia32</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static unsigned int *<a class=\"id\" href=\"#xstate_offsets\">xstate_offsets</a>, *<a class=\"id\" href=\"#xstate_sizes\">xstate_sizes</a>, <a class=\"id\" href=\"#xstate_features\">xstate_features</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If a processor implementation discern that a processor state component is</span>", 
"<span class=\"comment\"> * in its initialized state it may modify the corresponding bit in the</span>", 
"<span class=\"comment\"> * xsave_hdr.xstate_bv as '0', with out modifying the corresponding memory</span>", 
"<span class=\"comment\"> * layout in the case of xsaveopt. While presenting the xstate information to</span>", 
"<span class=\"comment\"> * the user, we always ensure that the memory layout of a feature will be in</span>", 
"<span class=\"comment\"> * the init state if the corresponding header bit is zero. This is to ensure</span>", 
"<span class=\"comment\"> * that the user doesn't see some stale state in the memory layout during</span>", 
"<span class=\"comment\"> * signal handling, debugging etc.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__sanitize_i387_state\">__sanitize_i387_state</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#feature_bit\">feature_bit</a> = 0x2;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> *<a class=\"id\" href=\"#fx\">fx</a> = &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fx\">fx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#tsk\">tsk</a>)-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#TS_USEDFPU\">TS_USEDFPU</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xsave\">xsave</a>.<a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a>.<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * None of the feature bits are in init state. So nothing else</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to do for us, as the memory layout is upto date.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> &amp; <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>) == <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FP is in init state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> &amp; <a class=\"id\" href=\"#XSTATE_FP\">XSTATE_FP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#cwd\">cwd</a> = 0x37f;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#swd\">swd</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#twd\">twd</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#fop\">fop</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#rip\">rip</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#rdp\">rdp</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#st_space\">st_space</a>[0], 0, 128);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * SSE is in init state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> &amp; <a class=\"id\" href=\"#XSTATE_SSE\">XSTATE_SSE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#xmm_space\">xmm_space</a>[0], 0, 256);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> = (<a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a> &amp; ~<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>) >> 2;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Update all the other memory layouts for which the corresponding</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * header bit is in the init state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> &amp; 0x1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#xstate_offsets\">xstate_offsets</a>[<a class=\"id\" href=\"#feature_bit\">feature_bit</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#xstate_sizes\">xstate_sizes</a>[<a class=\"id\" href=\"#feature_bit\">feature_bit</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(((void *) <a class=\"id\" href=\"#fx\">fx</a>) + <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       ((void *) <a class=\"id\" href=\"#init_xstate_buf\">init_xstate_buf</a>) + <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> >>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#feature_bit\">feature_bit</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check for the presence of extended state information in the</span>", 
"<span class=\"comment\"> * user fpstate pointer in the sigcontext.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#check_for_xstate\">check_for_xstate</a>(struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#fpstate\">fpstate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#_fpx_sw_bytes\">_fpx_sw_bytes</a> *<a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#min_xstate_size\">min_xstate_size</a> = sizeof(struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      sizeof(struct <a class=\"id\" href=\"#xsave_hdr_struct\">xsave_hdr_struct</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#magic2\">magic2</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(<a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#sw_reserved\">sw_reserved</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#_fpx_sw_bytes\">_fpx_sw_bytes</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First Magic check failed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>-><a class=\"id\" href=\"#magic1\">magic1</a> != <a class=\"id\" href=\"#FP_XSTATE_MAGIC1\">FP_XSTATE_MAGIC1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check for error scenarios.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>-><a class=\"id\" href=\"#xstate_size\">xstate_size</a> &lt; <a class=\"id\" href=\"#min_xstate_size\">min_xstate_size</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>-><a class=\"id\" href=\"#xstate_size\">xstate_size</a> &gt; <a class=\"id\" href=\"#xstate_size\">xstate_size</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>-><a class=\"id\" href=\"#xstate_size\">xstate_size</a> &gt; <a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>-><a class=\"id\" href=\"#extended_size\">extended_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#magic2\">magic2</a>, (<a class=\"id\" href=\"#__u32\">__u32</a> *) (((void *)<a class=\"id\" href=\"#fpstate\">fpstate</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>-><a class=\"id\" href=\"#extended_size\">extended_size</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#FP_XSTATE_MAGIC2_SIZE\">FP_XSTATE_MAGIC2_SIZE</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check for the presence of second magic word at the end of memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * layout. This detects the case where the user just copied the legacy</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fpstate layout with out copying the extended state information</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in the memory layout.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#magic2\">magic2</a> != <a class=\"id\" href=\"#FP_XSTATE_MAGIC2\">FP_XSTATE_MAGIC2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Signal frame handlers.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#save_i387_xstate\">save_i387_xstate</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#sig_xstate_size\">sig_xstate_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#sig_xstate_size\">sig_xstate_size</a> &lt; <a class=\"id\" href=\"#xstate_size\">xstate_size</a>);", 
"", 
"<span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#buf\">buf</a> % 64)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"save_i387_xstate: bad fpstate %p\\n\", <a class=\"id\" href=\"#buf\">buf</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#used_math\">used_math</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#tsk\">tsk</a>)-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#TS_USEDFPU\">TS_USEDFPU</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#use_xsave\">use_xsave</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xsave_user\">xsave_user</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fxsave_user\">fxsave_user</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#tsk\">tsk</a>)-><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#TS_USEDFPU\">TS_USEDFPU</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stts\">stts</a>();", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sanitize_i387_state\">sanitize_i387_state</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#xstate_size\">xstate_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_used_math\">clear_used_math</a>(); <span class=\"comment\">/* trigger finit */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#use_xsave\">use_xsave</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#_fpstate\">_fpstate</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#fx\">fx</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#_xstate\">_xstate</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(&amp;<a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#sw_reserved\">sw_reserved</a>, &amp;<a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct <a class=\"id\" href=\"#_fpx_sw_bytes\">_fpx_sw_bytes</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#FP_XSTATE_MAGIC2\">FP_XSTATE_MAGIC2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#__user\">__user</a> *) (<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#sig_xstate_size\">sig_xstate_size</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    - <a class=\"id\" href=\"#FP_XSTATE_MAGIC2_SIZE\">FP_XSTATE_MAGIC2_SIZE</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Read the xstate_bv which we copied (directly from the cpu or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * from the state in task struct) to the user buffers and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * set the FP/SSE bits.</span>", 
];
xr_frag_insert('l/a0/616037549ea90dc2d29b90cf784de5290743cc.xr', __xr_tmp);
