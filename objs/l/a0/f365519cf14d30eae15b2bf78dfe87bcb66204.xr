var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#efivars_lock\">efivars_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* now *really* create the variable via EFI */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#set_variable\">set_variable</a>(<a class=\"id\" href=\"#new_var\">new_var</a>-><a class=\"id\" href=\"#VariableName\">VariableName</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#new_var\">new_var</a>-><a class=\"id\" href=\"#VendorGuid\">VendorGuid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_var\">new_var</a>-><a class=\"id\" href=\"#Attributes\">Attributes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_var\">new_var</a>-><a class=\"id\" href=\"#DataSize\">DataSize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_var\">new_var</a>-><a class=\"id\" href=\"#Data\">Data</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#EFI_SUCCESS\">EFI_SUCCESS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"efivars: set_variable() failed: status=%lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#efivars_lock\">efivars_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#efivars_lock\">efivars_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create the entry in sysfs.  Locking is not required here */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#efivar_create_sysfs_entry\">efivar_create_sysfs_entry</a>(<a class=\"id\" href=\"#utf8_strsize\">utf8_strsize</a>(<a class=\"id\" href=\"#new_var\">new_var</a>-><a class=\"id\" href=\"#VariableName\">VariableName</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>1024), <a class=\"id\" href=\"#new_var\">new_var</a>-><a class=\"id\" href=\"#VariableName\">VariableName</a>, &amp;<a class=\"id\" href=\"#new_var\">new_var</a>-><a class=\"id\" href=\"#VendorGuid\">VendorGuid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"efivars: variable created, but sysfs entry wasn't.\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#efivar_delete\">efivar_delete</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#bin_attr\">bin_attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#efi_variable\">efi_variable</a> *<a class=\"id\" href=\"#del_var\">del_var</a> = (struct <a class=\"id\" href=\"#efi_variable\">efi_variable</a> *)<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#efivar_entry\">efivar_entry</a> *<a class=\"id\" href=\"#search_efivar\">search_efivar</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#strsize1\">strsize1</a>, <a class=\"id\" href=\"#strsize2\">strsize2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#efi_status_t\">efi_status_t</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#EFI_NOT_FOUND\">EFI_NOT_FOUND</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#efivars_lock\">efivars_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Does this variable already exist?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#search_efivar\">search_efivar</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#efivar_list\">efivar_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strsize1\">strsize1</a> = <a class=\"id\" href=\"#utf8_strsize\">utf8_strsize</a>(<a class=\"id\" href=\"#search_efivar\">search_efivar</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#VariableName\">VariableName</a>, 1024);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strsize2\">strsize2</a> = <a class=\"id\" href=\"#utf8_strsize\">utf8_strsize</a>(<a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#VariableName\">VariableName</a>, 1024);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strsize1\">strsize1</a> == <a class=\"id\" href=\"#strsize2\">strsize2</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#memcmp\">memcmp</a>(&amp;(<a class=\"id\" href=\"#search_efivar\">search_efivar</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#VariableName\">VariableName</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#VariableName\">VariableName</a>, <a class=\"id\" href=\"#strsize1\">strsize1</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#efi_guidcmp\">efi_guidcmp</a>(<a class=\"id\" href=\"#search_efivar\">search_efivar</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#VendorGuid\">VendorGuid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#VendorGuid\">VendorGuid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#efivars_lock\">efivars_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* force the Attributes/DataSize to 0 to ensure deletion */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#Attributes\">Attributes</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#DataSize\">DataSize</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#set_variable\">set_variable</a>(<a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#VariableName\">VariableName</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#VendorGuid\">VendorGuid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#Attributes\">Attributes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#DataSize\">DataSize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_var\">del_var</a>-><a class=\"id\" href=\"#Data\">Data</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#EFI_SUCCESS\">EFI_SUCCESS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"efivars: set_variable() failed: status=%lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#efivars_lock\">efivars_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#search_efivar\">search_efivar</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* We need to release this lock before unregistering. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#efivars_lock\">efivars_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#efivar_unregister\">efivar_unregister</a>(<a class=\"id\" href=\"#search_efivar\">search_efivar</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* It's dead Jim.... */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> <a class=\"id\" href=\"#var_subsys_attr_new_var\">var_subsys_attr_new_var</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a> = {.<a class=\"id\" href=\"#name\">name</a> = \"new_var\", .<a class=\"id\" href=\"#mode\">mode</a> = 0200},", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#efivar_create\">efivar_create</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> <a class=\"id\" href=\"#var_subsys_attr_del_var\">var_subsys_attr_del_var</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a> = {.<a class=\"id\" href=\"#name\">name</a> = \"del_var\", .<a class=\"id\" href=\"#mode\">mode</a> = 0200},", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#efivar_delete\">efivar_delete</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Let's not leave out systab information that snuck into</span>", 
"<span class=\"comment\"> * the efivars driver</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#systab_show\">systab_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kobj\">kobj</a> || !<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#mps\">mps</a> != <a class=\"id\" href=\"#EFI_INVALID_TABLE_ADDR\">EFI_INVALID_TABLE_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#str\">str</a>, \"MPS=0x%lx\\n\", <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#mps\">mps</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#acpi20\">acpi20</a> != <a class=\"id\" href=\"#EFI_INVALID_TABLE_ADDR\">EFI_INVALID_TABLE_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#str\">str</a>, \"ACPI20=0x%lx\\n\", <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#acpi20\">acpi20</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#acpi\">acpi</a> != <a class=\"id\" href=\"#EFI_INVALID_TABLE_ADDR\">EFI_INVALID_TABLE_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#str\">str</a>, \"ACPI=0x%lx\\n\", <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#acpi\">acpi</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#smbios\">smbios</a> != <a class=\"id\" href=\"#EFI_INVALID_TABLE_ADDR\">EFI_INVALID_TABLE_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#str\">str</a>, \"SMBIOS=0x%lx\\n\", <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#smbios\">smbios</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#hcdp\">hcdp</a> != <a class=\"id\" href=\"#EFI_INVALID_TABLE_ADDR\">EFI_INVALID_TABLE_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#str\">str</a>, \"HCDP=0x%lx\\n\", <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#hcdp\">hcdp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#boot_info\">boot_info</a> != <a class=\"id\" href=\"#EFI_INVALID_TABLE_ADDR\">EFI_INVALID_TABLE_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#str\">str</a>, \"BOOTINFO=0x%lx\\n\", <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#boot_info\">boot_info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#uga\">uga</a> != <a class=\"id\" href=\"#EFI_INVALID_TABLE_ADDR\">EFI_INVALID_TABLE_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#str\">str</a>, \"UGA=0x%lx\\n\", <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#uga\">uga</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#str\">str</a> - <a class=\"id\" href=\"#buf\">buf</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> <a class=\"id\" href=\"#efi_attr_systab\">efi_attr_systab</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#systab\">systab</a>, 0400, <a class=\"id\" href=\"#systab_show\">systab_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#efi_subsys_attrs\">efi_subsys_attrs</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#efi_attr_systab\">efi_attr_systab</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,<span class=\"ts\"/><span class=\"comment\">/* maybe more in the future? */</span>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> <a class=\"id\" href=\"#efi_subsys_attr_group\">efi_subsys_attr_group</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attrs\">attrs</a> = <a class=\"id\" href=\"#efi_subsys_attrs\">efi_subsys_attrs</a>,", 
"};", 
"", 
"", 
"static struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#vars_kset\">vars_kset</a>;", 
"static struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#efi_kobj\">efi_kobj</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * efivar_create_sysfs_entry()</span>", 
"<span class=\"comment\"> * Requires:</span>", 
"<span class=\"comment\"> *    variable_name_size = number of bytes required to hold</span>", 
"<span class=\"comment\"> *                         variable_name (not counting the NULL</span>", 
"<span class=\"comment\"> *                         character at the end.</span>", 
"<span class=\"comment\"> *    efivars_lock is not held on entry or exit.</span>", 
"<span class=\"comment\"> * Returns 1 on failure, 0 on success</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#efivar_create_sysfs_entry\">efivar_create_sysfs_entry</a>(unsigned long <a class=\"id\" href=\"#variable_name_size\">variable_name_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#efi_char16_t\">efi_char16_t</a> *<a class=\"id\" href=\"#variable_name\">variable_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#efi_guid_t\">efi_guid_t</a> *<a class=\"id\" href=\"#vendor_guid\">vendor_guid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#short_name_size\">short_name_size</a> = <a class=\"id\" href=\"#variable_name_size\">variable_name_size</a> / sizeof(<a class=\"id\" href=\"#efi_char16_t\">efi_char16_t</a>) + 38;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#short_name\">short_name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#efivar_entry\">efivar_entry</a> *<a class=\"id\" href=\"#new_efivar\">new_efivar</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#short_name\">short_name</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#short_name_size\">short_name_size</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_efivar\">new_efivar</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#efivar_entry\">efivar_entry</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#short_name\">short_name</a> || !<a class=\"id\" href=\"#new_efivar\">new_efivar</a>)  {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#short_name\">short_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#new_efivar\">new_efivar</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#new_efivar\">new_efivar</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#VariableName\">VariableName</a>, <a class=\"id\" href=\"#variable_name\">variable_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#variable_name_size\">variable_name_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;(<a class=\"id\" href=\"#new_efivar\">new_efivar</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#VendorGuid\">VendorGuid</a>), <a class=\"id\" href=\"#vendor_guid\">vendor_guid</a>, sizeof(<a class=\"id\" href=\"#efi_guid_t\">efi_guid_t</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert Unicode to normal chars (assume top bits are 0),</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   ala UTF-8 */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a> &lt; (int)(<a class=\"id\" href=\"#variable_name_size\">variable_name_size</a> / sizeof(<a class=\"id\" href=\"#efi_char16_t\">efi_char16_t</a>)); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#short_name\">short_name</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#variable_name\">variable_name</a>[<a class=\"id\" href=\"#i\">i</a>] &amp; 0xFF;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* This is ugly, but necessary to separate one vendor's</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   private variables from another's.         */</span>", 
"", 
"<span class=\"ts\"/>*(<a class=\"id\" href=\"#short_name\">short_name</a> + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#short_name\">short_name</a>)) = '-';", 
"<span class=\"ts\"/><a class=\"id\" href=\"#efi_guid_unparse\">efi_guid_unparse</a>(<a class=\"id\" href=\"#vendor_guid\">vendor_guid</a>, <a class=\"id\" href=\"#short_name\">short_name</a> + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#short_name\">short_name</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_efivar\">new_efivar</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#kset\">kset</a> = <a class=\"id\" href=\"#vars_kset\">vars_kset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#kobject_init_and_add\">kobject_init_and_add</a>(&amp;<a class=\"id\" href=\"#new_efivar\">new_efivar</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#efivar_ktype\">efivar_ktype</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%s\", <a class=\"id\" href=\"#short_name\">short_name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#short_name\">short_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#new_efivar\">new_efivar</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#new_efivar\">new_efivar</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#short_name\">short_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#short_name\">short_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#efivars_lock\">efivars_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#new_efivar\">new_efivar</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#efivar_list\">efivar_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#efivars_lock\">efivars_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For now we register the efi subsystem with the firmware subsystem</span>", 
"<span class=\"comment\"> * and the vars subsystem with the efi subsystem.  In the future, it</span>", 
"<span class=\"comment\"> * might make sense to split off the efi subsystem into its own</span>", 
"<span class=\"comment\"> * driver, but for now only efivars will register with it, so just</span>", 
"<span class=\"comment\"> * include it here.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#efivars_init\">efivars_init</a>(void)", 
];
xr_frag_insert('l/a0/f365519cf14d30eae15b2bf78dfe87bcb66204.xr', __xr_tmp);
