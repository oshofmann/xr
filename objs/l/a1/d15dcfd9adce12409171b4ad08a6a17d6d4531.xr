var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PCIe Port Native Services Support, ACPI-Related Part</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2010 Rafael J. Wysocki &lt;rjw@sisk.pl&gt;, Novell Inc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is subject to the terms and conditions of the GNU General Public</span>", 
"<span class=\"comment\"> * License V2.  See the file \"COPYING\" in the main directory of this archive</span>", 
"<span class=\"comment\"> * for more details.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>-<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pcieport_if\">pcieport_if</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"aer/aerdrv.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"../pci.h\"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_port_acpi_setup - Request the BIOS to release control of PCIe services.</span>", 
"<span class=\"comment\"> * @port: PCIe Port service for a root port or event collector.</span>", 
"<span class=\"comment\"> * @srv_mask: Bit mask of services that can be enabled for @port.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Invoked when @port is identified as a PCIe port device.  To avoid conflicts</span>", 
"<span class=\"comment\"> * with the BIOS PCIe port native services support requires the BIOS to yield</span>", 
"<span class=\"comment\"> * control of these services to the kernel.  The mask of services that the BIOS</span>", 
"<span class=\"comment\"> * allows to be enabled for @port is written to @srv_mask.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: It turns out that we cannot do that for individual port services</span>", 
"<span class=\"comment\"> * separately, because that would make some systems work incorrectly.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pcie_port_acpi_setup\">pcie_port_acpi_setup</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#port\">port</a>, int *<a class=\"id\" href=\"#srv_mask\">srv_mask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_pci_disabled\">acpi_pci_disabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#acpi_find_root_bridge_handle\">acpi_find_root_bridge_handle</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#OSC_PCI_EXPRESS_CAP_STRUCTURE_CONTROL\">OSC_PCI_EXPRESS_CAP_STRUCTURE_CONTROL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#OSC_PCI_EXPRESS_NATIVE_HP_CONTROL\">OSC_PCI_EXPRESS_NATIVE_HP_CONTROL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#OSC_PCI_EXPRESS_PME_CONTROL\">OSC_PCI_EXPRESS_PME_CONTROL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_aer_available\">pci_aer_available</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pcie_aer_get_firmware_first\">pcie_aer_get_firmware_first</a>(<a class=\"id\" href=\"#port\">port</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"PCIe errors handled by BIOS.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#OSC_PCI_EXPRESS_AER_CONTROL\">OSC_PCI_EXPRESS_AER_CONTROL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_pci_osc_control_set\">acpi_pci_osc_control_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#OSC_PCI_EXPRESS_CAP_STRUCTURE_CONTROL\">OSC_PCI_EXPRESS_CAP_STRUCTURE_CONTROL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"ACPI _OSC request failed (code %d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"ACPI _OSC control granted for 0x%02x\\n\", <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#srv_mask\">srv_mask</a> = <a class=\"id\" href=\"#PCIE_PORT_SERVICE_VC\">PCIE_PORT_SERVICE_VC</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#OSC_PCI_EXPRESS_NATIVE_HP_CONTROL\">OSC_PCI_EXPRESS_NATIVE_HP_CONTROL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#srv_mask\">srv_mask</a> |= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP\">PCIE_PORT_SERVICE_HP</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#OSC_PCI_EXPRESS_PME_CONTROL\">OSC_PCI_EXPRESS_PME_CONTROL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#srv_mask\">srv_mask</a> |= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME\">PCIE_PORT_SERVICE_PME</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#OSC_PCI_EXPRESS_AER_CONTROL\">OSC_PCI_EXPRESS_AER_CONTROL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#srv_mask\">srv_mask</a> |= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_AER\">PCIE_PORT_SERVICE_AER</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/a1/d15dcfd9adce12409171b4ad08a6a17d6d4531.xr', __xr_tmp);
