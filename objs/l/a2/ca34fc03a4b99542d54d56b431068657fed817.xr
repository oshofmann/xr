var __xr_tmp = [
"<span class=\"ts\"/>union <a class=\"id\" href=\"#_cpuid4_leaf_ebx\">_cpuid4_leaf_ebx</a> <a class=\"id\" href=\"#ebx\">ebx</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#_cpuid4_leaf_ecx\">_cpuid4_leaf_ecx</a> <a class=\"id\" href=\"#ecx\">ecx</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a> *<a class=\"id\" href=\"#l3\">l3</a>;", 
"};", 
"", 
"unsigned short<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a>;", 
"", 
"<span class=\"comment\">/* AMD doesn't have CPUID4. Emulate it here to report the same</span>", 
"<span class=\"comment\">   information to the user.  This makes some assumptions about the machine:</span>", 
"<span class=\"comment\">   L2 not shared, no SMT etc. that is currently true on AMD CPUs.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   In theory the TLBs could be reported as fake type (they are in \"dummy\").</span>", 
"<span class=\"comment\">   Maybe later */</span>", 
"union <a class=\"id\" href=\"#l1_cache\">l1_cache</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#line_size\">line_size</a>:8;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a>:8;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#assoc\">assoc</a>:8;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#size_in_kb\">size_in_kb</a>:8;", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#val\">val</a>;", 
"};", 
"", 
"union <a class=\"id\" href=\"#l2_cache\">l2_cache</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#line_size\">line_size</a>:8;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a>:4;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#assoc\">assoc</a>:4;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#size_in_kb\">size_in_kb</a>:16;", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#val\">val</a>;", 
"};", 
"", 
"union <a class=\"id\" href=\"#l3_cache\">l3_cache</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#line_size\">line_size</a>:8;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a>:4;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#assoc\">assoc</a>:4;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#res\">res</a>:2;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#size_encoded\">size_encoded</a>:14;", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#val\">val</a>;", 
"};", 
"", 
"static const unsigned short <a class=\"id\" href=\"#__cpuinitconst\">__cpuinitconst</a> <a class=\"id\" href=\"#assocs\">assocs</a>[] = {", 
"<span class=\"ts\"/>[1] = 1,", 
"<span class=\"ts\"/>[2] = 2,", 
"<span class=\"ts\"/>[4] = 4,", 
"<span class=\"ts\"/>[6] = 8,", 
"<span class=\"ts\"/>[8] = 16,", 
"<span class=\"ts\"/>[0xa] = 32,", 
"<span class=\"ts\"/>[0xb] = 48,", 
"<span class=\"ts\"/>[0xc] = 64,", 
"<span class=\"ts\"/>[0xd] = 96,", 
"<span class=\"ts\"/>[0xe] = 128,", 
"<span class=\"ts\"/>[0xf] = 0xffff <span class=\"comment\">/* fully associative - no way to show this currently */</span>", 
"};", 
"", 
"static const unsigned char <a class=\"id\" href=\"#__cpuinitconst\">__cpuinitconst</a> <a class=\"id\" href=\"#levels\">levels</a>[] = { 1, 1, 2, 3 };", 
"static const unsigned char <a class=\"id\" href=\"#__cpuinitconst\">__cpuinitconst</a> <a class=\"id\" href=\"#types\">types</a>[] = { 1, 2, 3, 3 };", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a>", 
"<a class=\"id\" href=\"#amd_cpuid4\">amd_cpuid4</a>(int <a class=\"id\" href=\"#leaf\">leaf</a>, union <a class=\"id\" href=\"#_cpuid4_leaf_eax\">_cpuid4_leaf_eax</a> *<a class=\"id\" href=\"#eax\">eax</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     union <a class=\"id\" href=\"#_cpuid4_leaf_ebx\">_cpuid4_leaf_ebx</a> *<a class=\"id\" href=\"#ebx\">ebx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     union <a class=\"id\" href=\"#_cpuid4_leaf_ecx\">_cpuid4_leaf_ecx</a> *<a class=\"id\" href=\"#ecx\">ecx</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#line_size\">line_size</a>, <a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a>, <a class=\"id\" href=\"#assoc\">assoc</a>, <a class=\"id\" href=\"#size_in_kb\">size_in_kb</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#l1_cache\">l1_cache</a> <a class=\"id\" href=\"#l1i\">l1i</a>, <a class=\"id\" href=\"#l1d\">l1d</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#l2_cache\">l2_cache</a> <a class=\"id\" href=\"#l2\">l2</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#l3_cache\">l3_cache</a> <a class=\"id\" href=\"#l3\">l3</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#l1_cache\">l1_cache</a> *<a class=\"id\" href=\"#l1\">l1</a> = &amp;<a class=\"id\" href=\"#l1d\">l1d</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a>-><a class=\"id\" href=\"#full\">full</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebx\">ebx</a>-><a class=\"id\" href=\"#full\">full</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ecx\">ecx</a>-><a class=\"id\" href=\"#full\">full</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(0x80000005, &amp;<a class=\"id\" href=\"#dummy\">dummy</a>, &amp;<a class=\"id\" href=\"#dummy\">dummy</a>, &amp;<a class=\"id\" href=\"#l1d\">l1d</a>.<a class=\"id\" href=\"#val\">val</a>, &amp;<a class=\"id\" href=\"#l1i\">l1i</a>.<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(0x80000006, &amp;<a class=\"id\" href=\"#dummy\">dummy</a>, &amp;<a class=\"id\" href=\"#dummy\">dummy</a>, &amp;<a class=\"id\" href=\"#l2\">l2</a>.<a class=\"id\" href=\"#val\">val</a>, &amp;<a class=\"id\" href=\"#l3\">l3</a>.<a class=\"id\" href=\"#val\">val</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#leaf\">leaf</a>) {", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1\">l1</a> = &amp;<a class=\"id\" href=\"#l1i\">l1i</a>;", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#l1\">l1</a>-><a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#assoc\">assoc</a> = <a class=\"id\" href=\"#assocs\">assocs</a>[<a class=\"id\" href=\"#l1\">l1</a>-><a class=\"id\" href=\"#assoc\">assoc</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#line_size\">line_size</a> = <a class=\"id\" href=\"#l1\">l1</a>-><a class=\"id\" href=\"#line_size\">line_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a> = <a class=\"id\" href=\"#l1\">l1</a>-><a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_in_kb\">size_in_kb</a> = <a class=\"id\" href=\"#l1\">l1</a>-><a class=\"id\" href=\"#size_in_kb\">size_in_kb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#l2\">l2</a>.<a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#assoc\">assoc</a> = <a class=\"id\" href=\"#assocs\">assocs</a>[<a class=\"id\" href=\"#l2\">l2</a>.<a class=\"id\" href=\"#assoc\">assoc</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#line_size\">line_size</a> = <a class=\"id\" href=\"#l2\">l2</a>.<a class=\"id\" href=\"#line_size\">line_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a> = <a class=\"id\" href=\"#l2\">l2</a>.<a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* cpu_data has errata corrections for K7 applied */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_in_kb\">size_in_kb</a> = <a class=\"id\" href=\"#current_cpu_data\">current_cpu_data</a>.<a class=\"id\" href=\"#x86_cache_size\">x86_cache_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#l3\">l3</a>.<a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#assoc\">assoc</a> = <a class=\"id\" href=\"#assocs\">assocs</a>[<a class=\"id\" href=\"#l3\">l3</a>.<a class=\"id\" href=\"#assoc\">assoc</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#line_size\">line_size</a> = <a class=\"id\" href=\"#l3\">l3</a>.<a class=\"id\" href=\"#line_size\">line_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a> = <a class=\"id\" href=\"#l3\">l3</a>.<a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_in_kb\">size_in_kb</a> = <a class=\"id\" href=\"#l3\">l3</a>.<a class=\"id\" href=\"#size_encoded\">size_encoded</a> * 512;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_has\">boot_cpu_has</a>(<a class=\"id\" href=\"#X86_FEATURE_AMD_DCM\">X86_FEATURE_AMD_DCM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_in_kb\">size_in_kb</a> = <a class=\"id\" href=\"#size_in_kb\">size_in_kb</a> >> 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#assoc\">assoc</a> = <a class=\"id\" href=\"#assoc\">assoc</a> >> 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#is_self_initializing\">is_self_initializing</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#types\">types</a>[<a class=\"id\" href=\"#leaf\">leaf</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#level\">level</a> = <a class=\"id\" href=\"#levels\">levels</a>[<a class=\"id\" href=\"#leaf\">leaf</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#num_cores_on_die\">num_cores_on_die</a> = <a class=\"id\" href=\"#current_cpu_data\">current_cpu_data</a>.<a class=\"id\" href=\"#x86_max_cores\">x86_max_cores</a> - 1;", 
"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#assoc\">assoc</a> == 0xffff)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#is_fully_associative\">is_fully_associative</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebx\">ebx</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#coherency_line_size\">coherency_line_size</a> = <a class=\"id\" href=\"#line_size\">line_size</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebx\">ebx</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#ways_of_associativity\">ways_of_associativity</a> = <a class=\"id\" href=\"#assoc\">assoc</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebx\">ebx</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#physical_line_partition\">physical_line_partition</a> = <a class=\"id\" href=\"#lines_per_tag\">lines_per_tag</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ecx\">ecx</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#number_of_sets\">number_of_sets</a> = (<a class=\"id\" href=\"#size_in_kb\">size_in_kb</a> * 1024) / <a class=\"id\" href=\"#line_size\">line_size</a> /", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ebx\">ebx</a>-><a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#ways_of_associativity\">ways_of_associativity</a> + 1) - 1;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#_cache_attr\">_cache_attr</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#attribute\">attribute</a> <a class=\"id\" href=\"#attr\">attr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> (*<a class=\"id\" href=\"#show\">show</a>)(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *, char *);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> (*<a class=\"id\" href=\"#store\">store</a>)(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *, const char *, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>);", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CPU_SUP_AMD\">CONFIG_CPU_SUP_AMD</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * L3 cache descriptors</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a> **<a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a> <a class=\"id\" href=\"#l3_caches\">l3_caches</a>;", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#amd_calc_l3_indices\">amd_calc_l3_indices</a>(struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a> *<a class=\"id\" href=\"#l3\">l3</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sc0\">sc0</a>, <a class=\"id\" href=\"#sc1\">sc1</a>, <a class=\"id\" href=\"#sc2\">sc2</a>, <a class=\"id\" href=\"#sc3\">sc3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0x1C4, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* calculate subcache sizes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#subcaches\">subcaches</a>[0] = <a class=\"id\" href=\"#sc0\">sc0</a> = !(<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#BIT\">BIT</a>(0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#subcaches\">subcaches</a>[1] = <a class=\"id\" href=\"#sc1\">sc1</a> = !(<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#BIT\">BIT</a>(4));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#subcaches\">subcaches</a>[2] = <a class=\"id\" href=\"#sc2\">sc2</a> = !(<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#BIT\">BIT</a>(8))  + !(<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#BIT\">BIT</a>(9));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#subcaches\">subcaches</a>[3] = <a class=\"id\" href=\"#sc3\">sc3</a> = !(<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#BIT\">BIT</a>(12)) + !(<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#BIT\">BIT</a>(13));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#indices\">indices</a> = (<a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#sc0\">sc0</a>, <a class=\"id\" href=\"#sc1\">sc1</a>), <a class=\"id\" href=\"#sc2\">sc2</a>), <a class=\"id\" href=\"#sc3\">sc3</a>) << 10) - 1;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a> * <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#amd_init_l3_cache\">amd_init_l3_cache</a>(int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a> *<a class=\"id\" href=\"#l3\">l3</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#node_to_k8_nb_misc\">node_to_k8_nb_misc</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#l3\">l3</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"Error allocating L3 struct\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_calc_l3_indices\">amd_calc_l3_indices</a>(<a class=\"id\" href=\"#l3\">l3</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#l3\">l3</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#amd_check_l3_disable\">amd_check_l3_disable</a>(struct <a class=\"id\" href=\"#_cpuid4_info_regs\">_cpuid4_info_regs</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> != 0x10)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &lt; 3)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* see errata #382 and #388 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> &lt; 0x8)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> == 0x8 ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> == 0x9)", 
"<span class=\"ts\"/><span class=\"ts\"/>&&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_mask\">x86_mask</a> &lt; 0x1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* not in virtualized environments */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_k8_northbridges\">num_k8_northbridges</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Strictly speaking, the amount in @size below is leaked since it is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * never freed but this is done only on shutdown so it doesn't matter.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#l3_caches\">l3_caches</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#num_k8_northbridges\">num_k8_northbridges</a> * sizeof(struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a> *);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l3_caches\">l3_caches</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#l3_caches\">l3_caches</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#amd_get_nb_id\">amd_get_nb_id</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#l3_caches\">l3_caches</a>[<a class=\"id\" href=\"#node\">node</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l3_caches\">l3_caches</a>[<a class=\"id\" href=\"#node\">node</a>] = <a class=\"id\" href=\"#amd_init_l3_cache\">amd_init_l3_cache</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l3_caches\">l3_caches</a>[<a class=\"id\" href=\"#node\">node</a>]-><a class=\"id\" href=\"#can_disable\">can_disable</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#l3_caches\">l3_caches</a>[<a class=\"id\" href=\"#node\">node</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#l3\">l3</a> = <a class=\"id\" href=\"#l3_caches\">l3_caches</a>[<a class=\"id\" href=\"#node\">node</a>];", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * check whether a slot used for disabling an L3 index is occupied.</span>", 
"<span class=\"comment\"> * @l3: L3 cache descriptor</span>", 
"<span class=\"comment\"> * @slot: slot number (0..1)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @returns: the disabled index if used or negative value if slot free.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#amd_get_l3_disable_slot\">amd_get_l3_disable_slot</a>(struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a> *<a class=\"id\" href=\"#l3\">l3</a>, unsigned <a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reg\">reg</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0x1BC + <a class=\"id\" href=\"#slot\">slot</a> * 4, &amp;<a class=\"id\" href=\"#reg\">reg</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check whether this slot is activated already */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reg\">reg</a> &amp; (3UL << 30))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#reg\">reg</a> &amp; 0xfff;", 
"", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_cache_disable\">show_cache_disable</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#l3\">l3</a> || !<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#can_disable\">can_disable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#amd_get_l3_disable_slot\">amd_get_l3_disable_slot</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#l3\">l3</a>, <a class=\"id\" href=\"#slot\">slot</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#index\">index</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"FREE\\n\");", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SHOW_CACHE_DISABLE\">SHOW_CACHE_DISABLE</a>(<a class=\"id\" href=\"#slot\">slot</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<a class=\"id\" href=\"#show_cache_disable_\">show_cache_disable_</a>##<a class=\"id\" href=\"#slot\">slot</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#show_cache_disable\">show_cache_disable</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#slot\">slot</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"<a class=\"id\" href=\"#SHOW_CACHE_DISABLE\">SHOW_CACHE_DISABLE</a>(0)", 
"<a class=\"id\" href=\"#SHOW_CACHE_DISABLE\">SHOW_CACHE_DISABLE</a>(1)", 
"", 
"static void <a class=\"id\" href=\"#amd_l3_disable_index\">amd_l3_disable_index</a>(struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a> *<a class=\"id\" href=\"#l3\">l3</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned <a class=\"id\" href=\"#slot\">slot</a>, unsigned long <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> |= <a class=\"id\" href=\"#BIT\">BIT</a>(30);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  disable index in all 4 subcaches</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#idx\">idx</a> | (<a class=\"id\" href=\"#i\">i</a> << 20);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#subcaches\">subcaches</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0x1BC + <a class=\"id\" href=\"#slot\">slot</a> * 4, <a class=\"id\" href=\"#reg\">reg</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to WBINVD on a core on the node containing the L3</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * cache which indices we disable therefore a simple wbinvd()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is not sufficient.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wbinvd_on_cpu\">wbinvd_on_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> |= <a class=\"id\" href=\"#BIT\">BIT</a>(31);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0x1BC + <a class=\"id\" href=\"#slot\">slot</a> * 4, <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * disable a L3 cache index by using a disable-slot</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @l3:    L3 cache descriptor</span>", 
"<span class=\"comment\"> * @cpu:   A CPU on the node containing the L3 cache</span>", 
"<span class=\"comment\"> * @slot:  slot number (0..1)</span>", 
"<span class=\"comment\"> * @index: index to disable</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @return: 0 on success, error status on failure</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#amd_set_l3_disable_slot\">amd_set_l3_disable_slot</a>(struct <a class=\"id\" href=\"#amd_l3_cache\">amd_l3_cache</a> *<a class=\"id\" href=\"#l3\">l3</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>, unsigned <a class=\"id\" href=\"#slot\">slot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SUBCACHE_MASK\">SUBCACHE_MASK</a><span class=\"ts\"/>(3UL << 20)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SUBCACHE_INDEX\">SUBCACHE_INDEX</a><span class=\"ts\"/>0xfff", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check whether this slot is already used or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the index is already disabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#amd_get_l3_disable_slot\">amd_get_l3_disable_slot</a>(<a class=\"id\" href=\"#l3\">l3</a>, <a class=\"id\" href=\"#slot\">slot</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check whether the other slot has disabled the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * same index already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> == <a class=\"id\" href=\"#amd_get_l3_disable_slot\">amd_get_l3_disable_slot</a>(<a class=\"id\" href=\"#l3\">l3</a>, !<a class=\"id\" href=\"#slot\">slot</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* do not allow writes outside of allowed bits */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#index\">index</a> &amp; ~(<a class=\"id\" href=\"#SUBCACHE_MASK\">SUBCACHE_MASK</a> | <a class=\"id\" href=\"#SUBCACHE_INDEX\">SUBCACHE_INDEX</a>)) ||", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#index\">index</a> &amp; <a class=\"id\" href=\"#SUBCACHE_INDEX\">SUBCACHE_INDEX</a>) &gt; <a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#indices\">indices</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_l3_disable_index\">amd_l3_disable_index</a>(<a class=\"id\" href=\"#l3\">l3</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#index\">index</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_cache_disable\">store_cache_disable</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#l3\">l3</a> || !<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#can_disable\">can_disable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpumask_first\">cpumask_first</a>(<a class=\"id\" href=\"#to_cpumask\">to_cpumask</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 10, &amp;<a class=\"id\" href=\"#val\">val</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#amd_set_l3_disable_slot\">amd_set_l3_disable_slot</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#l3\">l3</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"L3 disable slot %d in use!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#slot\">slot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#STORE_CACHE_DISABLE\">STORE_CACHE_DISABLE</a>(<a class=\"id\" href=\"#slot\">slot</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<a class=\"id\" href=\"#store_cache_disable_\">store_cache_disable_</a>##<a class=\"id\" href=\"#slot\">slot</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#store_cache_disable\">store_cache_disable</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#slot\">slot</a>);<span class=\"ts\"/>\\", 
"}", 
"<a class=\"id\" href=\"#STORE_CACHE_DISABLE\">STORE_CACHE_DISABLE</a>(0)", 
"<a class=\"id\" href=\"#STORE_CACHE_DISABLE\">STORE_CACHE_DISABLE</a>(1)", 
"", 
"static struct <a class=\"id\" href=\"#_cache_attr\">_cache_attr</a> <a class=\"id\" href=\"#cache_disable_0\">cache_disable_0</a> = <a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#cache_disable_0\">cache_disable_0</a>, 0644,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#show_cache_disable_0\">show_cache_disable_0</a>, <a class=\"id\" href=\"#store_cache_disable_0\">store_cache_disable_0</a>);", 
"static struct <a class=\"id\" href=\"#_cache_attr\">_cache_attr</a> <a class=\"id\" href=\"#cache_disable_1\">cache_disable_1</a> = <a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#cache_disable_1\">cache_disable_1</a>, 0644,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#show_cache_disable_1\">show_cache_disable_1</a>, <a class=\"id\" href=\"#store_cache_disable_1\">store_cache_disable_1</a>);", 
"", 
"#else<span class=\"ts\"/><span class=\"comment\">/* CONFIG_CPU_SUP_AMD */</span>", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a>", 
"<a class=\"id\" href=\"#amd_check_l3_disable\">amd_check_l3_disable</a>(struct <a class=\"id\" href=\"#_cpuid4_info_regs\">_cpuid4_info_regs</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, int <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_CPU_SUP_AMD */</span>", 
"", 
"static int", 
"<a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cpuid4_cache_lookup_regs\">cpuid4_cache_lookup_regs</a>(int <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#_cpuid4_info_regs\">_cpuid4_info_regs</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#_cpuid4_leaf_eax\">_cpuid4_leaf_eax</a> <span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#_cpuid4_leaf_ebx\">_cpuid4_leaf_ebx</a> <span class=\"ts\"/><a class=\"id\" href=\"#ebx\">ebx</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#_cpuid4_leaf_ecx\">_cpuid4_leaf_ecx</a> <span class=\"ts\"/><a class=\"id\" href=\"#ecx\">ecx</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#edx\">edx</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> == <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_cpuid4\">amd_cpuid4</a>(<a class=\"id\" href=\"#index\">index</a>, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_check_l3_disable\">amd_check_l3_disable</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid_count\">cpuid_count</a>(4, <a class=\"id\" href=\"#index\">index</a>, &amp;<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#full\">full</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>.<a class=\"id\" href=\"#full\">full</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>.<a class=\"id\" href=\"#full\">full</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#CACHE_TYPE_NULL\">CACHE_TYPE_NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>; <span class=\"comment\">/* better error ? */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#eax\">eax</a> = <a class=\"id\" href=\"#eax\">eax</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#ebx\">ebx</a> = <a class=\"id\" href=\"#ebx\">ebx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#ecx\">ecx</a> = <a class=\"id\" href=\"#ecx\">ecx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#size\">size</a> = (<a class=\"id\" href=\"#ecx\">ecx</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#number_of_sets\">number_of_sets</a>          + 1) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#ebx\">ebx</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#coherency_line_size\">coherency_line_size</a>     + 1) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#ebx\">ebx</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#physical_line_partition\">physical_line_partition</a> + 1) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#ebx\">ebx</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#ways_of_associativity\">ways_of_associativity</a>   + 1);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#find_num_cache_leaves\">find_num_cache_leaves</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a>, <a class=\"id\" href=\"#ebx\">ebx</a>, <a class=\"id\" href=\"#ecx\">ecx</a>, <a class=\"id\" href=\"#edx\">edx</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#_cpuid4_leaf_eax\">_cpuid4_leaf_eax</a><span class=\"ts\"/><a class=\"id\" href=\"#cache_eax\">cache_eax</a>;", 
"<span class=\"ts\"/>int <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = -1;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do cpuid(4) loop to find out num_cache_leaves */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid_count\">cpuid_count</a>(4, <a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache_eax\">cache_eax</a>.<a class=\"id\" href=\"#full\">full</a> = <a class=\"id\" href=\"#eax\">eax</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#cache_eax\">cache_eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#CACHE_TYPE_NULL\">CACHE_TYPE_NULL</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#init_intel_cacheinfo\">init_intel_cacheinfo</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Cache sizes */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#trace\">trace</a> = 0, <a class=\"id\" href=\"#l1i\">l1i</a> = 0, <a class=\"id\" href=\"#l1d\">l1d</a> = 0, <a class=\"id\" href=\"#l2\">l2</a> = 0, <a class=\"id\" href=\"#l3\">l3</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#new_l1d\">new_l1d</a> = 0, <a class=\"id\" href=\"#new_l1i\">new_l1i</a> = 0; <span class=\"comment\">/* Cache sizes from cpuid(4) */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#new_l2\">new_l2</a> = 0, <a class=\"id\" href=\"#new_l3\">new_l3</a> = 0, <a class=\"id\" href=\"#i\">i</a>; <span class=\"comment\">/* Cache sizes from cpuid(4) */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#l2_id\">l2_id</a> = 0, <a class=\"id\" href=\"#l3_id\">l3_id</a> = 0, <a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a>, <a class=\"id\" href=\"#index_msb\">index_msb</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_HT\">CONFIG_X86_HT</a>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#cpu_index\">cpu_index</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#cpuid_level\">cpuid_level</a> &gt; 3) {", 
"<span class=\"ts\"/><span class=\"ts\"/>static int <a class=\"id\" href=\"#is_initialized\">is_initialized</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_initialized\">is_initialized</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Init num_cache_leaves from boot CPU */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a> = <a class=\"id\" href=\"#find_num_cache_leaves\">find_num_cache_leaves</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_initialized\">is_initialized</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Whenever possible use cpuid(4), deterministic cache</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * parameters cpuid leaf to find the cache details</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#_cpuid4_info_regs\">_cpuid4_info_regs</a> <a class=\"id\" href=\"#this_leaf\">this_leaf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#cpuid4_cache_lookup_regs\">cpuid4_cache_lookup_regs</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#this_leaf\">this_leaf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#this_leaf\">this_leaf</a>.<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#level\">level</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_leaf\">this_leaf</a>.<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#type\">type</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CACHE_TYPE_DATA\">CACHE_TYPE_DATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_l1d\">new_l1d</a> = <a class=\"id\" href=\"#this_leaf\">this_leaf</a>.<a class=\"id\" href=\"#size\">size</a>/1024;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#this_leaf\">this_leaf</a>.<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#type\">type</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CACHE_TYPE_INST\">CACHE_TYPE_INST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_l1i\">new_l1i</a> = <a class=\"id\" href=\"#this_leaf\">this_leaf</a>.<a class=\"id\" href=\"#size\">size</a>/1024;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_l2\">new_l2</a> = <a class=\"id\" href=\"#this_leaf\">this_leaf</a>.<a class=\"id\" href=\"#size\">size</a>/1024;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a> = 1 + <a class=\"id\" href=\"#this_leaf\">this_leaf</a>.<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index_msb\">index_msb</a> = <a class=\"id\" href=\"#get_count_order\">get_count_order</a>(<a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l2_id\">l2_id</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#apicid\">apicid</a> >> <a class=\"id\" href=\"#index_msb\">index_msb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_l3\">new_l3</a> = <a class=\"id\" href=\"#this_leaf\">this_leaf</a>.<a class=\"id\" href=\"#size\">size</a>/1024;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a> = 1 + <a class=\"id\" href=\"#this_leaf\">this_leaf</a>.<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index_msb\">index_msb</a> = <a class=\"id\" href=\"#get_count_order\">get_count_order</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l3_id\">l3_id</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#apicid\">apicid</a> >> <a class=\"id\" href=\"#index_msb\">index_msb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't use cpuid2 if cpuid4 is supported. For P4, we use cpuid2 for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * trace cache</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a> == 0 || <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86\">x86</a> == 15) && <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#cpuid_level\">cpuid_level</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* supports eax=2  call */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#regs\">regs</a>[4];", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#dp\">dp</a> = (unsigned char *)<a class=\"id\" href=\"#regs\">regs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#only_trace\">only_trace</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a> != 0 && <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86\">x86</a> == 15)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#only_trace\">only_trace</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Number of times to iterate */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#cpuid_eax\">cpuid_eax</a>(2) &amp; 0xFF;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0 ; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n\">n</a> ; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(2, &amp;<a class=\"id\" href=\"#regs\">regs</a>[0], &amp;<a class=\"id\" href=\"#regs\">regs</a>[1], &amp;<a class=\"id\" href=\"#regs\">regs</a>[2], &amp;<a class=\"id\" href=\"#regs\">regs</a>[3]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If bit 31 is set, this is an unknown format */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0 ; <a class=\"id\" href=\"#j\">j</a> &lt; 3 ; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#regs\">regs</a>[<a class=\"id\" href=\"#j\">j</a>] &amp; (1 << 31))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>[<a class=\"id\" href=\"#j\">j</a>] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Byte 0 is level count, not a descriptor */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 1 ; <a class=\"id\" href=\"#j\">j</a> &lt; 16 ; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#des\">des</a> = <a class=\"id\" href=\"#dp\">dp</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#k\">k</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* look up this descriptor in the table */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#cache_table\">cache_table</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#descriptor\">descriptor</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cache_table\">cache_table</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#descriptor\">descriptor</a> == <a class=\"id\" href=\"#des\">des</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#only_trace\">only_trace</a> && <a class=\"id\" href=\"#cache_table\">cache_table</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#cache_type\">cache_type</a> != <a class=\"id\" href=\"#LVL_TRACE\">LVL_TRACE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#cache_table\">cache_table</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#cache_type\">cache_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#LVL_1_INST\">LVL_1_INST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1i\">l1i</a> += <a class=\"id\" href=\"#cache_table\">cache_table</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#LVL_1_DATA\">LVL_1_DATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1d\">l1d</a> += <a class=\"id\" href=\"#cache_table\">cache_table</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#LVL_2\">LVL_2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> += <a class=\"id\" href=\"#cache_table\">cache_table</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#LVL_3\">LVL_3</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a> += <a class=\"id\" href=\"#cache_table\">cache_table</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#LVL_TRACE\">LVL_TRACE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a> += <a class=\"id\" href=\"#cache_table\">cache_table</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_l1d\">new_l1d</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1d\">l1d</a> = <a class=\"id\" href=\"#new_l1d\">new_l1d</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_l1i\">new_l1i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1i\">l1i</a> = <a class=\"id\" href=\"#new_l1i\">new_l1i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_l2\">new_l2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> = <a class=\"id\" href=\"#new_l2\">new_l2</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_HT\">CONFIG_X86_HT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_llc_id\">cpu_llc_id</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#l2_id\">l2_id</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_l3\">new_l3</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a> = <a class=\"id\" href=\"#new_l3\">new_l3</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_HT\">CONFIG_X86_HT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_llc_id\">cpu_llc_id</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#l3_id\">l3_id</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_cache_size\">x86_cache_size</a> = <a class=\"id\" href=\"#l3\">l3</a> ? <a class=\"id\" href=\"#l3\">l3</a> : (<a class=\"id\" href=\"#l2\">l2</a> ? <a class=\"id\" href=\"#l2\">l2</a> : (<a class=\"id\" href=\"#l1i\">l1i</a>+<a class=\"id\" href=\"#l1d\">l1d</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#l2\">l2</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS\">CONFIG_SYSFS</a>", 
"", 
"<span class=\"comment\">/* pointer to _cpuid4_info array (for each cache leaf) */</span>", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *, <a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#y\">y</a>)<span class=\"ts\"/>(&amp;((<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#x\">x</a>))[<a class=\"id\" href=\"#y\">y</a>]))", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cache_shared_cpu_map_setup\">cache_shared_cpu_map_setup</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a><span class=\"ts\"/>*<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, *<a class=\"id\" href=\"#sibling_leaf\">sibling_leaf</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index_msb\">index_msb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#sibling\">sibling</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a> = &amp;<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#index\">index</a> == 3) && (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> == <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#llc_shared_map\">llc_shared_map</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#i\">i</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a> = <a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#sibling\">sibling</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#llc_shared_map\">llc_shared_map</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#sibling\">sibling</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#sibling\">sibling</a>, <a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a> = <a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a> = 1 + <a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_set_cpu\">cpumask_set_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#to_cpumask\">to_cpumask</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>));", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index_msb\">index_msb</a> = <a class=\"id\" href=\"#get_count_order\">get_count_order</a>(<a class=\"id\" href=\"#num_threads_sharing\">num_threads_sharing</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#i\">i</a>).<a class=\"id\" href=\"#apicid\">apicid</a> >> <a class=\"id\" href=\"#index_msb\">index_msb</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#apicid\">apicid</a> >> <a class=\"id\" href=\"#index_msb\">index_msb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_set_cpu\">cpumask_set_cpu</a>(<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_cpumask\">to_cpumask</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> != <a class=\"id\" href=\"#cpu\">cpu</a> && <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#i\">i</a>))  {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sibling_leaf\">sibling_leaf</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_set_cpu\">cpumask_set_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#to_cpumask\">to_cpumask</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sibling_leaf\">sibling_leaf</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cache_remove_shared_cpu_map\">cache_remove_shared_cpu_map</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a><span class=\"ts\"/>*<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, *<a class=\"id\" href=\"#sibling_leaf\">sibling_leaf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sibling\">sibling</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a> = <a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#sibling\">sibling</a>, <a class=\"id\" href=\"#to_cpumask\">to_cpumask</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sibling_leaf\">sibling_leaf</a> = <a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#sibling\">sibling</a>, <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_clear_cpu\">cpumask_clear_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#to_cpumask\">to_cpumask</a>(<a class=\"id\" href=\"#sibling_leaf\">sibling_leaf</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"#else", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cache_shared_cpu_map_setup\">cache_shared_cpu_map_setup</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cache_remove_shared_cpu_map\">cache_remove_shared_cpu_map</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#free_cache_attributes\">free_cache_attributes</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache_remove_shared_cpu_map\">cache_remove_shared_cpu_map</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#l3\">l3</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cpuid4_cache_lookup\">cpuid4_cache_lookup</a>(int <a class=\"id\" href=\"#index\">index</a>, struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_cpuid4_info_regs\">_cpuid4_info_regs</a> *<a class=\"id\" href=\"#leaf_regs\">leaf_regs</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#_cpuid4_info_regs\">_cpuid4_info_regs</a> *)<a class=\"id\" href=\"#this_leaf\">this_leaf</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpuid4_cache_lookup_regs\">cpuid4_cache_lookup_regs</a>(<a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#leaf_regs\">leaf_regs</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#get_cpu_leaves\">get_cpu_leaves</a>(void *<a class=\"id\" href=\"#_retval\">_retval</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>, *<a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#_retval\">_retval</a>, <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do cpuid and store the results */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a> = <a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#cpuid4_cache_lookup\">cpuid4_cache_lookup</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#this_leaf\">this_leaf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(*<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#j\">j</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache_remove_shared_cpu_map\">cache_remove_shared_cpu_map</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache_shared_cpu_map_setup\">cache_shared_cpu_map_setup</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#detect_cache_attributes\">detect_cache_attributes</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(", 
"<span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a>) * <a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_call_function_single\">smp_call_function_single</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#get_cpu_leaves\">get_cpu_leaves</a>, &amp;<a class=\"id\" href=\"#retval\">retval</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kobject\">kobject</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysfs\">sysfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern struct <a class=\"id\" href=\"#sysdev_class\">sysdev_class</a> <a class=\"id\" href=\"#cpu_sysdev_class\">cpu_sysdev_class</a>; <span class=\"comment\">/* from drivers/base/cpu.c */</span>", 
"", 
"<span class=\"comment\">/* pointer to kobject for cpuX/cache */</span>", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *, <a class=\"id\" href=\"#ici_cache_kobject\">ici_cache_kobject</a>);", 
"", 
"struct <a class=\"id\" href=\"#_index_kobject\">_index_kobject</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#index\">index</a>;", 
"};", 
"", 
"<span class=\"comment\">/* pointer to array of kobjects for cpuX/cache/indexY */</span>", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#_index_kobject\">_index_kobject</a> *, <a class=\"id\" href=\"#ici_index_kobject\">ici_index_kobject</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INDEX_KOBJECT_PTR\">INDEX_KOBJECT_PTR</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#y\">y</a>)<span class=\"ts\"/><span class=\"ts\"/>(&amp;((<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_index_kobject\">ici_index_kobject</a>, <a class=\"id\" href=\"#x\">x</a>))[<a class=\"id\" href=\"#y\">y</a>]))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#show_one_plus\">show_one_plus</a>(<a class=\"id\" href=\"#file_name\">file_name</a>, <a class=\"id\" href=\"#object\">object</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_\">show_</a>##<a class=\"id\" href=\"#file_name\">file_name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%lu\\n\", (unsigned long)<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#object\">object</a> + <a class=\"id\" href=\"#val\">val</a>); \\", 
"}", 
"", 
"<a class=\"id\" href=\"#show_one_plus\">show_one_plus</a>(<a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#level\">level</a>, 0);", 
"<a class=\"id\" href=\"#show_one_plus\">show_one_plus</a>(<a class=\"id\" href=\"#coherency_line_size\">coherency_line_size</a>, <a class=\"id\" href=\"#ebx\">ebx</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#coherency_line_size\">coherency_line_size</a>, 1);", 
"<a class=\"id\" href=\"#show_one_plus\">show_one_plus</a>(<a class=\"id\" href=\"#physical_line_partition\">physical_line_partition</a>, <a class=\"id\" href=\"#ebx\">ebx</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#physical_line_partition\">physical_line_partition</a>, 1);", 
"<a class=\"id\" href=\"#show_one_plus\">show_one_plus</a>(<a class=\"id\" href=\"#ways_of_associativity\">ways_of_associativity</a>, <a class=\"id\" href=\"#ebx\">ebx</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#ways_of_associativity\">ways_of_associativity</a>, 1);", 
"<a class=\"id\" href=\"#show_one_plus\">show_one_plus</a>(<a class=\"id\" href=\"#number_of_sets\">number_of_sets</a>, <a class=\"id\" href=\"#ecx\">ecx</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#number_of_sets\">number_of_sets</a>, 1);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_size\">show_size</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%luK\\n\", <a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#size\">size</a> / 1024);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_shared_cpu_map_func\">show_shared_cpu_map_func</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptrdiff_t\">ptrdiff_t</a> <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PTR_ALIGN\">PTR_ALIGN</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) - <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#to_cpumask\">to_cpumask</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#type\">type</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpulist_scnprintf\">cpulist_scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>-2, <a class=\"id\" href=\"#mask\">mask</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_scnprintf\">cpumask_scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>-2, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#n\">n</a>++] = '\\n';", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#n\">n</a>] = '\\0';", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_shared_cpu_map\">show_shared_cpu_map</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#leaf\">leaf</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#show_shared_cpu_map_func\">show_shared_cpu_map_func</a>(<a class=\"id\" href=\"#leaf\">leaf</a>, 0, <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_shared_cpu_list\">show_shared_cpu_list</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#leaf\">leaf</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#show_shared_cpu_map_func\">show_shared_cpu_map_func</a>(<a class=\"id\" href=\"#leaf\">leaf</a>, 1, <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_type\">show_type</a>(struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CACHE_TYPE_DATA\">CACHE_TYPE_DATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"Data\\n\");", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CACHE_TYPE_INST\">CACHE_TYPE_INST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"Instruction\\n\");", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CACHE_TYPE_UNIFIED\">CACHE_TYPE_UNIFIED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"Unified\\n\");", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"Unknown\\n\");", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_object\">to_object</a>(<a class=\"id\" href=\"#k\">k</a>)<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#k\">k</a>, struct <a class=\"id\" href=\"#_index_kobject\">_index_kobject</a>, <a class=\"id\" href=\"#kobj\">kobj</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_attr\">to_attr</a>(<a class=\"id\" href=\"#a\">a</a>)<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#_cache_attr\">_cache_attr</a>, <a class=\"id\" href=\"#attr\">attr</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#_name\">_name</a>) \\", 
"static struct <a class=\"id\" href=\"#_cache_attr\">_cache_attr</a> <a class=\"id\" href=\"#_name\">_name</a> = \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#_name\">_name</a>, 0444, <a class=\"id\" href=\"#show_\">show_</a>##<a class=\"id\" href=\"#_name\">_name</a>, <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"", 
"<a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#level\">level</a>);", 
"<a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#type\">type</a>);", 
"<a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#coherency_line_size\">coherency_line_size</a>);", 
"<a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#physical_line_partition\">physical_line_partition</a>);", 
"<a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#ways_of_associativity\">ways_of_associativity</a>);", 
"<a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#number_of_sets\">number_of_sets</a>);", 
"<a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#size\">size</a>);", 
"<a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>);", 
"<a class=\"id\" href=\"#define_one_ro\">define_one_ro</a>(<a class=\"id\" href=\"#shared_cpu_list\">shared_cpu_list</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_SYSFS_CACHE_ATTRS\">DEFAULT_SYSFS_CACHE_ATTRS</a><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#type\">type</a>.<a class=\"id\" href=\"#attr\">attr</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#level\">level</a>.<a class=\"id\" href=\"#attr\">attr</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#coherency_line_size\">coherency_line_size</a>.<a class=\"id\" href=\"#attr\">attr</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#physical_line_partition\">physical_line_partition</a>.<a class=\"id\" href=\"#attr\">attr</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ways_of_associativity\">ways_of_associativity</a>.<a class=\"id\" href=\"#attr\">attr</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#number_of_sets\">number_of_sets</a>.<a class=\"id\" href=\"#attr\">attr</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#size\">size</a>.<a class=\"id\" href=\"#attr\">attr</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>.<a class=\"id\" href=\"#attr\">attr</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#shared_cpu_list\">shared_cpu_list</a>.<a class=\"id\" href=\"#attr\">attr</a>", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#default_attrs\">default_attrs</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFAULT_SYSFS_CACHE_ATTRS\">DEFAULT_SYSFS_CACHE_ATTRS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#default_l3_attrs\">default_l3_attrs</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFAULT_SYSFS_CACHE_ATTRS\">DEFAULT_SYSFS_CACHE_ATTRS</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CPU_SUP_AMD\">CONFIG_CPU_SUP_AMD</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cache_disable_0\">cache_disable_0</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cache_disable_1\">cache_disable_1</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show\">show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_cache_attr\">_cache_attr</a> *<a class=\"id\" href=\"#fattr\">fattr</a> = <a class=\"id\" href=\"#to_attr\">to_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_index_kobject\">_index_kobject</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a> = <a class=\"id\" href=\"#to_object\">to_object</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#fattr\">fattr</a>-><a class=\"id\" href=\"#show\">show</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fattr\">fattr</a>-><a class=\"id\" href=\"#show\">show</a>(<a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#index\">index</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/>0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store\">store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_cache_attr\">_cache_attr</a> *<a class=\"id\" href=\"#fattr\">fattr</a> = <a class=\"id\" href=\"#to_attr\">to_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_index_kobject\">_index_kobject</a> *<a class=\"id\" href=\"#this_leaf\">this_leaf</a> = <a class=\"id\" href=\"#to_object\">to_object</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#fattr\">fattr</a>-><a class=\"id\" href=\"#store\">store</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fattr\">fattr</a>-><a class=\"id\" href=\"#store\">store</a>(<a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#index\">index</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/>0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>   = <a class=\"id\" href=\"#show\">show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a>  = <a class=\"id\" href=\"#store\">store</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#ktype_cache\">ktype_cache</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#default_attrs\">default_attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#default_attrs\">default_attrs</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#ktype_percpu_entry\">ktype_percpu_entry</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cpuid4_cache_sysfs_exit\">cpuid4_cache_sysfs_exit</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cache_kobject\">ici_cache_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_index_kobject\">ici_index_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cache_kobject\">ici_cache_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_index_kobject\">ici_index_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cache_attributes\">free_cache_attributes</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cpuid4_cache_sysfs_init\">cpuid4_cache_sysfs_init</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#detect_cache_attributes\">detect_cache_attributes</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate all required memory */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cache_kobject\">ici_cache_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#kobject\">kobject</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cache_kobject\">ici_cache_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_index_kobject\">ici_index_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(", 
"<span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#_index_kobject\">_index_kobject</a>) * <a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_index_kobject\">ici_index_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuid4_cache_sysfs_exit\">cpuid4_cache_sysfs_exit</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DECLARE_BITMAP\">DECLARE_BITMAP</a>(<a class=\"id\" href=\"#cache_dev_map\">cache_dev_map</a>, <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a>);", 
"", 
"<span class=\"comment\">/* Add/Remove cache interface for CPU device */</span>", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cache_add_dev\">cache_add_dev</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> * <a class=\"id\" href=\"#sys_dev\">sys_dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_index_kobject\">_index_kobject</a> *<a class=\"id\" href=\"#this_object\">this_object</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_cpuid4_info\">_cpuid4_info</a>   *<a class=\"id\" href=\"#this_leaf\">this_leaf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#cpuid4_cache_sysfs_init\">cpuid4_cache_sysfs_init</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#retval\">retval</a> &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#kobject_init_and_add\">kobject_init_and_add</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cache_kobject\">ici_cache_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#ktype_percpu_entry\">ktype_percpu_entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"%s\", \"cache\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid4_cache_sysfs_exit\">cpuid4_cache_sysfs_exit</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_object\">this_object</a> = <a class=\"id\" href=\"#INDEX_KOBJECT_PTR\">INDEX_KOBJECT_PTR</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_object\">this_object</a>-><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_object\">this_object</a>-><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_leaf\">this_leaf</a> = <a class=\"id\" href=\"#CPUID4_INFO_IDX\">CPUID4_INFO_IDX</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#l3\">l3</a> && <a class=\"id\" href=\"#this_leaf\">this_leaf</a>-><a class=\"id\" href=\"#l3\">l3</a>-><a class=\"id\" href=\"#can_disable\">can_disable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ktype_cache\">ktype_cache</a>.<a class=\"id\" href=\"#default_attrs\">default_attrs</a> = <a class=\"id\" href=\"#default_l3_attrs\">default_l3_attrs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ktype_cache\">ktype_cache</a>.<a class=\"id\" href=\"#default_attrs\">default_attrs</a> = <a class=\"id\" href=\"#default_attrs\">default_attrs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#kobject_init_and_add\">kobject_init_and_add</a>(&amp;(<a class=\"id\" href=\"#this_object\">this_object</a>-><a class=\"id\" href=\"#kobj\">kobj</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#ktype_cache\">ktype_cache</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cache_kobject\">ici_cache_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"index%1lu\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#retval\">retval</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;(<a class=\"id\" href=\"#INDEX_KOBJECT_PTR\">INDEX_KOBJECT_PTR</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cache_kobject\">ici_cache_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid4_cache_sysfs_exit\">cpuid4_cache_sysfs_exit</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;(<a class=\"id\" href=\"#this_object\">this_object</a>-><a class=\"id\" href=\"#kobj\">kobj</a>), <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_set_cpu\">cpumask_set_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#to_cpumask\">to_cpumask</a>(<a class=\"id\" href=\"#cache_dev_map\">cache_dev_map</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cache_kobject\">ici_cache_kobject</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cache_remove_dev\">cache_remove_dev</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> * <a class=\"id\" href=\"#sys_dev\">sys_dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ici_cpuid4_info\">ici_cpuid4_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
];
xr_frag_insert('l/a2/ca34fc03a4b99542d54d56b431068657fed817.xr', __xr_tmp);
