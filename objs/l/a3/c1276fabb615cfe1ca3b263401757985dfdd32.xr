var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Definitions for the Interfaces handler.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version:<span class=\"ts\"/>@(#)dev.h<span class=\"ts\"/>1.0.10<span class=\"ts\"/>08/12/93</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Corey Minyard &lt;wf-rch!minyard@relay.EU.net&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Donald J. Becker, &lt;becker@cesdis.gsfc.nasa.gov&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox, &lt;alan@lxorguk.ukuu.org.uk&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Bjorn Ekwall. &lt;bj0rn@blox.se&gt;</span>", 
"<span class=\"comment\"> *              Pekka Riikonen &lt;priikone@poseidon.pspt.fi&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Moved to /usr/include/linux for NET3</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_NETDEVICE_H\">_LINUX_NETDEVICE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_NETDEVICE_H\">_LINUX_NETDEVICE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/if.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_ether\">if_ether</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_packet\">if_packet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_link\">if_link</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm_qos_params\">pm_qos_params</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#byteorder\">byteorder</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rculist\">rculist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmaengine\">dmaengine</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ethtool\">ethtool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dsa\">dsa</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DCB\">CONFIG_DCB</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dcbnl\">dcbnl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#vlan_group\">vlan_group</a>;", 
"struct <a class=\"id\" href=\"#netpoll_info\">netpoll_info</a>;", 
"struct <a class=\"id\" href=\"#phy_device\">phy_device</a>;", 
"<span class=\"comment\">/* 802.11 specific */</span>", 
"struct <a class=\"id\" href=\"#wireless_dev\">wireless_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* source back-compat hooks */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SET_ETHTOOL_OPS\">SET_ETHTOOL_OPS</a>(<a class=\"id\" href=\"#netdev\">netdev</a>,<a class=\"id\" href=\"#ops\">ops</a>) \\", 
"<span class=\"ts\"/>( (<a class=\"id\" href=\"#netdev\">netdev</a>)-><a class=\"id\" href=\"#ethtool_ops\">ethtool_ops</a> = (<a class=\"id\" href=\"#ops\">ops</a>) )", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HAVE_ALLOC_NETDEV\">HAVE_ALLOC_NETDEV</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* feature macro: alloc_xxxdev</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   functions are available. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HAVE_FREE_NETDEV\">HAVE_FREE_NETDEV</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* free_netdev() */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HAVE_NETDEV_PRIV\">HAVE_NETDEV_PRIV</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* netdev_priv() */</span>", 
"", 
"<span class=\"comment\">/* hardware address assignment types */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_ADDR_PERM\">NET_ADDR_PERM</a><span class=\"ts\"/><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* address is permanent (default) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_ADDR_RANDOM\">NET_ADDR_RANDOM</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* address is generated randomly */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_ADDR_STOLEN\">NET_ADDR_STOLEN</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* address is stolen from other device */</span>", 
"", 
"<span class=\"comment\">/* Backlog congestion levels */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_RX_SUCCESS\">NET_RX_SUCCESS</a><span class=\"ts\"/><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* keep 'em coming, baby */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_RX_DROP\">NET_RX_DROP</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* packet dropped */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Transmit return codes: transmit return codes originate from three different</span>", 
"<span class=\"comment\"> * namespaces:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - qdisc return codes</span>", 
"<span class=\"comment\"> * - driver transmit return codes</span>", 
"<span class=\"comment\"> * - errno values</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Drivers are allowed to return any one of those in their hard_start_xmit()</span>", 
"<span class=\"comment\"> * function. Real network devices commonly used with qdiscs should only return</span>", 
"<span class=\"comment\"> * the driver transmit return codes though - when qdiscs are used, the actual</span>", 
"<span class=\"comment\"> * transmission happens asynchronously, so the value is not propagated to</span>", 
"<span class=\"comment\"> * higher layers. Virtual network devices transmit synchronously, in this case</span>", 
"<span class=\"comment\"> * the driver transmit return codes are consumed by dev_queue_xmit(), all</span>", 
"<span class=\"comment\"> * others are propagated to higher layers.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* qdisc -&gt;enqueue() return codes. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_XMIT_SUCCESS\">NET_XMIT_SUCCESS</a><span class=\"ts\"/>0x00", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_XMIT_DROP\">NET_XMIT_DROP</a><span class=\"ts\"/><span class=\"ts\"/>0x01<span class=\"ts\"/><span class=\"comment\">/* skb dropped<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_XMIT_CN\">NET_XMIT_CN</a><span class=\"ts\"/><span class=\"ts\"/>0x02<span class=\"ts\"/><span class=\"comment\">/* congestion notification<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_XMIT_POLICED\">NET_XMIT_POLICED</a><span class=\"ts\"/>0x03<span class=\"ts\"/><span class=\"comment\">/* skb is shot by police<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NET_XMIT_MASK\">NET_XMIT_MASK</a><span class=\"ts\"/><span class=\"ts\"/>0x0f<span class=\"ts\"/><span class=\"comment\">/* qdisc flags in net/sch_generic.h */</span>", 
"", 
"<span class=\"comment\">/* NET_XMIT_CN is special. It does not guarantee that this packet is lost. It</span>", 
"<span class=\"comment\"> * indicates that the device will soon be dropping packets, or already drops</span>", 
"<span class=\"comment\"> * some packets of the same priority; prompting us to send less aggressively. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#net_xmit_eval\">net_xmit_eval</a>(<a class=\"id\" href=\"#e\">e</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#e\">e</a>) == <a class=\"id\" href=\"#NET_XMIT_CN\">NET_XMIT_CN</a> ? 0 : (<a class=\"id\" href=\"#e\">e</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#net_xmit_errno\">net_xmit_errno</a>(<a class=\"id\" href=\"#e\">e</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#e\">e</a>) != <a class=\"id\" href=\"#NET_XMIT_CN\">NET_XMIT_CN</a> ? -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a> : 0)", 
"", 
"<span class=\"comment\">/* Driver transmit return codes */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_TX_MASK\">NETDEV_TX_MASK</a><span class=\"ts\"/><span class=\"ts\"/>0xf0", 
"", 
"enum <a class=\"id\" href=\"#netdev_tx\">netdev_tx</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NETDEV_TX_MIN\">__NETDEV_TX_MIN</a><span class=\"ts\"/> = <a class=\"id\" href=\"#INT_MIN\">INT_MIN</a>,<span class=\"ts\"/><span class=\"comment\">/* make sure enum is signed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETDEV_TX_OK\">NETDEV_TX_OK</a><span class=\"ts\"/> = 0x00,<span class=\"ts\"/><span class=\"comment\">/* driver took care of packet */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETDEV_TX_BUSY\">NETDEV_TX_BUSY</a><span class=\"ts\"/> = 0x10,<span class=\"ts\"/><span class=\"comment\">/* driver tx path was busy*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETDEV_TX_LOCKED\">NETDEV_TX_LOCKED</a> = 0x20,<span class=\"ts\"/><span class=\"comment\">/* driver tx lock was already taken */</span>", 
"};", 
"typedef enum <a class=\"id\" href=\"#netdev_tx\">netdev_tx</a> <a class=\"id\" href=\"#netdev_tx_t\">netdev_tx_t</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Current order: NETDEV_TX_MASK &gt; NET_XMIT_MASK &gt;= 0 is significant;</span>", 
"<span class=\"comment\"> * hard_start_xmit() return &lt; NET_XMIT_MASK means skb was consumed.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#dev_xmit_complete\">dev_xmit_complete</a>(int <a class=\"id\" href=\"#rc\">rc</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Positive cases with an skb consumed by a driver:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - successful transmission (rc == NETDEV_TX_OK)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - error while transmitting (rc &lt; 0)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - error while queueing to a different device (rc &amp; NET_XMIT_MASK)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#rc\">rc</a> &lt; <a class=\"id\" href=\"#NET_XMIT_MASK\">NET_XMIT_MASK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ADDR_LEN\">MAX_ADDR_LEN</a><span class=\"ts\"/>32<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Largest hardware address length */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a>  <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Compute the worst case header length according to the protocols</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>used.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_WLAN\">CONFIG_WLAN</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25\">CONFIG_AX25</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25_MODULE\">CONFIG_AX25_MODULE</a>)", 
"# if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_MAC80211_MESH\">CONFIG_MAC80211_MESH</a>)", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LL_MAX_HEADER\">LL_MAX_HEADER</a> 128", 
"# else", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LL_MAX_HEADER\">LL_MAX_HEADER</a> 96", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_TR\">CONFIG_TR</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_TR_MODULE\">CONFIG_TR_MODULE</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LL_MAX_HEADER\">LL_MAX_HEADER</a> 48", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LL_MAX_HEADER\">LL_MAX_HEADER</a> 32", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NET_IPIP\">CONFIG_NET_IPIP</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NET_IPIP_MODULE\">CONFIG_NET_IPIP_MODULE</a>) && \\", 
"    !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NET_IPGRE\">CONFIG_NET_IPGRE</a>) &&  !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NET_IPGRE_MODULE\">CONFIG_NET_IPGRE_MODULE</a>) && \\", 
"    !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT\">CONFIG_IPV6_SIT</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT_MODULE\">CONFIG_IPV6_SIT_MODULE</a>) && \\", 
"    !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_TUNNEL\">CONFIG_IPV6_TUNNEL</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_TUNNEL_MODULE\">CONFIG_IPV6_TUNNEL_MODULE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_HEADER\">MAX_HEADER</a> <a class=\"id\" href=\"#LL_MAX_HEADER\">LL_MAX_HEADER</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_HEADER\">MAX_HEADER</a> (<a class=\"id\" href=\"#LL_MAX_HEADER\">LL_MAX_HEADER</a> + 48)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Old network device statistics. Fields are native words</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(unsigned long) so they can be read and written atomically.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#net_device_stats\">net_device_stats</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_packets\">rx_packets</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_packets\">tx_packets</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_bytes\">rx_bytes</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_bytes\">tx_bytes</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_errors\">rx_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_errors\">tx_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_dropped\">rx_dropped</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_dropped\">tx_dropped</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#multicast\">multicast</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#collisions\">collisions</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_length_errors\">rx_length_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_over_errors\">rx_over_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_crc_errors\">rx_crc_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_frame_errors\">rx_frame_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_fifo_errors\">rx_fifo_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_missed_errors\">rx_missed_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_aborted_errors\">tx_aborted_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_carrier_errors\">tx_carrier_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_fifo_errors\">tx_fifo_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_heartbeat_errors\">tx_heartbeat_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_window_errors\">tx_window_errors</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rx_compressed\">rx_compressed</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#tx_compressed\">tx_compressed</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/*  __KERNEL__  */</span>", 
"", 
"", 
"<span class=\"comment\">/* Media selection options. */</span>", 
"enum {", 
"        <a class=\"id\" href=\"#IF_PORT_UNKNOWN\">IF_PORT_UNKNOWN</a> = 0,", 
"        <a class=\"id\" href=\"#IF_PORT_10BASE2\">IF_PORT_10BASE2</a>,", 
"        <a class=\"id\" href=\"#IF_PORT_10BASET\">IF_PORT_10BASET</a>,", 
"        <a class=\"id\" href=\"#IF_PORT_AUI\">IF_PORT_AUI</a>,", 
"        <a class=\"id\" href=\"#IF_PORT_100BASET\">IF_PORT_100BASET</a>,", 
"        <a class=\"id\" href=\"#IF_PORT_100BASETX\">IF_PORT_100BASETX</a>,", 
"        <a class=\"id\" href=\"#IF_PORT_100BASEFX\">IF_PORT_100BASEFX</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#neighbour\">neighbour</a>;", 
"struct <a class=\"id\" href=\"#neigh_parms\">neigh_parms</a>;", 
"struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a>;", 
"", 
];
xr_frag_insert('l/a3/c1276fabb615cfe1ca3b263401757985dfdd32.xr', __xr_tmp);
