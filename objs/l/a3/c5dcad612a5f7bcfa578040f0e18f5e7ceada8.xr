var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Generic BitBLT function for frame buffer with packed pixels of any depth.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Copyright (C)  June 1999 James Simmons</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This file is subject to the terms and conditions of the GNU General Public</span>", 
"<span class=\"comment\"> *  License.  See the file COPYING in the main directory of this archive for</span>", 
"<span class=\"comment\"> *  more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTES:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    This function copys a image from system memory to video memory. The</span>", 
"<span class=\"comment\"> *  image can be a bitmap where each 0 represents the background color and</span>", 
"<span class=\"comment\"> *  each 1 represents the foreground color. Great for font handling. It can</span>", 
"<span class=\"comment\"> *  also be a color image. This is determined by image_depth. The color image</span>", 
"<span class=\"comment\"> *  must be laid out exactly in the same format as the framebuffer. Yes I know</span>", 
"<span class=\"comment\"> *  their are cards with hardware that coverts images of various depths to the</span>", 
"<span class=\"comment\"> *  framebuffer depth. But not every card has this. All images must be rounded</span>", 
"<span class=\"comment\"> *  up to the nearest byte. For example a bitmap 12 bits wide must be two </span>", 
"<span class=\"comment\"> *  bytes width. </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Tony: </span>", 
"<span class=\"comment\"> *  Incorporate mask tables similar to fbcon-cfb*.c in 2.4 API.  This speeds </span>", 
"<span class=\"comment\"> *  up the code significantly.</span>", 
"<span class=\"comment\"> *  </span>", 
"<span class=\"comment\"> *  Code for depths not multiples of BITS_PER_LONG is still kludgy, which is</span>", 
"<span class=\"comment\"> *  still processed a bit at a time.   </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Also need to add code to deal with cards endians that are different than</span>", 
"<span class=\"comment\"> *  the native cpu endians. I also need to deal with MSB position in the word.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fb\">fb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"fb_draw.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>...) <a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%s: \" <a class=\"id\" href=\"#fmt\">fmt</a>,<a class=\"id\" href=\"#__func__\">__func__</a>,## <a class=\"id\" href=\"#args\">args</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>...)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cfb_tab8_be\">cfb_tab8_be</a>[] = {", 
"    0x00000000,0x000000ff,0x0000ff00,0x0000ffff,", 
"    0x00ff0000,0x00ff00ff,0x00ffff00,0x00ffffff,", 
"    0xff000000,0xff0000ff,0xff00ff00,0xff00ffff,", 
"    0xffff0000,0xffff00ff,0xffffff00,0xffffffff", 
"};", 
"", 
"static const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cfb_tab8_le\">cfb_tab8_le</a>[] = {", 
"    0x00000000,0xff000000,0x00ff0000,0xffff0000,", 
"    0x0000ff00,0xff00ff00,0x00ffff00,0xffffff00,", 
"    0x000000ff,0xff0000ff,0x00ff00ff,0xffff00ff,", 
"    0x0000ffff,0xff00ffff,0x00ffffff,0xffffffff", 
"};", 
"", 
"static const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cfb_tab16_be\">cfb_tab16_be</a>[] = {", 
"    0x00000000, 0x0000ffff, 0xffff0000, 0xffffffff", 
"};", 
"", 
"static const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cfb_tab16_le\">cfb_tab16_le</a>[] = {", 
"    0x00000000, 0xffff0000, 0x0000ffff, 0xffffffff", 
"};", 
"", 
"static const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cfb_tab32\">cfb_tab32</a>[] = {", 
"<span class=\"ts\"/>0x00000000, 0xffffffff", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FB_WRITEL\">FB_WRITEL</a> <a class=\"id\" href=\"#fb_writel\">fb_writel</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FB_READL\">FB_READL</a>  <a class=\"id\" href=\"#fb_readl\">fb_readl</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#color_imageblit\">color_imageblit</a>(const struct <a class=\"id\" href=\"#fb_image\">fb_image</a> *<a class=\"id\" href=\"#image\">image</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#dst1\">dst1</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#start_index\">start_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pitch_index\">pitch_index</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Draw the penguin */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#dst\">dst</a>, *<a class=\"id\" href=\"#dst2\">dst2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#color\">color</a> = 0, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#bpp\">bpp</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#null_bits\">null_bits</a> = 32 - <a class=\"id\" href=\"#bpp\">bpp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#palette\">palette</a> = (<a class=\"id\" href=\"#u32\">u32</a> *) <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pseudo_palette\">pseudo_palette</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bswapmask\">bswapmask</a> = <a class=\"id\" href=\"#fb_compute_bswapmask\">fb_compute_bswapmask</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst2\">dst2</a> = (<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *) <a class=\"id\" href=\"#dst1\">dst1</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#height\">height</a>; <a class=\"id\" href=\"#i\">i</a>--; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#width\">width</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = (<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *) <a class=\"id\" href=\"#dst1\">dst1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start_index\">start_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#start_mask\">start_mask</a> = ~<a class=\"id\" href=\"#fb_shifted_pixels_mask_u32\">fb_shifted_pixels_mask_u32</a>(<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_index\">start_index</a>, <a class=\"id\" href=\"#bswapmask\">bswapmask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#FB_READL\">FB_READL</a>(<a class=\"id\" href=\"#dst\">dst</a>) &amp; <a class=\"id\" href=\"#start_mask\">start_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> = <a class=\"id\" href=\"#start_index\">start_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#visual\">visual</a> == <a class=\"id\" href=\"#FB_VISUAL_TRUECOLOR\">FB_VISUAL_TRUECOLOR</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#visual\">visual</a> == <a class=\"id\" href=\"#FB_VISUAL_DIRECTCOLOR\">FB_VISUAL_DIRECTCOLOR</a> )", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#color\">color</a> = <a class=\"id\" href=\"#palette\">palette</a>[*<a class=\"id\" href=\"#src\">src</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#color\">color</a> = *<a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#color\">color</a> <<= <a class=\"id\" href=\"#FB_LEFT_POS\">FB_LEFT_POS</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#bpp\">bpp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#color\">color</a>, <a class=\"id\" href=\"#shift\">shift</a> ^ <a class=\"id\" href=\"#bswapmask\">bswapmask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#shift\">shift</a> >= <a class=\"id\" href=\"#null_bits\">null_bits</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FB_WRITEL\">FB_WRITEL</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#dst\">dst</a>++);", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = (<a class=\"id\" href=\"#shift\">shift</a> == <a class=\"id\" href=\"#null_bits\">null_bits</a>) ? 0 : ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FB_SHIFT_LOW\">FB_SHIFT_LOW</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#color\">color</a>, 32 - <a class=\"id\" href=\"#shift\">shift</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> += <a class=\"id\" href=\"#bpp\">bpp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> &= (32 - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#shift\">shift</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#end_mask\">end_mask</a> = <a class=\"id\" href=\"#fb_shifted_pixels_mask_u32\">fb_shifted_pixels_mask_u32</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#shift\">shift</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bswapmask\">bswapmask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FB_WRITEL\">FB_WRITEL</a>((<a class=\"id\" href=\"#FB_READL\">FB_READL</a>(<a class=\"id\" href=\"#dst\">dst</a>) &amp; <a class=\"id\" href=\"#end_mask\">end_mask</a>) | <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst1\">dst1</a> += <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#line_length\">line_length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pitch_index\">pitch_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst2\">dst2</a> += <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#line_length\">line_length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst1\">dst1</a> = (<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *)((long <a class=\"id\" href=\"#__force\">__force</a>)<a class=\"id\" href=\"#dst2\">dst2</a> &amp; ~(sizeof(<a class=\"id\" href=\"#u32\">u32</a>) - 1));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_index\">start_index</a> += <a class=\"id\" href=\"#pitch_index\">pitch_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_index\">start_index</a> &= 32 - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#slow_imageblit\">slow_imageblit</a>(const struct <a class=\"id\" href=\"#fb_image\">fb_image</a> *<a class=\"id\" href=\"#image\">image</a>, struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#dst1\">dst1</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fgcolor\">fgcolor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bgcolor\">bgcolor</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#start_index\">start_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pitch_index\">pitch_index</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#shift\">shift</a>, <a class=\"id\" href=\"#color\">color</a> = 0, <a class=\"id\" href=\"#bpp\">bpp</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#dst\">dst</a>, *<a class=\"id\" href=\"#dst2\">dst2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#pitch\">pitch</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#line_length\">line_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#null_bits\">null_bits</a> = 32 - <a class=\"id\" href=\"#bpp\">bpp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#spitch\">spitch</a> = (<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#width\">width</a>+7)/8;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#data\">data</a>, *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bswapmask\">bswapmask</a> = <a class=\"id\" href=\"#fb_compute_bswapmask\">fb_compute_bswapmask</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst2\">dst2</a> = (<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *) <a class=\"id\" href=\"#dst1\">dst1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fgcolor\">fgcolor</a> <<= <a class=\"id\" href=\"#FB_LEFT_POS\">FB_LEFT_POS</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#bpp\">bpp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bgcolor\">bgcolor</a> <<= <a class=\"id\" href=\"#FB_LEFT_POS\">FB_LEFT_POS</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#bpp\">bpp</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#height\">height</a>; <a class=\"id\" href=\"#i\">i</a>--; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> = <a class=\"id\" href=\"#val\">val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#width\">width</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = (<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *) <a class=\"id\" href=\"#dst1\">dst1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* write leading bits */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start_index\">start_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#start_mask\">start_mask</a> = ~<a class=\"id\" href=\"#fb_shifted_pixels_mask_u32\">fb_shifted_pixels_mask_u32</a>(<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_index\">start_index</a>, <a class=\"id\" href=\"#bswapmask\">bswapmask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#FB_READL\">FB_READL</a>(<a class=\"id\" href=\"#dst\">dst</a>) &amp; <a class=\"id\" href=\"#start_mask\">start_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> = <a class=\"id\" href=\"#start_index\">start_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#j\">j</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#color\">color</a> = (*<a class=\"id\" href=\"#s\">s</a> &amp; (1 << <a class=\"id\" href=\"#l\">l</a>)) ? <a class=\"id\" href=\"#fgcolor\">fgcolor</a> : <a class=\"id\" href=\"#bgcolor\">bgcolor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#color\">color</a>, <a class=\"id\" href=\"#shift\">shift</a> ^ <a class=\"id\" href=\"#bswapmask\">bswapmask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Did the bitshift spill bits to the next long? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#shift\">shift</a> >= <a class=\"id\" href=\"#null_bits\">null_bits</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FB_WRITEL\">FB_WRITEL</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#dst\">dst</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = (<a class=\"id\" href=\"#shift\">shift</a> == <a class=\"id\" href=\"#null_bits\">null_bits</a>) ? 0 :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FB_SHIFT_LOW\">FB_SHIFT_LOW</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#color\">color</a>, 32 - <a class=\"id\" href=\"#shift\">shift</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> += <a class=\"id\" href=\"#bpp\">bpp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> &= (32 - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#l\">l</a>) { <a class=\"id\" href=\"#l\">l</a> = 8; <a class=\"id\" href=\"#s\">s</a>++; };", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* write trailing bits */</span>", 
" <span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#shift\">shift</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#end_mask\">end_mask</a> = <a class=\"id\" href=\"#fb_shifted_pixels_mask_u32\">fb_shifted_pixels_mask_u32</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#shift\">shift</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bswapmask\">bswapmask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FB_WRITEL\">FB_WRITEL</a>((<a class=\"id\" href=\"#FB_READL\">FB_READL</a>(<a class=\"id\" href=\"#dst\">dst</a>) &amp; <a class=\"id\" href=\"#end_mask\">end_mask</a>) | <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst1\">dst1</a> += <a class=\"id\" href=\"#pitch\">pitch</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> += <a class=\"id\" href=\"#spitch\">spitch</a>;<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pitch_index\">pitch_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst2\">dst2</a> += <a class=\"id\" href=\"#pitch\">pitch</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst1\">dst1</a> = (<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *)((long <a class=\"id\" href=\"#__force\">__force</a>)<a class=\"id\" href=\"#dst2\">dst2</a> &amp; ~(sizeof(<a class=\"id\" href=\"#u32\">u32</a>) - 1));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_index\">start_index</a> += <a class=\"id\" href=\"#pitch_index\">pitch_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_index\">start_index</a> &= 32 - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fast_imageblit - optimized monochrome color expansion</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Only if:  bits_per_pixel == 8, 16, or 32</span>", 
"<span class=\"comment\"> *           image-&gt;width is divisible by pixel/dword (ppw);</span>", 
"<span class=\"comment\"> *           fix-&gt;line_legth is divisible by 4;</span>", 
"<span class=\"comment\"> *           beginning and end of a scanline is dword aligned</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fast_imageblit\">fast_imageblit</a>(const struct <a class=\"id\" href=\"#fb_image\">fb_image</a> *<a class=\"id\" href=\"#image\">image</a>, struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#dst1\">dst1</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fgcolor\">fgcolor</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bgcolor\">bgcolor</a>) ", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fgx\">fgx</a> = <a class=\"id\" href=\"#fgcolor\">fgcolor</a>, <a class=\"id\" href=\"#bgx\">bgx</a> = <a class=\"id\" href=\"#bgcolor\">bgcolor</a>, <a class=\"id\" href=\"#bpp\">bpp</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ppw\">ppw</a> = 32/<a class=\"id\" href=\"#bpp\">bpp</a>, <a class=\"id\" href=\"#spitch\">spitch</a> = (<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#width\">width</a> + 7)/8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bit_mask\">bit_mask</a>, <a class=\"id\" href=\"#end_mask\">end_mask</a>, <a class=\"id\" href=\"#eorx\">eorx</a>, <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#data\">data</a>, *<a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#bpp\">bpp</a>) {", 
"<span class=\"ts\"/>case 8:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#fb_be_math\">fb_be_math</a>(<a class=\"id\" href=\"#p\">p</a>) ? <a class=\"id\" href=\"#cfb_tab8_be\">cfb_tab8_be</a> : <a class=\"id\" href=\"#cfb_tab8_le\">cfb_tab8_le</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 16:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#fb_be_math\">fb_be_math</a>(<a class=\"id\" href=\"#p\">p</a>) ? <a class=\"id\" href=\"#cfb_tab16_be\">cfb_tab16_be</a> : <a class=\"id\" href=\"#cfb_tab16_le\">cfb_tab16_le</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 32:", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#cfb_tab32\">cfb_tab32</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#ppw\">ppw</a>-1; <a class=\"id\" href=\"#i\">i</a>--; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fgx\">fgx</a> <<= <a class=\"id\" href=\"#bpp\">bpp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bgx\">bgx</a> <<= <a class=\"id\" href=\"#bpp\">bpp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fgx\">fgx</a> |= <a class=\"id\" href=\"#fgcolor\">fgcolor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bgx\">bgx</a> |= <a class=\"id\" href=\"#bgcolor\">bgcolor</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit_mask\">bit_mask</a> = (1 << <a class=\"id\" href=\"#ppw\">ppw</a>) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eorx\">eorx</a> = <a class=\"id\" href=\"#fgx\">fgx</a> ^ <a class=\"id\" href=\"#bgx\">bgx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#width\">width</a>/<a class=\"id\" href=\"#ppw\">ppw</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#height\">height</a>; <a class=\"id\" href=\"#i\">i</a>--; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = (<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *) <a class=\"id\" href=\"#dst1\">dst1</a>, <a class=\"id\" href=\"#shift\">shift</a> = 8; <a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = <a class=\"id\" href=\"#k\">k</a>; <a class=\"id\" href=\"#j\">j</a>--; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> -= <a class=\"id\" href=\"#ppw\">ppw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_mask\">end_mask</a> = <a class=\"id\" href=\"#tab\">tab</a>[(*<a class=\"id\" href=\"#src\">src</a> >> <a class=\"id\" href=\"#shift\">shift</a>) &amp; <a class=\"id\" href=\"#bit_mask\">bit_mask</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FB_WRITEL\">FB_WRITEL</a>((<a class=\"id\" href=\"#end_mask\">end_mask</a> &amp; <a class=\"id\" href=\"#eorx\">eorx</a>)^<a class=\"id\" href=\"#bgx\">bgx</a>, <a class=\"id\" href=\"#dst\">dst</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#shift\">shift</a>) { <a class=\"id\" href=\"#shift\">shift</a> = 8; <a class=\"id\" href=\"#src\">src</a>++; }<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst1\">dst1</a> += <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#line_length\">line_length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> += <a class=\"id\" href=\"#spitch\">spitch</a>;", 
"<span class=\"ts\"/>}", 
"}<span class=\"ts\"/>", 
"<span class=\"ts\"/>", 
"void <a class=\"id\" href=\"#cfb_imageblit\">cfb_imageblit</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, const struct <a class=\"id\" href=\"#fb_image\">fb_image</a> *<a class=\"id\" href=\"#image\">image</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fgcolor\">fgcolor</a>, <a class=\"id\" href=\"#bgcolor\">bgcolor</a>, <a class=\"id\" href=\"#start_index\">start_index</a>, <a class=\"id\" href=\"#bitstart\">bitstart</a>, <a class=\"id\" href=\"#pitch_index\">pitch_index</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bpl\">bpl</a> = sizeof(<a class=\"id\" href=\"#u32\">u32</a>), <a class=\"id\" href=\"#bpp\">bpp</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#width\">width</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#dx\">dx</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#dx\">dx</a>, <a class=\"id\" href=\"#dy\">dy</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#dy\">dy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#dst1\">dst1</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#FBINFO_STATE_RUNNING\">FBINFO_STATE_RUNNING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitstart\">bitstart</a> = (<a class=\"id\" href=\"#dy\">dy</a> * <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#line_length\">line_length</a> * 8) + (<a class=\"id\" href=\"#dx\">dx</a> * <a class=\"id\" href=\"#bpp\">bpp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_index\">start_index</a> = <a class=\"id\" href=\"#bitstart\">bitstart</a> &amp; (32 - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pitch_index\">pitch_index</a> = (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#line_length\">line_length</a> &amp; (<a class=\"id\" href=\"#bpl\">bpl</a> - 1)) * 8;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitstart\">bitstart</a> /= 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitstart\">bitstart</a> &= ~(<a class=\"id\" href=\"#bpl\">bpl</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst1\">dst1</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#screen_base\">screen_base</a> + <a class=\"id\" href=\"#bitstart\">bitstart</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fbops\">fbops</a>-><a class=\"id\" href=\"#fb_sync\">fb_sync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fbops\">fbops</a>-><a class=\"id\" href=\"#fb_sync\">fb_sync</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#depth\">depth</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#visual\">visual</a> == <a class=\"id\" href=\"#FB_VISUAL_TRUECOLOR\">FB_VISUAL_TRUECOLOR</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#visual\">visual</a> == <a class=\"id\" href=\"#FB_VISUAL_DIRECTCOLOR\">FB_VISUAL_DIRECTCOLOR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fgcolor\">fgcolor</a> = ((<a class=\"id\" href=\"#u32\">u32</a>*)(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pseudo_palette\">pseudo_palette</a>))[<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#fg_color\">fg_color</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bgcolor\">bgcolor</a> = ((<a class=\"id\" href=\"#u32\">u32</a>*)(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pseudo_palette\">pseudo_palette</a>))[<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#bg_color\">bg_color</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fgcolor\">fgcolor</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#fg_color\">fg_color</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bgcolor\">bgcolor</a> = <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#bg_color\">bg_color</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (32 % <a class=\"id\" href=\"#bpp\">bpp</a> == 0 && !<a class=\"id\" href=\"#start_index\">start_index</a> && !<a class=\"id\" href=\"#pitch_index\">pitch_index</a> && ", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#width\">width</a> &amp; (32/<a class=\"id\" href=\"#bpp\">bpp</a>-1)) == 0) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#bpp\">bpp</a> >= 8 && <a class=\"id\" href=\"#bpp\">bpp</a> <= 32) <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fast_imageblit\">fast_imageblit</a>(<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#dst1\">dst1</a>, <a class=\"id\" href=\"#fgcolor\">fgcolor</a>, <a class=\"id\" href=\"#bgcolor\">bgcolor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slow_imageblit\">slow_imageblit</a>(<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#dst1\">dst1</a>, <a class=\"id\" href=\"#fgcolor\">fgcolor</a>, <a class=\"id\" href=\"#bgcolor\">bgcolor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_index\">start_index</a>, <a class=\"id\" href=\"#pitch_index\">pitch_index</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#color_imageblit\">color_imageblit</a>(<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#dst1\">dst1</a>, <a class=\"id\" href=\"#start_index\">start_index</a>, <a class=\"id\" href=\"#pitch_index\">pitch_index</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#cfb_imageblit\">cfb_imageblit</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"James Simmons <jsimmons@users.sf.net>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Generic software accelerated imaging drawing\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
];
xr_frag_insert('l/a3/c5dcad612a5f7bcfa578040f0e18f5e7ceada8.xr', __xr_tmp);
