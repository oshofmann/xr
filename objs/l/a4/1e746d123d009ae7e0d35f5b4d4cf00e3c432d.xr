var __xr_tmp = [
"<a class=\"id\" href=\"#free_dst\">free_dst</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst0\">dst0</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_free\">dst_free</a>(<a class=\"id\" href=\"#dst0\">dst0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst0\">dst0</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inline\">inline</a>", 
"<a class=\"id\" href=\"#xfrm_dst_alloc_copy\">xfrm_dst_alloc_copy</a>(void **<a class=\"id\" href=\"#target\">target</a>, void *<a class=\"id\" href=\"#src\">src</a>, int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#target\">target</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#target\">target</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#target\">target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(*<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inline\">inline</a>", 
"<a class=\"id\" href=\"#xfrm_dst_update_parent\">xfrm_dst_update_parent</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#xfrm_selector\">xfrm_selector</a> *<a class=\"id\" href=\"#sel\">sel</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XFRM_SUB_POLICY\">CONFIG_XFRM_SUB_POLICY</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *<a class=\"id\" href=\"#xdst\">xdst</a> = (struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xfrm_dst_alloc_copy\">xfrm_dst_alloc_copy</a>((void **)&amp;(<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#partner\">partner</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sel\">sel</a>, sizeof(*<a class=\"id\" href=\"#sel\">sel</a>));", 
"#else", 
"<span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inline\">inline</a>", 
"<a class=\"id\" href=\"#xfrm_dst_update_origin\">xfrm_dst_update_origin</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XFRM_SUB_POLICY\">CONFIG_XFRM_SUB_POLICY</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *<a class=\"id\" href=\"#xdst\">xdst</a> = (struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xfrm_dst_alloc_copy\">xfrm_dst_alloc_copy</a>((void **)&amp;(<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#origin\">origin</a>), <a class=\"id\" href=\"#fl\">fl</a>, sizeof(*<a class=\"id\" href=\"#fl\">fl</a>));", 
"#else", 
"<span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xfrm_expand_policies\">xfrm_expand_policies</a>(struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a> **<a class=\"id\" href=\"#pols\">pols</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int *<a class=\"id\" href=\"#num_pols\">num_pols</a>, int *<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#num_pols\">num_pols</a> == 0 || !<a class=\"id\" href=\"#pols\">pols</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#num_pols\">num_pols</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#pols\">pols</a>[0]))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#pols\">pols</a>[0]);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = <a class=\"id\" href=\"#pols\">pols</a>[0]-><a class=\"id\" href=\"#xfrm_nr\">xfrm_nr</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XFRM_SUB_POLICY\">CONFIG_XFRM_SUB_POLICY</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pols\">pols</a>[0] && <a class=\"id\" href=\"#pols\">pols</a>[0]-><a class=\"id\" href=\"#action\">action</a> == <a class=\"id\" href=\"#XFRM_POLICY_ALLOW\">XFRM_POLICY_ALLOW</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pols\">pols</a>[0]-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#XFRM_POLICY_TYPE_MAIN\">XFRM_POLICY_TYPE_MAIN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pols\">pols</a>[1] = <a class=\"id\" href=\"#xfrm_policy_lookup_bytype\">xfrm_policy_lookup_bytype</a>(<a class=\"id\" href=\"#xp_net\">xp_net</a>(<a class=\"id\" href=\"#pols\">pols</a>[0]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#XFRM_POLICY_TYPE_MAIN\">XFRM_POLICY_TYPE_MAIN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#XFRM_POLICY_OUT\">XFRM_POLICY_OUT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pols\">pols</a>[1]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#pols\">pols</a>[1])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_pols_put\">xfrm_pols_put</a>(<a class=\"id\" href=\"#pols\">pols</a>, *<a class=\"id\" href=\"#num_pols\">num_pols</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#pols\">pols</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#num_pols\">num_pols</a>) ++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a>) += <a class=\"id\" href=\"#pols\">pols</a>[1]-><a class=\"id\" href=\"#xfrm_nr\">xfrm_nr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; *<a class=\"id\" href=\"#num_pols\">num_pols</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#action\">action</a> != <a class=\"id\" href=\"#XFRM_POLICY_ALLOW\">XFRM_POLICY_ALLOW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *", 
"<a class=\"id\" href=\"#xfrm_resolve_and_create_bundle\">xfrm_resolve_and_create_bundle</a>(struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a> **<a class=\"id\" href=\"#pols\">pols</a>, int <a class=\"id\" href=\"#num_pols\">num_pols</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst_orig\">dst_orig</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#xp_net\">xp_net</a>(<a class=\"id\" href=\"#pols\">pols</a>[0]);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#xfrm\">xfrm</a>[<a class=\"id\" href=\"#XFRM_MAX_DEPTH\">XFRM_MAX_DEPTH</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *<a class=\"id\" href=\"#xdst\">xdst</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try to instantiate a bundle */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_tmpl_resolve\">xfrm_tmpl_resolve</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#num_pols\">num_pols</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#xfrm\">xfrm</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> != 0 && <a class=\"id\" href=\"#err\">err</a> != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMOUTPOLERROR\">LINUX_MIB_XFRMOUTPOLERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#xfrm_bundle_create\">xfrm_bundle_create</a>(<a class=\"id\" href=\"#pols\">pols</a>[0], <a class=\"id\" href=\"#xfrm\">xfrm</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#dst_orig\">dst_orig</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dst\">dst</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMOUTBUNDLEGENERROR\">LINUX_MIB_XFRMOUTBUNDLEGENERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a> = (struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_pols\">num_pols</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_dst_update_parent\">xfrm_dst_update_parent</a>(<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#pols\">pols</a>[1]-><a class=\"id\" href=\"#selector\">selector</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_dst_update_origin\">xfrm_dst_update_origin</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#err\">err</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_free\">dst_free</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMOUTBUNDLECHECKERROR\">LINUX_MIB_XFRMOUTBUNDLECHECKERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_pols\">num_pols</a> = <a class=\"id\" href=\"#num_pols\">num_pols</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#pols\">pols</a>, sizeof(struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a>*) * <a class=\"id\" href=\"#num_pols\">num_pols</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#policy_genid\">policy_genid</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pols\">pols</a>[0]-><a class=\"id\" href=\"#genid\">genid</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xdst\">xdst</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#flow_cache_object\">flow_cache_object</a> *", 
"<a class=\"id\" href=\"#xfrm_bundle_lookup\">xfrm_bundle_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#flow_cache_object\">flow_cache_object</a> *<a class=\"id\" href=\"#oldflo\">oldflo</a>, void *<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst_orig\">dst_orig</a> = (struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *)<a class=\"id\" href=\"#ctx\">ctx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a> *<a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#XFRM_POLICY_TYPE_MAX\">XFRM_POLICY_TYPE_MAX</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *<a class=\"id\" href=\"#xdst\">xdst</a>, *<a class=\"id\" href=\"#new_xdst\">new_xdst</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_pols\">num_pols</a> = 0, <a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = 0, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#pol_dead\">pol_dead</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if the policies from old bundle are usable */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oldflo\">oldflo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#oldflo\">oldflo</a>, struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a>, <a class=\"id\" href=\"#flo\">flo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_pols\">num_pols</a> = <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_pols\">num_pols</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pol_dead\">pol_dead</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_pols\">num_pols</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pol_dead\">pol_dead</a> |= <a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#dead\">dead</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pol_dead\">pol_dead</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_free\">dst_free</a>(&amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_pols\">num_pols</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oldflo\">oldflo</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Resolve policies to use if we couldn't get them from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * previous cache entry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xdst\">xdst</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_pols\">num_pols</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pols\">pols</a>[0] = <a class=\"id\" href=\"#__xfrm_policy_lookup\">__xfrm_policy_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_expand_policies\">xfrm_expand_policies</a>(<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#pols\">pols</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#num_pols\">num_pols</a>, &amp;<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#inc_error\">inc_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_pols\">num_pols</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#make_dummy_bundle\">make_dummy_bundle</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_xdst\">new_xdst</a> = <a class=\"id\" href=\"#xfrm_resolve_and_create_bundle\">xfrm_resolve_and_create_bundle</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#num_pols\">num_pols</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#dst_orig\">dst_orig</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new_xdst\">new_xdst</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#new_xdst\">new_xdst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oldflo\">oldflo</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#make_dummy_bundle\">make_dummy_bundle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_hold\">dst_hold</a>(&amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#oldflo\">oldflo</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#new_xdst\">new_xdst</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oldflo\">oldflo</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#make_dummy_bundle\">make_dummy_bundle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_hold\">dst_hold</a>(&amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#oldflo\">oldflo</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Kill the previous bundle */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xdst\">xdst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The policies were stolen for newly generated bundle */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_pols\">num_pols</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_free\">dst_free</a>(&amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Flow cache does not have reference, it dst_free()'s,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but we do need to return one reference for original caller */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_hold\">dst_hold</a>(&amp;<a class=\"id\" href=\"#new_xdst\">new_xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#new_xdst\">new_xdst</a>-><a class=\"id\" href=\"#flo\">flo</a>;", 
"", 
"<a class=\"id\" href=\"#make_dummy_bundle\">make_dummy_bundle</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* We found policies, but there's no bundles to instantiate:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * either because the policy blocks, has no transformations or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we could not build template (no xfrm_states).*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a> = <a class=\"id\" href=\"#xfrm_alloc_dst\">xfrm_alloc_dst</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#xdst\">xdst</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_pols_put\">xfrm_pols_put</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#num_pols\">num_pols</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#xdst\">xdst</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_pols\">num_pols</a> = <a class=\"id\" href=\"#num_pols\">num_pols</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = <a class=\"id\" href=\"#num_xfrms\">num_xfrms</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#pols\">pols</a>, sizeof(struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a>*) * <a class=\"id\" href=\"#num_pols\">num_pols</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_hold\">dst_hold</a>(&amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#flo\">flo</a>;", 
"", 
"<a class=\"id\" href=\"#inc_error\">inc_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMOUTPOLERROR\">LINUX_MIB_XFRMOUTPOLERROR</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xdst\">xdst</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_free\">dst_free</a>(&amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_pols_put\">xfrm_pols_put</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#num_pols\">num_pols</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Main function: finds/creates a bundle for given flow.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * At the moment we eat a raw IP route. Mostly to speed up lookups</span>", 
"<span class=\"comment\"> * on interfaces with disabled IPsec.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__xfrm_lookup\">__xfrm_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> **<a class=\"id\" href=\"#dst_p\">dst_p</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a> *<a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#XFRM_POLICY_TYPE_MAX\">XFRM_POLICY_TYPE_MAX</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_object\">flow_cache_object</a> *<a class=\"id\" href=\"#flo\">flo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *<a class=\"id\" href=\"#xdst\">xdst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, *<a class=\"id\" href=\"#dst_orig\">dst_orig</a> = *<a class=\"id\" href=\"#dst_p\">dst_p</a>, *<a class=\"id\" href=\"#route\">route</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#dst_orig\">dst_orig</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#policy_to_flow_dir\">policy_to_flow_dir</a>(<a class=\"id\" href=\"#XFRM_POLICY_OUT\">XFRM_POLICY_OUT</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#num_pols\">num_pols</a>, <a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = 0, <a class=\"id\" href=\"#drop_pols\">drop_pols</a> = 0;", 
"", 
"<a class=\"id\" href=\"#restart\">restart</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#route\">route</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> && <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_policy\">sk_policy</a>[<a class=\"id\" href=\"#XFRM_POLICY_OUT\">XFRM_POLICY_OUT</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_pols\">num_pols</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pols\">pols</a>[0] = <a class=\"id\" href=\"#xfrm_sk_policy_lookup\">xfrm_sk_policy_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#XFRM_POLICY_OUT\">XFRM_POLICY_OUT</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_expand_policies\">xfrm_expand_policies</a>(<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#pols\">pols</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#num_pols\">num_pols</a>, &amp;<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dropdst\">dropdst</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_pols\">num_pols</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drop_pols\">drop_pols</a> = <a class=\"id\" href=\"#num_pols\">num_pols</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_transform\">no_transform</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a> = <a class=\"id\" href=\"#xfrm_resolve_and_create_bundle\">xfrm_resolve_and_create_bundle</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#num_pols\">num_pols</a>, <a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#dst_orig\">dst_orig</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#xdst\">xdst</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_pols_put\">xfrm_pols_put</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#num_pols\">num_pols</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#xdst\">xdst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dropdst\">dropdst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#xdst\">xdst</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drop_pols\">drop_pols</a> = <a class=\"id\" href=\"#num_pols\">num_pols</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_transform\">no_transform</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_sk_bundle_lock\">xfrm_policy_sk_bundle_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#xfrm_policy_sk_bundles\">xfrm_policy_sk_bundles</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_policy_sk_bundles\">xfrm_policy_sk_bundles</a> = &amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_sk_bundle_lock\">xfrm_policy_sk_bundle_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#route\">route</a> = <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#route\">route</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xdst\">xdst</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* To accelerate a bit...  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dst_orig\">dst_orig</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DST_NOXFRM\">DST_NOXFRM</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#policy_count\">policy_count</a>[<a class=\"id\" href=\"#XFRM_POLICY_OUT\">XFRM_POLICY_OUT</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nopol\">nopol</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flo\">flo</a> = <a class=\"id\" href=\"#flow_cache_lookup\">flow_cache_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_bundle_lookup\">xfrm_bundle_lookup</a>, <a class=\"id\" href=\"#dst_orig\">dst_orig</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flo\">flo</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nopol\">nopol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#flo\">flo</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#flo\">flo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dropdst\">dropdst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#flo\">flo</a>, struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a>, <a class=\"id\" href=\"#flo\">flo</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_pols\">num_pols</a> = <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_pols\">num_pols</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> = <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_xfrms\">num_xfrms</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#pols\">pols</a>, sizeof(struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a>*) * <a class=\"id\" href=\"#num_pols\">num_pols</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#route\">route</a> = <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#route\">route</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = &amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#route\">route</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The only case when xfrm_bundle_lookup() returns a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bundle with null route, is when the template could</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not be resolved. It means policies are there, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bundle could not be created, since we don't yet</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * have the xfrm_state's. We need to wait for KM to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * negotiate new SA's or bail out with error.*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#sysctl_larval_drop\">sysctl_larval_drop</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* EREMOTE tells the caller to generate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * a one-shot blackhole route. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_pols_put\">xfrm_pols_put</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#drop_pols\">drop_pols</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMOUTNOSTATES\">LINUX_MIB_XFRMOUTNOSTATES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EREMOTE\">EREMOTE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XFRM_LOOKUP_WAIT\">XFRM_LOOKUP_WAIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_WAITQUEUE\">DECLARE_WAITQUEUE</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_wait_queue\">add_wait_queue</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#km_waitq\">km_waitq</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_wait_queue\">remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#km_waitq\">km_waitq</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ERESTART\">ERESTART</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMOUTNOSTATES\">LINUX_MIB_XFRMOUTNOSTATES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#no_transform\">no_transform</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_pols\">num_pols</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nopol\">nopol</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XFRM_LOOKUP_ICMP\">XFRM_LOOKUP_ICMP</a>) &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#pols\">pols</a>[0]-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XFRM_POLICY_ICMP\">XFRM_POLICY_ICMP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_pols\">num_pols</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#curlft\">curlft</a>.<a class=\"id\" href=\"#use_time\">use_time</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Prohibit the flow */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMOUTPOLBLOCK\">LINUX_MIB_XFRMOUTPOLBLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#num_xfrms\">num_xfrms</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Flow transformed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dst_p\">dst_p</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst_orig\">dst_orig</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Flow passes untransformed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#ok\">ok</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfrm_pols_put\">xfrm_pols_put</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#drop_pols\">drop_pols</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#nopol\">nopol</a>:", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XFRM_LOOKUP_ICMP\">XFRM_LOOKUP_ICMP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ok\">ok</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<a class=\"id\" href=\"#dropdst\">dropdst</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst_orig\">dst_orig</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#dst_p\">dst_p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfrm_pols_put\">xfrm_pols_put</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#drop_pols\">drop_pols</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__xfrm_lookup\">__xfrm_lookup</a>);", 
"", 
"int <a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> **<a class=\"id\" href=\"#dst_p\">dst_p</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__xfrm_lookup\">__xfrm_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dst_p\">dst_p</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EREMOTE\">EREMOTE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(*<a class=\"id\" href=\"#dst_p\">dst_p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dst_p\">dst_p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#xfrm_secpath_reject\">xfrm_secpath_reject</a>(int <a class=\"id\" href=\"#idx\">idx</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#x\">x</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a> || <a class=\"id\" href=\"#idx\">idx</a> &lt; 0 || <a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#xvec\">xvec</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#reject\">reject</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#reject\">reject</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"}", 
"", 
"<span class=\"comment\">/* When skb is transformed back to its \"native\" form, we have to</span>", 
"<span class=\"comment\"> * check policy restrictions. At the moment we make this in maximally</span>", 
"<span class=\"comment\"> * stupid way. Shame on me. :-) Of course, connected sockets must</span>", 
"<span class=\"comment\"> * have policy cached at them.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#xfrm_state_ok\">xfrm_state_ok</a>(struct <a class=\"id\" href=\"#xfrm_tmpl\">xfrm_tmpl</a> *<a class=\"id\" href=\"#tmpl\">tmpl</a>, struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#x\">x</a>,", 
"<span class=\"ts\"/>      unsigned short <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xfrm_state_kern\">xfrm_state_kern</a>(<a class=\"id\" href=\"#x\">x</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#optional\">optional</a> && !<a class=\"id\" href=\"#xfrm_state_addr_cmp\">xfrm_state_addr_cmp</a>(<a class=\"id\" href=\"#tmpl\">tmpl</a>, <a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#encap_family\">encap_family</a>);", 
"<span class=\"ts\"/>return<span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#proto\">proto</a> == <a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#proto\">proto</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#spi\">spi</a> == <a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#spi\">spi</a> || !<a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#spi\">spi</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#reqid\">reqid</a> == <a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#reqid\">reqid</a> || !<a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#reqid\">reqid</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#mode\">mode</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#allalgs\">allalgs</a> || (<a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#aalgos\">aalgos</a> &amp; (1<<<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#aalgo\">aalgo</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/> !(<a class=\"id\" href=\"#xfrm_id_proto_match\">xfrm_id_proto_match</a>(<a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#proto\">proto</a>, <a class=\"id\" href=\"#IPSEC_PROTO_ANY\">IPSEC_PROTO_ANY</a>))) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#XFRM_MODE_TRANSPORT\">XFRM_MODE_TRANSPORT</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#xfrm_state_addr_cmp\">xfrm_state_addr_cmp</a>(<a class=\"id\" href=\"#tmpl\">tmpl</a>, <a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#family\">family</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 0 or more than 0 is returned when validation is succeeded (either bypass</span>", 
"<span class=\"comment\"> * because of optional transport mode, or next index of the mathced secpath</span>", 
"<span class=\"comment\"> * state with the template.</span>", 
"<span class=\"comment\"> * -1 is returned when no matching template is found.</span>", 
"<span class=\"comment\"> * Otherwise \"-2 - errored_index\" is returned.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#xfrm_policy_ok\">xfrm_policy_ok</a>(struct <a class=\"id\" href=\"#xfrm_tmpl\">xfrm_tmpl</a> *<a class=\"id\" href=\"#tmpl\">tmpl</a>, struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#sp\">sp</a>, int <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/>       unsigned short <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#optional\">optional</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmpl\">tmpl</a>-><a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#XFRM_MODE_TRANSPORT\">XFRM_MODE_TRANSPORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = -1;", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#idx\">idx</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xfrm_state_ok\">xfrm_state_ok</a>(<a class=\"id\" href=\"#tmpl\">tmpl</a>, <a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#xvec\">xvec</a>[<a class=\"id\" href=\"#idx\">idx</a>], <a class=\"id\" href=\"#family\">family</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return ++<a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#xvec\">xvec</a>[<a class=\"id\" href=\"#idx\">idx</a>]-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#XFRM_MODE_TRANSPORT\">XFRM_MODE_TRANSPORT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = -2-<a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#start\">start</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__xfrm_decode_session\">__xfrm_decode_session</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#family\">family</a>, int <a class=\"id\" href=\"#reverse\">reverse</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a> = <a class=\"id\" href=\"#xfrm_policy_get_afinfo\">xfrm_policy_get_afinfo</a>(<a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#afinfo\">afinfo</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAFNOSUPPORT\">EAFNOSUPPORT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#decode_session\">decode_session</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#reverse\">reverse</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_xfrm_decode_session\">security_xfrm_decode_session</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#secid\">secid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfrm_policy_put_afinfo\">xfrm_policy_put_afinfo</a>(<a class=\"id\" href=\"#afinfo\">afinfo</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__xfrm_decode_session\">__xfrm_decode_session</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#secpath_has_nontransport\">secpath_has_nontransport</a>(struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#sp\">sp</a>, int <a class=\"id\" href=\"#k\">k</a>, int *<a class=\"id\" href=\"#idxp\">idxp</a>)", 
"{", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#xvec\">xvec</a>[<a class=\"id\" href=\"#k\">k</a>]-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#XFRM_MODE_TRANSPORT\">XFRM_MODE_TRANSPORT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#idxp\">idxp</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__xfrm_policy_check\">__xfrm_policy_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a> *<a class=\"id\" href=\"#pol\">pol</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a> *<a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#XFRM_POLICY_TYPE_MAX\">XFRM_POLICY_TYPE_MAX</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#npols\">npols</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#xfrm_nr\">xfrm_nr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pi\">pi</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reverse\">reverse</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#fl_dir\">fl_dir</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#xerr_idx\">xerr_idx</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reverse\">reverse</a> = <a class=\"id\" href=\"#dir\">dir</a> &amp; ~<a class=\"id\" href=\"#XFRM_POLICY_MASK\">XFRM_POLICY_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> &= <a class=\"id\" href=\"#XFRM_POLICY_MASK\">XFRM_POLICY_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl_dir\">fl_dir</a> = <a class=\"id\" href=\"#policy_to_flow_dir\">policy_to_flow_dir</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__xfrm_decode_session\">__xfrm_decode_session</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#reverse\">reverse</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINHDRERROR\">LINUX_MIB_XFRMINHDRERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_nat_decode_session\">nf_nat_decode_session</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First, check used SA against their selectors. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a>-1; <a class=\"id\" href=\"#i\">i</a>>=0; <a class=\"id\" href=\"#i\">i</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#xvec\">xvec</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm_selector_match\">xfrm_selector_match</a>(&amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#sel\">sel</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINSTATEMISMATCH\">LINUX_MIB_XFRMINSTATEMISMATCH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pol\">pol</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> && <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_policy\">sk_policy</a>[<a class=\"id\" href=\"#dir\">dir</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pol\">pol</a> = <a class=\"id\" href=\"#xfrm_sk_policy_lookup\">xfrm_sk_policy_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#dir\">dir</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#pol\">pol</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINPOLERROR\">LINUX_MIB_XFRMINPOLERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pol\">pol</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_object\">flow_cache_object</a> *<a class=\"id\" href=\"#flo\">flo</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flo\">flo</a> = <a class=\"id\" href=\"#flow_cache_lookup\">flow_cache_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#fl_dir\">fl_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_policy_lookup\">xfrm_policy_lookup</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR_OR_NULL\">IS_ERR_OR_NULL</a>(<a class=\"id\" href=\"#flo\">flo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pol\">pol</a> = <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#flo\">flo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pol\">pol</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#flo\">flo</a>, struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a>, <a class=\"id\" href=\"#flo\">flo</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#pol\">pol</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINPOLERROR\">LINUX_MIB_XFRMINPOLERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pol\">pol</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a> && <a class=\"id\" href=\"#secpath_has_nontransport\">secpath_has_nontransport</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>, 0, &amp;<a class=\"id\" href=\"#xerr_idx\">xerr_idx</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_secpath_reject\">xfrm_secpath_reject</a>(<a class=\"id\" href=\"#xerr_idx\">xerr_idx</a>, <a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINNOPOLS\">LINUX_MIB_XFRMINNOPOLS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pol\">pol</a>-><a class=\"id\" href=\"#curlft\">curlft</a>.<a class=\"id\" href=\"#use_time\">use_time</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pols\">pols</a>[0] = <a class=\"id\" href=\"#pol\">pol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#npols\">npols</a> ++;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XFRM_SUB_POLICY\">CONFIG_XFRM_SUB_POLICY</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pols\">pols</a>[0]-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#XFRM_POLICY_TYPE_MAIN\">XFRM_POLICY_TYPE_MAIN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pols\">pols</a>[1] = <a class=\"id\" href=\"#xfrm_policy_lookup_bytype\">xfrm_policy_lookup_bytype</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#XFRM_POLICY_TYPE_MAIN\">XFRM_POLICY_TYPE_MAIN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pols\">pols</a>[1]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#pols\">pols</a>[1])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINPOLERROR\">LINUX_MIB_XFRMINPOLERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pols\">pols</a>[1]-><a class=\"id\" href=\"#curlft\">curlft</a>.<a class=\"id\" href=\"#use_time\">use_time</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#npols\">npols</a> ++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pol\">pol</a>-><a class=\"id\" href=\"#action\">action</a> == <a class=\"id\" href=\"#XFRM_POLICY_ALLOW\">XFRM_POLICY_ALLOW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#sp\">sp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>static struct <a class=\"id\" href=\"#sec_path\">sec_path</a> <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_tmpl\">xfrm_tmpl</a> *<a class=\"id\" href=\"#tp\">tp</a>[<a class=\"id\" href=\"#XFRM_MAX_DEPTH\">XFRM_MAX_DEPTH</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_tmpl\">xfrm_tmpl</a> *<a class=\"id\" href=\"#stp\">stp</a>[<a class=\"id\" href=\"#XFRM_MAX_DEPTH\">XFRM_MAX_DEPTH</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_tmpl\">xfrm_tmpl</a> **<a class=\"id\" href=\"#tpp\">tpp</a> = <a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ti\">ti</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a> = &amp;<a class=\"id\" href=\"#dummy\">dummy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#pi\">pi</a> = 0; <a class=\"id\" href=\"#pi\">pi</a> &lt; <a class=\"id\" href=\"#npols\">npols</a>; <a class=\"id\" href=\"#pi\">pi</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#pi\">pi</a>] != <a class=\"id\" href=\"#pol\">pol</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#pi\">pi</a>]-><a class=\"id\" href=\"#action\">action</a> != <a class=\"id\" href=\"#XFRM_POLICY_ALLOW\">XFRM_POLICY_ALLOW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINPOLBLOCK\">LINUX_MIB_XFRMINPOLBLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reject\">reject</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a> + <a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#pi\">pi</a>]-><a class=\"id\" href=\"#xfrm_nr\">xfrm_nr</a> >= <a class=\"id\" href=\"#XFRM_MAX_DEPTH\">XFRM_MAX_DEPTH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINBUFFERERROR\">LINUX_MIB_XFRMINBUFFERERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reject_error\">reject_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#pi\">pi</a>]-><a class=\"id\" href=\"#xfrm_nr\">xfrm_nr</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tpp\">tpp</a>[<a class=\"id\" href=\"#ti\">ti</a>++] = &amp;<a class=\"id\" href=\"#pols\">pols</a>[<a class=\"id\" href=\"#pi\">pi</a>]-><a class=\"id\" href=\"#xfrm_vec\">xfrm_vec</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_nr\">xfrm_nr</a> = <a class=\"id\" href=\"#ti\">ti</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#npols\">npols</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_tmpl_sort\">xfrm_tmpl_sort</a>(<a class=\"id\" href=\"#stp\">stp</a>, <a class=\"id\" href=\"#tpp\">tpp</a>, <a class=\"id\" href=\"#xfrm_nr\">xfrm_nr</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tpp\">tpp</a> = <a class=\"id\" href=\"#stp\">stp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For each tunnel xfrm, find the first matching tmpl.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * For each tmpl before that, find corresponding xfrm.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Order is _important_. Later we will implement</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * some barriers, but at the moment barriers</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * are implied between each two transformations.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#xfrm_nr\">xfrm_nr</a>-1, <a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#xfrm_policy_ok\">xfrm_policy_ok</a>(<a class=\"id\" href=\"#tpp\">tpp</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> &lt; -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* \"-2 - errored_index\" returned */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xerr_idx\">xerr_idx</a> = -(2+<a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINTMPLMISMATCH\">LINUX_MIB_XFRMINTMPLMISMATCH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reject\">reject</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#secpath_has_nontransport\">secpath_has_nontransport</a>(<a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#k\">k</a>, &amp;<a class=\"id\" href=\"#xerr_idx\">xerr_idx</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINTMPLMISMATCH\">LINUX_MIB_XFRMINTMPLMISMATCH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reject\">reject</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_pols_put\">xfrm_pols_put</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#npols\">npols</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINPOLBLOCK\">LINUX_MIB_XFRMINPOLBLOCK</a>);", 
"", 
"<a class=\"id\" href=\"#reject\">reject</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfrm_secpath_reject\">xfrm_secpath_reject</a>(<a class=\"id\" href=\"#xerr_idx\">xerr_idx</a>, <a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<a class=\"id\" href=\"#reject_error\">reject_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfrm_pols_put\">xfrm_pols_put</a>(<a class=\"id\" href=\"#pols\">pols</a>, <a class=\"id\" href=\"#npols\">npols</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__xfrm_policy_check\">__xfrm_policy_check</a>);", 
"", 
"int <a class=\"id\" href=\"#__xfrm_route_forward\">__xfrm_route_forward</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, unsigned short <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xfrm_decode_session\">xfrm_decode_session</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMFWDHDRERROR\">LINUX_MIB_XFRMFWDHDRERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_force\">skb_dst_force</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0) == 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set\">skb_dst_set</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__xfrm_route_forward\">__xfrm_route_forward</a>);", 
"", 
"<span class=\"comment\">/* Optimize later using cookies and generation ids. */</span>", 
"", 
"static struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#xfrm_dst_check\">xfrm_dst_check</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cookie\">cookie</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Code (such as __xfrm4_bundle_create()) sets dst-&gt;obsolete</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to \"-1\" to force all XFRM destinations to get validated by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dst_ops-&gt;check on every use.  We do this because when a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * normal route referenced by an XFRM dst is obsoleted we do</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not go looking around for all parent referencing XFRM dsts</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so that we can invalidate them.  It is just too much work.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Instead we make the checks here on every use.  For example:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>XFRM dst A --&gt; IPv4 dst X</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * X is the \"xdst-&gt;route\" of A (X is also the \"dst-&gt;path\" of A</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in this example).  If X is marked obsolete, \"A\" will not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * notice.  That's what we are validating here via the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * stale_bundle() check.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When a policy's bundle is pruned, we dst_free() the XFRM</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dst which causes it's -&gt;obsolete field to be set to a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * positive non-zero integer.  If an XFRM dst has been pruned</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * like this, we want to force a new route lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#obsolete\">obsolete</a> &lt; 0 && !<a class=\"id\" href=\"#stale_bundle\">stale_bundle</a>(<a class=\"id\" href=\"#dst\">dst</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#stale_bundle\">stale_bundle</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#xfrm_bundle_ok\">xfrm_bundle_ok</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, (struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *)<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>, 0);", 
"}", 
"", 
"void <a class=\"id\" href=\"#xfrm_dst_ifdown\">xfrm_dst_ifdown</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#child\">child</a>) && <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a> && <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#loopback_dev\">loopback_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm_dst_ifdown\">xfrm_dst_ifdown</a>);", 
"", 
"static void <a class=\"id\" href=\"#xfrm_link_failure\">xfrm_link_failure</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Impossible. Such dst must be popped before reaches point of failure. */</span>", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#xfrm_negative_advice\">xfrm_negative_advice</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#obsolete\">obsolete</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__xfrm_garbage_collect\">__xfrm_garbage_collect</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#head\">head</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flow_cache_flush\">flow_cache_flush</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_sk_bundle_lock\">xfrm_policy_sk_bundle_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#xfrm_policy_sk_bundles\">xfrm_policy_sk_bundles</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfrm_policy_sk_bundles\">xfrm_policy_sk_bundles</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_sk_bundle_lock\">xfrm_policy_sk_bundle_lock</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_free\">dst_free</a>(<a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xfrm_init_pmtu\">xfrm_init_pmtu</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *<a class=\"id\" href=\"#xdst\">xdst</a> = (struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pmtu\">pmtu</a>, <a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmtu\">pmtu</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#child_mtu_cached\">child_mtu_cached</a> = <a class=\"id\" href=\"#pmtu\">pmtu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmtu\">pmtu</a> = <a class=\"id\" href=\"#xfrm_state_mtu\">xfrm_state_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>, <a class=\"id\" href=\"#pmtu\">pmtu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#route\">route</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a> = <a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmtu\">pmtu</a> &gt; <a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmtu\">pmtu</a> = <a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#metrics\">metrics</a>[<a class=\"id\" href=\"#RTAX_MTU\">RTAX_MTU</a>-1] = <a class=\"id\" href=\"#pmtu\">pmtu</a>;", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#next\">next</a>));", 
"}", 
"", 
"<span class=\"comment\">/* Check that the bundle accepts the flow and its components are</span>", 
"<span class=\"comment\"> * still valid.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#xfrm_bundle_ok\">xfrm_bundle_ok</a>(struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a> *<a class=\"id\" href=\"#pol\">pol</a>, struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *<a class=\"id\" href=\"#first\">first</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>, int <a class=\"id\" href=\"#family\">family</a>, int <a class=\"id\" href=\"#strict\">strict</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = &amp;<a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *<a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst_check\">dst_check</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#path\">path</a>, ((struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *)<a class=\"id\" href=\"#dst\">dst</a>)-><a class=\"id\" href=\"#path_cookie\">path_cookie</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a> && !<a class=\"id\" href=\"#netif_running\">netif_running</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XFRM_SUB_POLICY\">CONFIG_XFRM_SUB_POLICY</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fl\">fl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#origin\">origin</a> && !<a class=\"id\" href=\"#flow_cache_uli_match\">flow_cache_uli_match</a>(<a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#origin\">origin</a>, <a class=\"id\" href=\"#fl\">fl</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#partner\">partner</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#xfrm_selector_match\">xfrm_selector_match</a>(<a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#partner\">partner</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *<a class=\"id\" href=\"#xdst\">xdst</a> = (struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fl\">fl</a> && !<a class=\"id\" href=\"#xfrm_selector_match\">xfrm_selector_match</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>-><a class=\"id\" href=\"#sel\">sel</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fl\">fl</a> && <a class=\"id\" href=\"#pol\">pol</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#security_xfrm_state_pol_flow_match\">security_xfrm_state_pol_flow_match</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>, <a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#fl\">fl</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>-><a class=\"id\" href=\"#km\">km</a>.<a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#XFRM_STATE_VALID\">XFRM_STATE_VALID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#xfrm_genid\">xfrm_genid</a> != <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>-><a class=\"id\" href=\"#genid\">genid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#num_pols\">num_pols</a> &gt; 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#policy_genid\">policy_genid</a> != <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#pols\">pols</a>[0]-><a class=\"id\" href=\"#genid\">genid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strict\">strict</a> && <a class=\"id\" href=\"#fl\">fl</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>-><a class=\"id\" href=\"#outer_mode\">outer_mode</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XFRM_MODE_FLAG_TUNNEL\">XFRM_MODE_FLAG_TUNNEL</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#xfrm_state_addr_flow_check\">xfrm_state_addr_flow_check</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#family\">family</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#child_mtu_cached\">child_mtu_cached</a> != <a class=\"id\" href=\"#mtu\">mtu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#xdst\">xdst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#child_mtu_cached\">child_mtu_cached</a> = <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst_check\">dst_check</a>(<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#route\">route</a>, <a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#route_cookie\">route_cookie</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#route\">route</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a> != <a class=\"id\" href=\"#mtu\">mtu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#xdst\">xdst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xdst\">xdst</a>-><a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a> = <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#last\">last</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#child_mtu_cached\">child_mtu_cached</a>;", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = &amp;<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#xfrm_state_mtu\">xfrm_state_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>, <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mtu\">mtu</a> &gt; <a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#route_mtu_cached\">route_mtu_cached</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#metrics\">metrics</a>[<a class=\"id\" href=\"#RTAX_MTU\">RTAX_MTU</a>-1] = <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last\">last</a> == <a class=\"id\" href=\"#first\">first</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = (struct <a class=\"id\" href=\"#xfrm_dst\">xfrm_dst</a> *)<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#child_mtu_cached\">child_mtu_cached</a> = <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm_bundle_ok\">xfrm_bundle_ok</a>);", 
"", 
"int <a class=\"id\" href=\"#xfrm_policy_register_afinfo\">xfrm_policy_register_afinfo</a>(struct <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#afinfo\">afinfo</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a> >= <a class=\"id\" href=\"#NPROTO\">NPROTO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAFNOSUPPORT\">EAFNOSUPPORT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_afinfo_lock\">xfrm_policy_afinfo_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a>[<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a>] != <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_ops\">dst_ops</a> *<a class=\"id\" href=\"#dst_ops\">dst_ops</a> = <a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#dst_ops\">dst_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#kmem_cachep\">kmem_cachep</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#kmem_cachep\">kmem_cachep</a> = <a class=\"id\" href=\"#xfrm_dst_cache\">xfrm_dst_cache</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#check\">check</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#check\">check</a> = <a class=\"id\" href=\"#xfrm_dst_check\">xfrm_dst_check</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#negative_advice\">negative_advice</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#negative_advice\">negative_advice</a> = <a class=\"id\" href=\"#xfrm_negative_advice\">xfrm_negative_advice</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#link_failure\">link_failure</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#link_failure\">link_failure</a> = <a class=\"id\" href=\"#xfrm_link_failure\">xfrm_link_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#garbage_collect\">garbage_collect</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#garbage_collect\">garbage_collect</a> = <a class=\"id\" href=\"#__xfrm_garbage_collect\">__xfrm_garbage_collect</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a>[<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a>] = <a class=\"id\" href=\"#afinfo\">afinfo</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_afinfo_lock\">xfrm_policy_afinfo_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_net\">for_each_net</a>(<a class=\"id\" href=\"#net\">net</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_ops\">dst_ops</a> *<a class=\"id\" href=\"#xfrm_dst_ops\">xfrm_dst_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_dst_ops\">xfrm_dst_ops</a> = &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#xfrm4_dst_ops\">xfrm4_dst_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_dst_ops\">xfrm_dst_ops</a> = &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#xfrm6_dst_ops\">xfrm6_dst_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#xfrm_dst_ops\">xfrm_dst_ops</a> = *<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#dst_ops\">dst_ops</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm_policy_register_afinfo\">xfrm_policy_register_afinfo</a>);", 
"", 
"int <a class=\"id\" href=\"#xfrm_policy_unregister_afinfo\">xfrm_policy_unregister_afinfo</a>(struct <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#afinfo\">afinfo</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a> >= <a class=\"id\" href=\"#NPROTO\">NPROTO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAFNOSUPPORT\">EAFNOSUPPORT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_afinfo_lock\">xfrm_policy_afinfo_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a>[<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a>] != <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a>[<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a>] != <a class=\"id\" href=\"#afinfo\">afinfo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_ops\">dst_ops</a> *<a class=\"id\" href=\"#dst_ops\">dst_ops</a> = <a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#dst_ops\">dst_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a>[<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#kmem_cachep\">kmem_cachep</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#check\">check</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#negative_advice\">negative_advice</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ops\">dst_ops</a>-><a class=\"id\" href=\"#link_failure\">link_failure</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#garbage_collect\">garbage_collect</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_afinfo_lock\">xfrm_policy_afinfo_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm_policy_unregister_afinfo\">xfrm_policy_unregister_afinfo</a>);", 
"", 
"static void <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#xfrm_dst_ops_init\">xfrm_dst_ops_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_afinfo_lock\">xfrm_policy_afinfo_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a> = <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a>[<a class=\"id\" href=\"#AF_INET\">AF_INET</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#afinfo\">afinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#xfrm4_dst_ops\">xfrm4_dst_ops</a> = *<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#dst_ops\">dst_ops</a>;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a> = <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a>[<a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#afinfo\">afinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#xfrm6_dst_ops\">xfrm6_dst_ops</a> = *<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#dst_ops\">dst_ops</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_afinfo_lock\">xfrm_policy_afinfo_lock</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a> *<a class=\"id\" href=\"#xfrm_policy_get_afinfo\">xfrm_policy_get_afinfo</a>(unsigned short <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#family\">family</a> >= <a class=\"id\" href=\"#NPROTO\">NPROTO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_afinfo_lock\">xfrm_policy_afinfo_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a> = <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a>[<a class=\"id\" href=\"#family\">family</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#afinfo\">afinfo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_afinfo_lock\">xfrm_policy_afinfo_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#afinfo\">afinfo</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xfrm_policy_put_afinfo\">xfrm_policy_put_afinfo</a>(struct <a class=\"id\" href=\"#xfrm_policy_afinfo\">xfrm_policy_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#xfrm_policy_afinfo_lock\">xfrm_policy_afinfo_lock</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xfrm_dev_event\">xfrm_dev_event</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#this\">this</a>, unsigned long <a class=\"id\" href=\"#event\">event</a>, void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__xfrm_garbage_collect\">__xfrm_garbage_collect</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_DONE\">NOTIFY_DONE</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#xfrm_dev_notifier\">xfrm_dev_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a><span class=\"ts\"/>= <a class=\"id\" href=\"#xfrm_dev_event\">xfrm_dev_event</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XFRM_STATISTICS\">CONFIG_XFRM_STATISTICS</a>", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#xfrm_statistics_init\">xfrm_statistics_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#xfrm_statistics\">xfrm_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#linux_xfrm_mib\">linux_xfrm_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#linux_xfrm_mib\">linux_xfrm_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
];
xr_frag_insert('l/a4/1e746d123d009ae7e0d35f5b4d4cf00e3c432d.xr', __xr_tmp);
