var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#thiscpuid\">thiscpuid</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0xc0000; <a class=\"id\" href=\"#i\">i</a> &lt; 0xffff0; <a class=\"id\" href=\"#i\">i</a> += 0x10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Scan BIOS looking for the signature. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It can not be at ffff0 - it is too big. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psb\">psb</a> = <a class=\"id\" href=\"#phys_to_virt\">phys_to_virt</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#psb\">psb</a>, <a class=\"id\" href=\"#PSB_ID_STRING\">PSB_ID_STRING</a>, <a class=\"id\" href=\"#PSB_ID_STRING_LEN\">PSB_ID_STRING_LEN</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"found PSB header at 0x%p\\n\", <a class=\"id\" href=\"#psb\">psb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"table vers: 0x%x\\n\", <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#tableversion\">tableversion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#tableversion\">tableversion</a> != <a class=\"id\" href=\"#PSB_VERSION_1_4\">PSB_VERSION_1_4</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"PSB table is not v1.4\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"flags: 0x%x\\n\", <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#flags1\">flags1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#flags1\">flags1</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"unknown flags\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#vstable\">vstable</a> = <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#vstable\">vstable</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"voltage stabilization time: %d(*20us)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#vstable\">vstable</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"flags2: 0x%x\\n\", <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#flags2\">flags2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#rvo\">rvo</a> = <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#flags2\">flags2</a> &amp; 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#irt\">irt</a> = ((<a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#flags2\">flags2</a>) >> 2) &amp; 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mvs\">mvs</a> = ((<a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#flags2\">flags2</a>) >> 4) &amp; 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#vidmvs\">vidmvs</a> = 1 << <a class=\"id\" href=\"#mvs\">mvs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#batps\">batps</a> = ((<a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#flags2\">flags2</a>) >> 6) &amp; 3;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ramp voltage offset: %d\\n\", <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#rvo\">rvo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"isochronous relief time: %d\\n\", <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#irt\">irt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"maximum voltage step: %d - 0x%x\\n\", <a class=\"id\" href=\"#mvs\">mvs</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#vidmvs\">vidmvs</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"numpst: 0x%x\\n\", <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#num_tables\">num_tables</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpst\">cpst</a> = <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#num_tables\">num_tables</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#cpuid\">cpuid</a> == 0x00000fc0) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#cpuid\">cpuid</a> == 0x00000fe0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thiscpuid\">thiscpuid</a> = <a class=\"id\" href=\"#cpuid_eax\">cpuid_eax</a>(<a class=\"id\" href=\"#CPUID_PROCESSOR_SIGNATURE\">CPUID_PROCESSOR_SIGNATURE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#thiscpuid\">thiscpuid</a> == 0x00000fc0) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#thiscpuid\">thiscpuid</a> == 0x00000fe0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpst\">cpst</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpst\">cpst</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"numpst must be 1\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#plllock\">plllock</a> = <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#plllocktime\">plllocktime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"plllocktime: 0x%x (units 1us)\\n\", <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#plllocktime\">plllocktime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"maxfid: 0x%x\\n\", <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#maxfid\">maxfid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"maxvid: 0x%x\\n\", <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#maxvid\">maxvid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maxvid\">maxvid</a> = <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#maxvid\">maxvid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a> = <a class=\"id\" href=\"#psb\">psb</a>-><a class=\"id\" href=\"#numps\">numps</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"numpstates: 0x%x\\n\", <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fill_powernow_table\">fill_powernow_table</a>(<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#pst_s\">pst_s</a> *)(<a class=\"id\" href=\"#psb\">psb</a>+1), <a class=\"id\" href=\"#maxvid\">maxvid</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If you see this message, complain to BIOS manufacturer. If</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * he tells you \"we do not support Linux\" or some similar</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * nonsense, remember that Windows 2000 uses the same legacy</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mechanism that the old Linux PSB driver uses. Tell them it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is broken with Windows 2000.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The reference to the AMD documentation is chapter 9 in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * BIOS and Kernel Developer's Guide, which is available on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * www.amd.com</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"No PSB or ACPI _PSS objects\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"Make sure that your BIOS is up to date\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" and Cool'N'Quiet support is enabled in BIOS setup\\n\");", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#powernow_k8_acpi_pst_values\">powernow_k8_acpi_pst_values</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#control\">control</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#acpi_data\">acpi_data</a>.<a class=\"id\" href=\"#state_count\">state_count</a> || (<a class=\"id\" href=\"#cpu_family\">cpu_family</a> == <a class=\"id\" href=\"#CPU_HW_PSTATE\">CPU_HW_PSTATE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#control\">control</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#acpi_data\">acpi_data</a>.<a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#control\">control</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#irt\">irt</a> = (<a class=\"id\" href=\"#control\">control</a> >> <a class=\"id\" href=\"#IRT_SHIFT\">IRT_SHIFT</a>) &amp; <a class=\"id\" href=\"#IRT_MASK\">IRT_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#rvo\">rvo</a> = (<a class=\"id\" href=\"#control\">control</a> >> <a class=\"id\" href=\"#RVO_SHIFT\">RVO_SHIFT</a>) &amp; <a class=\"id\" href=\"#RVO_MASK\">RVO_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#exttype\">exttype</a> = (<a class=\"id\" href=\"#control\">control</a> >> <a class=\"id\" href=\"#EXT_TYPE_SHIFT\">EXT_TYPE_SHIFT</a>) &amp; <a class=\"id\" href=\"#EXT_TYPE_MASK\">EXT_TYPE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#plllock\">plllock</a> = (<a class=\"id\" href=\"#control\">control</a> >> <a class=\"id\" href=\"#PLL_L_SHIFT\">PLL_L_SHIFT</a>) &amp; <a class=\"id\" href=\"#PLL_L_MASK\">PLL_L_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#vidmvs\">vidmvs</a> = 1 << ((<a class=\"id\" href=\"#control\">control</a> >> <a class=\"id\" href=\"#MVS_SHIFT\">MVS_SHIFT</a>) &amp; <a class=\"id\" href=\"#MVS_MASK\">MVS_MASK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#vstable\">vstable</a> = (<a class=\"id\" href=\"#control\">control</a> >> <a class=\"id\" href=\"#VST_SHIFT\">VST_SHIFT</a>) &amp; <a class=\"id\" href=\"#VST_MASK\">VST_MASK</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#powernow_k8_cpu_init_acpi\">powernow_k8_cpu_init_acpi</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_frequency_table\">cpufreq_frequency_table</a> *<a class=\"id\" href=\"#powernow_table\">powernow_table</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_val\">ret_val</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#control\">control</a>, <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_processor_register_performance\">acpi_processor_register_performance</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#acpi_data\">acpi_data</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpu\">cpu</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"register performance failed: bad ACPI data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* verify the data contained in the ACPI structures */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#acpi_data\">acpi_data</a>.<a class=\"id\" href=\"#state_count\">state_count</a> <= 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"No ACPI P-States\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#control\">control</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#acpi_data\">acpi_data</a>.<a class=\"id\" href=\"#control_register\">control_register</a>.<a class=\"id\" href=\"#space_id\">space_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#acpi_data\">acpi_data</a>.<a class=\"id\" href=\"#status_register\">status_register</a>.<a class=\"id\" href=\"#space_id\">space_id</a>;", 
"", 
];
xr_frag_insert('l/a4/6811eed22fcba069eafd043dd65ac5bd645ccb.xr', __xr_tmp);
