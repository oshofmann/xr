var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Changes:</span>", 
"<span class=\"comment\"> * Arnaldo Carvalho de Melo &lt;acme@conectiva.com.br&gt; 08/23/2000</span>", 
"<span class=\"comment\"> * - get rid of some verify_areas and use __copy*user and __get/put_user</span>", 
"<span class=\"comment\"> *   for the ones that remain</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi\">scsi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_device\">scsi_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_eh\">scsi_eh</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#sg\">sg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_dbg\">scsi_dbg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_logging.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NORMAL_RETRIES\">NORMAL_RETRIES</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IOCTL_NORMAL_TIMEOUT\">IOCTL_NORMAL_TIMEOUT</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(10 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_BUF\">MAX_BUF</a> <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ioctl_probe  --  return host identification</span>", 
"<span class=\"comment\"> * @host:<span class=\"ts\"/>host to identify</span>", 
"<span class=\"comment\"> * @buffer:<span class=\"ts\"/>userspace buffer for identification</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return an identifying string at @buffer, if @buffer is non-NULL, filling</span>", 
"<span class=\"comment\"> * to the length stored at * (int *) @buffer.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ioctl_probe\">ioctl_probe</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#host\">host</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#slen\">slen</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#string\">string</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#len\">len</a>, (unsigned int <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#buffer\">buffer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#string\">string</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#info\">info</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#string\">string</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#string\">string</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slen\">slen</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#string\">string</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#slen\">slen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#slen\">slen</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#string\">string</a>, <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"> * The SCSI_IOCTL_SEND_COMMAND ioctl sends a command out to the SCSI host.</span>", 
"<span class=\"comment\"> * The IOCTL_NORMAL_TIMEOUT and NORMAL_RETRIES  variables are used.  </span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * dev is the SCSI device struct ptr, *(int *) arg is the length of the</span>", 
"<span class=\"comment\"> * input data, if any, not including the command string &amp; counts, </span>", 
"<span class=\"comment\"> * *((int *)arg + 1) is the output buffer size in bytes.</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * *(char *) ((int *) arg)[2] the actual command byte.   </span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * Note that if more than MAX_BUF bytes are requested to be transferred,</span>", 
"<span class=\"comment\"> * the ioctl will fail with error EINVAL.</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * This size *does not* include the initial lengths that were passed.</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * The SCSI command is read from the memory location immediately after the</span>", 
"<span class=\"comment\"> * length words, and the input data is right after the command.  The SCSI</span>", 
"<span class=\"comment\"> * routines know the command size based on the opcode decode.  </span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * The output area is then filled in starting from the command byte. </span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#ioctl_internal_command\">ioctl_internal_command</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, char *<a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#timeout\">timeout</a>, int <a class=\"id\" href=\"#retries\">retries</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> <a class=\"id\" href=\"#sshdr\">sshdr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_IOCTL\">SCSI_LOG_IOCTL</a>(1, <a class=\"id\" href=\"#printk\">printk</a>(\"Trying ioctl with scsi command %d\\n\", *<a class=\"id\" href=\"#cmd\">cmd</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#scsi_execute_req\">scsi_execute_req</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>, <a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#retries\">retries</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_IOCTL\">SCSI_LOG_IOCTL</a>(2, <a class=\"id\" href=\"#printk\">printk</a>(\"Ioctl returned  0x%x\\n\", <a class=\"id\" href=\"#result\">result</a>));", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#driver_byte\">driver_byte</a>(<a class=\"id\" href=\"#result\">result</a>) &amp; <a class=\"id\" href=\"#DRIVER_SENSE\">DRIVER_SENSE</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#scsi_sense_valid\">scsi_sense_valid</a>(&amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#sense_key\">sense_key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ILLEGAL_REQUEST\">ILLEGAL_REQUEST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a>[0] == <a class=\"id\" href=\"#ALLOW_MEDIUM_REMOVAL\">ALLOW_MEDIUM_REMOVAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#lockable\">lockable</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ioctl_internal_command: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"ILLEGAL REQUEST asc=0x%x ascq=0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#asc\">asc</a>, <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#ascq\">ascq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NOT_READY\">NOT_READY</a>:<span class=\"ts\"/><span class=\"comment\">/* This happens if there is no disc in drive */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#removable\">removable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#UNIT_ATTENTION\">UNIT_ATTENTION</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#removable\">removable</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#changed\">changed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* This is no longer considered an error */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>default:<span class=\"ts\"/><span class=\"comment\">/* Fall through for non-removable media */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev_printk\">sdev_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#sdev\">sdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"ioctl_internal_command return code = %x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_print_sense_hdr\">scsi_print_sense_hdr</a>(\"   \", &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_IOCTL\">SCSI_LOG_IOCTL</a>(2, <a class=\"id\" href=\"#printk\">printk</a>(\"IOCTL Releasing command\\n\"));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#scsi_set_medium_removal\">scsi_set_medium_removal</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, char <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[<a class=\"id\" href=\"#MAX_COMMAND_SIZE\">MAX_COMMAND_SIZE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#removable\">removable</a> || !<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#lockable\">lockable</a>)", 
"<span class=\"ts\"/>       return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[0] = <a class=\"id\" href=\"#ALLOW_MEDIUM_REMOVAL\">ALLOW_MEDIUM_REMOVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[1] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[2] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[3] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[4] = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[5] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ioctl_internal_command\">ioctl_internal_command</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IOCTL_NORMAL_TIMEOUT\">IOCTL_NORMAL_TIMEOUT</a>, <a class=\"id\" href=\"#NORMAL_RETRIES\">NORMAL_RETRIES</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#locked\">locked</a> = (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#SCSI_REMOVAL_PREVENT\">SCSI_REMOVAL_PREVENT</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_set_medium_removal\">scsi_set_medium_removal</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The scsi_ioctl_get_pci() function places into arg the value</span>", 
"<span class=\"comment\"> * pci_dev::slot_name (8 characters) for the PCI device (if any).</span>", 
"<span class=\"comment\"> * Returns: 0 on success</span>", 
"<span class=\"comment\"> *          -ENXIO if there isn't a PCI device pointer</span>", 
"<span class=\"comment\"> *                 (could be because the SCSI driver hasn't been</span>", 
"<span class=\"comment\"> *                  updated yet, or because it isn't a SCSI</span>", 
"<span class=\"comment\"> *                  device)</span>", 
"<span class=\"comment\"> *          any copy_to_user() error on failure there</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#scsi_ioctl_get_pci\">scsi_ioctl_get_pci</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#scsi_get_device\">scsi_get_device</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"", 
"        if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* compatibility with old ioctl which only returned</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 20 characters */</span>", 
"        return <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>), (<a class=\"id\" href=\"#size_t\">size_t</a>)20))", 
"<span class=\"ts\"/><span class=\"ts\"/>? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>: 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_ioctl - Dispatch ioctl to scsi device</span>", 
"<span class=\"comment\"> * @sdev: scsi device receiving ioctl</span>", 
"<span class=\"comment\"> * @cmd: which ioctl is it</span>", 
"<span class=\"comment\"> * @arg: data associated with ioctl</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: The scsi_ioctl() function differs from most ioctls in that it</span>", 
"<span class=\"comment\"> * does not take a major/minor number as the dev field.  Rather, it takes</span>", 
"<span class=\"comment\"> * a pointer to a &amp;struct scsi_device.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[<a class=\"id\" href=\"#MAX_COMMAND_SIZE\">MAX_COMMAND_SIZE</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No idea how this happens.... */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we are in the middle of error recovery, don't let anyone</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * else try and use this device.  Also, if error recovery fails, it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may try and take the device offline, in which case all further</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * access to the device is prohibited.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdev\">sdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for deprecated ioctls ... all the ioctls which don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * follow the new unique numbering scheme are deprecated */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_SEND_COMMAND\">SCSI_IOCTL_SEND_COMMAND</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_TEST_UNIT_READY\">SCSI_IOCTL_TEST_UNIT_READY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_BENCHMARK_COMMAND\">SCSI_IOCTL_BENCHMARK_COMMAND</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_SYNC\">SCSI_IOCTL_SYNC</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_START_UNIT\">SCSI_IOCTL_START_UNIT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_STOP_UNIT\">SCSI_IOCTL_STOP_UNIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"program %s is using a deprecated SCSI \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"ioctl, please convert it to SG_IO\\n\", <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_GET_IDLUN\">SCSI_IOCTL_GET_IDLUN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(struct <a class=\"id\" href=\"#scsi_idlun\">scsi_idlun</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>((<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#id\">id</a> &amp; 0xff)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> + ((<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#lun\">lun</a> &amp; 0xff) << 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> + ((<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#channel\">channel</a> &amp; 0xff) << 16)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> + ((<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_no\">host_no</a> &amp; 0xff) << 24),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;((struct <a class=\"id\" href=\"#scsi_idlun\">scsi_idlun</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>)-><a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#unique_id\">unique_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;((struct <a class=\"id\" href=\"#scsi_idlun\">scsi_idlun</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>)-><a class=\"id\" href=\"#host_unique_id\">host_unique_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_GET_BUS_NUMBER\">SCSI_IOCTL_GET_BUS_NUMBER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_no\">host_no</a>, (int <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_PROBE_HOST\">SCSI_IOCTL_PROBE_HOST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ioctl_probe\">ioctl_probe</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_SEND_COMMAND\">SCSI_IOCTL_SEND_COMMAND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>) || !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RAWIO\">CAP_SYS_RAWIO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sg_scsi_ioctl\">sg_scsi_ioctl</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_DOORLOCK\">SCSI_IOCTL_DOORLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_set_medium_removal\">scsi_set_medium_removal</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#SCSI_REMOVAL_PREVENT\">SCSI_REMOVAL_PREVENT</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_DOORUNLOCK\">SCSI_IOCTL_DOORUNLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_set_medium_removal\">scsi_set_medium_removal</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#SCSI_REMOVAL_ALLOW\">SCSI_REMOVAL_ALLOW</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_TEST_UNIT_READY\">SCSI_IOCTL_TEST_UNIT_READY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_test_unit_ready\">scsi_test_unit_ready</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#IOCTL_NORMAL_TIMEOUT\">IOCTL_NORMAL_TIMEOUT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NORMAL_RETRIES\">NORMAL_RETRIES</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_START_UNIT\">SCSI_IOCTL_START_UNIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[0] = <a class=\"id\" href=\"#START_STOP\">START_STOP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[1] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[2] = <a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[3] = <a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[5] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[4] = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ioctl_internal_command\">ioctl_internal_command</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#START_STOP_TIMEOUT\">START_STOP_TIMEOUT</a>, <a class=\"id\" href=\"#NORMAL_RETRIES\">NORMAL_RETRIES</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_STOP_UNIT\">SCSI_IOCTL_STOP_UNIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[0] = <a class=\"id\" href=\"#START_STOP\">START_STOP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[1] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[2] = <a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[3] = <a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[5] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>[4] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ioctl_internal_command\">ioctl_internal_command</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#scsi_cmd\">scsi_cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#START_STOP_TIMEOUT\">START_STOP_TIMEOUT</a>, <a class=\"id\" href=\"#NORMAL_RETRIES\">NORMAL_RETRIES</a>);", 
"        case <a class=\"id\" href=\"#SCSI_IOCTL_GET_PCI\">SCSI_IOCTL_GET_PCI</a>:", 
"                return <a class=\"id\" href=\"#scsi_ioctl_get_pci\">scsi_ioctl_get_pci</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_nonblockable_ioctl() - Handle SG_SCSI_RESET</span>", 
"<span class=\"comment\"> * @sdev: scsi device receiving ioctl</span>", 
"<span class=\"comment\"> * @cmd: Must be SC_SCSI_RESET</span>", 
"<span class=\"comment\"> * @arg: pointer to int containing SG_SCSI_RESET_{DEVICE,BUS,HOST}</span>", 
"<span class=\"comment\"> * @ndelay: file mode O_NDELAY flag</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#scsi_nonblockable_ioctl\">scsi_nonblockable_ioctl</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>, int <a class=\"id\" href=\"#ndelay\">ndelay</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The first set of iocts may be executed even if we're doing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * error processing, as long as the device was opened</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * non-blocking */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ndelay\">ndelay</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_host_in_recovery\">scsi_host_in_recovery</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdev\">sdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET\">SG_SCSI_RESET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, (int <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> == <a class=\"id\" href=\"#SG_SCSI_RESET_NOTHING\">SG_SCSI_RESET_NOTHING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET_DEVICE\">SG_SCSI_RESET_DEVICE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#SCSI_TRY_RESET_DEVICE\">SCSI_TRY_RESET_DEVICE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET_TARGET\">SG_SCSI_RESET_TARGET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#SCSI_TRY_RESET_TARGET\">SCSI_TRY_RESET_TARGET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET_BUS\">SG_SCSI_RESET_BUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#SCSI_TRY_RESET_BUS\">SCSI_TRY_RESET_BUS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET_HOST\">SG_SCSI_RESET_HOST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#SCSI_TRY_RESET_HOST\">SCSI_TRY_RESET_HOST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>) || !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RAWIO\">CAP_SYS_RAWIO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#scsi_reset_provider\">scsi_reset_provider</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#val\">val</a>) ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SUCCESS\">SUCCESS</a>) ? 0 : -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_nonblockable_ioctl\">scsi_nonblockable_ioctl</a>);", 
];
xr_frag_insert('l/a4/9dd5bea32c73afc4996aa8811fd5c00cf406d5.xr', __xr_tmp);
