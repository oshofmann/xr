var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * drivers/net/phy/mdio_bus.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * MDIO Bus interface</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Andy Fleming</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2004 Freescale Semiconductor, Inc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute  it and/or modify it</span>", 
"<span class=\"comment\"> * under  the terms of  the GNU General  Public License as published by the</span>", 
"<span class=\"comment\"> * Free Software Foundation;  either version 2 of the  License, or (at your</span>", 
"<span class=\"comment\"> * option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#unistd\">unistd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#etherdevice\">etherdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mii\">mii</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ethtool\">ethtool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#phy\">phy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mdiobus_alloc - allocate a mii_bus structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: called by a bus driver to allocate an mii_bus</span>", 
"<span class=\"comment\"> * structure to fill in.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#mdiobus_alloc\">mdiobus_alloc</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#bus\">bus</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#MDIOBUS_ALLOCATED\">MDIOBUS_ALLOCATED</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bus\">bus</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mdiobus_alloc\">mdiobus_alloc</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mdiobus_release - mii_bus device release callback</span>", 
"<span class=\"comment\"> * @d: the target struct device that contains the mii_bus</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: called when the last reference to an mii_bus is</span>", 
"<span class=\"comment\"> * dropped, to free the underlying memory.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#mdiobus_release\">mdiobus_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#to_mii_bus\">to_mii_bus</a>(<a class=\"id\" href=\"#d\">d</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#MDIOBUS_RELEASED\">MDIOBUS_RELEASED</a> &&", 
"<span class=\"ts\"/>       <span class=\"comment\">/* for compatibility with error handling in drivers */</span>", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#MDIOBUS_ALLOCATED\">MDIOBUS_ALLOCATED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#class\">class</a> <a class=\"id\" href=\"#mdio_bus_class\">mdio_bus_class</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"mdio_bus\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_release\">dev_release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#mdiobus_release\">mdiobus_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mdiobus_register - bring up all the PHYs on a given bus and attach them to bus</span>", 
"<span class=\"comment\"> * @bus: target mii_bus</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Called by a bus driver to bring up all the PHYs</span>", 
"<span class=\"comment\"> *   on a given bus, and attach them to the bus.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success or &lt; 0 on error.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#mdiobus_register\">mdiobus_register</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#NULL\">NULL</a> == <a class=\"id\" href=\"#bus\">bus</a> || <a class=\"id\" href=\"#NULL\">NULL</a> == <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a> == <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#read\">read</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a> == <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#write\">write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#MDIOBUS_ALLOCATED\">MDIOBUS_ALLOCATED</a> &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#MDIOBUS_UNREGISTERED\">MDIOBUS_UNREGISTERED</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#class\">class</a> = &amp;<a class=\"id\" href=\"#mdio_bus_class\">mdio_bus_class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#groups\">groups</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%s\", <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#device_register\">device_register</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"mii_bus %s failed to register\\n\", <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#mdio_lock\">mdio_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#reset\">reset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#reset\">reset</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PHY_MAX_ADDR\">PHY_MAX_ADDR</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#phy_mask\">phy_mask</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a> = <a class=\"id\" href=\"#mdiobus_scan\">mdiobus_scan</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#phydev\">phydev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#MDIOBUS_REGISTERED\">MDIOBUS_REGISTERED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"%s: probed\\n\", <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#phy_map\">phy_map</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#phy_map\">phy_map</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mdiobus_register\">mdiobus_register</a>);", 
"", 
"void <a class=\"id\" href=\"#mdiobus_unregister\">mdiobus_unregister</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#MDIOBUS_REGISTERED\">MDIOBUS_REGISTERED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#MDIOBUS_UNREGISTERED\">MDIOBUS_UNREGISTERED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PHY_MAX_ADDR\">PHY_MAX_ADDR</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#phy_map\">phy_map</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#phy_map\">phy_map</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#phy_map\">phy_map</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mdiobus_unregister\">mdiobus_unregister</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mdiobus_free - free a struct mii_bus</span>", 
"<span class=\"comment\"> * @bus: mii_bus to free</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function releases the reference to the underlying device</span>", 
"<span class=\"comment\"> * object in the mii_bus.  If this is the last reference, the mii_bus</span>", 
"<span class=\"comment\"> * will be freed.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#mdiobus_free\">mdiobus_free</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For compatibility with error handling in drivers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#MDIOBUS_ALLOCATED\">MDIOBUS_ALLOCATED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#MDIOBUS_UNREGISTERED\">MDIOBUS_UNREGISTERED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#MDIOBUS_RELEASED\">MDIOBUS_RELEASED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mdiobus_free\">mdiobus_free</a>);", 
"", 
"struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#mdiobus_scan\">mdiobus_scan</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a> = <a class=\"id\" href=\"#get_phy_device\">get_phy_device</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#phydev\">phydev</a>) || <a class=\"id\" href=\"#phydev\">phydev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#phydev\">phydev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#phy_device_register\">phy_device_register</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phy_device_free\">phy_device_free</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#phydev\">phydev</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mdiobus_scan\">mdiobus_scan</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mdiobus_read - Convenience function for reading a given MII mgmt register</span>", 
"<span class=\"comment\"> * @bus: the mii_bus struct</span>", 
"<span class=\"comment\"> * @addr: the phy address</span>", 
"<span class=\"comment\"> * @regnum: register number to read</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: MUST NOT be called from interrupt context,</span>", 
"<span class=\"comment\"> * because the bus read/write functions may wait for an interrupt</span>", 
"<span class=\"comment\"> * to conclude the operation.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#mdiobus_read\">mdiobus_read</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#regnum\">regnum</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#mdio_lock\">mdio_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#regnum\">regnum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#mdio_lock\">mdio_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mdiobus_read\">mdiobus_read</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mdiobus_write - Convenience function for writing a given MII mgmt register</span>", 
"<span class=\"comment\"> * @bus: the mii_bus struct</span>", 
"<span class=\"comment\"> * @addr: the phy address</span>", 
"<span class=\"comment\"> * @regnum: register number to write</span>", 
"<span class=\"comment\"> * @val: value to write to @regnum</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: MUST NOT be called from interrupt context,</span>", 
"<span class=\"comment\"> * because the bus read/write functions may wait for an interrupt</span>", 
"<span class=\"comment\"> * to conclude the operation.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#mdiobus_write\">mdiobus_write</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#regnum\">regnum</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#mdio_lock\">mdio_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#regnum\">regnum</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#mdio_lock\">mdio_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mdiobus_write\">mdiobus_write</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mdio_bus_match - determine if given PHY driver supports the given PHY device</span>", 
"<span class=\"comment\"> * @dev: target PHY device</span>", 
"<span class=\"comment\"> * @drv: given PHY driver</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Given a PHY device, and a PHY driver, return 1 if</span>", 
"<span class=\"comment\"> *   the driver supports the device.  Otherwise, return 0.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#mdio_bus_match\">mdio_bus_match</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a> = <a class=\"id\" href=\"#to_phy_device\">to_phy_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_driver\">phy_driver</a> *<a class=\"id\" href=\"#phydrv\">phydrv</a> = <a class=\"id\" href=\"#to_phy_driver\">to_phy_driver</a>(<a class=\"id\" href=\"#drv\">drv</a>);", 
"", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#phydrv\">phydrv</a>-><a class=\"id\" href=\"#phy_id\">phy_id</a> &amp; <a class=\"id\" href=\"#phydrv\">phydrv</a>-><a class=\"id\" href=\"#phy_id_mask\">phy_id_mask</a>) ==", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#phy_id\">phy_id</a> &amp; <a class=\"id\" href=\"#phydrv\">phydrv</a>-><a class=\"id\" href=\"#phy_id_mask\">phy_id_mask</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#mdio_bus_phy_may_suspend\">mdio_bus_phy_may_suspend</a>(struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_driver\">phy_driver</a> *<a class=\"id\" href=\"#phydrv\">phydrv</a> = <a class=\"id\" href=\"#to_phy_driver\">to_phy_driver</a>(<a class=\"id\" href=\"#drv\">drv</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#netdev\">netdev</a> = <a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#attached_dev\">attached_dev</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#drv\">drv</a> || !<a class=\"id\" href=\"#phydrv\">phydrv</a>-><a class=\"id\" href=\"#suspend\">suspend</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PHY not attached? May suspend. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netdev\">netdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't suspend PHY if the attched netdev parent may wakeup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The parent may point to a PCI device, as in tg3 driver.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#netdev\">netdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#device_may_wakeup\">device_may_wakeup</a>(<a class=\"id\" href=\"#netdev\">netdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Also don't suspend PHY if the netdev itself may wakeup. This</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is the case for devices w/o underlaying pwr. mgmt. aware bus,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * e.g. SoC devices.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#device_may_wakeup\">device_may_wakeup</a>(&amp;<a class=\"id\" href=\"#netdev\">netdev</a>-><a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mdio_bus_suspend\">mdio_bus_suspend</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_driver\">phy_driver</a> *<a class=\"id\" href=\"#phydrv\">phydrv</a> = <a class=\"id\" href=\"#to_phy_driver\">to_phy_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a> = <a class=\"id\" href=\"#to_phy_device\">to_phy_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We must stop the state machine manually, otherwise it stops out of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * control, possibly with the phydev-&gt;lock held. Upon resume, netdev</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may call phy routines that try to grab the same lock, and that may</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * lead to a deadlock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#attached_dev\">attached_dev</a> && <a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#adjust_link\">adjust_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phy_stop_machine\">phy_stop_machine</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mdio_bus_phy_may_suspend\">mdio_bus_phy_may_suspend</a>(<a class=\"id\" href=\"#phydev\">phydev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#phydrv\">phydrv</a>-><a class=\"id\" href=\"#suspend\">suspend</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mdio_bus_resume\">mdio_bus_resume</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_driver\">phy_driver</a> *<a class=\"id\" href=\"#phydrv\">phydrv</a> = <a class=\"id\" href=\"#to_phy_driver\">to_phy_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a> = <a class=\"id\" href=\"#to_phy_device\">to_phy_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mdio_bus_phy_may_suspend\">mdio_bus_phy_may_suspend</a>(<a class=\"id\" href=\"#phydev\">phydev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_resume\">no_resume</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#phydrv\">phydrv</a>-><a class=\"id\" href=\"#resume\">resume</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#no_resume\">no_resume</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#attached_dev\">attached_dev</a> && <a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#adjust_link\">adjust_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phy_start_machine\">phy_start_machine</a>(<a class=\"id\" href=\"#phydev\">phydev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mdio_bus_restore\">mdio_bus_restore</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a> = <a class=\"id\" href=\"#to_phy_device\">to_phy_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#netdev\">netdev</a> = <a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#attached_dev\">attached_dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netdev\">netdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#phy_init_hw\">phy_init_hw</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The PHY needs to renegotiate. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#link\">link</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#PHY_UP\">PHY_UP</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phy_start_machine\">phy_start_machine</a>(<a class=\"id\" href=\"#phydev\">phydev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> <a class=\"id\" href=\"#mdio_bus_pm_ops\">mdio_bus_pm_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a> = <a class=\"id\" href=\"#mdio_bus_suspend\">mdio_bus_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a> = <a class=\"id\" href=\"#mdio_bus_resume\">mdio_bus_resume</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freeze\">freeze</a> = <a class=\"id\" href=\"#mdio_bus_suspend\">mdio_bus_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#thaw\">thaw</a> = <a class=\"id\" href=\"#mdio_bus_resume\">mdio_bus_resume</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#restore\">restore</a> = <a class=\"id\" href=\"#mdio_bus_restore\">mdio_bus_restore</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MDIO_BUS_PM_OPS\">MDIO_BUS_PM_OPS</a> (&amp;<a class=\"id\" href=\"#mdio_bus_pm_ops\">mdio_bus_pm_ops</a>)", 
"", 
"#else", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MDIO_BUS_PM_OPS\">MDIO_BUS_PM_OPS</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PM */</span>", 
"", 
"struct <a class=\"id\" href=\"#bus_type\">bus_type</a> <a class=\"id\" href=\"#mdio_bus_type\">mdio_bus_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"mdio_bus\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#match\">match</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mdio_bus_match\">mdio_bus_match</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pm\">pm</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#MDIO_BUS_PM_OPS\">MDIO_BUS_PM_OPS</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mdio_bus_type\">mdio_bus_type</a>);", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mdio_bus_init\">mdio_bus_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#class_register\">class_register</a>(&amp;<a class=\"id\" href=\"#mdio_bus_class\">mdio_bus_class</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bus_register\">bus_register</a>(&amp;<a class=\"id\" href=\"#mdio_bus_type\">mdio_bus_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class_unregister\">class_unregister</a>(&amp;<a class=\"id\" href=\"#mdio_bus_class\">mdio_bus_class</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#mdio_bus_exit\">mdio_bus_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_unregister\">class_unregister</a>(&amp;<a class=\"id\" href=\"#mdio_bus_class\">mdio_bus_class</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_unregister\">bus_unregister</a>(&amp;<a class=\"id\" href=\"#mdio_bus_type\">mdio_bus_type</a>);", 
"}", 
];
xr_frag_insert('l/a4/9e7239187f4d5bef29899950aa8397be5a4507.xr', __xr_tmp);
