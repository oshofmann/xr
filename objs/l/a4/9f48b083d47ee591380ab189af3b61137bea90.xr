var __xr_tmp = [
"<span class=\"comment\">/*  Kernel module help for x86.</span>", 
"<span class=\"comment\">    Copyright (C) 2001 Rusty Russell.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\">    it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\">    the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\">    (at your option) any later version.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\">    GNU General Public License for more details.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\">    along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\">    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\">*/</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#moduleloader\">moduleloader</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#elf\">elf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bug\">bug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#if 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEBUGP\">DEBUGP</a> <a class=\"id\" href=\"#printk\">printk</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEBUGP\">DEBUGP</a>(<a class=\"id\" href=\"#fmt\">fmt</a>...)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void *<a class=\"id\" href=\"#module_alloc\">module_alloc</a>(unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_struct\">vm_struct</a> *<a class=\"id\" href=\"#area\">area</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#MODULES_LEN\">MODULES_LEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#area\">area</a> = <a class=\"id\" href=\"#__get_vm_area\">__get_vm_area</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#VM_ALLOC\">VM_ALLOC</a>, <a class=\"id\" href=\"#MODULES_VADDR\">MODULES_VADDR</a>, <a class=\"id\" href=\"#MODULES_END\">MODULES_END</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#area\">area</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__vmalloc_area\">__vmalloc_area</a>(<a class=\"id\" href=\"#area\">area</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_HIGHMEM\">__GFP_HIGHMEM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PAGE_KERNEL_EXEC\">PAGE_KERNEL_EXEC</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Free memory returned from module_alloc */</span>", 
"void <a class=\"id\" href=\"#module_free\">module_free</a>(struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>, void *<a class=\"id\" href=\"#module_region\">module_region</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#module_region\">module_region</a>);", 
"}", 
"", 
"<span class=\"comment\">/* We don't need anything special. */</span>", 
"int <a class=\"id\" href=\"#module_frob_arch_sections\">module_frob_arch_sections</a>(<a class=\"id\" href=\"#Elf_Ehdr\">Elf_Ehdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#Elf_Shdr\">Elf_Shdr</a> *<a class=\"id\" href=\"#sechdrs\">sechdrs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      char *<a class=\"id\" href=\"#secstrings\">secstrings</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"int <a class=\"id\" href=\"#apply_relocate\">apply_relocate</a>(<a class=\"id\" href=\"#Elf32_Shdr\">Elf32_Shdr</a> *<a class=\"id\" href=\"#sechdrs\">sechdrs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#strtab\">strtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#symindex\">symindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#relsec\">relsec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#me\">me</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Elf32_Rel\">Elf32_Rel</a> *<a class=\"id\" href=\"#rel\">rel</a> = (void *)<a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#relsec\">relsec</a>].<a class=\"id\" href=\"#sh_addr\">sh_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Elf32_Sym\">Elf32_Sym</a> *<a class=\"id\" href=\"#sym\">sym</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> *<a class=\"id\" href=\"#location\">location</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEBUGP\">DEBUGP</a>(\"Applying relocate section %u to %u\\n\", <a class=\"id\" href=\"#relsec\">relsec</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#relsec\">relsec</a>].<a class=\"id\" href=\"#sh_info\">sh_info</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#relsec\">relsec</a>].<a class=\"id\" href=\"#sh_size\">sh_size</a> / sizeof(*<a class=\"id\" href=\"#rel\">rel</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is where to make the change */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#location\">location</a> = (void *)<a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#relsec\">relsec</a>].<a class=\"id\" href=\"#sh_info\">sh_info</a>].<a class=\"id\" href=\"#sh_addr\">sh_addr</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_offset\">r_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is the symbol it is referring to.  Note that all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   undefined symbols have been resolved.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sym\">sym</a> = (<a class=\"id\" href=\"#Elf32_Sym\">Elf32_Sym</a> *)<a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#symindex\">symindex</a>].<a class=\"id\" href=\"#sh_addr\">sh_addr</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#ELF32_R_SYM\">ELF32_R_SYM</a>(<a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_info\">r_info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#ELF32_R_TYPE\">ELF32_R_TYPE</a>(<a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_info\">r_info</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#R_386_32\">R_386_32</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We add the value into the location given */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#location\">location</a> += <a class=\"id\" href=\"#sym\">sym</a>-><a class=\"id\" href=\"#st_value\">st_value</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#R_386_PC32\">R_386_PC32</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Add the value, subtract its postition */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#location\">location</a> += <a class=\"id\" href=\"#sym\">sym</a>-><a class=\"id\" href=\"#st_value\">st_value</a> - (<a class=\"id\" href=\"#uint32_t\">uint32_t</a>)<a class=\"id\" href=\"#location\">location</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"module %s: Unknown relocation: %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#me\">me</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#ELF32_R_TYPE\">ELF32_R_TYPE</a>(<a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_info\">r_info</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOEXEC\">ENOEXEC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#apply_relocate_add\">apply_relocate_add</a>(<a class=\"id\" href=\"#Elf32_Shdr\">Elf32_Shdr</a> *<a class=\"id\" href=\"#sechdrs\">sechdrs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#strtab\">strtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#symindex\">symindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#relsec\">relsec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#me\">me</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"module %s: ADD RELOCATION unsupported\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#me\">me</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOEXEC\">ENOEXEC</a>;", 
"}", 
"#else <span class=\"comment\">/*X86_64*/</span>", 
"int <a class=\"id\" href=\"#apply_relocate_add\">apply_relocate_add</a>(<a class=\"id\" href=\"#Elf64_Shdr\">Elf64_Shdr</a> *<a class=\"id\" href=\"#sechdrs\">sechdrs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#strtab\">strtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#symindex\">symindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#relsec\">relsec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#me\">me</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Elf64_Rela\">Elf64_Rela</a> *<a class=\"id\" href=\"#rel\">rel</a> = (void *)<a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#relsec\">relsec</a>].<a class=\"id\" href=\"#sh_addr\">sh_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Elf64_Sym\">Elf64_Sym</a> *<a class=\"id\" href=\"#sym\">sym</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#loc\">loc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEBUGP\">DEBUGP</a>(\"Applying relocate section %u to %u\\n\", <a class=\"id\" href=\"#relsec\">relsec</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#relsec\">relsec</a>].<a class=\"id\" href=\"#sh_info\">sh_info</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#relsec\">relsec</a>].<a class=\"id\" href=\"#sh_size\">sh_size</a> / sizeof(*<a class=\"id\" href=\"#rel\">rel</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is where to make the change */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loc\">loc</a> = (void *)<a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#relsec\">relsec</a>].<a class=\"id\" href=\"#sh_info\">sh_info</a>].<a class=\"id\" href=\"#sh_addr\">sh_addr</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_offset\">r_offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is the symbol it is referring to.  Note that all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   undefined symbols have been resolved.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sym\">sym</a> = (<a class=\"id\" href=\"#Elf64_Sym\">Elf64_Sym</a> *)<a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#symindex\">symindex</a>].<a class=\"id\" href=\"#sh_addr\">sh_addr</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#ELF64_R_SYM\">ELF64_R_SYM</a>(<a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_info\">r_info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEBUGP\">DEBUGP</a>(\"type %d st_value %Lx r_addend %Lx loc %Lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(int)<a class=\"id\" href=\"#ELF64_R_TYPE\">ELF64_R_TYPE</a>(<a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_info\">r_info</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sym\">sym</a>-><a class=\"id\" href=\"#st_value\">st_value</a>, <a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_addend\">r_addend</a>, (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#loc\">loc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sym\">sym</a>-><a class=\"id\" href=\"#st_value\">st_value</a> + <a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_addend\">r_addend</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#ELF64_R_TYPE\">ELF64_R_TYPE</a>(<a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_info\">r_info</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#R_X86_64_NONE\">R_X86_64_NONE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#R_X86_64_64\">R_X86_64_64</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#u64\">u64</a> *)<a class=\"id\" href=\"#loc\">loc</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#R_X86_64_32\">R_X86_64_32</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#loc\">loc</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> != *(<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#loc\">loc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#overflow\">overflow</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#R_X86_64_32S\">R_X86_64_32S</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#s32\">s32</a> *)<a class=\"id\" href=\"#loc\">loc</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#s64\">s64</a>)<a class=\"id\" href=\"#val\">val</a> != *(<a class=\"id\" href=\"#s32\">s32</a> *)<a class=\"id\" href=\"#loc\">loc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#overflow\">overflow</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#R_X86_64_PC32\">R_X86_64_PC32</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> -= (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#loc\">loc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#loc\">loc</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"#if 0", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#s64\">s64</a>)<a class=\"id\" href=\"#val\">val</a> != *(<a class=\"id\" href=\"#s32\">s32</a> *)<a class=\"id\" href=\"#loc\">loc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#overflow\">overflow</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"module %s: Unknown rela relocation: %llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#me\">me</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#ELF64_R_TYPE\">ELF64_R_TYPE</a>(<a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_info\">r_info</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOEXEC\">ENOEXEC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#overflow\">overflow</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"overflow in relocation type %d val %Lx\\n\",", 
"<span class=\"ts\"/>       (int)<a class=\"id\" href=\"#ELF64_R_TYPE\">ELF64_R_TYPE</a>(<a class=\"id\" href=\"#rel\">rel</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#r_info\">r_info</a>), <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"`%s' likely not compiled with -mcmodel=kernel\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#me\">me</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOEXEC\">ENOEXEC</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#apply_relocate\">apply_relocate</a>(<a class=\"id\" href=\"#Elf_Shdr\">Elf_Shdr</a> *<a class=\"id\" href=\"#sechdrs\">sechdrs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#strtab\">strtab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#symindex\">symindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#relsec\">relsec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#me\">me</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"non add relocation not supported\\n\");", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#module_finalize\">module_finalize</a>(const <a class=\"id\" href=\"#Elf_Ehdr\">Elf_Ehdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    const <a class=\"id\" href=\"#Elf_Shdr\">Elf_Shdr</a> *<a class=\"id\" href=\"#sechdrs\">sechdrs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#me\">me</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#Elf_Shdr\">Elf_Shdr</a> *<a class=\"id\" href=\"#s\">s</a>, *<a class=\"id\" href=\"#text\">text</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#alt\">alt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#locks\">locks</a> = <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#para\">para</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#secstrings\">secstrings</a> = (void *)<a class=\"id\" href=\"#hdr\">hdr</a> + <a class=\"id\" href=\"#sechdrs\">sechdrs</a>[<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#e_shstrndx\">e_shstrndx</a>].<a class=\"id\" href=\"#sh_offset\">sh_offset</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#sechdrs\">sechdrs</a>; <a class=\"id\" href=\"#s\">s</a> &lt; <a class=\"id\" href=\"#sechdrs\">sechdrs</a> + <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#e_shnum\">e_shnum</a>; <a class=\"id\" href=\"#s\">s</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\".text\", <a class=\"id\" href=\"#secstrings\">secstrings</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sh_name\">sh_name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#text\">text</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\".altinstructions\", <a class=\"id\" href=\"#secstrings\">secstrings</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sh_name\">sh_name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alt\">alt</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\".smp_locks\", <a class=\"id\" href=\"#secstrings\">secstrings</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sh_name\">sh_name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#locks\">locks</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\".parainstructions\", <a class=\"id\" href=\"#secstrings\">secstrings</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sh_name\">sh_name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#para\">para</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alt\">alt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* patch .altinstructions */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#aseg\">aseg</a> = (void *)<a class=\"id\" href=\"#alt\">alt</a>-><a class=\"id\" href=\"#sh_addr\">sh_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apply_alternatives\">apply_alternatives</a>(<a class=\"id\" href=\"#aseg\">aseg</a>, <a class=\"id\" href=\"#aseg\">aseg</a> + <a class=\"id\" href=\"#alt\">alt</a>-><a class=\"id\" href=\"#sh_size\">sh_size</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#locks\">locks</a> && <a class=\"id\" href=\"#text\">text</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#lseg\">lseg</a> = (void *)<a class=\"id\" href=\"#locks\">locks</a>-><a class=\"id\" href=\"#sh_addr\">sh_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#tseg\">tseg</a> = (void *)<a class=\"id\" href=\"#text\">text</a>-><a class=\"id\" href=\"#sh_addr\">sh_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alternatives_smp_module_add\">alternatives_smp_module_add</a>(<a class=\"id\" href=\"#me\">me</a>, <a class=\"id\" href=\"#me\">me</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#lseg\">lseg</a>, <a class=\"id\" href=\"#lseg\">lseg</a> + <a class=\"id\" href=\"#locks\">locks</a>-><a class=\"id\" href=\"#sh_size\">sh_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tseg\">tseg</a>, <a class=\"id\" href=\"#tseg\">tseg</a> + <a class=\"id\" href=\"#text\">text</a>-><a class=\"id\" href=\"#sh_size\">sh_size</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#para\">para</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#pseg\">pseg</a> = (void *)<a class=\"id\" href=\"#para\">para</a>-><a class=\"id\" href=\"#sh_addr\">sh_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apply_paravirt\">apply_paravirt</a>(<a class=\"id\" href=\"#pseg\">pseg</a>, <a class=\"id\" href=\"#pseg\">pseg</a> + <a class=\"id\" href=\"#para\">para</a>-><a class=\"id\" href=\"#sh_size\">sh_size</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#module_arch_cleanup\">module_arch_cleanup</a>(struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alternatives_smp_module_del\">alternatives_smp_module_del</a>(<a class=\"id\" href=\"#mod\">mod</a>);", 
"}", 
];
xr_frag_insert('l/a4/9f48b083d47ee591380ab189af3b61137bea90.xr', __xr_tmp);
