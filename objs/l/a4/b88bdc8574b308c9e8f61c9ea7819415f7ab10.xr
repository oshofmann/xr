var __xr_tmp = [
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#visual\">visual</a> == <a class=\"id\" href=\"#FB_VISUAL_MONO01\">FB_VISUAL_MONO01</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#visual\">visual</a> == <a class=\"id\" href=\"#FB_VISUAL_MONO10\">FB_VISUAL_MONO10</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fg\">fg</a> = ~((<a class=\"id\" href=\"#u8\">u8</a>) (0xfff << <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#green\">green</a>.<a class=\"id\" href=\"#length\">length</a>));", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#depth\">depth</a>) {", 
"<span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#logo\">logo</a>-><a class=\"id\" href=\"#height\">height</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#logo\">logo</a>-><a class=\"id\" href=\"#width\">width</a>; <a class=\"id\" href=\"#src\">src</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a>++ = *<a class=\"id\" href=\"#src\">src</a> >> 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#logo\">logo</a>-><a class=\"id\" href=\"#width\">width</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a>++ = *<a class=\"id\" href=\"#src\">src</a> &amp; 0x0f;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#logo\">logo</a>-><a class=\"id\" href=\"#height\">height</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#logo\">logo</a>-><a class=\"id\" href=\"#width\">width</a>; <a class=\"id\" href=\"#src\">src</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = *<a class=\"id\" href=\"#src\">src</a> ^ <a class=\"id\" href=\"#xor\">xor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 7; <a class=\"id\" href=\"#k\">k</a> >= 0; <a class=\"id\" href=\"#k\">k</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dst\">dst</a>++ = ((<a class=\"id\" href=\"#d\">d</a> >> <a class=\"id\" href=\"#k\">k</a>) &amp; 1) ? <a class=\"id\" href=\"#fg\">fg</a> : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Three (3) kinds of logo maps exist.  linux_logo_clut224 (&gt;16 colors),</span>", 
"<span class=\"comment\"> * linux_logo_vga16 (16 colors) and linux_logo_mono (2 colors).  Depending on</span>", 
"<span class=\"comment\"> * the visual format and color depth of the framebuffer, the DAC, the</span>", 
"<span class=\"comment\"> * pseudo_palette, and the logo data will be adjusted accordingly.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Case 1 - linux_logo_clut224:</span>", 
"<span class=\"comment\"> * Color exceeds the number of console colors (16), thus we set the hardware DAC</span>", 
"<span class=\"comment\"> * using fb_set_cmap() appropriately.  The \"needs_cmapreset\"  flag will be set.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For visuals that require color info from the pseudo_palette, we also construct</span>", 
"<span class=\"comment\"> * one for temporary use. The \"needs_directpalette\" or \"needs_truepalette\" flags</span>", 
"<span class=\"comment\"> * will be set.</span>", 
];
xr_frag_insert('l/a4/b88bdc8574b308c9e8f61c9ea7819415f7ab10.xr', __xr_tmp);
