var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__NET_RTNETLINK_H\">__NET_RTNETLINK_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__NET_RTNETLINK_H\">__NET_RTNETLINK_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"typedef int (*<a class=\"id\" href=\"#rtnl_doit_func\">rtnl_doit_func</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *, void *);", 
"typedef int (*<a class=\"id\" href=\"#rtnl_dumpit_func\">rtnl_dumpit_func</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *);", 
"", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#__rtnl_register\">__rtnl_register</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#msgtype\">msgtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_doit_func\">rtnl_doit_func</a>, <a class=\"id\" href=\"#rtnl_dumpit_func\">rtnl_dumpit_func</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_register\">rtnl_register</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#msgtype\">msgtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#rtnl_doit_func\">rtnl_doit_func</a>, <a class=\"id\" href=\"#rtnl_dumpit_func\">rtnl_dumpit_func</a>);", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unregister\">rtnl_unregister</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#msgtype\">msgtype</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unregister_all\">rtnl_unregister_all</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rtnl_msg_family\">rtnl_msg_family</a>(const struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a>(<a class=\"id\" href=\"#nlh\">nlh</a>) >= sizeof(struct <a class=\"id\" href=\"#rtgenmsg\">rtgenmsg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return ((struct <a class=\"id\" href=\"#rtgenmsg\">rtgenmsg</a> *) <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>))-><a class=\"id\" href=\"#rtgen_family\">rtgen_family</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>struct rtnl_link_ops - rtnetlink link operations</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@list: Used internally</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@kind: Identifier</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@maxtype: Highest device specific netlink attribute number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@policy: Netlink policy for device specific attribute validation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@validate: Optional validation function for netlink/changelink parameters</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@priv_size: sizeof net_device private space</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@setup: net_device setup function</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@newlink: Function for configuring and registering a new device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@changelink: Function for changing parameters of an existing device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dellink: Function to remove a device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@get_size: Function to calculate required room for dumping device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>   specific netlink attributes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fill_info: Function to dump device specific netlink attributes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@get_xstats_size: Function to calculate required room for dumping devic</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  specific statistics</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fill_xstats: Function to dump device specific statistics</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#kind\">kind</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#priv_size\">priv_size</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#setup\">setup</a>)(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maxtype\">maxtype</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a><span class=\"ts\"/>*<a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#validate\">validate</a>)(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#data\">data</a>[]);", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#newlink\">newlink</a>)(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#src_net\">src_net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#data\">data</a>[]);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#changelink\">changelink</a>)(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#data\">data</a>[]);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#dellink\">dellink</a>)(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#get_size\">get_size</a>)(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#fill_info\">fill_info</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#get_xstats_size\">get_xstats_size</a>)(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#fill_xstats\">fill_xstats</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#get_tx_queues\">get_tx_queues</a>)(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int *<a class=\"id\" href=\"#tx_queues\">tx_queues</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int *<a class=\"id\" href=\"#real_tx_queues\">real_tx_queues</a>);", 
"};", 
"", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#__rtnl_link_register\">__rtnl_link_register</a>(struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#__rtnl_link_unregister\">__rtnl_link_unregister</a>(struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_kill_links\">rtnl_kill_links</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_link_register\">rtnl_link_register</a>(struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_link_unregister\">rtnl_link_unregister</a>(struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#rtnl_link_get_net\">rtnl_link_get_net</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#src_net\">src_net</a>, struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[]);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#rtnl_create_link\">rtnl_create_link</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#src_net\">src_net</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#ifname\">ifname</a>, const struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>, struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[]);", 
"extern int <a class=\"id\" href=\"#rtnl_configure_link\">rtnl_configure_link</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#ifinfomsg\">ifinfomsg</a> *<a class=\"id\" href=\"#ifm\">ifm</a>);", 
"extern const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> <a class=\"id\" href=\"#ifla_policy\">ifla_policy</a>[<a class=\"id\" href=\"#IFLA_MAX\">IFLA_MAX</a>+1];", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MODULE_ALIAS_RTNL_LINK\">MODULE_ALIAS_RTNL_LINK</a>(<a class=\"id\" href=\"#kind\">kind</a>) <a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"rtnl-link-\" <a class=\"id\" href=\"#kind\">kind</a>)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/a4/d8d6f066480ddb022355ab6a32525653b958d4.xr', __xr_tmp);
