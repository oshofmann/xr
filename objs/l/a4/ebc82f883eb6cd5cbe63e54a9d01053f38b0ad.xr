var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#suspend\">suspend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#suspend_ioctls\">suspend_ioctls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#utsname\">utsname</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#freezer\">freezer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#swsusp_info\">swsusp_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#new_utsname\">new_utsname</a><span class=\"ts\"/><a class=\"id\" href=\"#uts\">uts</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#version_code\">version_code</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_physpages\">num_physpages</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpus\">cpus</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#image_pages\">image_pages</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)));", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIBERNATION\">CONFIG_HIBERNATION</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ARCH_HIBERNATION_HEADER\">CONFIG_ARCH_HIBERNATION_HEADER</a>", 
"<span class=\"comment\">/* Maximum size of architecture specific data in a hibernation header */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ARCH_HEADER_SIZE\">MAX_ARCH_HEADER_SIZE</a><span class=\"ts\"/>(sizeof(struct <a class=\"id\" href=\"#new_utsname\">new_utsname</a>) + 4)", 
"", 
"extern int <a class=\"id\" href=\"#arch_hibernation_header_save\">arch_hibernation_header_save</a>(void *<a class=\"id\" href=\"#addr\">addr</a>, unsigned int <a class=\"id\" href=\"#max_size\">max_size</a>);", 
"extern int <a class=\"id\" href=\"#arch_hibernation_header_restore\">arch_hibernation_header_restore</a>(void *<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#init_header_complete\">init_header_complete</a>(struct <a class=\"id\" href=\"#swsusp_info\">swsusp_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#arch_hibernation_header_save\">arch_hibernation_header_save</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#MAX_ARCH_HEADER_SIZE\">MAX_ARCH_HEADER_SIZE</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> char *<a class=\"id\" href=\"#check_image_kernel\">check_image_kernel</a>(struct <a class=\"id\" href=\"#swsusp_info\">swsusp_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#arch_hibernation_header_restore\">arch_hibernation_header_restore</a>(<a class=\"id\" href=\"#info\">info</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"architecture specific data\" : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_ARCH_HIBERNATION_HEADER */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Keep some memory free so that I/O operations can succeed without paging</span>", 
"<span class=\"comment\"> * [Might this be more than 4 MB?]</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PAGES_FOR_IO\">PAGES_FOR_IO</a><span class=\"ts\"/>((4096 * 1024) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Keep 1 MB of memory free so that device drivers can allocate some pages in</span>", 
"<span class=\"comment\"> * their .suspend() routines without breaking the suspend to disk.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SPARE_PAGES\">SPARE_PAGES</a><span class=\"ts\"/>((1024 * 1024) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"", 
"<span class=\"comment\">/* kernel/power/hibernate.c */</span>", 
"extern int <a class=\"id\" href=\"#hibernation_snapshot\">hibernation_snapshot</a>(int <a class=\"id\" href=\"#platform_mode\">platform_mode</a>);", 
"extern int <a class=\"id\" href=\"#hibernation_restore\">hibernation_restore</a>(int <a class=\"id\" href=\"#platform_mode\">platform_mode</a>);", 
"extern int <a class=\"id\" href=\"#hibernation_platform_enter\">hibernation_platform_enter</a>(void);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern int <a class=\"id\" href=\"#pfn_is_nosave\">pfn_is_nosave</a>(unsigned long);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#power_attr\">power_attr</a>(<a class=\"id\" href=\"#_name\">_name</a>) \\", 
"static struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> <a class=\"id\" href=\"#_name\">_name</a>##<a class=\"id\" href=\"#_attr\">_attr</a> = {<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a><span class=\"ts\"/>= {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#__stringify\">__stringify</a>(<a class=\"id\" href=\"#_name\">_name</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mode\">mode</a> = 0644,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#_name\">_name</a>##<a class=\"id\" href=\"#_show\">_show</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a><span class=\"ts\"/>= <a class=\"id\" href=\"#_name\">_name</a>##<a class=\"id\" href=\"#_store\">_store</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"<span class=\"comment\">/* Preferred image size in bytes (default 500 MB) */</span>", 
"extern unsigned long <a class=\"id\" href=\"#image_size\">image_size</a>;", 
"extern int <a class=\"id\" href=\"#in_suspend\">in_suspend</a>;", 
"extern <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#swsusp_resume_device\">swsusp_resume_device</a>;", 
"extern <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#swsusp_resume_block\">swsusp_resume_block</a>;", 
"", 
"extern <a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> int <a class=\"id\" href=\"#swsusp_arch_suspend\">swsusp_arch_suspend</a>(void);", 
"extern <a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> int <a class=\"id\" href=\"#swsusp_arch_resume\">swsusp_arch_resume</a>(void);", 
"", 
"extern int <a class=\"id\" href=\"#create_basic_memory_bitmaps\">create_basic_memory_bitmaps</a>(void);", 
"extern void <a class=\"id\" href=\"#free_basic_memory_bitmaps\">free_basic_memory_bitmaps</a>(void);", 
"extern int <a class=\"id\" href=\"#hibernate_preallocate_memory\">hibernate_preallocate_memory</a>(void);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Auxiliary structure used for reading the snapshot image data and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>metadata from and writing them to the list of page backup entries</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(PBEs) which is the main data structure of swsusp.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Using struct snapshot_handle we can transfer the image, including its</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>metadata, as a continuous sequence of bytes with the help of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>snapshot_read_next() and snapshot_write_next().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The code that writes the image to a storage or transfers it to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the user land is required to use snapshot_read_next() for this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>purpose and it should not make any assumptions regarding the internal</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>structure of the image.  Similarly, the code that reads the image from</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a storage or transfers it from the user land is required to use</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>snapshot_write_next().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This may allow us to change the internal structure of the image</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in the future with considerably less effort.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> {", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a>;<span class=\"ts\"/><span class=\"comment\">/* number of the block of PAGE_SIZE bytes the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * next operation will refer to (ie. current)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buffer\">buffer</a>;<span class=\"ts\"/><span class=\"comment\">/* address of the block to read from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * or write to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_read\">sync_read</a>;<span class=\"ts\"/><span class=\"comment\">/* Set to one to notify the caller of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * snapshot_write_next() that it may</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * need to call wait_on_bio_chain()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"};", 
"", 
"<span class=\"comment\">/* This macro returns the address from/to which the caller of</span>", 
"<span class=\"comment\"> * snapshot_read_next()/snapshot_write_next() is allowed to</span>", 
"<span class=\"comment\"> * read/write data after the function returns</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#data_of\">data_of</a>(<a class=\"id\" href=\"#handle\">handle</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#handle\">handle</a>).<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"", 
"extern unsigned int <a class=\"id\" href=\"#snapshot_additional_pages\">snapshot_additional_pages</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>);", 
"extern unsigned long <a class=\"id\" href=\"#snapshot_get_image_size\">snapshot_get_image_size</a>(void);", 
"extern int <a class=\"id\" href=\"#snapshot_read_next\">snapshot_read_next</a>(struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>);", 
"extern int <a class=\"id\" href=\"#snapshot_write_next\">snapshot_write_next</a>(struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>);", 
"extern void <a class=\"id\" href=\"#snapshot_write_finalize\">snapshot_write_finalize</a>(struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>);", 
"extern int <a class=\"id\" href=\"#snapshot_image_loaded\">snapshot_image_loaded</a>(struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"comment\">/* If unset, the snapshot device cannot be open. */</span>", 
"extern <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#snapshot_device_available\">snapshot_device_available</a>;", 
"", 
"extern <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#alloc_swapdev_block\">alloc_swapdev_block</a>(int <a class=\"id\" href=\"#swap\">swap</a>);", 
"extern void <a class=\"id\" href=\"#free_all_swap_pages\">free_all_swap_pages</a>(int <a class=\"id\" href=\"#swap\">swap</a>);", 
"extern int <a class=\"id\" href=\"#swsusp_swap_in_use\">swsusp_swap_in_use</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Flags that can be passed from the hibernatig hernel to the \"boot\" kernel in</span>", 
"<span class=\"comment\"> * the image header.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SF_PLATFORM_MODE\">SF_PLATFORM_MODE</a><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/* kernel/power/hibernate.c */</span>", 
"extern int <a class=\"id\" href=\"#swsusp_check\">swsusp_check</a>(void);", 
"extern void <a class=\"id\" href=\"#swsusp_free\">swsusp_free</a>(void);", 
"extern int <a class=\"id\" href=\"#swsusp_read\">swsusp_read</a>(unsigned int *<a class=\"id\" href=\"#flags_p\">flags_p</a>);", 
"extern int <a class=\"id\" href=\"#swsusp_write\">swsusp_write</a>(unsigned int <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern void <a class=\"id\" href=\"#swsusp_close\">swsusp_close</a>(<a class=\"id\" href=\"#fmode_t\">fmode_t</a>);", 
"", 
"<span class=\"comment\">/* kernel/power/block_io.c */</span>", 
"extern struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>;", 
"", 
"extern int <a class=\"id\" href=\"#hib_bio_read_page\">hib_bio_read_page</a>(<a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#page_off\">page_off</a>, void *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio_chain\">bio_chain</a>);", 
"extern int <a class=\"id\" href=\"#hib_bio_write_page\">hib_bio_write_page</a>(<a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#page_off\">page_off</a>, void *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio_chain\">bio_chain</a>);", 
"extern int <a class=\"id\" href=\"#hib_wait_on_bio_chain\">hib_wait_on_bio_chain</a>(struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio_chain\">bio_chain</a>);", 
"", 
"struct <a class=\"id\" href=\"#timeval\">timeval</a>;", 
"<span class=\"comment\">/* kernel/power/swsusp.c */</span>", 
"extern void <a class=\"id\" href=\"#swsusp_show_speed\">swsusp_show_speed</a>(struct <a class=\"id\" href=\"#timeval\">timeval</a> *, struct <a class=\"id\" href=\"#timeval\">timeval</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int, char *);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SUSPEND\">CONFIG_SUSPEND</a>", 
"<span class=\"comment\">/* kernel/power/suspend.c */</span>", 
"extern const char *const <a class=\"id\" href=\"#pm_states\">pm_states</a>[];", 
"", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#valid_state\">valid_state</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"extern int <a class=\"id\" href=\"#suspend_devices_and_enter\">suspend_devices_and_enter</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"extern int <a class=\"id\" href=\"#enter_state\">enter_state</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"#else <span class=\"comment\">/* !CONFIG_SUSPEND */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#suspend_devices_and_enter\">suspend_devices_and_enter</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#enter_state\">enter_state</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>) { return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#valid_state\">valid_state</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>) { return <a class=\"id\" href=\"#false\">false</a>; }", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_SUSPEND */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_TEST_SUSPEND\">CONFIG_PM_TEST_SUSPEND</a>", 
"<span class=\"comment\">/* kernel/power/suspend_test.c */</span>", 
"extern void <a class=\"id\" href=\"#suspend_test_start\">suspend_test_start</a>(void);", 
"extern void <a class=\"id\" href=\"#suspend_test_finish\">suspend_test_finish</a>(const char *<a class=\"id\" href=\"#label\">label</a>);", 
"#else <span class=\"comment\">/* !CONFIG_PM_TEST_SUSPEND */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#suspend_test_start\">suspend_test_start</a>(void) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#suspend_test_finish\">suspend_test_finish</a>(const char *<a class=\"id\" href=\"#label\">label</a>) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_PM_TEST_SUSPEND */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_SLEEP\">CONFIG_PM_SLEEP</a>", 
"<span class=\"comment\">/* kernel/power/main.c */</span>", 
"extern int <a class=\"id\" href=\"#pm_notifier_call_chain\">pm_notifier_call_chain</a>(unsigned long <a class=\"id\" href=\"#val\">val</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGHMEM\">CONFIG_HIGHMEM</a>", 
"int <a class=\"id\" href=\"#restore_highmem\">restore_highmem</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#count_highmem_pages\">count_highmem_pages</a>(void) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#restore_highmem\">restore_highmem</a>(void) { return 0; }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Suspend test levels</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><span class=\"comment\">/* keep first */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEST_NONE\">TEST_NONE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEST_CORE\">TEST_CORE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEST_CPUS\">TEST_CPUS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEST_PLATFORM\">TEST_PLATFORM</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEST_DEVICES\">TEST_DEVICES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TEST_FREEZER\">TEST_FREEZER</a>,", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__TEST_AFTER_LAST\">__TEST_AFTER_LAST</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEST_FIRST\">TEST_FIRST</a><span class=\"ts\"/><a class=\"id\" href=\"#TEST_NONE\">TEST_NONE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEST_MAX\">TEST_MAX</a><span class=\"ts\"/>(<a class=\"id\" href=\"#__TEST_AFTER_LAST\">__TEST_AFTER_LAST</a> - 1)", 
"", 
"extern int <a class=\"id\" href=\"#pm_test_level\">pm_test_level</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SUSPEND_FREEZER\">CONFIG_SUSPEND_FREEZER</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#suspend_freeze_processes\">suspend_freeze_processes</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#freeze_processes\">freeze_processes</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#suspend_thaw_processes\">suspend_thaw_processes</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#thaw_processes\">thaw_processes</a>();", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#suspend_freeze_processes\">suspend_freeze_processes</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#suspend_thaw_processes\">suspend_thaw_processes</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/a4/ebc82f883eb6cd5cbe63e54a9d01053f38b0ad.xr', __xr_tmp);
