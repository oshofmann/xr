var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * security/tomoyo/domain.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Domain transition functions for TOMOYO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005-2010  NTT DATA CORPORATION</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"common.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#binfmts\">binfmts</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Variables definitions.*/</span>", 
"", 
"<span class=\"comment\">/* The initial domain. */</span>", 
"struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> <a class=\"id\" href=\"#tomoyo_kernel_domain\">tomoyo_kernel_domain</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_policy - Update an entry for exception policy.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @new_entry:       Pointer to \"struct tomoyo_acl_info\".</span>", 
"<span class=\"comment\"> * @size:            Size of @new_entry in bytes.</span>", 
"<span class=\"comment\"> * @is_delete:       True if it is a delete request.</span>", 
"<span class=\"comment\"> * @list:            Pointer to \"struct list_head\".</span>", 
"<span class=\"comment\"> * @check_duplicate: Callback function to find duplicated entry.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tomoyo_update_policy\">tomoyo_update_policy</a>(struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#new_entry\">new_entry</a>, const int <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>, struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#list\">list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#bool\">bool</a> (*<a class=\"id\" href=\"#check_duplicate\">check_duplicate</a>) (const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  *))", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#is_delete\">is_delete</a> ? -<a class=\"id\" href=\"#ENOENT\">ENOENT</a> : -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#tomoyo_policy_lock\">tomoyo_policy_lock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#check_duplicate\">check_duplicate</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#new_entry\">new_entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#is_deleted\">is_deleted</a> = <a class=\"id\" href=\"#is_delete\">is_delete</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> && !<a class=\"id\" href=\"#is_delete\">is_delete</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#tomoyo_commit_ok\">tomoyo_commit_ok</a>(<a class=\"id\" href=\"#new_entry\">new_entry</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail_rcu\">list_add_tail_rcu</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tomoyo_policy_lock\">tomoyo_policy_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_domain - Update an entry for domain policy.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @new_entry:       Pointer to \"struct tomoyo_acl_info\".</span>", 
"<span class=\"comment\"> * @size:            Size of @new_entry in bytes.</span>", 
"<span class=\"comment\"> * @is_delete:       True if it is a delete request.</span>", 
"<span class=\"comment\"> * @domain:          Pointer to \"struct tomoyo_domain_info\".</span>", 
"<span class=\"comment\"> * @check_duplicate: Callback function to find duplicated entry.</span>", 
"<span class=\"comment\"> * @merge_duplicate: Callback function to merge duplicated entry.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tomoyo_update_domain\">tomoyo_update_domain</a>(struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#new_entry\">new_entry</a>, const int <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>, struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> *<a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#bool\">bool</a> (*<a class=\"id\" href=\"#check_duplicate\">check_duplicate</a>) (const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#bool\">bool</a> (*<a class=\"id\" href=\"#merge_duplicate\">merge_duplicate</a>) (struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#bool\">bool</a>))", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#is_delete\">is_delete</a> ? -<a class=\"id\" href=\"#ENOENT\">ENOENT</a> : -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#tomoyo_policy_lock\">tomoyo_policy_lock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#acl_info_list\">acl_info_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#check_duplicate\">check_duplicate</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#new_entry\">new_entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#merge_duplicate\">merge_duplicate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#is_deleted\">is_deleted</a> = <a class=\"id\" href=\"#merge_duplicate\">merge_duplicate</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#new_entry\">new_entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#is_delete\">is_delete</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#is_deleted\">is_deleted</a> = <a class=\"id\" href=\"#is_delete\">is_delete</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> && !<a class=\"id\" href=\"#is_delete\">is_delete</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#tomoyo_commit_ok\">tomoyo_commit_ok</a>(<a class=\"id\" href=\"#new_entry\">new_entry</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail_rcu\">list_add_tail_rcu</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#acl_info_list\">acl_info_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tomoyo_policy_lock\">tomoyo_policy_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#tomoyo_check_acl\">tomoyo_check_acl</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#bool\">bool</a> (*<a class=\"id\" href=\"#check_entry\">check_entry</a>) (struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *))", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> *<a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#domain\">domain</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, &amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#acl_info_list\">acl_info_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#is_deleted\">is_deleted</a> || <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param_type\">param_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#check_entry\">check_entry</a>(<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#ptr\">ptr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#granted\">granted</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#granted\">granted</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"<span class=\"comment\">/* The list for \"struct tomoyo_domain_info\". */</span>", 
"<a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#tomoyo_domain_list\">tomoyo_domain_list</a>);", 
"", 
"struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>[<a class=\"id\" href=\"#TOMOYO_MAX_POLICY\">TOMOYO_MAX_POLICY</a>];", 
"struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#tomoyo_group_list\">tomoyo_group_list</a>[<a class=\"id\" href=\"#TOMOYO_MAX_GROUP\">TOMOYO_MAX_GROUP</a>];", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_last_word - Get last component of a domainname.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @domainname: Domainname to check.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the last word of @domainname.</span>", 
"<span class=\"comment\"> */</span>", 
"static const char *<a class=\"id\" href=\"#tomoyo_last_word\">tomoyo_last_word</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"        const char *<a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#strrchr\">strrchr</a>(<a class=\"id\" href=\"#name\">name</a>, ' ');", 
"        if (<a class=\"id\" href=\"#cp\">cp</a>)", 
"                return <a class=\"id\" href=\"#cp\">cp</a> + 1;", 
"        return <a class=\"id\" href=\"#name\">name</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_same_transition_control\">tomoyo_same_transition_control</a>(const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_transition_control\">tomoyo_transition_control</a> *<a class=\"id\" href=\"#p1\">p1</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p1\">p1</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_transition_control\">tomoyo_transition_control</a> *<a class=\"id\" href=\"#p2\">p2</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p2\">p2</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#type\">type</a> && <a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#is_last_name\">is_last_name</a> == <a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#is_last_name\">is_last_name</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#domainname\">domainname</a> == <a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#domainname\">domainname</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#program\">program</a> == <a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#program\">program</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_transition_control_entry - Update \"struct tomoyo_transition_control\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @domainname: The name of domain. Maybe NULL.</span>", 
"<span class=\"comment\"> * @program:    The name of program. Maybe NULL.</span>", 
"<span class=\"comment\"> * @type:       Type of transition.</span>", 
"<span class=\"comment\"> * @is_delete:  True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_update_transition_control_entry\">tomoyo_update_transition_control_entry</a>(const char *<a class=\"id\" href=\"#domainname\">domainname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#program\">program</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_transition_control\">tomoyo_transition_control</a> <a class=\"id\" href=\"#e\">e</a> = { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a> };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#is_delete\">is_delete</a> ? -<a class=\"id\" href=\"#ENOENT\">ENOENT</a> : -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#program\">program</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_correct_path\">tomoyo_correct_path</a>(<a class=\"id\" href=\"#program\">program</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#program\">program</a> = <a class=\"id\" href=\"#tomoyo_get_name\">tomoyo_get_name</a>(<a class=\"id\" href=\"#program\">program</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#program\">program</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#domainname\">domainname</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_correct_domain\">tomoyo_correct_domain</a>(<a class=\"id\" href=\"#domainname\">domainname</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_correct_path\">tomoyo_correct_path</a>(<a class=\"id\" href=\"#domainname\">domainname</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#is_last_name\">is_last_name</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#domainname\">domainname</a> = <a class=\"id\" href=\"#tomoyo_get_name\">tomoyo_get_name</a>(<a class=\"id\" href=\"#domainname\">domainname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#domainname\">domainname</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tomoyo_update_policy\">tomoyo_update_policy</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#head\">head</a>, sizeof(<a class=\"id\" href=\"#e\">e</a>), <a class=\"id\" href=\"#is_delete\">is_delete</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     [<a class=\"id\" href=\"#TOMOYO_ID_TRANSITION_CONTROL\">TOMOYO_ID_TRANSITION_CONTROL</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_same_transition_control\">tomoyo_same_transition_control</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name\">tomoyo_put_name</a>(<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#domainname\">domainname</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name\">tomoyo_put_name</a>(<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#program\">program</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_write_transition_control - Write \"struct tomoyo_transition_control\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @data:      String to parse.</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> * @type:      Type of this entry.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tomoyo_write_transition_control\">tomoyo_write_transition_control</a>(char *<a class=\"id\" href=\"#data\">data</a>, const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#domainname\">domainname</a> = <a class=\"id\" href=\"#strstr\">strstr</a>(<a class=\"id\" href=\"#data\">data</a>, \" from \");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#domainname\">domainname</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#domainname\">domainname</a> = '\\0';", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#domainname\">domainname</a> += 6;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TOMOYO_TRANSITION_CONTROL_NO_KEEP\">TOMOYO_TRANSITION_CONTROL_NO_KEEP</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TOMOYO_TRANSITION_CONTROL_KEEP\">TOMOYO_TRANSITION_CONTROL_KEEP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#domainname\">domainname</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_update_transition_control_entry\">tomoyo_update_transition_control_entry</a>(<a class=\"id\" href=\"#domainname\">domainname</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#is_delete\">is_delete</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_transition_type - Get domain transition type.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @domainname: The name of domain.</span>", 
"<span class=\"comment\"> * @program:    The name of program.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns TOMOYO_TRANSITION_CONTROL_INITIALIZE if executing @program</span>", 
"<span class=\"comment\"> * reinitializes domain transition, TOMOYO_TRANSITION_CONTROL_KEEP if executing</span>", 
"<span class=\"comment\"> * @program suppresses domain transition, others otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tomoyo_transition_type\">tomoyo_transition_type</a>(const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#domainname\">domainname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#program\">program</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_transition_control\">tomoyo_transition_control</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#last_name\">last_name</a> = <a class=\"id\" href=\"#tomoyo_last_word\">tomoyo_last_word</a>(<a class=\"id\" href=\"#domainname\">domainname</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#type\">type</a> = 0; <a class=\"id\" href=\"#type\">type</a> &lt; <a class=\"id\" href=\"#TOMOYO_MAX_TRANSITION_TYPE\">TOMOYO_MAX_TRANSITION_TYPE</a>; <a class=\"id\" href=\"#type\">type</a>++) {", 
" <a class=\"id\" href=\"#next\">next</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_ID_TRANSITION_CONTROL\">TOMOYO_ID_TRANSITION_CONTROL</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#is_deleted\">is_deleted</a> || <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#domainname\">domainname</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#is_last_name\">is_last_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#domainname\">domainname</a> != <a class=\"id\" href=\"#domainname\">domainname</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Use direct strcmp() since this is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * unlikely used.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#domainname\">domainname</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#last_name\">last_name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#program\">program</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tomoyo_pathcmp\">tomoyo_pathcmp</a>(<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#program\">program</a>, <a class=\"id\" href=\"#program\">program</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TOMOYO_TRANSITION_CONTROL_NO_INITIALIZE\">TOMOYO_TRANSITION_CONTROL_NO_INITIALIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Do not check for initialize_domain if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * no_initialize_domain matched.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#TOMOYO_TRANSITION_CONTROL_NO_KEEP\">TOMOYO_TRANSITION_CONTROL_NO_KEEP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
" <a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_same_aggregator\">tomoyo_same_aggregator</a>(const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_aggregator\">tomoyo_aggregator</a> *<a class=\"id\" href=\"#p1\">p1</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p1\">p1</a>), <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_aggregator\">tomoyo_aggregator</a> *<a class=\"id\" href=\"#p2\">p2</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p2\">p2</a>), <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#original_name\">original_name</a> == <a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#original_name\">original_name</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#aggregated_name\">aggregated_name</a> == <a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#aggregated_name\">aggregated_name</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_aggregator_entry - Update \"struct tomoyo_aggregator\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @original_name:   The original program's name.</span>", 
"<span class=\"comment\"> * @aggregated_name: The program name to use.</span>", 
"<span class=\"comment\"> * @is_delete:       True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_update_aggregator_entry\">tomoyo_update_aggregator_entry</a>(const char *<a class=\"id\" href=\"#original_name\">original_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#aggregated_name\">aggregated_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_aggregator\">tomoyo_aggregator</a> <a class=\"id\" href=\"#e\">e</a> = { };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#is_delete\">is_delete</a> ? -<a class=\"id\" href=\"#ENOENT\">ENOENT</a> : -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_correct_path\">tomoyo_correct_path</a>(<a class=\"id\" href=\"#original_name\">original_name</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#tomoyo_correct_path\">tomoyo_correct_path</a>(<a class=\"id\" href=\"#aggregated_name\">aggregated_name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#original_name\">original_name</a> = <a class=\"id\" href=\"#tomoyo_get_name\">tomoyo_get_name</a>(<a class=\"id\" href=\"#original_name\">original_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#aggregated_name\">aggregated_name</a> = <a class=\"id\" href=\"#tomoyo_get_name\">tomoyo_get_name</a>(<a class=\"id\" href=\"#aggregated_name\">aggregated_name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#original_name\">original_name</a> || !<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#aggregated_name\">aggregated_name</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#aggregated_name\">aggregated_name</a>-><a class=\"id\" href=\"#is_patterned\">is_patterned</a>) <span class=\"comment\">/* No patterns allowed. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tomoyo_update_policy\">tomoyo_update_policy</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#head\">head</a>, sizeof(<a class=\"id\" href=\"#e\">e</a>), <a class=\"id\" href=\"#is_delete\">is_delete</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>[<a class=\"id\" href=\"#TOMOYO_ID_AGGREGATOR\">TOMOYO_ID_AGGREGATOR</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_same_aggregator\">tomoyo_same_aggregator</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name\">tomoyo_put_name</a>(<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#original_name\">original_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name\">tomoyo_put_name</a>(<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#aggregated_name\">aggregated_name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_write_aggregator - Write \"struct tomoyo_aggregator\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @data:      String to parse.</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tomoyo_write_aggregator\">tomoyo_write_aggregator</a>(char *<a class=\"id\" href=\"#data\">data</a>, const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#data\">data</a>, ' ');", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cp\">cp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#cp\">cp</a>++ = '\\0';", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_update_aggregator_entry\">tomoyo_update_aggregator_entry</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#cp\">cp</a>, <a class=\"id\" href=\"#is_delete\">is_delete</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_assign_domain - Create a domain.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @domainname: The name of domain.</span>", 
"<span class=\"comment\"> * @profile:    Profile number to assign if the domain was newly created.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns pointer to \"struct tomoyo_domain_info\" on success, NULL otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> *<a class=\"id\" href=\"#tomoyo_assign_domain\">tomoyo_assign_domain</a>(const char *<a class=\"id\" href=\"#domainname\">domainname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#profile\">profile</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> *<a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#saved_domainname\">saved_domainname</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_correct_domain\">tomoyo_correct_domain</a>(<a class=\"id\" href=\"#domainname\">domainname</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#saved_domainname\">saved_domainname</a> = <a class=\"id\" href=\"#tomoyo_get_name\">tomoyo_get_name</a>(<a class=\"id\" href=\"#domainname\">domainname</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#saved_domainname\">saved_domainname</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#entry\">entry</a>), <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#tomoyo_policy_lock\">tomoyo_policy_lock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#domain\">domain</a>, &amp;<a class=\"id\" href=\"#tomoyo_domain_list\">tomoyo_domain_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#is_deleted\">is_deleted</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tomoyo_pathcmp\">tomoyo_pathcmp</a>(<a class=\"id\" href=\"#saved_domainname\">saved_domainname</a>, <a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#domainname\">domainname</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a> && <a class=\"id\" href=\"#tomoyo_memory_ok\">tomoyo_memory_ok</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#acl_info_list\">acl_info_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#domainname\">domainname</a> = <a class=\"id\" href=\"#saved_domainname\">saved_domainname</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved_domainname\">saved_domainname</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#profile\">profile</a> = <a class=\"id\" href=\"#profile\">profile</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail_rcu\">list_add_tail_rcu</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#tomoyo_domain_list\">tomoyo_domain_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tomoyo_policy_lock\">tomoyo_policy_lock</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name\">tomoyo_put_name</a>(<a class=\"id\" href=\"#saved_domainname\">saved_domainname</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a> ? <a class=\"id\" href=\"#domain\">domain</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_find_next_domain - Find a domain.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @bprm: Pointer to \"struct linux_binprm\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tomoyo_find_next_domain\">tomoyo_find_next_domain</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#TOMOYO_EXEC_TMPSIZE\">TOMOYO_EXEC_TMPSIZE</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> *<a class=\"id\" href=\"#old_domain\">old_domain</a> = <a class=\"id\" href=\"#tomoyo_domain\">tomoyo_domain</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> *<a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#original_name\">original_name</a> = <a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#filename\">filename</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_enforce\">is_enforce</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#need_kfree\">need_kfree</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> <a class=\"id\" href=\"#rn\">rn</a> = { }; <span class=\"comment\">/* real name */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#tomoyo_init_request_info\">tomoyo_init_request_info</a>(&amp;<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#TOMOYO_MAC_FILE_EXECUTE\">TOMOYO_MAC_FILE_EXECUTE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is_enforce\">is_enforce</a> = (<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#TOMOYO_CONFIG_ENFORCING\">TOMOYO_CONFIG_ENFORCING</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
" <a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#need_kfree\">need_kfree</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rn\">rn</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_kfree\">need_kfree</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Get symlink's pathname of program. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rn\">rn</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#tomoyo_realpath_nofollow\">tomoyo_realpath_nofollow</a>(<a class=\"id\" href=\"#original_name\">original_name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rn\">rn</a>.<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_fill_path_info\">tomoyo_fill_path_info</a>(&amp;<a class=\"id\" href=\"#rn\">rn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#need_kfree\">need_kfree</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check 'aggregator' directive. */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_aggregator\">tomoyo_aggregator</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_ID_AGGREGATOR\">TOMOYO_ID_AGGREGATOR</a>], <a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#is_deleted\">is_deleted</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#tomoyo_path_matches_pattern\">tomoyo_path_matches_pattern</a>(&amp;<a class=\"id\" href=\"#rn\">rn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#original_name\">original_name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rn\">rn</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_kfree\">need_kfree</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is OK because it is read only. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rn\">rn</a> = *<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#aggregated_name\">aggregated_name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check execute permission. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tomoyo_path_permission\">tomoyo_path_permission</a>(&amp;<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#TOMOYO_TYPE_EXECUTE\">TOMOYO_TYPE_EXECUTE</a>, &amp;<a class=\"id\" href=\"#rn\">rn</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == <a class=\"id\" href=\"#TOMOYO_RETRY_REQUEST\">TOMOYO_RETRY_REQUEST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To be able to specify domainnames with wildcards, use the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pathname specified in the policy (which may contain</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * wildcard) rather than the pathname passed to execve()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (which never contains wildcard).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#matched_path\">matched_path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_kfree\">need_kfree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rn\">rn</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_kfree\">need_kfree</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is OK because it is read only. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rn\">rn</a> = *<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#matched_path\">matched_path</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate domain to transit to. */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#tomoyo_transition_type\">tomoyo_transition_type</a>(<a class=\"id\" href=\"#old_domain\">old_domain</a>-><a class=\"id\" href=\"#domainname\">domainname</a>, &amp;<a class=\"id\" href=\"#rn\">rn</a>)) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TOMOYO_TRANSITION_CONTROL_INITIALIZE\">TOMOYO_TRANSITION_CONTROL_INITIALIZE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Transit to the child of tomoyo_kernel_domain domain. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#TOMOYO_EXEC_TMPSIZE\">TOMOYO_EXEC_TMPSIZE</a> - 1, <a class=\"id\" href=\"#TOMOYO_ROOT_NAME\">TOMOYO_ROOT_NAME</a> \" \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%s\", <a class=\"id\" href=\"#rn\">rn</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TOMOYO_TRANSITION_CONTROL_KEEP\">TOMOYO_TRANSITION_CONTROL_KEEP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Keep current domain. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#old_domain\">old_domain</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_domain\">old_domain</a> == &amp;<a class=\"id\" href=\"#tomoyo_kernel_domain\">tomoyo_kernel_domain</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#tomoyo_policy_loaded\">tomoyo_policy_loaded</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Needn't to transit from kernel domain before</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * starting /sbin/init. But transit from kernel domain</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * if executing initializers because they might start</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * before /sbin/init.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#old_domain\">old_domain</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Normal domain transition. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#TOMOYO_EXEC_TMPSIZE\">TOMOYO_EXEC_TMPSIZE</a> - 1, \"%s %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#old_domain\">old_domain</a>-><a class=\"id\" href=\"#domainname\">domainname</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#rn\">rn</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#domain\">domain</a> || <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#tmp\">tmp</a>) >= <a class=\"id\" href=\"#TOMOYO_EXEC_TMPSIZE\">TOMOYO_EXEC_TMPSIZE</a> - 10)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#tomoyo_find_domain\">tomoyo_find_domain</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#domain\">domain</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_enforce\">is_enforce</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tomoyo_supervisor\">tomoyo_supervisor</a>(&amp;<a class=\"id\" href=\"#r\">r</a>, \"# wants to create domain\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"%s\\n\", <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == <a class=\"id\" href=\"#TOMOYO_RETRY_REQUEST\">TOMOYO_RETRY_REQUEST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#tomoyo_assign_domain\">tomoyo_assign_domain</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#old_domain\">old_domain</a>-><a class=\"id\" href=\"#profile\">profile</a>);", 
" <a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#domain\">domain</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"TOMOYO-ERROR: Domain '%s' not defined.\\n\", <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_enforce\">is_enforce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_domain\">old_domain</a>-><a class=\"id\" href=\"#transition_failed\">transition_failed</a> = <a class=\"id\" href=\"#true\">true</a>;", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#domain\">domain</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#domain\">domain</a> = <a class=\"id\" href=\"#old_domain\">old_domain</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Update reference count on \"struct tomoyo_domain_info\". */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#users\">users</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#security\">security</a> = <a class=\"id\" href=\"#domain\">domain</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#need_kfree\">need_kfree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rn\">rn</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
];
xr_frag_insert('l/a5/51ce359b195d016dba6becc1eaceb9ce4dd0cb.xr', __xr_tmp);
