var __xr_tmp = [
"<span class=\"comment\"> * get the next mount in the propagation tree.</span>", 
"<span class=\"comment\"> * @m: the mount seen last</span>", 
"<span class=\"comment\"> * @origin: the original mount from where the tree walk initiated</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that peer groups form contiguous segments of slave lists.</span>", 
"<span class=\"comment\"> * We rely on that in get_source() to be able to find out if</span>", 
"<span class=\"comment\"> * vfsmount found while iterating with propagation_next() is</span>", 
"<span class=\"comment\"> * a peer of one we'd found earlier.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#propagation_next\">propagation_next</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#origin\">origin</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* are there any slaves of this mount? */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_MNT_NEW\">IS_MNT_NEW</a>(<a class=\"id\" href=\"#m\">m</a>) && !<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#mnt_slave_list\">mnt_slave_list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#first_slave\">first_slave</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#master\">master</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#mnt_master\">mnt_master</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#master\">master</a> == <a class=\"id\" href=\"#origin\">origin</a>-><a class=\"id\" href=\"#mnt_master\">mnt_master</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#next_peer\">next_peer</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return ((<a class=\"id\" href=\"#next\">next</a> == <a class=\"id\" href=\"#origin\">origin</a>) ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#mnt_slave\">mnt_slave</a>.<a class=\"id\" href=\"#next\">next</a> != &amp;<a class=\"id\" href=\"#master\">master</a>-><a class=\"id\" href=\"#mnt_slave_list\">mnt_slave_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#next_slave\">next_slave</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* back at master */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#master\">master</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * return the source mount to be used for cloning</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @dest <span class=\"ts\"/>the current destination mount</span>", 
"<span class=\"comment\"> * @last_dest  <span class=\"ts\"/>the last seen destination mount</span>", 
"<span class=\"comment\"> * @last_src  <span class=\"ts\"/>the last seen source mount</span>", 
"<span class=\"comment\"> * @type<span class=\"ts\"/>return CL_SLAVE if the new mount has to be</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>cloned as a slave.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#get_source\">get_source</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#dest\">dest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#last_dest\">last_dest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#last_src\">last_src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int *<a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#p_last_src\">p_last_src</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#p_last_dest\">p_last_dest</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#last_dest\">last_dest</a> != <a class=\"id\" href=\"#dest\">dest</a>-><a class=\"id\" href=\"#mnt_master\">mnt_master</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_last_dest\">p_last_dest</a> = <a class=\"id\" href=\"#last_dest\">last_dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_last_src\">p_last_src</a> = <a class=\"id\" href=\"#last_src\">last_src</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_dest\">last_dest</a> = <a class=\"id\" href=\"#last_dest\">last_dest</a>-><a class=\"id\" href=\"#mnt_master\">mnt_master</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_src\">last_src</a> = <a class=\"id\" href=\"#last_src\">last_src</a>-><a class=\"id\" href=\"#mnt_master\">mnt_master</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p_last_dest\">p_last_dest</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_last_dest\">p_last_dest</a> = <a class=\"id\" href=\"#next_peer\">next_peer</a>(<a class=\"id\" href=\"#p_last_dest\">p_last_dest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#IS_MNT_NEW\">IS_MNT_NEW</a>(<a class=\"id\" href=\"#p_last_dest\">p_last_dest</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* is that a peer of the earlier? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dest\">dest</a> == <a class=\"id\" href=\"#p_last_dest\">p_last_dest</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#CL_MAKE_SHARED\">CL_MAKE_SHARED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#p_last_src\">p_last_src</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* slave of the earlier, then */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#CL_SLAVE\">CL_SLAVE</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* beginning of peer group among the slaves? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_MNT_SHARED\">IS_MNT_SHARED</a>(<a class=\"id\" href=\"#dest\">dest</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> |= <a class=\"id\" href=\"#CL_MAKE_SHARED\">CL_MAKE_SHARED</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last_src\">last_src</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mount 'source_mnt' under the destination 'dest_mnt' at</span>", 
"<span class=\"comment\"> * dentry 'dest_dentry'. And propagate that mount to</span>", 
"<span class=\"comment\"> * all the peer and slave mounts of 'dest_mnt'.</span>", 
"<span class=\"comment\"> * Link all the new mounts into a propagation tree headed at</span>", 
"<span class=\"comment\"> * source_mnt. Also link all the new mounts using -&gt;mnt_list</span>", 
"<span class=\"comment\"> * headed at source_mnt's -&gt;mnt_list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @dest_mnt: destination mount.</span>", 
"<span class=\"comment\"> * @dest_dentry: destination dentry.</span>", 
"<span class=\"comment\"> * @source_mnt: source mount.</span>", 
"<span class=\"comment\"> * @tree_list : list of heads of trees to be attached.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#propagate_mnt\">propagate_mnt</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#dest_mnt\">dest_mnt</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dest_dentry\">dest_dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#source_mnt\">source_mnt</a>, struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#tree_list\">tree_list</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#m\">m</a>, *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#prev_dest_mnt\">prev_dest_mnt</a> = <a class=\"id\" href=\"#dest_mnt\">dest_mnt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#prev_src_mnt\">prev_src_mnt</a>  = <a class=\"id\" href=\"#source_mnt\">source_mnt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#tmp_list\">tmp_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#umount_list\">umount_list</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#propagation_next\">propagation_next</a>(<a class=\"id\" href=\"#dest_mnt\">dest_mnt</a>, <a class=\"id\" href=\"#dest_mnt\">dest_mnt</a>); <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#propagation_next\">propagation_next</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#dest_mnt\">dest_mnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#source\">source</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_MNT_NEW\">IS_MNT_NEW</a>(<a class=\"id\" href=\"#m\">m</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#source\">source</a> =  <a class=\"id\" href=\"#get_source\">get_source</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#prev_dest_mnt\">prev_dest_mnt</a>, <a class=\"id\" href=\"#prev_src_mnt\">prev_src_mnt</a>, &amp;<a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#copy_tree\">copy_tree</a>(<a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#source\">source</a>-><a class=\"id\" href=\"#mnt_root\">mnt_root</a>, <a class=\"id\" href=\"#type\">type</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_splice\">list_splice</a>(<a class=\"id\" href=\"#tree_list\">tree_list</a>, <a class=\"id\" href=\"#tmp_list\">tmp_list</a>.<a class=\"id\" href=\"#prev\">prev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_subdir\">is_subdir</a>(<a class=\"id\" href=\"#dest_dentry\">dest_dentry</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#mnt_root\">mnt_root</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mnt_set_mountpoint\">mnt_set_mountpoint</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#dest_dentry\">dest_dentry</a>, <a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#mnt_hash\">mnt_hash</a>, <a class=\"id\" href=\"#tree_list\">tree_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * This can happen if the parent mount was bind mounted</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * on some subdirectory of a shared/slave mount.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#mnt_hash\">mnt_hash</a>, &amp;<a class=\"id\" href=\"#tmp_list\">tmp_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_dest_mnt\">prev_dest_mnt</a> = <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_src_mnt\">prev_src_mnt</a>  = <a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#br_write_lock\">br_write_lock</a>(<a class=\"id\" href=\"#vfsmount_lock\">vfsmount_lock</a>);", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#tmp_list\">tmp_list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#list_first_entry\">list_first_entry</a>(&amp;<a class=\"id\" href=\"#tmp_list\">tmp_list</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a>, <a class=\"id\" href=\"#mnt_hash\">mnt_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#umount_tree\">umount_tree</a>(<a class=\"id\" href=\"#child\">child</a>, 0, &amp;<a class=\"id\" href=\"#umount_list\">umount_list</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#br_write_unlock\">br_write_unlock</a>(<a class=\"id\" href=\"#vfsmount_lock\">vfsmount_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_mounts\">release_mounts</a>(&amp;<a class=\"id\" href=\"#umount_list\">umount_list</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * return true if the refcount is greater than count</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#do_refcount_check\">do_refcount_check</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>, int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
];
xr_frag_insert('l/a6/4bbaa097aaf9c50962626a64ac26ba2f0d4bc8.xr', __xr_tmp);
