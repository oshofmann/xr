var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>INETPEER - A storage for permanent information about peers</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Authors:<span class=\"ts\"/>Andrey V. Savochkin &lt;saw@msu.ru&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_NET_INETPEER_H\">_NET_INETPEER_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_NET_INETPEER_H\">_NET_INETPEER_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#inet_peer\">inet_peer</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* group together avl_left,avl_right,v4daddr to speedup lookups */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_peer\">inet_peer</a><span class=\"ts\"/>*<a class=\"id\" href=\"#avl_left\">avl_left</a>, *<a class=\"id\" href=\"#avl_right\">avl_right</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v4daddr\">v4daddr</a>;<span class=\"ts\"/><span class=\"comment\">/* peer's address */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avl_height\">avl_height</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#unused\">unused</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dtime\">dtime</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the time of last use of not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * referenced entries */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#refcnt\">refcnt</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Once inet_peer is queued for deletion (refcnt == -1), following fields</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are not available: rid, ip_id_count, tcp_ts, tcp_ts_stamp</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We can share memory with rcu_head to keep inet_peer small</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (less then 64 bytes)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><a class=\"id\" href=\"#rid\">rid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Frag reception counter */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ip_id_count\">ip_id_count</a>;<span class=\"ts\"/><span class=\"comment\">/* IP ID for the next packet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ts\">tcp_ts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a>         <a class=\"id\" href=\"#rcu\">rcu</a>;", 
"<span class=\"ts\"/>};", 
"};", 
"", 
"void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_initpeers\">inet_initpeers</a>(void) <a class=\"id\" href=\"#__init\">__init</a>;", 
"", 
"<span class=\"comment\">/* can be called with or without local BH being disabled */</span>", 
"struct <a class=\"id\" href=\"#inet_peer\">inet_peer</a><span class=\"ts\"/>*<a class=\"id\" href=\"#inet_getpeer\">inet_getpeer</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, int <a class=\"id\" href=\"#create\">create</a>);", 
"", 
"<span class=\"comment\">/* can be called from BH context or outside */</span>", 
"extern void <a class=\"id\" href=\"#inet_putpeer\">inet_putpeer</a>(struct <a class=\"id\" href=\"#inet_peer\">inet_peer</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * temporary check to make sure we dont access rid, ip_id_count, tcp_ts,</span>", 
"<span class=\"comment\"> * tcp_ts_stamp if no refcount is taken on inet_peer</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#inet_peer_refcheck\">inet_peer_refcheck</a>(const struct <a class=\"id\" href=\"#inet_peer\">inet_peer</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>) <= 0);", 
"}", 
"", 
"", 
"<span class=\"comment\">/* can be called with or without local BH being disabled */</span>", 
];
xr_frag_insert('l/a6/85e24c779c5c4d2735b96b935eccdee0807288.xr', __xr_tmp);
