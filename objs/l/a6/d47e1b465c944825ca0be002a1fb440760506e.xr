var __xr_tmp = [
"<span class=\"comment\">/* audit_watch.c -- watching inodes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2003-2009 Red Hat, Inc.</span>", 
"<span class=\"comment\"> * Copyright 2005 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> * Copyright 2005 IBM Corporation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fsnotify_backend\">fsnotify_backend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"audit.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reference counting:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * audit_parent: lifetime is from audit_init_parent() to receipt of an FS_IGNORED</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>event.  Each audit_watch holds a reference to its associated parent.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * audit_watch: if added to lists, lifetime is from audit_init_watch() to</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>audit_remove_watch().  Additionally, an audit_watch may exist</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>temporarily to assist in searching existing filter data.  Each</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>audit_krule holds a reference to its associated watch.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>;<span class=\"ts\"/><span class=\"comment\">/* reference count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>;<span class=\"ts\"/><span class=\"comment\">/* associated superblock device */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#path\">path</a>;<span class=\"ts\"/><span class=\"comment\">/* insertion path */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a>;<span class=\"ts\"/><span class=\"comment\">/* associated inode number */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a><span class=\"ts\"/>*<a class=\"id\" href=\"#parent\">parent</a>; <span class=\"comment\">/* associated parent */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#wlist\">wlist</a>;<span class=\"ts\"/><span class=\"comment\">/* entry in parent-&gt;watches list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#rules\">rules</a>;<span class=\"ts\"/><span class=\"comment\">/* anchor for krule-&gt;rlist */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#watches\">watches</a>; <span class=\"comment\">/* anchor for audit_watch-&gt;wlist */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> <a class=\"id\" href=\"#mark\">mark</a>; <span class=\"comment\">/* fsnotify mark on the inode */</span>", 
"};", 
"", 
"<span class=\"comment\">/* fsnotify handle. */</span>", 
"struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#audit_watch_group\">audit_watch_group</a>;", 
"", 
"<span class=\"comment\">/* fsnotify events we care about. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIT_FS_WATCH\">AUDIT_FS_WATCH</a> (<a class=\"id\" href=\"#FS_MOVE\">FS_MOVE</a> | <a class=\"id\" href=\"#FS_CREATE\">FS_CREATE</a> | <a class=\"id\" href=\"#FS_DELETE\">FS_DELETE</a> | <a class=\"id\" href=\"#FS_DELETE_SELF\">FS_DELETE_SELF</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FS_MOVE_SELF\">FS_MOVE_SELF</a> | <a class=\"id\" href=\"#FS_EVENT_ON_CHILD\">FS_EVENT_ON_CHILD</a>)", 
"", 
"static void <a class=\"id\" href=\"#audit_free_parent\">audit_free_parent</a>(struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#watches\">watches</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#audit_watch_free_mark\">audit_watch_free_mark</a>(struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#entry\">entry</a>, struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a>, <a class=\"id\" href=\"#mark\">mark</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_free_parent\">audit_free_parent</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#audit_get_parent\">audit_get_parent</a>(struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_get_mark\">fsnotify_get_mark</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#mark\">mark</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#audit_put_parent\">audit_put_parent</a>(struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_mark\">fsnotify_put_mark</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#mark\">mark</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find and return the audit_parent on the given inode.  If found a reference</span>", 
"<span class=\"comment\"> * is taken on this parent.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#audit_find_parent\">audit_find_parent</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#fsnotify_find_inode_mark\">fsnotify_find_inode_mark</a>(<a class=\"id\" href=\"#audit_watch_group\">audit_watch_group</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#entry\">entry</a>, struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a>, <a class=\"id\" href=\"#mark\">mark</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#parent\">parent</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#audit_get_watch\">audit_get_watch</a>(struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#audit_put_watch\">audit_put_watch</a>(struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#count\">count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#rules\">rules</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#watch\">watch</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#audit_remove_watch\">audit_remove_watch</a>(struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#wlist\">wlist</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_put_parent\">audit_put_parent</a>(<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_put_watch\">audit_put_watch</a>(<a class=\"id\" href=\"#watch\">watch</a>); <span class=\"comment\">/* match initial get */</span>", 
"}", 
"", 
"char *<a class=\"id\" href=\"#audit_watch_path\">audit_watch_path</a>(struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#path\">path</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#audit_watch_compare\">audit_watch_compare</a>(struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>, unsigned long <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#ino\">ino</a> != (unsigned long)-1) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#ino\">ino</a> == <a class=\"id\" href=\"#ino\">ino</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Initialize a parent watch entry. */</span>", 
"static struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#audit_init_parent\">audit_init_parent</a>(struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#ndp\">ndp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ndp\">ndp</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#parent\">parent</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#watches\">watches</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_init_mark\">fsnotify_init_mark</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#mark\">mark</a>, <a class=\"id\" href=\"#audit_watch_free_mark\">audit_watch_free_mark</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#mark\">mark</a>.<a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#AUDIT_FS_WATCH\">AUDIT_FS_WATCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#fsnotify_add_mark\">fsnotify_add_mark</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#mark\">mark</a>, <a class=\"id\" href=\"#audit_watch_group\">audit_watch_group</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_free_parent\">audit_free_parent</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#parent\">parent</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Initialize a watch entry. */</span>", 
"static struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#audit_init_watch\">audit_init_watch</a>(char *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#watch\">watch</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#watch\">watch</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#rules\">rules</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#count\">count</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#dev\">dev</a> = (<a class=\"id\" href=\"#dev_t\">dev_t</a>)-1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#ino\">ino</a> = (unsigned long)-1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#watch\">watch</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Translate a watch string to kernel respresentation. */</span>", 
"int <a class=\"id\" href=\"#audit_to_watch\">audit_to_watch</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#krule\">krule</a>, char *<a class=\"id\" href=\"#path\">path</a>, int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#audit_watch_group\">audit_watch_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>[0] != '/' || <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#len\">len</a>-1] == '/' ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#listnr\">listnr</a> != <a class=\"id\" href=\"#AUDIT_FILTER_EXIT\">AUDIT_FILTER_EXIT</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#Audit_equal\">Audit_equal</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#inode_f\">inode_f</a> || <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#watch\">watch</a> || <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#tree\">tree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#audit_init_watch\">audit_init_watch</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#watch\">watch</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#watch\">watch</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_get_watch\">audit_get_watch</a>(<a class=\"id\" href=\"#watch\">watch</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#watch\">watch</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Duplicate the given audit watch.  The new watch's rules list is initialized</span>", 
"<span class=\"comment\"> * to an empty list and wlist is undefined. */</span>", 
"static struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#audit_dupe_watch\">audit_dupe_watch</a>(struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#path\">path</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#audit_init_watch\">audit_init_watch</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new\">new</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#ino\">ino</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_get_parent\">audit_get_parent</a>(<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#new\">new</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#audit_watch_log_rule_change\">audit_watch_log_rule_change</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#r\">r</a>, struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#w\">w</a>, char *<a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_enabled\">audit_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>, <a class=\"id\" href=\"#AUDIT_CONFIG_CHANGE\">AUDIT_CONFIG_CHANGE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"auid=%u ses=%u op=\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#audit_get_loginuid\">audit_get_loginuid</a>(<a class=\"id\" href=\"#current\">current</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#audit_get_sessionid\">audit_get_sessionid</a>(<a class=\"id\" href=\"#current\">current</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_string\">audit_log_string</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" path=\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_untrustedstring\">audit_log_untrustedstring</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_key\">audit_log_key</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" list=%d res=1\", <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#listnr\">listnr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Update inode info in audit rules based on filesystem event. */</span>", 
"static void <a class=\"id\" href=\"#audit_update_watch\">audit_update_watch</a>(struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#dname\">dname</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#ino\">ino</a>, unsigned <a class=\"id\" href=\"#invalidating\">invalidating</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#owatch\">owatch</a>, *<a class=\"id\" href=\"#nwatch\">nwatch</a>, *<a class=\"id\" href=\"#nextw\">nextw</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#r\">r</a>, *<a class=\"id\" href=\"#nextr\">nextr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#oentry\">oentry</a>, *<a class=\"id\" href=\"#nentry\">nentry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Run all of the watches on this parent looking for the one that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * matches the given dname */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#owatch\">owatch</a>, <a class=\"id\" href=\"#nextw\">nextw</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#watches\">watches</a>, <a class=\"id\" href=\"#wlist\">wlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_compare_dname_path\">audit_compare_dname_path</a>(<a class=\"id\" href=\"#dname\">dname</a>, <a class=\"id\" href=\"#owatch\">owatch</a>-><a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the update involves invalidating rules, do the inode-based</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * filtering now, so we don't omit records. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#invalidating\">invalidating</a> && !<a class=\"id\" href=\"#audit_dummy_context\">audit_dummy_context</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_filter_inodes\">audit_filter_inodes</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* updating ino will likely change which audit_hash_list we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * are on so we need a new watch for the new list */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nwatch\">nwatch</a> = <a class=\"id\" href=\"#audit_dupe_watch\">audit_dupe_watch</a>(<a class=\"id\" href=\"#owatch\">owatch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#nwatch\">nwatch</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_panic\">audit_panic</a>(\"error updating watch, skipping\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nwatch\">nwatch</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nwatch\">nwatch</a>-><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#ino\">ino</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#nextr\">nextr</a>, &amp;<a class=\"id\" href=\"#owatch\">owatch</a>-><a class=\"id\" href=\"#rules\">rules</a>, <a class=\"id\" href=\"#rlist\">rlist</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oentry\">oentry</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#r\">r</a>, struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a>, <a class=\"id\" href=\"#rule\">rule</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#oentry\">oentry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#rlist\">rlist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_rcu\">list_del_rcu</a>(&amp;<a class=\"id\" href=\"#oentry\">oentry</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nentry\">nentry</a> = <a class=\"id\" href=\"#audit_dupe_rule\">audit_dupe_rule</a>(&amp;<a class=\"id\" href=\"#oentry\">oentry</a>-><a class=\"id\" href=\"#rule\">rule</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#nentry\">nentry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#oentry\">oentry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_panic\">audit_panic</a>(\"error updating watch, removing\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#audit_hash_ino\">audit_hash_ino</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#ino\">ino</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * nentry-&gt;rule.watch == oentry-&gt;rule.watch so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we must drop that reference and set it to our</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * new watch.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_watch\">audit_put_watch</a>(<a class=\"id\" href=\"#nentry\">nentry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#watch\">watch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_watch\">audit_get_watch</a>(<a class=\"id\" href=\"#nwatch\">nwatch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nentry\">nentry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#nwatch\">nwatch</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#nentry\">nentry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#rlist\">rlist</a>, &amp;<a class=\"id\" href=\"#nwatch\">nwatch</a>-><a class=\"id\" href=\"#rules\">rules</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_rcu\">list_add_rcu</a>(&amp;<a class=\"id\" href=\"#nentry\">nentry</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#audit_inode_hash\">audit_inode_hash</a>[<a class=\"id\" href=\"#h\">h</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_replace\">list_replace</a>(&amp;<a class=\"id\" href=\"#oentry\">oentry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#list\">list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#nentry\">nentry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_watch_log_rule_change\">audit_watch_log_rule_change</a>(<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#owatch\">owatch</a>, \"updated rules\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#oentry\">oentry</a>-><a class=\"id\" href=\"#rcu\">rcu</a>, <a class=\"id\" href=\"#audit_free_rule_rcu\">audit_free_rule_rcu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_remove_watch\">audit_remove_watch</a>(<a class=\"id\" href=\"#owatch\">owatch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#add_watch_to_parent\">add_watch_to_parent</a>; <span class=\"comment\">/* event applies to a single watch */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#add_watch_to_parent\">add_watch_to_parent</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#nwatch\">nwatch</a>-><a class=\"id\" href=\"#wlist\">wlist</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#watches\">watches</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/* Remove all watches &amp; rules associated with a parent that is going away. */</span>", 
"static void <a class=\"id\" href=\"#audit_remove_parent_watches\">audit_remove_parent_watches</a>(struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#w\">w</a>, *<a class=\"id\" href=\"#nextw\">nextw</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#r\">r</a>, *<a class=\"id\" href=\"#nextr\">nextr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#w\">w</a>, <a class=\"id\" href=\"#nextw\">nextw</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#watches\">watches</a>, <a class=\"id\" href=\"#wlist\">wlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#nextr\">nextr</a>, &amp;<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#rules\">rules</a>, <a class=\"id\" href=\"#rlist\">rlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#r\">r</a>, struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a>, <a class=\"id\" href=\"#rule\">rule</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_watch_log_rule_change\">audit_watch_log_rule_change</a>(<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#w\">w</a>, \"remove rule\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#rlist\">rlist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_rcu\">list_del_rcu</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rcu\">rcu</a>, <a class=\"id\" href=\"#audit_free_rule_rcu\">audit_free_rule_rcu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_remove_watch\">audit_remove_watch</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_destroy_mark\">fsnotify_destroy_mark</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#mark\">mark</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Get path information necessary for adding watches. */</span>", 
"static int <a class=\"id\" href=\"#audit_get_nd\">audit_get_nd</a>(char *<a class=\"id\" href=\"#path\">path</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> **<a class=\"id\" href=\"#ndp\">ndp</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> **<a class=\"id\" href=\"#ndw\">ndw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#ndparent\">ndparent</a>, *<a class=\"id\" href=\"#ndwatch\">ndwatch</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndparent\">ndparent</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#ndparent\">ndparent</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ndparent\">ndparent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndwatch\">ndwatch</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#ndwatch\">ndwatch</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ndwatch\">ndwatch</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ndparent\">ndparent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#path_lookup\">path_lookup</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>, <a class=\"id\" href=\"#ndparent\">ndparent</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ndparent\">ndparent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ndwatch\">ndwatch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#path_lookup\">path_lookup</a>(<a class=\"id\" href=\"#path\">path</a>, 0, <a class=\"id\" href=\"#ndwatch\">ndwatch</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ndwatch\">ndwatch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndwatch\">ndwatch</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ndp\">ndp</a> = <a class=\"id\" href=\"#ndparent\">ndparent</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ndw\">ndw</a> = <a class=\"id\" href=\"#ndwatch\">ndwatch</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Release resources used for watch path information. */</span>", 
"static void <a class=\"id\" href=\"#audit_put_nd\">audit_put_nd</a>(struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#ndp\">ndp</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#ndw\">ndw</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ndp\">ndp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#ndp\">ndp</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ndp\">ndp</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ndw\">ndw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#ndw\">ndw</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ndw\">ndw</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Associate the given rule with an existing parent.</span>", 
"<span class=\"comment\"> * Caller must hold audit_filter_mutex. */</span>", 
"static void <a class=\"id\" href=\"#audit_add_to_parent\">audit_add_to_parent</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#krule\">krule</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#w\">w</a>, *<a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#watch\">watch</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#watch_found\">watch_found</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#mutex_is_locked\">mutex_is_locked</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#w\">w</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#watches\">watches</a>, <a class=\"id\" href=\"#wlist\">wlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#path\">path</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#watch_found\">watch_found</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* put krule's and initial refs to temporary watch */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_watch\">audit_put_watch</a>(<a class=\"id\" href=\"#watch\">watch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_watch\">audit_put_watch</a>(<a class=\"id\" href=\"#watch\">watch</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_watch\">audit_get_watch</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#w\">w</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#watch_found\">watch_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_parent\">audit_get_parent</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#wlist\">wlist</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#watches\">watches</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#rlist\">rlist</a>, &amp;<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#rules\">rules</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Find a matching watch entry, or add this one.</span>", 
"<span class=\"comment\"> * Caller must hold audit_filter_mutex. */</span>", 
"int <a class=\"id\" href=\"#audit_add_watch\">audit_add_watch</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#krule\">krule</a>, struct <a class=\"id\" href=\"#list_head\">list_head</a> **<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#watch\">watch</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#ndp\">ndp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#ndw\">ndw</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Avoid calling path_lookup under audit_filter_mutex. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#audit_get_nd\">audit_get_nd</a>(<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#ndp\">ndp</a>, &amp;<a class=\"id\" href=\"#ndw\">ndw</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* caller expects mutex locked */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* update watch filter fields */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ndw\">ndw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ndw\">ndw</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_dev\">s_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#ndw\">ndw</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* either find an old parent or attach a new one */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#audit_find_parent\">audit_find_parent</a>(<a class=\"id\" href=\"#ndp\">ndp</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#audit_init_parent\">audit_init_parent</a>(<a class=\"id\" href=\"#ndp\">ndp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#parent\">parent</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_add_to_parent\">audit_add_to_parent</a>(<a class=\"id\" href=\"#krule\">krule</a>, <a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* match get in audit_find_parent or audit_init_parent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_put_parent\">audit_put_parent</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#audit_hash_ino\">audit_hash_ino</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#audit_inode_hash\">audit_inode_hash</a>[<a class=\"id\" href=\"#h\">h</a>];", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_put_nd\">audit_put_nd</a>(<a class=\"id\" href=\"#ndp\">ndp</a>, <a class=\"id\" href=\"#ndw\">ndw</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* NULL args OK */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"}", 
"", 
"void <a class=\"id\" href=\"#audit_remove_watch_rule\">audit_remove_watch_rule</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#krule\">krule</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#watch\">watch</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#rlist\">rlist</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#watch\">watch</a>-><a class=\"id\" href=\"#rules\">rules</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_remove_watch\">audit_remove_watch</a>(<a class=\"id\" href=\"#watch\">watch</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#watches\">watches</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_parent\">audit_get_parent</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_destroy_mark\">fsnotify_destroy_mark</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#mark\">mark</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_parent\">audit_put_parent</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#audit_watch_should_send_event\">audit_watch_should_send_event</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#inode_mark\">inode_mark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#vfsmount_mark\">vfsmount_mark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a>, void *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#data_type\">data_type</a>)", 
"{", 
"       return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Update watch data in audit rules based on fsnotify events. */</span>", 
"static int <a class=\"id\" href=\"#audit_watch_handle_event\">audit_watch_handle_event</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#inode_mark\">inode_mark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#vfsmount_mark\">vfsmount_mark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#fsnotify_event\">fsnotify_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#dname\">dname</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#file_name\">file_name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a> *<a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#inode_mark\">inode_mark</a>, struct <a class=\"id\" href=\"#audit_parent\">audit_parent</a>, <a class=\"id\" href=\"#mark\">mark</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#group\">group</a> != <a class=\"id\" href=\"#audit_watch_group\">audit_watch_group</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#data_type\">data_type</a>) {", 
"<span class=\"ts\"/>case (<a class=\"id\" href=\"#FSNOTIFY_EVENT_PATH\">FSNOTIFY_EVENT_PATH</a>):", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case (<a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>):", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; (<a class=\"id\" href=\"#FS_CREATE\">FS_CREATE</a>|<a class=\"id\" href=\"#FS_MOVED_TO\">FS_MOVED_TO</a>) && <a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_update_watch\">audit_update_watch</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#dname\">dname</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_dev\">s_dev</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, 0);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#mask\">mask</a> &amp; (<a class=\"id\" href=\"#FS_DELETE\">FS_DELETE</a>|<a class=\"id\" href=\"#FS_MOVED_FROM\">FS_MOVED_FROM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_update_watch\">audit_update_watch</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#dname\">dname</a>, (<a class=\"id\" href=\"#dev_t\">dev_t</a>)-1, (unsigned long)-1, 1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#mask\">mask</a> &amp; (<a class=\"id\" href=\"#FS_DELETE_SELF\">FS_DELETE_SELF</a>|<a class=\"id\" href=\"#FS_UNMOUNT\">FS_UNMOUNT</a>|<a class=\"id\" href=\"#FS_MOVE_SELF\">FS_MOVE_SELF</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_remove_parent_watches\">audit_remove_parent_watches</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#fsnotify_ops\">fsnotify_ops</a> <a class=\"id\" href=\"#audit_watch_fsnotify_ops\">audit_watch_fsnotify_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#should_send_event\">should_send_event</a> = <span class=\"ts\"/><a class=\"id\" href=\"#audit_watch_should_send_event\">audit_watch_should_send_event</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handle_event\">handle_event</a> = <span class=\"ts\"/><a class=\"id\" href=\"#audit_watch_handle_event\">audit_watch_handle_event</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#free_group_priv\">free_group_priv</a> = <span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freeing_mark\">freeing_mark</a> = <span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#free_event_priv\">free_event_priv</a> = <span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#audit_watch_init\">audit_watch_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_watch_group\">audit_watch_group</a> = <a class=\"id\" href=\"#fsnotify_alloc_group\">fsnotify_alloc_group</a>(&amp;<a class=\"id\" href=\"#audit_watch_fsnotify_ops\">audit_watch_fsnotify_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#audit_watch_group\">audit_watch_group</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_watch_group\">audit_watch_group</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_panic\">audit_panic</a>(\"cannot create audit fsnotify group\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#audit_watch_init\">audit_watch_init</a>);", 
];
xr_frag_insert('l/a6/d47e1b465c944825ca0be002a1fb440760506e.xr', __xr_tmp);
