var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Definitions for the TCP protocol.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version:<span class=\"ts\"/>@(#)tcp.h<span class=\"ts\"/>1.0.2<span class=\"ts\"/>04/28/93</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author:<span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_TCP_H\">_LINUX_TCP_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_TCP_H\">_LINUX_TCP_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#byteorder\">byteorder</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a><span class=\"ts\"/><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a><span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#ack_seq\">ack_seq</a>;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__LITTLE_ENDIAN_BITFIELD\">__LITTLE_ENDIAN_BITFIELD</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#res1\">res1</a>:4,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#doff\">doff</a>:4,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fin\">fin</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#syn\">syn</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rst\">rst</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psh\">psh</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ack\">ack</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#urg\">urg</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ece\">ece</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cwr\">cwr</a>:1;", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__BIG_ENDIAN_BITFIELD\">__BIG_ENDIAN_BITFIELD</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#doff\">doff</a>:4,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res1\">res1</a>:4,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cwr\">cwr</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ece\">ece</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#urg\">urg</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ack\">ack</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psh\">psh</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rst\">rst</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#syn\">syn</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fin\">fin</a>:1;", 
"#else", 
"#<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>\"Adjust your <asm/byteorder.h> defines\"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a><span class=\"ts\"/><a class=\"id\" href=\"#window\">window</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__sum16\">__sum16</a><span class=\"ts\"/><a class=\"id\" href=\"#check\">check</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a><span class=\"ts\"/><a class=\"id\" href=\"#urg_ptr\">urg_ptr</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The union cast uses a gcc extension to avoid aliasing problems</span>", 
"<span class=\"comment\"> *  (union is compatible to any of its members)</span>", 
"<span class=\"comment\"> *  This means this part of the code is -fstrict-aliasing safe now.</span>", 
"<span class=\"comment\"> */</span>", 
"union <a class=\"id\" href=\"#tcp_word_hdr\">tcp_word_hdr</a> { ", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> <a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#words\">words</a>[5];", 
"}; ", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tcp_flag_word\">tcp_flag_word</a>(<a class=\"id\" href=\"#tp\">tp</a>) ( ((union <a class=\"id\" href=\"#tcp_word_hdr\">tcp_word_hdr</a> *)(<a class=\"id\" href=\"#tp\">tp</a>))-><a class=\"id\" href=\"#words\">words</a> [3]) ", 
"", 
"enum { ", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_FLAG_CWR\">TCP_FLAG_CWR</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0x00800000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_FLAG_ECE\">TCP_FLAG_ECE</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0x00400000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_FLAG_URG\">TCP_FLAG_URG</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0x00200000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_FLAG_ACK\">TCP_FLAG_ACK</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0x00100000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_FLAG_PSH\">TCP_FLAG_PSH</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0x00080000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_FLAG_RST\">TCP_FLAG_RST</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0x00040000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_FLAG_SYN\">TCP_FLAG_SYN</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0x00020000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_FLAG_FIN\">TCP_FLAG_FIN</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0x00010000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_RESERVED_BITS\">TCP_RESERVED_BITS</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0x0F000000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_DATA_OFFSET\">TCP_DATA_OFFSET</a> = <a class=\"id\" href=\"#__cpu_to_be32\">__cpu_to_be32</a>(0xF0000000)", 
"}; ", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * TCP general constants</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_MSS_DEFAULT\">TCP_MSS_DEFAULT</a><span class=\"ts\"/><span class=\"ts\"/> 536U<span class=\"ts\"/><span class=\"comment\">/* IPv4 (RFC1122, RFC2581) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_MSS_DESIRED\">TCP_MSS_DESIRED</a><span class=\"ts\"/><span class=\"ts\"/>1220U<span class=\"ts\"/><span class=\"comment\">/* IPv6 (tunneled), EDNS0 (RFC3226) */</span>", 
"", 
"<span class=\"comment\">/* TCP socket options */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_NODELAY\">TCP_NODELAY</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* Turn off Nagle's algorithm. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_MAXSEG\">TCP_MAXSEG</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* Limit MSS */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_CORK\">TCP_CORK</a><span class=\"ts\"/><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* Never send partially complete segments */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_KEEPIDLE\">TCP_KEEPIDLE</a><span class=\"ts\"/><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* Start keeplives after this period */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_KEEPINTVL\">TCP_KEEPINTVL</a><span class=\"ts\"/><span class=\"ts\"/>5<span class=\"ts\"/><span class=\"comment\">/* Interval between keepalives */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_KEEPCNT\">TCP_KEEPCNT</a><span class=\"ts\"/><span class=\"ts\"/>6<span class=\"ts\"/><span class=\"comment\">/* Number of keepalives before death */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_SYNCNT\">TCP_SYNCNT</a><span class=\"ts\"/><span class=\"ts\"/>7<span class=\"ts\"/><span class=\"comment\">/* Number of SYN retransmits */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_LINGER2\">TCP_LINGER2</a><span class=\"ts\"/><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"comment\">/* Life time of orphaned FIN-WAIT-2 state */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_DEFER_ACCEPT\">TCP_DEFER_ACCEPT</a><span class=\"ts\"/>9<span class=\"ts\"/><span class=\"comment\">/* Wake up listener only when data arrive */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_WINDOW_CLAMP\">TCP_WINDOW_CLAMP</a><span class=\"ts\"/>10<span class=\"ts\"/><span class=\"comment\">/* Bound advertised window */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_INFO\">TCP_INFO</a><span class=\"ts\"/><span class=\"ts\"/>11<span class=\"ts\"/><span class=\"comment\">/* Information about this connection. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_QUICKACK\">TCP_QUICKACK</a><span class=\"ts\"/><span class=\"ts\"/>12<span class=\"ts\"/><span class=\"comment\">/* Block/reenable quick acks */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_CONGESTION\">TCP_CONGESTION</a><span class=\"ts\"/><span class=\"ts\"/>13<span class=\"ts\"/><span class=\"comment\">/* Congestion control algorithm */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_MD5SIG\">TCP_MD5SIG</a><span class=\"ts\"/><span class=\"ts\"/>14<span class=\"ts\"/><span class=\"comment\">/* TCP MD5 Signature (RFC2385) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_COOKIE_TRANSACTIONS\">TCP_COOKIE_TRANSACTIONS</a><span class=\"ts\"/>15<span class=\"ts\"/><span class=\"comment\">/* TCP Cookie Transactions */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_THIN_LINEAR_TIMEOUTS\">TCP_THIN_LINEAR_TIMEOUTS</a> 16      <span class=\"comment\">/* Use linear timeouts for thin streams*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_THIN_DUPACK\">TCP_THIN_DUPACK</a>         17      <span class=\"comment\">/* Fast retrans. after 1 dupack */</span>", 
"", 
"<span class=\"comment\">/* for TCP_INFO socket option */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPI_OPT_TIMESTAMPS\">TCPI_OPT_TIMESTAMPS</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPI_OPT_SACK\">TCPI_OPT_SACK</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPI_OPT_WSCALE\">TCPI_OPT_WSCALE</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPI_OPT_ECN\">TCPI_OPT_ECN</a><span class=\"ts\"/><span class=\"ts\"/>8", 
"", 
"enum <a class=\"id\" href=\"#tcp_ca_state\">tcp_ca_state</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a> = 0,", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPF_CA_Open\">TCPF_CA_Open</a><span class=\"ts\"/>(1<<<a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_CA_Disorder\">TCP_CA_Disorder</a> = 1,", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPF_CA_Disorder\">TCPF_CA_Disorder</a> (1<<<a class=\"id\" href=\"#TCP_CA_Disorder\">TCP_CA_Disorder</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_CA_CWR\">TCP_CA_CWR</a> = 2,", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPF_CA_CWR\">TCPF_CA_CWR</a><span class=\"ts\"/>(1<<<a class=\"id\" href=\"#TCP_CA_CWR\">TCP_CA_CWR</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_CA_Recovery\">TCP_CA_Recovery</a> = 3,", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPF_CA_Recovery\">TCPF_CA_Recovery</a> (1<<<a class=\"id\" href=\"#TCP_CA_Recovery\">TCP_CA_Recovery</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_CA_Loss\">TCP_CA_Loss</a> = 4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPF_CA_Loss\">TCPF_CA_Loss</a><span class=\"ts\"/>(1<<<a class=\"id\" href=\"#TCP_CA_Loss\">TCP_CA_Loss</a>)", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tcp_info\">tcp_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_state\">tcpi_state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_ca_state\">tcpi_ca_state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_retransmits\">tcpi_retransmits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_probes\">tcpi_probes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_backoff\">tcpi_backoff</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_options\">tcpi_options</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_snd_wscale\">tcpi_snd_wscale</a> : 4, <a class=\"id\" href=\"#tcpi_rcv_wscale\">tcpi_rcv_wscale</a> : 4;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_rto\">tcpi_rto</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_ato\">tcpi_ato</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_snd_mss\">tcpi_snd_mss</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_rcv_mss\">tcpi_rcv_mss</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_unacked\">tcpi_unacked</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_sacked\">tcpi_sacked</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_lost\">tcpi_lost</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_retrans\">tcpi_retrans</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_fackets\">tcpi_fackets</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Times. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_last_data_sent\">tcpi_last_data_sent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_last_ack_sent\">tcpi_last_ack_sent</a>;     <span class=\"comment\">/* Not remembered, sorry. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_last_data_recv\">tcpi_last_data_recv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_last_ack_recv\">tcpi_last_ack_recv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Metrics. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_pmtu\">tcpi_pmtu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_rcv_ssthresh\">tcpi_rcv_ssthresh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_rtt\">tcpi_rtt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_rttvar\">tcpi_rttvar</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_snd_ssthresh\">tcpi_snd_ssthresh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_snd_cwnd\">tcpi_snd_cwnd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_advmss\">tcpi_advmss</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_reordering\">tcpi_reordering</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_rcv_rtt\">tcpi_rcv_rtt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_rcv_space\">tcpi_rcv_space</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpi_total_retrans\">tcpi_total_retrans</a>;", 
"};", 
"", 
"<span class=\"comment\">/* for TCP_MD5SIG socket option */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_MD5SIG_MAXKEYLEN\">TCP_MD5SIG_MAXKEYLEN</a><span class=\"ts\"/>80", 
"", 
"struct <a class=\"id\" href=\"#tcp_md5sig\">tcp_md5sig</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#__kernel_sockaddr_storage\">__kernel_sockaddr_storage</a> <a class=\"id\" href=\"#tcpm_addr\">tcpm_addr</a>;<span class=\"ts\"/><span class=\"comment\">/* address associated */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#__tcpm_pad1\">__tcpm_pad1</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* zero */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpm_keylen\">tcpm_keylen</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* key length */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#__tcpm_pad2\">__tcpm_pad2</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* zero */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpm_key\">tcpm_key</a>[<a class=\"id\" href=\"#TCP_MD5SIG_MAXKEYLEN\">TCP_MD5SIG_MAXKEYLEN</a>];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* key (binary) */</span>", 
"};", 
"", 
"<span class=\"comment\">/* for TCP_COOKIE_TRANSACTIONS (TCPCT) socket option */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_COOKIE_MIN\">TCP_COOKIE_MIN</a><span class=\"ts\"/><span class=\"ts\"/> 8<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  64-bits */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_COOKIE_MAX\">TCP_COOKIE_MAX</a><span class=\"ts\"/><span class=\"ts\"/>16<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 128-bits */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_COOKIE_PAIR_SIZE\">TCP_COOKIE_PAIR_SIZE</a><span class=\"ts\"/>(2*<a class=\"id\" href=\"#TCP_COOKIE_MAX\">TCP_COOKIE_MAX</a>)", 
"", 
"<span class=\"comment\">/* Flags for both getsockopt and setsockopt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_COOKIE_IN_ALWAYS\">TCP_COOKIE_IN_ALWAYS</a><span class=\"ts\"/>(1 << 0)<span class=\"ts\"/><span class=\"comment\">/* Discard SYN without cookie */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_COOKIE_OUT_NEVER\">TCP_COOKIE_OUT_NEVER</a><span class=\"ts\"/>(1 << 1)<span class=\"ts\"/><span class=\"comment\">/* Prohibit outgoing cookies,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * supercedes everything. */</span>", 
"", 
"<span class=\"comment\">/* Flags for getsockopt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_S_DATA_IN\">TCP_S_DATA_IN</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 2)<span class=\"ts\"/><span class=\"comment\">/* Was data received? */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_S_DATA_OUT\">TCP_S_DATA_OUT</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 3)<span class=\"ts\"/><span class=\"comment\">/* Was data sent? */</span>", 
"", 
"<span class=\"comment\">/* TCP_COOKIE_TRANSACTIONS data */</span>", 
"struct <a class=\"id\" href=\"#tcp_cookie_transactions\">tcp_cookie_transactions</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpct_flags\">tcpct_flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* see above */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#__tcpct_pad1\">__tcpct_pad1</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* zero */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpct_cookie_desired\">tcpct_cookie_desired</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpct_s_data_desired\">tcpct_s_data_desired</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes of variable data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpct_used\">tcpct_used</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes in value */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#tcpct_value\">tcpct_value</a>[<a class=\"id\" href=\"#TCP_MSS_DEFAULT\">TCP_MSS_DEFAULT</a>];", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmaengine\">dmaengine</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#tcp_hdrlen\">tcp_hdrlen</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#doff\">doff</a> * 4;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#tcp_optlen\">tcp_optlen</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#doff\">doff</a> - 5) * 4;", 
"}", 
"", 
"<span class=\"comment\">/* This defines a selective acknowledgement block. */</span>", 
"struct <a class=\"id\" href=\"#tcp_sack_block_wire\">tcp_sack_block_wire</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#start_seq\">start_seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tcp_sack_block\">tcp_sack_block</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#start_seq\">start_seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> {", 
"<span class=\"comment\">/*<span class=\"ts\"/>PAWS/RTTM data<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a>;<span class=\"comment\">/* Time we stored ts_recent (for aging) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#ts_recent\">ts_recent</a>;<span class=\"ts\"/><span class=\"comment\">/* Time stamp to echo next<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rcv_tsval\">rcv_tsval</a>;<span class=\"ts\"/><span class=\"comment\">/* Time stamp value             <span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rcv_tsecr\">rcv_tsecr</a>;<span class=\"ts\"/><span class=\"comment\">/* Time stamp echo reply        <span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <span class=\"ts\"/><a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> : 1,<span class=\"ts\"/><span class=\"comment\">/* Saw TIMESTAMP on last packet<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a> : 1,<span class=\"ts\"/><span class=\"comment\">/* TIMESTAMP seen on SYN packet<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dsack\">dsack</a> : 1,<span class=\"ts\"/><span class=\"comment\">/* D-SACK is scheduled<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wscale_ok\">wscale_ok</a> : 1,<span class=\"ts\"/><span class=\"comment\">/* Wscale seen on SYN packet<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sack_ok\">sack_ok</a> : 4,<span class=\"ts\"/><span class=\"comment\">/* SACK seen on SYN packet<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snd_wscale\">snd_wscale</a> : 4,<span class=\"ts\"/><span class=\"comment\">/* Window scaling received from sender<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a> : 4;<span class=\"ts\"/><span class=\"comment\">/* Window scaling to send to receiver<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#cookie_plus\">cookie_plus</a>:6,<span class=\"ts\"/><span class=\"comment\">/* bytes in authenticator/cookie option<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cookie_out_never\">cookie_out_never</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cookie_in_always\">cookie_in_always</a>:1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#num_sacks\">num_sacks</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of SACK blocks<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><a class=\"id\" href=\"#user_mss\">user_mss</a>;<span class=\"ts\"/><span class=\"comment\">/* mss requested by user in ioctl<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><a class=\"id\" href=\"#mss_clamp\">mss_clamp</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal mss, negotiated at connection setup */</span>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_clear_options\">tcp_clear_options</a>(struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> *<a class=\"id\" href=\"#rx_opt\">rx_opt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a> = <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#sack_ok\">sack_ok</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#wscale_ok\">wscale_ok</a> = <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#snd_wscale\">snd_wscale</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#cookie_plus\">cookie_plus</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/* This is the max number of SACKS that we'll generate and process. It's safe</span>", 
"<span class=\"comment\"> * to increase this, although since:</span>", 
"<span class=\"comment\"> *   size = TCPOLEN_SACK_BASE_ALIGNED (4) + n * TCPOLEN_SACK_PERBLOCK (8)</span>", 
"<span class=\"comment\"> * only four options will fit in a standard TCP header */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_NUM_SACKS\">TCP_NUM_SACKS</a> 4", 
"", 
"struct <a class=\"id\" href=\"#tcp_cookie_values\">tcp_cookie_values</a>;", 
"struct <a class=\"id\" href=\"#tcp_request_sock_ops\">tcp_request_sock_ops</a>;", 
"", 
"struct <a class=\"id\" href=\"#tcp_request_sock\">tcp_request_sock</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> <span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Only used by TCP MD5 Signature so far. */</span>", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_request_sock_ops\">tcp_request_sock_ops</a> *<a class=\"id\" href=\"#af_specific\">af_specific</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snt_isn\">snt_isn</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#tcp_request_sock\">tcp_request_sock</a> *<a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(const struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#tcp_request_sock\">tcp_request_sock</a> *)<a class=\"id\" href=\"#req\">req</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* inet_connection_sock has to be the first member of tcp_sock */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a><span class=\"ts\"/><a class=\"id\" href=\"#inet_conn\">inet_conn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>;<span class=\"ts\"/><span class=\"comment\">/* Bytes of tcp header to send<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><a class=\"id\" href=\"#xmit_size_goal_segs\">xmit_size_goal_segs</a>; <span class=\"comment\">/* Goal for segmenting output packets */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Header prediction flags</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0x5?10 &lt;&lt; 16 + snd_wnd in net byte order</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#pred_flags\">pred_flags</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RFC793 variables by their proper names. This means you can</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>read the code and the spec side by side (and laugh ...)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>See RFC793 and RFC1122. The RFC writes these in capitals.</span>", 
"<span class=\"comment\"> */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>;<span class=\"ts\"/><span class=\"comment\">/* What we want to receive next <span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#copied_seq\">copied_seq</a>;<span class=\"ts\"/><span class=\"comment\">/* Head of yet unread data<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rcv_wup\">rcv_wup</a>;<span class=\"ts\"/><span class=\"comment\">/* rcv_nxt on last window update sent<span class=\"ts\"/>*/</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>;<span class=\"ts\"/><span class=\"comment\">/* Next sequence we send<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
" <span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_una\">snd_una</a>;<span class=\"ts\"/><span class=\"comment\">/* First byte we want an ack for<span class=\"ts\"/>*/</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_sml\">snd_sml</a>;<span class=\"ts\"/><span class=\"comment\">/* Last byte of the most recently transmitted small packet */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rcv_tstamp\">rcv_tstamp</a>;<span class=\"ts\"/><span class=\"comment\">/* timestamp of last received ACK (for keepalives) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#lsndtime\">lsndtime</a>;<span class=\"ts\"/><span class=\"comment\">/* timestamp of last sent data packet (for restart window) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Data for direct copy to user */</span>", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a><span class=\"ts\"/><a class=\"id\" href=\"#prequeue\">prequeue</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#iov\">iov</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memory\">memory</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* members for async copy */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_chan\">dma_chan</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dma_chan\">dma_chan</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wakeup\">wakeup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_pinned_list\">dma_pinned_list</a><span class=\"ts\"/>*<a class=\"id\" href=\"#pinned_list\">pinned_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_cookie_t\">dma_cookie_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_cookie\">dma_cookie</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#ucopy\">ucopy</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_wl1\">snd_wl1</a>;<span class=\"ts\"/><span class=\"comment\">/* Sequence for window update<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a>;<span class=\"ts\"/><span class=\"comment\">/* The window we expect to receive<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#max_window\">max_window</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal window ever seen from peer<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#mss_cache\">mss_cache</a>;<span class=\"ts\"/><span class=\"comment\">/* Cached effective mss, not including SACKS */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#window_clamp\">window_clamp</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal window to advertise<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rcv_ssthresh\">rcv_ssthresh</a>;<span class=\"ts\"/><span class=\"comment\">/* Current window clamp<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#frto_highmark\">frto_highmark</a>;<span class=\"ts\"/><span class=\"comment\">/* snd_nxt when RTO occurred */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><a class=\"id\" href=\"#advmss\">advmss</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Advertised MSS<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#frto_counter\">frto_counter</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of new acks after RTO */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#nonagle\">nonagle</a>     : 4,<span class=\"comment\">/* Disable Nagle algorithm?             */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thin_lto\">thin_lto</a>    : 1,<span class=\"comment\">/* Use linear timeouts for thin streams */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thin_dupack\">thin_dupack</a> : 1,<span class=\"comment\">/* Fast retransmit on first dupack      */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unused\">unused</a>      : 2;", 
"", 
"<span class=\"comment\">/* RTT measurement */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#srtt\">srtt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* smoothed round trip time &lt;&lt; 3<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#mdev\">mdev</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* medium deviation<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#mdev_max\">mdev_max</a>;<span class=\"ts\"/><span class=\"comment\">/* maximal mdev for the last rtt period<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rttvar\">rttvar</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* smoothed mdev_max<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rtt_seq\">rtt_seq</a>;<span class=\"ts\"/><span class=\"comment\">/* sequence number to update rttvar<span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#packets_out\">packets_out</a>;<span class=\"ts\"/><span class=\"comment\">/* Packets which are \"in flight\"<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#retrans_out\">retrans_out</a>;<span class=\"ts\"/><span class=\"comment\">/* Retransmitted packets out<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><a class=\"id\" href=\"#urg_data\">urg_data</a>;<span class=\"ts\"/><span class=\"comment\">/* Saved octet of OOB data and control flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#ecn_flags\">ecn_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* ECN status bits.<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#reordering\">reordering</a>;<span class=\"ts\"/><span class=\"comment\">/* Packet reordering metric.<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_up\">snd_up</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Urgent pointer<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#keepalive_probes\">keepalive_probes</a>; <span class=\"comment\">/* num of allowed keep alive probes<span class=\"ts\"/>*/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *      Options received (usually on last packet, some only on SYN packets).</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> <a class=\"id\" href=\"#rx_opt\">rx_opt</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Slow start and congestion control (see also Nagle, and Karn &amp; Partridge)</span>", 
"<span class=\"comment\"> */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a>;<span class=\"ts\"/><span class=\"comment\">/* Slow start size threshold<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>;<span class=\"ts\"/><span class=\"comment\">/* Sending congestion window<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_cwnd_cnt\">snd_cwnd_cnt</a>;<span class=\"ts\"/><span class=\"comment\">/* Linear increase counter<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_cwnd_clamp\">snd_cwnd_clamp</a>; <span class=\"comment\">/* Do not allow snd_cwnd to grow above this */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_cwnd_used\">snd_cwnd_used</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#snd_cwnd_stamp\">snd_cwnd_stamp</a>;", 
"", 
" <span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>;<span class=\"ts\"/><span class=\"comment\">/* Current receiver window<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#write_seq\">write_seq</a>;<span class=\"ts\"/><span class=\"comment\">/* Tail(+1) of data held in tcp send buffer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#pushed_seq\">pushed_seq</a>;<span class=\"ts\"/><span class=\"comment\">/* Last pushed seq, required to talk to windows */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#lost_out\">lost_out</a>;<span class=\"ts\"/><span class=\"comment\">/* Lost packets<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#sacked_out\">sacked_out</a>;<span class=\"ts\"/><span class=\"comment\">/* SACK'd packets<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#fackets_out\">fackets_out</a>;<span class=\"ts\"/><span class=\"comment\">/* FACK'd packets<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tso_deferred\">tso_deferred</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#bytes_acked\">bytes_acked</a>;<span class=\"ts\"/><span class=\"comment\">/* Appropriate Byte Counting - RFC3465 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* from STCP, retrans queue hinting */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a>* <a class=\"id\" href=\"#lost_skb_hint\">lost_skb_hint</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#scoreboard_skb_hint\">scoreboard_skb_hint</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#retransmit_skb_hint\">retransmit_skb_hint</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a><span class=\"ts\"/><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>; <span class=\"comment\">/* Out of order segments go here */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SACKs data, these 2 need to be together (see tcp_build_and_update_options) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sack_block\">tcp_sack_block</a> <a class=\"id\" href=\"#duplicate_sack\">duplicate_sack</a>[1]; <span class=\"comment\">/* D-SACK block */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sack_block\">tcp_sack_block</a> <a class=\"id\" href=\"#selective_acks\">selective_acks</a>[4]; <span class=\"comment\">/* The SACKS themselves*/</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sack_block\">tcp_sack_block</a> <a class=\"id\" href=\"#recv_sack_cache\">recv_sack_cache</a>[4];", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#highest_sack\">highest_sack</a>;   <span class=\"comment\">/* highest skb with SACK received</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (validity guaranteed only if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * sacked_out &gt; 0)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>int     <a class=\"id\" href=\"#lost_cnt_hint\">lost_cnt_hint</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>     <a class=\"id\" href=\"#retransmit_high\">retransmit_high</a>;<span class=\"ts\"/><span class=\"comment\">/* L-bits may be on up to this seqno */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#lost_retrans_low\">lost_retrans_low</a>;<span class=\"ts\"/><span class=\"comment\">/* Sent seq after any rxmit (lowest) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#prior_ssthresh\">prior_ssthresh</a>; <span class=\"comment\">/* ssthresh saved at recovery start<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#high_seq\">high_seq</a>;<span class=\"ts\"/><span class=\"comment\">/* snd_nxt at onset of congestion<span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#retrans_stamp\">retrans_stamp</a>;<span class=\"ts\"/><span class=\"comment\">/* Timestamp of the last retransmit,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * also used in SYN-SENT to remember stamp of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the first SYN. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#undo_marker\">undo_marker</a>;<span class=\"ts\"/><span class=\"comment\">/* tracking retrans started here. */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#undo_retrans\">undo_retrans</a>;<span class=\"ts\"/><span class=\"comment\">/* number of undoable retransmissions. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#total_retrans\">total_retrans</a>;<span class=\"ts\"/><span class=\"comment\">/* Total retransmits for entire connection */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#urg_seq\">urg_seq</a>;<span class=\"ts\"/><span class=\"comment\">/* Seq of received urgent pointer */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#keepalive_time\">keepalive_time</a>;<span class=\"ts\"/>  <span class=\"comment\">/* time before keep alive takes place */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#keepalive_intvl\">keepalive_intvl</a>;  <span class=\"comment\">/* time interval between keep alive probes */</span>", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#linger2\">linger2</a>;", 
"", 
"<span class=\"comment\">/* Receiver side RTT estimation */</span>", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#rtt\">rtt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#time\">time</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#rcv_rtt_est\">rcv_rtt_est</a>;", 
"", 
"<span class=\"comment\">/* Receiver queue space */</span>", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#time\">time</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#rcvq_space\">rcvq_space</a>;", 
"", 
"<span class=\"comment\">/* TCP-specific MTU probe information. */</span>", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#probe_seq_start\">probe_seq_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#probe_seq_end\">probe_seq_end</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#mtu_probe\">mtu_probe</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"comment\">/* TCP AF-Specific parts; only used by MD5 Signature support so far */</span>", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_sock_af_ops\">tcp_sock_af_ops</a><span class=\"ts\"/>*<a class=\"id\" href=\"#af_specific\">af_specific</a>;", 
"", 
"<span class=\"comment\">/* TCP MD5 Signature Option information */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_info\">tcp_md5sig_info</a><span class=\"ts\"/>*<a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* When the cookie options are generated and exchanged, then this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * object holds a reference to them (cookie_values-&gt;kref).  Also</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * contains related tcp_cookie_transactions fields.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_cookie_values\">tcp_cookie_values</a>  *<a class=\"id\" href=\"#cookie_values\">cookie_values</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *)<a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#tcp_timewait_sock\">tcp_timewait_sock</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> <a class=\"id\" href=\"#tw_sk\">tw_sk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tw_snd_nxt\">tw_snd_nxt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tw_rcv_wnd\">tw_rcv_wnd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a>;", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tw_md5_keylen\">tw_md5_keylen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tw_md5_key\">tw_md5_key</a>[<a class=\"id\" href=\"#TCP_MD5SIG_MAXKEYLEN\">TCP_MD5SIG_MAXKEYLEN</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Few sockets in timewait have cookies; in that case, then this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * object holds a reference to them (tw_cookie_values-&gt;kref).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_cookie_values\">tcp_cookie_values</a>  *<a class=\"id\" href=\"#tw_cookie_values\">tw_cookie_values</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#tcp_timewait_sock\">tcp_timewait_sock</a> *<a class=\"id\" href=\"#tcp_twsk\">tcp_twsk</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#tcp_timewait_sock\">tcp_timewait_sock</a> *)<a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _LINUX_TCP_H */</span>", 
];
xr_frag_insert('l/a6/dc030f1a63f7bbcbc81909dce40a93011501d8.xr', __xr_tmp);
