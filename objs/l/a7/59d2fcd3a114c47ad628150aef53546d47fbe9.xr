var __xr_tmp = [
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#devname\">devname</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Register with generic device framework. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#device_register\">device_register</a>(&amp;<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(&amp;<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_nodename\">dev_attr_nodename</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_unregister\">fail_unregister</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(&amp;<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_devtype\">dev_attr_devtype</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_remove_nodename\">fail_remove_nodename</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(&amp;<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_modalias\">dev_attr_modalias</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_remove_devtype\">fail_remove_devtype</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#fail_remove_devtype\">fail_remove_devtype</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(&amp;<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_devtype\">dev_attr_devtype</a>);", 
"<a class=\"id\" href=\"#fail_remove_nodename\">fail_remove_nodename</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(&amp;<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_nodename\">dev_attr_nodename</a>);", 
"<a class=\"id\" href=\"#fail_unregister\">fail_unregister</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(&amp;<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#xendev\">xendev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/* device/&lt;typename&gt;/&lt;name&gt; */</span>", 
"static int <a class=\"id\" href=\"#xenbus_probe_frontend\">xenbus_probe_frontend</a>(const char *<a class=\"id\" href=\"#type\">type</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#nodename\">nodename</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nodename\">nodename</a> = <a class=\"id\" href=\"#kasprintf\">kasprintf</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, \"%s/%s/%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#xenbus_frontend\">xenbus_frontend</a>.<a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nodename\">nodename</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"%s\", <a class=\"id\" href=\"#nodename\">nodename</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xenbus_probe_node\">xenbus_probe_node</a>(&amp;<a class=\"id\" href=\"#xenbus_frontend\">xenbus_frontend</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#nodename\">nodename</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#nodename\">nodename</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xenbus_probe_device_type\">xenbus_probe_device_type</a>(struct <a class=\"id\" href=\"#xen_bus_type\">xen_bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, const char *<a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>char **<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dir_n\">dir_n</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#xenbus_directory\">xenbus_directory</a>(<a class=\"id\" href=\"#XBT_NIL\">XBT_NIL</a>, <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#type\">type</a>, &amp;<a class=\"id\" href=\"#dir_n\">dir_n</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dir\">dir</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dir_n\">dir_n</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#probe\">probe</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#dir\">dir</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xenbus_probe_devices\">xenbus_probe_devices</a>(struct <a class=\"id\" href=\"#xen_bus_type\">xen_bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>char **<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#dir_n\">dir_n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#xenbus_directory\">xenbus_directory</a>(<a class=\"id\" href=\"#XBT_NIL\">XBT_NIL</a>, <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#root\">root</a>, \"\", &amp;<a class=\"id\" href=\"#dir_n\">dir_n</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dir\">dir</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dir_n\">dir_n</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xenbus_probe_device_type\">xenbus_probe_device_type</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dir\">dir</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#char_count\">char_count</a>(const char *<a class=\"id\" href=\"#str\">str</a>, char <a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#str\">str</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#str\">str</a>[<a class=\"id\" href=\"#i\">i</a>] == <a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>++;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#strsep_len\">strsep_len</a>(const char *<a class=\"id\" href=\"#str\">str</a>, char <a class=\"id\" href=\"#c\">c</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#str\">str</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#str\">str</a>[<a class=\"id\" href=\"#i\">i</a>] == <a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#len\">len</a> == 0) ? <a class=\"id\" href=\"#i\">i</a> : -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#xenbus_dev_changed\">xenbus_dev_changed</a>(const char *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#xen_bus_type\">xen_bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#exists\">exists</a>, <a class=\"id\" href=\"#rootlen\">rootlen</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#XEN_BUS_ID_SIZE\">XEN_BUS_ID_SIZE</a>];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#root\">root</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#char_count\">char_count</a>(<a class=\"id\" href=\"#node\">node</a>, '/') &lt; 2)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exists\">exists</a> = <a class=\"id\" href=\"#xenbus_exists\">xenbus_exists</a>(<a class=\"id\" href=\"#XBT_NIL\">XBT_NIL</a>, <a class=\"id\" href=\"#node\">node</a>, \"\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#exists\">exists</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xenbus_cleanup_devices\">xenbus_cleanup_devices</a>(<a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* backend/&lt;type&gt;/... or device/&lt;type&gt;/... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#node\">node</a>, '/') + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#XEN_BUS_ID_SIZE\">XEN_BUS_ID_SIZE</a>, \"%.*s\", (int)<a class=\"id\" href=\"#strcspn\">strcspn</a>(<a class=\"id\" href=\"#p\">p</a>, \"/\"), <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#XEN_BUS_ID_SIZE\">XEN_BUS_ID_SIZE</a>-1] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rootlen\">rootlen</a> = <a class=\"id\" href=\"#strsep_len\">strsep_len</a>(<a class=\"id\" href=\"#node\">node</a>, '/', <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#levels\">levels</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rootlen\">rootlen</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#kasprintf\">kasprintf</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, \"%.*s\", <a class=\"id\" href=\"#rootlen\">rootlen</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#root\">root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#xenbus_device_find\">xenbus_device_find</a>(<a class=\"id\" href=\"#root\">root</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xenbus_probe_node\">xenbus_probe_node</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#xenbus_dev_changed\">xenbus_dev_changed</a>);", 
"", 
"static void <a class=\"id\" href=\"#frontend_changed\">frontend_changed</a>(struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const char **<a class=\"id\" href=\"#vec\">vec</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xenbus_dev_changed\">xenbus_dev_changed</a>(<a class=\"id\" href=\"#vec\">vec</a>[<a class=\"id\" href=\"#XS_WATCH_PATH\">XS_WATCH_PATH</a>], &amp;<a class=\"id\" href=\"#xenbus_frontend\">xenbus_frontend</a>);", 
"}", 
"", 
"<span class=\"comment\">/* We watch for devices appearing and vanishing. */</span>", 
"static struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> <a class=\"id\" href=\"#fe_watch\">fe_watch</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#node\">node</a> = \"device\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#frontend_changed\">frontend_changed</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#xenbus_dev_suspend\">xenbus_dev_suspend</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#xdev\">xdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#to_xenbus_driver\">to_xenbus_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdev\">xdev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend\">suspend</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend\">suspend</a>(<a class=\"id\" href=\"#xdev\">xdev</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"xenbus: suspend %s failed: %i\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xenbus_dev_resume\">xenbus_dev_resume</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#xdev\">xdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#to_xenbus_driver\">to_xenbus_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdev\">xdev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#talk_to_otherend\">talk_to_otherend</a>(<a class=\"id\" href=\"#xdev\">xdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"xenbus: resume (talk_to_otherend) %s failed: %i\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xdev\">xdev</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#XenbusStateInitialising\">XenbusStateInitialising</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#resume\">resume</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#resume\">resume</a>(<a class=\"id\" href=\"#xdev\">xdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"xenbus: resume %s failed: %i\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#watch_otherend\">watch_otherend</a>(<a class=\"id\" href=\"#xdev\">xdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"xenbus_probe: resume (watch_otherend) %s failed: \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%d.\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* A flag to determine if xenstored is 'ready' (i.e. has started) */</span>", 
"int <a class=\"id\" href=\"#xenstored_ready\">xenstored_ready</a> = 0;", 
"", 
"", 
"int <a class=\"id\" href=\"#register_xenstore_notifier\">register_xenstore_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xenstored_ready\">xenstored_ready</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#nb\">nb</a>-><a class=\"id\" href=\"#notifier_call\">notifier_call</a>(<a class=\"id\" href=\"#nb\">nb</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_chain_register\">blocking_notifier_chain_register</a>(&amp;<a class=\"id\" href=\"#xenstore_chain\">xenstore_chain</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#register_xenstore_notifier\">register_xenstore_notifier</a>);", 
"", 
"void <a class=\"id\" href=\"#unregister_xenstore_notifier\">unregister_xenstore_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_chain_unregister\">blocking_notifier_chain_unregister</a>(&amp;<a class=\"id\" href=\"#xenstore_chain\">xenstore_chain</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#unregister_xenstore_notifier\">unregister_xenstore_notifier</a>);", 
"", 
"void <a class=\"id\" href=\"#xenbus_probe\">xenbus_probe</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#unused\">unused</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xenstored_ready\">xenstored_ready</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Enumerate devices in xenstore and watch for changes. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xenbus_probe_devices\">xenbus_probe_devices</a>(&amp;<a class=\"id\" href=\"#xenbus_frontend\">xenbus_frontend</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_xenbus_watch\">register_xenbus_watch</a>(&amp;<a class=\"id\" href=\"#fe_watch\">fe_watch</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xenbus_backend_probe_and_watch\">xenbus_backend_probe_and_watch</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Notify others that xenstore is up */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#xenstore_chain\">xenstore_chain</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#xenbus_probe\">xenbus_probe</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xenbus_probe_initcall\">xenbus_probe_initcall</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xen_domain\">xen_domain</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_initial_domain\">xen_initial_domain</a>() || <a class=\"id\" href=\"#xen_hvm_domain\">xen_hvm_domain</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xenbus_probe\">xenbus_probe</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#xenbus_probe_initcall\">xenbus_probe_initcall</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xenbus_init\">xenbus_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xen_domain\">xen_domain</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_error\">out_error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Register ourselves with the kernel bus subsystem */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#bus_register\">bus_register</a>(&amp;<a class=\"id\" href=\"#xenbus_frontend\">xenbus_frontend</a>.<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_error\">out_error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xenbus_backend_bus_register\">xenbus_backend_bus_register</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unreg_front\">out_unreg_front</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Domain0 doesn't have a store_evtchn or store_mfn yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_initial_domain\">xen_initial_domain</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* dom0 not yet supported */</span>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_hvm_domain\">xen_hvm_domain</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#v\">v</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#hvm_get_parameter\">hvm_get_parameter</a>(<a class=\"id\" href=\"#HVM_PARAM_STORE_EVTCHN\">HVM_PARAM_STORE_EVTCHN</a>, &amp;<a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_error\">out_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_store_evtchn\">xen_store_evtchn</a> = (int)<a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#hvm_get_parameter\">hvm_get_parameter</a>(<a class=\"id\" href=\"#HVM_PARAM_STORE_PFN\">HVM_PARAM_STORE_PFN</a>, &amp;<a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_error\">out_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_store_mfn\">xen_store_mfn</a> = (unsigned long)<a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_store_interface\">xen_store_interface</a> = <a class=\"id\" href=\"#ioremap\">ioremap</a>(<a class=\"id\" href=\"#xen_store_mfn\">xen_store_mfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_store_evtchn\">xen_store_evtchn</a> = <a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#store_evtchn\">store_evtchn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_store_mfn\">xen_store_mfn</a> = <a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#store_mfn\">store_mfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_store_interface\">xen_store_interface</a> = <a class=\"id\" href=\"#mfn_to_virt\">mfn_to_virt</a>(<a class=\"id\" href=\"#xen_store_mfn\">xen_store_mfn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xenstored_ready\">xenstored_ready</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize the interface to xenstore. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xs_init\">xs_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"XENBUS: Error initializing xenstore comms: %i\\n\", <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unreg_back\">out_unreg_back</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XEN_COMPAT_XENFS\">CONFIG_XEN_COMPAT_XENFS</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Create xenfs mountpoint in /proc for compatibility with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * utilities that expect to find \"xenbus\" under \"/proc/xen\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_mkdir\">proc_mkdir</a>(\"xen\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"  <a class=\"id\" href=\"#out_unreg_back\">out_unreg_back</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xenbus_backend_bus_unregister\">xenbus_backend_bus_unregister</a>();", 
"", 
"  <a class=\"id\" href=\"#out_unreg_front\">out_unreg_front</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_unregister\">bus_unregister</a>(&amp;<a class=\"id\" href=\"#xenbus_frontend\">xenbus_frontend</a>.<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"  <a class=\"id\" href=\"#out_error\">out_error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#postcore_initcall\">postcore_initcall</a>(<a class=\"id\" href=\"#xenbus_init\">xenbus_init</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"static int <a class=\"id\" href=\"#is_device_connecting\">is_device_connecting</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#xendev\">xendev</a> = <a class=\"id\" href=\"#to_xenbus_device\">to_xenbus_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#xendrv\">xendrv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A device with no driver will never connect. We care only about</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * devices which should currently be in the process of connecting.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Is this search limited to a particular driver? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> != <a class=\"id\" href=\"#drv\">drv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xendrv\">xendrv</a> = <a class=\"id\" href=\"#to_xenbus_driver\">to_xenbus_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#state\">state</a> &lt; <a class=\"id\" href=\"#XenbusStateConnected\">XenbusStateConnected</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#XenbusStateConnected\">XenbusStateConnected</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#xendrv\">xendrv</a>-><a class=\"id\" href=\"#is_ready\">is_ready</a> && !<a class=\"id\" href=\"#xendrv\">xendrv</a>-><a class=\"id\" href=\"#is_ready\">is_ready</a>(<a class=\"id\" href=\"#xendev\">xendev</a>)));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#exists_connecting_device\">exists_connecting_device</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bus_for_each_dev\">bus_for_each_dev</a>(&amp;<a class=\"id\" href=\"#xenbus_frontend\">xenbus_frontend</a>.<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_device_connecting\">is_device_connecting</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#print_device_status\">print_device_status</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#xendev\">xendev</a> = <a class=\"id\" href=\"#to_xenbus_device\">to_xenbus_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Is this operation limited to a particular driver? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> != <a class=\"id\" href=\"#drv\">drv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Information only: is this too noisy? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"XENBUS: Device with no driver: %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#nodename\">nodename</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#state\">state</a> &lt; <a class=\"id\" href=\"#XenbusStateConnected\">XenbusStateConnected</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#xenbus_state\">xenbus_state</a> <a class=\"id\" href=\"#rstate\">rstate</a> = <a class=\"id\" href=\"#XenbusStateUnknown\">XenbusStateUnknown</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#otherend\">otherend</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rstate\">rstate</a> = <a class=\"id\" href=\"#xenbus_read_driver_state\">xenbus_read_driver_state</a>(<a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#otherend\">otherend</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"XENBUS: Timeout connecting \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"to device: %s (local state %d, remote state %d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#nodename\">nodename</a>, <a class=\"id\" href=\"#xendev\">xendev</a>-><a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#rstate\">rstate</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* We only wait for device setup after most initcalls have run. */</span>", 
"static int <a class=\"id\" href=\"#ready_to_wait_for_devices\">ready_to_wait_for_devices</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * On a 5-minute timeout, wait for all devices currently configured.  We need</span>", 
"<span class=\"comment\"> * to do this to guarantee that the filesystems and / or network devices</span>", 
"<span class=\"comment\"> * needed for boot are available, before we can allow the boot to proceed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This needs to be on a late_initcall, to happen after the frontend device</span>", 
"<span class=\"comment\"> * drivers have been initialised, but before the root fs is mounted.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * A possible improvement here would be to have the tools add a per-device</span>", 
"<span class=\"comment\"> * flag to the store entry, indicating whether it is needed at boot time.</span>", 
"<span class=\"comment\"> * This would allow people who knew what they were doing to accelerate their</span>", 
"<span class=\"comment\"> * boot slightly, but of course needs tools or manual intervention to set up</span>", 
"<span class=\"comment\"> * those flags correctly.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#wait_for_devices\">wait_for_devices</a>(struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#xendrv\">xendrv</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#xendrv\">xendrv</a> ? &amp;<a class=\"id\" href=\"#xendrv\">xendrv</a>-><a class=\"id\" href=\"#driver\">driver</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#seconds_waited\">seconds_waited</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ready_to_wait_for_devices\">ready_to_wait_for_devices</a> || !<a class=\"id\" href=\"#xen_domain\">xen_domain</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#exists_connecting_device\">exists_connecting_device</a>(<a class=\"id\" href=\"#drv\">drv</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#start\">start</a> + (<a class=\"id\" href=\"#seconds_waited\">seconds_waited</a>+5)*<a class=\"id\" href=\"#HZ\">HZ</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#seconds_waited\">seconds_waited</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"XENBUS: Waiting for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"devices to initialise: \");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seconds_waited\">seconds_waited</a> += 5;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%us...\", 300 - <a class=\"id\" href=\"#seconds_waited\">seconds_waited</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#seconds_waited\">seconds_waited</a> == 300)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_timeout_interruptible\">schedule_timeout_interruptible</a>(<a class=\"id\" href=\"#HZ\">HZ</a>/10);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#seconds_waited\">seconds_waited</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_for_each_dev\">bus_for_each_dev</a>(&amp;<a class=\"id\" href=\"#xenbus_frontend\">xenbus_frontend</a>.<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#print_device_status\">print_device_status</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#MODULE\">MODULE</a>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#boot_wait_for_devices\">boot_wait_for_devices</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_hvm_domain\">xen_hvm_domain</a>() && !<a class=\"id\" href=\"#xen_platform_pci_unplug\">xen_platform_pci_unplug</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ready_to_wait_for_devices\">ready_to_wait_for_devices</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_for_devices\">wait_for_devices</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#boot_wait_for_devices\">boot_wait_for_devices</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/a7/59d2fcd3a114c47ad628150aef53546d47fbe9.xr', __xr_tmp);
