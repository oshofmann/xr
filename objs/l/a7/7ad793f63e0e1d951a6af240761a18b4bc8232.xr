var __xr_tmp = [
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xor_init\">xor_init</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, const struct <a class=\"id\" href=\"#loop_info64\">loop_info64</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lo_encrypt_key_size\">lo_encrypt_key_size</a> <= 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#loop_func_table\">loop_func_table</a> <a class=\"id\" href=\"#none_funcs\">none_funcs</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#number\">number</a> = <a class=\"id\" href=\"#LO_CRYPT_NONE\">LO_CRYPT_NONE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#transfer\">transfer</a> = <a class=\"id\" href=\"#transfer_none\">transfer_none</a>,", 
"}; <span class=\"ts\"/>", 
"", 
"static struct <a class=\"id\" href=\"#loop_func_table\">loop_func_table</a> <a class=\"id\" href=\"#xor_funcs\">xor_funcs</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#number\">number</a> = <a class=\"id\" href=\"#LO_CRYPT_XOR\">LO_CRYPT_XOR</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#transfer\">transfer</a> = <a class=\"id\" href=\"#transfer_xor\">transfer_xor</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#xor_init\">xor_init</a>", 
"}; <span class=\"ts\"/>", 
"", 
"<span class=\"comment\">/* xfer_funcs[0] is special - its release function is never called */</span>", 
"static struct <a class=\"id\" href=\"#loop_func_table\">loop_func_table</a> *<a class=\"id\" href=\"#xfer_funcs\">xfer_funcs</a>[<a class=\"id\" href=\"#MAX_LO_CRYPT\">MAX_LO_CRYPT</a>] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#none_funcs\">none_funcs</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#xor_funcs\">xor_funcs</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#get_loop_size\">get_loop_size</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#loopsize\">loopsize</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Compute loopsize in bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>-><a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_offset\">lo_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loopsize\">loopsize</a> = <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_sizelimit\">lo_sizelimit</a> &gt; 0 && <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_sizelimit\">lo_sizelimit</a> &lt; <a class=\"id\" href=\"#loopsize\">loopsize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loopsize\">loopsize</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_sizelimit\">lo_sizelimit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Unfortunately, if we want to do I/O on the device,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the number of 512-byte sectors has to fit into a sector_t.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#loopsize\">loopsize</a> >> 9;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#figure_loop_size\">figure_loop_size</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#get_loop_size\">get_loop_size</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#x\">x</a> = (<a class=\"id\" href=\"#sector_t\">sector_t</a>)<a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#x\">x</a> != <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFBIG\">EFBIG</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_disk\">lo_disk</a>, <a class=\"id\" href=\"#x\">x</a>);", 
"<span class=\"ts\"/>return 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#lo_do_transfer\">lo_do_transfer</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/>       struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#rpage\">rpage</a>, unsigned <a class=\"id\" href=\"#roffs\">roffs</a>,", 
"<span class=\"ts\"/>       struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#lpage\">lpage</a>, unsigned <a class=\"id\" href=\"#loffs\">loffs</a>,", 
"<span class=\"ts\"/>       int <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#rblock\">rblock</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#transfer\">transfer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#transfer\">transfer</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#rpage\">rpage</a>, <a class=\"id\" href=\"#roffs\">roffs</a>, <a class=\"id\" href=\"#lpage\">lpage</a>, <a class=\"id\" href=\"#loffs\">loffs</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#rblock\">rblock</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * do_lo_send_aops - helper for writing data to a loop device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the fast version for backing filesystems which implement the address</span>", 
"<span class=\"comment\"> * space operations write_begin and write_end.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#do_lo_send_aops\">do_lo_send_aops</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#unused\">unused</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>; <span class=\"comment\">/* kudos to NFsckingS */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#bv_offs\">bv_offs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#pos\">pos</a> >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#pos\">pos</a> &amp; ((<a class=\"id\" href=\"#pgoff_t\">pgoff_t</a>)<a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bv_offs\">bv_offs</a> = <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#IV\">IV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#copied\">copied</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#transfer_result\">transfer_result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#fsdata\">fsdata</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IV\">IV</a> = ((<a class=\"id\" href=\"#sector_t\">sector_t</a>)<a class=\"id\" href=\"#index\">index</a> << (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - 9))+(<a class=\"id\" href=\"#offset\">offset</a> >> 9);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pagecache_write_begin\">pagecache_write_begin</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#size\">size</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#page\">page</a>, &amp;<a class=\"id\" href=\"#fsdata\">fsdata</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file_update_time\">file_update_time</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transfer_result\">transfer_result</a> = <a class=\"id\" href=\"#lo_do_transfer\">lo_do_transfer</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#bv_offs\">bv_offs</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#IV\">IV</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#transfer_result\">transfer_result</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pagecache_write_end\">pagecache_write_end</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#copied\">copied</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#fsdata\">fsdata</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0 || <a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#copied\">copied</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#transfer_result\">transfer_result</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bv_offs\">bv_offs</a> += <a class=\"id\" href=\"#copied\">copied</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#copied\">copied</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> += <a class=\"id\" href=\"#copied\">copied</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __do_lo_send_write - helper for writing data to a loop device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This helper just factors out common code between do_lo_send_direct_write()</span>", 
"<span class=\"comment\"> * and do_lo_send_write().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__do_lo_send_write\">__do_lo_send_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buf\">buf</a>, const int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#bw\">bw</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_segment_t\">mm_segment_t</a> <a class=\"id\" href=\"#old_fs\">old_fs</a> = <a class=\"id\" href=\"#get_fs\">get_fs</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#get_ds\">get_ds</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bw\">bw</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#old_fs\">old_fs</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#bw\">bw</a> == <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"loop: Write error at byte offset %llu, length %i.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bw\">bw</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bw\">bw</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bw\">bw</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * do_lo_send_direct_write - helper for writing data to a loop device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the fast, non-transforming version for backing filesystems which do</span>", 
"<span class=\"comment\"> * not implement the address space operations write_begin and write_end.</span>", 
"<span class=\"comment\"> * It uses the write file operation which should be present on all writeable</span>", 
"<span class=\"comment\"> * filesystems.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#do_lo_send_direct_write\">do_lo_send_direct_write</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#bw\">bw</a> = <a class=\"id\" href=\"#__do_lo_send_write\">__do_lo_send_write</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>) + <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bw\">bw</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * do_lo_send_write - helper for writing data to a loop device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the slow, transforming version for filesystems which do not</span>", 
"<span class=\"comment\"> * implement the address space operations write_begin and write_end.  It</span>", 
"<span class=\"comment\"> * uses the write file operation which should be present on all writeable</span>", 
"<span class=\"comment\"> * filesystems.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Using fops-&gt;write is slower than using aops-&gt;{prepare,commit}_write in the</span>", 
"<span class=\"comment\"> * transforming case because we need to double buffer the data as we cannot do</span>", 
"<span class=\"comment\"> * the transformations in place as we do not have direct access to the</span>", 
"<span class=\"comment\"> * destination pages of the backing file.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#do_lo_send_write\">do_lo_send_write</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#lo_do_transfer\">lo_do_transfer</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#page\">page</a>, 0, <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>, <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>, <a class=\"id\" href=\"#pos\">pos</a> >> 9);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__do_lo_send_write\">__do_lo_send_write</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>), <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"loop: Transfer error at byte offset %llu, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"length %i.\\n\", (unsigned long long)<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#lo_send\">lo_send</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#do_lo_send\">do_lo_send</a>)(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *, struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_lo_send\">do_lo_send</a> = <a class=\"id\" href=\"#do_lo_send_aops\">do_lo_send_aops</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_flags\">lo_flags</a> &amp; <a class=\"id\" href=\"#LO_FLAGS_USE_AOPS\">LO_FLAGS_USE_AOPS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_lo_send\">do_lo_send</a> = <a class=\"id\" href=\"#do_lo_send_direct_write\">do_lo_send_direct_write</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#transfer\">transfer</a> != <a class=\"id\" href=\"#transfer_none\">transfer_none</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#alloc_page\">alloc_page</a>(<a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a> | <a class=\"id\" href=\"#__GFP_HIGHMEM\">__GFP_HIGHMEM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_lo_send\">do_lo_send</a> = <a class=\"id\" href=\"#do_lo_send_write\">do_lo_send_write</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_for_each_segment\">bio_for_each_segment</a>(<a class=\"id\" href=\"#bvec\">bvec</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_lo_send\">do_lo_send</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bvec\">bvec</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> += <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page\">__free_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"loop: Failed to allocate temporary page for write.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#lo_read_data\">lo_read_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bsize\">bsize</a>;", 
"};", 
"", 
"static int", 
"<a class=\"id\" href=\"#lo_splice_actor\">lo_splice_actor</a>(struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>, struct <a class=\"id\" href=\"#pipe_buffer\">pipe_buffer</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#splice_desc\">splice_desc</a> *<a class=\"id\" href=\"#sd\">sd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#lo_read_data\">lo_read_data</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#IV\">IV</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#confirm\">confirm</a>(<a class=\"id\" href=\"#pipe\">pipe</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IV\">IV</a> = ((<a class=\"id\" href=\"#sector_t\">sector_t</a>) <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> << (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - 9)) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> >> 9);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#bsize\">bsize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#bsize\">bsize</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo_do_transfer\">lo_do_transfer</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#READ\">READ</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#IV\">IV</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"loop: transfer error block %ld\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#lo_direct_splice_actor\">lo_direct_splice_actor</a>(struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>, struct <a class=\"id\" href=\"#splice_desc\">splice_desc</a> *<a class=\"id\" href=\"#sd\">sd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__splice_from_pipe\">__splice_from_pipe</a>(<a class=\"id\" href=\"#pipe\">pipe</a>, <a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#lo_splice_actor\">lo_splice_actor</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#do_lo_receive\">do_lo_receive</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>,", 
"<span class=\"ts\"/>      struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>, int <a class=\"id\" href=\"#bsize\">bsize</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#lo_read_data\">lo_read_data</a> <a class=\"id\" href=\"#cookie\">cookie</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#splice_desc\">splice_desc</a> <a class=\"id\" href=\"#sd\">sd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cookie\">cookie</a>.<a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cookie\">cookie</a>.<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cookie\">cookie</a>.<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cookie\">cookie</a>.<a class=\"id\" href=\"#bsize\">bsize</a> = <a class=\"id\" href=\"#bsize\">bsize</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>.<a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>.<a class=\"id\" href=\"#total_len\">total_len</a> = <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>.<a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>.<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#data\">data</a> = &amp;<a class=\"id\" href=\"#cookie\">cookie</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#splice_direct_to_actor\">splice_direct_to_actor</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#lo_direct_splice_actor\">lo_direct_splice_actor</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#lo_receive\">lo_receive</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#bsize\">bsize</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_for_each_segment\">bio_for_each_segment</a>(<a class=\"id\" href=\"#bvec\">bvec</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_lo_receive\">do_lo_receive</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bvec\">bvec</a>, <a class=\"id\" href=\"#bsize\">bsize</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> += <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#do_bio_filebacked\">do_bio_filebacked</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = ((<a class=\"id\" href=\"#loff_t\">loff_t</a>) <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> << 9) + <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_offset\">lo_offset</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_rw\">bio_rw</a>(<a class=\"id\" href=\"#bio\">bio</a>) == <a class=\"id\" href=\"#WRITE\">WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#barrier\">barrier</a> = !!(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> &amp; <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#barrier\">barrier</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#fsync\">fsync</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_fsync\">vfs_fsync</a>(<a class=\"id\" href=\"#file\">file</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#lo_send\">lo_send</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#barrier\">barrier</a> && !<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_fsync\">vfs_fsync</a>(<a class=\"id\" href=\"#file\">file</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#lo_receive\">lo_receive</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_blocksize\">lo_blocksize</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Add bio to back of pending list</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#loop_add_bio\">loop_add_bio</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_list_add\">bio_list_add</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_bio_list\">lo_bio_list</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Grab first pending buffer</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#loop_get_bio\">loop_get_bio</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bio_list_pop\">bio_list_pop</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_bio_list\">lo_bio_list</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#loop_make_request\">loop_make_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#old_bio\">old_bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rw\">rw</a> = <a class=\"id\" href=\"#bio_rw\">bio_rw</a>(<a class=\"id\" href=\"#old_bio\">old_bio</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#READA\">READA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rw\">rw</a> = <a class=\"id\" href=\"#READ\">READ</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#lo\">lo</a> || (<a class=\"id\" href=\"#rw\">rw</a> != <a class=\"id\" href=\"#READ\">READ</a> && <a class=\"id\" href=\"#rw\">rw</a> != <a class=\"id\" href=\"#WRITE\">WRITE</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_lock\">lo_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_state\">lo_state</a> != <a class=\"id\" href=\"#Lo_bound\">Lo_bound</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#WRITE\">WRITE</a> && (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_flags\">lo_flags</a> &amp; <a class=\"id\" href=\"#LO_FLAGS_READ_ONLY\">LO_FLAGS_READ_ONLY</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loop_add_bio\">loop_add_bio</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#old_bio\">old_bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_event\">lo_event</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_lock\">lo_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_lock\">lo_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_io_error\">bio_io_error</a>(<a class=\"id\" href=\"#old_bio\">old_bio</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * kick off io on the underlying address space</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#loop_unplug\">loop_unplug</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_flag_clear_unlocked\">queue_flag_clear_unlocked</a>(<a class=\"id\" href=\"#QUEUE_FLAG_PLUGGED\">QUEUE_FLAG_PLUGGED</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_run_address_space\">blk_run_address_space</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#switch_request\">switch_request</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#completion\">completion</a> <a class=\"id\" href=\"#wait\">wait</a>;", 
"};", 
"", 
"static void <a class=\"id\" href=\"#do_loop_switch\">do_loop_switch</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *, struct <a class=\"id\" href=\"#switch_request\">switch_request</a> *);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#loop_handle_bio\">loop_handle_bio</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_loop_switch\">do_loop_switch</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_bio_filebacked\">do_bio_filebacked</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_endio\">bio_endio</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * worker thread that handles reads/writes to file backed loop devices,</span>", 
"<span class=\"comment\"> * to avoid blocking in our make_request_fn. it also does loop decrypting</span>", 
"<span class=\"comment\"> * on reads for block backed loop, as that is too heavy to do from</span>", 
"<span class=\"comment\"> * b_end_io context where irqs may be disabled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Loop explanation:  loop_clr_fd() sets lo_state to Lo_rundown before</span>", 
"<span class=\"comment\"> * calling kthread_stop().  Therefore once kthread_should_stop() is</span>", 
"<span class=\"comment\"> * true, make_request will not place any more requests.  Therefore</span>", 
"<span class=\"comment\"> * once kthread_should_stop() is true and lo_bio is NULL, we are</span>", 
"<span class=\"comment\"> * done with the loop.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#loop_thread\">loop_thread</a>(void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_user_nice\">set_user_nice</a>(<a class=\"id\" href=\"#current\">current</a>, -20);", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#kthread_should_stop\">kthread_should_stop</a>() || !<a class=\"id\" href=\"#bio_list_empty\">bio_list_empty</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_bio_list\">lo_bio_list</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_event_interruptible\">wait_event_interruptible</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_event\">lo_event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#bio_list_empty\">bio_list_empty</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_bio_list\">lo_bio_list</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kthread_should_stop\">kthread_should_stop</a>());", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_list_empty\">bio_list_empty</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_bio_list\">lo_bio_list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_lock\">lo_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#loop_get_bio\">loop_get_bio</a>(<a class=\"id\" href=\"#lo\">lo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_lock\">lo_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loop_handle_bio\">loop_handle_bio</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * loop_switch performs the hard work of switching a backing store.</span>", 
"<span class=\"comment\"> * First it needs to flush existing IO, it does this by sending a magic</span>", 
"<span class=\"comment\"> * BIO down the pipe. The completion of this BIO does the actual switch.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#loop_switch\">loop_switch</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#switch_request\">switch_request</a> <a class=\"id\" href=\"#w\">w</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_alloc\">bio_alloc</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#w\">w</a>.<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>.<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a> = &amp;<a class=\"id\" href=\"#w\">w</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loop_make_request\">loop_make_request</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(&amp;<a class=\"id\" href=\"#w\">w</a>.<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helper to flush the IOs in loop, but keeping loop thread running</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#loop_flush\">loop_flush</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* loop not yet configured, no running thread, nothing to flush */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_thread\">lo_thread</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#loop_switch\">loop_switch</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Do the actual switch; called from the BIO completion routine</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#do_loop_switch\">do_loop_switch</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#switch_request\">switch_request</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#old_file\">old_file</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if no new file, only flush of queued bios requested */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping_set_gfp_mask\">mapping_set_gfp_mask</a>(<a class=\"id\" href=\"#old_file\">old_file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>, <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#old_gfp_mask\">old_gfp_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_blocksize\">lo_blocksize</a> = <a class=\"id\" href=\"#S_ISBLK\">S_ISBLK</a>(<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#i_bdev\">i_bdev</a>-><a class=\"id\" href=\"#bd_block_size\">bd_block_size</a> : <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#old_gfp_mask\">old_gfp_mask</a> = <a class=\"id\" href=\"#mapping_gfp_mask\">mapping_gfp_mask</a>(<a class=\"id\" href=\"#mapping\">mapping</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping_set_gfp_mask\">mapping_set_gfp_mask</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#old_gfp_mask\">old_gfp_mask</a> &amp; ~(<a class=\"id\" href=\"#__GFP_IO\">__GFP_IO</a>|<a class=\"id\" href=\"#__GFP_FS\">__GFP_FS</a>));", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * loop_change_fd switched the backing store of a loopback device to</span>", 
"<span class=\"comment\"> * a new file. This is useful for operating system installers to free up</span>", 
"<span class=\"comment\"> * the original file and in High Availability environments to switch to</span>", 
"<span class=\"comment\"> * an alternative location for the content in case of server meltdown.</span>", 
"<span class=\"comment\"> * This can only work if the loop device is used read-only, and if the</span>", 
"<span class=\"comment\"> * new backing store is the same size and type as the old backing store.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#loop_change_fd\">loop_change_fd</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a><span class=\"ts\"/>*<a class=\"id\" href=\"#file\">file</a>, *<a class=\"id\" href=\"#old_file\">old_file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a><span class=\"ts\"/>*<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_state\">lo_state</a> != <a class=\"id\" href=\"#Lo_bound\">Lo_bound</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the loop device has to be read-only */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_flags\">lo_flags</a> &amp; <a class=\"id\" href=\"#LO_FLAGS_READ_ONLY\">LO_FLAGS_READ_ONLY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget\">fget</a>(<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_file\">old_file</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) && !<a class=\"id\" href=\"#S_ISBLK\">S_ISBLK</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putf\">out_putf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* size of the new backing store needs to be the same */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_loop_size\">get_loop_size</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#file\">file</a>) != <a class=\"id\" href=\"#get_loop_size\">get_loop_size</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#old_file\">old_file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putf\">out_putf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* and ... switch */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#loop_switch\">loop_switch</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putf\">out_putf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#old_file\">old_file</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_part\">max_part</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioctl_by_bdev\">ioctl_by_bdev</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#BLKRRPART\">BLKRRPART</a>, 0);", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#out_putf\">out_putf</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_loop_device\">is_loop_device</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a> && <a class=\"id\" href=\"#S_ISBLK\">S_ISBLK</a>(<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) && <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#i_rdev\">i_rdev</a>) == <a class=\"id\" href=\"#LOOP_MAJOR\">LOOP_MAJOR</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#loop_set_fd\">loop_set_fd</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, unsigned int <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a><span class=\"ts\"/>*<a class=\"id\" href=\"#file\">file</a>, *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a><span class=\"ts\"/>*<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#lo_blocksize\">lo_blocksize</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_flags\">lo_flags</a> = 0;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is safe, since we have a reference from open(). */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__module_get\">__module_get</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget\">fget</a>(<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_state\">lo_state</a> != <a class=\"id\" href=\"#Lo_unbound\">Lo_unbound</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putf\">out_putf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Avoid recursion */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#is_loop_device\">is_loop_device</a>(<a class=\"id\" href=\"#f\">f</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#i_bdev\">i_bdev</a> == <a class=\"id\" href=\"#bdev\">bdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putf\">out_putf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#i_bdev\">i_bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a>-><a class=\"id\" href=\"#lo_state\">lo_state</a> == <a class=\"id\" href=\"#Lo_unbound\">Lo_unbound</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putf\">out_putf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#l\">l</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_flags\">lo_flags</a> |= <a class=\"id\" href=\"#LO_FLAGS_READ_ONLY\">LO_FLAGS_READ_ONLY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) || <a class=\"id\" href=\"#S_ISBLK\">S_ISBLK</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#address_space_operations\">address_space_operations</a> *<a class=\"id\" href=\"#aops\">aops</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#aops\">aops</a>-><a class=\"id\" href=\"#write_begin\">write_begin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_flags\">lo_flags</a> |= <a class=\"id\" href=\"#LO_FLAGS_USE_AOPS\">LO_FLAGS_USE_AOPS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#lo_flags\">lo_flags</a> &amp; <a class=\"id\" href=\"#LO_FLAGS_USE_AOPS\">LO_FLAGS_USE_AOPS</a>) && !<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_flags\">lo_flags</a> |= <a class=\"id\" href=\"#LO_FLAGS_READ_ONLY\">LO_FLAGS_READ_ONLY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_blocksize\">lo_blocksize</a> = <a class=\"id\" href=\"#S_ISBLK\">S_ISBLK</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_bdev\">i_bdev</a>-><a class=\"id\" href=\"#bd_block_size\">bd_block_size</a> : <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putf\">out_putf</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#get_loop_size\">get_loop_size</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#loff_t\">loff_t</a>)(<a class=\"id\" href=\"#sector_t\">sector_t</a>)<a class=\"id\" href=\"#size\">size</a> != <a class=\"id\" href=\"#size\">size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFBIG\">EFBIG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putf\">out_putf</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_flags\">lo_flags</a> |= <a class=\"id\" href=\"#LO_FLAGS_READ_ONLY\">LO_FLAGS_READ_ONLY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_device_ro\">set_device_ro</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, (<a class=\"id\" href=\"#lo_flags\">lo_flags</a> &amp; <a class=\"id\" href=\"#LO_FLAGS_READ_ONLY\">LO_FLAGS_READ_ONLY</a>) != 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_blocksize\">lo_blocksize</a> = <a class=\"id\" href=\"#lo_blocksize\">lo_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_device\">lo_device</a> = <a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_flags\">lo_flags</a> = <a class=\"id\" href=\"#lo_flags\">lo_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#transfer\">transfer</a> = <a class=\"id\" href=\"#transfer_none\">transfer_none</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_sizelimit\">lo_sizelimit</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#old_gfp_mask\">old_gfp_mask</a> = <a class=\"id\" href=\"#mapping_gfp_mask\">mapping_gfp_mask</a>(<a class=\"id\" href=\"#mapping\">mapping</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping_set_gfp_mask\">mapping_set_gfp_mask</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#old_gfp_mask\">old_gfp_mask</a> &amp; ~(<a class=\"id\" href=\"#__GFP_IO\">__GFP_IO</a>|<a class=\"id\" href=\"#__GFP_FS\">__GFP_FS</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_list_init\">bio_list_init</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_bio_list\">lo_bio_list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set queue make_request_fn, and add limits based on lower level</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * device</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_make_request\">blk_queue_make_request</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a>, <a class=\"id\" href=\"#loop_make_request\">loop_make_request</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a> = <a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a>-><a class=\"id\" href=\"#unplug_fn\">unplug_fn</a> = <a class=\"id\" href=\"#loop_unplug\">loop_unplug</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#lo_flags\">lo_flags</a> &amp; <a class=\"id\" href=\"#LO_FLAGS_READ_ONLY\">LO_FLAGS_READ_ONLY</a>) && <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#fsync\">fsync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_ordered\">blk_queue_ordered</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a>, <a class=\"id\" href=\"#QUEUE_ORDERED_DRAIN\">QUEUE_ORDERED_DRAIN</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_disk\">lo_disk</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bd_set_size\">bd_set_size</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#size\">size</a> << 9);", 
"<span class=\"ts\"/><span class=\"comment\">/* let user-space know about the new size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#disk_to_dev\">disk_to_dev</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>)-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_CHANGE\">KOBJ_CHANGE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_blocksize\">set_blocksize</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#lo_blocksize\">lo_blocksize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_thread\">lo_thread</a> = <a class=\"id\" href=\"#kthread_create\">kthread_create</a>(<a class=\"id\" href=\"#loop_thread\">loop_thread</a>, <a class=\"id\" href=\"#lo\">lo</a>, \"loop%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_number\">lo_number</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_thread\">lo_thread</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_thread\">lo_thread</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_clr\">out_clr</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_state\">lo_state</a> = <a class=\"id\" href=\"#Lo_bound\">Lo_bound</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_thread\">lo_thread</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_part\">max_part</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioctl_by_bdev\">ioctl_by_bdev</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#BLKRRPART\">BLKRRPART</a>, 0);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_clr\">out_clr</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_thread\">lo_thread</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_device\">lo_device</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_flags\">lo_flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_disk\">lo_disk</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#invalidate_bdev\">invalidate_bdev</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bd_set_size\">bd_set_size</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#disk_to_dev\">disk_to_dev</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>)-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_CHANGE\">KOBJ_CHANGE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping_set_gfp_mask\">mapping_set_gfp_mask</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#old_gfp_mask\">old_gfp_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_state\">lo_state</a> = <a class=\"id\" href=\"#Lo_unbound\">Lo_unbound</a>;", 
" <a class=\"id\" href=\"#out_putf\">out_putf</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* This is safe: open() is still holding a reference. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#loop_release_xfer\">loop_release_xfer</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_func_table\">loop_func_table</a> *<a class=\"id\" href=\"#xfer\">xfer</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_encryption\">lo_encryption</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xfer\">xfer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xfer\">xfer</a>-><a class=\"id\" href=\"#release\">release</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfer\">xfer</a>-><a class=\"id\" href=\"#release\">release</a>(<a class=\"id\" href=\"#lo\">lo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#transfer\">transfer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_encryption\">lo_encryption</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#xfer\">xfer</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#loop_init_xfer\">loop_init_xfer</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#loop_func_table\">loop_func_table</a> *<a class=\"id\" href=\"#xfer\">xfer</a>,", 
"<span class=\"ts\"/>       const struct <a class=\"id\" href=\"#loop_info64\">loop_info64</a> *<a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xfer\">xfer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#xfer\">xfer</a>-><a class=\"id\" href=\"#owner\">owner</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xfer\">xfer</a>-><a class=\"id\" href=\"#init\">init</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfer\">xfer</a>-><a class=\"id\" href=\"#init\">init</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_encryption\">lo_encryption</a> = <a class=\"id\" href=\"#xfer\">xfer</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#loop_clr_fd\">loop_clr_fd</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_backing_file\">lo_backing_file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#old_gfp_mask\">old_gfp_mask</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_state\">lo_state</a> != <a class=\"id\" href=\"#Lo_bound\">Lo_bound</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_refcnt\">lo_refcnt</a> &gt; 1)<span class=\"ts\"/><span class=\"comment\">/* we needed one fd for the ioctl */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_lock\">lo_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_state\">lo_state</a> = <a class=\"id\" href=\"#Lo_rundown\">Lo_rundown</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_lock\">lo_lock</a>);", 
];
xr_frag_insert('l/a7/7ad793f63e0e1d951a6af240761a18b4bc8232.xr', __xr_tmp);
