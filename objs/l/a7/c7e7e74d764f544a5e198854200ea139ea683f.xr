var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_save_state\">pci_save_state</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * both INTx and MSI are disabled after the Interrupt Disable bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is set and the Bus Master bit is cleared.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>, <a class=\"id\" href=\"#PCI_COMMAND_INTX_DISABLE\">PCI_COMMAND_INTX_DISABLE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_dev_reset\">pci_dev_reset</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_restore_state\">pci_restore_state</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_reset_function\">pci_reset_function</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcix_get_max_mmrbc - get PCI-X maximum designed memory read byte count</span>", 
"<span class=\"comment\"> * @dev: PCI device to query</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns mmrbc: maximum designed memory read count in bytes</span>", 
"<span class=\"comment\"> *    or appropriate error value.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pcix_get_max_mmrbc\">pcix_get_max_mmrbc</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#stat\">stat</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CAP_ID_PCIX\">PCI_CAP_ID_PCIX</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cap\">cap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_X_STATUS\">PCI_X_STATUS</a>, &amp;<a class=\"id\" href=\"#stat\">stat</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return 512 << ((<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#PCI_X_STATUS_MAX_READ\">PCI_X_STATUS_MAX_READ</a>) >> 21);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcix_get_max_mmrbc\">pcix_get_max_mmrbc</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcix_get_mmrbc - get PCI-X maximum memory read byte count</span>", 
"<span class=\"comment\"> * @dev: PCI device to query</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns mmrbc: maximum memory read count in bytes</span>", 
"<span class=\"comment\"> *    or appropriate error value.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pcix_get_mmrbc\">pcix_get_mmrbc</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CAP_ID_PCIX\">PCI_CAP_ID_PCIX</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cap\">cap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_X_CMD\">PCI_X_CMD</a>, &amp;<a class=\"id\" href=\"#cmd\">cmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return 512 << ((<a class=\"id\" href=\"#cmd\">cmd</a> &amp; <a class=\"id\" href=\"#PCI_X_CMD_MAX_READ\">PCI_X_CMD_MAX_READ</a>) >> 2);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcix_get_mmrbc\">pcix_get_mmrbc</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcix_set_mmrbc - set PCI-X maximum memory read byte count</span>", 
"<span class=\"comment\"> * @dev: PCI device to query</span>", 
"<span class=\"comment\"> * @mmrbc: maximum memory read count in bytes</span>", 
"<span class=\"comment\"> *    valid values are 512, 1024, 2048, 4096</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If possible sets maximum memory read byte count, some bridges have erratas</span>", 
"<span class=\"comment\"> * that prevent this.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pcix_set_mmrbc\">pcix_set_mmrbc</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#mmrbc\">mmrbc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#o\">o</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mmrbc\">mmrbc</a> &lt; 512 || <a class=\"id\" href=\"#mmrbc\">mmrbc</a> &gt; 4096 || !<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#mmrbc\">mmrbc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#ffs\">ffs</a>(<a class=\"id\" href=\"#mmrbc\">mmrbc</a>) - 10;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CAP_ID_PCIX\">PCI_CAP_ID_PCIX</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cap\">cap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_X_STATUS\">PCI_X_STATUS</a>, &amp;<a class=\"id\" href=\"#stat\">stat</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> &gt; (<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#PCI_X_STATUS_MAX_READ\">PCI_X_STATUS_MAX_READ</a>) >> 21)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#E2BIG\">E2BIG</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_X_CMD\">PCI_X_CMD</a>, &amp;<a class=\"id\" href=\"#cmd\">cmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#o\">o</a> = (<a class=\"id\" href=\"#cmd\">cmd</a> &amp; <a class=\"id\" href=\"#PCI_X_CMD_MAX_READ\">PCI_X_CMD_MAX_READ</a>) >> 2;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o\">o</a> != <a class=\"id\" href=\"#v\">v</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> &gt; <a class=\"id\" href=\"#o\">o</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus_flags\">bus_flags</a> &amp; <a class=\"id\" href=\"#PCI_BUS_FLAGS_NO_MMRBC\">PCI_BUS_FLAGS_NO_MMRBC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a> &= ~<a class=\"id\" href=\"#PCI_X_CMD_MAX_READ\">PCI_X_CMD_MAX_READ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a> |= <a class=\"id\" href=\"#v\">v</a> << 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_X_CMD\">PCI_X_CMD</a>, <a class=\"id\" href=\"#cmd\">cmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcix_set_mmrbc\">pcix_set_mmrbc</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_get_readrq - get PCI Express read request size</span>", 
"<span class=\"comment\"> * @dev: PCI device to query</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns maximum memory read request in bytes</span>", 
"<span class=\"comment\"> *    or appropriate error value.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pcie_get_readrq\">pcie_get_readrq</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#ctl\">ctl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cap\">cap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_EXP_DEVCTL\">PCI_EXP_DEVCTL</a>, &amp;<a class=\"id\" href=\"#ctl\">ctl</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 128 << ((<a class=\"id\" href=\"#ctl\">ctl</a> &amp; <a class=\"id\" href=\"#PCI_EXP_DEVCTL_READRQ\">PCI_EXP_DEVCTL_READRQ</a>) >> 12);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcie_get_readrq\">pcie_get_readrq</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_set_readrq - set PCI Express maximum memory read request</span>", 
"<span class=\"comment\"> * @dev: PCI device to query</span>", 
"<span class=\"comment\"> * @rq: maximum memory read count in bytes</span>", 
"<span class=\"comment\"> *    valid values are 128, 256, 512, 1024, 2048, 4096</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If possible sets maximum read byte count</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pcie_set_readrq\">pcie_set_readrq</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cap\">cap</a>, <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#ctl\">ctl</a>, <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a> &lt; 128 || <a class=\"id\" href=\"#rq\">rq</a> &gt; 4096 || !<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#rq\">rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = (<a class=\"id\" href=\"#ffs\">ffs</a>(<a class=\"id\" href=\"#rq\">rq</a>) - 8) << 12;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cap\">cap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_EXP_DEVCTL\">PCI_EXP_DEVCTL</a>, &amp;<a class=\"id\" href=\"#ctl\">ctl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ctl\">ctl</a> &amp; <a class=\"id\" href=\"#PCI_EXP_DEVCTL_READRQ\">PCI_EXP_DEVCTL_READRQ</a>) != <a class=\"id\" href=\"#v\">v</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctl\">ctl</a> &= ~<a class=\"id\" href=\"#PCI_EXP_DEVCTL_READRQ\">PCI_EXP_DEVCTL_READRQ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctl\">ctl</a> |= <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_EXP_DEVCTL\">PCI_EXP_DEVCTL</a>, <a class=\"id\" href=\"#ctl\">ctl</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcie_set_readrq\">pcie_set_readrq</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_select_bars - Make BAR mask from the type of resource</span>", 
"<span class=\"comment\"> * @dev: the PCI device for which BAR mask is made</span>", 
"<span class=\"comment\"> * @flags: resource type mask to be selected</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This helper routine makes bar mask from the type of resource.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pci_select_bars\">pci_select_bars</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#bars\">bars</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PCI_NUM_RESOURCES\">PCI_NUM_RESOURCES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_resource_flags\">pci_resource_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>) &amp; <a class=\"id\" href=\"#flags\">flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bars\">bars</a> |= (1 << <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bars\">bars</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_resource_bar - get position of the BAR associated with a resource</span>", 
"<span class=\"comment\"> * @dev: the PCI device</span>", 
"<span class=\"comment\"> * @resno: the resource number</span>", 
"<span class=\"comment\"> * @type: the BAR type to be filled in</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns BAR position in config space, or 0 if the BAR is invalid.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pci_resource_bar\">pci_resource_bar</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#resno\">resno</a>, enum <a class=\"id\" href=\"#pci_bar_type\">pci_bar_type</a> *<a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reg\">reg</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#resno\">resno</a> &lt; <a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#pci_bar_unknown\">pci_bar_unknown</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PCI_BASE_ADDRESS_0\">PCI_BASE_ADDRESS_0</a> + 4 * <a class=\"id\" href=\"#resno\">resno</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#resno\">resno</a> == <a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#pci_bar_mem32\">pci_bar_mem32</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rom_base_reg\">rom_base_reg</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#resno\">resno</a> &lt; <a class=\"id\" href=\"#PCI_BRIDGE_RESOURCES\">PCI_BRIDGE_RESOURCES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device specific resource */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#pci_iov_resource_bar\">pci_iov_resource_bar</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#resno\">resno</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reg\">reg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#reg\">reg</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"BAR %d: invalid resource\\n\", <a class=\"id\" href=\"#resno\">resno</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Some architectures require additional programming to enable VGA */</span>", 
"static <a class=\"id\" href=\"#arch_set_vga_state_t\">arch_set_vga_state_t</a> <a class=\"id\" href=\"#arch_set_vga_state\">arch_set_vga_state</a>;", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pci_register_set_vga_state\">pci_register_set_vga_state</a>(<a class=\"id\" href=\"#arch_set_vga_state_t\">arch_set_vga_state_t</a> <a class=\"id\" href=\"#func\">func</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_set_vga_state\">arch_set_vga_state</a> = <a class=\"id\" href=\"#func\">func</a>;<span class=\"ts\"/><span class=\"comment\">/* NULL disables */</span>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_set_vga_state_arch\">pci_set_vga_state_arch</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#decode\">decode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#command_bits\">command_bits</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#change_bridge\">change_bridge</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arch_set_vga_state\">arch_set_vga_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#arch_set_vga_state\">arch_set_vga_state</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#decode\">decode</a>, <a class=\"id\" href=\"#command_bits\">command_bits</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_bridge\">change_bridge</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_set_vga_state - set VGA decode state on device and parents if requested</span>", 
"<span class=\"comment\"> * @dev: the PCI device</span>", 
"<span class=\"comment\"> * @decode: true = enable decoding, false = disable decoding</span>", 
"<span class=\"comment\"> * @command_bits: PCI_COMMAND_IO and/or PCI_COMMAND_MEMORY</span>", 
"<span class=\"comment\"> * @change_bridge: traverse ancestors and change bridges</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pci_set_vga_state\">pci_set_vga_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#decode\">decode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#command_bits\">command_bits</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#change_bridge\">change_bridge</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#bridge\">bridge</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#command_bits\">command_bits</a> &amp; ~(<a class=\"id\" href=\"#PCI_COMMAND_IO\">PCI_COMMAND_IO</a>|<a class=\"id\" href=\"#PCI_COMMAND_MEMORY\">PCI_COMMAND_MEMORY</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ARCH specific VGA enables */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_set_vga_state_arch\">pci_set_vga_state_arch</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#decode\">decode</a>, <a class=\"id\" href=\"#command_bits\">command_bits</a>, <a class=\"id\" href=\"#change_bridge\">change_bridge</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>, &amp;<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#decode\">decode</a> == <a class=\"id\" href=\"#true\">true</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a> |= <a class=\"id\" href=\"#command_bits\">command_bits</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a> &= ~<a class=\"id\" href=\"#command_bits\">command_bits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#change_bridge\">change_bridge</a> == <a class=\"id\" href=\"#false\">false</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#bus\">bus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bridge\">bridge</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bridge\">bridge</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#PCI_BRIDGE_CONTROL\">PCI_BRIDGE_CONTROL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#decode\">decode</a> == <a class=\"id\" href=\"#true\">true</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a> |= <a class=\"id\" href=\"#PCI_BRIDGE_CTL_VGA\">PCI_BRIDGE_CTL_VGA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a> &= ~<a class=\"id\" href=\"#PCI_BRIDGE_CTL_VGA\">PCI_BRIDGE_CTL_VGA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#PCI_BRIDGE_CONTROL\">PCI_BRIDGE_CONTROL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RESOURCE_ALIGNMENT_PARAM_SIZE\">RESOURCE_ALIGNMENT_PARAM_SIZE</a> <a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>", 
"static char <a class=\"id\" href=\"#resource_alignment_param\">resource_alignment_param</a>[<a class=\"id\" href=\"#RESOURCE_ALIGNMENT_PARAM_SIZE\">RESOURCE_ALIGNMENT_PARAM_SIZE</a>] = {0};", 
];
xr_frag_insert('l/a7/c7e7e74d764f544a5e198854200ea139ea683f.xr', __xr_tmp);
