var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * drivers/base/dma-mapping.c - arch-independent dma-mapping routines</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2006  SUSE Linux Products GmbH</span>", 
"<span class=\"comment\"> * Copyright (c) 2006  Tejun Heo &lt;teheo@suse.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPLv2.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Managed DMA API</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dma_devres\">dma_devres</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#vaddr\">vaddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a><span class=\"ts\"/><a class=\"id\" href=\"#dma_handle\">dma_handle</a>;", 
"};", 
"", 
"static void <a class=\"id\" href=\"#dmam_coherent_release\">dmam_coherent_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_devres\">dma_devres</a> *<a class=\"id\" href=\"#this\">this</a> = <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_free_coherent\">dma_free_coherent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#dma_handle\">dma_handle</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dmam_noncoherent_release\">dmam_noncoherent_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_devres\">dma_devres</a> *<a class=\"id\" href=\"#this\">this</a> = <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_free_noncoherent\">dma_free_noncoherent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#dma_handle\">dma_handle</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dmam_match\">dmam_match</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#res\">res</a>, void *<a class=\"id\" href=\"#match_data\">match_data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_devres\">dma_devres</a> *<a class=\"id\" href=\"#this\">this</a> = <a class=\"id\" href=\"#res\">res</a>, *<a class=\"id\" href=\"#match\">match</a> = <a class=\"id\" href=\"#match_data\">match_data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#vaddr\">vaddr</a> == <a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#vaddr\">vaddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#size\">size</a> != <a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#size\">size</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#dma_handle\">dma_handle</a> != <a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#dma_handle\">dma_handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dmam_alloc_coherent - Managed dma_alloc_coherent()</span>", 
"<span class=\"comment\"> * @dev: Device to allocate coherent memory for</span>", 
"<span class=\"comment\"> * @size: Size of allocation</span>", 
"<span class=\"comment\"> * @dma_handle: Out argument for allocated DMA handle</span>", 
"<span class=\"comment\"> * @gfp: Allocation flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed dma_alloc_coherent().  Memory allocated using this function</span>", 
"<span class=\"comment\"> * will be automatically released on driver detach.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURNS:</span>", 
"<span class=\"comment\"> * Pointer to allocated memory on success, NULL on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"void * <a class=\"id\" href=\"#dmam_alloc_coherent\">dmam_alloc_coherent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> *<a class=\"id\" href=\"#dma_handle\">dma_handle</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_devres\">dma_devres</a> *<a class=\"id\" href=\"#dr\">dr</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#vaddr\">vaddr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a> = <a class=\"id\" href=\"#devres_alloc\">devres_alloc</a>(<a class=\"id\" href=\"#dmam_coherent_release\">dmam_coherent_release</a>, sizeof(*<a class=\"id\" href=\"#dr\">dr</a>), <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dr\">dr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vaddr\">vaddr</a> = <a class=\"id\" href=\"#dma_alloc_coherent\">dma_alloc_coherent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#dma_handle\">dma_handle</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vaddr\">vaddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_free\">devres_free</a>(<a class=\"id\" href=\"#dr\">dr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a>-><a class=\"id\" href=\"#vaddr\">vaddr</a> = <a class=\"id\" href=\"#vaddr\">vaddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a>-><a class=\"id\" href=\"#dma_handle\">dma_handle</a> = *<a class=\"id\" href=\"#dma_handle\">dma_handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devres_add\">devres_add</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dr\">dr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vaddr\">vaddr</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dmam_alloc_coherent\">dmam_alloc_coherent</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dmam_free_coherent - Managed dma_free_coherent()</span>", 
"<span class=\"comment\"> * @dev: Device to free coherent memory for</span>", 
"<span class=\"comment\"> * @size: Size of allocation</span>", 
"<span class=\"comment\"> * @vaddr: Virtual address of the memory to free</span>", 
"<span class=\"comment\"> * @dma_handle: DMA handle of the memory to free</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed dma_free_coherent().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#dmam_free_coherent\">dmam_free_coherent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, void *<a class=\"id\" href=\"#vaddr\">vaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#dma_handle\">dma_handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_devres\">dma_devres</a> <a class=\"id\" href=\"#match_data\">match_data</a> = { <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#dma_handle\">dma_handle</a> };", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_free_coherent\">dma_free_coherent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#dma_handle\">dma_handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#devres_destroy\">devres_destroy</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dmam_coherent_release\">dmam_coherent_release</a>, <a class=\"id\" href=\"#dmam_match\">dmam_match</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#match_data\">match_data</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dmam_free_coherent\">dmam_free_coherent</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dmam_alloc_non_coherent - Managed dma_alloc_non_coherent()</span>", 
"<span class=\"comment\"> * @dev: Device to allocate non_coherent memory for</span>", 
"<span class=\"comment\"> * @size: Size of allocation</span>", 
"<span class=\"comment\"> * @dma_handle: Out argument for allocated DMA handle</span>", 
"<span class=\"comment\"> * @gfp: Allocation flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed dma_alloc_non_coherent().  Memory allocated using this</span>", 
"<span class=\"comment\"> * function will be automatically released on driver detach.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURNS:</span>", 
"<span class=\"comment\"> * Pointer to allocated memory on success, NULL on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"void *<a class=\"id\" href=\"#dmam_alloc_noncoherent\">dmam_alloc_noncoherent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> *<a class=\"id\" href=\"#dma_handle\">dma_handle</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_devres\">dma_devres</a> *<a class=\"id\" href=\"#dr\">dr</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#vaddr\">vaddr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a> = <a class=\"id\" href=\"#devres_alloc\">devres_alloc</a>(<a class=\"id\" href=\"#dmam_noncoherent_release\">dmam_noncoherent_release</a>, sizeof(*<a class=\"id\" href=\"#dr\">dr</a>), <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dr\">dr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vaddr\">vaddr</a> = <a class=\"id\" href=\"#dma_alloc_noncoherent\">dma_alloc_noncoherent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#dma_handle\">dma_handle</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vaddr\">vaddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_free\">devres_free</a>(<a class=\"id\" href=\"#dr\">dr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a>-><a class=\"id\" href=\"#vaddr\">vaddr</a> = <a class=\"id\" href=\"#vaddr\">vaddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a>-><a class=\"id\" href=\"#dma_handle\">dma_handle</a> = *<a class=\"id\" href=\"#dma_handle\">dma_handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dr\">dr</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devres_add\">devres_add</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dr\">dr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vaddr\">vaddr</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dmam_alloc_noncoherent\">dmam_alloc_noncoherent</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dmam_free_coherent - Managed dma_free_noncoherent()</span>", 
"<span class=\"comment\"> * @dev: Device to free noncoherent memory for</span>", 
"<span class=\"comment\"> * @size: Size of allocation</span>", 
"<span class=\"comment\"> * @vaddr: Virtual address of the memory to free</span>", 
"<span class=\"comment\"> * @dma_handle: DMA handle of the memory to free</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed dma_free_noncoherent().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#dmam_free_noncoherent\">dmam_free_noncoherent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, void *<a class=\"id\" href=\"#vaddr\">vaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#dma_handle\">dma_handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_devres\">dma_devres</a> <a class=\"id\" href=\"#match_data\">match_data</a> = { <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#dma_handle\">dma_handle</a> };", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_free_noncoherent\">dma_free_noncoherent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#dma_handle\">dma_handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#devres_destroy\">devres_destroy</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dmam_noncoherent_release\">dmam_noncoherent_release</a>, <a class=\"id\" href=\"#dmam_match\">dmam_match</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#match_data\">match_data</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dmam_free_noncoherent\">dmam_free_noncoherent</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ARCH_HAS_DMA_DECLARE_COHERENT_MEMORY\">ARCH_HAS_DMA_DECLARE_COHERENT_MEMORY</a>", 
"", 
"static void <a class=\"id\" href=\"#dmam_coherent_decl_release\">dmam_coherent_decl_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_release_declared_memory\">dma_release_declared_memory</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dmam_declare_coherent_memory - Managed dma_declare_coherent_memory()</span>", 
"<span class=\"comment\"> * @dev: Device to declare coherent memory for</span>", 
"<span class=\"comment\"> * @bus_addr: Bus address of coherent memory to be declared</span>", 
"<span class=\"comment\"> * @device_addr: Device address of coherent memory to be declared</span>", 
"<span class=\"comment\"> * @size: Size of coherent memory to be declared</span>", 
"<span class=\"comment\"> * @flags: Flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed dma_declare_coherent_memory().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURNS:</span>", 
"<span class=\"comment\"> * 0 on success, -errno on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dmam_declare_coherent_memory\">dmam_declare_coherent_memory</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#bus_addr\">bus_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#device_addr\">device_addr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#devres_alloc\">devres_alloc</a>(<a class=\"id\" href=\"#dmam_coherent_decl_release\">dmam_coherent_decl_release</a>, 0, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#dma_declare_coherent_memory\">dma_declare_coherent_memory</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#bus_addr\">bus_addr</a>, <a class=\"id\" href=\"#device_addr\">device_addr</a>, <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_add\">devres_add</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devres_free\">devres_free</a>(<a class=\"id\" href=\"#res\">res</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dmam_declare_coherent_memory\">dmam_declare_coherent_memory</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dmam_release_declared_memory - Managed dma_release_declared_memory().</span>", 
"<span class=\"comment\"> * @dev: Device to release declared coherent memory for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Managed dmam_release_declared_memory().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#dmam_release_declared_memory\">dmam_release_declared_memory</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#devres_destroy\">devres_destroy</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dmam_coherent_decl_release\">dmam_coherent_decl_release</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dmam_release_declared_memory\">dmam_release_declared_memory</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/a7/eccbe7cfaffe2f7a7da46bdb13bcc536b1ad1c.xr', __xr_tmp);
