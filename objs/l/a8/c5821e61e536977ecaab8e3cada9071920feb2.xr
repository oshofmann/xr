var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Multicast support for IPv6</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Based on linux/ipv4/igmp.c and linux/ipv4/ip_sockglue.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Changes:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>yoshfuji<span class=\"ts\"/>: fix format of router-alert option</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fixed source address for MLD message based on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>&lt;draft-ietf-magma-mld-source-05.txt&gt;.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- Ignore Queries for invalid addresses.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- MLD for link-local addresses.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>David L Stevens &lt;dlstevens@us.ibm.com&gt;:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- MLDv2 support</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#times\">times</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#mld\">mld</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter\">netfilter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv6\">netfilter_ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#if_inet6\">if_inet6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_common\">inet_common</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_checksum\">ip6_checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Set to 3 to get tracing... */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCAST_DEBUG\">MCAST_DEBUG</a> 2", 
"", 
"#if <a class=\"id\" href=\"#MCAST_DEBUG\">MCAST_DEBUG</a> >= 3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MDBG\">MDBG</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#printk\">printk</a> <a class=\"id\" href=\"#x\">x</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MDBG\">MDBG</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Ensure that we have struct in6_addr aligned on 32bit word. */</span>", 
"static void *<a class=\"id\" href=\"#__mld2_query_bugs\">__mld2_query_bugs</a>[] <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#__unused__\">__unused__</a>)) = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON_NULL\">BUILD_BUG_ON_NULL</a>(<a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#mld2_query\">mld2_query</a>, <a class=\"id\" href=\"#mld2q_srcs\">mld2q_srcs</a>) % 4),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON_NULL\">BUILD_BUG_ON_NULL</a>(<a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#mld2_report\">mld2_report</a>, <a class=\"id\" href=\"#mld2r_grec\">mld2r_grec</a>) % 4),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON_NULL\">BUILD_BUG_ON_NULL</a>(<a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#mld2_grec\">mld2_grec</a>, <a class=\"id\" href=\"#grec_mca\">grec_mca</a>) % 4)", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#mld2_all_mcr\">mld2_all_mcr</a> = <a class=\"id\" href=\"#MLD2_ALL_MCR_INIT\">MLD2_ALL_MCR_INIT</a>;", 
"", 
"<span class=\"comment\">/* Big mc list lock for all the sockets */</span>", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"", 
"static void <a class=\"id\" href=\"#igmp6_join_group\">igmp6_join_group</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#ma\">ma</a>);", 
"static void <a class=\"id\" href=\"#igmp6_leave_group\">igmp6_leave_group</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#ma\">ma</a>);", 
"static void <a class=\"id\" href=\"#igmp6_timer_handler\">igmp6_timer_handler</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>);", 
"", 
"static void <a class=\"id\" href=\"#mld_gq_timer_expire\">mld_gq_timer_expire</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>);", 
"static void <a class=\"id\" href=\"#mld_ifc_timer_expire\">mld_ifc_timer_expire</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>);", 
"static void <a class=\"id\" href=\"#mld_ifc_event\">mld_ifc_event</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"static void <a class=\"id\" href=\"#mld_add_delrec\">mld_add_delrec</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"static void <a class=\"id\" href=\"#mld_del_delrec\">mld_del_delrec</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>);", 
"static void <a class=\"id\" href=\"#mld_clear_delrec\">mld_clear_delrec</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"static int <a class=\"id\" href=\"#sf_setstate\">sf_setstate</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"static void <a class=\"id\" href=\"#sf_markstate\">sf_markstate</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"static void <a class=\"id\" href=\"#ip6_mc_clear_src\">ip6_mc_clear_src</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"static int <a class=\"id\" href=\"#ip6_mc_del_src\">ip6_mc_del_src</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#pmca\">pmca</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#sfmode\">sfmode</a>, int <a class=\"id\" href=\"#sfcount\">sfcount</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#psfsrc\">psfsrc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#delta\">delta</a>);", 
"static int <a class=\"id\" href=\"#ip6_mc_add_src\">ip6_mc_add_src</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#pmca\">pmca</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#sfmode\">sfmode</a>, int <a class=\"id\" href=\"#sfcount\">sfcount</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#psfsrc\">psfsrc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#delta\">delta</a>);", 
"static int <a class=\"id\" href=\"#ip6_mc_leave_src\">ip6_mc_leave_src</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a> *<a class=\"id\" href=\"#iml\">iml</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IGMP6_UNSOLICITED_IVAL\">IGMP6_UNSOLICITED_IVAL</a><span class=\"ts\"/>(10*<a class=\"id\" href=\"#HZ\">HZ</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MLD_QRV_DEFAULT\">MLD_QRV_DEFAULT</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MLD_V1_SEEN\">MLD_V1_SEEN</a>(<a class=\"id\" href=\"#idev\">idev</a>) (<a class=\"id\" href=\"#dev_net\">dev_net</a>((<a class=\"id\" href=\"#idev\">idev</a>)-><a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#force_mld_version\">force_mld_version</a> == 1 || \\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#idev\">idev</a>)-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#force_mld_version\">force_mld_version</a> == 1 || \\", 
"<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#idev\">idev</a>)-><a class=\"id\" href=\"#mc_v1_seen\">mc_v1_seen</a> && \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, (<a class=\"id\" href=\"#idev\">idev</a>)-><a class=\"id\" href=\"#mc_v1_seen\">mc_v1_seen</a>)))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IPV6_MLD_MAX_MSF\">IPV6_MLD_MAX_MSF</a><span class=\"ts\"/>64", 
"", 
"int <a class=\"id\" href=\"#sysctl_mld_max_msf\">sysctl_mld_max_msf</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = <a class=\"id\" href=\"#IPV6_MLD_MAX_MSF\">IPV6_MLD_MAX_MSF</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>socket join on multicast group</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ipv6_sock_mc_join\">ipv6_sock_mc_join</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a> *<a class=\"id\" href=\"#mc_lst\">mc_lst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(<a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#mc_lst\">mc_lst</a>=<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a>; <a class=\"id\" href=\"#mc_lst\">mc_lst</a>; <a class=\"id\" href=\"#mc_lst\">mc_lst</a>=<a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ifindex\">ifindex</a> == 0 || <a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> == <a class=\"id\" href=\"#ifindex\">ifindex</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRINUSE\">EADDRINUSE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc_lst\">mc_lst</a> = <a class=\"id\" href=\"#sock_kmalloc\">sock_kmalloc</a>(<a class=\"id\" href=\"#sk\">sk</a>, sizeof(struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mc_lst\">mc_lst</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifindex\">ifindex</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#rt6_lookup\">rt6_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_dev\">rt6i_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>, sizeof(*<a class=\"id\" href=\"#mc_lst\">mc_lst</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> = <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_init\">rwlock_init</a>(&amp;<a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#sflock\">sflock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#sflist\">sflist</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>now add/increase the group membership on the device</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_dev_mc_inc\">ipv6_dev_mc_inc</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>, sizeof(*<a class=\"id\" href=\"#mc_lst\">mc_lst</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a> = <a class=\"id\" href=\"#mc_lst\">mc_lst</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>socket leave on multicast group</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ipv6_sock_mc_drop\">ipv6_sock_mc_drop</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a> *<a class=\"id\" href=\"#mc_lst\">mc_lst</a>, **<a class=\"id\" href=\"#lnk\">lnk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#lnk\">lnk</a> = &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a>; (<a class=\"id\" href=\"#mc_lst\">mc_lst</a> = *<a class=\"id\" href=\"#lnk\">lnk</a>) !=<a class=\"id\" href=\"#NULL\">NULL</a> ; <a class=\"id\" href=\"#lnk\">lnk</a> = &amp;<a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ifindex\">ifindex</a> == 0 || <a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> == <a class=\"id\" href=\"#ifindex\">ifindex</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#lnk\">lnk</a> = <a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ip6_mc_leave_src\">ip6_mc_leave_src</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>, <a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ipv6_dev_mc_dec\">__ipv6_dev_mc_dec</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ip6_mc_leave_src\">ip6_mc_leave_src</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>, sizeof(*<a class=\"id\" href=\"#mc_lst\">mc_lst</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* called with rcu_read_lock() */</span>", 
"static struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#ip6_mc_find_dev_rcu\">ip6_mc_find_dev_rcu</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#ifindex\">ifindex</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifindex\">ifindex</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#rt6_lookup\">rt6_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_dev\">rt6i_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dead\">dead</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#idev\">idev</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ipv6_sock_mc_close\">ipv6_sock_mc_close</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a> *<a class=\"id\" href=\"#mc_lst\">mc_lst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#mc_lst\">mc_lst</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a> = <a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ip6_mc_leave_src\">ip6_mc_leave_src</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>, <a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ipv6_dev_mc_dec\">__ipv6_dev_mc_dec</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#mc_lst\">mc_lst</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ip6_mc_leave_src\">ip6_mc_leave_src</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mc_lst\">mc_lst</a>, sizeof(*<a class=\"id\" href=\"#mc_lst\">mc_lst</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_mc_source\">ip6_mc_source</a>(int <a class=\"id\" href=\"#add\">add</a>, int <a class=\"id\" href=\"#omode\">omode</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#group_source_req\">group_source_req</a> *<a class=\"id\" href=\"#pgsr\">pgsr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#source\">source</a>, *<a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a> *<a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#inet6\">inet6</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_socklist\">ip6_sf_socklist</a> *<a class=\"id\" href=\"#psl\">psl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#leavegroup\">leavegroup</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pmclocked\">pmclocked</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#source\">source</a> = &amp;((struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)&amp;<a class=\"id\" href=\"#pgsr\">pgsr</a>-><a class=\"id\" href=\"#gsr_source\">gsr_source</a>)-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = &amp;((struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)&amp;<a class=\"id\" href=\"#pgsr\">pgsr</a>-><a class=\"id\" href=\"#gsr_group\">gsr_group</a>)-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(<a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ip6_mc_find_dev_rcu\">ip6_mc_find_dev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#pgsr\">pgsr</a>-><a class=\"id\" href=\"#gsr_interface\">gsr_interface</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#inet6\">inet6</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pgsr\">pgsr</a>-><a class=\"id\" href=\"#gsr_interface\">gsr_interface</a> && <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> != <a class=\"id\" href=\"#pgsr\">pgsr</a>-><a class=\"id\" href=\"#gsr_interface\">gsr_interface</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* must have a prior join */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* if a source filter was set, must be the same mode as before */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflist\">sflist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> != <a class=\"id\" href=\"#omode\">omode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> != <a class=\"id\" href=\"#omode\">omode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allow mode switches for empty-set filters */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_mc_add_src\">ip6_mc_add_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#omode\">omode</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_mc_del_src\">ip6_mc_del_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> = <a class=\"id\" href=\"#omode\">omode</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflock\">sflock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmclocked\">pmclocked</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflist\">sflist</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#add\">add</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#psl\">psl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;<span class=\"ts\"/><span class=\"comment\">/* err = -EADDRNOTAVAIL */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = !0;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#memcmp\">memcmp</a>(&amp;<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#source\">source</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rv\">rv</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rv\">rv</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* source not found */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;<span class=\"ts\"/><span class=\"comment\">/* err = -EADDRNOTAVAIL */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* special case - (INCLUDE, empty) == LEAVE_GROUP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a> == 1 && <a class=\"id\" href=\"#omode\">omode</a> == <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#leavegroup\">leavegroup</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update the interface filter */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_mc_del_src\">ip6_mc_del_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#omode\">omode</a>, 1, <a class=\"id\" href=\"#source\">source</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a>=<a class=\"id\" href=\"#i\">i</a>+1; <a class=\"id\" href=\"#j\">j</a>&lt;<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#j\">j</a>-1] = <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* else, add a new source to the filter */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#psl\">psl</a> && <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a> >= <a class=\"id\" href=\"#sysctl_mld_max_msf\">sysctl_mld_max_msf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#psl\">psl</a> || <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a> == <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_max\">sl_max</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_socklist\">ip6_sf_socklist</a> *<a class=\"id\" href=\"#newpsl\">newpsl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#IP6_SFBLOCK\">IP6_SFBLOCK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psl\">psl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_max\">sl_max</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newpsl\">newpsl</a> = <a class=\"id\" href=\"#sock_kmalloc\">sock_kmalloc</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#IP6_SFLSIZE\">IP6_SFLSIZE</a>(<a class=\"id\" href=\"#count\">count</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#newpsl\">newpsl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_max\">sl_max</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a> = <a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#IP6_SFBLOCK\">IP6_SFBLOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psl\">psl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#psl\">psl</a>, <a class=\"id\" href=\"#IP6_SFLSIZE\">IP6_SFLSIZE</a>(<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_max\">sl_max</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflist\">sflist</a> = <a class=\"id\" href=\"#psl\">psl</a> = <a class=\"id\" href=\"#newpsl\">newpsl</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* &gt; 0 for insert logic below if sl_count is 0 */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#memcmp\">memcmp</a>(&amp;<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#source\">source</a>, sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rv\">rv</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rv\">rv</a> == 0)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* address already there is an error */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a>=<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>-1; <a class=\"id\" href=\"#j\">j</a>>=<a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#j\">j</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#j\">j</a>+1] = <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>] = *<a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* update the interface list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_mc_add_src\">ip6_mc_add_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#omode\">omode</a>, 1, <a class=\"id\" href=\"#source\">source</a>, 1);", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmclocked\">pmclocked</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflock\">sflock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#leavegroup\">leavegroup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ipv6_sock_mc_drop\">ipv6_sock_mc_drop</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#pgsr\">pgsr</a>-><a class=\"id\" href=\"#gsr_interface\">gsr_interface</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_mc_msfilter\">ip6_mc_msfilter</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#group_filter\">group_filter</a> *<a class=\"id\" href=\"#gsf\">gsf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a> *<a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#inet6\">inet6</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_socklist\">ip6_sf_socklist</a> *<a class=\"id\" href=\"#newpsl\">newpsl</a>, *<a class=\"id\" href=\"#psl\">psl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#leavegroup\">leavegroup</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = &amp;((struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)&amp;<a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_group\">gf_group</a>)-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(<a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_fmode\">gf_fmode</a> != <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_fmode\">gf_fmode</a> != <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ip6_mc_find_dev_rcu\">ip6_mc_find_dev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_interface\">gf_interface</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_fmode\">gf_fmode</a> == <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a> && <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#leavegroup\">leavegroup</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#inet6\">inet6</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> != <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_interface\">gf_interface</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* must have a prior join */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newpsl\">newpsl</a> = <a class=\"id\" href=\"#sock_kmalloc\">sock_kmalloc</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#IP6_SFLSIZE\">IP6_SFLSIZE</a>(<a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#newpsl\">newpsl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_max\">sl_max</a> = <a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a> = <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *<a class=\"id\" href=\"#psin6\">psin6</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psin6\">psin6</a> = (struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)&amp;<a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_slist\">gf_slist</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#psin6\">psin6</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_mc_add_src\">ip6_mc_add_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_fmode\">gf_fmode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>, <a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#newpsl\">newpsl</a>, <a class=\"id\" href=\"#IP6_SFLSIZE\">IP6_SFLSIZE</a>(<a class=\"id\" href=\"#newpsl\">newpsl</a>-><a class=\"id\" href=\"#sl_max\">sl_max</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newpsl\">newpsl</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ip6_mc_add_src\">ip6_mc_add_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_fmode\">gf_fmode</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflock\">sflock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflist\">sflist</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#psl\">psl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ip6_mc_del_src\">ip6_mc_del_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>, <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#psl\">psl</a>, <a class=\"id\" href=\"#IP6_SFLSIZE\">IP6_SFLSIZE</a>(<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_max\">sl_max</a>));", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ip6_mc_del_src\">ip6_mc_del_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflist\">sflist</a> = <a class=\"id\" href=\"#newpsl\">newpsl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> = <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_fmode\">gf_fmode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflock\">sflock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#leavegroup\">leavegroup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_sock_mc_drop\">ipv6_sock_mc_drop</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_interface\">gf_interface</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_mc_msfget\">ip6_mc_msfget</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#group_filter\">group_filter</a> *<a class=\"id\" href=\"#gsf\">gsf</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#group_filter\">group_filter</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#copycount\">copycount</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a> *<a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#inet6\">inet6</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_socklist\">ip6_sf_socklist</a> *<a class=\"id\" href=\"#psl\">psl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = &amp;((struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)&amp;<a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_group\">gf_group</a>)-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(<a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ip6_mc_find_dev_rcu\">ip6_mc_find_dev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_interface\">gf_interface</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * changes to the ipv6_mc_list require the socket lock and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a read lock on ip6_sk_mc_lock. We have the socket lock,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so reading the list is safe.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#inet6\">inet6</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> != <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_interface\">gf_interface</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(<a class=\"id\" href=\"#group\">group</a>, &amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* must have a prior join */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_fmode\">gf_fmode</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#sflist\">sflist</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#psl\">psl</a> ? <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a> : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copycount\">copycount</a> = <a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a> ? <a class=\"id\" href=\"#count\">count</a> : <a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gsf\">gsf</a>-><a class=\"id\" href=\"#gf_numsrc\">gf_numsrc</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#GROUP_FILTER_SIZE\">GROUP_FILTER_SIZE</a>(<a class=\"id\" href=\"#copycount\">copycount</a>), <a class=\"id\" href=\"#optlen\">optlen</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#gsf\">gsf</a>, <a class=\"id\" href=\"#GROUP_FILTER_SIZE\">GROUP_FILTER_SIZE</a>(0))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* changes to psl require the socket lock, a read lock on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on ipv6_sk_mc_lock and a write lock on pmc-&gt;sflock. We</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have the socket lock, so reading here is safe.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#copycount\">copycount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *<a class=\"id\" href=\"#psin6\">psin6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#ss\">ss</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psin6\">psin6</a> = (struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)&amp;<a class=\"id\" href=\"#ss\">ss</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>, 0, sizeof(<a class=\"id\" href=\"#ss\">ss</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psin6\">psin6</a>-><a class=\"id\" href=\"#sin6_family\">sin6_family</a> = <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psin6\">psin6</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a> = <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(&amp;<a class=\"id\" href=\"#optval\">optval</a>-><a class=\"id\" href=\"#gf_slist\">gf_slist</a>[<a class=\"id\" href=\"#i\">i</a>], &amp;<a class=\"id\" href=\"#ss\">ss</a>, sizeof(<a class=\"id\" href=\"#ss\">ss</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#inet6_mc_check\">inet6_mc_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#mc_addr\">mc_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#src_addr\">src_addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a> *<a class=\"id\" href=\"#mc\">mc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_socklist\">ip6_sf_socklist</a> *<a class=\"id\" href=\"#psl\">psl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#mc\">mc</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_mc_list\">ipv6_mc_list</a>; <a class=\"id\" href=\"#mc\">mc</a>; <a class=\"id\" href=\"#mc\">mc</a> = <a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#mc_addr\">mc_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mc\">mc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#sflock\">sflock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psl\">psl</a> = <a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#sflist\">sflist</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#psl\">psl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> == <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#src_addr\">src_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> == <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a> && <a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a> == <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a> && <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#psl\">psl</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#sflock\">sflock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_mc_lock\">ipv6_sk_mc_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ma_put\">ma_put</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#mc\">mc</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_refcnt\">mca_refcnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#mc\">mc</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#igmp6_group_added\">igmp6_group_added</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#mc\">mc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#MAX_ADDR_LEN\">MAX_ADDR_LEN</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a>&amp;<a class=\"id\" href=\"#MAF_LOADED\">MAF_LOADED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> |= <a class=\"id\" href=\"#MAF_LOADED\">MAF_LOADED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ndisc_mc_map\">ndisc_mc_map</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#dev\">dev</a>, 0) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_mc_add\">dev_mc_add</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>) || (<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_NOREPORT\">MAF_NOREPORT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MLD_V1_SEEN\">MLD_V1_SEEN</a>(<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#idev\">idev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_join_group\">igmp6_join_group</a>(<a class=\"id\" href=\"#mc\">mc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* else v2 */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a> = <a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mld_ifc_event\">mld_ifc_event</a>(<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#igmp6_group_dropped\">igmp6_group_dropped</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#mc\">mc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#MAX_ADDR_LEN\">MAX_ADDR_LEN</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a>&amp;<a class=\"id\" href=\"#MAF_LOADED\">MAF_LOADED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &= ~<a class=\"id\" href=\"#MAF_LOADED\">MAF_LOADED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ndisc_mc_map\">ndisc_mc_map</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#dev\">dev</a>, 0) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_mc_del\">dev_mc_del</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_NOREPORT\">MAF_NOREPORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dead\">dead</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_leave_group\">igmp6_leave_group</a>(<a class=\"id\" href=\"#mc\">mc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_refcnt\">mca_refcnt</a>);", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_mc_clear_src\">ip6_mc_clear_src</a>(<a class=\"id\" href=\"#mc\">mc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * deleted ifmcaddr6 manipulation</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#mld_add_delrec\">mld_add_delrec</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#im\">im</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* this is an \"ifmcaddr6\" for convenience; only the fields below</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are actually used. In particular, the refcnt and users are not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * used for management of the delete list. Using the same structure</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for deleted items allows change reports to use common code with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * non-deleted or query-response MCA's.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#pmc\">pmc</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_hold\">in6_dev_hold</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a> = <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> = <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a> = <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a> = <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a> = <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_lock\">mc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_tomb\">mc_tomb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_tomb\">mc_tomb</a> = <a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_lock\">mc_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_del_delrec\">mld_del_delrec</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#pmca\">pmca</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, *<a class=\"id\" href=\"#pmc_prev\">pmc_prev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>, *<a class=\"id\" href=\"#psf_next\">psf_next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_lock\">mc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc_prev\">pmc_prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_tomb\">mc_tomb</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#pmca\">pmca</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc_prev\">pmc_prev</a> = <a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc_prev\">pmc_prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc_prev\">pmc_prev</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_tomb\">mc_tomb</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_lock\">mc_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf_next\">psf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_next\">psf_next</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#psf\">psf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_clear_delrec\">mld_clear_delrec</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, *<a class=\"id\" href=\"#nextpmc\">nextpmc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_lock\">mc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_tomb\">mc_tomb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_tomb\">mc_tomb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_lock\">mc_lock</a>);", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a> = <a class=\"id\" href=\"#nextpmc\">nextpmc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nextpmc\">nextpmc</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_mc_clear_src\">ip6_mc_clear_src</a>(<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear dead sources, too */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>, *<a class=\"id\" href=\"#psf_next\">psf_next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf_next\">psf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_next\">psf_next</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#psf\">psf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device multicast group inc (add if not found)</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ipv6_dev_mc_inc\">ipv6_dev_mc_inc</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#mc\">mc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we need to take a reference on idev */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#in6_dev_get\">in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dead\">dead</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#mc\">mc</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#mc\">mc</a>; <a class=\"id\" href=\"#mc\">mc</a> = <a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_users\">mca_users</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_mc_add_src\">ip6_mc_add_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>not found: create a new one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mc\">mc</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>, <a class=\"id\" href=\"#igmp6_timer_handler\">igmp6_timer_handler</a>, (unsigned long)<a class=\"id\" href=\"#mc\">mc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#idev\">idev</a>; <span class=\"comment\">/* (reference taken) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_users\">mca_users</a> = 1;", 
"<span class=\"ts\"/><span class=\"comment\">/* mca_stamp should be updated upon changes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_cstamp\">mca_cstamp</a> = <a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_tstamp\">mca_tstamp</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_refcnt\">mca_refcnt</a>, 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* initial mode is (EX, empty) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> = <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_ll_all_nodes\">ipv6_addr_is_ll_all_nodes</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#IPV6_ADDR_MC_SCOPE\">IPV6_ADDR_MC_SCOPE</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>) &lt; <a class=\"id\" href=\"#IPV6_ADDR_SCOPE_LINKLOCAL\">IPV6_ADDR_SCOPE_LINKLOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> |= <a class=\"id\" href=\"#MAF_NOREPORT\">MAF_NOREPORT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a> = <a class=\"id\" href=\"#mc\">mc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mld_del_delrec\">mld_del_delrec</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_group_added\">igmp6_group_added</a>(<a class=\"id\" href=\"#mc\">mc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ma_put\">ma_put</a>(<a class=\"id\" href=\"#mc\">mc</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device multicast group del</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__ipv6_dev_mc_dec\">__ipv6_dev_mc_dec</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#ma\">ma</a>, **<a class=\"id\" href=\"#map\">map</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#map\">map</a> = &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; (<a class=\"id\" href=\"#ma\">ma</a>=*<a class=\"id\" href=\"#map\">map</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#map\">map</a> = &amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (--<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_users\">mca_users</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_group_dropped\">igmp6_group_dropped</a>(<a class=\"id\" href=\"#ma\">ma</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ma_put\">ma_put</a>(<a class=\"id\" href=\"#ma\">ma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ipv6_dev_mc_dec\">ipv6_dev_mc_dec</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__ipv6_dev_mc_dec\">__ipv6_dev_mc_dec</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * identify MLD packets for MLD filter exceptions</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ipv6_is_mld\">ipv6_is_mld</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#nexthdr\">nexthdr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#pic\">pic</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthdr\">nexthdr</a> != <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pic\">pic</a> = <a class=\"id\" href=\"#icmp6_hdr\">icmp6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#pic\">pic</a>-><a class=\"id\" href=\"#icmp6_type\">icmp6_type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MGM_QUERY\">ICMPV6_MGM_QUERY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MGM_REPORT\">ICMPV6_MGM_REPORT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MGM_REDUCTION\">ICMPV6_MGM_REDUCTION</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MLD2_REPORT\">ICMPV6_MLD2_REPORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>check if the interface/address pair is valid</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ipv6_chk_mcast_addr\">ipv6_chk_mcast_addr</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#src_addr\">src_addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#mc\">mc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#mc\">mc</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#mc\">mc</a>; <a class=\"id\" href=\"#mc\">mc</a>=<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mc\">mc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#src_addr\">src_addr</a> && !<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(<a class=\"id\" href=\"#src_addr\">src_addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>;<a class=\"id\" href=\"#psf\">psf</a>;<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>, <a class=\"id\" href=\"#src_addr\">src_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psf\">psf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>] ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] !=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] !=0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mc\">mc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = 1; <span class=\"comment\">/* don't filter unspecified source */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_gq_start_timer\">mld_gq_start_timer</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tv\">tv</a> = <a class=\"id\" href=\"#net_random\">net_random</a>() % <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_maxdelay\">mc_maxdelay</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_gq_running\">mc_gq_running</a> = 1;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_gq_timer\">mc_gq_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>+<a class=\"id\" href=\"#tv\">tv</a>+2))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_hold\">in6_dev_hold</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_ifc_start_timer\">mld_ifc_start_timer</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, int <a class=\"id\" href=\"#delay\">delay</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tv\">tv</a> = <a class=\"id\" href=\"#net_random\">net_random</a>() % <a class=\"id\" href=\"#delay\">delay</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_timer\">mc_ifc_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>+<a class=\"id\" href=\"#tv\">tv</a>+2))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_hold\">in6_dev_hold</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IGMP handling (alias multicast ICMPv6 messages)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#igmp6_group_queried\">igmp6_group_queried</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#ma\">ma</a>, unsigned long <a class=\"id\" href=\"#resptime\">resptime</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#resptime\">resptime</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do not start timer for these addresses */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_ll_all_nodes\">ipv6_addr_is_ll_all_nodes</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#IPV6_ADDR_MC_SCOPE\">IPV6_ADDR_MC_SCOPE</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>) &lt; <a class=\"id\" href=\"#IPV6_ADDR_SCOPE_LINKLOCAL\">IPV6_ADDR_SCOPE_LINKLOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_refcnt\">mca_refcnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>.<a class=\"id\" href=\"#expires\">expires</a> - <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#delay\">delay</a> >= <a class=\"id\" href=\"#resptime\">resptime</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#resptime\">resptime</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#net_random\">net_random</a>() % <a class=\"id\" href=\"#resptime\">resptime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#delay\">delay</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#delay\">delay</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_refcnt\">mca_refcnt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> |= <a class=\"id\" href=\"#MAF_TIMER_RUNNING\">MAF_TIMER_RUNNING</a>;", 
"}", 
"", 
"<span class=\"comment\">/* mark EXCLUDE-mode sources */</span>", 
"static int <a class=\"id\" href=\"#mld_xmarksources\">mld_xmarksources</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, int <a class=\"id\" href=\"#nsrcs\">nsrcs</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#srcs\">srcs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#scount\">scount</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scount\">scount</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scount\">scount</a> == <a class=\"id\" href=\"#nsrcs\">nsrcs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#nsrcs\">nsrcs</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* skip inactive filters */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>] ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] !=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#srcs\">srcs</a>[<a class=\"id\" href=\"#i\">i</a>], &amp;<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scount\">scount</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &= ~<a class=\"id\" href=\"#MAF_GSQUERY\">MAF_GSQUERY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scount\">scount</a> == <a class=\"id\" href=\"#nsrcs\">nsrcs</a>)<span class=\"ts\"/><span class=\"comment\">/* all sources excluded */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mld_marksources\">mld_marksources</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, int <a class=\"id\" href=\"#nsrcs\">nsrcs</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#srcs\">srcs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#scount\">scount</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mld_xmarksources\">mld_xmarksources</a>(<a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#nsrcs\">nsrcs</a>, <a class=\"id\" href=\"#srcs\">srcs</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* mark INCLUDE-mode sources */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scount\">scount</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scount\">scount</a> == <a class=\"id\" href=\"#nsrcs\">nsrcs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#nsrcs\">nsrcs</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#srcs\">srcs</a>[<a class=\"id\" href=\"#i\">i</a>], &amp;<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_gsresp\">sf_gsresp</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scount\">scount</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scount\">scount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &= ~<a class=\"id\" href=\"#MAF_GSQUERY\">MAF_GSQUERY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> |= <a class=\"id\" href=\"#MAF_GSQUERY\">MAF_GSQUERY</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/* called with rcu_read_lock() */</span>", 
"int <a class=\"id\" href=\"#igmp6_event_query\">igmp6_event_query</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld2_query\">mld2_query</a> *<a class=\"id\" href=\"#mlh2\">mlh2</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#ma\">ma</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_delay\">max_delay</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld_msg\">mld_msg</a> *<a class=\"id\" href=\"#mld\">mld</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#group_type\">group_type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mark\">mark</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* compute payload length excluding extension headers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#payload_len\">payload_len</a>) + sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Drop queries with not link local source */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>) &amp; <a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mld\">mld</a> = (struct <a class=\"id\" href=\"#mld_msg\">mld_msg</a> *)<a class=\"id\" href=\"#icmp6_hdr\">icmp6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = &amp;<a class=\"id\" href=\"#mld\">mld</a>-><a class=\"id\" href=\"#mld_mca\">mld_mca</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group_type\">group_type</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(<a class=\"id\" href=\"#group\">group</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group_type\">group_type</a> != <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a> &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#group_type\">group_type</a>&amp;<a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == 24) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#switchback\">switchback</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* MLDv1 router present */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Translate milliseconds to jiffies */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_delay\">max_delay</a> = (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#mld\">mld</a>-><a class=\"id\" href=\"#mld_maxdelay\">mld_maxdelay</a>)*<a class=\"id\" href=\"#HZ\">HZ</a>)/1000;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#switchback\">switchback</a> = (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a> + 1) * <a class=\"id\" href=\"#max_delay\">max_delay</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_v1_seen\">mc_v1_seen</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#switchback\">switchback</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* cancel the interface change timer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_count\">mc_ifc_count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_timer\">mc_ifc_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__in6_dev_put\">__in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clear deleted report items */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_clear_delrec\">mld_clear_delrec</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#len\">len</a> >= 28) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#srcs_offset\">srcs_offset</a> = sizeof(struct <a class=\"id\" href=\"#mld2_query\">mld2_query</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#srcs_offset\">srcs_offset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mlh2\">mlh2</a> = (struct <a class=\"id\" href=\"#mld2_query\">mld2_query</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_delay\">max_delay</a> = (<a class=\"id\" href=\"#MLDV2_MRC\">MLDV2_MRC</a>(<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#mlh2\">mlh2</a>-><a class=\"id\" href=\"#mld2q_mrc\">mld2q_mrc</a>))*<a class=\"id\" href=\"#HZ\">HZ</a>)/1000;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#max_delay\">max_delay</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_delay\">max_delay</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_maxdelay\">mc_maxdelay</a> = <a class=\"id\" href=\"#max_delay\">max_delay</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mlh2\">mlh2</a>-><a class=\"id\" href=\"#mld2q_qrv\">mld2q_qrv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a> = <a class=\"id\" href=\"#mlh2\">mlh2</a>-><a class=\"id\" href=\"#mld2q_qrv\">mld2q_qrv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#group_type\">group_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a>) { <span class=\"comment\">/* general query */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mlh2\">mlh2</a>-><a class=\"id\" href=\"#mld2q_nsrcs\">mld2q_nsrcs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>; <span class=\"comment\">/* no sources allowed */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_gq_start_timer\">mld_gq_start_timer</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* mark sources to include, if group &amp; source-specific */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mlh2\">mlh2</a>-><a class=\"id\" href=\"#mld2q_nsrcs\">mld2q_nsrcs</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#srcs_offset\">srcs_offset</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#mlh2\">mlh2</a>-><a class=\"id\" href=\"#mld2q_nsrcs\">mld2q_nsrcs</a>) * sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mlh2\">mlh2</a> = (struct <a class=\"id\" href=\"#mld2_query\">mld2_query</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark\">mark</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group_type\">group_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ma\">ma</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#ma\">ma</a>; <a class=\"id\" href=\"#ma\">ma</a>=<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_group_queried\">igmp6_group_queried</a>(<a class=\"id\" href=\"#ma\">ma</a>, <a class=\"id\" href=\"#max_delay\">max_delay</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ma\">ma</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#ma\">ma</a>; <a class=\"id\" href=\"#ma\">ma</a>=<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(<a class=\"id\" href=\"#group\">group</a>, &amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_TIMER_RUNNING\">MAF_TIMER_RUNNING</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* gsquery &lt;- gsquery &amp;&amp; mark */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mark\">mark</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &= ~<a class=\"id\" href=\"#MAF_GSQUERY\">MAF_GSQUERY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* gsquery &lt;- mark */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mark\">mark</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> |= <a class=\"id\" href=\"#MAF_GSQUERY\">MAF_GSQUERY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &= ~<a class=\"id\" href=\"#MAF_GSQUERY\">MAF_GSQUERY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_GSQUERY\">MAF_GSQUERY</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#mld_marksources\">mld_marksources</a>(<a class=\"id\" href=\"#ma\">ma</a>, <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#mlh2\">mlh2</a>-><a class=\"id\" href=\"#mld2q_nsrcs\">mld2q_nsrcs</a>), <a class=\"id\" href=\"#mlh2\">mlh2</a>-><a class=\"id\" href=\"#mld2q_srcs\">mld2q_srcs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_group_queried\">igmp6_group_queried</a>(<a class=\"id\" href=\"#ma\">ma</a>, <a class=\"id\" href=\"#max_delay\">max_delay</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* called with rcu_read_lock() */</span>", 
"int <a class=\"id\" href=\"#igmp6_event_report\">igmp6_event_report</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#ma\">ma</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld_msg\">mld_msg</a> *<a class=\"id\" href=\"#mld\">mld</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_type\">addr_type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Our own report looped back. Ignore it. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> == <a class=\"id\" href=\"#PACKET_LOOPBACK\">PACKET_LOOPBACK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* send our report if the MC router may not have heard this report */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> != <a class=\"id\" href=\"#PACKET_MULTICAST\">PACKET_MULTICAST</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> != <a class=\"id\" href=\"#PACKET_BROADCAST\">PACKET_BROADCAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#mld\">mld</a>) - sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mld\">mld</a> = (struct <a class=\"id\" href=\"#mld_msg\">mld_msg</a> *)<a class=\"id\" href=\"#icmp6_hdr\">icmp6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Drop reports with not link local source */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> != <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a> &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#addr_type\">addr_type</a>&amp;<a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Cancel the timer for this group</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ma\">ma</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#ma\">ma</a>; <a class=\"id\" href=\"#ma\">ma</a>=<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, &amp;<a class=\"id\" href=\"#mld\">mld</a>-><a class=\"id\" href=\"#mld_mca\">mld_mca</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_refcnt\">mca_refcnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &= ~(<a class=\"id\" href=\"#MAF_LAST_REPORTER\">MAF_LAST_REPORTER</a>|<a class=\"id\" href=\"#MAF_TIMER_RUNNING\">MAF_TIMER_RUNNING</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#is_in\">is_in</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#gdeleted\">gdeleted</a>, int <a class=\"id\" href=\"#sdeleted\">sdeleted</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MLD2_MODE_IS_INCLUDE\">MLD2_MODE_IS_INCLUDE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MLD2_MODE_IS_EXCLUDE\">MLD2_MODE_IS_EXCLUDE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gdeleted\">gdeleted</a> || <a class=\"id\" href=\"#sdeleted\">sdeleted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!((<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_GSQUERY\">MAF_GSQUERY</a>) && !<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_gsresp\">sf_gsresp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* don't include if this source is excluded</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in all filters</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MLD2_MODE_IS_INCLUDE\">MLD2_MODE_IS_INCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MLD2_CHANGE_TO_INCLUDE\">MLD2_CHANGE_TO_INCLUDE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gdeleted\">gdeleted</a> || <a class=\"id\" href=\"#sdeleted\">sdeleted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>] != 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MLD2_CHANGE_TO_EXCLUDE\">MLD2_CHANGE_TO_EXCLUDE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gdeleted\">gdeleted</a> || <a class=\"id\" href=\"#sdeleted\">sdeleted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] == 0 ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>];", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MLD2_ALLOW_NEW_SOURCES\">MLD2_ALLOW_NEW_SOURCES</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gdeleted\">gdeleted</a> || !<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>) ^ <a class=\"id\" href=\"#sdeleted\">sdeleted</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MLD2_BLOCK_OLD_SOURCES\">MLD2_BLOCK_OLD_SOURCES</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#gdeleted\">gdeleted</a> || (<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> && <a class=\"id\" href=\"#sdeleted\">sdeleted</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> && !<a class=\"id\" href=\"#gdeleted\">gdeleted</a> && !<a class=\"id\" href=\"#sdeleted\">sdeleted</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#mld_scount\">mld_scount</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#gdeleted\">gdeleted</a>, int <a class=\"id\" href=\"#sdeleted\">sdeleted</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#scount\">scount</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_in\">is_in</a>(<a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#psf\">psf</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#gdeleted\">gdeleted</a>, <a class=\"id\" href=\"#sdeleted\">sdeleted</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scount\">scount</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scount\">scount</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#mld_newpack\">mld_newpack</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#igmp_sk\">igmp_sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld2_report\">mld2_report</a> *<a class=\"id\" href=\"#pmr\">pmr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr_buf\">addr_buf</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ra\">ra</a>[8] = { <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IPV6_TLV_ROUTERALERT\">IPV6_TLV_ROUTERALERT</a>, 2, 0, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IPV6_TLV_PADN\">IPV6_TLV_PADN</a>, 0 };", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we assume size &gt; sizeof(ra) here */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#LL_ALLOCATED_SPACE\">LL_ALLOCATED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* limit our allocations to order-0 page */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#SKB_MAX_ORDER\">SKB_MAX_ORDER</a>(0, 0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_alloc_send_skb\">sock_alloc_send_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#size\">size</a>, 1, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_get_lladdr\">ipv6_get_lladdr</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#addr_buf\">addr_buf</a>, <a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* &lt;draft-ietf-magma-mld-source-05.txt&gt;:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * use unspecified address as the source address</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * when a valid link-local address is not available.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#in6addr_any\">in6addr_any</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#addr_buf\">addr_buf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_nd_hdr\">ip6_nd_hdr</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#mld2_all_mcr\">mld2_all_mcr</a>, <a class=\"id\" href=\"#NEXTHDR_HOP\">NEXTHDR_HOP</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(<a class=\"id\" href=\"#ra\">ra</a>)), <a class=\"id\" href=\"#ra\">ra</a>, sizeof(<a class=\"id\" href=\"#ra\">ra</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_set_transport_header\">skb_set_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_tail_pointer\">skb_tail_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>) - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#pmr\">pmr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a> = (struct <a class=\"id\" href=\"#mld2_report\">mld2_report</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a>-><a class=\"id\" href=\"#mld2r_type\">mld2r_type</a> = <a class=\"id\" href=\"#ICMPV6_MLD2_REPORT\">ICMPV6_MLD2_REPORT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a>-><a class=\"id\" href=\"#mld2r_resv1\">mld2r_resv1</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a>-><a class=\"id\" href=\"#mld2r_cksum\">mld2r_cksum</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a>-><a class=\"id\" href=\"#mld2r_resv2\">mld2r_resv2</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a>-><a class=\"id\" href=\"#mld2r_ngrec\">mld2r_ngrec</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_sendpack\">mld_sendpack</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#pip6\">pip6</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld2_report\">mld2_report</a> *<a class=\"id\" href=\"#pmr\">pmr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (struct <a class=\"id\" href=\"#mld2_report\">mld2_report</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#payload_len\">payload_len</a>, <a class=\"id\" href=\"#mldlen\">mldlen</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_UPD_PO_STATS\">IP6_UPD_PO_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUT\">IPSTATS_MIB_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#payload_len\">payload_len</a> = (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a>) - sizeof(*<a class=\"id\" href=\"#pip6\">pip6</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mldlen\">mldlen</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pip6\">pip6</a>-><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#payload_len\">payload_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a>-><a class=\"id\" href=\"#mld2r_cksum\">mld2r_cksum</a> = <a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(&amp;<a class=\"id\" href=\"#pip6\">pip6</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#pip6\">pip6</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#mldlen\">mldlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mldlen\">mldlen</a>, 0));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#icmp6_dst_alloc\">icmp6_dst_alloc</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_flow_init\">icmpv6_flow_init</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#igmp_sk\">igmp_sk</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#ICMPV6_MLD2_REPORT\">ICMPV6_MLD2_REPORT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set\">skb_dst_set</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>, <a class=\"id\" href=\"#NF_INET_LOCAL_OUT\">NF_INET_LOCAL_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#dst_output\">dst_output</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6MSGOUT_INC_STATS_BH\">ICMP6MSGOUT_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ICMPV6_MLD2_REPORT\">ICMPV6_MLD2_REPORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6_INC_STATS_BH\">ICMP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ICMP6_MIB_OUTMSGS\">ICMP6_MIB_OUTMSGS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_UPD_PO_STATS_BH\">IP6_UPD_PO_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTMCAST\">IPSTATS_MIB_OUTMCAST</a>, <a class=\"id\" href=\"#payload_len\">payload_len</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#grec_size\">grec_size</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#gdel\">gdel</a>, int <a class=\"id\" href=\"#sdel\">sdel</a>)", 
"{", 
"<span class=\"ts\"/>return sizeof(struct <a class=\"id\" href=\"#mld2_grec\">mld2_grec</a>) + 16 * <a class=\"id\" href=\"#mld_scount\">mld_scount</a>(<a class=\"id\" href=\"#pmc\">pmc</a>,<a class=\"id\" href=\"#type\">type</a>,<a class=\"id\" href=\"#gdel\">gdel</a>,<a class=\"id\" href=\"#sdel\">sdel</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#add_grhead\">add_grhead</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>, struct <a class=\"id\" href=\"#mld2_grec\">mld2_grec</a> **<a class=\"id\" href=\"#ppgr\">ppgr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld2_report\">mld2_report</a> *<a class=\"id\" href=\"#pmr\">pmr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld2_grec\">mld2_grec</a> *<a class=\"id\" href=\"#pgr\">pgr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#mld_newpack\">mld_newpack</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgr\">pgr</a> = (struct <a class=\"id\" href=\"#mld2_grec\">mld2_grec</a> *)<a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#mld2_grec\">mld2_grec</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgr\">pgr</a>-><a class=\"id\" href=\"#grec_type\">grec_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgr\">pgr</a>-><a class=\"id\" href=\"#grec_auxwords\">grec_auxwords</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgr\">pgr</a>-><a class=\"id\" href=\"#grec_nsrcs\">grec_nsrcs</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgr\">pgr</a>-><a class=\"id\" href=\"#grec_mca\">grec_mca</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>;<span class=\"ts\"/><span class=\"comment\">/* structure copy */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a> = (struct <a class=\"id\" href=\"#mld2_report\">mld2_report</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a>-><a class=\"id\" href=\"#mld2r_ngrec\">mld2r_ngrec</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#pmr\">pmr</a>-><a class=\"id\" href=\"#mld2r_ngrec\">mld2r_ngrec</a>)+1);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppgr\">ppgr</a> = <a class=\"id\" href=\"#pgr\">pgr</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVAILABLE\">AVAILABLE</a>(<a class=\"id\" href=\"#skb\">skb</a>) ((<a class=\"id\" href=\"#skb\">skb</a>) ? ((<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a> ? (<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> - (<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#len\">len</a> : \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_tailroom\">skb_tailroom</a>(<a class=\"id\" href=\"#skb\">skb</a>)) : 0)", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#add_grec\">add_grec</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#gdeleted\">gdeleted</a>, int <a class=\"id\" href=\"#sdeleted\">sdeleted</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld2_report\">mld2_report</a> *<a class=\"id\" href=\"#pmr\">pmr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld2_grec\">mld2_grec</a> *<a class=\"id\" href=\"#pgr\">pgr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>, *<a class=\"id\" href=\"#psf_next\">psf_next</a>, *<a class=\"id\" href=\"#psf_prev\">psf_prev</a>, **<a class=\"id\" href=\"#psf_list\">psf_list</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#scount\">scount</a>, <a class=\"id\" href=\"#stotal\">stotal</a>, <a class=\"id\" href=\"#first\">first</a>, <a class=\"id\" href=\"#isquery\">isquery</a>, <a class=\"id\" href=\"#truncate\">truncate</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_NOREPORT\">MAF_NOREPORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isquery\">isquery</a> = <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MLD2_MODE_IS_INCLUDE\">MLD2_MODE_IS_INCLUDE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MLD2_MODE_IS_EXCLUDE\">MLD2_MODE_IS_EXCLUDE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#truncate\">truncate</a> = <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MLD2_MODE_IS_EXCLUDE\">MLD2_MODE_IS_EXCLUDE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MLD2_CHANGE_TO_EXCLUDE\">MLD2_CHANGE_TO_EXCLUDE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stotal\">stotal</a> = <a class=\"id\" href=\"#scount\">scount</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psf_list\">psf_list</a> = <a class=\"id\" href=\"#sdeleted\">sdeleted</a> ? &amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a> : &amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>;", 
"", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#psf_list\">psf_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#empty_source\">empty_source</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmr\">pmr</a> = <a class=\"id\" href=\"#skb\">skb</a> ? (struct <a class=\"id\" href=\"#mld2_report\">mld2_report</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* EX and TO_EX get a fresh packet, if needed */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#truncate\">truncate</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmr\">pmr</a> && <a class=\"id\" href=\"#pmr\">pmr</a>-><a class=\"id\" href=\"#mld2r_ngrec\">mld2r_ngrec</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#AVAILABLE\">AVAILABLE</a>(<a class=\"id\" href=\"#skb\">skb</a>) &lt; <a class=\"id\" href=\"#grec_size\">grec_size</a>(<a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#gdeleted\">gdeleted</a>, <a class=\"id\" href=\"#sdeleted\">sdeleted</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_sendpack\">mld_sendpack</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#mld_newpack\">mld_newpack</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=*<a class=\"id\" href=\"#psf_list\">psf_list</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf_next\">psf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#psrc\">psrc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_next\">psf_next</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_in\">is_in</a>(<a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#psf\">psf</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#gdeleted\">gdeleted</a>, <a class=\"id\" href=\"#sdeleted\">sdeleted</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a> = <a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clear marks on query responses */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#isquery\">isquery</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_gsresp\">sf_gsresp</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#AVAILABLE\">AVAILABLE</a>(<a class=\"id\" href=\"#skb\">skb</a>) &lt; sizeof(*<a class=\"id\" href=\"#psrc\">psrc</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#first\">first</a>*sizeof(struct <a class=\"id\" href=\"#mld2_grec\">mld2_grec</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#truncate\">truncate</a> && !<a class=\"id\" href=\"#first\">first</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/> <span class=\"comment\">/* truncate these */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pgr\">pgr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgr\">pgr</a>-><a class=\"id\" href=\"#grec_nsrcs\">grec_nsrcs</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#scount\">scount</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_sendpack\">mld_sendpack</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#mld_newpack\">mld_newpack</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scount\">scount</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#first\">first</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grhead\">add_grhead</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#type\">type</a>, &amp;<a class=\"id\" href=\"#pgr\">pgr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psrc\">psrc</a> = (struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *)<a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#psrc\">psrc</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#psrc\">psrc</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scount\">scount</a>++; <a class=\"id\" href=\"#stotal\">stotal</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MLD2_ALLOW_NEW_SOURCES\">MLD2_ALLOW_NEW_SOURCES</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MLD2_BLOCK_OLD_SOURCES\">MLD2_BLOCK_OLD_SOURCES</a>) && <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#sdeleted\">sdeleted</a> || <a class=\"id\" href=\"#gdeleted\">gdeleted</a>) && <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psf_prev\">psf_prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#psf_list\">psf_list</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#psf\">psf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a> = <a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#empty_source\">empty_source</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stotal\">stotal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MLD2_ALLOW_NEW_SOURCES\">MLD2_ALLOW_NEW_SOURCES</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MLD2_BLOCK_OLD_SOURCES\">MLD2_BLOCK_OLD_SOURCES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a> || <a class=\"id\" href=\"#isquery\">isquery</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* make sure we have room for group header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> && <a class=\"id\" href=\"#AVAILABLE\">AVAILABLE</a>(<a class=\"id\" href=\"#skb\">skb</a>) &lt; sizeof(struct <a class=\"id\" href=\"#mld2_grec\">mld2_grec</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_sendpack\">mld_sendpack</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>; <span class=\"comment\">/* add_grhead will get a new one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grhead\">add_grhead</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#type\">type</a>, &amp;<a class=\"id\" href=\"#pgr\">pgr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pgr\">pgr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgr\">pgr</a>-><a class=\"id\" href=\"#grec_nsrcs\">grec_nsrcs</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#scount\">scount</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#isquery\">isquery</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &= ~<a class=\"id\" href=\"#MAF_GSQUERY\">MAF_GSQUERY</a>;<span class=\"ts\"/><span class=\"comment\">/* clear query state */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_send_report\">mld_send_report</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_NOREPORT\">MAF_NOREPORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_MODE_IS_EXCLUDE\">MLD2_MODE_IS_EXCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_MODE_IS_INCLUDE\">MLD2_MODE_IS_INCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grec\">add_grec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#type\">type</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_MODE_IS_EXCLUDE\">MLD2_MODE_IS_EXCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_MODE_IS_INCLUDE\">MLD2_MODE_IS_INCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grec\">add_grec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#type\">type</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_sendpack\">mld_sendpack</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * remove zero-count source records from a source filter list</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#mld_clear_zeros\">mld_clear_zeros</a>(struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> **<a class=\"id\" href=\"#ppsf\">ppsf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf_prev\">psf_prev</a>, *<a class=\"id\" href=\"#psf_next\">psf_next</a>, *<a class=\"id\" href=\"#psf\">psf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=*<a class=\"id\" href=\"#ppsf\">ppsf</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#psf_next\">psf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_next\">psf_next</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psf_prev\">psf_prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ppsf\">ppsf</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#psf\">psf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a> = <a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_send_cr\">mld_send_cr</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, *<a class=\"id\" href=\"#pmc_prev\">pmc_prev</a>, *<a class=\"id\" href=\"#pmc_next\">pmc_next</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#dtype\">dtype</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_lock\">mc_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* deleted MCA's */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc_prev\">pmc_prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_tomb\">mc_tomb</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc_next\">pmc_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc_next\">pmc_next</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_BLOCK_OLD_SOURCES\">MLD2_BLOCK_OLD_SOURCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dtype\">dtype</a> = <a class=\"id\" href=\"#MLD2_BLOCK_OLD_SOURCES\">MLD2_BLOCK_OLD_SOURCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grec\">add_grec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#type\">type</a>, 1, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grec\">add_grec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#dtype\">dtype</a>, 1, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_CHANGE_TO_INCLUDE\">MLD2_CHANGE_TO_INCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grec\">add_grec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#type\">type</a>, 1, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_clear_zeros\">mld_clear_zeros</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_clear_zeros\">mld_clear_zeros</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a> == 0 && !<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc_prev\">pmc_prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc_prev\">pmc_prev</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pmc_next\">pmc_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_tomb\">mc_tomb</a> = <a class=\"id\" href=\"#pmc_next\">pmc_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc_prev\">pmc_prev</a> = <a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_lock\">mc_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* change recs */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_BLOCK_OLD_SOURCES\">MLD2_BLOCK_OLD_SOURCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dtype\">dtype</a> = <a class=\"id\" href=\"#MLD2_ALLOW_NEW_SOURCES\">MLD2_ALLOW_NEW_SOURCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_ALLOW_NEW_SOURCES\">MLD2_ALLOW_NEW_SOURCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dtype\">dtype</a> = <a class=\"id\" href=\"#MLD2_BLOCK_OLD_SOURCES\">MLD2_BLOCK_OLD_SOURCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grec\">add_grec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#type\">type</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grec\">add_grec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#dtype\">dtype</a>, 0, 1);<span class=\"ts\"/><span class=\"comment\">/* deleted sources */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* filter mode changes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_CHANGE_TO_EXCLUDE\">MLD2_CHANGE_TO_EXCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MLD2_CHANGE_TO_INCLUDE\">MLD2_CHANGE_TO_INCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#add_grec\">add_grec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#type\">type</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>(void) <a class=\"id\" href=\"#mld_sendpack\">mld_sendpack</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#igmp6_send\">igmp6_send</a>(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#igmp_sk\">igmp_sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mld_msg\">mld_msg</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#snd_addr\">snd_addr</a>, *<a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr_buf\">addr_buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#payload_len\">payload_len</a>, <a class=\"id\" href=\"#full_len\">full_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ra\">ra</a>[8] = { <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IPV6_TLV_ROUTERALERT\">IPV6_TLV_ROUTERALERT</a>, 2, 0, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IPV6_TLV_PADN\">IPV6_TLV_PADN</a>, 0 };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ICMPV6_MGM_REDUCTION\">ICMPV6_MGM_REDUCTION</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snd_addr\">snd_addr</a> = &amp;<a class=\"id\" href=\"#in6addr_linklocal_allrouters\">in6addr_linklocal_allrouters</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snd_addr\">snd_addr</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>) + sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#len\">len</a> + sizeof(<a class=\"id\" href=\"#ra\">ra</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#full_len\">full_len</a> = sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) + <a class=\"id\" href=\"#payload_len\">payload_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_UPD_PO_STATS\">IP6_UPD_PO_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_OUT\">IPSTATS_MIB_OUT</a>, <a class=\"id\" href=\"#full_len\">full_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_alloc_send_skb\">sock_alloc_send_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#LL_ALLOCATED_SPACE\">LL_ALLOCATED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>) + <a class=\"id\" href=\"#full_len\">full_len</a>, 1, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_get_lladdr\">ipv6_get_lladdr</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#addr_buf\">addr_buf</a>, <a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* &lt;draft-ietf-magma-mld-source-05.txt&gt;:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * use unspecified address as the source address</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * when a valid link-local address is not available.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#in6addr_any\">in6addr_any</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#addr_buf\">addr_buf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_nd_hdr\">ip6_nd_hdr</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#snd_addr\">snd_addr</a>, <a class=\"id\" href=\"#NEXTHDR_HOP\">NEXTHDR_HOP</a>, <a class=\"id\" href=\"#payload_len\">payload_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(<a class=\"id\" href=\"#ra\">ra</a>)), <a class=\"id\" href=\"#ra\">ra</a>, sizeof(<a class=\"id\" href=\"#ra\">ra</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = (struct <a class=\"id\" href=\"#mld_msg\">mld_msg</a> *) <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#mld_msg\">mld_msg</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#hdr\">hdr</a>, 0, sizeof(struct <a class=\"id\" href=\"#mld_msg\">mld_msg</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#mld_type\">mld_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#mld_mca\">mld_mca</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#mld_cksum\">mld_cksum</a> = <a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#snd_addr\">snd_addr</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#hdr\">hdr</a>, <a class=\"id\" href=\"#len\">len</a>, 0));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#icmp6_dst_alloc\">icmp6_dst_alloc</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_flow_init\">icmpv6_flow_init</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set\">skb_dst_set</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>, <a class=\"id\" href=\"#NF_INET_LOCAL_OUT\">NF_INET_LOCAL_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#dst_output\">dst_output</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6MSGOUT_INC_STATS\">ICMP6MSGOUT_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6_INC_STATS\">ICMP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ICMP6_MIB_OUTMSGS\">ICMP6_MIB_OUTMSGS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_UPD_PO_STATS\">IP6_UPD_PO_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTMCAST\">IPSTATS_MIB_OUTMCAST</a>, <a class=\"id\" href=\"#full_len\">full_len</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_mc_del1_src\">ip6_mc_del1_src</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, int <a class=\"id\" href=\"#sfmode\">sfmode</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#psfsrc\">psfsrc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>, *<a class=\"id\" href=\"#psf_prev\">psf_prev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>, <a class=\"id\" href=\"#psfsrc\">psfsrc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a> = <a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#psf\">psf</a> || <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#sfmode\">sfmode</a>] == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* source filter not found, or count wrong =&gt;  bug */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#sfmode\">sfmode</a>]--;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>] && !<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no more filters for this source */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psf_prev\">psf_prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_oldin\">sf_oldin</a> && !(<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_NOREPORT\">MAF_NOREPORT</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#MLD_V1_SEEN\">MLD_V1_SEEN</a>(<a class=\"id\" href=\"#idev\">idev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a> = <a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#psf\">psf</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_mc_del_src\">ip6_mc_del_src</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#pmca\">pmca</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#sfmode\">sfmode</a>, int <a class=\"id\" href=\"#sfcount\">sfcount</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#psfsrc\">psfsrc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#delta\">delta</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#changerec\">changerec</a> = 0;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(<a class=\"id\" href=\"#pmca\">pmca</a>, &amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* MCA not found?? bug */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sf_markstate\">sf_markstate</a>(<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#delta\">delta</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#sfmode\">sfmode</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#sfmode\">sfmode</a>]--;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#sfcount\">sfcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#ip6_mc_del1_src\">ip6_mc_del1_src</a>(<a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#sfmode\">sfmode</a>, &amp;<a class=\"id\" href=\"#psfsrc\">psfsrc</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#changerec\">changerec</a> |= <a class=\"id\" href=\"#rv\">rv</a> &gt; 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#rv\">rv</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] == 0 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* filter mode change */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> = <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_count\">mc_ifc_count</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_ifc_event\">mld_ifc_event</a>(<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sf_setstate\">sf_setstate</a>(<a class=\"id\" href=\"#pmc\">pmc</a>) || <a class=\"id\" href=\"#changerec\">changerec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_ifc_event\">mld_ifc_event</a>(<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Add multicast single-source filter to the interface list</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ip6_mc_add1_src\">ip6_mc_add1_src</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>, int <a class=\"id\" href=\"#sfmode\">sfmode</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#psfsrc\">psfsrc</a>, int <a class=\"id\" href=\"#delta\">delta</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>, *<a class=\"id\" href=\"#psf_prev\">psf_prev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>, <a class=\"id\" href=\"#psfsrc\">psfsrc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a> = <a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#psf\">psf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#psf\">psf</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#psf\">psf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a> = *<a class=\"id\" href=\"#psfsrc\">psfsrc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psf_prev\">psf_prev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf_prev\">psf_prev</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a> = <a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a> = <a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#sfmode\">sfmode</a>]++;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sf_markstate\">sf_markstate</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mca_xcount\">mca_xcount</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>];", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_oldin\">sf_oldin</a> = <a class=\"id\" href=\"#mca_xcount\">mca_xcount</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_oldin\">sf_oldin</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>] != 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sf_setstate\">sf_setstate</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>, *<a class=\"id\" href=\"#dpsf\">dpsf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mca_xcount\">mca_xcount</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#qrv\">qrv</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#new_in\">new_in</a>, <a class=\"id\" href=\"#rv\">rv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_in\">new_in</a> = <a class=\"id\" href=\"#mca_xcount\">mca_xcount</a> == <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_in\">new_in</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>] != 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_in\">new_in</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_oldin\">sf_oldin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#dpsf\">dpsf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a>; <a class=\"id\" href=\"#dpsf\">dpsf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#dpsf\">dpsf</a>=<a class=\"id\" href=\"#dpsf\">dpsf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#dpsf\">dpsf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#dpsf\">dpsf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dpsf\">dpsf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a> = <a class=\"id\" href=\"#dpsf\">dpsf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a> = <a class=\"id\" href=\"#dpsf\">dpsf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dpsf\">dpsf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> = <a class=\"id\" href=\"#qrv\">qrv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_oldin\">sf_oldin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * add or update \"delete\" records if an active filter</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * is now inactive</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#dpsf\">dpsf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a>; <a class=\"id\" href=\"#dpsf\">dpsf</a>; <a class=\"id\" href=\"#dpsf\">dpsf</a>=<a class=\"id\" href=\"#dpsf\">dpsf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#dpsf\">dpsf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dpsf\">dpsf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dpsf\">dpsf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#dpsf\">dpsf</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dpsf\">dpsf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dpsf\">dpsf</a> = *<a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pmc-&gt;mca_lock held by callers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dpsf\">dpsf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a> = <a class=\"id\" href=\"#dpsf\">dpsf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dpsf\">dpsf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> = <a class=\"id\" href=\"#qrv\">qrv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Add multicast source filter list to the interface list</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ip6_mc_add_src\">ip6_mc_add_src</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#pmca\">pmca</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#sfmode\">sfmode</a>, int <a class=\"id\" href=\"#sfcount\">sfcount</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#psfsrc\">psfsrc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#delta\">delta</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#isexclude\">isexclude</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#pmc\">pmc</a>; <a class=\"id\" href=\"#pmc\">pmc</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(<a class=\"id\" href=\"#pmca\">pmca</a>, &amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmc\">pmc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* MCA not found?? bug */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sf_markstate\">sf_markstate</a>(<a class=\"id\" href=\"#pmc\">pmc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isexclude\">isexclude</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> == <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#delta\">delta</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#sfmode\">sfmode</a>]++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#sfcount\">sfcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_mc_add1_src\">ip6_mc_add1_src</a>(<a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#sfmode\">sfmode</a>, &amp;<a class=\"id\" href=\"#psfsrc\">psfsrc</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#delta\">delta</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#delta\">delta</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#sfmode\">sfmode</a>]--;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a>=0; <a class=\"id\" href=\"#j\">j</a>&lt;<a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ip6_mc_del1_src\">ip6_mc_del1_src</a>(<a class=\"id\" href=\"#pmc\">pmc</a>, <a class=\"id\" href=\"#sfmode\">sfmode</a>, &amp;<a class=\"id\" href=\"#psfsrc\">psfsrc</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#isexclude\">isexclude</a> != (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] != 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* filter mode change */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> = <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> = <a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* else no filters; keep old mode for reports */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_count\">mc_ifc_count</a> = <a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_crcount\">mca_crcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_crcount\">sf_crcount</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_ifc_event\">mld_ifc_event</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sf_setstate\">sf_setstate</a>(<a class=\"id\" href=\"#pmc\">pmc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_ifc_event\">mld_ifc_event</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ip6_mc_clear_src\">ip6_mc_clear_src</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#pmc\">pmc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>, *<a class=\"id\" href=\"#nextpsf\">nextpsf</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#nextpsf\">nextpsf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nextpsf\">nextpsf</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#psf\">psf</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_tomb\">mca_tomb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>; <a class=\"id\" href=\"#psf\">psf</a>; <a class=\"id\" href=\"#psf\">psf</a>=<a class=\"id\" href=\"#nextpsf\">nextpsf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nextpsf\">nextpsf</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#psf\">psf</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfmode\">mca_sfmode</a> = <a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmc\">pmc</a>-><a class=\"id\" href=\"#mca_sfcount\">mca_sfcount</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>] = 1;", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#igmp6_join_group\">igmp6_join_group</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#ma\">ma</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#delay\">delay</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_NOREPORT\">MAF_NOREPORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_send\">igmp6_send</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ICMPV6_MGM_REPORT\">ICMPV6_MGM_REPORT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#net_random\">net_random</a>() % <a class=\"id\" href=\"#IGMP6_UNSOLICITED_IVAL\">IGMP6_UNSOLICITED_IVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_refcnt\">mca_refcnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>.<a class=\"id\" href=\"#expires\">expires</a> - <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#delay\">delay</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_refcnt\">mca_refcnt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> |= <a class=\"id\" href=\"#MAF_TIMER_RUNNING\">MAF_TIMER_RUNNING</a> | <a class=\"id\" href=\"#MAF_LAST_REPORTER\">MAF_LAST_REPORTER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_mc_leave_src\">ip6_mc_leave_src</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#ipv6_mc_socklist\">ipv6_mc_socklist</a> *<a class=\"id\" href=\"#iml\">iml</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* callers have the socket lock and a write lock on ipv6_sk_mc_lock,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so no other readers or writers of iml or its sflist</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#sflist\">sflist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* any-source empty exclude case */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ip6_mc_del_src\">ip6_mc_del_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_mc_del_src\">ip6_mc_del_src</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#sfmode\">sfmode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#sflist\">sflist</a>-><a class=\"id\" href=\"#sl_count\">sl_count</a>, <a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#sflist\">sflist</a>-><a class=\"id\" href=\"#sl_addr\">sl_addr</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#sflist\">sflist</a>, <a class=\"id\" href=\"#IP6_SFLSIZE\">IP6_SFLSIZE</a>(<a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#sflist\">sflist</a>-><a class=\"id\" href=\"#sl_max\">sl_max</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iml\">iml</a>-><a class=\"id\" href=\"#sflist\">sflist</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#igmp6_leave_group\">igmp6_leave_group</a>(struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#ma\">ma</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MLD_V1_SEEN\">MLD_V1_SEEN</a>(<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#idev\">idev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &amp; <a class=\"id\" href=\"#MAF_LAST_REPORTER\">MAF_LAST_REPORTER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_send\">igmp6_send</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMPV6_MGM_REDUCTION\">ICMPV6_MGM_REDUCTION</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_add_delrec\">mld_add_delrec</a>(<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ma\">ma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_ifc_event\">mld_ifc_event</a>(<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_gq_timer_expire\">mld_gq_timer_expire</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = (struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *)<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_gq_running\">mc_gq_running</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mld_send_report\">mld_send_report</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__in6_dev_put\">__in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_ifc_timer_expire\">mld_ifc_timer_expire</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = (struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *)<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mld_send_cr\">mld_send_cr</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_count\">mc_ifc_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_count\">mc_ifc_count</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_count\">mc_ifc_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_ifc_start_timer\">mld_ifc_start_timer</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_maxdelay\">mc_maxdelay</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__in6_dev_put\">__in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mld_ifc_event\">mld_ifc_event</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MLD_V1_SEEN\">MLD_V1_SEEN</a>(<a class=\"id\" href=\"#idev\">idev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_count\">mc_ifc_count</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mld_ifc_start_timer\">mld_ifc_start_timer</a>(<a class=\"id\" href=\"#idev\">idev</a>, 1);", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#igmp6_timer_handler\">igmp6_timer_handler</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#ma\">ma</a> = (struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *) <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MLD_V1_SEEN\">MLD_V1_SEEN</a>(<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#idev\">idev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_send\">igmp6_send</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>, <a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ICMPV6_MGM_REPORT\">ICMPV6_MGM_REPORT</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mld_send_report\">mld_send_report</a>(<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ma\">ma</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> |=  <a class=\"id\" href=\"#MAF_LAST_REPORTER\">MAF_LAST_REPORTER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a> &= ~<a class=\"id\" href=\"#MAF_TIMER_RUNNING\">MAF_TIMER_RUNNING</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ma\">ma</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ma_put\">ma_put</a>(<a class=\"id\" href=\"#ma\">ma</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Device changing type */</span>", 
"", 
"void <a class=\"id\" href=\"#ipv6_mc_unmap\">ipv6_mc_unmap</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Install multicast list, except for all-nodes (already installed) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_group_dropped\">igmp6_group_dropped</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ipv6_mc_remap\">ipv6_mc_remap</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_mc_up\">ipv6_mc_up</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Device going down */</span>", 
"", 
"void <a class=\"id\" href=\"#ipv6_mc_down\">ipv6_mc_down</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Withdraw multicast list */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_count\">mc_ifc_count</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_timer\">mc_ifc_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__in6_dev_put\">__in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_gq_running\">mc_gq_running</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_gq_timer\">mc_gq_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__in6_dev_put\">__in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#i\">i</a>=<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_group_dropped\">igmp6_group_dropped</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mld_clear_delrec\">mld_clear_delrec</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Device going up */</span>", 
"", 
"void <a class=\"id\" href=\"#ipv6_mc_up\">ipv6_mc_up</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Install multicast list, except for all-nodes (already installed) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#i\">i</a>=<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_group_added\">igmp6_group_added</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/* IPv6 device initialization. */</span>", 
"", 
"void <a class=\"id\" href=\"#ipv6_mc_init_dev\">ipv6_mc_init_dev</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_lock\">mc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_gq_running\">mc_gq_running</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_gq_timer\">mc_gq_timer</a>, <a class=\"id\" href=\"#mld_gq_timer_expire\">mld_gq_timer_expire</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_tomb\">mc_tomb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_count\">mc_ifc_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_ifc_timer\">mc_ifc_timer</a>, <a class=\"id\" href=\"#mld_ifc_timer_expire\">mld_ifc_timer_expire</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_qrv\">mc_qrv</a> = <a class=\"id\" href=\"#MLD_QRV_DEFAULT\">MLD_QRV_DEFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_maxdelay\">mc_maxdelay</a> = <a class=\"id\" href=\"#IGMP6_UNSOLICITED_IVAL\">IGMP6_UNSOLICITED_IVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_v1_seen\">mc_v1_seen</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Device is about to be destroyed: clean up.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ipv6_mc_destroy_dev\">ipv6_mc_destroy_dev</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Deactivate timers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_mc_down\">ipv6_mc_down</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delete all-nodes address. */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* We cannot call ipv6_dev_mc_dec() directly, our caller in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * addrconf.c has NULL'd out dev-&gt;ip6_ptr so in6_dev_get() will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fail.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ipv6_dev_mc_dec\">__ipv6_dev_mc_dec</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#in6addr_linklocal_allnodes\">in6addr_linklocal_allnodes</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ipv6_dev_mc_dec\">__ipv6_dev_mc_dec</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#in6addr_linklocal_allrouters\">in6addr_linklocal_allrouters</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a> = <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_group_dropped\">igmp6_group_dropped</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ma_put\">ma_put</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"struct <a class=\"id\" href=\"#igmp6_mc_iter_state\">igmp6_mc_iter_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#igmp6_mc_seq_private\">igmp6_mc_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>)<span class=\"ts\"/>((struct <a class=\"id\" href=\"#igmp6_mc_iter_state\">igmp6_mc_iter_state</a> *)(<a class=\"id\" href=\"#seq\">seq</a>)-><a class=\"id\" href=\"#private\">private</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#igmp6_mc_get_first\">igmp6_mc_get_first</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmp6_mc_iter_state\">igmp6_mc_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#igmp6_mc_seq_private\">igmp6_mc_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev_rcu\">for_each_netdev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#im\">im</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#im\">im</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#igmp6_mc_get_next\">igmp6_mc_get_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#im\">im</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmp6_mc_iter_state\">igmp6_mc_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#igmp6_mc_seq_private\">igmp6_mc_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#im\">im</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#next_net_device_rcu\">next_net_device_rcu</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#im\">im</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#igmp6_mc_get_idx\">igmp6_mc_get_idx</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#igmp6_mc_get_first\">igmp6_mc_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#im\">im</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#pos\">pos</a> && (<a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#igmp6_mc_get_next\">igmp6_mc_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#im\">im</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#im\">im</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#igmp6_mc_seq_start\">igmp6_mc_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#RCU\">RCU</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#igmp6_mc_get_idx\">igmp6_mc_get_idx</a>(<a class=\"id\" href=\"#seq\">seq</a>, *<a class=\"id\" href=\"#pos\">pos</a>);", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#igmp6_mc_seq_next\">igmp6_mc_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#igmp6_mc_get_next\">igmp6_mc_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#im\">im</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#igmp6_mc_seq_stop\">igmp6_mc_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#RCU\">RCU</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmp6_mc_iter_state\">igmp6_mc_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#igmp6_mc_seq_private\">igmp6_mc_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#igmp6_mc_seq_show\">igmp6_mc_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#im\">im</a> = (struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *)<a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmp6_mc_iter_state\">igmp6_mc_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#igmp6_mc_seq_private\">igmp6_mc_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"%-4d %-15s %pi6 %5d %08X %ld\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_users\">mca_users</a>, <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_flags\">mca_flags</a>&amp;<a class=\"id\" href=\"#MAF_TIMER_RUNNING\">MAF_TIMER_RUNNING</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_timer\">mca_timer</a>.<a class=\"id\" href=\"#expires\">expires</a>-<a class=\"id\" href=\"#jiffies\">jiffies</a>) : 0);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#igmp6_mc_seq_ops\">igmp6_mc_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mc_seq_start\">igmp6_mc_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mc_seq_next\">igmp6_mc_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mc_seq_stop\">igmp6_mc_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mc_seq_show\">igmp6_mc_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#igmp6_mc_seq_open\">igmp6_mc_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#igmp6_mc_seq_ops\">igmp6_mc_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#igmp6_mc_iter_state\">igmp6_mc_iter_state</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#igmp6_mc_seq_fops\">igmp6_mc_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mc_seq_open\">igmp6_mc_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#igmp6_mcf_iter_state\">igmp6_mcf_iter_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#im\">im</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#igmp6_mcf_seq_private\">igmp6_mcf_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>)<span class=\"ts\"/>((struct <a class=\"id\" href=\"#igmp6_mcf_iter_state\">igmp6_mcf_iter_state</a> *)(<a class=\"id\" href=\"#seq\">seq</a>)-><a class=\"id\" href=\"#private\">private</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#igmp6_mcf_get_first\">igmp6_mcf_get_first</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifmcaddr6\">ifmcaddr6</a> *<a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmp6_mcf_iter_state\">igmp6_mcf_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#igmp6_mcf_seq_private\">igmp6_mcf_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev_rcu\">for_each_netdev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#idev\">idev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#im\">im</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#psf\">psf</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#im\">im</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#psf\">psf</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#igmp6_mcf_get_next\">igmp6_mcf_get_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmp6_mcf_iter_state\">igmp6_mcf_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#igmp6_mcf_seq_private\">igmp6_mcf_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_next\">sf_next</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#psf\">psf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#next_net_device_rcu\">next_net_device_rcu</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_sources\">mca_sources</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#psf\">psf</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#igmp6_mcf_get_idx\">igmp6_mcf_get_idx</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#igmp6_mcf_get_first\">igmp6_mcf_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#psf\">psf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#pos\">pos</a> && (<a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#igmp6_mcf_get_next\">igmp6_mcf_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#psf\">psf</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#psf\">psf</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#igmp6_mcf_seq_start\">igmp6_mcf_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#RCU\">RCU</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>return *<a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#igmp6_mcf_get_idx\">igmp6_mcf_get_idx</a>(<a class=\"id\" href=\"#seq\">seq</a>, *<a class=\"id\" href=\"#pos\">pos</a> - 1) : <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#igmp6_mcf_seq_next\">igmp6_mcf_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#igmp6_mcf_get_first\">igmp6_mcf_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psf\">psf</a> = <a class=\"id\" href=\"#igmp6_mcf_get_next\">igmp6_mcf_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#psf\">psf</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#igmp6_mcf_seq_stop\">igmp6_mcf_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#RCU\">RCU</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmp6_mcf_iter_state\">igmp6_mcf_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#igmp6_mcf_seq_private\">igmp6_mcf_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_lock\">mca_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#igmp6_mcf_seq_show\">igmp6_mcf_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *<a class=\"id\" href=\"#psf\">psf</a> = (struct <a class=\"id\" href=\"#ip6_sf_list\">ip6_sf_list</a> *)<a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmp6_mcf_iter_state\">igmp6_mcf_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#igmp6_mcf_seq_private\">igmp6_mcf_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%3s %6s \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%32s %32s %6s %6s\\n\", \"Idx\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Device\", \"Multicast Address\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Source Address\", \"INC\", \"EXC\");", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%3d %6.6s %pi6 %pi6 %6lu %6lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#mca_addr\">mca_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_addr\">sf_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_INCLUDE\">MCAST_INCLUDE</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#psf\">psf</a>-><a class=\"id\" href=\"#sf_count\">sf_count</a>[<a class=\"id\" href=\"#MCAST_EXCLUDE\">MCAST_EXCLUDE</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#igmp6_mcf_seq_ops\">igmp6_mcf_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mcf_seq_start\">igmp6_mcf_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mcf_seq_next\">igmp6_mcf_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mcf_seq_stop\">igmp6_mcf_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mcf_seq_show\">igmp6_mcf_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#igmp6_mcf_seq_open\">igmp6_mcf_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#igmp6_mcf_seq_ops\">igmp6_mcf_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#igmp6_mcf_iter_state\">igmp6_mcf_iter_state</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#igmp6_mcf_seq_fops\">igmp6_mcf_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_mcf_seq_open\">igmp6_mcf_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#igmp6_proc_init\">igmp6_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"igmp6\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, &amp;<a class=\"id\" href=\"#igmp6_mc_seq_fops\">igmp6_mc_seq_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"mcfilter6\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#igmp6_mcf_seq_fops\">igmp6_mcf_seq_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_proc_net_igmp6\">out_proc_net_igmp6</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#out_proc_net_igmp6\">out_proc_net_igmp6</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"igmp6\");", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#igmp6_proc_exit\">igmp6_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"mcfilter6\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"igmp6\");", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#igmp6_proc_init\">igmp6_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#igmp6_proc_exit\">igmp6_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#igmp6_net_init\">igmp6_net_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#inet_ctl_sock_create\">inet_ctl_sock_create</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#igmp_sk\">igmp_sk</a>, <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a>, <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>, <a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Failed to initialize the IGMP6 control socket (err %d).\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#igmp_sk\">igmp_sk</a>)-><a class=\"id\" href=\"#hop_limit\">hop_limit</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#igmp6_proc_init\">igmp6_proc_init</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_sock_create\">out_sock_create</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#out_sock_create\">out_sock_create</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_ctl_sock_destroy\">inet_ctl_sock_destroy</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#igmp_sk\">igmp_sk</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#igmp6_net_exit\">igmp6_net_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_ctl_sock_destroy\">inet_ctl_sock_destroy</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#igmp_sk\">igmp_sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_proc_exit\">igmp6_proc_exit</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#igmp6_net_ops\">igmp6_net_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#igmp6_net_init\">igmp6_net_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#igmp6_net_exit\">igmp6_net_exit</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#igmp6_init\">igmp6_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#igmp6_net_ops\">igmp6_net_ops</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#igmp6_cleanup\">igmp6_cleanup</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#igmp6_net_ops\">igmp6_net_ops</a>);", 
"}", 
];
xr_frag_insert('l/a8/c5821e61e536977ecaab8e3cada9071920feb2.xr', __xr_tmp);
