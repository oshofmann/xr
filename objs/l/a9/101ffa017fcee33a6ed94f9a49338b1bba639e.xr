var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * KVM paravirt_ops implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2007, Red Hat, Inc., Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> * Copyright IBM Corporation, 2007</span>", 
"<span class=\"comment\"> *   Authors: Anthony Liguori &lt;aliguori@us.ibm.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kvm_para\">kvm_para</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hardirq\">hardirq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_INK\">CONFIG_INK</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inktag\">inktag</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MMU_QUEUE_SIZE\">MMU_QUEUE_SIZE</a> 1024", 
"", 
"struct <a class=\"id\" href=\"#kvm_para_state\">kvm_para_state</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#mmu_queue\">mmu_queue</a>[<a class=\"id\" href=\"#MMU_QUEUE_SIZE\">MMU_QUEUE_SIZE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mmu_queue_len\">mmu_queue_len</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#kvm_para_state\">kvm_para_state</a>, <a class=\"id\" href=\"#para_state\">para_state</a>);", 
"", 
"static struct <a class=\"id\" href=\"#kvm_para_state\">kvm_para_state</a> *<a class=\"id\" href=\"#kvm_para_state\">kvm_para_state</a>(void)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#para_state\">para_state</a>, <a class=\"id\" href=\"#raw_smp_processor_id\">raw_smp_processor_id</a>());", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * No need for any \"IO delay\" on KVM</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#kvm_io_delay\">kvm_io_delay</a>(void)", 
"{", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_mmu_op\">kvm_mmu_op</a>(void *<a class=\"id\" href=\"#buffer\">buffer</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#a1\">a1</a>, <a class=\"id\" href=\"#a2\">a2</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#a1\">a1</a> = <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#a2\">a2</a> = 0;   <span class=\"comment\">/* on i386 __pa() always returns &lt;4G */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#kvm_hypercall3\">kvm_hypercall3</a>(<a class=\"id\" href=\"#KVM_HC_MMU_OP\">KVM_HC_MMU_OP</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#a1\">a1</a>, <a class=\"id\" href=\"#a2\">a2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> += <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mmu_queue_flush\">mmu_queue_flush</a>(struct <a class=\"id\" href=\"#kvm_para_state\">kvm_para_state</a> *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#mmu_queue_len\">mmu_queue_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_op\">kvm_mmu_op</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#mmu_queue\">mmu_queue</a>, <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#mmu_queue_len\">mmu_queue_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#mmu_queue_len\">mmu_queue_len</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_deferred_mmu_op\">kvm_deferred_mmu_op</a>(void *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kvm_para_state\">kvm_para_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#kvm_para_state\">kvm_para_state</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#paravirt_get_lazy_mode\">paravirt_get_lazy_mode</a>() != <a class=\"id\" href=\"#PARAVIRT_LAZY_MMU\">PARAVIRT_LAZY_MMU</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_op\">kvm_mmu_op</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#mmu_queue_len\">mmu_queue_len</a> + <a class=\"id\" href=\"#len\">len</a> &gt; sizeof <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#mmu_queue\">mmu_queue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmu_queue_flush\">mmu_queue_flush</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#mmu_queue\">mmu_queue</a> + <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#mmu_queue_len\">mmu_queue_len</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#mmu_queue_len\">mmu_queue_len</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_mmu_write\">kvm_mmu_write</a>(void *<a class=\"id\" href=\"#dest\">dest</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#pte_phys\">pte_phys</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kvm_mmu_op_write_pte\">kvm_mmu_op_write_pte</a> <a class=\"id\" href=\"#wpte\">wpte</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGHPTE\">CONFIG_HIGHPTE</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#dst\">dst</a> = (unsigned long) <a class=\"id\" href=\"#dest\">dest</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#kmap_atomic_to_page\">kmap_atomic_to_page</a>(<a class=\"id\" href=\"#dest\">dest</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_phys\">pte_phys</a> = <a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_phys\">pte_phys</a> <<= <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_phys\">pte_phys</a> += (<a class=\"id\" href=\"#dst\">dst</a> &amp; ~(<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>));", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_phys\">pte_phys</a> = (unsigned long)<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#dest\">dest</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wpte\">wpte</a>.<a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#KVM_MMU_OP_WRITE_PTE\">KVM_MMU_OP_WRITE_PTE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wpte\">wpte</a>.<a class=\"id\" href=\"#pte_val\">pte_val</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wpte\">wpte</a>.<a class=\"id\" href=\"#pte_phys\">pte_phys</a> = <a class=\"id\" href=\"#pte_phys\">pte_phys</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_deferred_mmu_op\">kvm_deferred_mmu_op</a>(&amp;<a class=\"id\" href=\"#wpte\">wpte</a>, sizeof <a class=\"id\" href=\"#wpte\">wpte</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We only need to hook operations that are MMU writes.  We hook these so that</span>", 
"<span class=\"comment\"> * we can use lazy MMU mode to batch these operations.  We could probably</span>", 
"<span class=\"comment\"> * improve the performance of the host code if we used some of the information</span>", 
"<span class=\"comment\"> * here to simplify processing of batched writes.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#kvm_set_pte\">kvm_set_pte</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_write\">kvm_mmu_write</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte_val\">pte_val</a>(<a class=\"id\" href=\"#pte\">pte</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_set_pte_at\">kvm_set_pte_at</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_write\">kvm_mmu_write</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte_val\">pte_val</a>(<a class=\"id\" href=\"#pte\">pte</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_set_pmd\">kvm_set_pmd</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmdp\">pmdp</a>, <a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pmd\">pmd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_write\">kvm_mmu_write</a>(<a class=\"id\" href=\"#pmdp\">pmdp</a>, <a class=\"id\" href=\"#pmd_val\">pmd_val</a>(<a class=\"id\" href=\"#pmd\">pmd</a>));", 
"}", 
"", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> >= 3", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_PAE\">CONFIG_X86_PAE</a>", 
"static void <a class=\"id\" href=\"#kvm_set_pte_atomic\">kvm_set_pte_atomic</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_write\">kvm_mmu_write</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte_val\">pte_val</a>(<a class=\"id\" href=\"#pte\">pte</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_pte_clear\">kvm_pte_clear</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_write\">kvm_mmu_write</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_pmd_clear\">kvm_pmd_clear</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmdp\">pmdp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_write\">kvm_mmu_write</a>(<a class=\"id\" href=\"#pmdp\">pmdp</a>, 0);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#kvm_set_pud\">kvm_set_pud</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pudp\">pudp</a>, <a class=\"id\" href=\"#pud_t\">pud_t</a> <a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_write\">kvm_mmu_write</a>(<a class=\"id\" href=\"#pudp\">pudp</a>, <a class=\"id\" href=\"#pud_val\">pud_val</a>(<a class=\"id\" href=\"#pud\">pud</a>));", 
"}", 
"", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> == 4", 
"static void <a class=\"id\" href=\"#kvm_set_pgd\">kvm_set_pgd</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgdp\">pgdp</a>, <a class=\"id\" href=\"#pgd_t\">pgd_t</a> <a class=\"id\" href=\"#pgd\">pgd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_write\">kvm_mmu_write</a>(<a class=\"id\" href=\"#pgdp\">pgdp</a>, <a class=\"id\" href=\"#pgd_val\">pgd_val</a>(<a class=\"id\" href=\"#pgd\">pgd</a>));", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* PAGETABLE_LEVELS &gt;= 3 */</span>", 
"", 
"static void <a class=\"id\" href=\"#kvm_flush_tlb\">kvm_flush_tlb</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kvm_mmu_op_flush_tlb\">kvm_mmu_op_flush_tlb</a> <a class=\"id\" href=\"#ftlb\">ftlb</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#KVM_MMU_OP_FLUSH_TLB\">KVM_MMU_OP_FLUSH_TLB</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_deferred_mmu_op\">kvm_deferred_mmu_op</a>(&amp;<a class=\"id\" href=\"#ftlb\">ftlb</a>, sizeof <a class=\"id\" href=\"#ftlb\">ftlb</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_release_pt\">kvm_release_pt</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kvm_mmu_op_release_pt\">kvm_mmu_op_release_pt</a> <a class=\"id\" href=\"#rpt\">rpt</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#KVM_MMU_OP_RELEASE_PT\">KVM_MMU_OP_RELEASE_PT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pt_phys\">pt_phys</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#pfn\">pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_mmu_op\">kvm_mmu_op</a>(&amp;<a class=\"id\" href=\"#rpt\">rpt</a>, sizeof <a class=\"id\" href=\"#rpt\">rpt</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_enter_lazy_mmu\">kvm_enter_lazy_mmu</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#paravirt_enter_lazy_mmu\">paravirt_enter_lazy_mmu</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kvm_leave_lazy_mmu\">kvm_leave_lazy_mmu</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kvm_para_state\">kvm_para_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#kvm_para_state\">kvm_para_state</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmu_queue_flush\">mmu_queue_flush</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#paravirt_leave_lazy_mmu\">paravirt_leave_lazy_mmu</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#paravirt_ops_setup\">paravirt_ops_setup</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_info\">pv_info</a>.<a class=\"id\" href=\"#name\">name</a> = \"KVM\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_info\">pv_info</a>.<a class=\"id\" href=\"#paravirt_enabled\">paravirt_enabled</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kvm_para_has_feature\">kvm_para_has_feature</a>(<a class=\"id\" href=\"#KVM_FEATURE_NOP_IO_DELAY\">KVM_FEATURE_NOP_IO_DELAY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>.<a class=\"id\" href=\"#io_delay\">io_delay</a> = <a class=\"id\" href=\"#kvm_io_delay\">kvm_io_delay</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kvm_para_has_feature\">kvm_para_has_feature</a>(<a class=\"id\" href=\"#KVM_FEATURE_MMU_OP\">KVM_FEATURE_MMU_OP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pte\">set_pte</a> = <a class=\"id\" href=\"#kvm_set_pte\">kvm_set_pte</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pte_at\">set_pte_at</a> = <a class=\"id\" href=\"#kvm_set_pte_at\">kvm_set_pte_at</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pmd\">set_pmd</a> = <a class=\"id\" href=\"#kvm_set_pmd\">kvm_set_pmd</a>;", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> >= 3", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_PAE\">CONFIG_X86_PAE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pte_atomic\">set_pte_atomic</a> = <a class=\"id\" href=\"#kvm_set_pte_atomic\">kvm_set_pte_atomic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#pte_clear\">pte_clear</a> = <a class=\"id\" href=\"#kvm_pte_clear\">kvm_pte_clear</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#pmd_clear\">pmd_clear</a> = <a class=\"id\" href=\"#kvm_pmd_clear\">kvm_pmd_clear</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pud\">set_pud</a> = <a class=\"id\" href=\"#kvm_set_pud\">kvm_set_pud</a>;", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> == 4", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pgd\">set_pgd</a> = <a class=\"id\" href=\"#kvm_set_pgd\">kvm_set_pgd</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#flush_tlb_user\">flush_tlb_user</a> = <a class=\"id\" href=\"#kvm_flush_tlb\">kvm_flush_tlb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#release_pte\">release_pte</a> = <a class=\"id\" href=\"#kvm_release_pt\">kvm_release_pt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#release_pmd\">release_pmd</a> = <a class=\"id\" href=\"#kvm_release_pt\">kvm_release_pt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#release_pud\">release_pud</a> = <a class=\"id\" href=\"#kvm_release_pt\">kvm_release_pt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#lazy_mode\">lazy_mode</a>.<a class=\"id\" href=\"#enter\">enter</a> = <a class=\"id\" href=\"#kvm_enter_lazy_mmu\">kvm_enter_lazy_mmu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#lazy_mode\">lazy_mode</a>.<a class=\"id\" href=\"#leave\">leave</a> = <a class=\"id\" href=\"#kvm_leave_lazy_mmu\">kvm_leave_lazy_mmu</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_INK_GUEST\">CONFIG_INK_GUEST</a>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#kvm_para_has_feature\">kvm_para_has_feature</a>(<a class=\"id\" href=\"#KVM_FEATURE_INK_PARA\">KVM_FEATURE_INK_PARA</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inktag_para_init\">inktag_para_init</a>();", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#no_timer_check\">no_timer_check</a> = 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#kvm_guest_init\">kvm_guest_init</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kvm_para_available\">kvm_para_available</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#paravirt_ops_setup\">paravirt_ops_setup</a>();", 
"}", 
];
xr_frag_insert('l/a9/101ffa017fcee33a6ed94f9a49338b1bba639e.xr', __xr_tmp);
