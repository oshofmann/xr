var __xr_tmp = [
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#update_ctime\">update_ctime</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#current_fs_time\">current_fs_time</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#timespec_equal\">timespec_equal</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a>, &amp;<a class=\"id\" href=\"#now\">now</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Update only when preallocation was requested beyond</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the file size.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FALLOC_FL_KEEP_SIZE\">FALLOC_FL_KEEP_SIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_size\">new_size</a> &gt; <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_size_write\">i_size_write</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#new_size\">new_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_size\">new_size</a> &gt; <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_disksize\">i_disksize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_update_i_disksize\">ext4_update_i_disksize</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#new_size\">new_size</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Mark that we allocate beyond EOF so the subsequent truncate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * can proceed even if the new size is the same as i_size.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_size\">new_size</a> &gt; <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_inode_flag\">ext4_set_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EOFBLOCKS\">EXT4_INODE_EOFBLOCKS</a>);", 
"<span class=\"ts\"/>}", 
"", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * preallocate space for a file. This implements ext4's fallocate inode</span>", 
"<span class=\"comment\"> * operation, which gets called from sys_fallocate system call.</span>", 
"<span class=\"comment\"> * For block-mapped files, posix_fallocate should fall back to the method</span>", 
"<span class=\"comment\"> * of writing zeroes to the required new blocks (the same behavior which is</span>", 
"<span class=\"comment\"> * expected for file systems which do not support fallocate() system call).</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#ext4_fallocate\">ext4_fallocate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#new_size\">new_size</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_blocks\">max_blocks</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret2\">ret2</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retries\">retries</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> <a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#credits\">credits</a>, <a class=\"id\" href=\"#blkbits\">blkbits</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * currently supporting (pre)allocate mode for extent-based</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * files _only_</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* preallocation to directories is currently not supported */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> = <a class=\"id\" href=\"#offset\">offset</a> >> <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
];
xr_frag_insert('l/a9/9b9763be051a916936d8029cb6d85d9dca768b.xr', __xr_tmp);
