var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_PERCPU_H\">_ASM_X86_PERCPU_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_PERCPU_H\">_ASM_X86_PERCPU_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__percpu_seg\">__percpu_seg</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gs\">gs</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__percpu_mov_op\">__percpu_mov_op</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#movq\">movq</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__percpu_seg\">__percpu_seg</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__percpu_mov_op\">__percpu_mov_op</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#movl\">movl</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PER_CPU finds an address of a per-cpu variable.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Args:</span>", 
"<span class=\"comment\"> *    var - variable name</span>", 
"<span class=\"comment\"> *    reg - 32bit register</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The resulting address is stored in the \"reg\" argument.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Example:</span>", 
"<span class=\"comment\"> *    PER_CPU(cpu_gdt_descr, %ebx)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PER_CPU\">PER_CPU</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#reg\">reg</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__percpu_mov_op\">__percpu_mov_op</a> %<a class=\"id\" href=\"#__percpu_seg\">__percpu_seg</a>:<a class=\"id\" href=\"#this_cpu_off\">this_cpu_off</a>, <a class=\"id\" href=\"#reg\">reg</a>;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lea\">lea</a> <a class=\"id\" href=\"#var\">var</a>(<a class=\"id\" href=\"#reg\">reg</a>), <a class=\"id\" href=\"#reg\">reg</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PER_CPU_VAR\">PER_CPU_VAR</a>(<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/>%<a class=\"id\" href=\"#__percpu_seg\">__percpu_seg</a>:<a class=\"id\" href=\"#var\">var</a>", 
"#else <span class=\"comment\">/* ! SMP */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PER_CPU\">PER_CPU</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#reg\">reg</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__percpu_mov_op\">__percpu_mov_op</a> $<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#reg\">reg</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PER_CPU_VAR\">PER_CPU_VAR</a>(<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* SMP */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64_SMP\">CONFIG_X86_64_SMP</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INIT_PER_CPU_VAR\">INIT_PER_CPU_VAR</a>(<a class=\"id\" href=\"#var\">var</a>)  <a class=\"id\" href=\"#init_per_cpu__\">init_per_cpu__</a>##<a class=\"id\" href=\"#var\">var</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INIT_PER_CPU_VAR\">INIT_PER_CPU_VAR</a>(<a class=\"id\" href=\"#var\">var</a>)  <a class=\"id\" href=\"#var\">var</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#else <span class=\"comment\">/* ...!ASSEMBLY */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stringify\">stringify</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><span class=\"ts\"/>\"%%\"<a class=\"id\" href=\"#__stringify\">__stringify</a>(<a class=\"id\" href=\"#__percpu_seg\">__percpu_seg</a>)\":%P\" #<a class=\"id\" href=\"#x\">x</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__my_cpu_offset\">__my_cpu_offset</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#this_cpu_off\">this_cpu_off</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><span class=\"ts\"/>\"%P\" #<a class=\"id\" href=\"#x\">x</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialized pointers to per-cpu variables needed for the boot</span>", 
"<span class=\"comment\"> * processor need to use these macros to get the proper address</span>", 
"<span class=\"comment\"> * offset from __per_cpu_load on SMP.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * There also must be an entry in vmlinux_64.lds.S</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECLARE_INIT_PER_CPU\">DECLARE_INIT_PER_CPU</a>(<a class=\"id\" href=\"#var\">var</a>) \\", 
"       extern <a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#var\">var</a>) <a class=\"id\" href=\"#init_per_cpu_var\">init_per_cpu_var</a>(<a class=\"id\" href=\"#var\">var</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64_SMP\">CONFIG_X86_64_SMP</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#init_per_cpu_var\">init_per_cpu_var</a>(<a class=\"id\" href=\"#var\">var</a>)  <a class=\"id\" href=\"#init_per_cpu__\">init_per_cpu__</a>##<a class=\"id\" href=\"#var\">var</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#init_per_cpu_var\">init_per_cpu_var</a>(<a class=\"id\" href=\"#var\">var</a>)  <a class=\"id\" href=\"#var\">var</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* For arch-specific code, we can use direct single-insn ops (they</span>", 
"<span class=\"comment\"> * don't give an lvalue though). */</span>", 
"extern void <a class=\"id\" href=\"#__bad_percpu_size\">__bad_percpu_size</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_to_op\">percpu_to_op</a>(<a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>typedef <a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#var\">var</a>) <a class=\"id\" href=\"#pto_T__\">pto_T__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (0) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pto_T__\">pto_T__</a> <a class=\"id\" href=\"#pto_tmp__\">pto_tmp__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pto_tmp__\">pto_tmp__</a> = (<a class=\"id\" href=\"#val\">val</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#pto_tmp__\">pto_tmp__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>switch (sizeof(<a class=\"id\" href=\"#var\">var</a>)) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 1:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#op\">op</a> \"b %1,\"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"qi\" ((<a class=\"id\" href=\"#pto_T__\">pto_T__</a>)(<a class=\"id\" href=\"#val\">val</a>)));<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 2:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#op\">op</a> \"w %1,\"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"ri\" ((<a class=\"id\" href=\"#pto_T__\">pto_T__</a>)(<a class=\"id\" href=\"#val\">val</a>)));<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 4:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#op\">op</a> \"l %1,\"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"ri\" ((<a class=\"id\" href=\"#pto_T__\">pto_T__</a>)(<a class=\"id\" href=\"#val\">val</a>)));<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 8:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#op\">op</a> \"q %1,\"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"re\" ((<a class=\"id\" href=\"#pto_T__\">pto_T__</a>)(<a class=\"id\" href=\"#val\">val</a>)));<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>default: <a class=\"id\" href=\"#__bad_percpu_size\">__bad_percpu_size</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generate a percpu add to memory instruction and optimize code</span>", 
"<span class=\"comment\"> * if one is added or subtracted.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_add_op\">percpu_add_op</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>typedef <a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#var\">var</a>) <a class=\"id\" href=\"#pao_T__\">pao_T__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#pao_ID__\">pao_ID__</a> = (<a class=\"id\" href=\"#__builtin_constant_p\">__builtin_constant_p</a>(<a class=\"id\" href=\"#val\">val</a>) &&<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      ((<a class=\"id\" href=\"#val\">val</a>) == 1 || (<a class=\"id\" href=\"#val\">val</a>) == -1)) ? (<a class=\"id\" href=\"#val\">val</a>) : 0;<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (0) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pao_T__\">pao_T__</a> <a class=\"id\" href=\"#pao_tmp__\">pao_tmp__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pao_tmp__\">pao_tmp__</a> = (<a class=\"id\" href=\"#val\">val</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#pao_tmp__\">pao_tmp__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>switch (sizeof(<a class=\"id\" href=\"#var\">var</a>)) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 1:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pao_ID__\">pao_ID__</a> == 1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"incb \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0) : \"+m\" (<a class=\"id\" href=\"#var\">var</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#pao_ID__\">pao_ID__</a> == -1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"decb \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0) : \"+m\" (<a class=\"id\" href=\"#var\">var</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>else<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"addb %1, \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    : \"qi\" ((<a class=\"id\" href=\"#pao_T__\">pao_T__</a>)(<a class=\"id\" href=\"#val\">val</a>)));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 2:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pao_ID__\">pao_ID__</a> == 1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"incw \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0) : \"+m\" (<a class=\"id\" href=\"#var\">var</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#pao_ID__\">pao_ID__</a> == -1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"decw \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0) : \"+m\" (<a class=\"id\" href=\"#var\">var</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>else<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"addw %1, \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    : \"ri\" ((<a class=\"id\" href=\"#pao_T__\">pao_T__</a>)(<a class=\"id\" href=\"#val\">val</a>)));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 4:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pao_ID__\">pao_ID__</a> == 1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"incl \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0) : \"+m\" (<a class=\"id\" href=\"#var\">var</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#pao_ID__\">pao_ID__</a> == -1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"decl \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0) : \"+m\" (<a class=\"id\" href=\"#var\">var</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>else<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"addl %1, \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    : \"ri\" ((<a class=\"id\" href=\"#pao_T__\">pao_T__</a>)(<a class=\"id\" href=\"#val\">val</a>)));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 8:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pao_ID__\">pao_ID__</a> == 1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"incq \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0) : \"+m\" (<a class=\"id\" href=\"#var\">var</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#pao_ID__\">pao_ID__</a> == -1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"decq \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0) : \"+m\" (<a class=\"id\" href=\"#var\">var</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>else<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"addq %1, \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(0)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    : \"re\" ((<a class=\"id\" href=\"#pao_T__\">pao_T__</a>)(<a class=\"id\" href=\"#val\">val</a>)));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>default: <a class=\"id\" href=\"#__bad_percpu_size\">__bad_percpu_size</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_from_op\">percpu_from_op</a>(<a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#constraint\">constraint</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#var\">var</a>) <a class=\"id\" href=\"#pfo_ret__\">pfo_ret__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>switch (sizeof(<a class=\"id\" href=\"#var\">var</a>)) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 1:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#op\">op</a> \"b \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(1)\",%0\"<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"=q\" (<a class=\"id\" href=\"#pfo_ret__\">pfo_ret__</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : <a class=\"id\" href=\"#constraint\">constraint</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 2:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#op\">op</a> \"w \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(1)\",%0\"<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"=r\" (<a class=\"id\" href=\"#pfo_ret__\">pfo_ret__</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : <a class=\"id\" href=\"#constraint\">constraint</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 4:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#op\">op</a> \"l \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(1)\",%0\"<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"=r\" (<a class=\"id\" href=\"#pfo_ret__\">pfo_ret__</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : <a class=\"id\" href=\"#constraint\">constraint</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 8:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#op\">op</a> \"q \"<a class=\"id\" href=\"#__percpu_arg\">__percpu_arg</a>(1)\",%0\"<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"=r\" (<a class=\"id\" href=\"#pfo_ret__\">pfo_ret__</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    : <a class=\"id\" href=\"#constraint\">constraint</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>default: <a class=\"id\" href=\"#__bad_percpu_size\">__bad_percpu_size</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pfo_ret__\">pfo_ret__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"})", 
"", 
];
xr_frag_insert('l/a9/bce7178e30eedda2ed21d2935bde4a0feca671.xr', __xr_tmp);
