var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/kernel/time/clockevents.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file contains functions which manage clock event devices.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright(C) 2005-2006, Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>", 
"<span class=\"comment\"> * Copyright(C) 2005-2007, Red Hat, Inc., Ingo Molnar</span>", 
"<span class=\"comment\"> * Copyright(C) 2006-2007, Timesys Corp., Thomas Gleixner</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This code is licenced under the GPL version 2. For details see</span>", 
"<span class=\"comment\"> * kernel-base/COPYING.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#clockchips\">clockchips</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hrtimer\">hrtimer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tick\">tick</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"tick-internal.h\"", 
"", 
"<span class=\"comment\">/* The registered clock event devices */</span>", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#clockevent_devices\">clockevent_devices</a>);", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#clockevents_released\">clockevents_released</a>);", 
"", 
"<span class=\"comment\">/* Notification for clock events */</span>", 
"static <a class=\"id\" href=\"#RAW_NOTIFIER_HEAD\">RAW_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#clockevents_chain\">clockevents_chain</a>);", 
"", 
"<span class=\"comment\">/* Protection for the above */</span>", 
"static <a class=\"id\" href=\"#DEFINE_RAW_SPINLOCK\">DEFINE_RAW_SPINLOCK</a>(<a class=\"id\" href=\"#clockevents_lock\">clockevents_lock</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clockevents_delta2ns - Convert a latch value (device ticks) to nanoseconds</span>", 
"<span class=\"comment\"> * @latch:<span class=\"ts\"/>value to convert</span>", 
"<span class=\"comment\"> * @evt:<span class=\"ts\"/>pointer to clock event device descriptor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Math helper, returns latch value converted to nanoseconds (bound checked)</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#clockevent_delta2ns\">clockevent_delta2ns</a>(unsigned long <a class=\"id\" href=\"#latch\">latch</a>, struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#clc\">clc</a> = (<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#latch\">latch</a> << <a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#mult\">mult</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#mult\">mult</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#clc\">clc</a>, <a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#mult\">mult</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#clc\">clc</a> &lt; 1000)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clc\">clc</a> = 1000;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#clc\">clc</a> &gt; <a class=\"id\" href=\"#KTIME_MAX\">KTIME_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clc\">clc</a> = <a class=\"id\" href=\"#KTIME_MAX\">KTIME_MAX</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#clc\">clc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#clockevent_delta2ns\">clockevent_delta2ns</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clockevents_set_mode - set the operating mode of a clock event device</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>device to modify</span>", 
"<span class=\"comment\"> * @mode:<span class=\"ts\"/>new mode</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Must be called with interrupts disabled !</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#clockevents_set_mode\">clockevents_set_mode</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#set_mode\">set_mode</a>(<a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#mode\">mode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * A nsec2cyc multiplicator of 0 is invalid and we'd crash</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * on it, so fix it up and emit a warning:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#CLOCK_EVT_MODE_ONESHOT\">CLOCK_EVT_MODE_ONESHOT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mult\">mult</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mult\">mult</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clockevents_shutdown - shutdown the device and clear next_event</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>device to shutdown</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#clockevents_shutdown\">clockevents_shutdown</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_set_mode\">clockevents_set_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#CLOCK_EVT_MODE_SHUTDOWN\">CLOCK_EVT_MODE_SHUTDOWN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#next_event\">next_event</a>.<a class=\"id\" href=\"#tv64\">tv64</a> = <a class=\"id\" href=\"#KTIME_MAX\">KTIME_MAX</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clockevents_program_event - Reprogram the clock event device.</span>", 
"<span class=\"comment\"> * @expires:<span class=\"ts\"/>absolute expiry time (monotonic clock)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, -ETIME when the event is in the past.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#clockevents_program_event\">clockevents_program_event</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#expires\">expires</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#now\">now</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#clc\">clc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#int64_t\">int64_t</a> <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#expires\">expires</a>.<a class=\"id\" href=\"#tv64\">tv64</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIME\">ETIME</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#ktime_sub\">ktime_sub</a>(<a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#now\">now</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#delta\">delta</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIME\">ETIME</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#next_event\">next_event</a> = <a class=\"id\" href=\"#expires\">expires</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#CLOCK_EVT_MODE_SHUTDOWN\">CLOCK_EVT_MODE_SHUTDOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#delta\">delta</a> &gt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#max_delta_ns\">max_delta_ns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#max_delta_ns\">max_delta_ns</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#delta\">delta</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clc\">clc</a> = <a class=\"id\" href=\"#delta\">delta</a> * <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mult\">mult</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clc\">clc</a> >>= <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#set_next_event\">set_next_event</a>((unsigned long) <a class=\"id\" href=\"#clc\">clc</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clockevents_register_notifier - register a clock events change listener</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#clockevents_register_notifier\">clockevents_register_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#clockevents_lock\">clockevents_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#raw_notifier_chain_register\">raw_notifier_chain_register</a>(&amp;<a class=\"id\" href=\"#clockevents_chain\">clockevents_chain</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#clockevents_lock\">clockevents_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Notify about a clock event change. Called with clockevents_lock</span>", 
"<span class=\"comment\"> * held.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#clockevents_do_notify\">clockevents_do_notify</a>(unsigned long <a class=\"id\" href=\"#reason\">reason</a>, void *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_notifier_call_chain\">raw_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#clockevents_chain\">clockevents_chain</a>, <a class=\"id\" href=\"#reason\">reason</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called after a notify add to make devices available which were</span>", 
"<span class=\"comment\"> * released from the notifier call.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#clockevents_notify_released\">clockevents_notify_released</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#clockevents_released\">clockevents_released</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#clockevents_released\">clockevents_released</a>.<a class=\"id\" href=\"#next\">next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#clockevent_devices\">clockevent_devices</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clockevents_do_notify\">clockevents_do_notify</a>(<a class=\"id\" href=\"#CLOCK_EVT_NOTIFY_ADD\">CLOCK_EVT_NOTIFY_ADD</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clockevents_register_device - register a clock event device</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>device to register</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#clockevents_register_device\">clockevents_register_device</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
];
xr_frag_insert('l/a9/f1329b4af356619d1597edb4af90d9aaf7483d.xr', __xr_tmp);
