var __xr_tmp = [
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xsave_struct\">xsave_struct</a> *<a class=\"id\" href=\"#xstate\">xstate</a> = ((<a class=\"id\" href=\"#__force\">__force</a> struct <a class=\"id\" href=\"#xsave_struct\">xsave_struct</a> *)<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lmask\">lmask</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hmask\">hmask</a> = <a class=\"id\" href=\"#mask\">mask</a> >> 32;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__asm__\">__asm__</a> <a class=\"id\" href=\"#__volatile__\">__volatile__</a>(\"1: .byte \" <a class=\"id\" href=\"#REX_PREFIX\">REX_PREFIX</a> \"0x0f,0xae,0x2f\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"2:\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \".section .fixup,\\\"ax\\\"\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"3:  movl $-1,%[err]\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"    jmp  2b\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \".previous\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \".section __ex_table,\\\"a\\\"\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#_ASM_ALIGN\">_ASM_ALIGN</a> \"\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#_ASM_PTR\">_ASM_PTR</a> \"1b,3b\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \".previous\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     : [<a class=\"id\" href=\"#err\">err</a>] \"=r\" (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     : \"D\" (<a class=\"id\" href=\"#xstate\">xstate</a>), \"a\" (<a class=\"id\" href=\"#lmask\">lmask</a>), \"d\" (<a class=\"id\" href=\"#hmask\">hmask</a>), \"0\" (0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     : \"memory\");<span class=\"ts\"/><span class=\"comment\">/* memory required? */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#xrstor_state\">xrstor_state</a>(struct <a class=\"id\" href=\"#xsave_struct\">xsave_struct</a> *<a class=\"id\" href=\"#fx\">fx</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lmask\">lmask</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hmask\">hmask</a> = <a class=\"id\" href=\"#mask\">mask</a> >> 32;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\".byte \" <a class=\"id\" href=\"#REX_PREFIX\">REX_PREFIX</a> \"0x0f,0xae,0x2f\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     : : \"D\" (<a class=\"id\" href=\"#fx\">fx</a>), \"m\" (*<a class=\"id\" href=\"#fx\">fx</a>), \"a\" (<a class=\"id\" href=\"#lmask\">lmask</a>), \"d\" (<a class=\"id\" href=\"#hmask\">hmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     :   \"memory\");", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#xsave_state\">xsave_state</a>(struct <a class=\"id\" href=\"#xsave_struct\">xsave_struct</a> *<a class=\"id\" href=\"#fx\">fx</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lmask\">lmask</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hmask\">hmask</a> = <a class=\"id\" href=\"#mask\">mask</a> >> 32;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\".byte \" <a class=\"id\" href=\"#REX_PREFIX\">REX_PREFIX</a> \"0x0f,0xae,0x27\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     : : \"D\" (<a class=\"id\" href=\"#fx\">fx</a>), \"m\" (*<a class=\"id\" href=\"#fx\">fx</a>), \"a\" (<a class=\"id\" href=\"#lmask\">lmask</a>), \"d\" (<a class=\"id\" href=\"#hmask\">hmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     :   \"memory\");", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fpu_xsave\">fpu_xsave</a>(struct <a class=\"id\" href=\"#fpu\">fpu</a> *<a class=\"id\" href=\"#fpu\">fpu</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* This, however, we can work around by forcing the compiler to select</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   an addressing mode that doesn't require extended registers. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alternative_input\">alternative_input</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/>\".byte \" <a class=\"id\" href=\"#REX_PREFIX\">REX_PREFIX</a> \"0x0f,0xae,0x27\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\".byte \" <a class=\"id\" href=\"#REX_PREFIX\">REX_PREFIX</a> \"0x0f,0xae,0x37\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#X86_FEATURE_XSAVEOPT\">X86_FEATURE_XSAVEOPT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#fx\">fx</a>] \"D\" (&amp;<a class=\"id\" href=\"#fpu\">fpu</a>-><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xsave\">xsave</a>), \"a\" (-1), \"d\" (-1) :", 
"<span class=\"ts\"/><span class=\"ts\"/>\"memory\");", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/aa/1252503d3a861d3789962f789b3d2a8a5f7ee0.xr', __xr_tmp);
