var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quotaops\">quotaops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4_jbd2.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * with AGGRESSIVE_CHECK allocator runs consistency checks over</span>", 
"<span class=\"comment\"> * structures. these checks slow things down a lot</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AGGRESSIVE_CHECK__\">AGGRESSIVE_CHECK__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * with DOUBLE_CHECK defined mballoc creates persistent in-core</span>", 
"<span class=\"comment\"> * bitmaps, maintains and uses them to check for double allocations</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DOUBLE_CHECK__\">DOUBLE_CHECK__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_DEBUG\">CONFIG_EXT4_DEBUG</a>", 
"extern <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#mb_enable_debug\">mb_enable_debug</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#mb_debug\">mb_debug</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/>                                        \\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#n\">n</a>) <= <a class=\"id\" href=\"#mb_enable_debug\">mb_enable_debug</a>) {<span class=\"ts\"/><span class=\"ts\"/>        <span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"(%s, %d): %s: \",<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__FILE__\">__FILE__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, <a class=\"id\" href=\"#__func__\">__func__</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, ## <a class=\"id\" href=\"#a\">a</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#mb_debug\">mb_debug</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#a\">a</a>...)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HISTORY_ALLOC\">EXT4_MB_HISTORY_ALLOC</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* allocation */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HISTORY_PREALLOC\">EXT4_MB_HISTORY_PREALLOC</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* preallocated blocks used */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * How long mballoc can look for a best extent (in found extents)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MB_DEFAULT_MAX_TO_SCAN\">MB_DEFAULT_MAX_TO_SCAN</a><span class=\"ts\"/><span class=\"ts\"/>200", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * How long mballoc must look for a best extent</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MB_DEFAULT_MIN_TO_SCAN\">MB_DEFAULT_MIN_TO_SCAN</a><span class=\"ts\"/><span class=\"ts\"/>10", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * How many groups mballoc will scan looking for the best chunk</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MB_DEFAULT_MAX_GROUPS_TO_SCAN\">MB_DEFAULT_MAX_GROUPS_TO_SCAN</a><span class=\"ts\"/>5", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * with 'ext4_mb_stats' allocator will collect stats that will be</span>", 
"<span class=\"comment\"> * shown at umount. The collecting costs though!</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MB_DEFAULT_STATS\">MB_DEFAULT_STATS</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * files smaller than MB_DEFAULT_STREAM_THRESHOLD are served</span>", 
"<span class=\"comment\"> * by the stream allocator, which purpose is to pack requests</span>", 
"<span class=\"comment\"> * as close each to other as possible to produce smooth I/O traffic</span>", 
"<span class=\"comment\"> * We use locality group prealloc space for stream request.</span>", 
"<span class=\"comment\"> * We can tune the same via /proc/fs/ext4/&lt;parition&gt;/stream_req</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MB_DEFAULT_STREAM_THRESHOLD\">MB_DEFAULT_STREAM_THRESHOLD</a><span class=\"ts\"/>16<span class=\"ts\"/><span class=\"comment\">/* 64K */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * for which requests use 2^N search using buddies</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MB_DEFAULT_ORDER2_REQS\">MB_DEFAULT_ORDER2_REQS</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * default group prealloc size 512 blocks</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MB_DEFAULT_GROUP_PREALLOC\">MB_DEFAULT_GROUP_PREALLOC</a><span class=\"ts\"/>512", 
"", 
"", 
"struct <a class=\"id\" href=\"#ext4_free_data\">ext4_free_data</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* this links the free block information from group_info */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* this links the free block information from ext4_sb_info */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* group which free block extent belongs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* free block extent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#start_blk\">start_blk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* transaction which freed this extent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a><span class=\"ts\"/><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ext4_prealloc_space\">ext4_prealloc_space</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#pa_inode_list\">pa_inode_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#pa_group_list\">pa_group_list</a>;", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#pa_tmp_list\">pa_tmp_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a><span class=\"ts\"/><a class=\"id\" href=\"#pa_rcu\">pa_rcu</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#u\">u</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_lock\">pa_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_count\">pa_count</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_deleted\">pa_deleted</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_pstart\">pa_pstart</a>;<span class=\"ts\"/><span class=\"comment\">/* phys. block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_lstart\">pa_lstart</a>;<span class=\"ts\"/><span class=\"comment\">/* log. block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_len\">pa_len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* len of preallocated chunk */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_free\">pa_free</a>;<span class=\"ts\"/><span class=\"comment\">/* how many blocks are free */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_type\">pa_type</a>;<span class=\"ts\"/><span class=\"comment\">/* pa type. inode or group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pa_obj_lock\">pa_obj_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pa_inode\">pa_inode</a>;<span class=\"ts\"/><span class=\"comment\">/* hack, for history only */</span>", 
"};", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MB_INODE_PA\">MB_INODE_PA</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MB_GROUP_PA\">MB_GROUP_PA</a> = 1", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ext4_free_extent\">ext4_free_extent</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#fe_logical\">fe_logical</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#fe_start\">fe_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#fe_group\">fe_group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#fe_len\">fe_len</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Locality group:</span>", 
"<span class=\"comment\"> *   we try to group all related changes together</span>", 
"<span class=\"comment\"> *   so that writeback can flush/allocate them together as well</span>", 
"<span class=\"comment\"> *   Size of lg_prealloc_list hash is determined by MB_DEFAULT_GROUP_PREALLOC</span>", 
"<span class=\"comment\"> *   (512). We store prealloc space into the hash based on the pa_free blocks</span>", 
"<span class=\"comment\"> *   order value.ie, fls(pa_free)-1;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREALLOC_TB_SIZE\">PREALLOC_TB_SIZE</a> 10", 
"struct <a class=\"id\" href=\"#ext4_locality_group\">ext4_locality_group</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* for allocator */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* to serialize allocates */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lg_mutex\">lg_mutex</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* list of preallocations */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#lg_prealloc_list\">lg_prealloc_list</a>[<a class=\"id\" href=\"#PREALLOC_TB_SIZE\">PREALLOC_TB_SIZE</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lg_prealloc_lock\">lg_prealloc_lock</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ext4_allocation_context\">ext4_allocation_context</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ac_inode\">ac_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#ac_sb\">ac_sb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* original request */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_free_extent\">ext4_free_extent</a> <a class=\"id\" href=\"#ac_o_ex\">ac_o_ex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* goal request (after normalization) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_free_extent\">ext4_free_extent</a> <a class=\"id\" href=\"#ac_g_ex\">ac_g_ex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the best found extent */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_free_extent\">ext4_free_extent</a> <a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* copy of the bext found extent taken before preallocation efforts */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_free_extent\">ext4_free_extent</a> <a class=\"id\" href=\"#ac_f_ex\">ac_f_ex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* number of iterations done. we have to track to limit searching */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ac_ex_scanned\">ac_ex_scanned</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#ac_groups_scanned\">ac_groups_scanned</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#ac_found\">ac_found</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#ac_tail\">ac_tail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#ac_buddy\">ac_buddy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#ac_flags\">ac_flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allocation hints */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#ac_status\">ac_status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#ac_criteria\">ac_criteria</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#ac_repeats\">ac_repeats</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#ac_2order\">ac_2order</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if request is to allocate 2^N blocks and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * N &gt; 0, the field stores N, otherwise 0 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#ac_op\">ac_op</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* operation, for history only */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#ac_bitmap_page\">ac_bitmap_page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#ac_buddy_page\">ac_buddy_page</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pointer to the held semaphore upon successful</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block allocation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> *<a class=\"id\" href=\"#alloc_semp\">alloc_semp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_prealloc_space\">ext4_prealloc_space</a> *<a class=\"id\" href=\"#ac_pa\">ac_pa</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_locality_group\">ext4_locality_group</a> *<a class=\"id\" href=\"#ac_lg\">ac_lg</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AC_STATUS_CONTINUE\">AC_STATUS_CONTINUE</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AC_STATUS_FOUND\">AC_STATUS_FOUND</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AC_STATUS_BREAK\">AC_STATUS_BREAK</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"", 
"struct <a class=\"id\" href=\"#ext4_buddy\">ext4_buddy</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#bd_buddy_page\">bd_buddy_page</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#bd_buddy\">bd_buddy</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#bd_bitmap_page\">bd_bitmap_page</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#bd_bitmap\">bd_bitmap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_info\">ext4_group_info</a> *<a class=\"id\" href=\"#bd_info\">bd_info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#bd_sb\">bd_sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#bd_blkbits\">bd_blkbits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#bd_group\">bd_group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> *<a class=\"id\" href=\"#alloc_semp\">alloc_semp</a>;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_BITMAP\">EXT4_MB_BITMAP</a>(<a class=\"id\" href=\"#e4b\">e4b</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#e4b\">e4b</a>)-><a class=\"id\" href=\"#bd_bitmap\">bd_bitmap</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_BUDDY\">EXT4_MB_BUDDY</a>(<a class=\"id\" href=\"#e4b\">e4b</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#e4b\">e4b</a>)-><a class=\"id\" href=\"#bd_buddy\">bd_buddy</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_grp_offs_to_block\">ext4_grp_offs_to_block</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_free_extent\">ext4_free_extent</a> *<a class=\"id\" href=\"#fex\">fex</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext4_group_first_block_no\">ext4_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#fex\">fex</a>-><a class=\"id\" href=\"#fe_group\">fe_group</a>) + <a class=\"id\" href=\"#fex\">fex</a>-><a class=\"id\" href=\"#fe_start\">fe_start</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/aa/4b5be4a13a21ec634e8791f809322f2fda4ef4.xr', __xr_tmp);
