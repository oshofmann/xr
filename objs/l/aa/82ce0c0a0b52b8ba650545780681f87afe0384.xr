var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Block device elevator/IO-scheduler.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2000 Andrea Arcangeli &lt;andrea@suse.de&gt; SuSE</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 30042000 Jens Axboe &lt;axboe@kernel.dk&gt; :</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Split the elevator a bit so that it is possible to choose a different</span>", 
"<span class=\"comment\"> * one or even write a new \"plug in\". There are three pieces:</span>", 
"<span class=\"comment\"> * - elevator_fn, inserts a new request in the queue list</span>", 
"<span class=\"comment\"> * - elevator_merge_fn, decides whether a new buffer can be merged with</span>", 
"<span class=\"comment\"> *   an existing request</span>", 
"<span class=\"comment\"> * - elevator_dequeue_fn, called when a request is taken off the active list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 20082000 Dave Jones &lt;davej@suse.de&gt; :</span>", 
"<span class=\"comment\"> * Removed tests for max-bomb-segments, which was breaking elvtune</span>", 
"<span class=\"comment\"> *  when run without -bN</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Jens:</span>", 
"<span class=\"comment\"> * - Rework again to work with bio instead of buffer_heads</span>", 
"<span class=\"comment\"> * - loose bi_dev comparisons, partition handling is right now</span>", 
"<span class=\"comment\"> * - completely modularize elevator setup and teardown</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#elevator\">elevator</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blktrace_api\">blktrace_api</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#block\">block</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"blk.h\"", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#elv_list\">elv_list</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Merge hash stuff.</span>", 
"<span class=\"comment\"> */</span>", 
"static const int <a class=\"id\" href=\"#elv_hash_shift\">elv_hash_shift</a> = 6;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ELV_HASH_BLOCK\">ELV_HASH_BLOCK</a>(<a class=\"id\" href=\"#sec\">sec</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#sec\">sec</a>) >> 3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ELV_HASH_FN\">ELV_HASH_FN</a>(<a class=\"id\" href=\"#sec\">sec</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#hash_long\">hash_long</a>(<a class=\"id\" href=\"#ELV_HASH_BLOCK\">ELV_HASH_BLOCK</a>((<a class=\"id\" href=\"#sec\">sec</a>)), <a class=\"id\" href=\"#elv_hash_shift\">elv_hash_shift</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ELV_HASH_ENTRIES\">ELV_HASH_ENTRIES</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#elv_hash_shift\">elv_hash_shift</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rq_hash_key\">rq_hash_key</a>(<a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) + <a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Query io scheduler to see if the current process issuing bio may be</span>", 
"<span class=\"comment\"> * merged with rq.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#elv_iosched_allow_merge\">elv_iosched_allow_merge</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_allow_merge_fn\">elevator_allow_merge_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_allow_merge_fn\">elevator_allow_merge_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * can we safely merge with this request?</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#elv_rq_merge_ok\">elv_rq_merge_ok</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rq_mergeable\">rq_mergeable</a>(<a class=\"id\" href=\"#rq\">rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't merge file system requests and discard requests</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>) != (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't merge discard requests and secure discard requests</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> &amp; <a class=\"id\" href=\"#REQ_SECURE\">REQ_SECURE</a>) != (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> &amp; <a class=\"id\" href=\"#REQ_SECURE\">REQ_SECURE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * different data direction or already started, don't merge</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(<a class=\"id\" href=\"#bio\">bio</a>) != <a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must be same device and not a special request</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rq_disk\">rq_disk</a> != <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a> || <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#special\">special</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only merge integrity protected bio into ditto rq</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_integrity\">bio_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>) != <a class=\"id\" href=\"#blk_integrity_rq\">blk_integrity_rq</a>(<a class=\"id\" href=\"#rq\">rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elv_iosched_allow_merge\">elv_iosched_allow_merge</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#bio\">bio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_rq_merge_ok\">elv_rq_merge_ok</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#elv_try_merge\">elv_try_merge</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#__rq\">__rq</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ELEVATOR_NO_MERGE\">ELEVATOR_NO_MERGE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we can merge and sequence is ok, check if it's possible</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#elv_rq_merge_ok\">elv_rq_merge_ok</a>(<a class=\"id\" href=\"#__rq\">__rq</a>, <a class=\"id\" href=\"#bio\">bio</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#__rq\">__rq</a>) + <a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#__rq\">__rq</a>) == <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ELEVATOR_BACK_MERGE\">ELEVATOR_BACK_MERGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#__rq\">__rq</a>) - <a class=\"id\" href=\"#bio_sectors\">bio_sectors</a>(<a class=\"id\" href=\"#bio\">bio</a>) == <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ELEVATOR_FRONT_MERGE\">ELEVATOR_FRONT_MERGE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#elevator_find\">elevator_find</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#e\">e</a>, &amp;<a class=\"id\" href=\"#elv_list\">elv_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>, <a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#elevator_put\">elevator_put</a>(struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_owner\">elevator_owner</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#elevator_get\">elevator_get</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#elevator_find\">elevator_find</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#elv\">elv</a>[<a class=\"id\" href=\"#ELV_NAME_MAX\">ELV_NAME_MAX</a> + <a class=\"id\" href=\"#strlen\">strlen</a>(\"-iosched\")];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#elv\">elv</a>, sizeof(<a class=\"id\" href=\"#elv\">elv</a>), \"%s-iosched\", <a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_module\">request_module</a>(\"%s\", <a class=\"id\" href=\"#elv\">elv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#elevator_find\">elevator_find</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a> && !<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_owner\">elevator_owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#elevator_init_queue\">elevator_init_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#eq\">eq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_init_fn\">elevator_init_fn</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#elevator_attach\">elevator_attach</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#eq\">eq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a> = <a class=\"id\" href=\"#eq\">eq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#elevator_data\">elevator_data</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"}", 
"", 
"static char <a class=\"id\" href=\"#chosen_elevator\">chosen_elevator</a>[16];", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#elevator_setup\">elevator_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Be backwards-compatible with previous kernels, so users</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * won't get the wrong elevator.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#chosen_elevator\">chosen_elevator</a>, <a class=\"id\" href=\"#str\">str</a>, sizeof(<a class=\"id\" href=\"#chosen_elevator\">chosen_elevator</a>) - 1);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"elevator=\", <a class=\"id\" href=\"#elevator_setup\">elevator_setup</a>);", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#elv_ktype\">elv_ktype</a>;", 
"", 
"static struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#elevator_alloc\">elevator_alloc</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#eq\">eq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eq\">eq</a> = <a class=\"id\" href=\"#kmalloc_node\">kmalloc_node</a>(sizeof(*<a class=\"id\" href=\"#eq\">eq</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>, <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#eq\">eq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#elevator_type\">elevator_type</a> = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_init\">kobject_init</a>(&amp;<a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#elv_ktype\">elv_ktype</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#sysfs_lock\">sysfs_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#kmalloc_node\">kmalloc_node</a>(sizeof(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a>) * <a class=\"id\" href=\"#ELV_HASH_ENTRIES\">ELV_HASH_ENTRIES</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#hash\">hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ELV_HASH_ENTRIES\">ELV_HASH_ENTRIES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_HLIST_HEAD\">INIT_HLIST_HEAD</a>(&amp;<a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#hash\">hash</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#eq\">eq</a>;", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#eq\">eq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elevator_put\">elevator_put</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#elevator_release\">elevator_release</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a>, <a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elevator_put\">elevator_put</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_type\">elevator_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#elevator_init\">elevator_init</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#eq\">eq</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#end_sector\">end_sector</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#boundary_rq\">boundary_rq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#elevator_get\">elevator_get</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a> && *<a class=\"id\" href=\"#chosen_elevator\">chosen_elevator</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#elevator_get\">elevator_get</a>(<a class=\"id\" href=\"#chosen_elevator\">chosen_elevator</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"I/O scheduler %s not found\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chosen_elevator\">chosen_elevator</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#elevator_get\">elevator_get</a>(<a class=\"id\" href=\"#CONFIG_DEFAULT_IOSCHED\">CONFIG_DEFAULT_IOSCHED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Default I/O scheduler not found. \" \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Using noop.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#elevator_get\">elevator_get</a>(\"noop\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eq\">eq</a> = <a class=\"id\" href=\"#elevator_alloc\">elevator_alloc</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#eq\">eq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#elevator_init_queue\">elevator_init_queue</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#eq\">eq</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#eq\">eq</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elevator_attach\">elevator_attach</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#eq\">eq</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elevator_init\">elevator_init</a>);", 
"", 
"void <a class=\"id\" href=\"#elevator_exit\">elevator_exit</a>(struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#sysfs_lock\">sysfs_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_exit_fn\">elevator_exit_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_exit_fn\">elevator_exit_fn</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#sysfs_lock\">sysfs_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elevator_exit\">elevator_exit</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__elv_rqhash_del\">__elv_rqhash_del</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_del_init\">hlist_del_init</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#hash\">hash</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#elv_rqhash_del\">elv_rqhash_del</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ELV_ON_HASH\">ELV_ON_HASH</a>(<a class=\"id\" href=\"#rq\">rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__elv_rqhash_del\">__elv_rqhash_del</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#elv_rqhash_add\">elv_rqhash_add</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#ELV_ON_HASH\">ELV_ON_HASH</a>(<a class=\"id\" href=\"#rq\">rq</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#hash\">hash</a>, &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#hash\">hash</a>[<a class=\"id\" href=\"#ELV_HASH_FN\">ELV_HASH_FN</a>(<a class=\"id\" href=\"#rq_hash_key\">rq_hash_key</a>(<a class=\"id\" href=\"#rq\">rq</a>))]);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#elv_rqhash_reposition\">elv_rqhash_reposition</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__elv_rqhash_del\">__elv_rqhash_del</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_rqhash_add\">elv_rqhash_add</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#elv_rqhash_find\">elv_rqhash_find</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#hash_list\">hash_list</a> = &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#hash\">hash</a>[<a class=\"id\" href=\"#ELV_HASH_FN\">ELV_HASH_FN</a>(<a class=\"id\" href=\"#offset\">offset</a>)];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#entry\">entry</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_safe\">hlist_for_each_entry_safe</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#hash_list\">hash_list</a>, <a class=\"id\" href=\"#hash\">hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#ELV_ON_HASH\">ELV_ON_HASH</a>(<a class=\"id\" href=\"#rq\">rq</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#rq_mergeable\">rq_mergeable</a>(<a class=\"id\" href=\"#rq\">rq</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__elv_rqhash_del\">__elv_rqhash_del</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rq_hash_key\">rq_hash_key</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RB-tree support functions for inserting/lookup/removal of requests</span>", 
"<span class=\"comment\"> * in a sorted RB tree.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#elv_rb_add\">elv_rb_add</a>(struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#p\">p</a> = &amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#__rq\">__rq</a>;", 
"", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rq\">__rq</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#request\">request</a>, <a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) &lt; <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#__rq\">__rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) &gt; <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#__rq\">__rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__rq\">__rq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_link_node\">rb_link_node</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_rb_add\">elv_rb_add</a>);", 
"", 
"void <a class=\"id\" href=\"#elv_rb_del\">elv_rb_del</a>(struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#RB_EMPTY_NODE\">RB_EMPTY_NODE</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_erase\">rb_erase</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RB_CLEAR_NODE\">RB_CLEAR_NODE</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_rb_del\">elv_rb_del</a>);", 
"", 
"struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#elv_rb_find\">elv_rb_find</a>(struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#request\">request</a>, <a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sector\">sector</a> &lt; <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#sector\">sector</a> &gt; <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_rb_find\">elv_rb_find</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Insert rq into dispatch queue of q.  Queue lock must be held on</span>", 
"<span class=\"comment\"> * entry.  rq is sort instead into the dispatch queue. To be used by</span>", 
"<span class=\"comment\"> * specific elevators.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#elv_dispatch_sort\">elv_dispatch_sort</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#boundary\">boundary</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#stop_flags\">stop_flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a> == <a class=\"id\" href=\"#rq\">rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_rqhash_del\">elv_rqhash_del</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#nr_sorted\">nr_sorted</a>--;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boundary\">boundary</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#end_sector\">end_sector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stop_flags\">stop_flags</a> = <a class=\"id\" href=\"#REQ_SOFTBARRIER\">REQ_SOFTBARRIER</a> | <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a> | <a class=\"id\" href=\"#REQ_STARTED\">REQ_STARTED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_prev\">list_for_each_prev</a>(<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#list_entry_rq\">list_entry_rq</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>) !=", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#pos\">pos</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) != <a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#pos\">pos</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#stop_flags\">stop_flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) >= <a class=\"id\" href=\"#boundary\">boundary</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#pos\">pos</a>) &lt; <a class=\"id\" href=\"#boundary\">boundary</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#pos\">pos</a>) >= <a class=\"id\" href=\"#boundary\">boundary</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) >= <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#pos\">pos</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_dispatch_sort\">elv_dispatch_sort</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Insert rq into dispatch queue of q.  Queue lock must be held on</span>", 
"<span class=\"comment\"> * entry.  rq is added to the back of the dispatch queue. To be used by</span>", 
"<span class=\"comment\"> * specific elevators.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#elv_dispatch_add_tail\">elv_dispatch_add_tail</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a> == <a class=\"id\" href=\"#rq\">rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_rqhash_del\">elv_rqhash_del</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#nr_sorted\">nr_sorted</a>--;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#end_sector\">end_sector</a> = <a class=\"id\" href=\"#rq_end_sector\">rq_end_sector</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#boundary_rq\">boundary_rq</a> = <a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_dispatch_add_tail\">elv_dispatch_add_tail</a>);", 
"", 
"int <a class=\"id\" href=\"#elv_merge\">elv_merge</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> **<a class=\"id\" href=\"#req\">req</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#__rq\">__rq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Levels of merges:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * <span class=\"ts\"/>nomerges:  No merges at all attempted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * <span class=\"ts\"/>noxmerges: Only simple one-hit cache try</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * <span class=\"ts\"/>merges:<span class=\"ts\"/>   All merge tries attempted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_queue_nomerges\">blk_queue_nomerges</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ELEVATOR_NO_MERGE\">ELEVATOR_NO_MERGE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First try one-hit cache.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#elv_try_merge\">elv_try_merge</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#ELEVATOR_NO_MERGE\">ELEVATOR_NO_MERGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_queue_noxmerges\">blk_queue_noxmerges</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ELEVATOR_NO_MERGE\">ELEVATOR_NO_MERGE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * See if our hash lookup can find a potential backmerge.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__rq\">__rq</a> = <a class=\"id\" href=\"#elv_rqhash_find\">elv_rqhash_find</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__rq\">__rq</a> && <a class=\"id\" href=\"#elv_rq_merge_ok\">elv_rq_merge_ok</a>(<a class=\"id\" href=\"#__rq\">__rq</a>, <a class=\"id\" href=\"#bio\">bio</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#__rq\">__rq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ELEVATOR_BACK_MERGE\">ELEVATOR_BACK_MERGE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_merge_fn\">elevator_merge_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_merge_fn\">elevator_merge_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ELEVATOR_NO_MERGE\">ELEVATOR_NO_MERGE</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_merged_request\">elv_merged_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_merged_fn\">elevator_merged_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_merged_fn\">elevator_merged_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ELEVATOR_BACK_MERGE\">ELEVATOR_BACK_MERGE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elv_rqhash_reposition\">elv_rqhash_reposition</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a> = <a class=\"id\" href=\"#rq\">rq</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_merge_requests\">elv_merge_requests</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#next\">next</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_merge_req_fn\">elevator_merge_req_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_merge_req_fn\">elevator_merge_req_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#next\">next</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_rqhash_reposition\">elv_rqhash_reposition</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_rqhash_del\">elv_rqhash_del</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#next\">next</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#nr_sorted\">nr_sorted</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a> = <a class=\"id\" href=\"#rq\">rq</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_bio_merged\">elv_bio_merged</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_bio_merged_fn\">elevator_bio_merged_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_bio_merged_fn\">elevator_bio_merged_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_requeue_request\">elv_requeue_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it already went through dequeue, we need to decrement the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in_flight count again</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_account_rq\">blk_account_rq</a>(<a class=\"id\" href=\"#rq\">rq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#in_flight\">in_flight</a>[<a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>)]--;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_SORTED\">REQ_SORTED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elv_deactivate_rq\">elv_deactivate_rq</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &= ~<a class=\"id\" href=\"#REQ_STARTED\">REQ_STARTED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_insert\">elv_insert</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#ELEVATOR_INSERT_REQUEUE\">ELEVATOR_INSERT_REQUEUE</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_drain_elevator\">elv_drain_elevator</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#printed\">printed</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_dispatch_fn\">elevator_dispatch_fn</a>(<a class=\"id\" href=\"#q\">q</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#nr_sorted\">nr_sorted</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#printed\">printed</a>++ &lt; 10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: forced dispatching is broken \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"(nr_sorted=%u), please report this\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>-><a class=\"id\" href=\"#elevator_type\">elevator_type</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>, <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#nr_sorted\">nr_sorted</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Call with queue lock held, interrupts disabled</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#elv_quiesce_start\">elv_quiesce_start</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_flag_set\">queue_flag_set</a>(<a class=\"id\" href=\"#QUEUE_FLAG_ELVSWITCH\">QUEUE_FLAG_ELVSWITCH</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make sure we don't have any requests in flight</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_drain_elevator\">elv_drain_elevator</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#rq\">rq</a>.<a class=\"id\" href=\"#elvpriv\">elvpriv</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__blk_run_queue\">__blk_run_queue</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elv_drain_elevator\">elv_drain_elevator</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_quiesce_end\">elv_quiesce_end</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_flag_clear\">queue_flag_clear</a>(<a class=\"id\" href=\"#QUEUE_FLAG_ELVSWITCH\">QUEUE_FLAG_ELVSWITCH</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_insert\">elv_insert</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#where\">where</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ordseq\">ordseq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#unplug_it\">unplug_it</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_block_rq_insert\">trace_block_rq_insert</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#q\">q</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#where\">where</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ELEVATOR_INSERT_FRONT\">ELEVATOR_INSERT_FRONT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> |= <a class=\"id\" href=\"#REQ_SOFTBARRIER\">REQ_SOFTBARRIER</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ELEVATOR_INSERT_BACK\">ELEVATOR_INSERT_BACK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> |= <a class=\"id\" href=\"#REQ_SOFTBARRIER\">REQ_SOFTBARRIER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elv_drain_elevator\">elv_drain_elevator</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We kick the queue here for the following reasons.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * - The elevator might have returned NULL previously</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   to delay requests and returned them now.  As the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   queue wasn't empty before this request, ll_rw_blk</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   won't run the queue on return, resulting in hang.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * - Usually, back inserted requests won't be merged</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   with anything.  There's no point in delaying queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   processing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__blk_run_queue\">__blk_run_queue</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ELEVATOR_INSERT_SORT\">ELEVATOR_INSERT_SORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> != <a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>       !(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> |= <a class=\"id\" href=\"#REQ_SORTED\">REQ_SORTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#nr_sorted\">nr_sorted</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rq_mergeable\">rq_mergeable</a>(<a class=\"id\" href=\"#rq\">rq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elv_rqhash_add\">elv_rqhash_add</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#last_merge\">last_merge</a> = <a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Some ioscheds (cfq) run q-&gt;request_fn directly, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * rq cannot be accessed after calling</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * elevator_add_req_fn.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_add_req_fn\">elevator_add_req_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ELEVATOR_INSERT_REQUEUE\">ELEVATOR_INSERT_REQUEUE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If ordered flush isn't in progress, we do front</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * insertion; otherwise, requests should be requeued</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in ordseq order.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> |= <a class=\"id\" href=\"#REQ_SOFTBARRIER\">REQ_SOFTBARRIER</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Most requeues happen because of a busy condition,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * don't force unplug of the queue for that case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unplug_it\">unplug_it</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#ordseq\">ordseq</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ordseq\">ordseq</a> = <a class=\"id\" href=\"#blk_ordered_req_seq\">blk_ordered_req_seq</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#pos_rq\">pos_rq</a> = <a class=\"id\" href=\"#list_entry_rq\">list_entry_rq</a>(<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ordseq\">ordseq</a> <= <a class=\"id\" href=\"#blk_ordered_req_seq\">blk_ordered_req_seq</a>(<a class=\"id\" href=\"#pos_rq\">pos_rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: bad insertion point %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#where\">where</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unplug_it\">unplug_it</a> && <a class=\"id\" href=\"#blk_queue_plugged\">blk_queue_plugged</a>(<a class=\"id\" href=\"#q\">q</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nrq\">nrq</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#rq\">rq</a>.<a class=\"id\" href=\"#count\">count</a>[<a class=\"id\" href=\"#BLK_RW_SYNC\">BLK_RW_SYNC</a>] + <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#rq\">rq</a>.<a class=\"id\" href=\"#count\">count</a>[<a class=\"id\" href=\"#BLK_RW_ASYNC\">BLK_RW_ASYNC</a>]", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>- <a class=\"id\" href=\"#queue_in_flight\">queue_in_flight</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nrq\">nrq</a> >= <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#unplug_thresh\">unplug_thresh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__generic_unplug_device\">__generic_unplug_device</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#__elv_add_request\">__elv_add_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#where\">where</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#plug\">plug</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#ordcolor\">ordcolor</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> |= <a class=\"id\" href=\"#REQ_ORDERED_COLOR\">REQ_ORDERED_COLOR</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; (<a class=\"id\" href=\"#REQ_SOFTBARRIER\">REQ_SOFTBARRIER</a> | <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * toggle ordered color</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#ordcolor\">ordcolor</a> ^= 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * barriers implicitly indicate back insertion</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#where\">where</a> == <a class=\"id\" href=\"#ELEVATOR_INSERT_SORT\">ELEVATOR_INSERT_SORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#where\">where</a> = <a class=\"id\" href=\"#ELEVATOR_INSERT_BACK\">ELEVATOR_INSERT_BACK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this request is scheduling boundary, update</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * end_sector</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#end_sector\">end_sector</a> = <a class=\"id\" href=\"#rq_end_sector\">rq_end_sector</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#boundary_rq\">boundary_rq</a> = <a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (!(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_ELVPRIV\">REQ_ELVPRIV</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#where\">where</a> == <a class=\"id\" href=\"#ELEVATOR_INSERT_SORT\">ELEVATOR_INSERT_SORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#where\">where</a> = <a class=\"id\" href=\"#ELEVATOR_INSERT_BACK\">ELEVATOR_INSERT_BACK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#plug\">plug</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_plug_device\">blk_plug_device</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_insert\">elv_insert</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#where\">where</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__elv_add_request\">__elv_add_request</a>);", 
"", 
"void <a class=\"id\" href=\"#elv_add_request\">elv_add_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#where\">where</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#plug\">plug</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__elv_add_request\">__elv_add_request</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#plug\">plug</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_add_request\">elv_add_request</a>);", 
"", 
"int <a class=\"id\" href=\"#elv_queue_empty\">elv_queue_empty</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_queue_empty_fn\">elevator_queue_empty_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_queue_empty_fn\">elevator_queue_empty_fn</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_queue_empty\">elv_queue_empty</a>);", 
"", 
"struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#elv_latter_request\">elv_latter_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_latter_req_fn\">elevator_latter_req_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_latter_req_fn\">elevator_latter_req_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#elv_former_request\">elv_former_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_former_req_fn\">elevator_former_req_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_former_req_fn\">elevator_former_req_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#elv_set_request\">elv_set_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_set_req_fn\">elevator_set_req_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_set_req_fn\">elevator_set_req_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#elevator_private\">elevator_private</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_put_request\">elv_put_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_put_req_fn\">elevator_put_req_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_put_req_fn\">elevator_put_req_fn</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#elv_may_queue\">elv_may_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, int <a class=\"id\" href=\"#rw\">rw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_may_queue_fn\">elevator_may_queue_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_may_queue_fn\">elevator_may_queue_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rw\">rw</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ELV_MQUEUE_MAY\">ELV_MQUEUE_MAY</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_abort_queue\">elv_abort_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>;", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#list_entry_rq\">list_entry_rq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>.<a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> |= <a class=\"id\" href=\"#REQ_QUIET\">REQ_QUIET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_block_rq_abort\">trace_block_rq_abort</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Mark this request as started so we don't trigger</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * any debug logic in the end I/O path.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_start_request\">blk_start_request</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__blk_end_request_all\">__blk_end_request_all</a>(<a class=\"id\" href=\"#rq\">rq</a>, -<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_abort_queue\">elv_abort_queue</a>);", 
"", 
"void <a class=\"id\" href=\"#elv_completed_request\">elv_completed_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * request is released from the driver, io must be done</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_account_rq\">blk_account_rq</a>(<a class=\"id\" href=\"#rq\">rq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#in_flight\">in_flight</a>[<a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>)]--;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_SORTED\">REQ_SORTED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_completed_req_fn\">elevator_completed_req_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#elevator_completed_req_fn\">elevator_completed_req_fn</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check if the queue is waiting for fs requests to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * drained for flush sequence.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#ordseq\">ordseq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#list_entry_rq\">list_entry_rq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_head\">queue_head</a>.<a class=\"id\" href=\"#next\">next</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#queue_in_flight\">queue_in_flight</a>(<a class=\"id\" href=\"#q\">q</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#blk_ordered_cur_seq\">blk_ordered_cur_seq</a>(<a class=\"id\" href=\"#q\">q</a>) == <a class=\"id\" href=\"#QUEUE_ORDSEQ_DRAIN\">QUEUE_ORDSEQ_DRAIN</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#next\">next</a> || <a class=\"id\" href=\"#blk_ordered_req_seq\">blk_ordered_req_seq</a>(<a class=\"id\" href=\"#next\">next</a>) &gt; <a class=\"id\" href=\"#QUEUE_ORDSEQ_DRAIN\">QUEUE_ORDSEQ_DRAIN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_ordered_complete_seq\">blk_ordered_complete_seq</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#QUEUE_ORDSEQ_DRAIN\">QUEUE_ORDSEQ_DRAIN</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__blk_run_queue\">__blk_run_queue</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_elv\">to_elv</a>(<a class=\"id\" href=\"#atr\">atr</a>) <a class=\"id\" href=\"#container_of\">container_of</a>((<a class=\"id\" href=\"#atr\">atr</a>), struct <a class=\"id\" href=\"#elv_fs_entry\">elv_fs_entry</a>, <a class=\"id\" href=\"#attr\">attr</a>)", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#elv_attr_show\">elv_attr_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elv_fs_entry\">elv_fs_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#to_elv\">to_elv</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#show\">show</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a>, <a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#sysfs_lock\">sysfs_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a> ? <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#show\">show</a>(<a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#page\">page</a>) : -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#sysfs_lock\">sysfs_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#elv_attr_store\">elv_attr_store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>       const char *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#length\">length</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elv_fs_entry\">elv_fs_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#to_elv\">to_elv</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#store\">store</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a>, <a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#sysfs_lock\">sysfs_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a> ? <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#store\">store</a>(<a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#length\">length</a>) : -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#sysfs_lock\">sysfs_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> <a class=\"id\" href=\"#elv_sysfs_ops\">elv_sysfs_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#elv_attr_show\">elv_attr_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a><span class=\"ts\"/>= <a class=\"id\" href=\"#elv_attr_store\">elv_attr_store</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#elv_ktype\">elv_ktype</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#elv_sysfs_ops\">elv_sysfs_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#elevator_release\">elevator_release</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#elv_register_queue\">elv_register_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#kobject_add\">kobject_add</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"%s\", \"iosched\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#elv_fs_entry\">elv_fs_entry</a> *<a class=\"id\" href=\"#attr\">attr</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_type\">elevator_type</a>-><a class=\"id\" href=\"#elevator_attrs\">elevator_attrs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#attr\">attr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#attr\">attr</a>.<a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#attr\">attr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#registered\">registered</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_register_queue\">elv_register_queue</a>);", 
"", 
"static void <a class=\"id\" href=\"#__elv_unregister_queue\">__elv_unregister_queue</a>(struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_REMOVE\">KOBJ_REMOVE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_del\">kobject_del</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#registered\">registered</a> = 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#elv_unregister_queue\">elv_unregister_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__elv_unregister_queue\">__elv_unregister_queue</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_unregister_queue\">elv_unregister_queue</a>);", 
"", 
"void <a class=\"id\" href=\"#elv_register\">elv_register</a>(struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#def\">def</a> = \"\";", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#elevator_find\">elevator_find</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#elv_list\">elv_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>, <a class=\"id\" href=\"#chosen_elevator\">chosen_elevator</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(!*<a class=\"id\" href=\"#chosen_elevator\">chosen_elevator</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> !<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>, <a class=\"id\" href=\"#CONFIG_DEFAULT_IOSCHED\">CONFIG_DEFAULT_IOSCHED</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#def\">def</a> = \" (default)\";", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"io scheduler %s registered%s\\n\", <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#def\">def</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#elv_register\">elv_register</a>);", 
"", 
"void <a class=\"id\" href=\"#elv_unregister\">elv_unregister</a>(struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#g\">g</a>, *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Iterate every thread in the process to remove the io contexts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>.<a class=\"id\" href=\"#trim\">trim</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_each_thread\">do_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#io_context\">io_context</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ops\">ops</a>.<a class=\"id\" href=\"#trim\">trim</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#io_context\">io_context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_thread\">while_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#elv_unregister\">elv_unregister</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * switch to new_e io scheduler. be careful not to introduce deadlocks -</span>", 
"<span class=\"comment\"> * we don't free the old io scheduler, before we have allocated what we</span>", 
"<span class=\"comment\"> * need for the new one. this way we have a chance of going back to the old</span>", 
"<span class=\"comment\"> * one, if the new one fails init for some reason.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#elevator_switch\">elevator_switch</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#new_e\">new_e</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#old_elevator\">old_elevator</a>, *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate new elevator</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#elevator_alloc\">elevator_alloc</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#new_e\">new_e</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#elevator_init_queue\">elevator_init_queue</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Turn on BYPASS and drain all requests w/ elevator private data</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_quiesce_start\">elv_quiesce_start</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Remember old elevator.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_elevator\">old_elevator</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * attach and start new elevator</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elevator_attach\">elevator_attach</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_elevator\">old_elevator</a>-><a class=\"id\" href=\"#registered\">registered</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__elv_unregister_queue\">__elv_unregister_queue</a>(<a class=\"id\" href=\"#old_elevator\">old_elevator</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#elv_register_queue\">elv_register_queue</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_register\">fail_register</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * finally exit old elevator and turn off BYPASS.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elevator_exit\">elevator_exit</a>(<a class=\"id\" href=\"#old_elevator\">old_elevator</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_quiesce_end\">elv_quiesce_end</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_add_trace_msg\">blk_add_trace_msg</a>(<a class=\"id\" href=\"#q\">q</a>, \"elv switch: %s\", <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_type\">elevator_type</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#fail_register\">fail_register</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * switch failed, exit the new io scheduler and reattach the old</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one again (along with re-adding the sysfs dir)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elevator_exit\">elevator_exit</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a> = <a class=\"id\" href=\"#old_elevator\">old_elevator</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_register_queue\">elv_register_queue</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_flag_clear\">queue_flag_clear</a>(<a class=\"id\" href=\"#QUEUE_FLAG_ELVSWITCH\">QUEUE_FLAG_ELVSWITCH</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Switch this queue to the given IO scheduler.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#elevator_change\">elevator_change</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#elevator_name\">elevator_name</a>[<a class=\"id\" href=\"#ELV_NAME_MAX\">ELV_NAME_MAX</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#elevator_name\">elevator_name</a>, <a class=\"id\" href=\"#name\">name</a>, sizeof(<a class=\"id\" href=\"#elevator_name\">elevator_name</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#elevator_get\">elevator_get</a>(<a class=\"id\" href=\"#strstrip\">strstrip</a>(<a class=\"id\" href=\"#elevator_name\">elevator_name</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"elevator: type %s not found\\n\", <a class=\"id\" href=\"#elevator_name\">elevator_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#elevator_name\">elevator_name</a>, <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>-><a class=\"id\" href=\"#elevator_type\">elevator_type</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elevator_put\">elevator_put</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#elevator_switch\">elevator_switch</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#e\">e</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elevator_change\">elevator_change</a>);", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#elv_iosched_store\">elv_iosched_store</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#elevator_change\">elevator_change</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"elevator: switch to %s failed\\n\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#elv_iosched_show\">elv_iosched_show</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#elv\">elv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_type\">elevator_type</a> *<a class=\"id\" href=\"#__e\">__e</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a> || !<a class=\"id\" href=\"#blk_queue_stackable\">blk_queue_stackable</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#name\">name</a>, \"none\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv\">elv</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#elevator_type\">elevator_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#__e\">__e</a>, &amp;<a class=\"id\" href=\"#elv_list\">elv_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#elv\">elv</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>, <a class=\"id\" href=\"#__e\">__e</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#name\">name</a>+<a class=\"id\" href=\"#len\">len</a>, \"[%s] \", <a class=\"id\" href=\"#elv\">elv</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#name\">name</a>+<a class=\"id\" href=\"#len\">len</a>, \"%s \", <a class=\"id\" href=\"#__e\">__e</a>-><a class=\"id\" href=\"#elevator_name\">elevator_name</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#elv_list_lock\">elv_list_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#len\">len</a>+<a class=\"id\" href=\"#name\">name</a>, \"\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#elv_rb_former_request\">elv_rb_former_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rbprev\">rbprev</a> = <a class=\"id\" href=\"#rb_prev\">rb_prev</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rbprev\">rbprev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rb_entry_rq\">rb_entry_rq</a>(<a class=\"id\" href=\"#rbprev\">rbprev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_rb_former_request\">elv_rb_former_request</a>);", 
"", 
"struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#elv_rb_latter_request\">elv_rb_latter_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rbnext\">rbnext</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rbnext\">rbnext</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rb_entry_rq\">rb_entry_rq</a>(<a class=\"id\" href=\"#rbnext\">rbnext</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#elv_rb_latter_request\">elv_rb_latter_request</a>);", 
];
xr_frag_insert('l/aa/82ce0c0a0b52b8ba650545780681f87afe0384.xr', __xr_tmp);
