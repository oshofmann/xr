var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read-Copy Update mechanism for mutual exclusion (tree-based version)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright IBM Corporation, 2008</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Dipankar Sarma &lt;dipankar@in.ibm.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   Paul E. McKenney &lt;paulmck@linux.vnet.ibm.com&gt; Hierarchical algorithm</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Based on the original work by Paul McKenney &lt;paulmck@us.ibm.com&gt;</span>", 
"<span class=\"comment\"> * and inputs from Rusty Russell, Andrea Arcangeli and Andi Kleen.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For detailed explanation of Read-Copy Update mechanism see -</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Documentation/RCU</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_RCUTREE_H\">__LINUX_RCUTREE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_RCUTREE_H\">__LINUX_RCUTREE_H</a>", 
"", 
"struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a>;", 
"", 
"extern void <a class=\"id\" href=\"#rcu_sched_qs\">rcu_sched_qs</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"extern void <a class=\"id\" href=\"#rcu_bh_qs\">rcu_bh_qs</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"extern void <a class=\"id\" href=\"#rcu_note_context_switch\">rcu_note_context_switch</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"extern int <a class=\"id\" href=\"#rcu_needs_cpu\">rcu_needs_cpu</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TREE_PREEMPT_RCU\">CONFIG_TREE_PREEMPT_RCU</a>", 
"", 
"extern void <a class=\"id\" href=\"#__rcu_read_lock\">__rcu_read_lock</a>(void);", 
"extern void <a class=\"id\" href=\"#__rcu_read_unlock\">__rcu_read_unlock</a>(void);", 
"extern void <a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>(void);", 
"extern void <a class=\"id\" href=\"#exit_rcu\">exit_rcu</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Defined as macro as it is a very low level header</span>", 
"<span class=\"comment\"> * included from areas that don't even know about current</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rcu_preempt_depth\">rcu_preempt_depth</a>() (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#rcu_read_lock_nesting\">rcu_read_lock_nesting</a>)", 
"", 
"#else <span class=\"comment\">/* #ifdef CONFIG_TREE_PREEMPT_RCU */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__rcu_read_lock\">__rcu_read_lock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__rcu_read_unlock\">__rcu_read_unlock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a> <a class=\"id\" href=\"#synchronize_sched\">synchronize_sched</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#exit_rcu\">exit_rcu</a>(void)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rcu_preempt_depth\">rcu_preempt_depth</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* #else #ifdef CONFIG_TREE_PREEMPT_RCU */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__rcu_read_lock_bh\">__rcu_read_lock_bh</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__rcu_read_unlock_bh\">__rcu_read_unlock_bh</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#call_rcu_sched\">call_rcu_sched</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void (*<a class=\"id\" href=\"#func\">func</a>)(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#rcu\">rcu</a>));", 
"extern void <a class=\"id\" href=\"#synchronize_rcu_bh\">synchronize_rcu_bh</a>(void);", 
"extern void <a class=\"id\" href=\"#synchronize_sched\">synchronize_sched</a>(void);", 
"extern void <a class=\"id\" href=\"#synchronize_rcu_expedited\">synchronize_rcu_expedited</a>(void);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#synchronize_rcu_bh_expedited\">synchronize_rcu_bh_expedited</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_sched_expedited\">synchronize_sched_expedited</a>();", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#rcu_check_callbacks\">rcu_check_callbacks</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#user\">user</a>);", 
"", 
"extern long <a class=\"id\" href=\"#rcu_batches_completed\">rcu_batches_completed</a>(void);", 
"extern long <a class=\"id\" href=\"#rcu_batches_completed_bh\">rcu_batches_completed_bh</a>(void);", 
"extern long <a class=\"id\" href=\"#rcu_batches_completed_sched\">rcu_batches_completed_sched</a>(void);", 
"extern void <a class=\"id\" href=\"#rcu_force_quiescent_state\">rcu_force_quiescent_state</a>(void);", 
"extern void <a class=\"id\" href=\"#rcu_bh_force_quiescent_state\">rcu_bh_force_quiescent_state</a>(void);", 
"extern void <a class=\"id\" href=\"#rcu_sched_force_quiescent_state\">rcu_sched_force_quiescent_state</a>(void);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NO_HZ\">CONFIG_NO_HZ</a>", 
"void <a class=\"id\" href=\"#rcu_enter_nohz\">rcu_enter_nohz</a>(void);", 
"void <a class=\"id\" href=\"#rcu_exit_nohz\">rcu_exit_nohz</a>(void);", 
"#else <span class=\"comment\">/* CONFIG_NO_HZ */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rcu_enter_nohz\">rcu_enter_nohz</a>(void)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rcu_exit_nohz\">rcu_exit_nohz</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NO_HZ */</span>", 
"", 
"<span class=\"comment\">/* A context switch is a grace period for RCU-sched and RCU-bh. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rcu_blocking_is_gp\">rcu_blocking_is_gp</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>() == 1;", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#rcu_scheduler_starting\">rcu_scheduler_starting</a>(void);", 
"extern int <a class=\"id\" href=\"#rcu_scheduler_active\">rcu_scheduler_active</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __LINUX_RCUTREE_H */</span>", 
];
xr_frag_insert('l/aa/ab42a347facd2317671dcd96341aa6c2a1acb1.xr', __xr_tmp);
