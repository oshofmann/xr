var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * drivers/base/power/main.c - Where the driver meets power management.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2003 Patrick Mochel</span>", 
"<span class=\"comment\"> * Copyright (c) 2003 Open Source Development Lab</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPLv2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The driver model core calls device_pm_add() when a device is registered.</span>", 
"<span class=\"comment\"> * This will intialize the embedded device_pm_info object in the device</span>", 
"<span class=\"comment\"> * and add it to the list of power-controlled devices. sysfs entries for</span>", 
"<span class=\"comment\"> * controlling device power management will also be added.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * A separate list is used for keeping track of power info, because the power</span>", 
"<span class=\"comment\"> * domain dependencies may differ from the ancestral dependencies that the</span>", 
"<span class=\"comment\"> * subsystem list maintains.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kallsyms\">kallsyms</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm_runtime\">pm_runtime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#resume\">resume</a>-<a class=\"id\" href=\"#trace\">trace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#async\">async</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"../base.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"power.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The entries in the dpm_list list are in a depth first order, simply</span>", 
"<span class=\"comment\"> * because children are guaranteed to be discovered after parents, and</span>", 
"<span class=\"comment\"> * are inserted at the back of the list on discovery.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Since device_pm_add() may be called with a device lock held,</span>", 
"<span class=\"comment\"> * we must never try to acquire a device lock while holding</span>", 
"<span class=\"comment\"> * dpm_list_mutex.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#dpm_list\">dpm_list</a>);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#dpm_list_mtx\">dpm_list_mtx</a>);", 
"static <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#pm_transition\">pm_transition</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set once the preparation of devices for a PM transition has started, reset</span>", 
"<span class=\"comment\"> * before starting to resume devices.  Protected by dpm_list_mtx.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#transition_started\">transition_started</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_pm_init - Initialize the PM-related part of a device object.</span>", 
"<span class=\"comment\"> * @dev: Device object being initialized.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_pm_init\">device_pm_init</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#DPM_ON\">DPM_ON</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete_all\">complete_all</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#wakeup_count\">wakeup_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_init\">pm_runtime_init</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_pm_lock - Lock the list of active devices used by the PM core.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_pm_lock\">device_pm_lock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dpm_list_mtx\">dpm_list_mtx</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_pm_unlock - Unlock the list of active devices used by the PM core.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_pm_unlock\">device_pm_unlock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dpm_list_mtx\">dpm_list_mtx</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_pm_add - Add a device to the PM core's list of active devices.</span>", 
"<span class=\"comment\"> * @dev: Device to add to the list.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_pm_add\">device_pm_add</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Adding info for %s:%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> : \"No Bus\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dpm_list_mtx\">dpm_list_mtx</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#status\">status</a> >= <a class=\"id\" href=\"#DPM_SUSPENDING\">DPM_SUSPENDING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"parent %s should not be sleeping\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>));", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#transition_started\">transition_started</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We refuse to register parentless devices while a PM</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * transition is in progress in order to avoid leaving them</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * unhandled down the road</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_WARN\">dev_WARN</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"Parentless device registered during a PM transaction\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#dpm_list\">dpm_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dpm_list_mtx\">dpm_list_mtx</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_pm_remove - Remove a device from the PM core's list of active devices.</span>", 
"<span class=\"comment\"> * @dev: Device to be removed from the list.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_pm_remove\">device_pm_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Removing info for %s:%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> : \"No Bus\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete_all\">complete_all</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dpm_list_mtx\">dpm_list_mtx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dpm_list_mtx\">dpm_list_mtx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_remove\">pm_runtime_remove</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_pm_move_before - Move device in the PM core's list of active devices.</span>", 
"<span class=\"comment\"> * @deva: Device to move in dpm_list.</span>", 
"<span class=\"comment\"> * @devb: Device @deva should come before.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_pm_move_before\">device_pm_move_before</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#deva\">deva</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#devb\">devb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Moving %s:%s before %s:%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#deva\">deva</a>-><a class=\"id\" href=\"#bus\">bus</a> ? <a class=\"id\" href=\"#deva\">deva</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> : \"No Bus\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#deva\">deva</a>-><a class=\"id\" href=\"#kobj\">kobj</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#devb\">devb</a>-><a class=\"id\" href=\"#bus\">bus</a> ? <a class=\"id\" href=\"#devb\">devb</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> : \"No Bus\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#devb\">devb</a>-><a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><span class=\"comment\">/* Delete deva from dpm_list and reinsert before devb. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_move_tail\">list_move_tail</a>(&amp;<a class=\"id\" href=\"#deva\">deva</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#devb\">devb</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#entry\">entry</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_pm_move_after - Move device in the PM core's list of active devices.</span>", 
"<span class=\"comment\"> * @deva: Device to move in dpm_list.</span>", 
"<span class=\"comment\"> * @devb: Device @deva should come after.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_pm_move_after\">device_pm_move_after</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#deva\">deva</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#devb\">devb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Moving %s:%s after %s:%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#deva\">deva</a>-><a class=\"id\" href=\"#bus\">bus</a> ? <a class=\"id\" href=\"#deva\">deva</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> : \"No Bus\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#deva\">deva</a>-><a class=\"id\" href=\"#kobj\">kobj</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#devb\">devb</a>-><a class=\"id\" href=\"#bus\">bus</a> ? <a class=\"id\" href=\"#devb\">devb</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> : \"No Bus\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#devb\">devb</a>-><a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><span class=\"comment\">/* Delete deva from dpm_list and reinsert after devb. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_move\">list_move</a>(&amp;<a class=\"id\" href=\"#deva\">deva</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#devb\">devb</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#entry\">entry</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_pm_move_last - Move device to end of the PM core's list of devices.</span>", 
"<span class=\"comment\"> * @dev: Device to move in dpm_list.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_pm_move_last\">device_pm_move_last</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Moving %s:%s to end of list\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> : \"No Bus\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_move_tail\">list_move_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#dpm_list\">dpm_list</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#initcall_debug_start\">initcall_debug_start</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#calltime\">calltime</a> = <a class=\"id\" href=\"#ktime_set\">ktime_set</a>(0, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#initcall_debug\">initcall_debug</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"calling  %s+ @ %i\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#current\">current</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#calltime\">calltime</a> = <a class=\"id\" href=\"#ktime_get\">ktime_get</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#calltime\">calltime</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#initcall_debug_report\">initcall_debug_report</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#calltime\">calltime</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#rettime\">rettime</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#initcall_debug\">initcall_debug</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rettime\">rettime</a> = <a class=\"id\" href=\"#ktime_get\">ktime_get</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#ktime_sub\">ktime_sub</a>(<a class=\"id\" href=\"#rettime\">rettime</a>, <a class=\"id\" href=\"#calltime\">calltime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"call %s+ returned %d after %Ld usecs\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>, (unsigned long long)<a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#delta\">delta</a>) >> 10);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dpm_wait - Wait for a PM operation to complete.</span>", 
"<span class=\"comment\"> * @dev: Device to wait for.</span>", 
"<span class=\"comment\"> * @async: If unset, wait only if the device's power.async_suspend flag is set.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#dpm_wait\">dpm_wait</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#async\">async</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#async\">async</a> || (<a class=\"id\" href=\"#pm_async_enabled\">pm_async_enabled</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#async_suspend\">async_suspend</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dpm_wait_fn\">dpm_wait_fn</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#async_ptr\">async_ptr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dpm_wait\">dpm_wait</a>(<a class=\"id\" href=\"#dev\">dev</a>, *((<a class=\"id\" href=\"#bool\">bool</a> *)<a class=\"id\" href=\"#async_ptr\">async_ptr</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dpm_wait_for_children\">dpm_wait_for_children</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#async\">async</a>)", 
"{", 
"       <a class=\"id\" href=\"#device_for_each_child\">device_for_each_child</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#async\">async</a>, <a class=\"id\" href=\"#dpm_wait_fn\">dpm_wait_fn</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pm_op - Execute the PM operation appropriate for given PM event.</span>", 
"<span class=\"comment\"> * @dev: Device to handle.</span>", 
"<span class=\"comment\"> * @ops: PM operations to choose from.</span>", 
"<span class=\"comment\"> * @state: PM transition of the system being carried out.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pm_op\">pm_op</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#calltime\">calltime</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#calltime\">calltime</a> = <a class=\"id\" href=\"#initcall_debug_start\">initcall_debug_start</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#event\">event</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SUSPEND\">CONFIG_SUSPEND</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PM_EVENT_SUSPEND\">PM_EVENT_SUSPEND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#suspend\">suspend</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#suspend\">suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#suspend\">suspend</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PM_EVENT_RESUME\">PM_EVENT_RESUME</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#resume\">resume</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#resume\">resume</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#resume\">resume</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SUSPEND */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIBERNATION\">CONFIG_HIBERNATION</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PM_EVENT_FREEZE\">PM_EVENT_FREEZE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PM_EVENT_QUIESCE\">PM_EVENT_QUIESCE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#freeze\">freeze</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#freeze\">freeze</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#freeze\">freeze</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PM_EVENT_HIBERNATE\">PM_EVENT_HIBERNATE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poweroff\">poweroff</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poweroff\">poweroff</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poweroff\">poweroff</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PM_EVENT_THAW\">PM_EVENT_THAW</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PM_EVENT_RECOVER\">PM_EVENT_RECOVER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#thaw\">thaw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#thaw\">thaw</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#thaw\">thaw</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PM_EVENT_RESTORE\">PM_EVENT_RESTORE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#restore\">restore</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#restore\">restore</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#restore\">restore</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HIBERNATION */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initcall_debug_report\">initcall_debug_report</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#calltime\">calltime</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"", 
];
xr_frag_insert('l/aa/d8a499cec9e7b13892313afca95b42bc513bb8.xr', __xr_tmp);
