var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: tbutils   - table utilities</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"actables.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_TABLES\">ACPI_TABLES</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"tbutils\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static void <a class=\"id\" href=\"#acpi_tb_fix_string\">acpi_tb_fix_string</a>(char *<a class=\"id\" href=\"#string\">string</a>, <a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#length\">length</a>);", 
"", 
"static void", 
"<a class=\"id\" href=\"#acpi_tb_cleanup_table_header\">acpi_tb_cleanup_table_header</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#out_header\">out_header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"static <a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a>", 
"<a class=\"id\" href=\"#acpi_tb_get_root_table_entry\">acpi_tb_get_root_table_entry</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#table_entry\">table_entry</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_entry_size\">table_entry_size</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_check_xsdt</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  address                    - Pointer to the XSDT</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      status</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>AE_OK - XSDT is okay</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>AE_NO_MEMORY - can't map XSDT</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>AE_INVALID_TABLE_LENGTH - invalid table length</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>AE_NULL_ENTRY - XSDT has NULL entry</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: validate XSDT</span>", 
"<span class=\"comment\">******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_tb_check_xsdt\">acpi_tb_check_xsdt</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#xsdt_entry_address\">xsdt_entry_address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#table_entry\">table_entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_count\">table_count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>(<a class=\"id\" href=\"#address\">address</a>, sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(<a class=\"id\" href=\"#table\">table</a>, sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_INVALID_TABLE_LENGTH\">AE_INVALID_TABLE_LENGTH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate the number of tables described in XSDT */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_count\">table_count</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#u32\">u32</a>) ((<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#length\">length</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>)) / sizeof(<a class=\"id\" href=\"#u64\">u64</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_entry\">table_entry</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#table\">table</a>) + sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#table_count\">table_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MOVE_64_TO_64\">ACPI_MOVE_64_TO_64</a>(&amp;<a class=\"id\" href=\"#xsdt_entry_address\">xsdt_entry_address</a>, <a class=\"id\" href=\"#table_entry\">table_entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#xsdt_entry_address\">xsdt_entry_address</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XSDT has NULL entry */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_entry\">table_entry</a> += sizeof(<a class=\"id\" href=\"#u64\">u64</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#table_count\">table_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_NULL_ENTRY\">AE_NULL_ENTRY</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_initialize_facs</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create a permanent mapping for the FADT and save it in a global</span>", 
"<span class=\"comment\"> *              for accessing the Global Lock and Firmware Waking Vector</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_tb_initialize_facs\">acpi_tb_initialize_facs</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_table_by_index\">acpi_get_table_by_index</a>(<a class=\"id\" href=\"#ACPI_TABLE_INDEX_FACS\">ACPI_TABLE_INDEX_FACS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_CAST_INDIRECT_PTR\">ACPI_CAST_INDIRECT_PTR</a>(struct", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#acpi_gbl_FACS\">acpi_gbl_FACS</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_tables_loaded</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      TRUE if required ACPI tables are loaded</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Determine if the minimum required ACPI tables are present</span>", 
"<span class=\"comment\"> *              (FADT, FACS, DSDT)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_tb_tables_loaded\">acpi_tb_tables_loaded</a>(void)", 
"{", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a> >= 3) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#TRUE\">TRUE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#FALSE\">FALSE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_fix_string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  String              - String to be repaired</span>", 
"<span class=\"comment\"> *              Length              - Maximum length</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Replace every non-printable or non-ascii byte in the string</span>", 
"<span class=\"comment\"> *              with a question mark '?'.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static void <a class=\"id\" href=\"#acpi_tb_fix_string\">acpi_tb_fix_string</a>(char *<a class=\"id\" href=\"#string\">string</a>, <a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#length\">length</a>)", 
"{", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#length\">length</a> && *<a class=\"id\" href=\"#string\">string</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ACPI_IS_PRINT\">ACPI_IS_PRINT</a>(*<a class=\"id\" href=\"#string\">string</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#string\">string</a> = '?';", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#string\">string</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a>--;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_cleanup_table_header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  out_header          - Where the cleaned header is returned</span>", 
"<span class=\"comment\"> *              Header              - Input ACPI table header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Returns the cleaned header in out_header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Copy the table header and ensure that all \"string\" fields in</span>", 
"<span class=\"comment\"> *              the header consist of printable characters.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static void", 
"<a class=\"id\" href=\"#acpi_tb_cleanup_table_header\">acpi_tb_cleanup_table_header</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#out_header\">out_header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#header\">header</a>)", 
"{", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#out_header\">out_header</a>, <a class=\"id\" href=\"#header\">header</a>, sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_fix_string\">acpi_tb_fix_string</a>(<a class=\"id\" href=\"#out_header\">out_header</a>-><a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#ACPI_NAME_SIZE\">ACPI_NAME_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_fix_string\">acpi_tb_fix_string</a>(<a class=\"id\" href=\"#out_header\">out_header</a>-><a class=\"id\" href=\"#oem_id\">oem_id</a>, <a class=\"id\" href=\"#ACPI_OEM_ID_SIZE\">ACPI_OEM_ID_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_fix_string\">acpi_tb_fix_string</a>(<a class=\"id\" href=\"#out_header\">out_header</a>-><a class=\"id\" href=\"#oem_table_id\">oem_table_id</a>, <a class=\"id\" href=\"#ACPI_OEM_TABLE_ID_SIZE\">ACPI_OEM_TABLE_ID_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_fix_string\">acpi_tb_fix_string</a>(<a class=\"id\" href=\"#out_header\">out_header</a>-><a class=\"id\" href=\"#asl_compiler_id\">asl_compiler_id</a>, <a class=\"id\" href=\"#ACPI_NAME_SIZE\">ACPI_NAME_SIZE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_print_table_header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Address             - Table physical address</span>", 
"<span class=\"comment\"> *              Header              - Table header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Print an ACPI table header. Special cases for FACS and RSDP.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void", 
"<a class=\"id\" href=\"#acpi_tb_print_table_header\">acpi_tb_print_table_header</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#header\">header</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> <a class=\"id\" href=\"#local_header\">local_header</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The reason that the Address is cast to a void pointer is so that we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can use %p which will work properly on both 32-bit and 64-bit hosts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>(<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#ACPI_SIG_FACS\">ACPI_SIG_FACS</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FACS only has signature and length fields */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_INFO\">ACPI_INFO</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"%4.4s %p %05X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void, <a class=\"id\" href=\"#address\">address</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#length\">length</a>));", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>(<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#ACPI_SIG_RSDP\">ACPI_SIG_RSDP</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RSDP has no common fields */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#oem_id\">oem_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(struct <a class=\"id\" href=\"#acpi_table_rsdp\">acpi_table_rsdp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#header\">header</a>)-><a class=\"id\" href=\"#oem_id\">oem_id</a>, <a class=\"id\" href=\"#ACPI_OEM_ID_SIZE\">ACPI_OEM_ID_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_fix_string\">acpi_tb_fix_string</a>(<a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#oem_id\">oem_id</a>, <a class=\"id\" href=\"#ACPI_OEM_ID_SIZE\">ACPI_OEM_ID_SIZE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_INFO\">ACPI_INFO</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"RSDP %p %05X (v%.2d %6.6s)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a> (void, <a class=\"id\" href=\"#address\">address</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(struct <a class=\"id\" href=\"#acpi_table_rsdp\">acpi_table_rsdp</a>, <a class=\"id\" href=\"#header\">header</a>)->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#revision\">revision</a> &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    0) ? <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(struct <a class=\"id\" href=\"#acpi_table_rsdp\">acpi_table_rsdp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#header\">header</a>)-><a class=\"id\" href=\"#length\">length</a> : 20,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(struct <a class=\"id\" href=\"#acpi_table_rsdp\">acpi_table_rsdp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#header\">header</a>)-><a class=\"id\" href=\"#revision\">revision</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#oem_id\">oem_id</a>));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Standard ACPI table with full common header */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_cleanup_table_header\">acpi_tb_cleanup_table_header</a>(&amp;<a class=\"id\" href=\"#local_header\">local_header</a>, <a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_INFO\">ACPI_INFO</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%4.4s %p %05X (v%.2d %6.6s %8.8s %08X %4.4s %08X)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void, <a class=\"id\" href=\"#address\">address</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#revision\">revision</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#oem_id\">oem_id</a>, <a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#oem_table_id\">oem_table_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#oem_revision\">oem_revision</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#asl_compiler_id\">asl_compiler_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#local_header\">local_header</a>.<a class=\"id\" href=\"#asl_compiler_revision\">asl_compiler_revision</a>));", 
"", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_validate_checksum</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Table               - ACPI table to verify</span>", 
"<span class=\"comment\"> *              Length              - Length of entire table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Verifies that the table checksums to zero. Optionally returns</span>", 
"<span class=\"comment\"> *              exception on bad checksum.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_tb_verify_checksum\">acpi_tb_verify_checksum</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#checksum\">checksum</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Compute the checksum on the table */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#checksum\">checksum</a> = <a class=\"id\" href=\"#acpi_tb_checksum\">acpi_tb_checksum</a>(<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#table\">table</a>), <a class=\"id\" href=\"#length\">length</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Checksum ok? (should be zero) */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#checksum\">checksum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARNING\">ACPI_WARNING</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Incorrect checksum in table [%4.4s] - 0x%2.2X, should be 0x%2.2X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#checksum\">checksum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#u8\">u8</a>) (<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#checksum\">checksum</a> - <a class=\"id\" href=\"#checksum\">checksum</a>)));", 
"", 
"#if (<a class=\"id\" href=\"#ACPI_CHECKSUM_ABORT\">ACPI_CHECKSUM_ABORT</a>)", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_BAD_CHECKSUM\">AE_BAD_CHECKSUM</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_checksum</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Buffer          - Pointer to memory region to be checked</span>", 
"<span class=\"comment\"> *              Length          - Length of this memory region</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Checksum (u8)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Calculates circular checksum of memory region.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_tb_checksum\">acpi_tb_checksum</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#sum\">sum</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#buffer\">buffer</a> &lt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> = (<a class=\"id\" href=\"#u8\">u8</a>) (<a class=\"id\" href=\"#sum\">sum</a> + *(<a class=\"id\" href=\"#buffer\">buffer</a>++));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sum\">sum</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_check_dsdt_header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Quick compare to check validity of the DSDT. This will detect</span>", 
"<span class=\"comment\"> *              if the DSDT has been replaced from outside the OS and/or if</span>", 
"<span class=\"comment\"> *              the DSDT header has been corrupted.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void <a class=\"id\" href=\"#acpi_tb_check_dsdt_header\">acpi_tb_check_dsdt_header</a>(void)", 
"{", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Compare original length and checksum to current values */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_original_dsdt_header\">acpi_gbl_original_dsdt_header</a>.<a class=\"id\" href=\"#length\">length</a> != <a class=\"id\" href=\"#acpi_gbl_DSDT\">acpi_gbl_DSDT</a>-><a class=\"id\" href=\"#length\">length</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_original_dsdt_header\">acpi_gbl_original_dsdt_header</a>.<a class=\"id\" href=\"#checksum\">checksum</a> != <a class=\"id\" href=\"#acpi_gbl_DSDT\">acpi_gbl_DSDT</a>-><a class=\"id\" href=\"#checksum\">checksum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"The DSDT has been corrupted or replaced - old, new headers below\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_print_table_header\">acpi_tb_print_table_header</a>(0, &amp;<a class=\"id\" href=\"#acpi_gbl_original_dsdt_header\">acpi_gbl_original_dsdt_header</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_print_table_header\">acpi_tb_print_table_header</a>(0, <a class=\"id\" href=\"#acpi_gbl_DSDT\">acpi_gbl_DSDT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Please send DMI info to linux-acpi@vger.kernel.org\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"If system does not work as expected, please boot with acpi=copy_dsdt\"));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Disable further error messages */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_original_dsdt_header\">acpi_gbl_original_dsdt_header</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#acpi_gbl_DSDT\">acpi_gbl_DSDT</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_original_dsdt_header\">acpi_gbl_original_dsdt_header</a>.<a class=\"id\" href=\"#checksum\">checksum</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_DSDT\">acpi_gbl_DSDT</a>-><a class=\"id\" href=\"#checksum\">checksum</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_copy_dsdt</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_desc          - Installed table to copy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Implements a subsystem option to copy the DSDT to local memory.</span>", 
"<span class=\"comment\"> *              Some very bad BIOSs are known to either corrupt the DSDT or</span>", 
"<span class=\"comment\"> *              install a new, bad DSDT. This copy works around the problem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#acpi_tb_copy_dsdt\">acpi_tb_copy_dsdt</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#new_table\">new_table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a> *<a class=\"id\" href=\"#table_desc\">table_desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a> = &amp;<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_table\">new_table</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE\">ACPI_ALLOCATE</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_table\">new_table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Could not copy DSDT of length 0x%X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#length\">length</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#new_table\">new_table</a>, <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_delete_table\">acpi_tb_delete_table</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#new_table\">new_table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_ALLOCATED\">ACPI_TABLE_ORIGIN_ALLOCATED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_INFO\">ACPI_INFO</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Forced DSDT copy: length 0x%05X copied locally, original unmapped\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#new_table\">new_table</a>-><a class=\"id\" href=\"#length\">length</a>));", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#new_table\">new_table</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_install_table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Address                 - Physical address of DSDT or FACS</span>", 
"<span class=\"comment\"> *              Signature               - Table signature, NULL if no need to</span>", 
"<span class=\"comment\"> *                                        match</span>", 
"<span class=\"comment\"> *              table_index             - Index into root table array</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Install an ACPI table into the global data structure. The</span>", 
"<span class=\"comment\"> *              table override mechanism is implemented here to allow the host</span>", 
"<span class=\"comment\"> *              OS to replace any table before it is installed in the root</span>", 
"<span class=\"comment\"> *              table array.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void", 
"<a class=\"id\" href=\"#acpi_tb_install_table\">acpi_tb_install_table</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      char *<a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table_to_install\">table_to_install</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#mapped_table\">mapped_table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#override_table\">override_table</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#address\">address</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Null physical address for ACPI table [%s]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#signature\">signature</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Map just the table header */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapped_table\">mapped_table</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>(<a class=\"id\" href=\"#address\">address</a>, sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mapped_table\">mapped_table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If a particular signature is expected (DSDT/FACS), it must match */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#signature\">signature</a> && !<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>(<a class=\"id\" href=\"#mapped_table\">mapped_table</a>-><a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#signature\">signature</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Invalid signature 0x%X for ACPI table, expected [%s]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    *<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#mapped_table\">mapped_table</a>-><a class=\"id\" href=\"#signature\">signature</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#signature\">signature</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unmap_and_exit\">unmap_and_exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ACPI Table Override:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Before we install the table, let the host OS override it with a new</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one if desired. Any table within the RSDT/XSDT can be replaced,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * including the DSDT which is pointed to by the FADT.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_os_table_override\">acpi_os_table_override</a>(<a class=\"id\" href=\"#mapped_table\">mapped_table</a>, &amp;<a class=\"id\" href=\"#override_table\">override_table</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>) && <a class=\"id\" href=\"#override_table\">override_table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_INFO\">ACPI_INFO</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%4.4s @ 0x%p Table override, replaced with:\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mapped_table\">mapped_table</a>-><a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#address\">address</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#pointer\">pointer</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#override_table\">override_table</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#ACPI_PTR_TO_PHYSADDR\">ACPI_PTR_TO_PHYSADDR</a>(<a class=\"id\" href=\"#override_table\">override_table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_to_install\">table_to_install</a> = <a class=\"id\" href=\"#override_table\">override_table</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_OVERRIDE\">ACPI_TABLE_ORIGIN_OVERRIDE</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_to_install\">table_to_install</a> = <a class=\"id\" href=\"#mapped_table\">mapped_table</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_MAPPED\">ACPI_TABLE_ORIGIN_MAPPED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize the table entry */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#length\">length</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#table_to_install\">table_to_install</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MOVE_32_TO_32\">ACPI_MOVE_32_TO_32</a>(&amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#signature\">signature</a>), <a class=\"id\" href=\"#table_to_install\">table_to_install</a>-><a class=\"id\" href=\"#signature\">signature</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_print_table_header\">acpi_tb_print_table_header</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#table_to_install\">table_to_install</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_index\">table_index</a> == <a class=\"id\" href=\"#ACPI_TABLE_INDEX_DSDT\">ACPI_TABLE_INDEX_DSDT</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Global integer width is based upon revision of the DSDT */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_set_integer_width\">acpi_ut_set_integer_width</a>(<a class=\"id\" href=\"#table_to_install\">table_to_install</a>-><a class=\"id\" href=\"#revision\">revision</a>);", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#unmap_and_exit\">unmap_and_exit</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(<a class=\"id\" href=\"#mapped_table\">mapped_table</a>, sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_get_root_table_entry</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_entry         - Pointer to the RSDT/XSDT table entry</span>", 
"<span class=\"comment\"> *              table_entry_size    - sizeof 32 or 64 (RSDT or XSDT)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Physical address extracted from the root table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Get one root table entry. Handles 32-bit and 64-bit cases on</span>", 
"<span class=\"comment\"> *              both 32-bit and 64-bit platforms</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE:        acpi_physical_address is 32-bit on 32-bit platforms, 64-bit on</span>", 
"<span class=\"comment\"> *              64-bit platforms.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a>", 
"<a class=\"id\" href=\"#acpi_tb_get_root_table_entry\">acpi_tb_get_root_table_entry</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#table_entry\">table_entry</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_entry_size\">table_entry_size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#address64\">address64</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get the table physical address (32-bit for RSDT, 64-bit for XSDT):</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: Addresses are 32-bit aligned (not 64) in both RSDT and XSDT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_entry_size\">table_entry_size</a> == sizeof(<a class=\"id\" href=\"#u32\">u32</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 32-bit platform, RSDT: Return 32-bit table entry</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 64-bit platform, RSDT: Expand 32-bit to 64-bit and return</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return ((<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#table_entry\">table_entry</a>)));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 32-bit platform, XSDT: Truncate 64-bit to 32-bit and return</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 64-bit platform, XSDT: Move (unaligned) 64-bit to local,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  return 64-bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MOVE_64_TO_64\">ACPI_MOVE_64_TO_64</a>(&amp;<a class=\"id\" href=\"#address64\">address64</a>, <a class=\"id\" href=\"#table_entry\">table_entry</a>);", 
"", 
"#if <a class=\"id\" href=\"#ACPI_MACHINE_WIDTH\">ACPI_MACHINE_WIDTH</a> == 32", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#address64\">address64</a> &gt; <a class=\"id\" href=\"#ACPI_UINT32_MAX\">ACPI_UINT32_MAX</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Will truncate 64-bit address to 32 bits, issue warning */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARNING\">ACPI_WARNING</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"64-bit Physical Address in XSDT is too large (0x%8.8X%8.8X),\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \" truncating\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ACPI_FORMAT_UINT64\">ACPI_FORMAT_UINT64</a>(<a class=\"id\" href=\"#address64\">address64</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>return ((<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a>) (<a class=\"id\" href=\"#address64\">address64</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_parse_root_table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Rsdp                    - Pointer to the RSDP</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: This function is called to parse the Root System Description</span>", 
"<span class=\"comment\"> *              Table (RSDT or XSDT)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE:        Tables are mapped (not copied) for efficiency. The FACS must</span>", 
"<span class=\"comment\"> *              be mapped and cannot be copied because it contains the actual</span>", 
"<span class=\"comment\"> *              memory location of the ACPI Global Lock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_tb_parse_root_table\">acpi_tb_parse_root_table</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#rsdp_address\">rsdp_address</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_rsdp\">acpi_table_rsdp</a> *<a class=\"id\" href=\"#rsdp\">rsdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_entry_size\">table_entry_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_count\">table_count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#uninitialized_var\">uninitialized_var</a>(<a class=\"id\" href=\"#rsdt_address\">rsdt_address</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#table_entry\">table_entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#tb_parse_root_table\">tb_parse_root_table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Map the entire RSDP and extract the address of the RSDT or XSDT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rsdp\">rsdp</a> = <a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>(<a class=\"id\" href=\"#rsdp_address\">rsdp_address</a>, sizeof(struct <a class=\"id\" href=\"#acpi_table_rsdp\">acpi_table_rsdp</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rsdp\">rsdp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_print_table_header\">acpi_tb_print_table_header</a>(<a class=\"id\" href=\"#rsdp_address\">rsdp_address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#rsdp\">rsdp</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Differentiate between RSDT and XSDT root tables */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rsdp\">rsdp</a>-><a class=\"id\" href=\"#revision\">revision</a> &gt; 1 && <a class=\"id\" href=\"#rsdp\">rsdp</a>-><a class=\"id\" href=\"#xsdt_physical_address\">xsdt_physical_address</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&& !<a class=\"id\" href=\"#acpi_rsdt_forced\">acpi_rsdt_forced</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Root table is an XSDT (64-bit physical addresses). We must use the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * XSDT if the revision is &gt; 1 and the XSDT pointer is present, as per</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the ACPI specification.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = (<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a>) <a class=\"id\" href=\"#rsdp\">rsdp</a>-><a class=\"id\" href=\"#xsdt_physical_address\">xsdt_physical_address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_entry_size\">table_entry_size</a> = sizeof(<a class=\"id\" href=\"#u64\">u64</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsdt_address\">rsdt_address</a> = (<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsdp\">rsdp</a>-><a class=\"id\" href=\"#rsdt_physical_address\">rsdt_physical_address</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Root table is an RSDT (32-bit physical addresses) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = (<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a>) <a class=\"id\" href=\"#rsdp\">rsdp</a>-><a class=\"id\" href=\"#rsdt_physical_address\">rsdt_physical_address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_entry_size\">table_entry_size</a> = sizeof(<a class=\"id\" href=\"#u32\">u32</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It is not possible to map more than one entry in some environments,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so unmap the RSDP here before mapping other tables</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(<a class=\"id\" href=\"#rsdp\">rsdp</a>, sizeof(struct <a class=\"id\" href=\"#acpi_table_rsdp\">acpi_table_rsdp</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_entry_size\">table_entry_size</a> == sizeof(<a class=\"id\" href=\"#u64\">u64</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_tb_check_xsdt\">acpi_tb_check_xsdt</a>(<a class=\"id\" href=\"#address\">address</a>) == <a class=\"id\" href=\"#AE_NULL_ENTRY\">AE_NULL_ENTRY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XSDT has NULL entry, RSDT is used */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#rsdt_address\">rsdt_address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_entry_size\">table_entry_size</a> = sizeof(<a class=\"id\" href=\"#u32\">u32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARNING\">ACPI_WARNING</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"BIOS XSDT has NULL entry, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"using RSDT\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Map the RSDT/XSDT table header to get the full table length */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>(<a class=\"id\" href=\"#address\">address</a>, sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_print_table_header\">acpi_tb_print_table_header</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#table\">table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the length of the full table, verify length and map entire table */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(<a class=\"id\" href=\"#table\">table</a>, sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Invalid length 0x%X in RSDT/XSDT\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#length\">length</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_INVALID_TABLE_LENGTH\">AE_INVALID_TABLE_LENGTH</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Validate the root table checksum */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_verify_checksum\">acpi_tb_verify_checksum</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate the number of tables described in the root table */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_count\">table_count</a> = (<a class=\"id\" href=\"#u32\">u32</a>)((<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#length\">length</a> - sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>)) /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#table_entry_size\">table_entry_size</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First two entries in the table array are reserved for the DSDT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and FACS, which are not actually present in the RSDT/XSDT - they</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * come from the FADT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_entry\">table_entry</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#table\">table</a>) + sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a> = 2;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Initialize the root table array from the RSDT/XSDT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#table_count\">table_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a> >=", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#max_table_count\">max_table_count</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* There is no more room in the root table array, attempt resize */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_resize_root_table_list\">acpi_tb_resize_root_table_list</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARNING\">ACPI_WARNING</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Truncating %u table entries!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (unsigned) (<a class=\"id\" href=\"#table_count\">table_count</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#current_table_count\">current_table_count</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  2))));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the table physical address (32-bit for RSDT, 64-bit for XSDT) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_table_count\">current_table_count</a>].<a class=\"id\" href=\"#address\">address</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_tb_get_root_table_entry\">acpi_tb_get_root_table_entry</a>(<a class=\"id\" href=\"#table_entry\">table_entry</a>, <a class=\"id\" href=\"#table_entry_size\">table_entry_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_entry\">table_entry</a> += <a class=\"id\" href=\"#table_entry_size\">table_entry_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It is not possible to map more than one entry in some environments,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so unmap the root table here before mapping other tables</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Complete the initialization of the root table array by examining</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the header of each table</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 2; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_install_table\">acpi_tb_install_table</a>(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Special case for FADT - get the DSDT and FACS */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (&amp;<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#signature\">signature</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ACPI_SIG_FADT\">ACPI_SIG_FADT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_parse_fadt\">acpi_tb_parse_fadt</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
];
xr_frag_insert('l/aa/e897718e9dcd37400e58677a8d305cb182f9d5.xr', __xr_tmp);
