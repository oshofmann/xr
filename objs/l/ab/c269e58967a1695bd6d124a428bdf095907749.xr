var __xr_tmp = [
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#udpv6_setsockopt\">udpv6_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_UDP\">SOL_UDP</a>  ||  <a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_UDPLITE\">SOL_UDPLITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#udp_lib_setsockopt\">udp_lib_setsockopt</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#udp_v6_push_pending_frames\">udp_v6_push_pending_frames</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ipv6_setsockopt\">ipv6_setsockopt</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"int <a class=\"id\" href=\"#compat_udpv6_setsockopt\">compat_udpv6_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_UDP\">SOL_UDP</a>  ||  <a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_UDPLITE\">SOL_UDPLITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#udp_lib_setsockopt\">udp_lib_setsockopt</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#udp_v6_push_pending_frames\">udp_v6_push_pending_frames</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#compat_ipv6_setsockopt\">compat_ipv6_setsockopt</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#udpv6_getsockopt\">udpv6_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_UDP\">SOL_UDP</a>  ||  <a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_UDPLITE\">SOL_UDPLITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#udp_lib_getsockopt\">udp_lib_getsockopt</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ipv6_getsockopt\">ipv6_getsockopt</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"int <a class=\"id\" href=\"#compat_udpv6_getsockopt\">compat_udpv6_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_UDP\">SOL_UDP</a>  ||  <a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_UDPLITE\">SOL_UDPLITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#udp_lib_getsockopt\">udp_lib_getsockopt</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#compat_ipv6_getsockopt\">compat_ipv6_getsockopt</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#udp6_ufo_send_check\">udp6_ufo_send_check</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#ipv6h\">ipv6h</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#udphdr\">udphdr</a> *<a class=\"id\" href=\"#uh\">uh</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#uh\">uh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6h\">ipv6h</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uh\">uh</a> = <a class=\"id\" href=\"#udp_hdr\">udp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#check\">check</a> = ~<a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(&amp;<a class=\"id\" href=\"#ipv6h\">ipv6h</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#ipv6h\">ipv6h</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_start\">csum_start</a> = <a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_offset\">csum_offset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#udphdr\">udphdr</a>, <a class=\"id\" href=\"#check\">check</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#udp6_ufo_fragment\">udp6_ufo_fragment</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#features\">features</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mss\">mss</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#unfrag_ip6hlen\">unfrag_ip6hlen</a>, <a class=\"id\" href=\"#unfrag_len\">unfrag_len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a> *<a class=\"id\" href=\"#fptr\">fptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#mac_start\">mac_start</a>, *<a class=\"id\" href=\"#prevhdr\">prevhdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#frag_hdr_sz\">frag_hdr_sz</a> = sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#csum\">csum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#mss\">mss</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_gso_ok\">skb_gso_ok</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#features\">features</a> | <a class=\"id\" href=\"#NETIF_F_GSO_ROBUST\">NETIF_F_GSO_ROBUST</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Packet is from an untrusted source, reset gso_segs. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#type\">type</a> &amp; ~(<a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a> | <a class=\"id\" href=\"#SKB_GSO_DODGY\">SKB_GSO_DODGY</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     !(<a class=\"id\" href=\"#type\">type</a> &amp; (<a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_segs\">gso_segs</a> = <a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#mss\">mss</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do software UFO. Complete and fill in the UDP checksum as HW cannot</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * do checksum of UDP packets sent as multiple IP fragments.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_start\">csum_start</a> - <a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#skb_checksum\">skb_checksum</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>- <a class=\"id\" href=\"#offset\">offset</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_offset\">csum_offset</a>;", 
"<span class=\"ts\"/>*(<a class=\"id\" href=\"#__sum16\">__sum16</a> *)(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#offset\">offset</a>) = <a class=\"id\" href=\"#csum_fold\">csum_fold</a>(<a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if there is enough headroom to insert fragment header. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>) &lt; <a class=\"id\" href=\"#frag_hdr_sz\">frag_hdr_sz</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pskb_expand_head\">pskb_expand_head</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#frag_hdr_sz\">frag_hdr_sz</a>, 0, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find the unfragmentable header and shift it left by frag_hdr_sz</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * bytes to insert fragment header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unfrag_ip6hlen\">unfrag_ip6hlen</a> = <a class=\"id\" href=\"#ip6_find_1stfragopt\">ip6_find_1stfragopt</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#prevhdr\">prevhdr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = *<a class=\"id\" href=\"#prevhdr\">prevhdr</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#prevhdr\">prevhdr</a> = <a class=\"id\" href=\"#NEXTHDR_FRAGMENT\">NEXTHDR_FRAGMENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unfrag_len\">unfrag_len</a> = <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) - <a class=\"id\" href=\"#skb_mac_header\">skb_mac_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#unfrag_ip6hlen\">unfrag_ip6hlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mac_start\">mac_start</a> = <a class=\"id\" href=\"#skb_mac_header\">skb_mac_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#mac_start\">mac_start</a>-<a class=\"id\" href=\"#frag_hdr_sz\">frag_hdr_sz</a>, <a class=\"id\" href=\"#mac_start\">mac_start</a>, <a class=\"id\" href=\"#unfrag_len\">unfrag_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mac_header\">mac_header</a> -= <a class=\"id\" href=\"#frag_hdr_sz\">frag_hdr_sz</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> -= <a class=\"id\" href=\"#frag_hdr_sz\">frag_hdr_sz</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fptr\">fptr</a> = (struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a> *)(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + <a class=\"id\" href=\"#unfrag_ip6hlen\">unfrag_ip6hlen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fptr\">fptr</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fptr\">fptr</a>-><a class=\"id\" href=\"#reserved\">reserved</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_select_ident\">ipv6_select_ident</a>(<a class=\"id\" href=\"#fptr\">fptr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fragment the skb. ipv6 header and the remaining fields of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fragment header are updated in ipv6_gso_segment()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#skb_segment\">skb_segment</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#features\">features</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#segs\">segs</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> <a class=\"id\" href=\"#udpv6_protocol\">udpv6_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#udpv6_rcv\">udpv6_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#err_handler\">err_handler</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#udpv6_err\">udpv6_err</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_send_check\">gso_send_check</a> =<span class=\"ts\"/><a class=\"id\" href=\"#udp6_ufo_send_check\">udp6_ufo_send_check</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_segment\">gso_segment</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#udp6_ufo_fragment\">udp6_ufo_fragment</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#INET6_PROTO_NOPOLICY\">INET6_PROTO_NOPOLICY</a>|<a class=\"id\" href=\"#INET6_PROTO_FINAL\">INET6_PROTO_FINAL</a>,", 
"};", 
"", 
"<span class=\"comment\">/* ------------------------------------------------------------------------ */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"", 
"static void <a class=\"id\" href=\"#udp6_sock_seq_show\">udp6_sock_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sp\">sp</a>, int <a class=\"id\" href=\"#bucket\">bucket</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sp\">sp</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sp\">sp</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#dest\">dest</a>, *<a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#destp\">destp</a>, <a class=\"id\" href=\"#srcp\">srcp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a>  = &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a>   = &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destp\">destp</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srcp\">srcp</a>  = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"%5d: %08X%08X%08X%08X:%04X %08X%08X%08X%08X:%04X \"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"%02X %08X:%08X %02X:%08lX %08X %5d %8d %lu %d %p %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#bucket\">bucket</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0], <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1],", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2], <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3], <a class=\"id\" href=\"#srcp\">srcp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dest\">dest</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0], <a class=\"id\" href=\"#dest\">dest</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1],", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dest\">dest</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2], <a class=\"id\" href=\"#dest\">dest</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3], <a class=\"id\" href=\"#destp\">destp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sk_wmem_alloc_get\">sk_wmem_alloc_get</a>(<a class=\"id\" href=\"#sp\">sp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sk_rmem_alloc_get\">sk_rmem_alloc_get</a>(<a class=\"id\" href=\"#sp\">sp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   0, 0L, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sock_i_uid\">sock_i_uid</a>(<a class=\"id\" href=\"#sp\">sp</a>), 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sock_i_ino\">sock_i_ino</a>(<a class=\"id\" href=\"#sp\">sp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>), <a class=\"id\" href=\"#sp\">sp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>));", 
"}", 
"", 
"int <a class=\"id\" href=\"#udp6_seq_show\">udp6_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"  sl  \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"local_address                         \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"remote_address                        \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"st tx_queue rx_queue tr tm->when retrnsmt\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"   uid  timeout inode ref pointer drops\\n\");", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udp6_sock_seq_show\">udp6_sock_seq_show</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#v\">v</a>, ((struct <a class=\"id\" href=\"#udp_iter_state\">udp_iter_state</a> *)<a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>)-><a class=\"id\" href=\"#bucket\">bucket</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#udp_seq_afinfo\">udp_seq_afinfo</a> <a class=\"id\" href=\"#udp6_seq_afinfo\">udp6_seq_afinfo</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"udp6\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#udp_table\">udp_table</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#udp_table\">udp_table</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#seq_fops\">seq_fops</a><span class=\"ts\"/>= {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#seq_ops\">seq_ops</a><span class=\"ts\"/>= {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#udp6_seq_show\">udp6_seq_show</a>,", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#udp6_proc_init\">udp6_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#udp_proc_register\">udp_proc_register</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#udp6_seq_afinfo\">udp6_seq_afinfo</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#udp6_proc_exit\">udp6_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>) {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udp_proc_unregister\">udp_proc_unregister</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#udp6_seq_afinfo\">udp6_seq_afinfo</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
"", 
"<span class=\"comment\">/* ------------------------------------------------------------------------ */</span>", 
"", 
"struct <a class=\"id\" href=\"#proto\">proto</a> <a class=\"id\" href=\"#udpv6_prot\">udpv6_prot</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>   = \"UDPv6\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#close\">close</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#udp_lib_close\">udp_lib_close</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#ip6_datagram_connect\">ip6_datagram_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#disconnect\">disconnect</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#udp_disconnect\">udp_disconnect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#udp_ioctl\">udp_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy\">destroy</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#udpv6_destroy_sock\">udpv6_destroy_sock</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#udpv6_setsockopt\">udpv6_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#udpv6_getsockopt\">udpv6_getsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#udpv6_sendmsg\">udpv6_sendmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#udpv6_recvmsg\">udpv6_recvmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#backlog_rcv\">backlog_rcv</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#udpv6_queue_rcv_skb\">udpv6_queue_rcv_skb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hash\">hash</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#udp_lib_hash\">udp_lib_hash</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unhash\">unhash</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#udp_lib_unhash\">udp_lib_unhash</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rehash\">rehash</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#udp_v6_rehash\">udp_v6_rehash</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_port\">get_port</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#udp_v6_get_port\">udp_v6_get_port</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#memory_allocated\">memory_allocated</a>  = &amp;<a class=\"id\" href=\"#udp_memory_allocated\">udp_memory_allocated</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysctl_mem\">sysctl_mem</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sysctl_udp_mem\">sysctl_udp_mem</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysctl_wmem\">sysctl_wmem</a><span class=\"ts\"/>   = &amp;<a class=\"id\" href=\"#sysctl_udp_wmem_min\">sysctl_udp_wmem_min</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysctl_rmem\">sysctl_rmem</a><span class=\"ts\"/>   = &amp;<a class=\"id\" href=\"#sysctl_udp_rmem_min\">sysctl_udp_rmem_min</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#obj_size\">obj_size</a><span class=\"ts\"/>   = sizeof(struct <a class=\"id\" href=\"#udp6_sock\">udp6_sock</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#slab_flags\">slab_flags</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#SLAB_DESTROY_BY_RCU\">SLAB_DESTROY_BY_RCU</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#udp_table\">udp_table</a><span class=\"ts\"/>   = &amp;<a class=\"id\" href=\"#udp_table\">udp_table</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_setsockopt\">compat_setsockopt</a> = <a class=\"id\" href=\"#compat_udpv6_setsockopt\">compat_udpv6_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_getsockopt\">compat_getsockopt</a> = <a class=\"id\" href=\"#compat_udpv6_getsockopt\">compat_udpv6_getsockopt</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> <a class=\"id\" href=\"#udpv6_protosw\">udpv6_protosw</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a> =      <a class=\"id\" href=\"#SOCK_DGRAM\">SOCK_DGRAM</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#protocol\">protocol</a> =  <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#prot\">prot</a> =      &amp;<a class=\"id\" href=\"#udpv6_prot\">udpv6_prot</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ops\">ops</a> =       &amp;<a class=\"id\" href=\"#inet6_dgram_ops\">inet6_dgram_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#no_check\">no_check</a> =  <a class=\"id\" href=\"#UDP_CSUM_DEFAULT\">UDP_CSUM_DEFAULT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> =     <a class=\"id\" href=\"#INET_PROTOSW_PERMANENT\">INET_PROTOSW_PERMANENT</a>,", 
"};", 
"", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#udpv6_init\">udpv6_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inet6_add_protocol\">inet6_add_protocol</a>(&amp;<a class=\"id\" href=\"#udpv6_protocol\">udpv6_protocol</a>, <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inet6_register_protosw\">inet6_register_protosw</a>(&amp;<a class=\"id\" href=\"#udpv6_protosw\">udpv6_protosw</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_udpv6_protocol\">out_udpv6_protocol</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#out_udpv6_protocol\">out_udpv6_protocol</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_del_protocol\">inet6_del_protocol</a>(&amp;<a class=\"id\" href=\"#udpv6_protocol\">udpv6_protocol</a>, <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#udpv6_exit\">udpv6_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_unregister_protosw\">inet6_unregister_protosw</a>(&amp;<a class=\"id\" href=\"#udpv6_protosw\">udpv6_protosw</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_del_protocol\">inet6_del_protocol</a>(&amp;<a class=\"id\" href=\"#udpv6_protocol\">udpv6_protocol</a>, <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>);", 
"}", 
];
xr_frag_insert('l/ab/c269e58967a1695bd6d124a428bdf095907749.xr', __xr_tmp);
