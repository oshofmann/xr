var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable_no_resched_notrace\">preempt_enable_no_resched_notrace</a>(); \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>(); \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_check_resched\">preempt_check_resched</a>(); \\", 
"} while (0)", 
"", 
"#else", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>()<span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_enable_no_resched\">preempt_enable_no_resched</a>()<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>()<span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_check_resched\">preempt_check_resched</a>()<span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_disable_notrace\">preempt_disable_notrace</a>()<span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_enable_no_resched_notrace\">preempt_enable_no_resched_notrace</a>()<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_enable_notrace\">preempt_enable_notrace</a>()<span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PREEMPT_NOTIFIERS\">CONFIG_PREEMPT_NOTIFIERS</a>", 
"", 
"struct <a class=\"id\" href=\"#preempt_notifier\">preempt_notifier</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * preempt_ops - notifiers called when a task is preempted and rescheduled</span>", 
"<span class=\"comment\"> * @sched_in: we're about to be rescheduled:</span>", 
"<span class=\"comment\"> *    notifier: struct preempt_notifier for the task being scheduled</span>", 
"<span class=\"comment\"> *    cpu:  cpu we're scheduled on</span>", 
"<span class=\"comment\"> * @sched_out: we've just been preempted</span>", 
"<span class=\"comment\"> *    notifier: struct preempt_notifier for the task being preempted</span>", 
"<span class=\"comment\"> *    next: the task that's kicking us out</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Please note that sched_in and out are called under different</span>", 
"<span class=\"comment\"> * contexts.  sched_out is called with rq lock held and irq disabled</span>", 
"<span class=\"comment\"> * while sched_in is called without rq lock and irq enabled.  This</span>", 
"<span class=\"comment\"> * difference is intentional and depended upon by its users.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#preempt_ops\">preempt_ops</a> {", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#sched_in\">sched_in</a>)(struct <a class=\"id\" href=\"#preempt_notifier\">preempt_notifier</a> *<a class=\"id\" href=\"#notifier\">notifier</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#sched_out\">sched_out</a>)(struct <a class=\"id\" href=\"#preempt_notifier\">preempt_notifier</a> *<a class=\"id\" href=\"#notifier\">notifier</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#next\">next</a>);", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * preempt_notifier - key for installing preemption notifiers</span>", 
"<span class=\"comment\"> * @link: internal use</span>", 
"<span class=\"comment\"> * @ops: defines the notifier functions to be called</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Usually used in conjunction with container_of().</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#preempt_notifier\">preempt_notifier</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> <a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#preempt_ops\">preempt_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"};", 
"", 
"void <a class=\"id\" href=\"#preempt_notifier_register\">preempt_notifier_register</a>(struct <a class=\"id\" href=\"#preempt_notifier\">preempt_notifier</a> *<a class=\"id\" href=\"#notifier\">notifier</a>);", 
"void <a class=\"id\" href=\"#preempt_notifier_unregister\">preempt_notifier_unregister</a>(struct <a class=\"id\" href=\"#preempt_notifier\">preempt_notifier</a> *<a class=\"id\" href=\"#notifier\">notifier</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#preempt_notifier_init\">preempt_notifier_init</a>(struct <a class=\"id\" href=\"#preempt_notifier\">preempt_notifier</a> *<a class=\"id\" href=\"#notifier\">notifier</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#preempt_ops\">preempt_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_HLIST_NODE\">INIT_HLIST_NODE</a>(&amp;<a class=\"id\" href=\"#notifier\">notifier</a>-><a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#notifier\">notifier</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __LINUX_PREEMPT_H */</span>", 
];
xr_frag_insert('l/ac/5830aefccfa9fc544f22924fbc13173d5cf99d.xr', __xr_tmp);
