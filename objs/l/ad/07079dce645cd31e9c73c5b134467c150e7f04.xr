var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Local APIC handling, local APIC timers</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(c) 1999, 2000, 2009 Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fixes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Maciej W. Rozycki<span class=\"ts\"/>:<span class=\"ts\"/>Bits for genuine 82489DX APICs;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>thanks to Eric Gilmore</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>and Rolf G. Tews</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for testing these extensively.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Maciej W. Rozycki<span class=\"ts\"/>:<span class=\"ts\"/>Various updates and fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Mikael Pettersson<span class=\"ts\"/>:<span class=\"ts\"/>Power Management for UP-APIC.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pavel Machek and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Mikael Pettersson<span class=\"ts\"/>:<span class=\"ts\"/>PM converted to driver model.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#perf_event\">perf_event</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mc146818rtc\">mc146818rtc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi_pmtmr\">acpi_pmtmr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#clockchips\">clockchips</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ftrace\">ftrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timex\">timex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmar\">dmar</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmi\">dmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nmi\">nmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#perf_event\">perf_event</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgalloc\">pgalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mpspec\">mpspec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i8253\">i8253</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i8259\">i8259</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#idle\">idle</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mtrr\">mtrr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mce\">mce</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#kvm_para\">kvm_para</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tsc\">tsc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"unsigned int <a class=\"id\" href=\"#num_processors\">num_processors</a>;", 
"", 
"unsigned <a class=\"id\" href=\"#disabled_cpus\">disabled_cpus</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a>;", 
"", 
"<span class=\"comment\">/* Processor that is doing the boot up */</span>", 
"unsigned int <a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a> = -1U;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The highest APIC ID seen during enumeration.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#max_physical_apicid\">max_physical_apicid</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Bitmask of physically existing CPUs:</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#physid_mask_t\">physid_mask_t</a> <a class=\"id\" href=\"#phys_cpu_present_map\">phys_cpu_present_map</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Map cpu index to physical APIC ID</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#DEFINE_EARLY_PER_CPU\">DEFINE_EARLY_PER_CPU</a>(<a class=\"id\" href=\"#u16\">u16</a>, <a class=\"id\" href=\"#x86_cpu_to_apicid\">x86_cpu_to_apicid</a>, <a class=\"id\" href=\"#BAD_APICID\">BAD_APICID</a>);", 
"<a class=\"id\" href=\"#DEFINE_EARLY_PER_CPU\">DEFINE_EARLY_PER_CPU</a>(<a class=\"id\" href=\"#u16\">u16</a>, <a class=\"id\" href=\"#x86_bios_cpu_apicid\">x86_bios_cpu_apicid</a>, <a class=\"id\" href=\"#BAD_APICID\">BAD_APICID</a>);", 
"<a class=\"id\" href=\"#EXPORT_EARLY_PER_CPU_SYMBOL\">EXPORT_EARLY_PER_CPU_SYMBOL</a>(<a class=\"id\" href=\"#x86_cpu_to_apicid\">x86_cpu_to_apicid</a>);", 
"<a class=\"id\" href=\"#EXPORT_EARLY_PER_CPU_SYMBOL\">EXPORT_EARLY_PER_CPU_SYMBOL</a>(<a class=\"id\" href=\"#x86_bios_cpu_apicid\">x86_bios_cpu_apicid</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Knob to control our willingness to enable the local APIC.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * +1=force-enable</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#force_enable_local_apic\">force_enable_local_apic</a>;", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * APIC command line parameters</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_lapic\">parse_lapic</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#force_enable_local_apic\">force_enable_local_apic</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"lapic\", <a class=\"id\" href=\"#parse_lapic\">parse_lapic</a>);", 
"<span class=\"comment\">/* Local APIC was disabled by the BIOS and enabled by the kernel */</span>", 
"static int <a class=\"id\" href=\"#enabled_via_apicbase\">enabled_via_apicbase</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Handle interrupt mode configuration register (IMCR).</span>", 
"<span class=\"comment\"> * This register controls whether the interrupt signals</span>", 
"<span class=\"comment\"> * that reach the BSP come from the master PIC or from the</span>", 
"<span class=\"comment\"> * local APIC. Before entering Symmetric I/O Mode, either</span>", 
"<span class=\"comment\"> * the BIOS or the operating system must switch out of</span>", 
"<span class=\"comment\"> * PIC Mode by changing the IMCR.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#imcr_pic_to_apic\">imcr_pic_to_apic</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* select IMCR register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(0x70, 0x22);", 
"<span class=\"ts\"/><span class=\"comment\">/* NMI and 8259 INTR go through APIC */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(0x01, 0x23);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#imcr_apic_to_pic\">imcr_apic_to_pic</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* select IMCR register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(0x70, 0x22);", 
"<span class=\"ts\"/><span class=\"comment\">/* NMI and 8259 INTR go directly to BSP */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(0x00, 0x23);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"static int <a class=\"id\" href=\"#apic_calibrate_pmtmr\">apic_calibrate_pmtmr</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#setup_apicpmtimer\">setup_apicpmtimer</a>(char *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_calibrate_pmtmr\">apic_calibrate_pmtmr</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#notsc_setup\">notsc_setup</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"apicpmtimer\", <a class=\"id\" href=\"#setup_apicpmtimer\">setup_apicpmtimer</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#x2apic_mode\">x2apic_mode</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_X2APIC\">CONFIG_X86_X2APIC</a>", 
"<span class=\"comment\">/* x2apic enabled before OS handover */</span>", 
"static int <a class=\"id\" href=\"#x2apic_preenabled\">x2apic_preenabled</a>;", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#setup_nox2apic\">setup_nox2apic</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x2apic_enabled\">x2apic_enabled</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Bios already enabled x2apic, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"can't enforce nox2apic\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_clear_cpu_cap\">setup_clear_cpu_cap</a>(<a class=\"id\" href=\"#X86_FEATURE_X2APIC\">X86_FEATURE_X2APIC</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"nox2apic\", <a class=\"id\" href=\"#setup_nox2apic\">setup_nox2apic</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"unsigned long <a class=\"id\" href=\"#mp_lapic_addr\">mp_lapic_addr</a>;", 
"int <a class=\"id\" href=\"#disable_apic\">disable_apic</a>;", 
"<span class=\"comment\">/* Disable local APIC timer from the kernel commandline or via dmi quirk */</span>", 
"static int <a class=\"id\" href=\"#disable_apic_timer\">disable_apic_timer</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a>;", 
"<span class=\"comment\">/* Local APIC timer works in C2 */</span>", 
"int <a class=\"id\" href=\"#local_apic_timer_c2_ok\">local_apic_timer_c2_ok</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#local_apic_timer_c2_ok\">local_apic_timer_c2_ok</a>);", 
"", 
"int <a class=\"id\" href=\"#first_system_vector\">first_system_vector</a> = 0xfe;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Debug level, exported for io_apic.c</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#apic_verbosity\">apic_verbosity</a>;", 
"", 
"int <a class=\"id\" href=\"#pic_mode\">pic_mode</a>;", 
"", 
"<span class=\"comment\">/* Have we found an MP table */</span>", 
"int <a class=\"id\" href=\"#smp_found_config\">smp_found_config</a>;", 
"", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#lapic_resource\">lapic_resource</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"Local APIC\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a> | <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a>,", 
"};", 
"", 
"static unsigned int <a class=\"id\" href=\"#calibration_result\">calibration_result</a>;", 
"", 
"static int <a class=\"id\" href=\"#lapic_next_event\">lapic_next_event</a>(unsigned long <a class=\"id\" href=\"#delta\">delta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>);", 
"static void <a class=\"id\" href=\"#lapic_timer_setup\">lapic_timer_setup</a>(enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>);", 
"static void <a class=\"id\" href=\"#lapic_timer_broadcast\">lapic_timer_broadcast</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>);", 
"static void <a class=\"id\" href=\"#apic_pm_activate\">apic_pm_activate</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The local apic timer can be used for any function which is CPU local.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> <a class=\"id\" href=\"#lapic_clockevent\">lapic_clockevent</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"lapic\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#features\">features</a><span class=\"ts\"/>= <a class=\"id\" href=\"#CLOCK_EVT_FEAT_PERIODIC\">CLOCK_EVT_FEAT_PERIODIC</a> | <a class=\"id\" href=\"#CLOCK_EVT_FEAT_ONESHOT\">CLOCK_EVT_FEAT_ONESHOT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#CLOCK_EVT_FEAT_C3STOP\">CLOCK_EVT_FEAT_C3STOP</a> | <a class=\"id\" href=\"#CLOCK_EVT_FEAT_DUMMY\">CLOCK_EVT_FEAT_DUMMY</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shift\">shift</a><span class=\"ts\"/><span class=\"ts\"/>= 32,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_mode\">set_mode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#lapic_timer_setup\">lapic_timer_setup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_next_event\">set_next_event</a><span class=\"ts\"/>= <a class=\"id\" href=\"#lapic_next_event\">lapic_next_event</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#broadcast\">broadcast</a><span class=\"ts\"/>= <a class=\"id\" href=\"#lapic_timer_broadcast\">lapic_timer_broadcast</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rating\">rating</a><span class=\"ts\"/><span class=\"ts\"/>= 100,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq\">irq</a><span class=\"ts\"/><span class=\"ts\"/>= -1,", 
"};", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a>, <a class=\"id\" href=\"#lapic_events\">lapic_events</a>);", 
"", 
"static unsigned long <a class=\"id\" href=\"#apic_phys\">apic_phys</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get the LAPIC version</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#lapic_get_version\">lapic_get_version</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#GET_APIC_VERSION\">GET_APIC_VERSION</a>(<a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVR\">APIC_LVR</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check, if the APIC is integrated or a separate chip</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#lapic_is_integrated\">lapic_is_integrated</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>return 1;", 
"#else", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#APIC_INTEGRATED\">APIC_INTEGRATED</a>(<a class=\"id\" href=\"#lapic_get_version\">lapic_get_version</a>());", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check, whether this is a modern or a first generation APIC</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#modern_apic\">modern_apic</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* AMD systems use old APIC versions, so check the CPU */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> == <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> >= 0xf)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lapic_get_version\">lapic_get_version</a>() >= 0x14;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * right after this call apic become NOOP driven</span>", 
"<span class=\"comment\"> * so apic-&gt;write/read doesn't do anything</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#apic_disable\">apic_disable</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"APIC: switched to apic NOOP\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a> = &amp;<a class=\"id\" href=\"#apic_noop\">apic_noop</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#native_apic_wait_icr_idle\">native_apic_wait_icr_idle</a>(void)", 
"{", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_ICR\">APIC_ICR</a>) &amp; <a class=\"id\" href=\"#APIC_ICR_BUSY\">APIC_ICR_BUSY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_relax\">cpu_relax</a>();", 
"}", 
"", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#native_safe_apic_wait_icr_idle\">native_safe_apic_wait_icr_idle</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#send_status\">send_status</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = 0;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_status\">send_status</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_ICR\">APIC_ICR</a>) &amp; <a class=\"id\" href=\"#APIC_ICR_BUSY\">APIC_ICR_BUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#send_status\">send_status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(100);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#timeout\">timeout</a>++ &lt; 1000);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#send_status\">send_status</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#native_apic_icr_write\">native_apic_icr_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_ICR2\">APIC_ICR2</a>, <a class=\"id\" href=\"#SET_APIC_DEST_FIELD\">SET_APIC_DEST_FIELD</a>(<a class=\"id\" href=\"#id\">id</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_ICR\">APIC_ICR</a>, <a class=\"id\" href=\"#low\">low</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#native_apic_icr_read\">native_apic_icr_read</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#icr1\">icr1</a>, <a class=\"id\" href=\"#icr2\">icr2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icr2\">icr2</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_ICR2\">APIC_ICR2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icr1\">icr1</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_ICR\">APIC_ICR</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#icr1\">icr1</a> | ((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#icr2\">icr2</a> << 32);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enable_NMI_through_LVT0 - enable NMI through local vector table 0</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#enable_NMI_through_LVT0\">enable_NMI_through_LVT0</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* unmask and set to NMI */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#APIC_DM_NMI\">APIC_DM_NMI</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Level triggered for 82489DX (32bit mode) */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#lapic_is_integrated\">lapic_is_integrated</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> |= <a class=\"id\" href=\"#APIC_LVT_LEVEL_TRIGGER\">APIC_LVT_LEVEL_TRIGGER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVT0\">APIC_LVT0</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * get_physical_broadcast - Get number of physical broadcast IDs</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#get_physical_broadcast\">get_physical_broadcast</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#modern_apic\">modern_apic</a>() ? 0xff : 0xf;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * lapic_get_maxlvt - get the maximum number of local vector table entries</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#lapic_get_maxlvt\">lapic_get_maxlvt</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVR\">APIC_LVR</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - we always have APIC integrated on 64bit mode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - 82489DXs do not report # of LVT entries</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#APIC_INTEGRATED\">APIC_INTEGRATED</a>(<a class=\"id\" href=\"#GET_APIC_VERSION\">GET_APIC_VERSION</a>(<a class=\"id\" href=\"#v\">v</a>)) ? <a class=\"id\" href=\"#GET_APIC_MAXLVT\">GET_APIC_MAXLVT</a>(<a class=\"id\" href=\"#v\">v</a>) : 2;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Local APIC timer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Clock divisor */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#APIC_DIVISOR\">APIC_DIVISOR</a> 16", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function sets up the local APIC timer, with a timeout of</span>", 
"<span class=\"comment\"> * 'clocks' APIC bus clock. During calibration we actually call</span>", 
"<span class=\"comment\"> * this function twice on the boot CPU, once with a bogus timeout</span>", 
"<span class=\"comment\"> * value, second time for real. The other (noncalibrating) CPUs</span>", 
"<span class=\"comment\"> * call this function only once, with the real, calibrated value.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We do reads before writes even if unnecessary, to get around the</span>", 
"<span class=\"comment\"> * P5 APIC double write bug.</span>", 
"<span class=\"comment\"> */</span>", 
];
xr_frag_insert('l/ad/07079dce645cd31e9c73c5b134467c150e7f04.xr', __xr_tmp);
