var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  TUN - Universal TUN/TAP device driver.</span>", 
"<span class=\"comment\"> *  Copyright (C) 1999-2002 Maxim Krasnyansky &lt;maxk@qualcomm.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> *  (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  $Id: tun.c,v 1.15 2002/03/01 02:44:24 maxk Exp $</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Changes:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Mike Kershaw &lt;dragorn@kismetwireless.net&gt; 2005/08/14</span>", 
"<span class=\"comment\"> *    Add TUNSETLINK ioctl to set the link encapsulation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Mark Smith &lt;markzzzsmith@yahoo.com.au&gt;</span>", 
"<span class=\"comment\"> *    Use random_ether_addr() for tap MAC address.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Harald Roelle &lt;harald.roelle@ifi.lmu.de&gt;  2004/04/20</span>", 
"<span class=\"comment\"> *    Fixes in packet dropping, queue length setting and queue wakeup.</span>", 
"<span class=\"comment\"> *    Increased default tx queue length.</span>", 
"<span class=\"comment\"> *    Added ethtool API.</span>", 
"<span class=\"comment\"> *    Minor cleanups</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Daniel Podlejski &lt;underley@underley.eu.org&gt;</span>", 
"<span class=\"comment\"> *    Modifications for 2.3.99-pre5 kernel.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DRV_NAME\">DRV_NAME</a><span class=\"ts\"/>\"tun\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DRV_VERSION\">DRV_VERSION</a><span class=\"ts\"/>\"1.6\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DRV_DESCRIPTION\">DRV_DESCRIPTION</a><span class=\"ts\"/>\"Universal TUN/TAP device driver\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DRV_COPYRIGHT\">DRV_COPYRIGHT</a><span class=\"ts\"/>\"(C) 1999-2004 Max Krasnyansky <maxk@qualcomm.com>\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#etherdevice\">etherdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#miscdevice\">miscdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ethtool\">ethtool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compat\">compat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/if.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_ether\">if_ether</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_tun\">if_tun</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#crc32\">crc32</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nsproxy\">nsproxy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_net\">virtio_net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netns\">netns</a>/<a class=\"id\" href=\"#generic\">generic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Uncomment to enable debugging */</span>", 
"<span class=\"comment\">/* #define TUN_DEBUG 1 */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TUN_DEBUG\">TUN_DEBUG</a>", 
"static int <a class=\"id\" href=\"#debug\">debug</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DBG\">DBG</a>  if(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#debug\">debug</a>)<a class=\"id\" href=\"#printk\">printk</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DBG1\">DBG1</a> if(<a class=\"id\" href=\"#debug\">debug</a>==2)<a class=\"id\" href=\"#printk\">printk</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DBG\">DBG</a>( <a class=\"id\" href=\"#a\">a</a>... )", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DBG1\">DBG1</a>( <a class=\"id\" href=\"#a\">a</a>... )", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FLT_EXACT_COUNT\">FLT_EXACT_COUNT</a> 8", 
"struct <a class=\"id\" href=\"#tap_filter\">tap_filter</a> {", 
"<span class=\"ts\"/>unsigned int    <a class=\"id\" href=\"#count\">count</a>;    <span class=\"comment\">/* Number of addrs. Zero means disabled */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>             <a class=\"id\" href=\"#mask\">mask</a>[2];  <span class=\"comment\">/* Mask of the hashed addrs */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#FLT_EXACT_COUNT\">FLT_EXACT_COUNT</a>][<a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tun_file\">tun_file</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tun_sock\">tun_sock</a>;", 
"", 
"struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_file\">tun_file</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tfile\">tfile</a>;", 
"<span class=\"ts\"/>unsigned int <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a><span class=\"ts\"/>*<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fasync_struct\">fasync_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#fasync\">fasync</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tap_filter\">tap_filter</a>       <a class=\"id\" href=\"#txflt\">txflt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#socket\">socket</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket_wq\">socket_wq</a><span class=\"ts\"/><a class=\"id\" href=\"#wq\">wq</a>;", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vnet_hdr_sz\">vnet_hdr_sz</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TUN_DEBUG\">TUN_DEBUG</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#debug\">debug</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tun_sock\">tun_sock</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#tun\">tun</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#tun_sock\">tun_sock</a> *<a class=\"id\" href=\"#tun_sk\">tun_sk</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#tun_sock\">tun_sock</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tun_attach\">tun_attach</a>(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_file\">tun_file</a> *<a class=\"id\" href=\"#tfile\">tfile</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_lock_bh\">netif_tx_lock_bh</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tfile\">tfile</a>-><a class=\"id\" href=\"#tun\">tun</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#tfile\">tfile</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfile\">tfile</a>-><a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#tun\">tun</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#tfile\">tfile</a> = <a class=\"id\" href=\"#tfile\">tfile</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_carrier_on\">netif_carrier_on</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#tfile\">tfile</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_unlock_bh\">netif_tx_unlock_bh</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__tun_detach\">__tun_detach</a>(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Detach from net device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_lock_bh\">netif_tx_lock_bh</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_carrier_off\">netif_carrier_off</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#tfile\">tfile</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_unlock_bh\">netif_tx_unlock_bh</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Drop read queue */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_purge\">skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Drop the extra count on the net device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tun_detach\">tun_detach</a>(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__tun_detach\">__tun_detach</a>(<a class=\"id\" href=\"#tun\">tun</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#__tun_get\">__tun_get</a>(struct <a class=\"id\" href=\"#tun_file\">tun_file</a> *<a class=\"id\" href=\"#tfile\">tfile</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#tfile\">tfile</a>-><a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#tfile\">tfile</a>-><a class=\"id\" href=\"#tun\">tun</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tun\">tun</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun_get\">tun_get</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__tun_get\">__tun_get</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tun_put\">tun_put</a>(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_file\">tun_file</a> *<a class=\"id\" href=\"#tfile\">tfile</a> = <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#tfile\">tfile</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#tfile\">tfile</a>-><a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tun_detach\">tun_detach</a>(<a class=\"id\" href=\"#tfile\">tfile</a>-><a class=\"id\" href=\"#tun\">tun</a>);", 
"}", 
"", 
"<span class=\"comment\">/* TAP filterting */</span>", 
"static void <a class=\"id\" href=\"#addr_hash_set\">addr_hash_set</a>(<a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#mask\">mask</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#ether_crc\">ether_crc</a>(<a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>, <a class=\"id\" href=\"#addr\">addr</a>) >> 26;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#n\">n</a> >> 5] |= (1 << (<a class=\"id\" href=\"#n\">n</a> &amp; 31));", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#addr_hash_test\">addr_hash_test</a>(const <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#mask\">mask</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#ether_crc\">ether_crc</a>(<a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>, <a class=\"id\" href=\"#addr\">addr</a>) >> 26;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#n\">n</a> >> 5] &amp; (1 << (<a class=\"id\" href=\"#n\">n</a> &amp; 31));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#update_filter\">update_filter</a>(struct <a class=\"id\" href=\"#tap_filter\">tap_filter</a> *<a class=\"id\" href=\"#filter\">filter</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct { <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#u\">u</a>[<a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>]; } *<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_filter\">tun_filter</a> <a class=\"id\" href=\"#uf\">uf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#alen\">alen</a>, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#nexact\">nexact</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#uf\">uf</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(<a class=\"id\" href=\"#uf\">uf</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#uf\">uf</a>.<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Disabled */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alen\">alen</a> = <a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a> * <a class=\"id\" href=\"#uf\">uf</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#alen\">alen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#arg\">arg</a> + sizeof(<a class=\"id\" href=\"#uf\">uf</a>), <a class=\"id\" href=\"#alen\">alen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The filter is updated without holding any locks. Which is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * perfectly safe. We disable it first and in the worst</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * case we'll accept a few undesired packets. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Use first set of addresses as an exact filter */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0; <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#uf\">uf</a>.<a class=\"id\" href=\"#count\">count</a> && <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#FLT_EXACT_COUNT\">FLT_EXACT_COUNT</a>; <a class=\"id\" href=\"#n\">n</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#n\">n</a>], <a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#n\">n</a>].<a class=\"id\" href=\"#u\">u</a>, <a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nexact\">nexact</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Remaining multicast addresses are hashed,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unicast will leave the filter disabled. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#mask\">mask</a>, 0, sizeof(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#mask\">mask</a>));", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#uf\">uf</a>.<a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#n\">n</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_multicast_ether_addr\">is_multicast_ether_addr</a>(<a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#n\">n</a>].<a class=\"id\" href=\"#u\">u</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0; <span class=\"comment\">/* no filter */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_hash_set\">addr_hash_set</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#n\">n</a>].<a class=\"id\" href=\"#u\">u</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* For ALLMULTI just set the mask to all ones.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This overrides the mask populated above. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#uf\">uf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_FLT_ALLMULTI\">TUN_FLT_ALLMULTI</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#mask\">mask</a>, ~0, sizeof(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#mask\">mask</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now enable the filter */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#nexact\">nexact</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Return the number of exact filters */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#nexact\">nexact</a>;", 
"", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Returns: 0 - drop, !=0 - accept */</span>", 
"static int <a class=\"id\" href=\"#run_filter\">run_filter</a>(struct <a class=\"id\" href=\"#tap_filter\">tap_filter</a> *<a class=\"id\" href=\"#filter\">filter</a>, const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Cannot use eth_hdr(skb) here because skb_mac_hdr() is incorrect</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * at this point. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ethhdr\">ethhdr</a> *<a class=\"id\" href=\"#eh\">eh</a> = (struct <a class=\"id\" href=\"#ethhdr\">ethhdr</a> *) <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Exact match */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#compare_ether_addr\">compare_ether_addr</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#h_dest\">h_dest</a>, <a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#i\">i</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Inexact match (multicast only) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_multicast_ether_addr\">is_multicast_ether_addr</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#h_dest\">h_dest</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addr_hash_test\">addr_hash_test</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#h_dest\">h_dest</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Checks whether the packet is accepted or not.</span>", 
"<span class=\"comment\"> * Returns: 0 - drop, !=0 - accept</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#check_filter\">check_filter</a>(struct <a class=\"id\" href=\"#tap_filter\">tap_filter</a> *<a class=\"id\" href=\"#filter\">filter</a>, const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#run_filter\">run_filter</a>(<a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Network device part of the driver */</span>", 
"", 
"static const struct <a class=\"id\" href=\"#ethtool_ops\">ethtool_ops</a> <a class=\"id\" href=\"#tun_ethtool_ops\">tun_ethtool_ops</a>;", 
"", 
"<span class=\"comment\">/* Net device detach from fd. */</span>", 
"static void <a class=\"id\" href=\"#tun_net_uninit\">tun_net_uninit</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_file\">tun_file</a> *<a class=\"id\" href=\"#tfile\">tfile</a> = <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#tfile\">tfile</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Inform the methods they need to stop using the dev.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tfile\">tfile</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_all\">wake_up_all</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#wq\">wq</a>.<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#tfile\">tfile</a>-><a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__tun_detach\">__tun_detach</a>(<a class=\"id\" href=\"#tun\">tun</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tun_free_netdev\">tun_free_netdev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Net device open. */</span>", 
"static int <a class=\"id\" href=\"#tun_net_open\">tun_net_open</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_start_queue\">netif_start_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Net device close. */</span>", 
"static int <a class=\"id\" href=\"#tun_net_close\">tun_net_close</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_stop_queue\">netif_stop_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Net device start xmit */</span>", 
"static <a class=\"id\" href=\"#netdev_tx_t\">netdev_tx_t</a> <a class=\"id\" href=\"#tun_net_xmit\">tun_net_xmit</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DBG\">DBG</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: tun_net_xmit %d\\n\", <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Drop packet if interface is not attached */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#tfile\">tfile</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Drop if the filter does not like it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is a noop if the filter is disabled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Filter can be enabled only for the TAP devices. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#check_filter\">check_filter</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#txflt\">txflt</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_filter\">sk_filter</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sk_filter\">sk_filter</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_len\">skb_queue_len</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>) >= <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#tx_queue_len\">tx_queue_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_ONE_QUEUE\">TUN_ONE_QUEUE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Normal queueing mode. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Packet scheduler handles dropping of further packets. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_stop_queue\">netif_stop_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We won't see all dropped packets individually, so overrun</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * error is more appropriate. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_fifo_errors\">tx_fifo_errors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Single queue mode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Driver handles dropping of all packets itself. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Orphan the skb - required as we might hang on to it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for indefinite time. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_orphan\">skb_orphan</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Enqueue packet */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_tail\">skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Notify and wake up reader process */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_FASYNC\">TUN_FASYNC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#fasync\">fasync</a>, <a class=\"id\" href=\"#SIGIO\">SIGIO</a>, <a class=\"id\" href=\"#POLL_IN\">POLL_IN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_poll\">wake_up_interruptible_poll</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#wq\">wq</a>.<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#POLLIN\">POLLIN</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a> | <a class=\"id\" href=\"#POLLRDBAND\">POLLRDBAND</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NETDEV_TX_OK\">NETDEV_TX_OK</a>;", 
"", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_dropped\">tx_dropped</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NETDEV_TX_OK\">NETDEV_TX_OK</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tun_net_mclist\">tun_net_mclist</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This callback is supposed to deal with mc filter in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _rx_ path and has nothing to do with the _tx_ path.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * In rx path we always accept everything userspace gives us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_MTU\">MIN_MTU</a> 68", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_MTU\">MAX_MTU</a> 65535", 
"", 
"static int", 
"<a class=\"id\" href=\"#tun_net_change_mtu\">tun_net_change_mtu</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#new_mtu\">new_mtu</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_mtu\">new_mtu</a> &lt; <a class=\"id\" href=\"#MIN_MTU\">MIN_MTU</a> || <a class=\"id\" href=\"#new_mtu\">new_mtu</a> + <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hard_header_len\">hard_header_len</a> &gt; <a class=\"id\" href=\"#MAX_MTU\">MAX_MTU</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#new_mtu\">new_mtu</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> <a class=\"id\" href=\"#tun_netdev_ops\">tun_netdev_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_uninit\">ndo_uninit</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_uninit\">tun_net_uninit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_open\">ndo_open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_open\">tun_net_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_stop\">ndo_stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_close\">tun_net_close</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_start_xmit\">ndo_start_xmit</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_xmit\">tun_net_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_change_mtu\">ndo_change_mtu</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_change_mtu\">tun_net_change_mtu</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> <a class=\"id\" href=\"#tap_netdev_ops\">tap_netdev_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_uninit\">ndo_uninit</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_uninit\">tun_net_uninit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_open\">ndo_open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_open\">tun_net_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_stop\">ndo_stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_close\">tun_net_close</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_start_xmit\">ndo_start_xmit</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_xmit\">tun_net_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_change_mtu\">ndo_change_mtu</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_change_mtu\">tun_net_change_mtu</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_set_multicast_list\">ndo_set_multicast_list</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_net_mclist\">tun_net_mclist</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_set_mac_address\">ndo_set_mac_address</a><span class=\"ts\"/>= <a class=\"id\" href=\"#eth_mac_addr\">eth_mac_addr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_validate_addr\">ndo_validate_addr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#eth_validate_addr\">eth_validate_addr</a>,", 
"};", 
"", 
"<span class=\"comment\">/* Initialize net device. */</span>", 
"static void <a class=\"id\" href=\"#tun_net_init\">tun_net_init</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_TYPE_MASK\">TUN_TYPE_MASK</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TUN_TUN_DEV\">TUN_TUN_DEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a> = &amp;<a class=\"id\" href=\"#tun_netdev_ops\">tun_netdev_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Point-to-Point TUN Device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hard_header_len\">hard_header_len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> = 1500;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Zero header length */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ARPHRD_NONE\">ARPHRD_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a> | <a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a> | <a class=\"id\" href=\"#IFF_MULTICAST\">IFF_MULTICAST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#tx_queue_len\">tx_queue_len</a> = <a class=\"id\" href=\"#TUN_READQ_SIZE\">TUN_READQ_SIZE</a>;  <span class=\"comment\">/* We prefer our own queue length */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TUN_TAP_DEV\">TUN_TAP_DEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a> = &amp;<a class=\"id\" href=\"#tap_netdev_ops\">tap_netdev_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ethernet TAP Device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ether_setup\">ether_setup</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#random_ether_addr\">random_ether_addr</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#tx_queue_len\">tx_queue_len</a> = <a class=\"id\" href=\"#TUN_READQ_SIZE\">TUN_READQ_SIZE</a>;  <span class=\"comment\">/* We prefer our own queue length */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Character device part */</span>", 
"", 
"<span class=\"comment\">/* Poll */</span>", 
"static unsigned int <a class=\"id\" href=\"#tun_chr_poll\">tun_chr_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> * <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_file\">tun_file</a> *<a class=\"id\" href=\"#tfile\">tfile</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#__tun_get\">__tun_get</a>(<a class=\"id\" href=\"#tfile\">tfile</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tun\">tun</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#POLLERR\">POLLERR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DBG\">DBG</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: tun_chr_poll\\n\", <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_wait\">poll_wait</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#wq\">wq</a>.<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_writeable\">sock_writeable</a>(<a class=\"id\" href=\"#sk\">sk</a>) ||", 
"<span class=\"ts\"/>    (!<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#SOCK_ASYNC_NOSPACE\">SOCK_ASYNC_NOSPACE</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a>-><a class=\"id\" href=\"#flags\">flags</a>) &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#sock_writeable\">sock_writeable</a>(<a class=\"id\" href=\"#sk\">sk</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> | <a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#reg_state\">reg_state</a> != <a class=\"id\" href=\"#NETREG_REGISTERED\">NETREG_REGISTERED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#POLLERR\">POLLERR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun_put\">tun_put</a>(<a class=\"id\" href=\"#tun\">tun</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"<span class=\"comment\">/* prepad is the amount to reserve at front.  len is length after that.</span>", 
"<span class=\"comment\"> * linear is a hint as to how much to copy (usually headers). */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#tun_alloc_skb\">tun_alloc_skb</a>(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#prepad\">prepad</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#linear\">linear</a>, int <a class=\"id\" href=\"#noblock\">noblock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_update_classid\">sock_update_classid</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Under a page?  Don't bother with paged skb. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prepad\">prepad</a> + <a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> || !<a class=\"id\" href=\"#linear\">linear</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#linear\">linear</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_alloc_send_pskb\">sock_alloc_send_pskb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#prepad\">prepad</a> + <a class=\"id\" href=\"#linear\">linear</a>, <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#linear\">linear</a>, <a class=\"id\" href=\"#noblock\">noblock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#prepad\">prepad</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#linear\">linear</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> = <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#linear\">linear</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#linear\">linear</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Get packet from user space buffer */</span>", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tun_get_user\">tun_get_user</a>(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#noblock\">noblock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_pi\">tun_pi</a> <a class=\"id\" href=\"#pi\">pi</a> = { 0, <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>) };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#align\">align</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_net_hdr\">virtio_net_hdr</a> <a class=\"id\" href=\"#gso\">gso</a> = { 0 };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_NO_PI\">TUN_NO_PI</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#len\">len</a> -= sizeof(<a class=\"id\" href=\"#pi\">pi</a>)) &gt; <a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcpy_fromiovecend\">memcpy_fromiovecend</a>((void *)&amp;<a class=\"id\" href=\"#pi\">pi</a>, <a class=\"id\" href=\"#iv\">iv</a>, 0, sizeof(<a class=\"id\" href=\"#pi\">pi</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += sizeof(<a class=\"id\" href=\"#pi\">pi</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_VNET_HDR\">TUN_VNET_HDR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#vnet_hdr_sz\">vnet_hdr_sz</a>) &gt; <a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcpy_fromiovecend\">memcpy_fromiovecend</a>((void *)&amp;<a class=\"id\" href=\"#gso\">gso</a>, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#gso\">gso</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VIRTIO_NET_HDR_F_NEEDS_CSUM\">VIRTIO_NET_HDR_F_NEEDS_CSUM</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#csum_start\">csum_start</a> + <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#csum_offset\">csum_offset</a> + 2 &gt; <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a> = <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#csum_start\">csum_start</a> + <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#csum_offset\">csum_offset</a> + 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#vnet_hdr_sz\">vnet_hdr_sz</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_TYPE_MASK\">TUN_TYPE_MASK</a>) == <a class=\"id\" href=\"#TUN_TAP_DEV\">TUN_TAP_DEV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#align\">align</a> = <a class=\"id\" href=\"#NET_IP_ALIGN\">NET_IP_ALIGN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#ETH_HLEN\">ETH_HLEN</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a> && <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a> &lt; <a class=\"id\" href=\"#ETH_HLEN\">ETH_HLEN</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tun_alloc_skb\">tun_alloc_skb</a>(<a class=\"id\" href=\"#tun\">tun</a>, <a class=\"id\" href=\"#align\">align</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a>, <a class=\"id\" href=\"#noblock\">noblock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#skb\">skb</a>) != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_dropped\">rx_dropped</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_copy_datagram_from_iovec\">skb_copy_datagram_from_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_dropped\">rx_dropped</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VIRTIO_NET_HDR_F_NEEDS_CSUM\">VIRTIO_NET_HDR_F_NEEDS_CSUM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_partial_csum_set\">skb_partial_csum_set</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#csum_start\">csum_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#csum_offset\">csum_offset</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_frame_errors\">rx_frame_errors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_NOCHECKSUM\">TUN_NOCHECKSUM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_UNNECESSARY\">CHECKSUM_UNNECESSARY</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_TYPE_MASK\">TUN_TYPE_MASK</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TUN_TUN_DEV\">TUN_TUN_DEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_NO_PI\">TUN_NO_PI</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>[0] &amp; 0xf0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x40:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x60:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IPV6\">ETH_P_IPV6</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_dropped\">rx_dropped</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_mac_header\">skb_reset_mac_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TUN_TAP_DEV\">TUN_TAP_DEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#eth_type_trans\">eth_type_trans</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> != <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_NONE\">VIRTIO_NET_HDR_GSO_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"GSO!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; ~<a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_ECN\">VIRTIO_NET_HDR_GSO_ECN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_TCPV4\">VIRTIO_NET_HDR_GSO_TCPV4</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_TCPV4\">SKB_GSO_TCPV4</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_TCPV6\">VIRTIO_NET_HDR_GSO_TCPV6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_TCPV6\">SKB_GSO_TCPV6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_UDP\">VIRTIO_NET_HDR_GSO_UDP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_frame_errors\">rx_frame_errors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_ECN\">VIRTIO_NET_HDR_GSO_ECN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> |= <a class=\"id\" href=\"#SKB_GSO_TCP_ECN\">SKB_GSO_TCP_ECN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> = <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_size\">gso_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_frame_errors\">rx_frame_errors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Header must be checked, and gso_segs computed. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> |= <a class=\"id\" href=\"#SKB_GSO_DODGY\">SKB_GSO_DODGY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_segs\">gso_segs</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_rx_ni\">netif_rx_ni</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_packets\">rx_packets</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_bytes\">rx_bytes</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tun_chr_aio_write\">tun_chr_aio_write</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iv\">iv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#iocb\">iocb</a>-><a class=\"id\" href=\"#ki_filp\">ki_filp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#tun_get\">tun_get</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tun\">tun</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADFD\">EBADFD</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DBG\">DBG</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: tun_chr_write %ld\\n\", <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#tun_get_user\">tun_get_user</a>(<a class=\"id\" href=\"#tun\">tun</a>, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#iov_length\">iov_length</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#count\">count</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun_put\">tun_put</a>(<a class=\"id\" href=\"#tun\">tun</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Put packet to the user space buffer */</span>", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tun_put_user\">tun_put_user</a>(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iv\">iv</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_pi\">tun_pi</a> <a class=\"id\" href=\"#pi\">pi</a> = { 0, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> };", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#total\">total</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_NO_PI\">TUN_NO_PI</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#len\">len</a> -= sizeof(<a class=\"id\" href=\"#pi\">pi</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Packet will be striped */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TUN_PKT_STRIP\">TUN_PKT_STRIP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcpy_toiovecend\">memcpy_toiovecend</a>(<a class=\"id\" href=\"#iv\">iv</a>, (void *) &amp;<a class=\"id\" href=\"#pi\">pi</a>, 0, sizeof(<a class=\"id\" href=\"#pi\">pi</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total\">total</a> += sizeof(<a class=\"id\" href=\"#pi\">pi</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_VNET_HDR\">TUN_VNET_HDR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_net_hdr\">virtio_net_hdr</a> <a class=\"id\" href=\"#gso\">gso</a> = { 0 }; <span class=\"comment\">/* no info leak */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#vnet_hdr_sz\">vnet_hdr_sz</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_is_gso\">skb_is_gso</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#skb_shared_info\">skb_shared_info</a> *<a class=\"id\" href=\"#sinfo\">sinfo</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is a hint as to how much should be linear. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a> = <a class=\"id\" href=\"#skb_headlen\">skb_headlen</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_size\">gso_size</a> = <a class=\"id\" href=\"#sinfo\">sinfo</a>-><a class=\"id\" href=\"#gso_size\">gso_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sinfo\">sinfo</a>-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#SKB_GSO_TCPV4\">SKB_GSO_TCPV4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_TCPV4\">VIRTIO_NET_HDR_GSO_TCPV4</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#sinfo\">sinfo</a>-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#SKB_GSO_TCPV6\">SKB_GSO_TCPV6</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_TCPV6\">VIRTIO_NET_HDR_GSO_TCPV6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#sinfo\">sinfo</a>-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_UDP\">VIRTIO_NET_HDR_GSO_UDP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"tun: unexpected GSO type: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"0x%x, gso_size %d, hdr_len %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sinfo\">sinfo</a>-><a class=\"id\" href=\"#gso_type\">gso_type</a>, <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_size\">gso_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_hex_dump\">print_hex_dump</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"tun: \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#DUMP_PREFIX_NONE\">DUMP_PREFIX_NONE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       16, 1, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#min\">min</a>((int)<a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a>, 64), <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sinfo\">sinfo</a>-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#SKB_GSO_TCP_ECN\">SKB_GSO_TCP_ECN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> |= <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_ECN\">VIRTIO_NET_HDR_GSO_ECN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_NONE\">VIRTIO_NET_HDR_GSO_NONE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_F_NEEDS_CSUM\">VIRTIO_NET_HDR_F_NEEDS_CSUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#csum_start\">csum_start</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_start\">csum_start</a> - <a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gso\">gso</a>.<a class=\"id\" href=\"#csum_offset\">csum_offset</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_offset\">csum_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <span class=\"comment\">/* else everything is zero */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#memcpy_toiovecend\">memcpy_toiovecend</a>(<a class=\"id\" href=\"#iv\">iv</a>, (void *)&amp;<a class=\"id\" href=\"#gso\">gso</a>, <a class=\"id\" href=\"#total\">total</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#gso\">gso</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total\">total</a> += <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#vnet_hdr_sz\">vnet_hdr_sz</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_copy_datagram_const_iovec\">skb_copy_datagram_const_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#total\">total</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total\">total</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_packets\">tx_packets</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_bytes\">tx_bytes</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#total\">total</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tun_do_read\">tun_do_read</a>(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iv\">iv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#noblock\">noblock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_WAITQUEUE\">DECLARE_WAITQUEUE</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DBG\">DBG</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: tun_chr_read\\n\", <a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_wait_queue\">add_wait_queue</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#wq\">wq</a>.<a class=\"id\" href=\"#wait\">wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Read frames from the queue */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#skb\">skb</a>=<a class=\"id\" href=\"#skb_dequeue\">skb_dequeue</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#noblock\">noblock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#reg_state\">reg_state</a> != <a class=\"id\" href=\"#NETREG_REGISTERED\">NETREG_REGISTERED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Nothing to read, let's sleep */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_wake_queue\">netif_wake_queue</a>(<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tun_put_user\">tun_put_user</a>(<a class=\"id\" href=\"#tun\">tun</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_wait_queue\">remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#wq\">wq</a>.<a class=\"id\" href=\"#wait\">wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tun_chr_aio_read\">tun_chr_aio_read</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iv\">iv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#iocb\">iocb</a>-><a class=\"id\" href=\"#ki_filp\">ki_filp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_file\">tun_file</a> *<a class=\"id\" href=\"#tfile\">tfile</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#__tun_get\">__tun_get</a>(<a class=\"id\" href=\"#tfile\">tfile</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tun\">tun</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADFD\">EBADFD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#iov_length\">iov_length</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tun_do_read\">tun_do_read</a>(<a class=\"id\" href=\"#tun\">tun</a>, <a class=\"id\" href=\"#iocb\">iocb</a>, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#ssize_t\">ssize_t</a>, <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun_put\">tun_put</a>(<a class=\"id\" href=\"#tun\">tun</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tun_setup\">tun_setup</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#owner\">owner</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#group\">group</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ethtool_ops\">ethtool_ops</a> = &amp;<a class=\"id\" href=\"#tun_ethtool_ops\">tun_ethtool_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#destructor\">destructor</a> = <a class=\"id\" href=\"#tun_free_netdev\">tun_free_netdev</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Trivial set of netlink ops to allow deleting tun or tap</span>", 
"<span class=\"comment\"> * device with netlink.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tun_validate\">tun_validate</a>(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[], struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#data\">data</a>[])", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> <a class=\"id\" href=\"#tun_link_ops\">tun_link_ops</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kind\">kind</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#DRV_NAME\">DRV_NAME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#priv_size\">priv_size</a><span class=\"ts\"/>= sizeof(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setup\">setup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_setup\">tun_setup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#validate\">validate</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tun_validate\">tun_validate</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#tun_sock_write_space\">tun_sock_write_space</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> *<a class=\"id\" href=\"#wqueue\">wqueue</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_writeable\">sock_writeable</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#SOCK_ASYNC_NOSPACE\">SOCK_ASYNC_NOSPACE</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wqueue\">wqueue</a> = <a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wqueue\">wqueue</a> && <a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(<a class=\"id\" href=\"#wqueue\">wqueue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_sync_poll\">wake_up_interruptible_sync_poll</a>(<a class=\"id\" href=\"#wqueue\">wqueue</a>, <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a> | <a class=\"id\" href=\"#POLLWRBAND\">POLLWRBAND</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#tun_sk\">tun_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#tun\">tun</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#fasync\">fasync</a>, <a class=\"id\" href=\"#SIGIO\">SIGIO</a>, <a class=\"id\" href=\"#POLL_OUT\">POLL_OUT</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tun_sock_destruct\">tun_sock_destruct</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_netdev\">free_netdev</a>(<a class=\"id\" href=\"#tun_sk\">tun_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tun_sendmsg\">tun_sendmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#total_len\">total_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a>, <a class=\"id\" href=\"#socket\">socket</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tun_get_user\">tun_get_user</a>(<a class=\"id\" href=\"#tun\">tun</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#msg_iov\">msg_iov</a>, <a class=\"id\" href=\"#total_len\">total_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#msg_flags\">msg_flags</a> &amp; <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tun_recvmsg\">tun_recvmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#total_len\">total_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a>, <a class=\"id\" href=\"#socket\">socket</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~(<a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>|<a class=\"id\" href=\"#MSG_TRUNC\">MSG_TRUNC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tun_do_read\">tun_do_read</a>(<a class=\"id\" href=\"#tun\">tun</a>, <a class=\"id\" href=\"#iocb\">iocb</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#msg_iov\">msg_iov</a>, <a class=\"id\" href=\"#total_len\">total_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; <a class=\"id\" href=\"#total_len\">total_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#msg_flags\">msg_flags</a> |= <a class=\"id\" href=\"#MSG_TRUNC\">MSG_TRUNC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_TRUNC\">MSG_TRUNC</a> ? <a class=\"id\" href=\"#ret\">ret</a> : <a class=\"id\" href=\"#total_len\">total_len</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Ops structure to mimic raw sockets with tun */</span>", 
"static const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#tun_socket_ops\">tun_socket_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a> = <a class=\"id\" href=\"#tun_sendmsg\">tun_sendmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a> = <a class=\"id\" href=\"#tun_recvmsg\">tun_recvmsg</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#proto\">proto</a> <a class=\"id\" href=\"#tun_proto\">tun_proto</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"tun\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#obj_size\">obj_size</a><span class=\"ts\"/>= sizeof(struct <a class=\"id\" href=\"#tun_sock\">tun_sock</a>),", 
"};", 
"", 
"static int <a class=\"id\" href=\"#tun_flags\">tun_flags</a>(struct <a class=\"id\" href=\"#tun_struct\">tun_struct</a> *<a class=\"id\" href=\"#tun\">tun</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_TUN_DEV\">TUN_TUN_DEV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_TUN\">IFF_TUN</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_TAP\">IFF_TAP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tun\">tun</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TUN_NO_PI\">TUN_NO_PI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_NO_PI\">IFF_NO_PI</a>;", 
];
xr_frag_insert('l/ad/809ce924eea17128b27f3d4f6fbdf8c577db04.xr', __xr_tmp);
