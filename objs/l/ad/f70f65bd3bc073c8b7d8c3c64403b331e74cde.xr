var __xr_tmp = [
"", 
"<span class=\"comment\">/* Don't add a printk in there. printk relies on the PDA which is not initialized </span>", 
"<span class=\"comment\">   yet. */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#clear_bss\">clear_bss</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#__bss_start\">__bss_start</a>, 0,", 
"<span class=\"ts\"/>       (unsigned long) <a class=\"id\" href=\"#__bss_stop\">__bss_stop</a> - (unsigned long) <a class=\"id\" href=\"#__bss_start\">__bss_start</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#copy_bootdata\">copy_bootdata</a>(char *<a class=\"id\" href=\"#real_mode_data\">real_mode_data</a>)", 
"{", 
"<span class=\"ts\"/>char * <a class=\"id\" href=\"#command_line\">command_line</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#boot_params\">boot_params</a>, <a class=\"id\" href=\"#real_mode_data\">real_mode_data</a>, sizeof <a class=\"id\" href=\"#boot_params\">boot_params</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#cmd_line_ptr\">cmd_line_ptr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#command_line\">command_line</a> = <a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#cmd_line_ptr\">cmd_line_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#boot_command_line\">boot_command_line</a>, <a class=\"id\" href=\"#command_line\">command_line</a>, <a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#x86_64_start_kernel\">x86_64_start_kernel</a>(char * <a class=\"id\" href=\"#real_mode_data\">real_mode_data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Build-time sanity checks on the kernel image and module</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * area mappings. (these are purely build-time and produce no code)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#MODULES_VADDR\">MODULES_VADDR</a> &lt; <a class=\"id\" href=\"#KERNEL_IMAGE_START\">KERNEL_IMAGE_START</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#MODULES_VADDR\">MODULES_VADDR</a>-<a class=\"id\" href=\"#KERNEL_IMAGE_START\">KERNEL_IMAGE_START</a> &lt; <a class=\"id\" href=\"#KERNEL_IMAGE_SIZE\">KERNEL_IMAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#MODULES_LEN\">MODULES_LEN</a> + <a class=\"id\" href=\"#KERNEL_IMAGE_SIZE\">KERNEL_IMAGE_SIZE</a> &gt; 2*<a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>((<a class=\"id\" href=\"#KERNEL_IMAGE_START\">KERNEL_IMAGE_START</a> &amp; ~<a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>) != 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>((<a class=\"id\" href=\"#MODULES_VADDR\">MODULES_VADDR</a> &amp; ~<a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>) != 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(!(<a class=\"id\" href=\"#MODULES_VADDR\">MODULES_VADDR</a> &gt; <a class=\"id\" href=\"#__START_KERNEL\">__START_KERNEL</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(!(((<a class=\"id\" href=\"#MODULES_END\">MODULES_END</a> - 1) &amp; <a class=\"id\" href=\"#PGDIR_MASK\">PGDIR_MASK</a>) ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#__START_KERNEL\">__START_KERNEL</a> &amp; <a class=\"id\" href=\"#PGDIR_MASK\">PGDIR_MASK</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#__fix_to_virt\">__fix_to_virt</a>(<a class=\"id\" href=\"#__end_of_fixed_addresses\">__end_of_fixed_addresses</a>) <= <a class=\"id\" href=\"#MODULES_END\">MODULES_END</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear bss before set_intr_gate with early_idt_handler */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bss\">clear_bss</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make NULL pointers segfault */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zap_identity_mappings\">zap_identity_mappings</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cleanup the over mapped high alias */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cleanup_highmap\">cleanup_highmap</a>();", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_EXCEPTION_VECTORS\">NUM_EXCEPTION_VECTORS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EARLY_PRINTK\">CONFIG_EARLY_PRINTK</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_intr_gate\">set_intr_gate</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#early_idt_handlers\">early_idt_handlers</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_intr_gate\">set_intr_gate</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#early_idt_handler\">early_idt_handler</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_idt\">load_idt</a>((const struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> *)&amp;<a class=\"id\" href=\"#idt_descr\">idt_descr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#console_loglevel\">console_loglevel</a> == 10)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_printk\">early_printk</a>(\"Kernel alive\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_64_start_reservations\">x86_64_start_reservations</a>(<a class=\"id\" href=\"#real_mode_data\">real_mode_data</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#x86_64_start_reservations\">x86_64_start_reservations</a>(char *<a class=\"id\" href=\"#real_mode_data\">real_mode_data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copy_bootdata\">copy_bootdata</a>(<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#real_mode_data\">real_mode_data</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#__pa_symbol\">__pa_symbol</a>(&amp;<a class=\"id\" href=\"#_text\">_text</a>), <a class=\"id\" href=\"#__pa_symbol\">__pa_symbol</a>(&amp;<a class=\"id\" href=\"#__bss_stop\">__bss_stop</a>), \"TEXT DATA BSS\");", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_DEV_INITRD\">CONFIG_BLK_DEV_INITRD</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Reserve INITRD */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#type_of_loader\">type_of_loader</a> && <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Assume only end is not page aligned */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>  = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ramdisk_end\">ramdisk_end</a>   = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> + <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>, <a class=\"id\" href=\"#ramdisk_end\">ramdisk_end</a>, \"RAMDISK\");", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_ebda_region\">reserve_ebda_region</a>();", 
];
xr_frag_insert('l/ad/f70f65bd3bc073c8b7d8c3c64403b331e74cde.xr', __xr_tmp);
