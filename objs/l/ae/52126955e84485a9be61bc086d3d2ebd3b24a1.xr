var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * xen console driver interface to hvc_console.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (c) 2007 Gerd Hoffmann &lt;kraxel@suse.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#hypervisor\">hypervisor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#xen\">xen</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#events\">events</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#io\">io</a>/<a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#hvc\">hvc</a>-<a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"hvc_console.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HVC_COOKIE\">HVC_COOKIE</a>   0x58656e <span class=\"comment\">/* \"Xen\" in hex */</span>", 
"", 
"static struct <a class=\"id\" href=\"#hvc_struct\">hvc_struct</a> *<a class=\"id\" href=\"#hvc\">hvc</a>;", 
"static int <a class=\"id\" href=\"#xencons_irq\">xencons_irq</a>;", 
"", 
"<span class=\"comment\">/* ------------------------------------------------------------------ */</span>", 
"", 
"static unsigned long <a class=\"id\" href=\"#console_pfn\">console_pfn</a> = ~0ul;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#xencons_interface\">xencons_interface</a> *<a class=\"id\" href=\"#xencons_interface\">xencons_interface</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#console_pfn\">console_pfn</a> == ~0ul)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mfn_to_virt\">mfn_to_virt</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#domU\">domU</a>.<a class=\"id\" href=\"#mfn\">mfn</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#console_pfn\">console_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#notify_daemon\">notify_daemon</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Use evtchn: this is called early, before irq is set up. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#notify_remote_via_evtchn\">notify_remote_via_evtchn</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#domU\">domU</a>.<a class=\"id\" href=\"#evtchn\">evtchn</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__write_console\">__write_console</a>(const char *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xencons_interface\">xencons_interface</a> *<a class=\"id\" href=\"#intf\">intf</a> = <a class=\"id\" href=\"#xencons_interface\">xencons_interface</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XENCONS_RING_IDX\">XENCONS_RING_IDX</a> <a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#prod\">prod</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sent\">sent</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cons\">cons</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#out_cons\">out_cons</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prod\">prod</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#out_prod\">out_prod</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mb\">mb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update queue values before going on */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>((<a class=\"id\" href=\"#prod\">prod</a> - <a class=\"id\" href=\"#cons\">cons</a>) &gt; sizeof(<a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#out\">out</a>));", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#sent\">sent</a> &lt; <a class=\"id\" href=\"#len\">len</a>) && ((<a class=\"id\" href=\"#prod\">prod</a> - <a class=\"id\" href=\"#cons\">cons</a>) &lt; sizeof(<a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#out\">out</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#out\">out</a>[<a class=\"id\" href=\"#MASK_XENCONS_IDX\">MASK_XENCONS_IDX</a>(<a class=\"id\" href=\"#prod\">prod</a>++, <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#out\">out</a>)] = <a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#sent\">sent</a>++];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* write ring before updating pointer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#out_prod\">out_prod</a> = <a class=\"id\" href=\"#prod\">prod</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#notify_daemon\">notify_daemon</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sent\">sent</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#write_console\">write_console</a>(<a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#vtermno\">vtermno</a>, const char *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure the whole buffer is emitted, polling if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * necessary.  We don't ever want to rely on the hvc daemon</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because the most interesting console output is when the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * kernel is crippled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#sent\">sent</a> = <a class=\"id\" href=\"#__write_console\">__write_console</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#sent\">sent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#sent\">sent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#HYPERVISOR_sched_op\">HYPERVISOR_sched_op</a>(<a class=\"id\" href=\"#SCHEDOP_yield\">SCHEDOP_yield</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#read_console\">read_console</a>(<a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#vtermno\">vtermno</a>, char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xencons_interface\">xencons_interface</a> *<a class=\"id\" href=\"#intf\">intf</a> = <a class=\"id\" href=\"#xencons_interface\">xencons_interface</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XENCONS_RING_IDX\">XENCONS_RING_IDX</a> <a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#prod\">prod</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#recv\">recv</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cons\">cons</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#in_cons\">in_cons</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prod\">prod</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#in_prod\">in_prod</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mb\">mb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get pointers before reading ring */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>((<a class=\"id\" href=\"#prod\">prod</a> - <a class=\"id\" href=\"#cons\">cons</a>) &gt; sizeof(<a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#in\">in</a>));", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#cons\">cons</a> != <a class=\"id\" href=\"#prod\">prod</a> && <a class=\"id\" href=\"#recv\">recv</a> &lt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#recv\">recv</a>++] = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#in\">in</a>[<a class=\"id\" href=\"#MASK_XENCONS_IDX\">MASK_XENCONS_IDX</a>(<a class=\"id\" href=\"#cons\">cons</a>++, <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#in\">in</a>)];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mb\">mb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* read ring before consuming */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#in_cons\">in_cons</a> = <a class=\"id\" href=\"#cons\">cons</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#notify_daemon\">notify_daemon</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#recv\">recv</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#hv_ops\">hv_ops</a> <a class=\"id\" href=\"#hvc_ops\">hvc_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_chars\">get_chars</a> = <a class=\"id\" href=\"#read_console\">read_console</a>,", 
];
xr_frag_insert('l/ae/52126955e84485a9be61bc086d3d2ebd3b24a1.xr', __xr_tmp);
