var __xr_tmp = [
"<span class=\"comment\"> *<span class=\"ts\"/> + \"auto\\n\" to allow the device to be power managed at run time;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> + \"on\\n\" to prevent the device from being power managed at run time;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The default for all devices is \"auto\", which means that devices may be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>subject to automatic power management, depending on their drivers.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Changing this attribute to \"on\" prevents the driver from power managing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the device at run time.  Doing that while the device is suspended causes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>it to be woken up.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>wakeup - Report/change current wakeup option for device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Some devices support \"wakeup\" events, which are hardware signals</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>used to activate devices from suspended or low power states.  Such</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>devices have one of three values for the sysfs power/wakeup file:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> + \"enabled\\n\" to issue the events;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> + \"disabled\\n\" not to do so; or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> + \"\\n\" for temporary or permanent inability to issue wakeup.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(For example, unconfigured USB devices can't issue wakeups.)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Familiar examples of devices that can issue wakeup events include</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>keyboards and mice (both PS2 and USB styles), power buttons, modems,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>\"Wake-On-LAN\" Ethernet links, GPIO lines, and more.  Some events</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>will wake the entire system from a suspend state; others may just</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>wake up the device (if the system as a whole is already active).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Some wakeup events use normal IRQ lines; other use special out</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of band signaling.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It is the responsibility of device drivers to enable (or disable)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>wakeup signaling as part of changing device power states, respecting</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the policy choices provided through the driver model.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Devices may not be able to generate wakeup events from all power</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>states.  Also, the events may be ignored in some configurations;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for example, they might need help from other devices that aren't</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>active, or which may have wakeup disabled.  Some drivers rely on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>wakeup events internally (unless they are disabled), keeping</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>their hardware in low power modes whenever they're unused.  This</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>saves runtime power, without requiring system-wide sleep states.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>async - Report/change current async suspend setting for the device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Asynchronous suspend and resume of the device during system-wide power</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>state transitions can be enabled by writing \"enabled\" to this file.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Analogously, if \"disabled\" is written to this file, the device will be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>suspended and resumed synchronously.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>All devices have one of the following two values for power/async:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> + \"enabled\\n\" to permit the asynchronous suspend/resume of the device;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> + \"disabled\\n\" to forbid it;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NOTE: It generally is unsafe to permit the asynchronous suspend/resume</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of a device unless it is certain that all of the PM dependencies of the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device are known to the PM core.  However, for some devices this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>attribute is set to \"enabled\" by bus type code or device drivers and in</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that cases it should be safe to leave the default value.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>wakeup_count - Report the number of wakeup events related to the device</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static const char <a class=\"id\" href=\"#enabled\">enabled</a>[] = \"enabled\";", 
"static const char <a class=\"id\" href=\"#disabled\">disabled</a>[] = \"disabled\";", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_RUNTIME\">CONFIG_PM_RUNTIME</a>", 
"static const char <a class=\"id\" href=\"#ctrl_auto\">ctrl_auto</a>[] = \"auto\";", 
"static const char <a class=\"id\" href=\"#ctrl_on\">ctrl_on</a>[] = \"on\";", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#control_show\">control_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#runtime_auto\">runtime_auto</a> ? <a class=\"id\" href=\"#ctrl_auto\">ctrl_auto</a> : <a class=\"id\" href=\"#ctrl_on\">ctrl_on</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#control_store\">control_store</a>(struct <a class=\"id\" href=\"#device\">device</a> * <a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const char * <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#cp\">cp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#memchr\">memchr</a>(<a class=\"id\" href=\"#buf\">buf</a>, '\\n', <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cp\">cp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#cp\">cp</a> - <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == sizeof <a class=\"id\" href=\"#ctrl_auto\">ctrl_auto</a> - 1 && <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#ctrl_auto\">ctrl_auto</a>, <a class=\"id\" href=\"#len\">len</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_allow\">pm_runtime_allow</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#len\">len</a> == sizeof <a class=\"id\" href=\"#ctrl_on\">ctrl_on</a> - 1 && <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#ctrl_on\">ctrl_on</a>, <a class=\"id\" href=\"#len\">len</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_forbid\">pm_runtime_forbid</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#control\">control</a>, 0644, <a class=\"id\" href=\"#control_show\">control_show</a>, <a class=\"id\" href=\"#control_store\">control_store</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rtpm_active_time_show\">rtpm_active_time_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_pm_runtime_accounting\">update_pm_runtime_accounting</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%i\\n\", <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#active_jiffies\">active_jiffies</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#runtime_active_time\">runtime_active_time</a>, 0444, <a class=\"id\" href=\"#rtpm_active_time_show\">rtpm_active_time_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rtpm_suspended_time_show\">rtpm_suspended_time_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_pm_runtime_accounting\">update_pm_runtime_accounting</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%i\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#suspended_jiffies\">suspended_jiffies</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#runtime_suspended_time\">runtime_suspended_time</a>, 0444, <a class=\"id\" href=\"#rtpm_suspended_time_show\">rtpm_suspended_time_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rtpm_status_show\">rtpm_status_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#runtime_error\">runtime_error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = \"error\\n\";", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#disable_depth\">disable_depth</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = \"unsupported\\n\";", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#runtime_status\">runtime_status</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RPM_SUSPENDED\">RPM_SUSPENDED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = \"suspended\\n\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RPM_SUSPENDING\">RPM_SUSPENDING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = \"suspending\\n\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RPM_RESUMING\">RPM_RESUMING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = \"resuming\\n\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RPM_ACTIVE\">RPM_ACTIVE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = \"active\\n\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#runtime_status\">runtime_status</a>, 0444, <a class=\"id\" href=\"#rtpm_status_show\">rtpm_status_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#wake_show\">wake_show</a>(struct <a class=\"id\" href=\"#device\">device</a> * <a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char * <a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%s\\n\", <a class=\"id\" href=\"#device_can_wakeup\">device_can_wakeup</a>(<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>? (<a class=\"id\" href=\"#device_may_wakeup\">device_may_wakeup</a>(<a class=\"id\" href=\"#dev\">dev</a>) ? <a class=\"id\" href=\"#enabled\">enabled</a> : <a class=\"id\" href=\"#disabled\">disabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>: \"\");", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#wake_store\">wake_store</a>(struct <a class=\"id\" href=\"#device\">device</a> * <a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#cp\">cp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#device_can_wakeup\">device_can_wakeup</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#memchr\">memchr</a>(<a class=\"id\" href=\"#buf\">buf</a>, '\\n', <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cp\">cp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#cp\">cp</a> - <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == sizeof <a class=\"id\" href=\"#enabled\">enabled</a> - 1", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#enabled\">enabled</a>, sizeof <a class=\"id\" href=\"#enabled\">enabled</a> - 1) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_set_wakeup_enable\">device_set_wakeup_enable</a>(<a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#len\">len</a> == sizeof <a class=\"id\" href=\"#disabled\">disabled</a> - 1", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#disabled\">disabled</a>, sizeof <a class=\"id\" href=\"#disabled\">disabled</a> - 1) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_set_wakeup_enable\">device_set_wakeup_enable</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#wakeup\">wakeup</a>, 0644, <a class=\"id\" href=\"#wake_show\">wake_show</a>, <a class=\"id\" href=\"#wake_store\">wake_store</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_SLEEP\">CONFIG_PM_SLEEP</a>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#wakeup_count_show\">wakeup_count_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%lu\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#wakeup_count\">wakeup_count</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#wakeup_count\">wakeup_count</a>, 0444, <a class=\"id\" href=\"#wakeup_count_show\">wakeup_count_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_ADVANCED_DEBUG\">CONFIG_PM_ADVANCED_DEBUG</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_RUNTIME\">CONFIG_PM_RUNTIME</a>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rtpm_usagecount_show\">rtpm_usagecount_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#usage_count\">usage_count</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rtpm_children_show\">rtpm_children_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#ignore_children\">ignore_children</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/>0 : <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#child_count\">child_count</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rtpm_enabled_show\">rtpm_enabled_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#disable_depth\">disable_depth</a>) && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#runtime_auto\">runtime_auto</a> == <a class=\"id\" href=\"#false\">false</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"disabled & forbidden\\n\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#disable_depth\">disable_depth</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"disabled\\n\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#runtime_auto\">runtime_auto</a> == <a class=\"id\" href=\"#false\">false</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"forbidden\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"enabled\\n\");", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#runtime_usage\">runtime_usage</a>, 0444, <a class=\"id\" href=\"#rtpm_usagecount_show\">rtpm_usagecount_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#runtime_active_kids\">runtime_active_kids</a>, 0444, <a class=\"id\" href=\"#rtpm_children_show\">rtpm_children_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#runtime_enabled\">runtime_enabled</a>, 0444, <a class=\"id\" href=\"#rtpm_enabled_show\">rtpm_enabled_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#async_show\">async_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_async_suspend_enabled\">device_async_suspend_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>) ? <a class=\"id\" href=\"#enabled\">enabled</a> : <a class=\"id\" href=\"#disabled\">disabled</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#async_store\">async_store</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#cp\">cp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#memchr\">memchr</a>(<a class=\"id\" href=\"#buf\">buf</a>, '\\n', <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cp\">cp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#cp\">cp</a> - <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == sizeof <a class=\"id\" href=\"#enabled\">enabled</a> - 1 && <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#enabled\">enabled</a>, <a class=\"id\" href=\"#len\">len</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_enable_async_suspend\">device_enable_async_suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#len\">len</a> == sizeof <a class=\"id\" href=\"#disabled\">disabled</a> - 1 && <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#disabled\">disabled</a>, <a class=\"id\" href=\"#len\">len</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_disable_async_suspend\">device_disable_async_suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#async\">async</a>, 0644, <a class=\"id\" href=\"#async_show\">async_show</a>, <a class=\"id\" href=\"#async_store\">async_store</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PM_ADVANCED_DEBUG */</span>", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> * <a class=\"id\" href=\"#power_attrs\">power_attrs</a>[] = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_RUNTIME\">CONFIG_PM_RUNTIME</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_control\">dev_attr_control</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_runtime_status\">dev_attr_runtime_status</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_runtime_suspended_time\">dev_attr_runtime_suspended_time</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_runtime_active_time\">dev_attr_runtime_active_time</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_wakeup\">dev_attr_wakeup</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_SLEEP\">CONFIG_PM_SLEEP</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_wakeup_count\">dev_attr_wakeup_count</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_ADVANCED_DEBUG\">CONFIG_PM_ADVANCED_DEBUG</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_async\">dev_attr_async</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_RUNTIME\">CONFIG_PM_RUNTIME</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_runtime_usage\">dev_attr_runtime_usage</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_runtime_active_kids\">dev_attr_runtime_active_kids</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_runtime_enabled\">dev_attr_runtime_enabled</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"};", 
"static struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> <a class=\"id\" href=\"#pm_attr_group\">pm_attr_group</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"power\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attrs\">attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#power_attrs\">power_attrs</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#dpm_sysfs_add\">dpm_sysfs_add</a>(struct <a class=\"id\" href=\"#device\">device</a> * <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sysfs_create_group\">sysfs_create_group</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#pm_attr_group\">pm_attr_group</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#dpm_sysfs_remove\">dpm_sysfs_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> * <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#pm_attr_group\">pm_attr_group</a>);", 
"}", 
];
xr_frag_insert('l/ae/60ad66656dc1252ef6f28dd9d44e9988c3c0de.xr', __xr_tmp);
