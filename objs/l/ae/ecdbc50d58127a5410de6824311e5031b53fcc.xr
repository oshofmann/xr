var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> &= ~<a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_mask_rtc_irq_bit\">hpet_mask_rtc_irq_bit</a>(<a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: resume, ctrl %02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a>.<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#cmos_suspend\">cmos_suspend</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#cmos_resume\">cmos_resume</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cmos_poweroff\">cmos_poweroff</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*----------------------------------------------------------------*/</span>", 
"", 
"<span class=\"comment\">/* On non-x86 systems, a \"CMOS\" RTC lives most naturally on platform_bus.</span>", 
"<span class=\"comment\"> * ACPI systems always list these as PNPACPI devices, and pre-ACPI PCs</span>", 
"<span class=\"comment\"> * probably list them in similar PNPBIOS tables; so PNP is more common.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We don't use legacy \"poke at the hardware\" probing.  Ancient PCs that</span>", 
"<span class=\"comment\"> * predate even PNPBIOS should set up platform_bus devices.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_ACPI\">CONFIG_ACPI</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rtc_handler\">rtc_handler</a>(void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_clear_event\">acpi_clear_event</a>(<a class=\"id\" href=\"#ACPI_EVENT_RTC\">ACPI_EVENT_RTC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_disable_event\">acpi_disable_event</a>(<a class=\"id\" href=\"#ACPI_EVENT_RTC\">ACPI_EVENT_RTC</a>, 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ACPI_INTERRUPT_HANDLED\">ACPI_INTERRUPT_HANDLED</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rtc_wake_setup\">rtc_wake_setup</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_install_fixed_event_handler\">acpi_install_fixed_event_handler</a>(<a class=\"id\" href=\"#ACPI_EVENT_RTC\">ACPI_EVENT_RTC</a>, <a class=\"id\" href=\"#rtc_handler\">rtc_handler</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * After the RTC handler is installed, the Fixed_RTC event should</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be disabled. Only when the RTC alarm is set will it be enabled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_clear_event\">acpi_clear_event</a>(<a class=\"id\" href=\"#ACPI_EVENT_RTC\">ACPI_EVENT_RTC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_disable_event\">acpi_disable_event</a>(<a class=\"id\" href=\"#ACPI_EVENT_RTC\">ACPI_EVENT_RTC</a>, 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rtc_wake_on\">rtc_wake_on</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_clear_event\">acpi_clear_event</a>(<a class=\"id\" href=\"#ACPI_EVENT_RTC\">ACPI_EVENT_RTC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_enable_event\">acpi_enable_event</a>(<a class=\"id\" href=\"#ACPI_EVENT_RTC\">ACPI_EVENT_RTC</a>, 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rtc_wake_off\">rtc_wake_off</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_disable_event\">acpi_disable_event</a>(<a class=\"id\" href=\"#ACPI_EVENT_RTC\">ACPI_EVENT_RTC</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/* Every ACPI platform has a mc146818 compatible \"cmos rtc\".  Here we find</span>", 
"<span class=\"comment\"> * its device node and pass extra config data.  This helps its driver use</span>", 
"<span class=\"comment\"> * capabilities that the now-obsolete mc146818 didn't have, and informs it</span>", 
"<span class=\"comment\"> * that this board's RTC is wakeup-capable (per ACPI spec).</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#cmos_rtc_board_info\">cmos_rtc_board_info</a> <a class=\"id\" href=\"#acpi_rtc_info\">acpi_rtc_info</a>;", 
"", 
"static void <a class=\"id\" href=\"#__devinit\">__devinit</a>", 
"<a class=\"id\" href=\"#cmos_wake_setup\">cmos_wake_setup</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_wake_setup\">rtc_wake_setup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_rtc_info\">acpi_rtc_info</a>.<a class=\"id\" href=\"#wake_on\">wake_on</a> = <a class=\"id\" href=\"#rtc_wake_on\">rtc_wake_on</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_rtc_info\">acpi_rtc_info</a>.<a class=\"id\" href=\"#wake_off\">wake_off</a> = <a class=\"id\" href=\"#rtc_wake_off\">rtc_wake_off</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* workaround bug in some ACPI tables */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#month_alarm\">month_alarm</a> && !<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#day_alarm\">day_alarm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"bogus FADT month_alarm (%d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#month_alarm\">month_alarm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#month_alarm\">month_alarm</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_rtc_info\">acpi_rtc_info</a>.<a class=\"id\" href=\"#rtc_day_alarm\">rtc_day_alarm</a> = <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#day_alarm\">day_alarm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_rtc_info\">acpi_rtc_info</a>.<a class=\"id\" href=\"#rtc_mon_alarm\">rtc_mon_alarm</a> = <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#month_alarm\">month_alarm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_rtc_info\">acpi_rtc_info</a>.<a class=\"id\" href=\"#rtc_century\">rtc_century</a> = <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#century\">century</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE:  S4_RTC_WAKE is NOT currently useful to Linux */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_FADT_S4_RTC_WAKE\">ACPI_FADT_S4_RTC_WAKE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"RTC can wake from S4\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#platform_data\">platform_data</a> = &amp;<a class=\"id\" href=\"#acpi_rtc_info\">acpi_rtc_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RTC always wakes from S1/S2/S3, and often S4/STD */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_init_wakeup\">device_init_wakeup</a>(<a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"}", 
"", 
"#else", 
"", 
"static void <a class=\"id\" href=\"#__devinit\">__devinit</a>", 
"<a class=\"id\" href=\"#cmos_wake_setup\">cmos_wake_setup</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_PNP\">CONFIG_PNP</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pnp\">pnp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#__devinit\">__devinit</a>", 
"<a class=\"id\" href=\"#cmos_pnp_probe\">cmos_pnp_probe</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#pnp\">pnp</a>, const struct <a class=\"id\" href=\"#pnp_device_id\">pnp_device_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_wake_setup\">cmos_wake_setup</a>(&amp;<a class=\"id\" href=\"#pnp\">pnp</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_port_start\">pnp_port_start</a>(<a class=\"id\" href=\"#pnp\">pnp</a>,0) == 0x70 && !<a class=\"id\" href=\"#pnp_irq_valid\">pnp_irq_valid</a>(<a class=\"id\" href=\"#pnp\">pnp</a>,0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Some machines contain a PNP entry for the RTC, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * don't define the IRQ. It should always be safe to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hardcode it in these cases</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cmos_do_probe\">cmos_do_probe</a>(&amp;<a class=\"id\" href=\"#pnp\">pnp</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_get_resource\">pnp_get_resource</a>(<a class=\"id\" href=\"#pnp\">pnp</a>, <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>, 0), 8);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cmos_do_probe\">cmos_do_probe</a>(&amp;<a class=\"id\" href=\"#pnp\">pnp</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_get_resource\">pnp_get_resource</a>(<a class=\"id\" href=\"#pnp\">pnp</a>, <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>, 0),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_irq\">pnp_irq</a>(<a class=\"id\" href=\"#pnp\">pnp</a>, 0));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#cmos_pnp_remove\">cmos_pnp_remove</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#pnp\">pnp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_do_remove\">cmos_do_remove</a>(&amp;<a class=\"id\" href=\"#pnp\">pnp</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"", 
"static int <a class=\"id\" href=\"#cmos_pnp_suspend\">cmos_pnp_suspend</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#pnp\">pnp</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#mesg\">mesg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmos_suspend\">cmos_suspend</a>(&amp;<a class=\"id\" href=\"#pnp\">pnp</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#mesg\">mesg</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cmos_pnp_resume\">cmos_pnp_resume</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#pnp\">pnp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmos_resume\">cmos_resume</a>(&amp;<a class=\"id\" href=\"#pnp\">pnp</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#cmos_pnp_suspend\">cmos_pnp_suspend</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#cmos_pnp_resume\">cmos_pnp_resume</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#cmos_pnp_shutdown\">cmos_pnp_shutdown</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#pnp\">pnp</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#system_state\">system_state</a> == <a class=\"id\" href=\"#SYSTEM_POWER_OFF\">SYSTEM_POWER_OFF</a> && !<a class=\"id\" href=\"#cmos_poweroff\">cmos_poweroff</a>(&amp;<a class=\"id\" href=\"#pnp\">pnp</a>-><a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_do_shutdown\">cmos_do_shutdown</a>();", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#pnp_device_id\">pnp_device_id</a> <a class=\"id\" href=\"#rtc_ids\">rtc_ids</a>[] = {", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#id\">id</a> = \"PNP0b00\", },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#id\">id</a> = \"PNP0b01\", },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#id\">id</a> = \"PNP0b02\", },", 
"<span class=\"ts\"/>{ },", 
"};", 
"<a class=\"id\" href=\"#MODULE_DEVICE_TABLE\">MODULE_DEVICE_TABLE</a>(<a class=\"id\" href=\"#pnp\">pnp</a>, <a class=\"id\" href=\"#rtc_ids\">rtc_ids</a>);", 
"", 
"static struct <a class=\"id\" href=\"#pnp_driver\">pnp_driver</a> <a class=\"id\" href=\"#cmos_pnp_driver\">cmos_pnp_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= (char *) <a class=\"id\" href=\"#driver_name\">driver_name</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a><span class=\"ts\"/>= <a class=\"id\" href=\"#rtc_ids\">rtc_ids</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_pnp_probe\">cmos_pnp_probe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#__exit_p\">__exit_p</a>(<a class=\"id\" href=\"#cmos_pnp_remove\">cmos_pnp_remove</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_pnp_shutdown\">cmos_pnp_shutdown</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* flag ensures resume() gets called, and stops syslog spam */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PNP_DRIVER_RES_DO_NOT_CHANGE\">PNP_DRIVER_RES_DO_NOT_CHANGE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_pnp_suspend\">cmos_pnp_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_pnp_resume\">cmos_pnp_resume</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_PNP */</span>", 
"", 
"<span class=\"comment\">/*----------------------------------------------------------------*/</span>", 
"", 
"<span class=\"comment\">/* Platform setup should have set up an RTC device, when PNP is</span>", 
"<span class=\"comment\"> * unavailable ... this could happen even on (older) PCs.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#cmos_platform_probe\">cmos_platform_probe</a>(struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_wake_setup\">cmos_wake_setup</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmos_do_probe\">cmos_do_probe</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#platform_get_resource\">platform_get_resource</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>, 0),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#platform_get_irq\">platform_get_irq</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#cmos_platform_remove\">cmos_platform_remove</a>(struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_do_remove\">cmos_do_remove</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cmos_platform_shutdown\">cmos_platform_shutdown</a>(struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#system_state\">system_state</a> == <a class=\"id\" href=\"#SYSTEM_POWER_OFF\">SYSTEM_POWER_OFF</a> && !<a class=\"id\" href=\"#cmos_poweroff\">cmos_poweroff</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_do_shutdown\">cmos_do_shutdown</a>();", 
"}", 
"", 
"<span class=\"comment\">/* work with hotplug and coldplug */</span>", 
"<a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"platform:rtc_cmos\");", 
"", 
"static struct <a class=\"id\" href=\"#platform_driver\">platform_driver</a> <a class=\"id\" href=\"#cmos_platform_driver\">cmos_platform_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#__exit_p\">__exit_p</a>(<a class=\"id\" href=\"#cmos_platform_remove\">cmos_platform_remove</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_platform_shutdown\">cmos_platform_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#driver\">driver</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= (char *) <a class=\"id\" href=\"#driver_name\">driver_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_suspend\">cmos_suspend</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_resume\">cmos_resume</a>,", 
"<span class=\"ts\"/>}", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PNP\">CONFIG_PNP</a>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#pnp_driver_registered\">pnp_driver_registered</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#platform_driver_registered\">platform_driver_registered</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#cmos_init\">cmos_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_PNP\">CONFIG_PNP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#pnp_register_driver\">pnp_register_driver</a>(&amp;<a class=\"id\" href=\"#cmos_pnp_driver\">cmos_pnp_driver</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_driver_registered\">pnp_driver_registered</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a>.<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#platform_driver_probe\">platform_driver_probe</a>(&amp;<a class=\"id\" href=\"#cmos_platform_driver\">cmos_platform_driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#cmos_platform_probe\">cmos_platform_probe</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#platform_driver_registered\">platform_driver_registered</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_PNP\">CONFIG_PNP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_driver_registered\">pnp_driver_registered</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_unregister_driver\">pnp_unregister_driver</a>(&amp;<a class=\"id\" href=\"#cmos_pnp_driver\">cmos_pnp_driver</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#cmos_init\">cmos_init</a>);", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#cmos_exit\">cmos_exit</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_PNP\">CONFIG_PNP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_driver_registered\">pnp_driver_registered</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_unregister_driver\">pnp_unregister_driver</a>(&amp;<a class=\"id\" href=\"#cmos_pnp_driver\">cmos_pnp_driver</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#platform_driver_registered\">platform_driver_registered</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#platform_driver_unregister\">platform_driver_unregister</a>(&amp;<a class=\"id\" href=\"#cmos_platform_driver\">cmos_platform_driver</a>);", 
"}", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#cmos_exit\">cmos_exit</a>);", 
"", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"David Brownell\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Driver for PC-style 'CMOS' RTCs\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/ae/ecdbc50d58127a5410de6824311e5031b53fcc.xr', __xr_tmp);
