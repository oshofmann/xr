var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* just a race with rename */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unroll_tree_refs\">unroll_tree_refs</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_chunk\">audit_put_chunk</a>(<a class=\"id\" href=\"#drop\">drop</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#grow_tree_refs\">grow_tree_refs</a>(<a class=\"id\" href=\"#context\">context</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* OK, got more space */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unroll_tree_refs\">unroll_tree_refs</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* too bad */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"out of memory, audit has lost a tree reference\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unroll_tree_refs\">unroll_tree_refs</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_set_auditable\">audit_set_auditable</a>(<a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_getname - add a name to the list</span>", 
"<span class=\"comment\"> * @name: name to add</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Add a name to the list of audit names for this context.</span>", 
"<span class=\"comment\"> * Called from fs/namei.c:getname().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__audit_getname\">__audit_getname</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#name\">name</a>) || !<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>) {", 
"#if <a class=\"id\" href=\"#AUDIT_DEBUG\">AUDIT_DEBUG</a> == 2", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s:%d(:%d): ignoring getname(%p)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__FILE__\">__FILE__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a> >= <a class=\"id\" href=\"#AUDIT_NAMES\">AUDIT_NAMES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>].<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>].<a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#AUDIT_NAME_FULL\">AUDIT_NAME_FULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>].<a class=\"id\" href=\"#name_put\">name_put</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>].<a class=\"id\" href=\"#ino\">ino</a>  = (unsigned long)-1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>].<a class=\"id\" href=\"#osid\">osid</a> = 0;", 
"<span class=\"ts\"/>++<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pwd\">pwd</a>.<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_fs_pwd\">get_fs_pwd</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#fs\">fs</a>, &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pwd\">pwd</a>);", 
"}", 
"", 
"<span class=\"comment\">/* audit_putname - intercept a putname request</span>", 
"<span class=\"comment\"> * @name: name to intercept and delay for putname</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If we have stored the name from getname in the audit context,</span>", 
"<span class=\"comment\"> * then we delay the putname until syscall exit.</span>", 
"<span class=\"comment\"> * Called from include/linux/fs.h:putname().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#audit_putname\">audit_putname</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>) {", 
"#if <a class=\"id\" href=\"#AUDIT_DEBUG\">AUDIT_DEBUG</a> == 2", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s:%d(:%d): __putname(%p)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__FILE__\">__FILE__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"name[%d] = %p = %s\\n\", <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> ?: \"(null)\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__putname\">__putname</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"#if <a class=\"id\" href=\"#AUDIT_DEBUG\">AUDIT_DEBUG</a>", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#put_count\">put_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#put_count\">put_count</a> &gt; <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s:%d(:%d): major=%d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" in_syscall=%d putname(%p) name_count=%d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" put_count=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__FILE__\">__FILE__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#major\">major</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#put_count\">put_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#audit_inc_name_count\">audit_inc_name_count</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a> >= <a class=\"id\" href=\"#AUDIT_NAMES\">AUDIT_NAMES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"audit: name_count maxed, losing inode data: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"dev=%02x:%02x, inode=%lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_dev\">s_dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_dev\">s_dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"name_count maxed, losing inode data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>++;", 
"#if <a class=\"id\" href=\"#AUDIT_DEBUG\">AUDIT_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ino_count\">ino_count</a>++;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#audit_copy_fcaps\">audit_copy_fcaps</a>(struct <a class=\"id\" href=\"#audit_names\">audit_names</a> *<a class=\"id\" href=\"#name\">name</a>, const struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_vfs_cap_data\">cpu_vfs_cap_data</a> <a class=\"id\" href=\"#caps\">caps</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#permitted\">permitted</a>, 0, sizeof(<a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a>, 0, sizeof(<a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#fE\">fE</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap_ver\">fcap_ver</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#get_vfs_caps_from_disk\">get_vfs_caps_from_disk</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#caps\">caps</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#permitted\">permitted</a> = <a class=\"id\" href=\"#caps\">caps</a>.<a class=\"id\" href=\"#permitted\">permitted</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a> = <a class=\"id\" href=\"#caps\">caps</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#fE\">fE</a> = !!(<a class=\"id\" href=\"#caps\">caps</a>.<a class=\"id\" href=\"#magic_etc\">magic_etc</a> &amp; <a class=\"id\" href=\"#VFS_CAP_FLAGS_EFFECTIVE\">VFS_CAP_FLAGS_EFFECTIVE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap_ver\">fcap_ver</a> = (<a class=\"id\" href=\"#caps\">caps</a>.<a class=\"id\" href=\"#magic_etc\">magic_etc</a> &amp; <a class=\"id\" href=\"#VFS_CAP_REVISION_MASK\">VFS_CAP_REVISION_MASK</a>) >> <a class=\"id\" href=\"#VFS_CAP_REVISION_SHIFT\">VFS_CAP_REVISION_SHIFT</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Copy inode data into an audit_names. */</span>", 
"static void <a class=\"id\" href=\"#audit_copy_inode\">audit_copy_inode</a>(struct <a class=\"id\" href=\"#audit_names\">audit_names</a> *<a class=\"id\" href=\"#name\">name</a>, const struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#ino\">ino</a>   = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#dev\">dev</a>   = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_dev\">s_dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#mode\">mode</a>  = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#uid\">uid</a>   = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#gid\">gid</a>   = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#rdev\">rdev</a>  = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_rdev\">i_rdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_inode_getsecid\">security_inode_getsecid</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#osid\">osid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_copy_fcaps\">audit_copy_fcaps</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_inode - store the inode and device from a lookup</span>", 
"<span class=\"comment\"> * @name: name being audited</span>", 
"<span class=\"comment\"> * @dentry: dentry being audited</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called from fs/namei.c:path_lookup().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__audit_inode\">__audit_inode</a>(const char *<a class=\"id\" href=\"#name\">name</a>, const struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>-1].<a class=\"id\" href=\"#name\">name</a>", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>-1].<a class=\"id\" href=\"#name\">name</a> == <a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a> - 1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a> &gt; 1", 
"<span class=\"ts\"/><span class=\"ts\"/> && <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>-2].<a class=\"id\" href=\"#name\">name</a>", 
"<span class=\"ts\"/><span class=\"ts\"/> && <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>-2].<a class=\"id\" href=\"#name\">name</a> == <a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a> - 2;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIXME: how much do we care about inodes that have no</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * associated name? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_inc_name_count\">audit_inc_name_count</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_path\">handle_path</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_copy_inode\">audit_copy_inode</a>(&amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>], <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_inode_child - collect inode info for created/removed objects</span>", 
"<span class=\"comment\"> * @dentry: dentry being audited</span>", 
"<span class=\"comment\"> * @parent: inode of dentry parent</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For syscalls that create or remove filesystem objects, audit_inode</span>", 
"<span class=\"comment\"> * can only collect information for the filesystem object's parent.</span>", 
"<span class=\"comment\"> * This call updates the audit context with the child's information.</span>", 
"<span class=\"comment\"> * Syscalls that create a new filesystem object must be hooked after</span>", 
"<span class=\"comment\"> * the object is created.  Syscalls that remove a filesystem object</span>", 
"<span class=\"comment\"> * must be hooked prior, in order to capture the target inode during</span>", 
"<span class=\"comment\"> * unsuccessful attempts.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__audit_inode_child\">__audit_inode_child</a>(const struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#found_parent\">found_parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#found_child\">found_child</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#dname\">dname</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dirlen\">dirlen</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle_one\">handle_one</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* parent is more likely, look for it first */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#idx\">idx</a> = 0; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#idx\">idx</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_names\">audit_names</a> *<a class=\"id\" href=\"#n\">n</a> = &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#ino\">ino</a> == <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#audit_compare_dname_path\">audit_compare_dname_path</a>(<a class=\"id\" href=\"#dname\">dname</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#dirlen\">dirlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#dirlen\">dirlen</a>; <span class=\"comment\">/* update parent data in place */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found_parent\">found_parent</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#add_names\">add_names</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* no matching parent, look for matching child */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#idx\">idx</a> = 0; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#idx\">idx</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_names\">audit_names</a> *<a class=\"id\" href=\"#n\">n</a> = &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* strcmp() is the more likely scenario */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#dname\">dname</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#audit_compare_dname_path\">audit_compare_dname_path</a>(<a class=\"id\" href=\"#dname\">dname</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#dirlen\">dirlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_copy_inode\">audit_copy_inode</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#ino\">ino</a> = (unsigned long)-1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found_child\">found_child</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#add_names\">add_names</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#add_names\">add_names</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found_parent\">found_parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_inc_name_count\">audit_inc_name_count</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_copy_inode\">audit_copy_inode</a>(&amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>], <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found_child\">found_child</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_inc_name_count\">audit_inc_name_count</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a> - 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Re-use the name belonging to the slot for a matching parent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * directory. All names for this context are relinquished in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * audit_free_names() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#found_parent\">found_parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#found_parent\">found_parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#AUDIT_NAME_FULL\">AUDIT_NAME_FULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* don't call __putname() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#name_put\">name_put</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_copy_inode\">audit_copy_inode</a>(&amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>], <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#ino\">ino</a> = (unsigned long)-1;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__audit_inode_child\">__audit_inode_child</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * auditsc_get_stamp - get local copies of audit_context values</span>", 
"<span class=\"comment\"> * @ctx: audit_context for the task</span>", 
"<span class=\"comment\"> * @t: timespec to store time recorded in the audit_context</span>", 
"<span class=\"comment\"> * @serial: serial value that is recorded in the audit_context</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Also sets the context as auditable.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#auditsc_get_stamp\">auditsc_get_stamp</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#t\">t</a>, unsigned int *<a class=\"id\" href=\"#serial\">serial</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#serial\">serial</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#serial\">serial</a> = <a class=\"id\" href=\"#audit_serial\">audit_serial</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a>  = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#ctime\">ctime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#ctime\">ctime</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#serial\">serial</a>    = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#serial\">serial</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#prio\">prio</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#prio\">prio</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#AUDIT_RECORD_CONTEXT\">AUDIT_RECORD_CONTEXT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/* global counter which is incremented every time something logs in */</span>", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#session_id\">session_id</a> = <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(0);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_set_loginuid - set a task's audit_context loginuid</span>", 
"<span class=\"comment\"> * @task: task whose audit context is being modified</span>", 
"<span class=\"comment\"> * @loginuid: loginuid value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called (set) from fs/proc/base.c::proc_loginuid_write().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#audit_set_loginuid\">audit_set_loginuid</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#loginuid\">loginuid</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sessionid\">sessionid</a> = <a class=\"id\" href=\"#atomic_inc_return\">atomic_inc_return</a>(&amp;<a class=\"id\" href=\"#session_id\">session_id</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a> && <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_LOGIN\">AUDIT_LOGIN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ab\">ab</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"login pid=%d uid=%u \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"old auid=%u new auid=%u\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" old ses=%u new ses=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#task_uid\">task_uid</a>(<a class=\"id\" href=\"#task\">task</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#loginuid\">loginuid</a>, <a class=\"id\" href=\"#loginuid\">loginuid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#sessionid\">sessionid</a>, <a class=\"id\" href=\"#sessionid\">sessionid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#sessionid\">sessionid</a> = <a class=\"id\" href=\"#sessionid\">sessionid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#loginuid\">loginuid</a> = <a class=\"id\" href=\"#loginuid\">loginuid</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __audit_mq_open - record audit data for a POSIX MQ open</span>", 
"<span class=\"comment\"> * @oflag: open flag</span>", 
"<span class=\"comment\"> * @mode: mode bits</span>", 
"<span class=\"comment\"> * @attr: queue attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__audit_mq_open\">__audit_mq_open</a>(int <a class=\"id\" href=\"#oflag\">oflag</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>, struct <a class=\"id\" href=\"#mq_attr\">mq_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#attr\">attr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#attr\">attr</a>, sizeof(struct <a class=\"id\" href=\"#mq_attr\">mq_attr</a>));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#attr\">attr</a>, 0, sizeof(struct <a class=\"id\" href=\"#mq_attr\">mq_attr</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#oflag\">oflag</a> = <a class=\"id\" href=\"#oflag\">oflag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#mode\">mode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#AUDIT_MQ_OPEN\">AUDIT_MQ_OPEN</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __audit_mq_sendrecv - record audit data for a POSIX MQ timed send/receive</span>", 
"<span class=\"comment\"> * @mqdes: MQ descriptor</span>", 
"<span class=\"comment\"> * @msg_len: Message length</span>", 
"<span class=\"comment\"> * @msg_prio: Message priority</span>", 
"<span class=\"comment\"> * @abs_timeout: Message timeout in absolute time</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__audit_mq_sendrecv\">__audit_mq_sendrecv</a>(<a class=\"id\" href=\"#mqd_t\">mqd_t</a> <a class=\"id\" href=\"#mqdes\">mqdes</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#msg_len\">msg_len</a>, unsigned int <a class=\"id\" href=\"#msg_prio\">msg_prio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#abs_timeout\">abs_timeout</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#p\">p</a> = &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>.<a class=\"id\" href=\"#abs_timeout\">abs_timeout</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#abs_timeout\">abs_timeout</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#abs_timeout\">abs_timeout</a>, sizeof(struct <a class=\"id\" href=\"#timespec\">timespec</a>));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#p\">p</a>, 0, sizeof(struct <a class=\"id\" href=\"#timespec\">timespec</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>.<a class=\"id\" href=\"#mqdes\">mqdes</a> = <a class=\"id\" href=\"#mqdes\">mqdes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>.<a class=\"id\" href=\"#msg_len\">msg_len</a> = <a class=\"id\" href=\"#msg_len\">msg_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>.<a class=\"id\" href=\"#msg_prio\">msg_prio</a> = <a class=\"id\" href=\"#msg_prio\">msg_prio</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#AUDIT_MQ_SENDRECV\">AUDIT_MQ_SENDRECV</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __audit_mq_notify - record audit data for a POSIX MQ notify</span>", 
"<span class=\"comment\"> * @mqdes: MQ descriptor</span>", 
"<span class=\"comment\"> * @notification: Notification event</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#__audit_mq_notify\">__audit_mq_notify</a>(<a class=\"id\" href=\"#mqd_t\">mqd_t</a> <a class=\"id\" href=\"#mqdes\">mqdes</a>, const struct <a class=\"id\" href=\"#sigevent\">sigevent</a> *<a class=\"id\" href=\"#notification\">notification</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#notification\">notification</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_notify\">mq_notify</a>.<a class=\"id\" href=\"#sigev_signo\">sigev_signo</a> = <a class=\"id\" href=\"#notification\">notification</a>-><a class=\"id\" href=\"#sigev_signo\">sigev_signo</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_notify\">mq_notify</a>.<a class=\"id\" href=\"#sigev_signo\">sigev_signo</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_notify\">mq_notify</a>.<a class=\"id\" href=\"#mqdes\">mqdes</a> = <a class=\"id\" href=\"#mqdes\">mqdes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#AUDIT_MQ_NOTIFY\">AUDIT_MQ_NOTIFY</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __audit_mq_getsetattr - record audit data for a POSIX MQ get/set attribute</span>", 
"<span class=\"comment\"> * @mqdes: MQ descriptor</span>", 
"<span class=\"comment\"> * @mqstat: MQ flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__audit_mq_getsetattr\">__audit_mq_getsetattr</a>(<a class=\"id\" href=\"#mqd_t\">mqd_t</a> <a class=\"id\" href=\"#mqdes\">mqdes</a>, struct <a class=\"id\" href=\"#mq_attr\">mq_attr</a> *<a class=\"id\" href=\"#mqstat\">mqstat</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_getsetattr\">mq_getsetattr</a>.<a class=\"id\" href=\"#mqdes\">mqdes</a> = <a class=\"id\" href=\"#mqdes\">mqdes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_getsetattr\">mq_getsetattr</a>.<a class=\"id\" href=\"#mqstat\">mqstat</a> = *<a class=\"id\" href=\"#mqstat\">mqstat</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#AUDIT_MQ_GETSETATTR\">AUDIT_MQ_GETSETATTR</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_ipc_obj - record audit data for ipc object</span>", 
"<span class=\"comment\"> * @ipcp: ipc permissions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__audit_ipc_obj\">__audit_ipc_obj</a>(struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#ipcp\">ipcp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#ipcp\">ipcp</a>-><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#gid\">gid</a> = <a class=\"id\" href=\"#ipcp\">ipcp</a>-><a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#ipcp\">ipcp</a>-><a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#has_perm\">has_perm</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_ipc_getsecid\">security_ipc_getsecid</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>, &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#osid\">osid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#AUDIT_IPC\">AUDIT_IPC</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_ipc_set_perm - record audit data for new ipc permissions</span>", 
"<span class=\"comment\"> * @qbytes: msgq bytes</span>", 
"<span class=\"comment\"> * @uid: msgq user id</span>", 
"<span class=\"comment\"> * @gid: msgq group id</span>", 
"<span class=\"comment\"> * @mode: msgq mode (permissions)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called only after audit_ipc_obj().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__audit_ipc_set_perm\">__audit_ipc_set_perm</a>(unsigned long <a class=\"id\" href=\"#qbytes\">qbytes</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#gid\">gid</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#qbytes\">qbytes</a> = <a class=\"id\" href=\"#qbytes\">qbytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#perm_uid\">perm_uid</a> = <a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#perm_gid\">perm_gid</a> = <a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#perm_mode\">perm_mode</a> = <a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#has_perm\">has_perm</a> = 1;", 
"}", 
"", 
"int <a class=\"id\" href=\"#audit_bprm\">audit_bprm</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data_execve\">audit_aux_data_execve</a> *<a class=\"id\" href=\"#ax\">ax</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#audit_enabled\">audit_enabled</a> || !<a class=\"id\" href=\"#context\">context</a> || <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#dummy\">dummy</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#ax\">ax</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ax\">ax</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#argc\">argc</a> = <a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#argc\">argc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#envc\">envc</a> = <a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#envc\">envc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#AUDIT_EXECVE\">AUDIT_EXECVE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux\">aux</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux\">aux</a> = (void *)<a class=\"id\" href=\"#ax\">ax</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_socketcall - record audit data for sys_socketcall</span>", 
"<span class=\"comment\"> * @nargs: number of args</span>", 
"<span class=\"comment\"> * @args: args array</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#audit_socketcall\">audit_socketcall</a>(int <a class=\"id\" href=\"#nargs\">nargs</a>, unsigned long *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#context\">context</a> || <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#dummy\">dummy</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#AUDIT_SOCKETCALL\">AUDIT_SOCKETCALL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#socketcall\">socketcall</a>.<a class=\"id\" href=\"#nargs\">nargs</a> = <a class=\"id\" href=\"#nargs\">nargs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#socketcall\">socketcall</a>.<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#nargs\">nargs</a> * sizeof(unsigned long));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __audit_fd_pair - record audit data for pipe and socketpair</span>", 
"<span class=\"comment\"> * @fd1: the first file descriptor</span>", 
"<span class=\"comment\"> * @fd2: the second file descriptor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__audit_fd_pair\">__audit_fd_pair</a>(int <a class=\"id\" href=\"#fd1\">fd1</a>, int <a class=\"id\" href=\"#fd2\">fd2</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#fds\">fds</a>[0] = <a class=\"id\" href=\"#fd1\">fd1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#fds\">fds</a>[1] = <a class=\"id\" href=\"#fd2\">fd2</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_sockaddr - record audit data for sys_bind, sys_connect, sys_sendto</span>", 
"<span class=\"comment\"> * @len: data length in user space</span>", 
"<span class=\"comment\"> * @a: data address in kernel space</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 for success or NULL context or &lt; 0 on error.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#audit_sockaddr\">audit_sockaddr</a>(int <a class=\"id\" href=\"#len\">len</a>, void *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#context\">context</a> || <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#dummy\">dummy</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sockaddr\">sockaddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sockaddr\">sockaddr</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sockaddr_len\">sockaddr_len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sockaddr\">sockaddr</a>, <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__audit_ptrace\">__audit_ptrace</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_pid\">target_pid</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_auid\">target_auid</a> = <a class=\"id\" href=\"#audit_get_loginuid\">audit_get_loginuid</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_uid\">target_uid</a> = <a class=\"id\" href=\"#task_uid\">task_uid</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_sessionid\">target_sessionid</a> = <a class=\"id\" href=\"#audit_get_sessionid\">audit_get_sessionid</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_task_getsecid\">security_task_getsecid</a>(<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_sid\">target_sid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_comm\">target_comm</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_signal_info - record signal info for shutting down audit subsystem</span>", 
"<span class=\"comment\"> * @sig: signal value</span>", 
"<span class=\"comment\"> * @t: task being signaled</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the audit subsystem is being terminated, record the task (pid)</span>", 
"<span class=\"comment\"> * and uid that is doing that.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__audit_signal_info\">__audit_signal_info</a>(int <a class=\"id\" href=\"#sig\">sig</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data_pids\">audit_aux_data_pids</a> *<a class=\"id\" href=\"#axp\">axp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#current_uid\">current_uid</a>(), <a class=\"id\" href=\"#t_uid\">t_uid</a> = <a class=\"id\" href=\"#task_uid\">task_uid</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_pid\">audit_pid</a> && <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#tgid\">tgid</a> == <a class=\"id\" href=\"#audit_pid\">audit_pid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sig\">sig</a> == <a class=\"id\" href=\"#SIGTERM\">SIGTERM</a> || <a class=\"id\" href=\"#sig\">sig</a> == <a class=\"id\" href=\"#SIGHUP\">SIGHUP</a> || <a class=\"id\" href=\"#sig\">sig</a> == <a class=\"id\" href=\"#SIGUSR1\">SIGUSR1</a> || <a class=\"id\" href=\"#sig\">sig</a> == <a class=\"id\" href=\"#SIGUSR2\">SIGUSR2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_sig_pid\">audit_sig_pid</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#loginuid\">loginuid</a> != -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_sig_uid\">audit_sig_uid</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#loginuid\">loginuid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_sig_uid\">audit_sig_uid</a> = <a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_task_getsecid\">security_task_getsecid</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, &amp;<a class=\"id\" href=\"#audit_sig_sid\">audit_sig_sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#audit_signals\">audit_signals</a> || <a class=\"id\" href=\"#audit_dummy_context\">audit_dummy_context</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* optimize the common case by putting first signal recipient directly</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in audit_context */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#target_pid\">target_pid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#target_pid\">target_pid</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#tgid\">tgid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#target_auid\">target_auid</a> = <a class=\"id\" href=\"#audit_get_loginuid\">audit_get_loginuid</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#target_uid\">target_uid</a> = <a class=\"id\" href=\"#t_uid\">t_uid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#target_sessionid\">target_sessionid</a> = <a class=\"id\" href=\"#audit_get_sessionid\">audit_get_sessionid</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_task_getsecid\">security_task_getsecid</a>(<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#target_sid\">target_sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#target_comm\">target_comm</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#axp\">axp</a> = (void *)<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#aux_pids\">aux_pids</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#axp\">axp</a> || <a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a> == <a class=\"id\" href=\"#AUDIT_AUX_PIDS\">AUDIT_AUX_PIDS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#axp\">axp</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#axp\">axp</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#axp\">axp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#AUDIT_OBJ_PID\">AUDIT_OBJ_PID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#aux_pids\">aux_pids</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#aux_pids\">aux_pids</a> = (void *)<a class=\"id\" href=\"#axp\">axp</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a> >= <a class=\"id\" href=\"#AUDIT_AUX_PIDS\">AUDIT_AUX_PIDS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#target_pid\">target_pid</a>[<a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a>] = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#tgid\">tgid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#target_auid\">target_auid</a>[<a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a>] = <a class=\"id\" href=\"#audit_get_loginuid\">audit_get_loginuid</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#target_uid\">target_uid</a>[<a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a>] = <a class=\"id\" href=\"#t_uid\">t_uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#target_sessionid\">target_sessionid</a>[<a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a>] = <a class=\"id\" href=\"#audit_get_sessionid\">audit_get_sessionid</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_task_getsecid\">security_task_getsecid</a>(<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#target_sid\">target_sid</a>[<a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#target_comm\">target_comm</a>[<a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a>], <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#axp\">axp</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a>++;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __audit_log_bprm_fcaps - store information about a loading bprm and relevant fcaps</span>", 
"<span class=\"comment\"> * @bprm: pointer to the bprm being processed</span>", 
"<span class=\"comment\"> * @new: the proposed new credentials</span>", 
"<span class=\"comment\"> * @old: the old credentials</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Simply check if the proc already has the caps given by the file and if not</span>", 
"<span class=\"comment\"> * store the priv escalation info for later auditing at the end of the syscall</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * -Eric</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__audit_log_bprm_fcaps\">__audit_log_bprm_fcaps</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>, const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data_bprm_fcaps\">audit_aux_data_bprm_fcaps</a> *<a class=\"id\" href=\"#ax\">ax</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_vfs_cap_data\">cpu_vfs_cap_data</a> <a class=\"id\" href=\"#vcaps\">vcaps</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#ax\">ax</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ax\">ax</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#AUDIT_BPRM_FCAPS\">AUDIT_BPRM_FCAPS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux\">aux</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux\">aux</a> = (void *)<a class=\"id\" href=\"#ax\">ax</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#dget\">dget</a>(<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_vfs_caps_from_disk\">get_vfs_caps_from_disk</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#vcaps\">vcaps</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#permitted\">permitted</a> = <a class=\"id\" href=\"#vcaps\">vcaps</a>.<a class=\"id\" href=\"#permitted\">permitted</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a> = <a class=\"id\" href=\"#vcaps\">vcaps</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#fE\">fE</a> = !!(<a class=\"id\" href=\"#vcaps\">vcaps</a>.<a class=\"id\" href=\"#magic_etc\">magic_etc</a> &amp; <a class=\"id\" href=\"#VFS_CAP_FLAGS_EFFECTIVE\">VFS_CAP_FLAGS_EFFECTIVE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#fcap_ver\">fcap_ver</a> = (<a class=\"id\" href=\"#vcaps\">vcaps</a>.<a class=\"id\" href=\"#magic_etc\">magic_etc</a> &amp; <a class=\"id\" href=\"#VFS_CAP_REVISION_MASK\">VFS_CAP_REVISION_MASK</a>) >> <a class=\"id\" href=\"#VFS_CAP_REVISION_SHIFT\">VFS_CAP_REVISION_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#old_pcap\">old_pcap</a>.<a class=\"id\" href=\"#permitted\">permitted</a>   = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#cap_permitted\">cap_permitted</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#old_pcap\">old_pcap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#cap_inheritable\">cap_inheritable</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#old_pcap\">old_pcap</a>.<a class=\"id\" href=\"#effective\">effective</a>   = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#cap_effective\">cap_effective</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#new_pcap\">new_pcap</a>.<a class=\"id\" href=\"#permitted\">permitted</a>   = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#cap_permitted\">cap_permitted</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#new_pcap\">new_pcap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#cap_inheritable\">cap_inheritable</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>-><a class=\"id\" href=\"#new_pcap\">new_pcap</a>.<a class=\"id\" href=\"#effective\">effective</a>   = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#cap_effective\">cap_effective</a>;", 
];
xr_frag_insert('l/af/5922ce737820c5f07b9070a87bb6920d1b4ca0.xr', __xr_tmp);
