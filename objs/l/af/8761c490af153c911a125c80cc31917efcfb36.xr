var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_HIGHUID_H\">_LINUX_HIGHUID_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_HIGHUID_H\">_LINUX_HIGHUID_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * general notes:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * CONFIG_UID16 is defined if the given architecture needs to</span>", 
"<span class=\"comment\"> * support backwards compatibility for old system calls.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * kernel code should use uid_t and gid_t at all times when dealing with</span>", 
"<span class=\"comment\"> * kernel-private data.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * old_uid_t and old_gid_t should only be different if CONFIG_UID16 is</span>", 
"<span class=\"comment\"> * defined, else the platform should provide dummy typedefs for them</span>", 
"<span class=\"comment\"> * such that they are equivalent to __kernel_{u,g}id_t.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * uid16_t and gid16_t are used on all architectures. (when dealing</span>", 
"<span class=\"comment\"> * with structures hard coded to 16 bits, such as in filesystems)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is the \"overflow\" UID and GID. They are used to signify uid/gid</span>", 
"<span class=\"comment\"> * overflow to old programs when they request uid/gid information but are</span>", 
"<span class=\"comment\"> * using the old 16 bit interfaces.</span>", 
"<span class=\"comment\"> * When you run a libc5 program, it will think that all highuid files or</span>", 
"<span class=\"comment\"> * processes are owned by this uid/gid.</span>", 
"<span class=\"comment\"> * The idea is that it's better to do so than possibly return 0 in lieu of</span>", 
"<span class=\"comment\"> * 65536, etc.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern int <a class=\"id\" href=\"#overflowuid\">overflowuid</a>;", 
"extern int <a class=\"id\" href=\"#overflowgid\">overflowgid</a>;", 
"", 
"extern void <a class=\"id\" href=\"#__bad_uid\">__bad_uid</a>(void);", 
"extern void <a class=\"id\" href=\"#__bad_gid\">__bad_gid</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_OVERFLOWUID\">DEFAULT_OVERFLOWUID</a><span class=\"ts\"/>65534", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_OVERFLOWGID\">DEFAULT_OVERFLOWGID</a><span class=\"ts\"/>65534", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_UID16\">CONFIG_UID16</a>", 
"", 
"<span class=\"comment\">/* prevent uid mod 65536 effect by returning a default value for high UIDs */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#high2lowuid\">high2lowuid</a>(<a class=\"id\" href=\"#uid\">uid</a>) ((<a class=\"id\" href=\"#uid\">uid</a>) &amp; ~0xFFFF ? (<a class=\"id\" href=\"#old_uid_t\">old_uid_t</a>)<a class=\"id\" href=\"#overflowuid\">overflowuid</a> : (<a class=\"id\" href=\"#old_uid_t\">old_uid_t</a>)(<a class=\"id\" href=\"#uid\">uid</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#high2lowgid\">high2lowgid</a>(<a class=\"id\" href=\"#gid\">gid</a>) ((<a class=\"id\" href=\"#gid\">gid</a>) &amp; ~0xFFFF ? (<a class=\"id\" href=\"#old_gid_t\">old_gid_t</a>)<a class=\"id\" href=\"#overflowgid\">overflowgid</a> : (<a class=\"id\" href=\"#old_gid_t\">old_gid_t</a>)(<a class=\"id\" href=\"#gid\">gid</a>))", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * -1 is different in 16 bits than it is in 32 bits</span>", 
"<span class=\"comment\"> * these macros are used by chown(), setreuid(), ...,</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#low2highuid\">low2highuid</a>(<a class=\"id\" href=\"#uid\">uid</a>) ((<a class=\"id\" href=\"#uid\">uid</a>) == (<a class=\"id\" href=\"#old_uid_t\">old_uid_t</a>)-1 ? (<a class=\"id\" href=\"#uid_t\">uid_t</a>)-1 : (<a class=\"id\" href=\"#uid_t\">uid_t</a>)(<a class=\"id\" href=\"#uid\">uid</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#low2highgid\">low2highgid</a>(<a class=\"id\" href=\"#gid\">gid</a>) ((<a class=\"id\" href=\"#gid\">gid</a>) == (<a class=\"id\" href=\"#old_gid_t\">old_gid_t</a>)-1 ? (<a class=\"id\" href=\"#gid_t\">gid_t</a>)-1 : (<a class=\"id\" href=\"#gid_t\">gid_t</a>)(<a class=\"id\" href=\"#gid\">gid</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__convert_uid\">__convert_uid</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#uid\">uid</a>) \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#size\">size</a> >= sizeof(<a class=\"id\" href=\"#uid\">uid</a>) ? (<a class=\"id\" href=\"#uid\">uid</a>) : <a class=\"id\" href=\"#high2lowuid\">high2lowuid</a>(<a class=\"id\" href=\"#uid\">uid</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__convert_gid\">__convert_gid</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#gid\">gid</a>) \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#size\">size</a> >= sizeof(<a class=\"id\" href=\"#gid\">gid</a>) ? (<a class=\"id\" href=\"#gid\">gid</a>) : <a class=\"id\" href=\"#high2lowgid\">high2lowgid</a>(<a class=\"id\" href=\"#gid\">gid</a>))", 
"<span class=\"ts\"/>", 
"", 
"#else", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__convert_uid\">__convert_uid</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#uid\">uid</a>) (<a class=\"id\" href=\"#uid\">uid</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__convert_gid\">__convert_gid</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#gid\">gid</a>) (<a class=\"id\" href=\"#gid\">gid</a>)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_UID16 */</span>", 
"", 
"<span class=\"comment\">/* uid/gid input should be always 32bit uid_t */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SET_UID\">SET_UID</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#uid\">uid</a>) do { (<a class=\"id\" href=\"#var\">var</a>) = <a class=\"id\" href=\"#__convert_uid\">__convert_uid</a>(sizeof(<a class=\"id\" href=\"#var\">var</a>), (<a class=\"id\" href=\"#uid\">uid</a>)); } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SET_GID\">SET_GID</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#gid\">gid</a>) do { (<a class=\"id\" href=\"#var\">var</a>) = <a class=\"id\" href=\"#__convert_gid\">__convert_gid</a>(sizeof(<a class=\"id\" href=\"#var\">var</a>), (<a class=\"id\" href=\"#gid\">gid</a>)); } while (0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Everything below this line is needed on all architectures, to deal with</span>", 
"<span class=\"comment\"> * filesystems that only store 16 bits of the UID/GID, etc.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is the UID and GID that will get written to disk if a filesystem</span>", 
"<span class=\"comment\"> * only supports 16-bit UIDs and the kernel has a high UID/GID to write</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#fs_overflowuid\">fs_overflowuid</a>;", 
"extern int <a class=\"id\" href=\"#fs_overflowgid\">fs_overflowgid</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_FS_OVERFLOWUID\">DEFAULT_FS_OVERFLOWUID</a><span class=\"ts\"/>65534", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_FS_OVERFLOWGID\">DEFAULT_FS_OVERFLOWGID</a><span class=\"ts\"/>65534", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Since these macros are used in architectures that only need limited</span>", 
"<span class=\"comment\"> * 16-bit UID back compatibility, we won't use old_uid_t and old_gid_t</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fs_high2lowuid\">fs_high2lowuid</a>(<a class=\"id\" href=\"#uid\">uid</a>) ((<a class=\"id\" href=\"#uid\">uid</a>) &amp; ~0xFFFF ? (<a class=\"id\" href=\"#uid16_t\">uid16_t</a>)<a class=\"id\" href=\"#fs_overflowuid\">fs_overflowuid</a> : (<a class=\"id\" href=\"#uid16_t\">uid16_t</a>)(<a class=\"id\" href=\"#uid\">uid</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fs_high2lowgid\">fs_high2lowgid</a>(<a class=\"id\" href=\"#gid\">gid</a>) ((<a class=\"id\" href=\"#gid\">gid</a>) &amp; ~0xFFFF ? (<a class=\"id\" href=\"#gid16_t\">gid16_t</a>)<a class=\"id\" href=\"#fs_overflowgid\">fs_overflowgid</a> : (<a class=\"id\" href=\"#gid16_t\">gid16_t</a>)(<a class=\"id\" href=\"#gid\">gid</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#low_16_bits\">low_16_bits</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#x\">x</a>) &amp; 0xFFFF)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#high_16_bits\">high_16_bits</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#x\">x</a>) &amp; 0xFFFF0000) >> 16)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_HIGHUID_H */</span>", 
];
xr_frag_insert('l/af/8761c490af153c911a125c80cc31917efcfb36.xr', __xr_tmp);
