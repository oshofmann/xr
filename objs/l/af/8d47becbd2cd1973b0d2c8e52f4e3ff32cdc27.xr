var __xr_tmp = [
"<span class=\"comment\">/* auditsc.c -- System-call auditing support</span>", 
"<span class=\"comment\"> * Handles all system-call specific auditing features.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2003-2004 Red Hat Inc., Durham, North Carolina.</span>", 
"<span class=\"comment\"> * Copyright 2005 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> * Copyright (C) 2005, 2006 IBM Corporation</span>", 
"<span class=\"comment\"> * All Rights Reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by Rickard E. (Rik) Faith &lt;faith@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Many of the ideas implemented here are from Stephen C. Tweedie,</span>", 
"<span class=\"comment\"> * especially the idea of avoiding a copy by using getname.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The method for actual interception of syscall entry and exit (not in</span>", 
"<span class=\"comment\"> * this file -- see entry.S) is based on a GPL'd patch written by</span>", 
"<span class=\"comment\"> * okir@suse.de and Copyright 2003 SuSE Linux AG.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * POSIX message queue support added by George Wilson &lt;ltcgcw@us.ibm.com&gt;,</span>", 
"<span class=\"comment\"> * 2006.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The support of additional filter rules compares (&gt;, &lt;, &gt;=, &lt;=) was</span>", 
"<span class=\"comment\"> * added by Dustin Kirkland &lt;dustin.kirkland@us.ibm.com&gt;, 2005.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Modified by Amy Griffis &lt;amy.griffis@hp.com&gt; to collect additional</span>", 
"<span class=\"comment\"> * filesystem information.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Subject and object context labeling support added by &lt;danjones@us.ibm.com&gt;</span>", 
"<span class=\"comment\"> * and &lt;dustin.kirkland@us.ibm.com&gt; for LSPP certification compliance.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mqueue\">mqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#personality\">personality</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#unistd\">unistd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty\">tty</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#binfmts\">binfmts</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs_struct\">fs_struct</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"audit.h\"", 
"", 
"<span class=\"comment\">/* AUDIT_NAMES is the number of slots we reserve in the audit_context</span>", 
"<span class=\"comment\"> * for saving names from getname(). */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIT_NAMES\">AUDIT_NAMES</a>    20", 
"", 
"<span class=\"comment\">/* Indicates that audit should log the full pathname. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIT_NAME_FULL\">AUDIT_NAME_FULL</a> -1", 
"", 
"<span class=\"comment\">/* no execve audit message should be longer than this (userspace limits) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_EXECVE_AUDIT_LEN\">MAX_EXECVE_AUDIT_LEN</a> 7500", 
"", 
"<span class=\"comment\">/* number of audit rules */</span>", 
"int <a class=\"id\" href=\"#audit_n_rules\">audit_n_rules</a>;", 
"", 
"<span class=\"comment\">/* determines whether we collect data for signals sent */</span>", 
"int <a class=\"id\" href=\"#audit_signals\">audit_signals</a>;", 
"", 
"struct <a class=\"id\" href=\"#audit_cap_data\">audit_cap_data</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#permitted\">permitted</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inheritable\">inheritable</a>;", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#fE\">fE</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* effective bit of a file capability */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a><span class=\"ts\"/><a class=\"id\" href=\"#effective\">effective</a>;<span class=\"ts\"/><span class=\"comment\">/* effective set of a process */</span>", 
"<span class=\"ts\"/>};", 
"};", 
"", 
"<span class=\"comment\">/* When fs/namei.c:getname() is called, we store the pointer in name and</span>", 
"<span class=\"comment\"> * we don't let putname() free it (instead we free all of the saved</span>", 
"<span class=\"comment\"> * pointers at syscall exit time).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Further, in fs/namei.c:path_lookup() we store the inode and device. */</span>", 
"struct <a class=\"id\" href=\"#audit_names\">audit_names</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name_len\">name_len</a>;<span class=\"ts\"/><span class=\"comment\">/* number of name's characters to log */</span>", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#name_put\">name_put</a>;<span class=\"ts\"/><span class=\"comment\">/* call __putname() for this name */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#umode_t\">umode_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdev\">rdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#osid\">osid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_cap_data\">audit_cap_data</a> <a class=\"id\" href=\"#fcap\">fcap</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#fcap_ver\">fcap_ver</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a><span class=\"ts\"/>*<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIT_AUX_IPCPERM\">AUDIT_AUX_IPCPERM</a><span class=\"ts\"/>0", 
"", 
"<span class=\"comment\">/* Number of target pids per aux struct. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIT_AUX_PIDS\">AUDIT_AUX_PIDS</a><span class=\"ts\"/>16", 
"", 
"struct <a class=\"id\" href=\"#audit_aux_data_execve\">audit_aux_data_execve</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#argc\">argc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#envc\">envc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#audit_aux_data_pids\">audit_aux_data_pids</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_pid\">target_pid</a>[<a class=\"id\" href=\"#AUDIT_AUX_PIDS\">AUDIT_AUX_PIDS</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_auid\">target_auid</a>[<a class=\"id\" href=\"#AUDIT_AUX_PIDS\">AUDIT_AUX_PIDS</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_uid\">target_uid</a>[<a class=\"id\" href=\"#AUDIT_AUX_PIDS\">AUDIT_AUX_PIDS</a>];", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_sessionid\">target_sessionid</a>[<a class=\"id\" href=\"#AUDIT_AUX_PIDS\">AUDIT_AUX_PIDS</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_sid\">target_sid</a>[<a class=\"id\" href=\"#AUDIT_AUX_PIDS\">AUDIT_AUX_PIDS</a>];", 
"<span class=\"ts\"/>char <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_comm\">target_comm</a>[<a class=\"id\" href=\"#AUDIT_AUX_PIDS\">AUDIT_AUX_PIDS</a>][<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid_count\">pid_count</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#audit_aux_data_bprm_fcaps\">audit_aux_data_bprm_fcaps</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_cap_data\">audit_cap_data</a><span class=\"ts\"/><a class=\"id\" href=\"#fcap\">fcap</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcap_ver\">fcap_ver</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_cap_data\">audit_cap_data</a><span class=\"ts\"/><a class=\"id\" href=\"#old_pcap\">old_pcap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_cap_data\">audit_cap_data</a><span class=\"ts\"/><a class=\"id\" href=\"#new_pcap\">new_pcap</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#audit_aux_data_capset\">audit_aux_data_capset</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_cap_data\">audit_cap_data</a><span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_chunk\">audit_chunk</a> *<a class=\"id\" href=\"#c\">c</a>[31];", 
"};", 
"", 
"<span class=\"comment\">/* The per-task audit context. */</span>", 
"struct <a class=\"id\" href=\"#audit_context\">audit_context</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dummy\">dummy</a>;<span class=\"ts\"/><span class=\"comment\">/* must be the first element */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#in_syscall\">in_syscall</a>;<span class=\"ts\"/><span class=\"comment\">/* 1 if task is in a syscall */</span>", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#audit_state\">audit_state</a>    <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#current_state\">current_state</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/>    <a class=\"id\" href=\"#serial\">serial</a>;     <span class=\"comment\">/* serial number for record */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#major\">major</a>;      <span class=\"comment\">/* syscall number */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a><span class=\"ts\"/>    <a class=\"id\" href=\"#ctime\">ctime</a>;      <span class=\"comment\">/* time of syscall entry */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/>    <a class=\"id\" href=\"#argv\">argv</a>[4];    <span class=\"comment\">/* syscall arguments */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#return_code\">return_code</a>;<span class=\"comment\">/* syscall return code */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#return_valid\">return_valid</a>; <span class=\"comment\">/* return code is valid */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#name_count\">name_count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_names\">audit_names</a>  <a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#AUDIT_NAMES\">AUDIT_NAMES</a>];", 
"<span class=\"ts\"/>char *<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#filterkey\">filterkey</a>;<span class=\"ts\"/><span class=\"comment\">/* key for rule that triggered record */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a><span class=\"ts\"/>    <a class=\"id\" href=\"#pwd\">pwd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#previous\">previous</a>; <span class=\"comment\">/* For nested syscalls */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a> *<a class=\"id\" href=\"#aux\">aux</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a> *<a class=\"id\" href=\"#aux_pids\">aux_pids</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> *<a class=\"id\" href=\"#sockaddr\">sockaddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#sockaddr_len\">sockaddr_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Save things to print about task_struct */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#ppid\">ppid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#euid\">euid</a>, <a class=\"id\" href=\"#suid\">suid</a>, <a class=\"id\" href=\"#fsuid\">fsuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#gid\">gid</a>, <a class=\"id\" href=\"#egid\">egid</a>, <a class=\"id\" href=\"#sgid\">sgid</a>, <a class=\"id\" href=\"#fsgid\">fsgid</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/>    <a class=\"id\" href=\"#personality\">personality</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#arch\">arch</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#target_pid\">target_pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#target_auid\">target_auid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#target_uid\">target_uid</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/>    <a class=\"id\" href=\"#target_sessionid\">target_sessionid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#target_sid\">target_sid</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#target_comm\">target_comm</a>[<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a> *<a class=\"id\" href=\"#trees\">trees</a>, *<a class=\"id\" href=\"#first_trees\">first_trees</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#killed_trees\">killed_trees</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tree_count\">tree_count</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nargs\">nargs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#args\">args</a>[6];", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#socketcall\">socketcall</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#osid\">osid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#has_perm\">has_perm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm_uid\">perm_uid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm_gid\">perm_gid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm_mode\">perm_mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qbytes\">qbytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#ipc\">ipc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mqd_t\">mqd_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mqdes\">mqdes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mq_attr\">mq_attr</a> <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mqstat\">mqstat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#mq_getsetattr\">mq_getsetattr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mqd_t\">mqd_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mqdes\">mqdes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigev_signo\">sigev_signo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#mq_notify\">mq_notify</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mqd_t\">mqd_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mqdes\">mqdes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg_len\">msg_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg_prio\">msg_prio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#abs_timeout\">abs_timeout</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oflag\">oflag</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mq_attr\">mq_attr</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#mq_open\">mq_open</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_cap_data\">audit_cap_data</a><span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#capset\">capset</a>;", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fds\">fds</a>[2];", 
"", 
"#if <a class=\"id\" href=\"#AUDIT_DEBUG\">AUDIT_DEBUG</a>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#put_count\">put_count</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ino_count\">ino_count</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#open_arg\">open_arg</a>(int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#ACC_MODE\">ACC_MODE</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#O_TRUNC\">O_TRUNC</a> | <a class=\"id\" href=\"#O_CREAT\">O_CREAT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> |= <a class=\"id\" href=\"#AUDIT_PERM_WRITE\">AUDIT_PERM_WRITE</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#audit_match_perm\">audit_match_perm</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>, int <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ctx\">ctx</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#major\">major</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#audit_classify_syscall\">audit_classify_syscall</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#arch\">arch</a>, <a class=\"id\" href=\"#n\">n</a>)) {", 
"<span class=\"ts\"/>case 0:<span class=\"ts\"/><span class=\"comment\">/* native */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#AUDIT_PERM_WRITE\">AUDIT_PERM_WRITE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#audit_match_class\">audit_match_class</a>(<a class=\"id\" href=\"#AUDIT_CLASS_WRITE\">AUDIT_CLASS_WRITE</a>, <a class=\"id\" href=\"#n\">n</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#AUDIT_PERM_READ\">AUDIT_PERM_READ</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#audit_match_class\">audit_match_class</a>(<a class=\"id\" href=\"#AUDIT_CLASS_READ\">AUDIT_CLASS_READ</a>, <a class=\"id\" href=\"#n\">n</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#AUDIT_PERM_ATTR\">AUDIT_PERM_ATTR</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#audit_match_class\">audit_match_class</a>(<a class=\"id\" href=\"#AUDIT_CLASS_CHATTR\">AUDIT_CLASS_CHATTR</a>, <a class=\"id\" href=\"#n\">n</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case 1: <span class=\"comment\">/* 32bit on biarch */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#AUDIT_PERM_WRITE\">AUDIT_PERM_WRITE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#audit_match_class\">audit_match_class</a>(<a class=\"id\" href=\"#AUDIT_CLASS_WRITE_32\">AUDIT_CLASS_WRITE_32</a>, <a class=\"id\" href=\"#n\">n</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#AUDIT_PERM_READ\">AUDIT_PERM_READ</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#audit_match_class\">audit_match_class</a>(<a class=\"id\" href=\"#AUDIT_CLASS_READ_32\">AUDIT_CLASS_READ_32</a>, <a class=\"id\" href=\"#n\">n</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#AUDIT_PERM_ATTR\">AUDIT_PERM_ATTR</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#audit_match_class\">audit_match_class</a>(<a class=\"id\" href=\"#AUDIT_CLASS_CHATTR_32\">AUDIT_CLASS_CHATTR_32</a>, <a class=\"id\" href=\"#n\">n</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case 2: <span class=\"comment\">/* open */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#ACC_MODE\">ACC_MODE</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#argv\">argv</a>[1]);", 
"<span class=\"ts\"/>case 3: <span class=\"comment\">/* openat */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#ACC_MODE\">ACC_MODE</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#argv\">argv</a>[2]);", 
"<span class=\"ts\"/>case 4: <span class=\"comment\">/* socketcall */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#AUDIT_PERM_WRITE\">AUDIT_PERM_WRITE</a>) && <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#argv\">argv</a>[0] == <a class=\"id\" href=\"#SYS_BIND\">SYS_BIND</a>);", 
"<span class=\"ts\"/>case 5: <span class=\"comment\">/* execve */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#AUDIT_PERM_EXEC\">AUDIT_PERM_EXEC</a>;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#audit_match_filetype\">audit_match_filetype</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>, int <a class=\"id\" href=\"#which\">which</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#which\">which</a> &amp; ~<a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#which\">which</a> &amp; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ctx\">ctx</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> >= <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#name_count\">name_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#ino\">ino</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#mode\">mode</a> ^ <a class=\"id\" href=\"#mode\">mode</a>) &amp; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We keep a linked list of fixed-sized (31 pointer) arrays of audit_chunk *;</span>", 
"<span class=\"comment\"> * -&gt;first_trees points to its beginning, -&gt;trees - to the current end of data.</span>", 
"<span class=\"comment\"> * -&gt;tree_count is the number of free entries in array pointed to by -&gt;trees.</span>", 
"<span class=\"comment\"> * Original condition is (NULL, NULL, 0); as soon as it grows we never revert to NULL,</span>", 
"<span class=\"comment\"> * \"empty\" becomes (p, p, 31) afterwards.  We don't shrink the list (and seriously,</span>", 
"<span class=\"comment\"> * it's going to remain 1-element for almost any setup) until we free context itself.</span>", 
"<span class=\"comment\"> * References in it _are_ dropped - at the same time we free/drop aux stuff.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDIT_TREE\">CONFIG_AUDIT_TREE</a>", 
"static void <a class=\"id\" href=\"#audit_set_auditable\">audit_set_auditable</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#prio\">prio</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#prio\">prio</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#AUDIT_RECORD_CONTEXT\">AUDIT_RECORD_CONTEXT</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#put_tree_ref\">put_tree_ref</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>, struct <a class=\"id\" href=\"#audit_chunk\">audit_chunk</a> *<a class=\"id\" href=\"#chunk\">chunk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#tree_count\">tree_count</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#left\">left</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#c\">c</a>[--<a class=\"id\" href=\"#left\">left</a>] = <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#tree_count\">tree_count</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#c\">c</a>[30] = <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#tree_count\">tree_count</a> = 30;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#grow_tree_refs\">grow_tree_refs</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#first_trees\">first_trees</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#tree_count\">tree_count</a> = 31;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#unroll_tree_refs\">unroll_tree_refs</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDIT_TREE\">CONFIG_AUDIT_TREE</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we started with empty chain */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#first_trees\">first_trees</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = 31;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if the very first allocation has failed, nothing to do */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#p\">p</a>; <a class=\"id\" href=\"#q\">q</a> != <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a>; <a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#n\">n</a> = 31) {", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_chunk\">audit_put_chunk</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#c\">c</a>[<a class=\"id\" href=\"#n\">n</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#c\">c</a>[<a class=\"id\" href=\"#n\">n</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>-- &gt; <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#tree_count\">tree_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_chunk\">audit_put_chunk</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#c\">c</a>[<a class=\"id\" href=\"#n\">n</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#c\">c</a>[<a class=\"id\" href=\"#n\">n</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#tree_count\">tree_count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#free_tree_refs\">free_tree_refs</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a> *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#first_trees\">first_trees</a>; <a class=\"id\" href=\"#p\">p</a>; <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#q\">q</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#match_tree_refs\">match_tree_refs</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>, struct <a class=\"id\" href=\"#audit_tree\">audit_tree</a> *<a class=\"id\" href=\"#tree\">tree</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDIT_TREE\">CONFIG_AUDIT_TREE</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_tree_refs\">audit_tree_refs</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tree\">tree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* full ones */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#first_trees\">first_trees</a>; <a class=\"id\" href=\"#p\">p</a> != <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#trees\">trees</a>; <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0; <a class=\"id\" href=\"#n\">n</a> &lt; 31; <a class=\"id\" href=\"#n\">n</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_tree_match\">audit_tree_match</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#c\">c</a>[<a class=\"id\" href=\"#n\">n</a>], <a class=\"id\" href=\"#tree\">tree</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* partial */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#tree_count\">tree_count</a>; <a class=\"id\" href=\"#n\">n</a> &lt; 31; <a class=\"id\" href=\"#n\">n</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_tree_match\">audit_tree_match</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#c\">c</a>[<a class=\"id\" href=\"#n\">n</a>], <a class=\"id\" href=\"#tree\">tree</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Determine if any context name data matches a rule's watch data */</span>", 
"<span class=\"comment\">/* Compare a task_struct with an audit_rule.  Return 1 on match, 0</span>", 
"<span class=\"comment\"> * otherwise. */</span>", 
"static int <a class=\"id\" href=\"#audit_filter_rules\">audit_filter_rules</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#rule\">rule</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#audit_names\">audit_names</a> *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      enum <a class=\"id\" href=\"#audit_state\">audit_state</a> *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#get_task_cred\">get_task_cred</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#need_sid\">need_sid</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#field_count\">field_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#f\">f</a> = &amp;<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PID\">AUDIT_PID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PPID\">AUDIT_PPID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#ppid\">ppid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#ppid\">ppid</a> = <a class=\"id\" href=\"#sys_getppid\">sys_getppid</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#ppid\">ppid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_UID\">AUDIT_UID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EUID\">AUDIT_EUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUID\">AUDIT_SUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#suid\">suid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FSUID\">AUDIT_FSUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_GID\">AUDIT_GID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#gid\">gid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EGID\">AUDIT_EGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#egid\">egid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SGID\">AUDIT_SGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#sgid\">sgid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FSGID\">AUDIT_FSGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PERS\">AUDIT_PERS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#personality\">personality</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARCH\">AUDIT_ARCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#arch\">arch</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EXIT\">AUDIT_EXIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a> && <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#return_valid\">return_valid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#return_code\">return_code</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUCCESS\">AUDIT_SUCCESS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a> && <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#return_valid\">return_valid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#return_valid\">return_valid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#AUDITSC_SUCCESS\">AUDITSC_SUCCESS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#return_valid\">return_valid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#AUDITSC_FAILURE\">AUDITSC_FAILURE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DEVMAJOR\">AUDIT_DEVMAJOR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#ctx\">ctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#dev\">dev</a>),<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DEVMINOR\">AUDIT_DEVMINOR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#ctx\">ctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_INODE\">AUDIT_INODE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = (<a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#ino\">ino</a> == <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#ctx\">ctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_WATCH\">AUDIT_WATCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_watch_compare\">audit_watch_compare</a>(<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#watch\">watch</a>, <a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DIR\">AUDIT_DIR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#match_tree_refs\">match_tree_refs</a>(<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#tree\">tree</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_LOGINUID\">AUDIT_LOGINUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#loginuid\">loginuid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_USER\">AUDIT_SUBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_ROLE\">AUDIT_SUBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_TYPE\">AUDIT_SUBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_SEN\">AUDIT_SUBJ_SEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_CLR\">AUDIT_SUBJ_CLR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* NOTE: this may return negative values indicating</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   a temporary error.  We simply treat this as a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   match for now to avoid losing information that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   may be wanted.   An error message will also be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   logged upon error */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_sid\">need_sid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_task_getsecid\">security_task_getsecid</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, &amp;<a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_sid\">need_sid</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#security_audit_rule_match\">security_audit_rule_match</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>                                  <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>                                  <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>                                  <a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_USER\">AUDIT_OBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_ROLE\">AUDIT_OBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_TYPE\">AUDIT_OBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_LOW\">AUDIT_OBJ_LEV_LOW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_HIGH\">AUDIT_OBJ_LEV_HIGH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The above note for AUDIT_SUBJ_USER...AUDIT_SUBJ_CLR</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   also applies here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find files that match */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#security_audit_rule_match\">security_audit_rule_match</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>           <a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#osid\">osid</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>           <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a>, <a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ctx\">ctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#security_audit_rule_match\">security_audit_rule_match</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#osid\">osid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a>, <a class=\"id\" href=\"#ctx\">ctx</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find ipc objects that match */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a> || <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#AUDIT_IPC\">AUDIT_IPC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#security_audit_rule_match\">security_audit_rule_match</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#osid\">osid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a>, <a class=\"id\" href=\"#ctx\">ctx</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG0\">AUDIT_ARG0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG1\">AUDIT_ARG1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG2\">AUDIT_ARG2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG3\">AUDIT_ARG3</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_comparator\">audit_comparator</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>-<a class=\"id\" href=\"#AUDIT_ARG0\">AUDIT_ARG0</a>], <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTERKEY\">AUDIT_FILTERKEY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ignore this field for filtering */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PERM\">AUDIT_PERM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_match_perm\">audit_match_perm</a>(<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILETYPE\">AUDIT_FILETYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#audit_match_filetype\">audit_match_filetype</a>(<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#prio\">prio</a> <= <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#prio\">prio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#prio\">prio</a> = <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_NEVER\">AUDIT_NEVER</a>:    *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#AUDIT_DISABLED\">AUDIT_DISABLED</a>;<span class=\"ts\"/>    break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ALWAYS\">AUDIT_ALWAYS</a>:   *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#AUDIT_RECORD_CONTEXT\">AUDIT_RECORD_CONTEXT</a>; break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/* At process creation time, we can determine if system-call auditing is</span>", 
"<span class=\"comment\"> * completely disabled for this task.  Since we only have the task</span>", 
"<span class=\"comment\"> * structure at this point, we can only check uid and gid.</span>", 
"<span class=\"comment\"> */</span>", 
"static enum <a class=\"id\" href=\"#audit_state\">audit_state</a> <a class=\"id\" href=\"#audit_filter_task\">audit_filter_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, char **<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#audit_state\">audit_state</a>   <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#e\">e</a>, &amp;<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[<a class=\"id\" href=\"#AUDIT_FILTER_TASK\">AUDIT_FILTER_TASK</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_filter_rules\">audit_filter_rules</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#AUDIT_RECORD_CONTEXT\">AUDIT_RECORD_CONTEXT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#filterkey\">filterkey</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AUDIT_BUILD_CONTEXT\">AUDIT_BUILD_CONTEXT</a>;", 
"}", 
"", 
"<span class=\"comment\">/* At syscall entry and exit time, this filter is called if the</span>", 
"<span class=\"comment\"> * audit_state is not low enough that auditing cannot take place, but is</span>", 
"<span class=\"comment\"> * also not high enough that we already know we have to write an audit</span>", 
"<span class=\"comment\"> * record (i.e., the state is AUDIT_SETUP_CONTEXT or AUDIT_BUILD_CONTEXT).</span>", 
"<span class=\"comment\"> */</span>", 
"static enum <a class=\"id\" href=\"#audit_state\">audit_state</a> <a class=\"id\" href=\"#audit_filter_syscall\">audit_filter_syscall</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#audit_state\">audit_state</a> <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_pid\">audit_pid</a> && <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#tgid\">tgid</a> == <a class=\"id\" href=\"#audit_pid\">audit_pid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AUDIT_DISABLED\">AUDIT_DISABLED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#list\">list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#word\">word</a> = <a class=\"id\" href=\"#AUDIT_WORD\">AUDIT_WORD</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#major\">major</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bit\">bit</a>  = <a class=\"id\" href=\"#AUDIT_BIT\">AUDIT_BIT</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#major\">major</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#word\">word</a>] &amp; <a class=\"id\" href=\"#bit\">bit</a>) == <a class=\"id\" href=\"#bit\">bit</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#audit_filter_rules\">audit_filter_rules</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>, <a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AUDIT_BUILD_CONTEXT\">AUDIT_BUILD_CONTEXT</a>;", 
"}", 
"", 
"<span class=\"comment\">/* At syscall exit time, this filter is called if any audit_names[] have been</span>", 
"<span class=\"comment\"> * collected during syscall processing.  We only check rules in sublists at hash</span>", 
"<span class=\"comment\"> * buckets applicable to the inode numbers in audit_names[].</span>", 
"<span class=\"comment\"> * Regarding audit_state, same rules apply as for audit_filter_syscall().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#audit_filter_inodes\">audit_filter_inodes</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#audit_state\">audit_state</a> <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_pid\">audit_pid</a> && <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#tgid\">tgid</a> == <a class=\"id\" href=\"#audit_pid\">audit_pid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#word\">word</a> = <a class=\"id\" href=\"#AUDIT_WORD\">AUDIT_WORD</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#major\">major</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bit\">bit</a>  = <a class=\"id\" href=\"#AUDIT_BIT\">AUDIT_BIT</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#major\">major</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_names\">audit_names</a> *<a class=\"id\" href=\"#n\">n</a> = &amp;<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#audit_hash_ino\">audit_hash_ino</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#audit_inode_hash\">audit_inode_hash</a>[<a class=\"id\" href=\"#h\">h</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#list\">list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#word\">word</a>] &amp; <a class=\"id\" href=\"#bit\">bit</a>) == <a class=\"id\" href=\"#bit\">bit</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#audit_filter_rules\">audit_filter_rules</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>, <a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#audit_get_context\">audit_get_context</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#return_valid\">return_valid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      long <a class=\"id\" href=\"#return_code\">return_code</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#context\">context</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#return_valid\">return_valid</a> = <a class=\"id\" href=\"#return_valid\">return_valid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we need to fix up the return code in the audit logs if the actual</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * return codes are later going to be fixed up by the arch specific</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * signal handlers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is actually a test for:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (rc == ERESTARTSYS ) || (rc == ERESTARTNOINTR) ||</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (rc == ERESTARTNOHAND) || (rc == ERESTART_RESTARTBLOCK)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but is faster than a bunch of ||</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#return_code\">return_code</a> <= -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#return_code\">return_code</a> >= -<a class=\"id\" href=\"#ERESTART_RESTARTBLOCK\">ERESTART_RESTARTBLOCK</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#return_code\">return_code</a> != -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#return_code\">return_code</a> = -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#return_code\">return_code</a>  = <a class=\"id\" href=\"#return_code\">return_code</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a> && !<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#dummy\">dummy</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_filter_syscall\">audit_filter_syscall</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[<a class=\"id\" href=\"#AUDIT_FILTER_EXIT\">AUDIT_FILTER_EXIT</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_filter_inodes\">audit_filter_inodes</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#context\">context</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#audit_free_names\">audit_free_names</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"#if <a class=\"id\" href=\"#AUDIT_DEBUG\">AUDIT_DEBUG</a> == 2", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#put_count\">put_count</a> + <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ino_count\">ino_count</a> != <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s:%d(:%d): major=%d in_syscall=%d\"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \" name_count=%d put_count=%d\"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \" ino_count=%d [NOT freeing]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__FILE__\">__FILE__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#put_count\">put_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ino_count\">ino_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"names[%d] = %p = %s\\n\", <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> ?: \"(null)\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#AUDIT_DEBUG\">AUDIT_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#put_count\">put_count</a>  = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ino_count\">ino_count</a>  = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> && <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name_put\">name_put</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__putname\">__putname</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pwd\">pwd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pwd\">pwd</a>.<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pwd\">pwd</a>.<a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#audit_free_aux\">audit_free_aux</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a> *<a class=\"id\" href=\"#aux\">aux</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#aux\">aux</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux\">aux</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux\">aux</a> = <a class=\"id\" href=\"#aux\">aux</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#aux\">aux</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#aux\">aux</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux_pids\">aux_pids</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux_pids\">aux_pids</a> = <a class=\"id\" href=\"#aux\">aux</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#aux\">aux</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#audit_zero_context\">audit_zero_context</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      enum <a class=\"id\" href=\"#audit_state\">audit_state</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#context\">context</a>, 0, sizeof(*<a class=\"id\" href=\"#context\">context</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#state\">state</a>      = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#prio\">prio</a> = <a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#AUDIT_RECORD_CONTEXT\">AUDIT_RECORD_CONTEXT</a> ? ~0ULL : 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#audit_alloc_context\">audit_alloc_context</a>(enum <a class=\"id\" href=\"#audit_state\">audit_state</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#context\">context</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_zero_context\">audit_zero_context</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#killed_trees\">killed_trees</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#context\">context</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_alloc - allocate an audit context block for a task</span>", 
"<span class=\"comment\"> * @tsk: task</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Filter on the task information and allocate a per-task audit context</span>", 
"<span class=\"comment\"> * if necessary.  Doing so turns on system call auditing for the</span>", 
"<span class=\"comment\"> * specified task.  This is called from copy_process, so no lock is</span>", 
"<span class=\"comment\"> * needed.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#audit_alloc\">audit_alloc</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#audit_state\">audit_state</a>     <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
];
xr_frag_insert('l/af/8d47becbd2cd1973b0d2c8e52f4e3ff32cdc27.xr', __xr_tmp);
