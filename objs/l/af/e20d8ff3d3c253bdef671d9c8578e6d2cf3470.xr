var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Vojtech Pavlik <vojtech@suse.cz>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"i8042 keyboard and mouse controller driver\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_nokbd\">i8042_nokbd</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#nokbd\">nokbd</a>, <a class=\"id\" href=\"#i8042_nokbd\">i8042_nokbd</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#nokbd\">nokbd</a>, \"Do not probe or use KBD port.\");", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_noaux\">i8042_noaux</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#noaux\">noaux</a>, <a class=\"id\" href=\"#i8042_noaux\">i8042_noaux</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#noaux\">noaux</a>, \"Do not probe or use AUX (mouse) port.\");", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_nomux\">i8042_nomux</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#nomux\">nomux</a>, <a class=\"id\" href=\"#i8042_nomux\">i8042_nomux</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#nomux\">nomux</a>, \"Do not check whether an active multiplexing controller is present.\");", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_unlock\">i8042_unlock</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#unlock\">unlock</a>, <a class=\"id\" href=\"#i8042_unlock\">i8042_unlock</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#unlock\">unlock</a>, \"Ignore keyboard lock.\");", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_reset\">i8042_reset</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#reset\">reset</a>, <a class=\"id\" href=\"#i8042_reset\">i8042_reset</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#reset\">reset</a>, \"Reset controller during init and cleanup.\");", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_direct\">i8042_direct</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#direct\">direct</a>, <a class=\"id\" href=\"#i8042_direct\">i8042_direct</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#direct\">direct</a>, \"Put keyboard port into non-translated mode.\");", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_dumbkbd\">i8042_dumbkbd</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#dumbkbd\">dumbkbd</a>, <a class=\"id\" href=\"#i8042_dumbkbd\">i8042_dumbkbd</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#dumbkbd\">dumbkbd</a>, \"Pretend that controller can only read data from keyboard\");", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_noloop\">i8042_noloop</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#noloop\">noloop</a>, <a class=\"id\" href=\"#i8042_noloop\">i8042_noloop</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#noloop\">noloop</a>, \"Disable the AUX Loopback command while probing for the AUX port\");", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86\">CONFIG_X86</a>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_dritek\">i8042_dritek</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#dritek\">dritek</a>, <a class=\"id\" href=\"#i8042_dritek\">i8042_dritek</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#dritek\">dritek</a>, \"Force enable the Dritek keyboard extension\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PNP\">CONFIG_PNP</a>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_nopnp\">i8042_nopnp</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#nopnp\">nopnp</a>, <a class=\"id\" href=\"#i8042_nopnp\">i8042_nopnp</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#nopnp\">nopnp</a>, \"Do not use PNP to detect controller settings\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_debug\">i8042_debug</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#debug\">debug</a>, <a class=\"id\" href=\"#i8042_debug\">i8042_debug</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0600);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#debug\">debug</a>, \"Turn i8042 debugging mode on and off\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_bypass_aux_irq_test\">i8042_bypass_aux_irq_test</a>;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"i8042.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * i8042_lock protects serialization between i8042_command and</span>", 
"<span class=\"comment\"> * the interrupt handler.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#i8042_lock\">i8042_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Writers to AUX and KBD ports as well as users issuing i8042_command</span>", 
"<span class=\"comment\"> * directly should acquire i8042_mutex (by means of calling</span>", 
"<span class=\"comment\"> * i8042_lock_chip() and i8042_unlock_ship() helpers) to ensure that</span>", 
"<span class=\"comment\"> * they do not disturb each other (unfortunately in many i8042</span>", 
"<span class=\"comment\"> * implementations write to one of the ports will immediately abort</span>", 
"<span class=\"comment\"> * command that is being processed by another port).</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#i8042_mutex\">i8042_mutex</a>);", 
"", 
"struct <a class=\"id\" href=\"#i8042_port\">i8042_port</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#serio\">serio</a> *<a class=\"id\" href=\"#serio\">serio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#exists\">exists</a>;", 
"<span class=\"ts\"/>signed char <a class=\"id\" href=\"#mux\">mux</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#I8042_KBD_PORT_NO\">I8042_KBD_PORT_NO</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#I8042_AUX_PORT_NO\">I8042_AUX_PORT_NO</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#I8042_MUX_PORT_NO\">I8042_MUX_PORT_NO</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#I8042_NUM_PORTS\">I8042_NUM_PORTS</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#I8042_NUM_MUX_PORTS\">I8042_NUM_MUX_PORTS</a> + 2)", 
"", 
"static struct <a class=\"id\" href=\"#i8042_port\">i8042_port</a> <a class=\"id\" href=\"#i8042_ports\">i8042_ports</a>[<a class=\"id\" href=\"#I8042_NUM_PORTS\">I8042_NUM_PORTS</a>];", 
"", 
"static unsigned char <a class=\"id\" href=\"#i8042_initial_ctr\">i8042_initial_ctr</a>;", 
"static unsigned char <a class=\"id\" href=\"#i8042_ctr\">i8042_ctr</a>;", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_mux_present\">i8042_mux_present</a>;", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_kbd_irq_registered\">i8042_kbd_irq_registered</a>;", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#i8042_aux_irq_registered\">i8042_aux_irq_registered</a>;", 
"static unsigned char <a class=\"id\" href=\"#i8042_suppress_kbd_ack\">i8042_suppress_kbd_ack</a>;", 
"static struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#i8042_platform_device\">i8042_platform_device</a>;", 
"", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#i8042_interrupt\">i8042_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"static <a class=\"id\" href=\"#bool\">bool</a> (*<a class=\"id\" href=\"#i8042_platform_filter\">i8042_platform_filter</a>)(unsigned char <a class=\"id\" href=\"#data\">data</a>, unsigned char <a class=\"id\" href=\"#str\">str</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#serio\">serio</a> *<a class=\"id\" href=\"#serio\">serio</a>);", 
"", 
"void <a class=\"id\" href=\"#i8042_lock_chip\">i8042_lock_chip</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#i8042_mutex\">i8042_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#i8042_lock_chip\">i8042_lock_chip</a>);", 
"", 
"void <a class=\"id\" href=\"#i8042_unlock_chip\">i8042_unlock_chip</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#i8042_mutex\">i8042_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#i8042_unlock_chip\">i8042_unlock_chip</a>);", 
"", 
"int <a class=\"id\" href=\"#i8042_install_filter\">i8042_install_filter</a>(<a class=\"id\" href=\"#bool\">bool</a> (*<a class=\"id\" href=\"#filter\">filter</a>)(unsigned char <a class=\"id\" href=\"#data\">data</a>, unsigned char <a class=\"id\" href=\"#str\">str</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#serio\">serio</a> *<a class=\"id\" href=\"#serio\">serio</a>))", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#i8042_lock\">i8042_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i8042_platform_filter\">i8042_platform_filter</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i8042_platform_filter\">i8042_platform_filter</a> = <a class=\"id\" href=\"#filter\">filter</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#i8042_lock\">i8042_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#i8042_install_filter\">i8042_install_filter</a>);", 
"", 
"int <a class=\"id\" href=\"#i8042_remove_filter\">i8042_remove_filter</a>(<a class=\"id\" href=\"#bool\">bool</a> (*<a class=\"id\" href=\"#filter\">filter</a>)(unsigned char <a class=\"id\" href=\"#data\">data</a>, unsigned char <a class=\"id\" href=\"#str\">str</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#serio\">serio</a> *<a class=\"id\" href=\"#port\">port</a>))", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#i8042_lock\">i8042_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i8042_platform_filter\">i8042_platform_filter</a> != <a class=\"id\" href=\"#filter\">filter</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i8042_platform_filter\">i8042_platform_filter</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#i8042_lock\">i8042_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#i8042_remove_filter\">i8042_remove_filter</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The i8042_wait_read() and i8042_wait_write functions wait for the i8042 to</span>", 
"<span class=\"comment\"> * be ready for reading values from it / writing values to it.</span>", 
"<span class=\"comment\"> * Called always with i8042_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#i8042_wait_read\">i8042_wait_read</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"", 
"<span class=\"ts\"/>while ((~<a class=\"id\" href=\"#i8042_read_status\">i8042_read_status</a>() &amp; <a class=\"id\" href=\"#I8042_STR_OBF\">I8042_STR_OBF</a>) && (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#I8042_CTL_TIMEOUT\">I8042_CTL_TIMEOUT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(50);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -(<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#I8042_CTL_TIMEOUT\">I8042_CTL_TIMEOUT</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#i8042_wait_write\">i8042_wait_write</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#i8042_read_status\">i8042_read_status</a>() &amp; <a class=\"id\" href=\"#I8042_STR_IBF\">I8042_STR_IBF</a>) && (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#I8042_CTL_TIMEOUT\">I8042_CTL_TIMEOUT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(50);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -(<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#I8042_CTL_TIMEOUT\">I8042_CTL_TIMEOUT</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * i8042_flush() flushes all data that may be in the keyboard and mouse buffers</span>", 
"<span class=\"comment\"> * of the i8042 down the toilet.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#i8042_flush\">i8042_flush</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#str\">str</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#i8042_lock\">i8042_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>while (((<a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#i8042_read_status\">i8042_read_status</a>()) &amp; <a class=\"id\" href=\"#I8042_STR_OBF\">I8042_STR_OBF</a>) && (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#I8042_BUFFER_SIZE\">I8042_BUFFER_SIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(50);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#i8042_read_data\">i8042_read_data</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbg\">dbg</a>(\"%02x <- i8042 (flush, %s)\", <a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> &amp; <a class=\"id\" href=\"#I8042_STR_AUXDATA\">I8042_STR_AUXDATA</a> ? \"aux\" : \"kbd\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#i8042_lock\">i8042_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * i8042_command() executes a command on the i8042. It also sends the input</span>", 
"<span class=\"comment\"> * parameter(s) of the commands to it, and receives the output value(s). The</span>", 
"<span class=\"comment\"> * parameters are to be stored in the param array, and the output is placed</span>", 
"<span class=\"comment\"> * into the same array. The number of the parameters and output values is</span>", 
"<span class=\"comment\"> * encoded in bits 8-11 of the command number.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#__i8042_command\">__i8042_command</a>(unsigned char *<a class=\"id\" href=\"#param\">param</a>, int <a class=\"id\" href=\"#command\">command</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i8042_noloop\">i8042_noloop</a> && <a class=\"id\" href=\"#command\">command</a> == <a class=\"id\" href=\"#I8042_CMD_AUX_LOOP\">I8042_CMD_AUX_LOOP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#i8042_wait_write\">i8042_wait_write</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbg\">dbg</a>(\"%02x -> i8042 (command)\", <a class=\"id\" href=\"#command\">command</a> &amp; 0xff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i8042_write_command\">i8042_write_command</a>(<a class=\"id\" href=\"#command\">command</a> &amp; 0xff);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; ((<a class=\"id\" href=\"#command\">command</a> >> 12) &amp; 0xf); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#i8042_wait_write\">i8042_wait_write</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbg\">dbg</a>(\"%02x -> i8042 (parameter)\", <a class=\"id\" href=\"#param\">param</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i8042_write_data\">i8042_write_data</a>(<a class=\"id\" href=\"#param\">param</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; ((<a class=\"id\" href=\"#command\">command</a> >> 8) &amp; 0xf); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#i8042_wait_read\">i8042_wait_read</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbg\">dbg</a>(\"     -- i8042 (timeout)\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#command\">command</a> == <a class=\"id\" href=\"#I8042_CMD_AUX_LOOP\">I8042_CMD_AUX_LOOP</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#i8042_read_status\">i8042_read_status</a>() &amp; <a class=\"id\" href=\"#I8042_STR_AUXDATA\">I8042_STR_AUXDATA</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbg\">dbg</a>(\"     -- i8042 (auxerr)\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#i8042_read_data\">i8042_read_data</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbg\">dbg</a>(\"%02x <- i8042 (return)\", <a class=\"id\" href=\"#param\">param</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#i8042_command\">i8042_command</a>(unsigned char *<a class=\"id\" href=\"#param\">param</a>, int <a class=\"id\" href=\"#command\">command</a>)", 
"{", 
];
xr_frag_insert('l/af/e20d8ff3d3c253bdef671d9c8578e6d2cf3470.xr', __xr_tmp);
