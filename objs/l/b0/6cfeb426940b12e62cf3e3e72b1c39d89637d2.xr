var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Event char devices, giving access to raw input device events.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 1999-2002 Vojtech Pavlik</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License version 2 as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVDEV_MINOR_BASE\">EVDEV_MINOR_BASE</a><span class=\"ts\"/>64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVDEV_MINORS\">EVDEV_MINORS</a><span class=\"ts\"/><span class=\"ts\"/>32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVDEV_MIN_BUFFER_SIZE\">EVDEV_MIN_BUFFER_SIZE</a><span class=\"ts\"/>64U", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVDEV_BUF_PACKETS\">EVDEV_BUF_PACKETS</a><span class=\"ts\"/>8", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#input\">input</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"input-compat.h\"", 
"", 
"struct <a class=\"id\" href=\"#evdev\">evdev</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#open\">open</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#minor\">minor</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#input_handle\">input_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> <a class=\"id\" href=\"#wait\">wait</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#grab\">grab</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#client_list\">client_list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#client_lock\">client_lock</a>; <span class=\"comment\">/* protects client_list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#mutex\">mutex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#exist\">exist</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#buffer_lock\">buffer_lock</a>; <span class=\"comment\">/* protects access to buffer, head and tail */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fasync_struct\">fasync_struct</a> *<a class=\"id\" href=\"#fasync\">fasync</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bufsize\">bufsize</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#input_event\">input_event</a> <a class=\"id\" href=\"#buffer\">buffer</a>[];", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev_table\">evdev_table</a>[<a class=\"id\" href=\"#EVDEV_MINORS\">EVDEV_MINORS</a>];", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#evdev_table_mutex\">evdev_table_mutex</a>);", 
"", 
"static void <a class=\"id\" href=\"#evdev_pass_event\">evdev_pass_event</a>(struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#input_event\">input_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Interrupts are disabled, just acquire the lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure we don't leave with the client buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * \"empty\" by having client-&gt;head == client-&gt;tail.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#buffer_lock\">buffer_lock</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#head\">head</a>++] = *<a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#head\">head</a> &= <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#bufsize\">bufsize</a> - 1;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#head\">head</a> == <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#tail\">tail</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#buffer_lock\">buffer_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#EV_SYN\">EV_SYN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#fasync\">fasync</a>, <a class=\"id\" href=\"#SIGIO\">SIGIO</a>, <a class=\"id\" href=\"#POLL_IN\">POLL_IN</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Pass incoming event to all connected clients.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#evdev_event\">evdev_event</a>(struct <a class=\"id\" href=\"#input_handle\">input_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#type\">type</a>, unsigned int <a class=\"id\" href=\"#code\">code</a>, int <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#input_event\">input_event</a> <a class=\"id\" href=\"#event\">event</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_gettimeofday\">do_gettimeofday</a>(&amp;<a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#time\">time</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#code\">code</a> = <a class=\"id\" href=\"#code\">code</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#grab\">grab</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#client\">client</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evdev_pass_event\">evdev_pass_event</a>(<a class=\"id\" href=\"#client\">client</a>, &amp;<a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#client\">client</a>, &amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_list\">client_list</a>, <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evdev_pass_event\">evdev_pass_event</a>(<a class=\"id\" href=\"#client\">client</a>, &amp;<a class=\"id\" href=\"#event\">event</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#evdev_fasync\">evdev_fasync</a>(int <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#on\">on</a>)", 
"{", 
];
xr_frag_insert('l/b0/6cfeb426940b12e62cf3e3e72b1c39d89637d2.xr', __xr_tmp);
