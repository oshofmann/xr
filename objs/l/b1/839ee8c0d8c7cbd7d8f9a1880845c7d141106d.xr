var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * See Documentation/circular-buffers.txt for more information.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_CIRC_BUF_H\">_LINUX_CIRC_BUF_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CIRC_BUF_H\">_LINUX_CIRC_BUF_H</a> 1", 
"", 
"struct <a class=\"id\" href=\"#circ_buf\">circ_buf</a> {", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tail\">tail</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Return count in buffer.  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CIRC_CNT\">CIRC_CNT</a>(<a class=\"id\" href=\"#head\">head</a>,<a class=\"id\" href=\"#tail\">tail</a>,<a class=\"id\" href=\"#size\">size</a>) (((<a class=\"id\" href=\"#head\">head</a>) - (<a class=\"id\" href=\"#tail\">tail</a>)) &amp; ((<a class=\"id\" href=\"#size\">size</a>)-1))", 
"", 
"<span class=\"comment\">/* Return space available, 0..size-1.  We always leave one free char</span>", 
"<span class=\"comment\">   as a completely full buffer has head == tail, which is the same as</span>", 
"<span class=\"comment\">   empty.  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CIRC_SPACE\">CIRC_SPACE</a>(<a class=\"id\" href=\"#head\">head</a>,<a class=\"id\" href=\"#tail\">tail</a>,<a class=\"id\" href=\"#size\">size</a>) <a class=\"id\" href=\"#CIRC_CNT\">CIRC_CNT</a>((<a class=\"id\" href=\"#tail\">tail</a>),((<a class=\"id\" href=\"#head\">head</a>)+1),(<a class=\"id\" href=\"#size\">size</a>))", 
"", 
"<span class=\"comment\">/* Return count up to the end of the buffer.  Carefully avoid</span>", 
"<span class=\"comment\">   accessing head and tail more than once, so they can change</span>", 
"<span class=\"comment\">   underneath us without returning inconsistent results.  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CIRC_CNT_TO_END\">CIRC_CNT_TO_END</a>(<a class=\"id\" href=\"#head\">head</a>,<a class=\"id\" href=\"#tail\">tail</a>,<a class=\"id\" href=\"#size\">size</a>) \\", 
"<span class=\"ts\"/>({int <a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#size\">size</a>) - (<a class=\"id\" href=\"#tail\">tail</a>); \\", 
"<span class=\"ts\"/>  int <a class=\"id\" href=\"#n\">n</a> = ((<a class=\"id\" href=\"#head\">head</a>) + <a class=\"id\" href=\"#end\">end</a>) &amp; ((<a class=\"id\" href=\"#size\">size</a>)-1); \\", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#end\">end</a> ? <a class=\"id\" href=\"#n\">n</a> : <a class=\"id\" href=\"#end\">end</a>;})", 
"", 
"<span class=\"comment\">/* Return space available up to the end of the buffer.  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CIRC_SPACE_TO_END\">CIRC_SPACE_TO_END</a>(<a class=\"id\" href=\"#head\">head</a>,<a class=\"id\" href=\"#tail\">tail</a>,<a class=\"id\" href=\"#size\">size</a>) \\", 
"<span class=\"ts\"/>({int <a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#size\">size</a>) - 1 - (<a class=\"id\" href=\"#head\">head</a>); \\", 
"<span class=\"ts\"/>  int <a class=\"id\" href=\"#n\">n</a> = (<a class=\"id\" href=\"#end\">end</a> + (<a class=\"id\" href=\"#tail\">tail</a>)) &amp; ((<a class=\"id\" href=\"#size\">size</a>)-1); \\", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#n\">n</a> <= <a class=\"id\" href=\"#end\">end</a> ? <a class=\"id\" href=\"#n\">n</a> : <a class=\"id\" href=\"#end\">end</a>+1;})", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_CIRC_BUF_H  */</span>", 
];
xr_frag_insert('l/b1/839ee8c0d8c7cbd7d8f9a1880845c7d141106d.xr', __xr_tmp);
