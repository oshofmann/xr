var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  boot.c - Architecture-Specific Low-Level ACPI Boot Support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Paul Diefenbaugh &lt;paul.s.diefenbaugh@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001 Jun Nakajima &lt;jun.nakajima@intel.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> *  (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> *  along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi_pmtmr\">acpi_pmtmr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmi\">dmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pci_x86\">pci_x86</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io_apic\">io_apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mpspec\">mpspec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#acpi_force\">acpi_force</a> = 0;", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#acpi_rsdt_forced\">acpi_rsdt_forced</a>;", 
"int <a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"# <a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"# <a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#numa_64\">numa_64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* X86 */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#end\">end</a>) (<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \\", 
"<span class=\"ts\"/><span class=\"ts\"/>(!<a class=\"id\" href=\"#entry\">entry</a>) || (unsigned long)<a class=\"id\" href=\"#entry\">entry</a> + sizeof(*<a class=\"id\" href=\"#entry\">entry</a>) &gt; <a class=\"id\" href=\"#end\">end</a> ||  \\", 
"<span class=\"ts\"/><span class=\"ts\"/>((struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> *)<a class=\"id\" href=\"#entry\">entry</a>)-><a class=\"id\" href=\"#length\">length</a> &lt; sizeof(*<a class=\"id\" href=\"#entry\">entry</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ACPI: \"", 
"", 
"int <a class=\"id\" href=\"#acpi_noirq\">acpi_noirq</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* skip ACPI IRQ initialization */</span>", 
"int <a class=\"id\" href=\"#acpi_pci_disabled\">acpi_pci_disabled</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* skip ACPI PCI scan and IRQ initialization */</span>", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_pci_disabled\">acpi_pci_disabled</a>);", 
"", 
"int <a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a>;", 
"int <a class=\"id\" href=\"#acpi_ioapic\">acpi_ioapic</a>;", 
"int <a class=\"id\" href=\"#acpi_strict\">acpi_strict</a>;", 
"", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"int <a class=\"id\" href=\"#acpi_sci_override_gsi\">acpi_sci_override_gsi</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"int <a class=\"id\" href=\"#acpi_skip_timer_override\">acpi_skip_timer_override</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"int <a class=\"id\" href=\"#acpi_use_timer_override\">acpi_use_timer_override</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#acpi_lapic_addr\">acpi_lapic_addr</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = <a class=\"id\" href=\"#APIC_DEFAULT_PHYS_BASE\">APIC_DEFAULT_PHYS_BASE</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__HAVE_ARCH_CMPXCHG\">__HAVE_ARCH_CMPXCHG</a>", 
"#<a class=\"id\" href=\"#warning\">warning</a> <a class=\"id\" href=\"#ACPI\">ACPI</a> <a class=\"id\" href=\"#uses\">uses</a> <a class=\"id\" href=\"#CMPXCHG\">CMPXCHG</a>, <a class=\"id\" href=\"#i486\">i486</a> <a class=\"id\" href=\"#and\">and</a> <a class=\"id\" href=\"#later\">later</a> <a class=\"id\" href=\"#hardware\">hardware</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* --------------------------------------------------------------------------</span>", 
"<span class=\"comment\">                              Boot-time Configuration</span>", 
"<span class=\"comment\">   -------------------------------------------------------------------------- */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The default interrupt routing model is PIC (8259).  This gets</span>", 
"<span class=\"comment\"> * overridden if IOAPICs are enumerated (below).</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#acpi_irq_model_id\">acpi_irq_model_id</a> <a class=\"id\" href=\"#acpi_irq_model\">acpi_irq_model</a> = <a class=\"id\" href=\"#ACPI_IRQ_MODEL_PIC\">ACPI_IRQ_MODEL_PIC</a>;", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ISA irqs by default are the first 16 gsis but can be</span>", 
"<span class=\"comment\"> * any gsi as specified by an interrupt source override.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#isa_irq_to_gsi\">isa_irq_to_gsi</a>[<a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>] <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15", 
"};", 
"", 
"static unsigned int <a class=\"id\" href=\"#gsi_to_irq\">gsi_to_irq</a>(unsigned int <a class=\"id\" href=\"#gsi\">gsi</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#gsi\">gsi</a> + <a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#isa_irq_to_gsi\">isa_irq_to_gsi</a>[<a class=\"id\" href=\"#i\">i</a>] == <a class=\"id\" href=\"#gsi\">gsi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Provide an identity mapping of gsi == irq</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * except on truly weird platforms that have</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * non isa irqs in the first 16 gsis.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gsi\">gsi</a> >= <a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#gsi_top\">gsi_top</a> + <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#irq_to_gsi\">irq_to_gsi</a>(int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> &lt; <a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gsi\">gsi</a> = <a class=\"id\" href=\"#isa_irq_to_gsi\">isa_irq_to_gsi</a>[<a class=\"id\" href=\"#irq\">irq</a>];", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#irq\">irq</a> &lt; <a class=\"id\" href=\"#gsi_top\">gsi_top</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gsi\">gsi</a> = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#irq\">irq</a> &lt; (<a class=\"id\" href=\"#gsi_top\">gsi_top</a> + <a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gsi\">gsi</a> = <a class=\"id\" href=\"#irq\">irq</a> - <a class=\"id\" href=\"#gsi_top\">gsi_top</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gsi\">gsi</a> = 0xffffffff;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Temporarily use the virtual area starting from FIX_IO_APIC_BASE_END,</span>", 
"<span class=\"comment\"> * to map the target physical address. The problem is that set_fixmap()</span>", 
"<span class=\"comment\"> * provides a single page, and it is possible that the page is not</span>", 
"<span class=\"comment\"> * sufficient.</span>", 
"<span class=\"comment\"> * By using this area, we can map up to MAX_IO_APICS pages temporarily,</span>", 
"<span class=\"comment\"> * i.e. until the next __va_range() call.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Important Safety Note:  The fixed I/O APIC page numbers are *subtracted*</span>", 
"<span class=\"comment\"> * from the fixed base.  That's why we start at FIX_IO_APIC_BASE_END and</span>", 
"<span class=\"comment\"> * count idx down while incrementing the phys address.</span>", 
"<span class=\"comment\"> */</span>", 
"char *<a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#__acpi_map_table\">__acpi_map_table</a>(unsigned long <a class=\"id\" href=\"#phys\">phys</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#phys\">phys</a> || !<a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#early_ioremap\">early_ioremap</a>(<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#__acpi_unmap_table\">__acpi_unmap_table</a>(char *<a class=\"id\" href=\"#map\">map</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#map\">map</a> || !<a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_parse_madt\">acpi_parse_madt</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_madt\">acpi_table_madt</a> *<a class=\"id\" href=\"#madt\">madt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_apic\">cpu_has_apic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#madt\">madt</a> = (struct <a class=\"id\" href=\"#acpi_table_madt\">acpi_table_madt</a> *)<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#madt\">madt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unable to map MADT\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#madt\">madt</a>-><a class=\"id\" href=\"#address\">address</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_lapic_addr\">acpi_lapic_addr</a> = (<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#madt\">madt</a>-><a class=\"id\" href=\"#address\">address</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Local APIC address 0x%08x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#madt\">madt</a>-><a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#default_acpi_madt_oem_check\">default_acpi_madt_oem_check</a>(<a class=\"id\" href=\"#madt\">madt</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#oem_id\">oem_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#madt\">madt</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#oem_table_id\">oem_table_id</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#acpi_register_lapic\">acpi_register_lapic</a>(int <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#enabled\">enabled</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ver\">ver</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#enabled\">enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#disabled_cpus\">disabled_cpus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a> != -1U)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ver\">ver</a> = <a class=\"id\" href=\"#apic_version\">apic_version</a>[<a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#generic_processor_info\">generic_processor_info</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#ver\">ver</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_x2apic\">acpi_parse_x2apic</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> *<a class=\"id\" href=\"#header\">header</a>, const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_local_x2apic\">acpi_madt_local_x2apic</a> *<a class=\"id\" href=\"#processor\">processor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a> = (struct <a class=\"id\" href=\"#acpi_madt_local_x2apic\">acpi_madt_local_x2apic</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#processor\">processor</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_madt_entry\">acpi_table_print_madt_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_X2APIC\">CONFIG_X86_X2APIC</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to register disabled CPU as well to permit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * counting disabled CPUs. This allows us to size</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cpus_possible_map more accurately, to permit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to not preallocating memory for all NR_CPUS</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when we use CPU hotplug.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_register_lapic\">acpi_register_lapic</a>(<a class=\"id\" href=\"#processor\">processor</a>-><a class=\"id\" href=\"#local_apic_id\">local_apic_id</a>,<span class=\"ts\"/><span class=\"comment\">/* APIC ID */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#processor\">processor</a>-><a class=\"id\" href=\"#lapic_flags\">lapic_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_ENABLED\">ACPI_MADT_ENABLED</a>);", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"x2apic entry ignored\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_lapic\">acpi_parse_lapic</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> * <a class=\"id\" href=\"#header\">header</a>, const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_local_apic\">acpi_madt_local_apic</a> *<a class=\"id\" href=\"#processor\">processor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a> = (struct <a class=\"id\" href=\"#acpi_madt_local_apic\">acpi_madt_local_apic</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#processor\">processor</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_madt_entry\">acpi_table_print_madt_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to register disabled CPU as well to permit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * counting disabled CPUs. This allows us to size</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cpus_possible_map more accurately, to permit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to not preallocating memory for all NR_CPUS</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when we use CPU hotplug.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_register_lapic\">acpi_register_lapic</a>(<a class=\"id\" href=\"#processor\">processor</a>-><a class=\"id\" href=\"#id\">id</a>,<span class=\"ts\"/><span class=\"comment\">/* APIC ID */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#processor\">processor</a>-><a class=\"id\" href=\"#lapic_flags\">lapic_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_ENABLED\">ACPI_MADT_ENABLED</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_sapic\">acpi_parse_sapic</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> *<a class=\"id\" href=\"#header\">header</a>, const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_local_sapic\">acpi_madt_local_sapic</a> *<a class=\"id\" href=\"#processor\">processor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a> = (struct <a class=\"id\" href=\"#acpi_madt_local_sapic\">acpi_madt_local_sapic</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#processor\">processor</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_madt_entry\">acpi_table_print_madt_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_register_lapic\">acpi_register_lapic</a>((<a class=\"id\" href=\"#processor\">processor</a>-><a class=\"id\" href=\"#id\">id</a> << 8) | <a class=\"id\" href=\"#processor\">processor</a>-><a class=\"id\" href=\"#eid\">eid</a>,<span class=\"comment\">/* APIC ID */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#processor\">processor</a>-><a class=\"id\" href=\"#lapic_flags\">lapic_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_ENABLED\">ACPI_MADT_ENABLED</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_lapic_addr_ovr\">acpi_parse_lapic_addr_ovr</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> * <a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_local_apic_override\">acpi_madt_local_apic_override</a> *<a class=\"id\" href=\"#lapic_addr_ovr\">lapic_addr_ovr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lapic_addr_ovr\">lapic_addr_ovr</a> = (struct <a class=\"id\" href=\"#acpi_madt_local_apic_override\">acpi_madt_local_apic_override</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#lapic_addr_ovr\">lapic_addr_ovr</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_lapic_addr\">acpi_lapic_addr</a> = <a class=\"id\" href=\"#lapic_addr_ovr\">lapic_addr_ovr</a>-><a class=\"id\" href=\"#address\">address</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_x2apic_nmi\">acpi_parse_x2apic_nmi</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_local_x2apic_nmi\">acpi_madt_local_x2apic_nmi</a> *<a class=\"id\" href=\"#x2apic_nmi\">x2apic_nmi</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x2apic_nmi\">x2apic_nmi</a> = (struct <a class=\"id\" href=\"#acpi_madt_local_x2apic_nmi\">acpi_madt_local_x2apic_nmi</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#x2apic_nmi\">x2apic_nmi</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_madt_entry\">acpi_table_print_madt_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x2apic_nmi\">x2apic_nmi</a>-><a class=\"id\" href=\"#lint\">lint</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"NMI not connected to LINT 1!\\n\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_lapic_nmi\">acpi_parse_lapic_nmi</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> * <a class=\"id\" href=\"#header\">header</a>, const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_local_apic_nmi\">acpi_madt_local_apic_nmi</a> *<a class=\"id\" href=\"#lapic_nmi\">lapic_nmi</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lapic_nmi\">lapic_nmi</a> = (struct <a class=\"id\" href=\"#acpi_madt_local_apic_nmi\">acpi_madt_local_apic_nmi</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#lapic_nmi\">lapic_nmi</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_madt_entry\">acpi_table_print_madt_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lapic_nmi\">lapic_nmi</a>-><a class=\"id\" href=\"#lint\">lint</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"NMI not connected to LINT 1!\\n\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*CONFIG_X86_LOCAL_APIC */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_ioapic\">acpi_parse_ioapic</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> * <a class=\"id\" href=\"#header\">header</a>, const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_io_apic\">acpi_madt_io_apic</a> *<a class=\"id\" href=\"#ioapic\">ioapic</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a> = (struct <a class=\"id\" href=\"#acpi_madt_io_apic\">acpi_madt_io_apic</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#ioapic\">ioapic</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_madt_entry\">acpi_table_print_madt_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_register_ioapic\">mp_register_ioapic</a>(<a class=\"id\" href=\"#ioapic\">ioapic</a>-><a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ioapic\">ioapic</a>-><a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#ioapic\">ioapic</a>-><a class=\"id\" href=\"#global_irq_base\">global_irq_base</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Parse Interrupt Source Override for the ACPI SCI</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_sci_ioapic_setup\">acpi_sci_ioapic_setup</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bus_irq\">bus_irq</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#polarity\">polarity</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#trigger\">trigger</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trigger\">trigger</a> == 0)<span class=\"ts\"/><span class=\"comment\">/* compatible SCI trigger is level */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = 3;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#polarity\">polarity</a> == 0)<span class=\"ts\"/><span class=\"comment\">/* compatible SCI polarity is low */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#polarity\">polarity</a> = 3;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Command-line over-ride via acpi_sci= */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_TRIGGER_MASK\">ACPI_MADT_TRIGGER_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = (<a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_TRIGGER_MASK\">ACPI_MADT_TRIGGER_MASK</a>) >> 2;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_POLARITY_MASK\">ACPI_MADT_POLARITY_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#polarity\">polarity</a> = <a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_POLARITY_MASK\">ACPI_MADT_POLARITY_MASK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mp_config_acpi_legacy_irqs() already setup IRQs &lt; 16</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If GSI is &lt; 16, this will update its flags,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * else it will create a new mp_irqs[] entry.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_override_legacy_irq\">mp_override_legacy_irq</a>(<a class=\"id\" href=\"#bus_irq\">bus_irq</a>, <a class=\"id\" href=\"#polarity\">polarity</a>, <a class=\"id\" href=\"#trigger\">trigger</a>, <a class=\"id\" href=\"#gsi\">gsi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * stash over-ride to indicate we've been here</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and for later update of acpi_gbl_FADT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_sci_override_gsi\">acpi_sci_override_gsi</a> = <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_int_src_ovr\">acpi_parse_int_src_ovr</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> * <a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_interrupt_override\">acpi_madt_interrupt_override</a> *<a class=\"id\" href=\"#intsrc\">intsrc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a> = (struct <a class=\"id\" href=\"#acpi_madt_interrupt_override\">acpi_madt_interrupt_override</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#intsrc\">intsrc</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_madt_entry\">acpi_table_print_madt_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#source_irq\">source_irq</a> == <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#sci_interrupt\">sci_interrupt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_sci_ioapic_setup\">acpi_sci_ioapic_setup</a>(<a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#source_irq\">source_irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#inti_flags\">inti_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_POLARITY_MASK\">ACPI_MADT_POLARITY_MASK</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#inti_flags\">inti_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_TRIGGER_MASK\">ACPI_MADT_TRIGGER_MASK</a>) >> 2,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#global_irq\">global_irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_skip_timer_override\">acpi_skip_timer_override</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#source_irq\">source_irq</a> == 0 && <a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#global_irq\">global_irq</a> == 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"BIOS IRQ0 pin2 override ignored.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_override_legacy_irq\">mp_override_legacy_irq</a>(<a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#source_irq\">source_irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#inti_flags\">inti_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_POLARITY_MASK\">ACPI_MADT_POLARITY_MASK</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#inti_flags\">inti_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_TRIGGER_MASK\">ACPI_MADT_TRIGGER_MASK</a>) >> 2,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>-><a class=\"id\" href=\"#global_irq\">global_irq</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_nmi_src\">acpi_parse_nmi_src</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> * <a class=\"id\" href=\"#header\">header</a>, const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_nmi_source\">acpi_madt_nmi_source</a> *<a class=\"id\" href=\"#nmi_src\">nmi_src</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nmi_src\">nmi_src</a> = (struct <a class=\"id\" href=\"#acpi_madt_nmi_source\">acpi_madt_nmi_source</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BAD_MADT_ENTRY\">BAD_MADT_ENTRY</a>(<a class=\"id\" href=\"#nmi_src\">nmi_src</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_madt_entry\">acpi_table_print_madt_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TBD: Support nimsrc entries? */</span>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CONFIG_X86_IO_APIC */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * acpi_pic_sci_set_trigger()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * use ELCR to set PIC-mode trigger type for SCI</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If a PIC-mode SCI is not recognized or gives spurious IRQ7's</span>", 
"<span class=\"comment\"> * it may require Edge Trigger -- use \"acpi_sci=edge\"</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Port 0x4d0-4d1 are ECLR1 and ECLR2, the Edge/Level Control Registers</span>", 
"<span class=\"comment\"> * for the 8259 PIC.  bit[n] = 1 means irq[n] is Level, otherwise Edge.</span>", 
"<span class=\"comment\"> * ECLR1 is IRQs 0-7 (IRQ 0, 1, 2 must be 0)</span>", 
"<span class=\"comment\"> * ECLR2 is IRQs 8-15 (IRQ 8, 13 must be 0)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_pic_sci_set_trigger\">acpi_pic_sci_set_trigger</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#trigger\">trigger</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = 1 << <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#new\">new</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Real old ELCR mask */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#inb\">inb</a>(0x4d0) | (<a class=\"id\" href=\"#inb\">inb</a>(0x4d1) << 8);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we use ACPI to set PCI IRQs, then we should clear ELCR</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since we will set it correctly as we enable the PCI irq</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * routing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#acpi_noirq\">acpi_noirq</a> ? <a class=\"id\" href=\"#old\">old</a> : 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Update SCI information in the ELCR, it isn't in the PCI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * routing tables..</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#trigger\">trigger</a>) {", 
"<span class=\"ts\"/>case 1:<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Edge - clear */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> &= ~<a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 3:<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Level - set */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> |= <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a> == <a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"setting ELCR to %04x (from %04x)\\n\", <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(<a class=\"id\" href=\"#new\">new</a>, 0x4d0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(<a class=\"id\" href=\"#new\">new</a> >> 8, 0x4d1);", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_gsi_to_irq\">acpi_gsi_to_irq</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>, unsigned int *<a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#gsi_to_irq\">gsi_to_irq</a>(<a class=\"id\" href=\"#gsi\">gsi</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_irq_model\">acpi_irq_model</a> == <a class=\"id\" href=\"#ACPI_IRQ_MODEL_IOAPIC\">ACPI_IRQ_MODEL_IOAPIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_IO_APIC_irq_extra\">setup_IO_APIC_irq_extra</a>(<a class=\"id\" href=\"#gsi\">gsi</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_isa_irq_to_gsi\">acpi_isa_irq_to_gsi</a>(unsigned <a class=\"id\" href=\"#isa_irq\">isa_irq</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#gsi\">gsi</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#isa_irq\">isa_irq</a> >= 16)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#gsi\">gsi</a> = <a class=\"id\" href=\"#irq_to_gsi\">irq_to_gsi</a>(<a class=\"id\" href=\"#isa_irq\">isa_irq</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * success: return IRQ number (&gt;=0)</span>", 
"<span class=\"comment\"> * failure: return &lt; 0</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#acpi_register_gsi\">acpi_register_gsi</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>, int <a class=\"id\" href=\"#trigger\">trigger</a>, int <a class=\"id\" href=\"#polarity\">polarity</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#plat_gsi\">plat_gsi</a> = <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure all (legacy) PCI IRQs are set as level-triggered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_irq_model\">acpi_irq_model</a> == <a class=\"id\" href=\"#ACPI_IRQ_MODEL_PIC\">ACPI_IRQ_MODEL_PIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#trigger\">trigger</a> == <a class=\"id\" href=\"#ACPI_LEVEL_SENSITIVE\">ACPI_LEVEL_SENSITIVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eisa_set_level_irq\">eisa_set_level_irq</a>(<a class=\"id\" href=\"#gsi\">gsi</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_irq_model\">acpi_irq_model</a> == <a class=\"id\" href=\"#ACPI_IRQ_MODEL_IOAPIC\">ACPI_IRQ_MODEL_IOAPIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#plat_gsi\">plat_gsi</a> = <a class=\"id\" href=\"#mp_register_gsi\">mp_register_gsi</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#gsi\">gsi</a>, <a class=\"id\" href=\"#trigger\">trigger</a>, <a class=\"id\" href=\"#polarity\">polarity</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#gsi_to_irq\">gsi_to_irq</a>(<a class=\"id\" href=\"#plat_gsi\">plat_gsi</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  ACPI based hotplug support for CPU</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI_HOTPLUG_CPU\">CONFIG_ACPI_HOTPLUG_CPU</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static void <a class=\"id\" href=\"#acpi_map_cpu2node\">acpi_map_cpu2node</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#physid\">physid</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI_NUMA\">CONFIG_ACPI_NUMA</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nid\">nid</a> = <a class=\"id\" href=\"#acpi_get_node\">acpi_get_node</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nid\">nid</a> == -1 || !<a class=\"id\" href=\"#node_online\">node_online</a>(<a class=\"id\" href=\"#nid\">nid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apicid_to_node\">apicid_to_node</a>[<a class=\"id\" href=\"#physid\">physid</a>] = <a class=\"id\" href=\"#nid\">nid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#numa_set_node\">numa_set_node</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#nid\">nid</a>);", 
"#else <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apicid_2_node\">apicid_2_node</a>[<a class=\"id\" href=\"#physid\">physid</a>] = <a class=\"id\" href=\"#nid\">nid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_node_map\">cpu_to_node_map</a>[<a class=\"id\" href=\"#cpu\">cpu</a>] = <a class=\"id\" href=\"#nid\">nid</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#_acpi_map_lsapic\">_acpi_map_lsapic</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, int *<a class=\"id\" href=\"#pcpu\">pcpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = { <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> *<a class=\"id\" href=\"#obj\">obj</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_madt_local_apic\">acpi_madt_local_apic</a> *<a class=\"id\" href=\"#lapic\">lapic</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#tmp_map\">tmp_map</a>, <a class=\"id\" href=\"#new_map\">new_map</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#physid\">physid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#handle\">handle</a>, \"_MAT\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> || !<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj\">obj</a> = <a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#obj\">obj</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#obj\">obj</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(*<a class=\"id\" href=\"#lapic\">lapic</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lapic\">lapic</a> = (struct <a class=\"id\" href=\"#acpi_madt_local_apic\">acpi_madt_local_apic</a> *)<a class=\"id\" href=\"#obj\">obj</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lapic\">lapic</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_MADT_TYPE_LOCAL_APIC\">ACPI_MADT_TYPE_LOCAL_APIC</a> ||", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#lapic\">lapic</a>-><a class=\"id\" href=\"#lapic_flags\">lapic_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_ENABLED\">ACPI_MADT_ENABLED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#physid\">physid</a> = <a class=\"id\" href=\"#lapic\">lapic</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#tmp_map\">tmp_map</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#new_map\">new_map</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_tmp_map\">free_tmp_map</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#tmp_map\">tmp_map</a>, <a class=\"id\" href=\"#cpu_present_mask\">cpu_present_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_register_lapic\">acpi_register_lapic</a>(<a class=\"id\" href=\"#physid\">physid</a>, <a class=\"id\" href=\"#lapic\">lapic</a>-><a class=\"id\" href=\"#lapic_flags\">lapic_flags</a> &amp; <a class=\"id\" href=\"#ACPI_MADT_ENABLED\">ACPI_MADT_ENABLED</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If mp_register_lapic successfully generates a new logical cpu</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * number, then the following will get us exactly what was mapped</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_andnot\">cpumask_andnot</a>(<a class=\"id\" href=\"#new_map\">new_map</a>, <a class=\"id\" href=\"#cpu_present_mask\">cpu_present_mask</a>, <a class=\"id\" href=\"#tmp_map\">tmp_map</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpumask_empty\">cpumask_empty</a>(<a class=\"id\" href=\"#new_map\">new_map</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (\"Unable to map lapic to logical cpu number\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_new_map\">free_new_map</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_set_pdc\">acpi_processor_set_pdc</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpumask_first\">cpumask_first</a>(<a class=\"id\" href=\"#new_map\">new_map</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_map_cpu2node\">acpi_map_cpu2node</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#physid\">physid</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pcpu\">pcpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<a class=\"id\" href=\"#free_new_map\">free_new_map</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#new_map\">new_map</a>);", 
"<a class=\"id\" href=\"#free_tmp_map\">free_tmp_map</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#tmp_map\">tmp_map</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/* wrapper to silence section mismatch warning */</span>", 
"int <a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#acpi_map_lsapic\">acpi_map_lsapic</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, int *<a class=\"id\" href=\"#pcpu\">pcpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#_acpi_map_lsapic\">_acpi_map_lsapic</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#pcpu\">pcpu</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_map_lsapic\">acpi_map_lsapic</a>);", 
"", 
"int <a class=\"id\" href=\"#acpi_unmap_lsapic\">acpi_unmap_lsapic</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#x86_cpu_to_apicid\">x86_cpu_to_apicid</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_present\">set_cpu_present</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_processors\">num_processors</a>--;", 
"", 
"<span class=\"ts\"/>return (0);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_unmap_lsapic\">acpi_unmap_lsapic</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CONFIG_ACPI_HOTPLUG_CPU */</span>", 
"", 
"int <a class=\"id\" href=\"#acpi_register_ioapic\">acpi_register_ioapic</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#phys_addr\">phys_addr</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi_base\">gsi_base</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* TBD */</span>", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_register_ioapic\">acpi_register_ioapic</a>);", 
"", 
"int <a class=\"id\" href=\"#acpi_unregister_ioapic\">acpi_unregister_ioapic</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi_base\">gsi_base</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* TBD */</span>", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_unregister_ioapic\">acpi_unregister_ioapic</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_parse_sbf\">acpi_parse_sbf</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_boot\">acpi_table_boot</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = (struct <a class=\"id\" href=\"#acpi_table_boot\">acpi_table_boot</a> *)<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unable to map SBF\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbf_port\">sbf_port</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#cmos_index\">cmos_index</a>;<span class=\"ts\"/><span class=\"comment\">/* Save CMOS port */</span>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET_TIMER\">CONFIG_HPET_TIMER</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#hpet_res\">hpet_res</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_parse_hpet\">acpi_parse_hpet</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_hpet\">acpi_table_hpet</a> *<a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a> = (struct <a class=\"id\" href=\"#acpi_table_hpet\">acpi_table_hpet</a> *)<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unable to map HPET\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>-><a class=\"id\" href=\"#address\">address</a>.<a class=\"id\" href=\"#space_id\">space_id</a> != <a class=\"id\" href=\"#ACPI_SPACE_MEM\">ACPI_SPACE_MEM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"HPET timers must be located in \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"memory.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_address\">hpet_address</a> = <a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>-><a class=\"id\" href=\"#address\">address</a>.<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_blockid\">hpet_blockid</a> = <a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>-><a class=\"id\" href=\"#sequence\">sequence</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some broken BIOSes advertise HPET at 0x0. We really do not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * want to allocate a resource there.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_address\">hpet_address</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"HPET id: %#x base: %#lx is invalid\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#hpet_address\">hpet_address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some even more broken BIOSes advertise HPET at</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0xfed0000000000000 instead of 0xfed00000. Fix it up and add</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * some noise:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_address\">hpet_address</a> == 0xfed0000000000000UL) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_force_user\">hpet_force_user</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"HPET id: %#x \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"base: 0xfed0000000000000 is bogus\\n \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"try hpet=force on the kernel command line to \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"fix it up to 0xfed00000.\\n\", <a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_address\">hpet_address</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"HPET id: %#x base: 0xfed0000000000000 fixed up \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"to 0xfed00000.\\n\", <a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_address\">hpet_address</a> >>= 32;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"HPET id: %#x base: %#lx\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#hpet_address\">hpet_address</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate and initialize the HPET firmware resource for adding into</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the resource tree during the lateinit timeframe.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HPET_RESOURCE_NAME_SIZE\">HPET_RESOURCE_NAME_SIZE</a> 9", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_res\">hpet_res</a> = <a class=\"id\" href=\"#alloc_bootmem\">alloc_bootmem</a>(sizeof(*<a class=\"id\" href=\"#hpet_res\">hpet_res</a>) + <a class=\"id\" href=\"#HPET_RESOURCE_NAME_SIZE\">HPET_RESOURCE_NAME_SIZE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_res\">hpet_res</a>-><a class=\"id\" href=\"#name\">name</a> = (void *)&amp;<a class=\"id\" href=\"#hpet_res\">hpet_res</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_res\">hpet_res</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>((char *)<a class=\"id\" href=\"#hpet_res\">hpet_res</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#HPET_RESOURCE_NAME_SIZE\">HPET_RESOURCE_NAME_SIZE</a>, \"HPET %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#hpet_tbl\">hpet_tbl</a>-><a class=\"id\" href=\"#sequence\">sequence</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_res\">hpet_res</a>-><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#hpet_address\">hpet_address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_res\">hpet_res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#hpet_address\">hpet_address</a> + (1 * 1024) - 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * hpet_insert_resource inserts the HPET resources used into the resource</span>", 
"<span class=\"comment\"> * tree.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#hpet_insert_resource\">hpet_insert_resource</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_res\">hpet_res</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#insert_resource\">insert_resource</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, <a class=\"id\" href=\"#hpet_res\">hpet_res</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#hpet_insert_resource\">hpet_insert_resource</a>);", 
"", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#acpi_parse_hpet\">acpi_parse_hpet</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_parse_fadt\">acpi_parse_fadt</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_PM_TIMER\">CONFIG_X86_PM_TIMER</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* detect the location of the ACPI PM Timer */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#revision\">revision</a> >= <a class=\"id\" href=\"#FADT2_REVISION_ID\">FADT2_REVISION_ID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FADT rev. 2 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xpm_timer_block\">xpm_timer_block</a>.<a class=\"id\" href=\"#space_id\">space_id</a> !=", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_IO\">ACPI_ADR_SPACE_SYSTEM_IO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmtmr_ioport\">pmtmr_ioport</a> = <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xpm_timer_block\">xpm_timer_block</a>.<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"X\" fields are optional extensions to the original V1.0</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * fields, so we must selectively expand V1.0 fields if the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * corresponding X field is zero.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> <span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmtmr_ioport\">pmtmr_ioport</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmtmr_ioport\">pmtmr_ioport</a> = <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pm_timer_block\">pm_timer_block</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FADT rev. 1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmtmr_ioport\">pmtmr_ioport</a> = <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pm_timer_block\">pm_timer_block</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmtmr_ioport\">pmtmr_ioport</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"PM-Timer IO Port: %#x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#pmtmr_ioport\">pmtmr_ioport</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Parse LAPIC entries in MADT</span>", 
"<span class=\"comment\"> * returns 0 on success, &lt; 0 on error</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_register_lapic_address\">acpi_register_lapic_address</a>(unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_lapic_addr\">mp_lapic_addr</a> = <a class=\"id\" href=\"#address\">address</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fixmap_nocache\">set_fixmap_nocache</a>(<a class=\"id\" href=\"#FIX_APIC_BASE\">FIX_APIC_BASE</a>, <a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a> == -1U) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a>  = <a class=\"id\" href=\"#read_apic_id\">read_apic_id</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_version\">apic_version</a>[<a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#GET_APIC_VERSION\">GET_APIC_VERSION</a>(<a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVR\">APIC_LVR</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_acpi_parse_madt_lapic_addr_ovr\">early_acpi_parse_madt_lapic_addr_ovr</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_apic\">cpu_has_apic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that the LAPIC address is obtained from the MADT (32-bit value)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and (optionally) overriden by a LAPIC_ADDR_OVR entry (64-bit value).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_LOCAL_APIC_OVERRIDE\">ACPI_MADT_TYPE_LOCAL_APIC_OVERRIDE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_parse_lapic_addr_ovr\">acpi_parse_lapic_addr_ovr</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Error parsing LAPIC address override entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_register_lapic_address\">acpi_register_lapic_address</a>(<a class=\"id\" href=\"#acpi_lapic_addr\">acpi_lapic_addr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_parse_madt_lapic_entries\">acpi_parse_madt_lapic_entries</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#x2count\">x2count</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_apic\">cpu_has_apic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that the LAPIC address is obtained from the MADT (32-bit value)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and (optionally) overriden by a LAPIC_ADDR_OVR entry (64-bit value).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_LOCAL_APIC_OVERRIDE\">ACPI_MADT_TYPE_LOCAL_APIC_OVERRIDE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_parse_lapic_addr_ovr\">acpi_parse_lapic_addr_ovr</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Error parsing LAPIC address override entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_register_lapic_address\">acpi_register_lapic_address</a>(<a class=\"id\" href=\"#acpi_lapic_addr\">acpi_lapic_addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_LOCAL_SAPIC\">ACPI_MADT_TYPE_LOCAL_SAPIC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_parse_sapic\">acpi_parse_sapic</a>, <a class=\"id\" href=\"#MAX_APICS\">MAX_APICS</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x2count\">x2count</a> = <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_LOCAL_X2APIC\">ACPI_MADT_TYPE_LOCAL_X2APIC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_parse_x2apic\">acpi_parse_x2apic</a>, <a class=\"id\" href=\"#MAX_APICS\">MAX_APICS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_LOCAL_APIC\">ACPI_MADT_TYPE_LOCAL_APIC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_parse_lapic\">acpi_parse_lapic</a>, <a class=\"id\" href=\"#MAX_APICS\">MAX_APICS</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a> && !<a class=\"id\" href=\"#x2count\">x2count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"No LAPIC entries present\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TBD: Cleanup to allow fallback to MPS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#count\">count</a> &lt; 0 || <a class=\"id\" href=\"#x2count\">x2count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Error parsing LAPIC entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TBD: Cleanup to allow fallback to MPS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x2count\">x2count</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_LOCAL_X2APIC_NMI\">ACPI_MADT_TYPE_LOCAL_X2APIC_NMI</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_parse_x2apic_nmi\">acpi_parse_x2apic_nmi</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_LOCAL_APIC_NMI\">ACPI_MADT_TYPE_LOCAL_APIC_NMI</a>, <a class=\"id\" href=\"#acpi_parse_lapic_nmi\">acpi_parse_lapic_nmi</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; 0 || <a class=\"id\" href=\"#x2count\">x2count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Error parsing LAPIC NMI entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TBD: Cleanup to allow fallback to MPS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CONFIG_X86_LOCAL_APIC */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MP_ISA_BUS\">MP_ISA_BUS</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_ES7000\">CONFIG_X86_ES7000</a>", 
"extern int <a class=\"id\" href=\"#es7000_plat\">es7000_plat</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#assign_to_mp_irq\">assign_to_mp_irq</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#mp_irq\">mp_irq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#mp_irq\">mp_irq</a>, <a class=\"id\" href=\"#m\">m</a>, sizeof(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a>));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mp_irq_cmp\">mp_irq_cmp</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#mp_irq\">mp_irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#mp_irq\">mp_irq</a>, <a class=\"id\" href=\"#m\">m</a>, sizeof(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#save_mp_irq\">save_mp_irq</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mp_irq_cmp\">mp_irq_cmp</a>(&amp;<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#m\">m</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#assign_to_mp_irq\">assign_to_mp_irq</a>(<a class=\"id\" href=\"#m\">m</a>, &amp;<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>]);", 
"<span class=\"ts\"/>if (++<a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a> == <a class=\"id\" href=\"#MAX_IRQ_SOURCES\">MAX_IRQ_SOURCES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Max # of irq sources exceeded!!\\n\");", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mp_override_legacy_irq\">mp_override_legacy_irq</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bus_irq\">bus_irq</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#polarity\">polarity</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#trigger\">trigger</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ioapic\">ioapic</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> <a class=\"id\" href=\"#mp_irq\">mp_irq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Convert 'gsi' to 'ioapic.pin'.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a> = <a class=\"id\" href=\"#mp_find_ioapic\">mp_find_ioapic</a>(<a class=\"id\" href=\"#gsi\">gsi</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ioapic\">ioapic</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#mp_find_ioapic_pin\">mp_find_ioapic_pin</a>(<a class=\"id\" href=\"#ioapic\">ioapic</a>, <a class=\"id\" href=\"#gsi\">gsi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TBD: This check is for faulty timer entries, where the override</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      erroneously sets the trigger to level, resulting in a HUGE</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      increase of timer interrupts!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#bus_irq\">bus_irq</a> == 0) && (<a class=\"id\" href=\"#trigger\">trigger</a> == 3))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MP_INTSRC\">MP_INTSRC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#irqtype\">irqtype</a> = <a class=\"id\" href=\"#mp_INT\">mp_INT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#irqflag\">irqflag</a> = (<a class=\"id\" href=\"#trigger\">trigger</a> << 2) | <a class=\"id\" href=\"#polarity\">polarity</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#srcbus\">srcbus</a> = <a class=\"id\" href=\"#MP_ISA_BUS\">MP_ISA_BUS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> = <a class=\"id\" href=\"#bus_irq\">bus_irq</a>;<span class=\"ts\"/><span class=\"comment\">/* IRQ */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#dstapic\">dstapic</a> = <a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#ioapic\">ioapic</a>].<a class=\"id\" href=\"#apicid\">apicid</a>; <span class=\"comment\">/* APIC ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#dstirq\">dstirq</a> = <a class=\"id\" href=\"#pin\">pin</a>;<span class=\"ts\"/><span class=\"comment\">/* INTIN# */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_mp_irq\">save_mp_irq</a>(&amp;<a class=\"id\" href=\"#mp_irq\">mp_irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isa_irq_to_gsi\">isa_irq_to_gsi</a>[<a class=\"id\" href=\"#bus_irq\">bus_irq</a>] = <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mp_config_acpi_legacy_irqs\">mp_config_acpi_legacy_irqs</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> <a class=\"id\" href=\"#mp_irq\">mp_irq</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_MCA\">CONFIG_MCA</a>) || <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_EISA\">CONFIG_EISA</a>)", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fabricate the legacy ISA bus (bus #31).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_bus_id_to_type\">mp_bus_id_to_type</a>[<a class=\"id\" href=\"#MP_ISA_BUS\">MP_ISA_BUS</a>] = <a class=\"id\" href=\"#MP_BUS_ISA\">MP_BUS_ISA</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#MP_ISA_BUS\">MP_ISA_BUS</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"Bus #%d is ISA\\n\", <a class=\"id\" href=\"#MP_ISA_BUS\">MP_ISA_BUS</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_ES7000\">CONFIG_X86_ES7000</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Older generations of ES7000 have no legacy identity mappings</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#es7000_plat\">es7000_plat</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use the default configuration for the IRQs 0-15.  Unless</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * overridden by (MADT) interrupt source override entries.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 16; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ioapic\">ioapic</a>, <a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dstapic\">dstapic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Locate the gsi that irq i maps to. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_isa_irq_to_gsi\">acpi_isa_irq_to_gsi</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#gsi\">gsi</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Locate the IOAPIC that manages the ISA IRQ.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a> = <a class=\"id\" href=\"#mp_find_ioapic\">mp_find_ioapic</a>(<a class=\"id\" href=\"#gsi\">gsi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ioapic\">ioapic</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#mp_find_ioapic_pin\">mp_find_ioapic_pin</a>(<a class=\"id\" href=\"#ioapic\">ioapic</a>, <a class=\"id\" href=\"#gsi\">gsi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dstapic\">dstapic</a> = <a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#ioapic\">ioapic</a>].<a class=\"id\" href=\"#apicid\">apicid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#idx\">idx</a> = 0; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>; <a class=\"id\" href=\"#idx\">idx</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a> + <a class=\"id\" href=\"#idx\">idx</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do we already have a mapping for this ISA IRQ? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#srcbus\">srcbus</a> == <a class=\"id\" href=\"#MP_ISA_BUS\">MP_ISA_BUS</a> && <a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> == <a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do we already have a mapping for this IOAPIC pin */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#dstapic\">dstapic</a> == <a class=\"id\" href=\"#dstapic\">dstapic</a> && <a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#dstirq\">dstirq</a> == <a class=\"id\" href=\"#pin\">pin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> != <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"ACPI: IRQ%d used by override.\\n\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;<span class=\"ts\"/><span class=\"comment\">/* IRQ already used */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MP_INTSRC\">MP_INTSRC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#irqflag\">irqflag</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* Conforming */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#srcbus\">srcbus</a> = <a class=\"id\" href=\"#MP_ISA_BUS\">MP_ISA_BUS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#dstapic\">dstapic</a> = <a class=\"id\" href=\"#dstapic\">dstapic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#irqtype\">irqtype</a> = <a class=\"id\" href=\"#mp_INT\">mp_INT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> = <a class=\"id\" href=\"#i\">i</a>; <span class=\"comment\">/* Identity mapped */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#dstirq\">dstirq</a> = <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#save_mp_irq\">save_mp_irq</a>(&amp;<a class=\"id\" href=\"#mp_irq\">mp_irq</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mp_config_acpi_gsi\">mp_config_acpi_gsi</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>, int <a class=\"id\" href=\"#trigger\">trigger</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#polarity\">polarity</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MPPARSE\">CONFIG_X86_MPPARSE</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> <a class=\"id\" href=\"#mp_irq\">mp_irq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#number\">number</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ioapic\">ioapic</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_ioapic\">acpi_ioapic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> != &amp;<a class=\"id\" href=\"#pci_bus_type\">pci_bus_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#number\">number</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devfn\">devfn</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* print the entry should happen on mptable identically */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MP_INTSRC\">MP_INTSRC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#irqtype\">irqtype</a> = <a class=\"id\" href=\"#mp_INT\">mp_INT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#irqflag\">irqflag</a> = (<a class=\"id\" href=\"#trigger\">trigger</a> == <a class=\"id\" href=\"#ACPI_EDGE_SENSITIVE\">ACPI_EDGE_SENSITIVE</a> ? 4 : 0x0c) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#polarity\">polarity</a> == <a class=\"id\" href=\"#ACPI_ACTIVE_HIGH\">ACPI_ACTIVE_HIGH</a> ? 1 : 3);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#srcbus\">srcbus</a> = <a class=\"id\" href=\"#number\">number</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> = (((<a class=\"id\" href=\"#devfn\">devfn</a> >> 3) &amp; 0x1f) << 2) | ((<a class=\"id\" href=\"#pin\">pin</a> - 1) &amp; 3);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a> = <a class=\"id\" href=\"#mp_find_ioapic\">mp_find_ioapic</a>(<a class=\"id\" href=\"#gsi\">gsi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#dstapic\">dstapic</a> = <a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#ioapic\">ioapic</a>].<a class=\"id\" href=\"#apicid\">apicid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>.<a class=\"id\" href=\"#dstirq\">dstirq</a> = <a class=\"id\" href=\"#mp_find_ioapic_pin\">mp_find_ioapic_pin</a>(<a class=\"id\" href=\"#ioapic\">ioapic</a>, <a class=\"id\" href=\"#gsi\">gsi</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_mp_irq\">save_mp_irq</a>(&amp;<a class=\"id\" href=\"#mp_irq\">mp_irq</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mp_register_gsi\">mp_register_gsi</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>, int <a class=\"id\" href=\"#trigger\">trigger</a>, int <a class=\"id\" href=\"#polarity\">polarity</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ioapic\">ioapic</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ioapic_pin\">ioapic_pin</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_apic_irq_attr\">io_apic_irq_attr</a> <a class=\"id\" href=\"#irq_attr\">irq_attr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_irq_model\">acpi_irq_model</a> != <a class=\"id\" href=\"#ACPI_IRQ_MODEL_IOAPIC\">ACPI_IRQ_MODEL_IOAPIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't set up the ACPI SCI because it's already set up */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#sci_interrupt\">sci_interrupt</a> == <a class=\"id\" href=\"#gsi\">gsi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a> = <a class=\"id\" href=\"#mp_find_ioapic\">mp_find_ioapic</a>(<a class=\"id\" href=\"#gsi\">gsi</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ioapic\">ioapic</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"No IOAPIC for GSI %u\\n\", <a class=\"id\" href=\"#gsi\">gsi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic_pin\">ioapic_pin</a> = <a class=\"id\" href=\"#mp_find_ioapic_pin\">mp_find_ioapic_pin</a>(<a class=\"id\" href=\"#ioapic\">ioapic</a>, <a class=\"id\" href=\"#gsi\">gsi</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ioapic_pin\">ioapic_pin</a> &gt; <a class=\"id\" href=\"#MP_MAX_IOAPIC_PIN\">MP_MAX_IOAPIC_PIN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Invalid reference to IOAPIC pin \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%d-%d\\n\", <a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#ioapic\">ioapic</a>].<a class=\"id\" href=\"#apicid\">apicid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ioapic_pin\">ioapic_pin</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enable_update_mptable\">enable_update_mptable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_config_acpi_gsi\">mp_config_acpi_gsi</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#gsi\">gsi</a>, <a class=\"id\" href=\"#trigger\">trigger</a>, <a class=\"id\" href=\"#polarity\">polarity</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_io_apic_irq_attr\">set_io_apic_irq_attr</a>(&amp;<a class=\"id\" href=\"#irq_attr\">irq_attr</a>, <a class=\"id\" href=\"#ioapic\">ioapic</a>, <a class=\"id\" href=\"#ioapic_pin\">ioapic_pin</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#trigger\">trigger</a> == <a class=\"id\" href=\"#ACPI_EDGE_SENSITIVE\">ACPI_EDGE_SENSITIVE</a> ? 0 : 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#polarity\">polarity</a> == <a class=\"id\" href=\"#ACPI_ACTIVE_HIGH\">ACPI_ACTIVE_HIGH</a> ? 0 : 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic_set_pci_routing\">io_apic_set_pci_routing</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#gsi_to_irq\">gsi_to_irq</a>(<a class=\"id\" href=\"#gsi\">gsi</a>), &amp;<a class=\"id\" href=\"#irq_attr\">irq_attr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Parse IOAPIC related entries in MADT</span>", 
"<span class=\"comment\"> * returns 0 on success, &lt; 0 on error</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_parse_madt_ioapic_entries\">acpi_parse_madt_ioapic_entries</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ACPI interpreter is required to complete interrupt setup,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so if it is off, don't enumerate the io-apics with ACPI.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If MPS is present, it will handle them,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * otherwise the system will stay in PIC mode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a> || <a class=\"id\" href=\"#acpi_noirq\">acpi_noirq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_apic\">cpu_has_apic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if \"noapic\" boot option, don't look for IO-APICs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skip_ioapic_setup\">skip_ioapic_setup</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Skipping IOAPIC probe \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"due to 'noapic' option.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_IO_APIC\">ACPI_MADT_TYPE_IO_APIC</a>, <a class=\"id\" href=\"#acpi_parse_ioapic\">acpi_parse_ioapic</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#MAX_IO_APICS\">MAX_IO_APICS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"No IOAPIC entries present\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#count\">count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Error parsing IOAPIC entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_INTERRUPT_OVERRIDE\">ACPI_MADT_TYPE_INTERRUPT_OVERRIDE</a>, <a class=\"id\" href=\"#acpi_parse_int_src_ovr\">acpi_parse_int_src_ovr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Error parsing interrupt source overrides entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TBD: Cleanup to allow fallback to MPS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If BIOS did not supply an INT_SRC_OVR for the SCI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pretend we got one so we can set the SCI flags.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_sci_override_gsi\">acpi_sci_override_gsi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_sci_ioapic_setup\">acpi_sci_ioapic_setup</a>(<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#sci_interrupt\">sci_interrupt</a>, 0, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#sci_interrupt\">sci_interrupt</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fill in identity legacy mappings where no override */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_config_acpi_legacy_irqs\">mp_config_acpi_legacy_irqs</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_table_parse_madt\">acpi_table_parse_madt</a>(<a class=\"id\" href=\"#ACPI_MADT_TYPE_NMI_SOURCE\">ACPI_MADT_TYPE_NMI_SOURCE</a>, <a class=\"id\" href=\"#acpi_parse_nmi_src\">acpi_parse_nmi_src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Error parsing NMI SRC entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TBD: Cleanup to allow fallback to MPS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#acpi_parse_madt_ioapic_entries\">acpi_parse_madt_ioapic_entries</a>(void)", 
"{", 
"<span class=\"ts\"/>return -1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* !CONFIG_X86_IO_APIC */</span>", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_acpi_process_madt\">early_acpi_process_madt</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_table_parse\">acpi_table_parse</a>(<a class=\"id\" href=\"#ACPI_SIG_MADT\">ACPI_SIG_MADT</a>, <a class=\"id\" href=\"#acpi_parse_madt\">acpi_parse_madt</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Parse MADT LAPIC entries</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#early_acpi_parse_madt_lapic_addr_ovr\">early_acpi_parse_madt_lapic_addr_ovr</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_found_config\">smp_found_config</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Dell Precision Workstation 410, 610 come here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Invalid BIOS MADT, disabling ACPI\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_acpi\">disable_acpi</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_process_madt\">acpi_process_madt</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_table_parse\">acpi_table_parse</a>(<a class=\"id\" href=\"#ACPI_SIG_MADT\">ACPI_SIG_MADT</a>, <a class=\"id\" href=\"#acpi_parse_madt\">acpi_parse_madt</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Parse MADT LAPIC entries</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#acpi_parse_madt_lapic_entries\">acpi_parse_madt_lapic_entries</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Parse MADT IO-APIC entries</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#acpi_parse_madt_ioapic_entries\">acpi_parse_madt_ioapic_entries</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_irq_model\">acpi_irq_model</a> = <a class=\"id\" href=\"#ACPI_IRQ_MODEL_IOAPIC\">ACPI_IRQ_MODEL_IOAPIC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ioapic\">acpi_ioapic</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_found_config\">smp_found_config</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Dell Precision Workstation 410, 610 come here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Invalid BIOS MADT, disabling ACPI\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_acpi\">disable_acpi</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"> <span class=\"ts\"/><span class=\"ts\"/> * ACPI found no MADT, and so ACPI wants UP PIC mode.</span>", 
"<span class=\"comment\"> <span class=\"ts\"/><span class=\"ts\"/> * In the event an MPS table was found, forget it.</span>", 
"<span class=\"comment\"> <span class=\"ts\"/><span class=\"ts\"/> * Boot with \"acpi=off\" to use MPS on such a system.</span>", 
"<span class=\"comment\"> <span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#smp_found_config\">smp_found_config</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"No APIC-table, disabling MPS\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_found_config\">smp_found_config</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ACPI supports both logical (e.g. Hyper-Threading) and physical</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * processors, where MPS only supports physical.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a> && <a class=\"id\" href=\"#acpi_ioapic\">acpi_ioapic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Using ACPI (MADT) for SMP configuration \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"information\\n\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Using ACPI for processor (LAPIC) \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"configuration information\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#disable_acpi_irq\">disable_acpi_irq</a>(const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_force\">acpi_force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"%s detected: force use of acpi=noirq\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#ident\">ident</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_noirq_set\">acpi_noirq_set</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#disable_acpi_pci\">disable_acpi_pci</a>(const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_force\">acpi_force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"%s detected: force use of pci=noacpi\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#ident\">ident</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_disable_pci\">acpi_disable_pci</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dmi_disable_acpi\">dmi_disable_acpi</a>(const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_force\">acpi_force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"%s detected: acpi off\\n\", <a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#ident\">ident</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_acpi\">disable_acpi</a>();", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Warning: DMI blacklist says broken, but acpi forced\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Force ignoring BIOS IRQ0 pin2 override</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dmi_ignore_irq0_timer_override\">dmi_ignore_irq0_timer_override</a>(const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The ati_ixp4x0_rev() early PCI quirk should have set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the acpi_skip_timer_override flag already:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_skip_timer_override\">acpi_skip_timer_override</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"ati_ixp4x0 quirk not complete.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_notice\">pr_notice</a>(\"%s detected: Ignoring BIOS IRQ0 pin2 override\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#ident\">ident</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_skip_timer_override\">acpi_skip_timer_override</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If your system is blacklisted here, but you find that acpi=force</span>", 
"<span class=\"comment\"> * works for you, please contact linux-acpi@vger.kernel.org</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#acpi_dmi_table\">acpi_dmi_table</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Boxes that need ACPI disabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_disable_acpi\">dmi_disable_acpi</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"IBM Thinkpad\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>, \"IBM\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"2629H1G\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Boxes that need ACPI PCI IRQ routing disabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#disable_acpi_irq\">disable_acpi_irq</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"ASUS A7V\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>, \"ASUSTeK Computer INC\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"<A7V>\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <span class=\"comment\">/* newer BIOS, Revision 1011, does work */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BIOS_VERSION\">DMI_BIOS_VERSION</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"ASUS A7V ACPI BIOS Revision 1007\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Latest BIOS for IBM 600E (1.16) has bad pcinum</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * for LPC bridge, which is needed for the PCI</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * interrupt links to work. DSDT fix is in bug 5966.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 2645, 2646 model numbers are shared with 600/600E/600X</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#disable_acpi_irq\">disable_acpi_irq</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"IBM Thinkpad 600 Series 2645\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>, \"IBM\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"2645\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#disable_acpi_irq\">disable_acpi_irq</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"IBM Thinkpad 600 Series 2646\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>, \"IBM\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"2646\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Boxes that need ACPI PCI IRQ routing and PCI scan disabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* _BBN 0 bug */</span>", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#disable_acpi_pci\">disable_acpi_pci</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"ASUS PR-DLS\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>, \"ASUSTeK Computer INC.\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"PR-DLS\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BIOS_VERSION\">DMI_BIOS_VERSION</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"ASUS PR-DLS ACPI BIOS Revision 1010\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BIOS_DATE\">DMI_BIOS_DATE</a>, \"03/21/2003\")", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#disable_acpi_pci\">disable_acpi_pci</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"Acer TravelMate 36x Laptop\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Acer\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"TravelMate 360\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"<span class=\"ts\"/>{}", 
"};", 
"", 
"<span class=\"comment\">/* second table for DMI checks that should run after early-quirks */</span>", 
"static struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#acpi_dmi_table_late\">acpi_dmi_table_late</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * HP laptops which use a DSDT reporting as HP/SB400/10000,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which includes some code which overrides all temperature</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * trip points to 16C if the INTIN2 input of the I/O APIC</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is enabled.  This input is incorrectly designated the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ISA IRQ 0 via an interrupt source override even though</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it is wired to the output of the master 8259A and INTIN0</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is not connected at all.  Force ignoring BIOS IRQ0 pin2</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * override in that cases.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_ignore_irq0_timer_override\">dmi_ignore_irq0_timer_override</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"HP nx6115 laptop\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"HP Compaq nx6115\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_ignore_irq0_timer_override\">dmi_ignore_irq0_timer_override</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"HP NX6125 laptop\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"HP Compaq nx6125\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_ignore_irq0_timer_override\">dmi_ignore_irq0_timer_override</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"HP NX6325 laptop\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"HP Compaq nx6325\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_ignore_irq0_timer_override\">dmi_ignore_irq0_timer_override</a>,", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#ident\">ident</a> = \"HP 6715b laptop\",", 
"<span class=\"ts\"/> .<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"HP Compaq 6715b\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>     },", 
"<span class=\"ts\"/> },", 
"<span class=\"ts\"/>{}", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * acpi_boot_table_init() and acpi_boot_init()</span>", 
"<span class=\"comment\"> *  called from setup_arch(), always.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1. checksums all tables</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>2. enumerates lapics</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>3. enumerates io-apics</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * acpi_table_init() is separate to allow reading SRAT without</span>", 
"<span class=\"comment\"> * other side effects.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * side effects of acpi_boot_init:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>acpi_lapic = 1 if LAPIC found</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>acpi_ioapic = 1 if IOAPIC found</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if (acpi_lapic &amp;&amp; acpi_ioapic) smp_found_config = 1;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if acpi_blacklisted() acpi_disabled = 1;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>acpi_irq_model=...</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>...</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_boot_table_init\">acpi_boot_table_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_check_system\">dmi_check_system</a>(<a class=\"id\" href=\"#acpi_dmi_table\">acpi_dmi_table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If acpi_disabled, bail out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return; ", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Initialize the ACPI boot-time table parser.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
];
xr_frag_insert('l/b1/c19bfde3c50fe028702e520a6dfc5e4ffa4bb8.xr', __xr_tmp);
