var __xr_tmp = [
"<span class=\"comment\">/* proc.c: proc files for key database enumeration</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 Red Hat, Inc. All Rights Reserved.</span>", 
"<span class=\"comment\"> * Written by David Howells (dhowells@redhat.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KEYS_DEBUG_PROC_KEYS\">CONFIG_KEYS_DEBUG_PROC_KEYS</a>", 
"static int <a class=\"id\" href=\"#proc_keys_open\">proc_keys_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"static void *<a class=\"id\" href=\"#proc_keys_start\">proc_keys_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#_pos\">_pos</a>);", 
"static void *<a class=\"id\" href=\"#proc_keys_next\">proc_keys_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#_pos\">_pos</a>);", 
"static void <a class=\"id\" href=\"#proc_keys_stop\">proc_keys_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"static int <a class=\"id\" href=\"#proc_keys_show\">proc_keys_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#proc_keys_ops\">proc_keys_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_keys_start\">proc_keys_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_keys_next\">proc_keys_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_keys_stop\">proc_keys_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_keys_show\">proc_keys_show</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_keys_fops\">proc_keys_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_keys_open\">proc_keys_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#proc_key_users_open\">proc_key_users_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"static void *<a class=\"id\" href=\"#proc_key_users_start\">proc_key_users_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#_pos\">_pos</a>);", 
"static void *<a class=\"id\" href=\"#proc_key_users_next\">proc_key_users_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#_pos\">_pos</a>);", 
"static void <a class=\"id\" href=\"#proc_key_users_stop\">proc_key_users_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"static int <a class=\"id\" href=\"#proc_key_users_show\">proc_key_users_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#proc_key_users_ops\">proc_key_users_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_key_users_start\">proc_key_users_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_key_users_next\">proc_key_users_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_key_users_stop\">proc_key_users_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_key_users_show\">proc_key_users_show</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_key_users_fops\">proc_key_users_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_key_users_open\">proc_key_users_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * declare the /proc files</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#key_proc_init\">key_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KEYS_DEBUG_PROC_KEYS\">CONFIG_KEYS_DEBUG_PROC_KEYS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#proc_create\">proc_create</a>(\"keys\", 0, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#proc_keys_fops\">proc_keys_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Cannot create /proc/keys\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#proc_create\">proc_create</a>(\"key-users\", 0, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#proc_key_users_fops\">proc_key_users_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Cannot create /proc/key-users\\n\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"} <span class=\"comment\">/* end key_proc_init() */</span>", 
"", 
"<a class=\"id\" href=\"#__initcall\">__initcall</a>(<a class=\"id\" href=\"#key_proc_init\">key_proc_init</a>);", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * implement \"/proc/keys\" to provides a list of the keys on the system</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KEYS_DEBUG_PROC_KEYS\">CONFIG_KEYS_DEBUG_PROC_KEYS</a>", 
"", 
"static struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#key_serial_next\">key_serial_next</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#user_ns\">user_ns</a> = <a class=\"id\" href=\"#current_user_ns\">current_user_ns</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#user_ns\">user_ns</a> == <a class=\"id\" href=\"#user_ns\">user_ns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_keys_open\">proc_keys_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#proc_keys_ops\">proc_keys_ops</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#find_ge_key\">find_ge_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#user_ns\">user_ns</a> = <a class=\"id\" href=\"#current_user_ns\">current_user_ns</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#key_serial_tree\">key_serial_tree</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#minkey\">minkey</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> &lt; <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#minkey\">minkey</a> || <a class=\"id\" href=\"#minkey\">minkey</a>-><a class=\"id\" href=\"#serial\">serial</a> &gt; <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#minkey\">minkey</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#id\">id</a> &gt; <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#minkey\">minkey</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#minkey\">minkey</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#minkey\">minkey</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#user_ns\">user_ns</a> == <a class=\"id\" href=\"#user_ns\">user_ns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#minkey\">minkey</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(&amp;<a class=\"id\" href=\"#minkey\">minkey</a>-><a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#minkey\">minkey</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#proc_keys_start\">proc_keys_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#_pos\">_pos</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#pos\">pos</a> = *<a class=\"id\" href=\"#_pos\">_pos</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>);", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#_pos\">_pos</a> &gt; <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#find_ge_key\">find_ge_key</a>(<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#_pos\">_pos</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>;", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial_node\">serial_node</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#key_node_serial\">key_node_serial</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#proc_keys_next\">proc_keys_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#_pos\">_pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#key_serial_next\">key_serial_next</a>(<a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#_pos\">_pos</a> = <a class=\"id\" href=\"#key_node_serial\">key_node_serial</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#proc_keys_stop\">proc_keys_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_keys_show\">proc_keys_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#_p\">_p</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#_p\">_p</a>, struct <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#timo\">timo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>, <a class=\"id\" href=\"#skey_ref\">skey_ref</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#xbuf\">xbuf</a>[12];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#make_key_ref\">make_key_ref</a>(<a class=\"id\" href=\"#key\">key</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* determine if the key is possessed by this process (a test we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * skip if the key does not indicate the possessor can view it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#perm\">perm</a> &amp; <a class=\"id\" href=\"#KEY_POS_VIEW\">KEY_POS_VIEW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skey_ref\">skey_ref</a> = <a class=\"id\" href=\"#search_my_process_keyrings\">search_my_process_keyrings</a>(<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#lookup_user_key_possessed\">lookup_user_key_possessed</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#skey_ref\">skey_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#skey_ref\">skey_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#make_key_ref\">make_key_ref</a>(<a class=\"id\" href=\"#key\">key</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check whether the current task is allowed to view the key (assuming</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * non-possession)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - the caller holds a spinlock, and thus the RCU read lock, making our</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   access to __current_cred() safe</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#key_task_permission\">key_task_permission</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>, <a class=\"id\" href=\"#cred\">cred</a>, <a class=\"id\" href=\"#KEY_VIEW\">KEY_VIEW</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#current_kernel_time\">current_kernel_time</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* come up with a suitable timeout value */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>, \"perm\", 5);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> >= <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>, \"expd\", 5);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timo\">timo</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a> - <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#timo\">timo</a> &lt; 60)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>, \"%lus\", <a class=\"id\" href=\"#timo\">timo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#timo\">timo</a> &lt; 60*60)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>, \"%lum\", <a class=\"id\" href=\"#timo\">timo</a> / 60);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#timo\">timo</a> &lt; 60*60*24)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>, \"%luh\", <a class=\"id\" href=\"#timo\">timo</a> / (60*60));", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#timo\">timo</a> &lt; 60*60*24*7)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>, \"%lud\", <a class=\"id\" href=\"#timo\">timo</a> / (60*60*24));", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>, \"%luw\", <a class=\"id\" href=\"#timo\">timo</a> / (60*60*24*7));", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#showflag\">showflag</a>(<a class=\"id\" href=\"#KEY\">KEY</a>, <a class=\"id\" href=\"#LETTER\">LETTER</a>, <a class=\"id\" href=\"#FLAG\">FLAG</a>) \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FLAG\">FLAG</a>,<span class=\"ts\"/>&amp;(<a class=\"id\" href=\"#KEY\">KEY</a>)-><a class=\"id\" href=\"#flags\">flags</a>) ? <a class=\"id\" href=\"#LETTER\">LETTER</a> : '-')", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%08x %c%c%c%c%c%c %5d %4s %08x %5d %5d %-9.9s \",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#showflag\">showflag</a>(<a class=\"id\" href=\"#key\">key</a>, 'I', <a class=\"id\" href=\"#KEY_FLAG_INSTANTIATED\">KEY_FLAG_INSTANTIATED</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#showflag\">showflag</a>(<a class=\"id\" href=\"#key\">key</a>, 'R', <a class=\"id\" href=\"#KEY_FLAG_REVOKED\">KEY_FLAG_REVOKED</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#showflag\">showflag</a>(<a class=\"id\" href=\"#key\">key</a>, 'D', <a class=\"id\" href=\"#KEY_FLAG_DEAD\">KEY_FLAG_DEAD</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#showflag\">showflag</a>(<a class=\"id\" href=\"#key\">key</a>, 'Q', <a class=\"id\" href=\"#KEY_FLAG_IN_QUOTA\">KEY_FLAG_IN_QUOTA</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#showflag\">showflag</a>(<a class=\"id\" href=\"#key\">key</a>, 'U', <a class=\"id\" href=\"#KEY_FLAG_USER_CONSTRUCT\">KEY_FLAG_USER_CONSTRUCT</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#showflag\">showflag</a>(<a class=\"id\" href=\"#key\">key</a>, 'N', <a class=\"id\" href=\"#KEY_FLAG_NEGATIVE\">KEY_FLAG_NEGATIVE</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#usage\">usage</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#xbuf\">xbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#perm\">perm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#uid\">uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#gid\">gid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#showflag\">showflag</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#describe\">describe</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#describe\">describe</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_KEYS_DEBUG_PROC_KEYS */</span>", 
"", 
"static struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#__key_user_next\">__key_user_next</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#key_user\">key_user</a> *<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#key_user\">key_user</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#user_ns\">user_ns</a> == <a class=\"id\" href=\"#current_user_ns\">current_user_ns</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#key_user_next\">key_user_next</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__key_user_next\">__key_user_next</a>(<a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#n\">n</a>));", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#key_user_first\">key_user_first</a>(struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#r\">r</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(<a class=\"id\" href=\"#r\">r</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__key_user_next\">__key_user_next</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"}", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * implement \"/proc/key-users\" to provides a list of the key users</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#proc_key_users_open\">proc_key_users_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#proc_key_users_ops\">proc_key_users_ops</a>);", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#proc_key_users_start\">proc_key_users_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#_pos\">_pos</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#key_user_lock\">key_user_lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#_p\">_p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = *<a class=\"id\" href=\"#_pos\">_pos</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#key_user_lock\">key_user_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_p\">_p</a> = <a class=\"id\" href=\"#key_user_first\">key_user_first</a>(&amp;<a class=\"id\" href=\"#key_user_tree\">key_user_tree</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#pos\">pos</a> &gt; 0 && <a class=\"id\" href=\"#_p\">_p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_p\">_p</a> = <a class=\"id\" href=\"#key_user_next\">key_user_next</a>(<a class=\"id\" href=\"#_p\">_p</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#_p\">_p</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#proc_key_users_next\">proc_key_users_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#_pos\">_pos</a>)", 
"{", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#_pos\">_pos</a>)++;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#key_user_next\">key_user_next</a>((struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *)<a class=\"id\" href=\"#v\">v</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#proc_key_users_stop\">proc_key_users_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#key_user_lock\">key_user_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#key_user_lock\">key_user_lock</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_key_users_show\">proc_key_users_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#_p\">_p</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key_user\">key_user</a> *<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#_p\">_p</a>, struct <a class=\"id\" href=\"#key_user\">key_user</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#maxkeys\">maxkeys</a> = (<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#uid\">uid</a> == 0) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_quota_root_maxkeys\">key_quota_root_maxkeys</a> : <a class=\"id\" href=\"#key_quota_maxkeys\">key_quota_maxkeys</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#maxbytes\">maxbytes</a> = (<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#uid\">uid</a> == 0) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_quota_root_maxbytes\">key_quota_root_maxbytes</a> : <a class=\"id\" href=\"#key_quota_maxbytes\">key_quota_maxbytes</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%5u: %5d %d/%d %d/%d %d/%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#uid\">uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#usage\">usage</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#nkeys\">nkeys</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#nikeys\">nikeys</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#qnkeys\">qnkeys</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#maxkeys\">maxkeys</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#qnbytes\">qnbytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#maxbytes\">maxbytes</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"}", 
];
xr_frag_insert('l/b2/0180fee88a1a642c84d449cb499033ce716ae1.xr', __xr_tmp);
