var __xr_tmp = [
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sysfs_write_file\">sysfs_write_file</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_buffer\">sysfs_buffer</a> * <a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#fill_write_buffer\">fill_write_buffer</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#flush_write_buffer\">flush_write_buffer</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sysfs_get_open_dirent - get or create sysfs_open_dirent</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sd: target sysfs_dirent</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buffer: sysfs_buffer for this instance of open</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If @sd-&gt;s_attr.open exists, increment its reference count;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>otherwise, create one.  @buffer is chained to the buffers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, -errno on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#sysfs_get_open_dirent\">sysfs_get_open_dirent</a>(struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sd\">sd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sysfs_buffer\">sysfs_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_open_dirent\">sysfs_open_dirent</a> *<a class=\"id\" href=\"#od\">od</a>, *<a class=\"id\" href=\"#new_od\">new_od</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
" <a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#sysfs_open_dirent_lock\">sysfs_open_dirent_lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#s_attr\">s_attr</a>.<a class=\"id\" href=\"#open\">open</a> && <a class=\"id\" href=\"#new_od\">new_od</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#s_attr\">s_attr</a>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#new_od\">new_od</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_od\">new_od</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#od\">od</a> = <a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#s_attr\">s_attr</a>.<a class=\"id\" href=\"#open\">open</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#od\">od</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#od\">od</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#od\">od</a>-><a class=\"id\" href=\"#buffers\">buffers</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#sysfs_open_dirent_lock\">sysfs_open_dirent_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#od\">od</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#new_od\">new_od</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* not there, initialize a new one and retry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_od\">new_od</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#new_od\">new_od</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_od\">new_od</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#new_od\">new_od</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#new_od\">new_od</a>-><a class=\"id\" href=\"#event\">event</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#new_od\">new_od</a>-><a class=\"id\" href=\"#poll\">poll</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#new_od\">new_od</a>-><a class=\"id\" href=\"#buffers\">buffers</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sysfs_put_open_dirent - put sysfs_open_dirent</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sd: target sysfs_dirent</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buffer: associated sysfs_buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Put @sd-&gt;s_attr.open and unlink @buffer from the buffers list.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If reference count reaches zero, disassociate and free it.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#sysfs_put_open_dirent\">sysfs_put_open_dirent</a>(struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sd\">sd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#sysfs_buffer\">sysfs_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_open_dirent\">sysfs_open_dirent</a> *<a class=\"id\" href=\"#od\">od</a> = <a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#s_attr\">s_attr</a>.<a class=\"id\" href=\"#open\">open</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sysfs_open_dirent_lock\">sysfs_open_dirent_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#od\">od</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#s_attr\">s_attr</a>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#od\">od</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sysfs_open_dirent_lock\">sysfs_open_dirent_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#od\">od</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sysfs_open_file\">sysfs_open_file</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#attr_sd\">attr_sd</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_fsdata\">d_fsdata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#attr_sd\">attr_sd</a>-><a class=\"id\" href=\"#s_parent\">s_parent</a>-><a class=\"id\" href=\"#s_dir\">s_dir</a>.<a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_buffer\">sysfs_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#d_path\">d_path</a>(&amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>, <a class=\"id\" href=\"#last_sysfs_file\">last_sysfs_file</a>, sizeof(<a class=\"id\" href=\"#last_sysfs_file\">last_sysfs_file</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#last_sysfs_file\">last_sysfs_file</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#p\">p</a>) + 1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* need attr_sd for attr and ops, its parent for kobj */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysfs_get_active\">sysfs_get_active</a>(<a class=\"id\" href=\"#attr_sd\">attr_sd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* every kobject with an attribute needs a ktype assigned */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#ktype\">ktype</a> && <a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#ktype\">ktype</a>-><a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#ktype\">ktype</a>-><a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"missing sysfs attribute operations for \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"kobject: %s\\n\", <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(<a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* File needs write support.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The inode's perms must say it's ok, </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and we must have a store method.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> &amp; <a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>) || !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#store\">store</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* File needs read support.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The inode's perms must say it's ok, and we there</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must be a show method for it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> &amp; <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>) || !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#show\">show</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No error? Great, allocate a buffer for the file, and store it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it in file-&gt;private_data for easy access.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#sysfs_buffer\">sysfs_buffer</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#needs_read_fill\">needs_read_fill</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* make sure we have open dirent struct */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_get_open_dirent\">sysfs_get_open_dirent</a>(<a class=\"id\" href=\"#attr_sd\">attr_sd</a>, <a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free\">err_free</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* open succeeded, put active references */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_put_active\">sysfs_put_active</a>(<a class=\"id\" href=\"#attr_sd\">attr_sd</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#err_free\">err_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
" <a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_put_active\">sysfs_put_active</a>(<a class=\"id\" href=\"#attr_sd\">attr_sd</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sysfs_release\">sysfs_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sd\">sd</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_fsdata\">d_fsdata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_buffer\">sysfs_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_put_open_dirent\">sysfs_put_open_dirent</a>(<a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Sysfs attribute files are pollable.  The idea is that you read</span>", 
"<span class=\"comment\"> * the content and then you use 'poll' or 'select' to wait for</span>", 
"<span class=\"comment\"> * the content to change.  When the content changes (assuming the</span>", 
"<span class=\"comment\"> * manager for the kobject supports notification), poll will</span>", 
"<span class=\"comment\"> * return POLLERR|POLLPRI, and select will return the fd whether</span>", 
"<span class=\"comment\"> * it is waiting for read, write, or exceptions.</span>", 
"<span class=\"comment\"> * Once poll/select indicates that the value has changed, you</span>", 
"<span class=\"comment\"> * need to close and re-open the file, or seek to 0 and read again.</span>", 
"<span class=\"comment\"> * Reminder: this only works for attributes which actively support</span>", 
"<span class=\"comment\"> * it, and it is not possible to test an attribute from userspace</span>", 
"<span class=\"comment\"> * to see if it supports poll (Neither 'poll' nor 'select' return</span>", 
"<span class=\"comment\"> * an appropriate error code).  When in doubt, set a suitable timeout value.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned int <a class=\"id\" href=\"#sysfs_poll\">sysfs_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_buffer\">sysfs_buffer</a> * <a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#attr_sd\">attr_sd</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_fsdata\">d_fsdata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_open_dirent\">sysfs_open_dirent</a> *<a class=\"id\" href=\"#od\">od</a> = <a class=\"id\" href=\"#attr_sd\">attr_sd</a>-><a class=\"id\" href=\"#s_attr\">s_attr</a>.<a class=\"id\" href=\"#open\">open</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* need parent for the kobj, grab both */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysfs_get_active\">sysfs_get_active</a>(<a class=\"id\" href=\"#attr_sd\">attr_sd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#trigger\">trigger</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_wait\">poll_wait</a>(<a class=\"id\" href=\"#filp\">filp</a>, &amp;<a class=\"id\" href=\"#od\">od</a>-><a class=\"id\" href=\"#poll\">poll</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_put_active\">sysfs_put_active</a>(<a class=\"id\" href=\"#attr_sd\">attr_sd</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#event\">event</a> != <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#od\">od</a>-><a class=\"id\" href=\"#event\">event</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#trigger\">trigger</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#DEFAULT_POLLMASK\">DEFAULT_POLLMASK</a>;", 
"", 
" <a class=\"id\" href=\"#trigger\">trigger</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>-><a class=\"id\" href=\"#needs_read_fill\">needs_read_fill</a> = 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#DEFAULT_POLLMASK\">DEFAULT_POLLMASK</a>|<a class=\"id\" href=\"#POLLERR\">POLLERR</a>|<a class=\"id\" href=\"#POLLPRI\">POLLPRI</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#sysfs_notify_dirent\">sysfs_notify_dirent</a>(struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sd\">sd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_open_dirent\">sysfs_open_dirent</a> *<a class=\"id\" href=\"#od\">od</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sysfs_open_dirent_lock\">sysfs_open_dirent_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#od\">od</a> = <a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#s_attr\">s_attr</a>.<a class=\"id\" href=\"#open\">open</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#od\">od</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#od\">od</a>-><a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#od\">od</a>-><a class=\"id\" href=\"#poll\">poll</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sysfs_open_dirent_lock\">sysfs_open_dirent_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysfs_notify_dirent\">sysfs_notify_dirent</a>);", 
"", 
"void <a class=\"id\" href=\"#sysfs_notify\">sysfs_notify</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#k\">k</a>, const char *<a class=\"id\" href=\"#dir\">dir</a>, const char *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sd\">sd</a> = <a class=\"id\" href=\"#k\">k</a>-><a class=\"id\" href=\"#sd\">sd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sysfs_mutex\">sysfs_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sd\">sd</a> && <a class=\"id\" href=\"#dir\">dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only directories are tagged, so no need to pass</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a tag explicitly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a> = <a class=\"id\" href=\"#sysfs_find_dirent\">sysfs_find_dirent</a>(<a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sd\">sd</a> && <a class=\"id\" href=\"#attr\">attr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a> = <a class=\"id\" href=\"#sysfs_find_dirent\">sysfs_find_dirent</a>(<a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sd\">sd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_notify_dirent\">sysfs_notify_dirent</a>(<a class=\"id\" href=\"#sd\">sd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sysfs_mutex\">sysfs_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysfs_notify\">sysfs_notify</a>);", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#sysfs_file_operations\">sysfs_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sysfs_read_file\">sysfs_read_file</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sysfs_write_file\">sysfs_write_file</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sysfs_open_file\">sysfs_open_file</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sysfs_release\">sysfs_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sysfs_poll\">sysfs_poll</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#sysfs_add_file_mode\">sysfs_add_file_mode</a>(struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#dir_sd\">dir_sd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, int <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#amode\">amode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#umode_t\">umode_t</a> <a class=\"id\" href=\"#mode\">mode</a> = (<a class=\"id\" href=\"#amode\">amode</a> &amp; <a class=\"id\" href=\"#S_IALLUGO\">S_IALLUGO</a>) | <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_addrm_cxt\">sysfs_addrm_cxt</a> <a class=\"id\" href=\"#acxt\">acxt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sd\">sd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a> = <a class=\"id\" href=\"#sysfs_new_dirent\">sysfs_new_dirent</a>(<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sd\">sd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#s_attr\">s_attr</a>.<a class=\"id\" href=\"#attr\">attr</a> = (void *)<a class=\"id\" href=\"#attr\">attr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_dirent_init_lockdep\">sysfs_dirent_init_lockdep</a>(<a class=\"id\" href=\"#sd\">sd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_addrm_start\">sysfs_addrm_start</a>(&amp;<a class=\"id\" href=\"#acxt\">acxt</a>, <a class=\"id\" href=\"#dir_sd\">dir_sd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sysfs_add_one\">sysfs_add_one</a>(&amp;<a class=\"id\" href=\"#acxt\">acxt</a>, <a class=\"id\" href=\"#sd\">sd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_addrm_finish\">sysfs_addrm_finish</a>(&amp;<a class=\"id\" href=\"#acxt\">acxt</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_put\">sysfs_put</a>(<a class=\"id\" href=\"#sd\">sd</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#sysfs_add_file\">sysfs_add_file</a>(struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#dir_sd\">dir_sd</a>, const struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sysfs_add_file_mode\">sysfs_add_file_mode</a>(<a class=\"id\" href=\"#dir_sd\">dir_sd</a>, <a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sysfs_create_file - create an attribute file for an object.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@kobj:<span class=\"ts\"/>object we're creating for. </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@attr:<span class=\"ts\"/>attribute descriptor.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> * <a class=\"id\" href=\"#kobj\">kobj</a>, const struct <a class=\"id\" href=\"#attribute\">attribute</a> * <a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#kobj\">kobj</a> || !<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#sd\">sd</a> || !<a class=\"id\" href=\"#attr\">attr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sysfs_add_file\">sysfs_add_file</a>(<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#SYSFS_KOBJ_ATTR\">SYSFS_KOBJ_ATTR</a>);", 
"", 
"}", 
"", 
"int <a class=\"id\" href=\"#sysfs_create_files\">sysfs_create_files</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, const struct <a class=\"id\" href=\"#attribute\">attribute</a> **<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#ptr\">ptr</a>[<a class=\"id\" href=\"#i\">i</a>] && !<a class=\"id\" href=\"#err\">err</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#ptr\">ptr</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_file\">sysfs_remove_file</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#ptr\">ptr</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sysfs_add_file_to_group - add an attribute file to a pre-existing group.</span>", 
"<span class=\"comment\"> * @kobj: object we're acting for.</span>", 
"<span class=\"comment\"> * @attr: attribute descriptor.</span>", 
"<span class=\"comment\"> * @group: group name.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sysfs_add_file_to_group\">sysfs_add_file_to_group</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, const char *<a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#dir_sd\">dir_sd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group\">group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir_sd\">dir_sd</a> = <a class=\"id\" href=\"#sysfs_get_dirent\">sysfs_get_dirent</a>(<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir_sd\">dir_sd</a> = <a class=\"id\" href=\"#sysfs_get\">sysfs_get</a>(<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#sd\">sd</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir_sd\">dir_sd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_add_file\">sysfs_add_file</a>(<a class=\"id\" href=\"#dir_sd\">dir_sd</a>, <a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#SYSFS_KOBJ_ATTR\">SYSFS_KOBJ_ATTR</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_put\">sysfs_put</a>(<a class=\"id\" href=\"#dir_sd\">dir_sd</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysfs_add_file_to_group\">sysfs_add_file_to_group</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sysfs_chmod_file - update the modified mode value on an object attribute.</span>", 
"<span class=\"comment\"> * @kobj: object we're acting for.</span>", 
"<span class=\"comment\"> * @attr: attribute descriptor.</span>", 
"<span class=\"comment\"> * @mode: file permissions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sysfs_chmod_file\">sysfs_chmod_file</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, const struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sd\">sd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iattr\">iattr</a> <a class=\"id\" href=\"#newattrs\">newattrs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sysfs_mutex\">sysfs_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sd\">sd</a> = <a class=\"id\" href=\"#sysfs_find_dirent\">sysfs_find_dirent</a>(<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sd\">sd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_mode\">ia_mode</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IALLUGO\">S_IALLUGO</a>) | (<a class=\"id\" href=\"#sd\">sd</a>-><a class=\"id\" href=\"#s_mode\">s_mode</a> &amp; ~<a class=\"id\" href=\"#S_IALLUGO\">S_IALLUGO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_valid\">ia_valid</a> = <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sysfs_sd_setattr\">sysfs_sd_setattr</a>(<a class=\"id\" href=\"#sd\">sd</a>, &amp;<a class=\"id\" href=\"#newattrs\">newattrs</a>);", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sysfs_mutex\">sysfs_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysfs_chmod_file\">sysfs_chmod_file</a>);", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sysfs_remove_file - remove an object attribute.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@kobj:<span class=\"ts\"/>object we're acting for.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@attr:<span class=\"ts\"/>attribute descriptor.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Hash the attribute name and kill the victim.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#sysfs_remove_file\">sysfs_remove_file</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> * <a class=\"id\" href=\"#kobj\">kobj</a>, const struct <a class=\"id\" href=\"#attribute\">attribute</a> * <a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_hash_and_remove\">sysfs_hash_and_remove</a>(<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#sysfs_remove_files\">sysfs_remove_files</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> * <a class=\"id\" href=\"#kobj\">kobj</a>, const struct <a class=\"id\" href=\"#attribute\">attribute</a> **<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#ptr\">ptr</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_file\">sysfs_remove_file</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#ptr\">ptr</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sysfs_remove_file_from_group - remove an attribute file from a group.</span>", 
"<span class=\"comment\"> * @kobj: object we're acting for.</span>", 
"<span class=\"comment\"> * @attr: attribute descriptor.</span>", 
"<span class=\"comment\"> * @group: group name.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#sysfs_remove_file_from_group\">sysfs_remove_file_from_group</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, const char *<a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#dir_sd\">dir_sd</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group\">group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir_sd\">dir_sd</a> = <a class=\"id\" href=\"#sysfs_get_dirent\">sysfs_get_dirent</a>(<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#sd\">sd</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir_sd\">dir_sd</a> = <a class=\"id\" href=\"#sysfs_get\">sysfs_get</a>(<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#sd\">sd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dir_sd\">dir_sd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_hash_and_remove\">sysfs_hash_and_remove</a>(<a class=\"id\" href=\"#dir_sd\">dir_sd</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_put\">sysfs_put</a>(<a class=\"id\" href=\"#dir_sd\">dir_sd</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysfs_remove_file_from_group\">sysfs_remove_file_from_group</a>);", 
"", 
"struct <a class=\"id\" href=\"#sysfs_schedule_callback_struct\">sysfs_schedule_callback_struct</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#workq_list\">workq_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#func\">func</a>)(void *);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#work\">work</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#sysfs_workqueue\">sysfs_workqueue</a>;", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#sysfs_workq_mutex\">sysfs_workq_mutex</a>);", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#sysfs_workq\">sysfs_workq</a>);", 
"static void <a class=\"id\" href=\"#sysfs_schedule_callback_work\">sysfs_schedule_callback_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_schedule_callback_struct\">sysfs_schedule_callback_struct</a> *<a class=\"id\" href=\"#ss\">ss</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_schedule_callback_struct\">sysfs_schedule_callback_struct</a>, <a class=\"id\" href=\"#work\">work</a>);", 
"", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#func\">func</a>)(<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sysfs_workq_mutex\">sysfs_workq_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#workq_list\">workq_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sysfs_workq_mutex\">sysfs_workq_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ss\">ss</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sysfs_schedule_callback - helper to schedule a callback for a kobject</span>", 
"<span class=\"comment\"> * @kobj: object we're acting for.</span>", 
"<span class=\"comment\"> * @func: callback function to invoke later.</span>", 
"<span class=\"comment\"> * @data: argument to pass to @func.</span>", 
"<span class=\"comment\"> * @owner: module owning the callback code</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * sysfs attribute methods must not unregister themselves or their parent</span>", 
"<span class=\"comment\"> * kobject (which would amount to the same thing).  Attempts to do so will</span>", 
"<span class=\"comment\"> * deadlock, since unregistration is mutually exclusive with driver</span>", 
"<span class=\"comment\"> * callbacks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Instead methods can call this routine, which will attempt to allocate</span>", 
"<span class=\"comment\"> * and schedule a workqueue request to call back @func with @data as its</span>", 
"<span class=\"comment\"> * argument in the workqueue's process context.  @kobj will be pinned</span>", 
"<span class=\"comment\"> * until @func returns.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if the request was submitted, -ENOMEM if storage could not</span>", 
"<span class=\"comment\"> * be allocated, -ENODEV if a reference to @owner isn't available,</span>", 
"<span class=\"comment\"> * -EAGAIN if a callback has already been scheduled for @kobj.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sysfs_schedule_callback\">sysfs_schedule_callback</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, void (*<a class=\"id\" href=\"#func\">func</a>)(void *),", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_schedule_callback_struct\">sysfs_schedule_callback_struct</a> *<a class=\"id\" href=\"#ss\">ss</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sysfs_workq_mutex\">sysfs_workq_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#ss\">ss</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#sysfs_workq\">sysfs_workq</a>, <a class=\"id\" href=\"#workq_list\">workq_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#kobj\">kobj</a> == <a class=\"id\" href=\"#kobj\">kobj</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sysfs_workq_mutex\">sysfs_workq_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sysfs_workq_mutex\">sysfs_workq_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysfs_workqueue\">sysfs_workqueue</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_workqueue\">sysfs_workqueue</a> = <a class=\"id\" href=\"#create_singlethread_workqueue\">create_singlethread_workqueue</a>(\"sysfsd\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sysfs_workqueue\">sysfs_workqueue</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ss\">ss</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#ss\">ss</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss\">ss</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_get\">kobject_get</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#func\">func</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#sysfs_schedule_callback_work\">sysfs_schedule_callback_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#workq_list\">workq_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sysfs_workq_mutex\">sysfs_workq_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#workq_list\">workq_list</a>, &amp;<a class=\"id\" href=\"#sysfs_workq\">sysfs_workq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sysfs_workq_mutex\">sysfs_workq_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_work\">queue_work</a>(<a class=\"id\" href=\"#sysfs_workqueue\">sysfs_workqueue</a>, &amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysfs_schedule_callback\">sysfs_schedule_callback</a>);", 
"", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>);", 
];
xr_frag_insert('l/b3/18a8d7cd7332dc4f14e436a0cf3697ac73dc71.xr', __xr_tmp);
