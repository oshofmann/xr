var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_IRQ_VECTORS_H\">_ASM_X86_IRQ_VECTORS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_IRQ_VECTORS_H\">_ASM_X86_IRQ_VECTORS_H</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Linux IRQ vector layout.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * There are 256 IDT entries (per CPU - each entry is 8 bytes) which can</span>", 
"<span class=\"comment\"> * be defined by Linux. They are used as a jump table by the CPU when a</span>", 
"<span class=\"comment\"> * given vector is triggered - by a CPU-external, CPU-internal or</span>", 
"<span class=\"comment\"> * software-triggered event.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Linux sets the kernel code address each entry jumps to early during</span>", 
"<span class=\"comment\"> * bootup, and never changes them. This is the general layout of the</span>", 
"<span class=\"comment\"> * IDT entries:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Vectors   0 ...  31 : system traps and exceptions - hardcoded events</span>", 
"<span class=\"comment\"> *  Vectors  32 ... 127 : device interrupts</span>", 
"<span class=\"comment\"> *  Vector  128         : legacy int80 syscall interface</span>", 
"<span class=\"comment\"> *  Vectors 129 ... 237 : device interrupts</span>", 
"<span class=\"comment\"> *  Vectors 238 ... 255 : special interrupts</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 64-bit x86 has per CPU IDT tables, 32-bit has one shared IDT table.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file enumerates the exact layout of them:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_VECTOR\">NMI_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_VECTOR\">MCE_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x12", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * IDT vectors usable for external interrupt sources start at 0x20.</span>", 
"<span class=\"comment\"> * (0x80 is the syscall vector, 0x30-0x3f are for ISA)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FIRST_EXTERNAL_VECTOR\">FIRST_EXTERNAL_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0x20", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We start allocating at 0x21 to spread out vectors evenly between</span>", 
"<span class=\"comment\"> * priority levels. (0x80 is the syscall vector)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VECTOR_OFFSET_START\">VECTOR_OFFSET_START</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reserve the lowest usable vector (and hence lowest priority)  0x20 for</span>", 
"<span class=\"comment\"> * triggering cleanup after irq migration. 0x21-0x2f will still be used</span>", 
"<span class=\"comment\"> * for device interrupts.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ_MOVE_CLEANUP_VECTOR\">IRQ_MOVE_CLEANUP_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FIRST_EXTERNAL_VECTOR\">FIRST_EXTERNAL_VECTOR</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IA32_SYSCALL_VECTOR\">IA32_SYSCALL_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0x80", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SYSCALL_VECTOR\">SYSCALL_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x80", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Vectors 0x30-0x3f are used for ISA interrupts.</span>", 
"<span class=\"comment\"> *   round up to the next 16-vector boundary</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#FIRST_EXTERNAL_VECTOR\">FIRST_EXTERNAL_VECTOR</a> + 16) &amp; ~15)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ1_VECTOR\">IRQ1_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> +  1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ2_VECTOR\">IRQ2_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> +  2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ3_VECTOR\">IRQ3_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> +  3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ4_VECTOR\">IRQ4_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> +  4)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ5_VECTOR\">IRQ5_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> +  5)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ6_VECTOR\">IRQ6_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> +  6)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ7_VECTOR\">IRQ7_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> +  7)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ8_VECTOR\">IRQ8_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> +  8)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ9_VECTOR\">IRQ9_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> +  9)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ10_VECTOR\">IRQ10_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> + 10)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ11_VECTOR\">IRQ11_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> + 11)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ12_VECTOR\">IRQ12_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> + 12)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ13_VECTOR\">IRQ13_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> + 13)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ14_VECTOR\">IRQ14_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> + 14)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ15_VECTOR\">IRQ15_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> + 15)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Special IRQ vectors used by the SMP architecture, 0xf0-0xff</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  some of the following vectors are 'rare', they are merged</span>", 
"<span class=\"comment\"> *  into a single vector (CALL_FUNCTION_VECTOR) to save vector space.</span>", 
"<span class=\"comment\"> *  TLB, reschedule and local APIC vectors are performance-critical.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SPURIOUS_APIC_VECTOR\">SPURIOUS_APIC_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0xff", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Sanity check</span>", 
"<span class=\"comment\"> */</span>", 
"#if ((<a class=\"id\" href=\"#SPURIOUS_APIC_VECTOR\">SPURIOUS_APIC_VECTOR</a> &amp; 0x0F) != 0x0F)", 
"# <a class=\"id\" href=\"#error\">error</a> <a class=\"id\" href=\"#SPURIOUS_APIC_VECTOR\">SPURIOUS_APIC_VECTOR</a> <a class=\"id\" href=\"#definition\">definition</a> <a class=\"id\" href=\"#error\">error</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ERROR_APIC_VECTOR\">ERROR_APIC_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0xfe", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RESCHEDULE_VECTOR\">RESCHEDULE_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0xfd", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALL_FUNCTION_VECTOR\">CALL_FUNCTION_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0xfc", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALL_FUNCTION_SINGLE_VECTOR\">CALL_FUNCTION_SINGLE_VECTOR</a><span class=\"ts\"/>0xfb", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#THERMAL_APIC_VECTOR\">THERMAL_APIC_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0xfa", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#THRESHOLD_APIC_VECTOR\">THRESHOLD_APIC_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0xf9", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REBOOT_VECTOR\">REBOOT_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0xf8", 
"", 
"<span class=\"comment\">/* f0-f7 used for spreading out TLB flushes: */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INVALIDATE_TLB_VECTOR_END\">INVALIDATE_TLB_VECTOR_END</a><span class=\"ts\"/>0xf7", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INVALIDATE_TLB_VECTOR_START\">INVALIDATE_TLB_VECTOR_START</a><span class=\"ts\"/>0xf0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NUM_INVALIDATE_TLB_VECTORS\">NUM_INVALIDATE_TLB_VECTORS</a><span class=\"ts\"/>   8", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Local APIC timer IRQ vector is on a different priority level,</span>", 
"<span class=\"comment\"> * to work around the 'lost local interrupt if more than 2 IRQ</span>", 
"<span class=\"comment\"> * sources per level' errata.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LOCAL_TIMER_VECTOR\">LOCAL_TIMER_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0xef", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic system vector for platform specific use</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_PLATFORM_IPI_VECTOR\">X86_PLATFORM_IPI_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0xed", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Performance monitoring pending work vector:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LOCAL_PENDING_VECTOR\">LOCAL_PENDING_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/>0xec", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UV_BAU_MESSAGE\">UV_BAU_MESSAGE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0xea", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Self IPI vector for machine checks</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_SELF_VECTOR\">MCE_SELF_VECTOR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0xeb", 
"", 
"<span class=\"comment\">/* Xen vector callback to receive events in a HVM domain */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XEN_HVM_EVTCHN_CALLBACK\">XEN_HVM_EVTCHN_CALLBACK</a><span class=\"ts\"/><span class=\"ts\"/>0xe9", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_VECTORS\">NR_VECTORS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> 256", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FPU_IRQ\">FPU_IRQ</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  13", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#FIRST_VM86_IRQ\">FIRST_VM86_IRQ</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LAST_VM86_IRQ\">LAST_VM86_IRQ</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  15", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#invalid_vm86_irq\">invalid_vm86_irq</a>(int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a> &lt; <a class=\"id\" href=\"#FIRST_VM86_IRQ\">FIRST_VM86_IRQ</a> || <a class=\"id\" href=\"#irq\">irq</a> &gt; <a class=\"id\" href=\"#LAST_VM86_IRQ\">LAST_VM86_IRQ</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Size the maximum number of interrupts.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the irq_desc[] array has a sparse layout, we can size things</span>", 
"<span class=\"comment\"> * generously - it scales up linearly with the maximum number of CPUs,</span>", 
"<span class=\"comment\"> * and the maximum number of IO-APICs, whichever is higher.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In other cases we size more conservatively, to not create too large</span>", 
"<span class=\"comment\"> * static arrays.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  16", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IO_APIC_VECTOR_LIMIT\">IO_APIC_VECTOR_LIMIT</a><span class=\"ts\"/><span class=\"ts\"/>( 32 * <a class=\"id\" href=\"#MAX_IO_APICS\">MAX_IO_APICS</a> )", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SPARSE_IRQ\">CONFIG_SPARSE_IRQ</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_VECTOR_LIMIT\">CPU_VECTOR_LIMIT</a><span class=\"ts\"/><span class=\"ts\"/>(64 * <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a>)", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_IRQS\">NR_IRQS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_VECTOR_LIMIT\">CPU_VECTOR_LIMIT</a> &gt; <a class=\"id\" href=\"#IO_APIC_VECTOR_LIMIT\">IO_APIC_VECTOR_LIMIT</a> ?<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NR_VECTORS\">NR_VECTORS</a> + <a class=\"id\" href=\"#CPU_VECTOR_LIMIT\">CPU_VECTOR_LIMIT</a>)  :<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NR_VECTORS\">NR_VECTORS</a> + <a class=\"id\" href=\"#IO_APIC_VECTOR_LIMIT\">IO_APIC_VECTOR_LIMIT</a>))", 
"# else", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_VECTOR_LIMIT\">CPU_VECTOR_LIMIT</a><span class=\"ts\"/><span class=\"ts\"/>(32 * <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a>)", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_IRQS\">NR_IRQS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_VECTOR_LIMIT\">CPU_VECTOR_LIMIT</a> &lt; <a class=\"id\" href=\"#IO_APIC_VECTOR_LIMIT\">IO_APIC_VECTOR_LIMIT</a> ?<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NR_VECTORS\">NR_VECTORS</a> + <a class=\"id\" href=\"#CPU_VECTOR_LIMIT\">CPU_VECTOR_LIMIT</a>)  :<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NR_VECTORS\">NR_VECTORS</a> + <a class=\"id\" href=\"#IO_APIC_VECTOR_LIMIT\">IO_APIC_VECTOR_LIMIT</a>))", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"#else <span class=\"comment\">/* !CONFIG_X86_IO_APIC: */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_IRQS\">NR_IRQS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_IRQ_VECTORS_H */</span>", 
];
xr_frag_insert('l/b3/35cb0572d0f2f42d5f70052d73cd98057fa471.xr', __xr_tmp);
