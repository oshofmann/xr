var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/ipc/msg.c</span>", 
"<span class=\"comment\"> * Copyright (C) 1992 Krishna Balasubramanian</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Removed all the remaining kerneld mess</span>", 
"<span class=\"comment\"> * Catch the -EFAULT stuff properly</span>", 
"<span class=\"comment\"> * Use GFP_KERNEL for messages as in 1.2</span>", 
"<span class=\"comment\"> * Fixed up the unchecked user space derefs</span>", 
"<span class=\"comment\"> * Copyright (C) 1998 Alan Cox &amp; Andi Kleen</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * /proc/sysvipc/msg support (c) 1999 Dragos Acostachioaie &lt;dragos@iname.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * mostly rewritten, threaded and wake-one semantics added</span>", 
"<span class=\"comment\"> * MSGMAX limit removed, sysctl's added</span>", 
"<span class=\"comment\"> * (c) 1999 Manfred Spraul &lt;manfred@colorfullife.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * support for audit of ipc object properties and permission changes</span>", 
"<span class=\"comment\"> * Dustin Kirkland &lt;dustin.kirkland@us.ibm.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * namespaces support</span>", 
"<span class=\"comment\"> * OpenVZ, SWsoft Inc.</span>", 
"<span class=\"comment\"> * Pavel Emelianov &lt;xemul@openvz.org&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rwsem\">rwsem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nsproxy\">nsproxy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#current\">current</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"util.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * one msg_receiver structure for each sleeping receiver:</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#msg_receiver\">msg_receiver</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#r_list\">r_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#r_tsk\">r_tsk</a>;", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r_mode\">r_mode</a>;", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r_msgtype\">r_msgtype</a>;", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r_maxsize\">r_maxsize</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_msg\">msg_msg</a><span class=\"ts\"/><span class=\"ts\"/>*volatile <a class=\"id\" href=\"#r_msg\">r_msg</a>;", 
"};", 
"", 
"<span class=\"comment\">/* one msg_sender for each sleeping sender */</span>", 
"struct <a class=\"id\" href=\"#msg_sender\">msg_sender</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#tsk\">tsk</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEARCH_ANY\">SEARCH_ANY</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEARCH_EQUAL\">SEARCH_EQUAL</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEARCH_NOTEQUAL\">SEARCH_NOTEQUAL</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEARCH_LESSEQUAL\">SEARCH_LESSEQUAL</a><span class=\"ts\"/>4", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#msg_ids\">msg_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#ns\">ns</a>)-><a class=\"id\" href=\"#ids\">ids</a>[<a class=\"id\" href=\"#IPC_MSG_IDS\">IPC_MSG_IDS</a>])", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#msg_unlock\">msg_unlock</a>(<a class=\"id\" href=\"#msq\">msq</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipc_unlock\">ipc_unlock</a>(&amp;(<a class=\"id\" href=\"#msq\">msq</a>)-><a class=\"id\" href=\"#q_perm\">q_perm</a>)", 
"", 
"static void <a class=\"id\" href=\"#freeque\">freeque</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *, struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *);", 
"static int <a class=\"id\" href=\"#newque\">newque</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *, struct <a class=\"id\" href=\"#ipc_params\">ipc_params</a> *);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"static int <a class=\"id\" href=\"#sysvipc_msg_proc_show\">sysvipc_msg_proc_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#it\">it</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Scale msgmni with the available lowmem size: the memory dedicated to msg</span>", 
"<span class=\"comment\"> * queues should occupy at most 1/MSG_MEM_SCALE of lowmem.</span>", 
"<span class=\"comment\"> * Also take into account the number of nsproxies created so far.</span>", 
"<span class=\"comment\"> * This should be done staying within the (MSGMNI , IPCMNI/nr_ipc_ns) range.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#recompute_msgmni\">recompute_msgmni</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysinfo\">sysinfo</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#allowed\">allowed</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nb_ns\">nb_ns</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#si_meminfo\">si_meminfo</a>(&amp;<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#allowed\">allowed</a> = (((<a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#totalram\">totalram</a> - <a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#totalhigh\">totalhigh</a>) / <a class=\"id\" href=\"#MSG_MEM_SCALE\">MSG_MEM_SCALE</a>) * <a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#mem_unit\">mem_unit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>/ <a class=\"id\" href=\"#MSGMNB\">MSGMNB</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nb_ns\">nb_ns</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#nr_ipc_ns\">nr_ipc_ns</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#allowed\">allowed</a> /= <a class=\"id\" href=\"#nb_ns\">nb_ns</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#allowed\">allowed</a> &lt; <a class=\"id\" href=\"#MSGMNI\">MSGMNI</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_ctlmni\">msg_ctlmni</a> = <a class=\"id\" href=\"#MSGMNI\">MSGMNI</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#allowed\">allowed</a> &gt; <a class=\"id\" href=\"#IPCMNI\">IPCMNI</a> / <a class=\"id\" href=\"#nb_ns\">nb_ns</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_ctlmni\">msg_ctlmni</a> = <a class=\"id\" href=\"#IPCMNI\">IPCMNI</a> / <a class=\"id\" href=\"#nb_ns\">nb_ns</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_ctlmni\">msg_ctlmni</a> = <a class=\"id\" href=\"#allowed\">allowed</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#msg_init_ns\">msg_init_ns</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_ctlmax\">msg_ctlmax</a> = <a class=\"id\" href=\"#MSGMAX\">MSGMAX</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_ctlmnb\">msg_ctlmnb</a> = <a class=\"id\" href=\"#MSGMNB\">MSGMNB</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#recompute_msgmni\">recompute_msgmni</a>(<a class=\"id\" href=\"#ns\">ns</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_bytes\">msg_bytes</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_hdrs\">msg_hdrs</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipc_init_ids\">ipc_init_ids</a>(&amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#ids\">ids</a>[<a class=\"id\" href=\"#IPC_MSG_IDS\">IPC_MSG_IDS</a>]);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPC_NS\">CONFIG_IPC_NS</a>", 
"void <a class=\"id\" href=\"#msg_exit_ns\">msg_exit_ns</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_ipcs\">free_ipcs</a>(<a class=\"id\" href=\"#ns\">ns</a>, &amp;<a class=\"id\" href=\"#msg_ids\">msg_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>), <a class=\"id\" href=\"#freeque\">freeque</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_destroy\">idr_destroy</a>(&amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#ids\">ids</a>[<a class=\"id\" href=\"#IPC_MSG_IDS\">IPC_MSG_IDS</a>].<a class=\"id\" href=\"#ipcs_idr\">ipcs_idr</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#msg_init\">msg_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_init_ns\">msg_init_ns</a>(&amp;<a class=\"id\" href=\"#init_ipc_ns\">init_ipc_ns</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"msgmni has been set to %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_ipc_ns\">init_ipc_ns</a>.<a class=\"id\" href=\"#msg_ctlmni\">msg_ctlmni</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipc_init_proc_interface\">ipc_init_proc_interface</a>(\"sysvipc/msg\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"       key      msqid perms      cbytes       qnum lspid lrpid   uid   gid  cuid  cgid      stime      rtime      ctime\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPC_MSG_IDS\">IPC_MSG_IDS</a>, <a class=\"id\" href=\"#sysvipc_msg_proc_show\">sysvipc_msg_proc_show</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * msg_lock_(check_) routines are called in the paths where the rw_mutex</span>", 
"<span class=\"comment\"> * is not held.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msg_lock\">msg_lock</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>, int <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#ipcp\">ipcp</a> = <a class=\"id\" href=\"#ipc_lock\">ipc_lock</a>(&amp;<a class=\"id\" href=\"#msg_ids\">msg_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>), <a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return (struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *)<a class=\"id\" href=\"#ipcp\">ipcp</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>, struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a>, <a class=\"id\" href=\"#q_perm\">q_perm</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msg_lock_check\">msg_lock_check</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#ipcp\">ipcp</a> = <a class=\"id\" href=\"#ipc_lock_check\">ipc_lock_check</a>(&amp;<a class=\"id\" href=\"#msg_ids\">msg_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>), <a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return (struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *)<a class=\"id\" href=\"#ipcp\">ipcp</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>, struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a>, <a class=\"id\" href=\"#q_perm\">q_perm</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#msg_rmid\">msg_rmid</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>, struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipc_rmid\">ipc_rmid</a>(&amp;<a class=\"id\" href=\"#msg_ids\">msg_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>), &amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * newque - Create a new msg queue</span>", 
"<span class=\"comment\"> * @ns: namespace</span>", 
"<span class=\"comment\"> * @params: ptr to the structure that contains the key and msgflg</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with msg_ids.rw_mutex held (writer)</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#newque\">newque</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>, struct <a class=\"id\" href=\"#ipc_params\">ipc_params</a> *<a class=\"id\" href=\"#params\">params</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_t\">key_t</a> <a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#params\">params</a>-><a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#msgflg\">msgflg</a> = <a class=\"id\" href=\"#params\">params</a>-><a class=\"id\" href=\"#flg\">flg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msq\">msq</a> = <a class=\"id\" href=\"#ipc_rcu_alloc\">ipc_rcu_alloc</a>(sizeof(*<a class=\"id\" href=\"#msq\">msq</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#msq\">msq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#msgflg\">msgflg</a> &amp; <a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#security\">security</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#security_msg_queue_alloc\">security_msg_queue_alloc</a>(<a class=\"id\" href=\"#msq\">msq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipc_rcu_putref\">ipc_rcu_putref</a>(<a class=\"id\" href=\"#msq\">msq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ipc_addid() locks msq</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#ipc_addid\">ipc_addid</a>(&amp;<a class=\"id\" href=\"#msg_ids\">msg_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>), &amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>, <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_ctlmni\">msg_ctlmni</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_msg_queue_free\">security_msg_queue_free</a>(<a class=\"id\" href=\"#msq\">msq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipc_rcu_putref\">ipc_rcu_putref</a>(<a class=\"id\" href=\"#msq\">msq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_stime\">q_stime</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_rtime\">q_rtime</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_ctime\">q_ctime</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_cbytes\">q_cbytes</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_qnum\">q_qnum</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_qbytes\">q_qbytes</a> = <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_ctlmnb\">msg_ctlmnb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_lspid\">q_lspid</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_lrpid\">q_lrpid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_messages\">q_messages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_receivers\">q_receivers</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_senders\">q_senders</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_unlock\">msg_unlock</a>(<a class=\"id\" href=\"#msq\">msq</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#id\">id</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ss_add\">ss_add</a>(struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>, struct <a class=\"id\" href=\"#msg_sender\">msg_sender</a> *<a class=\"id\" href=\"#mss\">mss</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_senders\">q_senders</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ss_del\">ss_del</a>(struct <a class=\"id\" href=\"#msg_sender\">msg_sender</a> *<a class=\"id\" href=\"#mss\">mss</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ss_wakeup\">ss_wakeup</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#h\">h</a>, int <a class=\"id\" href=\"#kill\">kill</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#tmp\">tmp</a> != <a class=\"id\" href=\"#h\">h</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_sender\">msg_sender</a> *<a class=\"id\" href=\"#mss\">mss</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, struct <a class=\"id\" href=\"#msg_sender\">msg_sender</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kill\">kill</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#expunge_all\">expunge_all</a>(struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>, int <a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_receivers\">q_receivers</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#tmp\">tmp</a> != &amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_receivers\">q_receivers</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_receiver\">msg_receiver</a> *<a class=\"id\" href=\"#msr\">msr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr\">msr</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, struct <a class=\"id\" href=\"#msg_receiver\">msg_receiver</a>, <a class=\"id\" href=\"#r_list\">r_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr\">msr</a>-><a class=\"id\" href=\"#r_msg\">r_msg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#msr\">msr</a>-><a class=\"id\" href=\"#r_tsk\">r_tsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_mb\">smp_mb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr\">msr</a>-><a class=\"id\" href=\"#r_msg\">r_msg</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * freeque() wakes up waiters on the sender and receiver waiting queue,</span>", 
"<span class=\"comment\"> * removes the message queue from message queue ID IDR, and cleans up all the</span>", 
"<span class=\"comment\"> * messages associated with this queue.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * msg_ids.rw_mutex (writer) and the spinlock for this message queue are held</span>", 
"<span class=\"comment\"> * before freeque() is called. msg_ids.rw_mutex remains locked on exit.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#freeque\">freeque</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>, struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#ipcp\">ipcp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>, struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a>, <a class=\"id\" href=\"#q_perm\">q_perm</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#expunge_all\">expunge_all</a>(<a class=\"id\" href=\"#msq\">msq</a>, -<a class=\"id\" href=\"#EIDRM\">EIDRM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ss_wakeup\">ss_wakeup</a>(&amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_senders\">q_senders</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_rmid\">msg_rmid</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#msq\">msq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_unlock\">msg_unlock</a>(<a class=\"id\" href=\"#msq\">msq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_messages\">q_messages</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#tmp\">tmp</a> != &amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_messages\">q_messages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_msg\">msg_msg</a> *<a class=\"id\" href=\"#msg\">msg</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, struct <a class=\"id\" href=\"#msg_msg\">msg_msg</a>, <a class=\"id\" href=\"#m_list\">m_list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_hdrs\">msg_hdrs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_msg\">free_msg</a>(<a class=\"id\" href=\"#msg\">msg</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_sub\">atomic_sub</a>(<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_cbytes\">q_cbytes</a>, &amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#msg_bytes\">msg_bytes</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_msg_queue_free\">security_msg_queue_free</a>(<a class=\"id\" href=\"#msq\">msq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipc_rcu_putref\">ipc_rcu_putref</a>(<a class=\"id\" href=\"#msq\">msq</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called with msg_ids.rw_mutex and ipcp locked.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#msg_security\">msg_security</a>(struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#ipcp\">ipcp</a>, int <a class=\"id\" href=\"#msgflg\">msgflg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>, struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a>, <a class=\"id\" href=\"#q_perm\">q_perm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_msg_queue_associate\">security_msg_queue_associate</a>(<a class=\"id\" href=\"#msq\">msq</a>, <a class=\"id\" href=\"#msgflg\">msgflg</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#msgget\">msgget</a>, <a class=\"id\" href=\"#key_t\">key_t</a>, <a class=\"id\" href=\"#key\">key</a>, int, <a class=\"id\" href=\"#msgflg\">msgflg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_ops\">ipc_ops</a> <a class=\"id\" href=\"#msg_ops\">msg_ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_params\">ipc_params</a> <a class=\"id\" href=\"#msg_params\">msg_params</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#nsproxy\">nsproxy</a>-><a class=\"id\" href=\"#ipc_ns\">ipc_ns</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_ops\">msg_ops</a>.<a class=\"id\" href=\"#getnew\">getnew</a> = <a class=\"id\" href=\"#newque\">newque</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_ops\">msg_ops</a>.<a class=\"id\" href=\"#associate\">associate</a> = <a class=\"id\" href=\"#msg_security\">msg_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_ops\">msg_ops</a>.<a class=\"id\" href=\"#more_checks\">more_checks</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_params\">msg_params</a>.<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_params\">msg_params</a>.<a class=\"id\" href=\"#flg\">flg</a> = <a class=\"id\" href=\"#msgflg\">msgflg</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ipcget\">ipcget</a>(<a class=\"id\" href=\"#ns\">ns</a>, &amp;<a class=\"id\" href=\"#msg_ids\">msg_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>), &amp;<a class=\"id\" href=\"#msg_ops\">msg_ops</a>, &amp;<a class=\"id\" href=\"#msg_params\">msg_params</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long", 
"<a class=\"id\" href=\"#copy_msqid_to_user\">copy_msqid_to_user</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, struct <a class=\"id\" href=\"#msqid64_ds\">msqid64_ds</a> *<a class=\"id\" href=\"#in\">in</a>, int <a class=\"id\" href=\"#version\">version</a>)", 
"{", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#version\">version</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_64\">IPC_64</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#in\">in</a>, sizeof(*<a class=\"id\" href=\"#in\">in</a>));", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_OLD\">IPC_OLD</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#msqid_ds\">msqid_ds</a> <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#out\">out</a>, 0, sizeof(<a class=\"id\" href=\"#out\">out</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipc64_perm_to_ipc_perm\">ipc64_perm_to_ipc_perm</a>(&amp;<a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_perm\">msg_perm</a>, &amp;<a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_perm\">msg_perm</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_stime\">msg_stime</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_stime\">msg_stime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_rtime\">msg_rtime</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_rtime\">msg_rtime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_ctime\">msg_ctime</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_ctime\">msg_ctime</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_cbytes\">msg_cbytes</a> &gt; <a class=\"id\" href=\"#USHRT_MAX\">USHRT_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_cbytes\">msg_cbytes</a><span class=\"ts\"/>= <a class=\"id\" href=\"#USHRT_MAX\">USHRT_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_cbytes\">msg_cbytes</a><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_cbytes\">msg_cbytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_lcbytes\">msg_lcbytes</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_cbytes\">msg_cbytes</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_qnum\">msg_qnum</a> &gt; <a class=\"id\" href=\"#USHRT_MAX\">USHRT_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_qnum\">msg_qnum</a><span class=\"ts\"/>= <a class=\"id\" href=\"#USHRT_MAX\">USHRT_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_qnum\">msg_qnum</a><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_qnum\">msg_qnum</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a> &gt; <a class=\"id\" href=\"#USHRT_MAX\">USHRT_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a><span class=\"ts\"/>= <a class=\"id\" href=\"#USHRT_MAX\">USHRT_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_lqbytes\">msg_lqbytes</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_lspid\">msg_lspid</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_lspid\">msg_lspid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>.<a class=\"id\" href=\"#msg_lrpid\">msg_lrpid</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#msg_lrpid\">msg_lrpid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#out\">out</a>, sizeof(<a class=\"id\" href=\"#out\">out</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long", 
"<a class=\"id\" href=\"#copy_msqid_from_user\">copy_msqid_from_user</a>(struct <a class=\"id\" href=\"#msqid64_ds\">msqid64_ds</a> *<a class=\"id\" href=\"#out\">out</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#version\">version</a>)", 
"{", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#version\">version</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_64\">IPC_64</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#buf\">buf</a>, sizeof(*<a class=\"id\" href=\"#out\">out</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_OLD\">IPC_OLD</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#msqid_ds\">msqid_ds</a> <a class=\"id\" href=\"#tbuf_old\">tbuf_old</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tbuf_old\">tbuf_old</a>, <a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#tbuf_old\">tbuf_old</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>-><a class=\"id\" href=\"#msg_perm\">msg_perm</a>.<a class=\"id\" href=\"#uid\">uid</a>      <span class=\"ts\"/>= <a class=\"id\" href=\"#tbuf_old\">tbuf_old</a>.<a class=\"id\" href=\"#msg_perm\">msg_perm</a>.<a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>-><a class=\"id\" href=\"#msg_perm\">msg_perm</a>.<a class=\"id\" href=\"#gid\">gid</a>      <span class=\"ts\"/>= <a class=\"id\" href=\"#tbuf_old\">tbuf_old</a>.<a class=\"id\" href=\"#msg_perm\">msg_perm</a>.<a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>-><a class=\"id\" href=\"#msg_perm\">msg_perm</a>.<a class=\"id\" href=\"#mode\">mode</a>     <span class=\"ts\"/>= <a class=\"id\" href=\"#tbuf_old\">tbuf_old</a>.<a class=\"id\" href=\"#msg_perm\">msg_perm</a>.<a class=\"id\" href=\"#mode\">mode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tbuf_old\">tbuf_old</a>.<a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>-><a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tbuf_old\">tbuf_old</a>.<a class=\"id\" href=\"#msg_lqbytes\">msg_lqbytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>-><a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tbuf_old\">tbuf_old</a>.<a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function handles some msgctl commands which require the rw_mutex</span>", 
"<span class=\"comment\"> * to be held in write mode.</span>", 
"<span class=\"comment\"> * NOTE: no locks must be held, the rw_mutex is taken inside this function.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#msgctl_down\">msgctl_down</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>, int <a class=\"id\" href=\"#msqid\">msqid</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#msqid_ds\">msqid_ds</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#version\">version</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#ipcp\">ipcp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msqid64_ds\">msqid64_ds</a> <a class=\"id\" href=\"#uninitialized_var\">uninitialized_var</a>(<a class=\"id\" href=\"#msqid64\">msqid64</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#IPC_SET\">IPC_SET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_msqid_from_user\">copy_msqid_from_user</a>(&amp;<a class=\"id\" href=\"#msqid64\">msqid64</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#version\">version</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipcp\">ipcp</a> = <a class=\"id\" href=\"#ipcctl_pre_down\">ipcctl_pre_down</a>(&amp;<a class=\"id\" href=\"#msg_ids\">msg_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>), <a class=\"id\" href=\"#msqid\">msqid</a>, <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#msqid64\">msqid64</a>.<a class=\"id\" href=\"#msg_perm\">msg_perm</a>, <a class=\"id\" href=\"#msqid64\">msqid64</a>.<a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>))", 
];
xr_frag_insert('l/b3/4f9a9d44a2c89dc7dceccc6ea3bb7c882592ae.xr', __xr_tmp);
