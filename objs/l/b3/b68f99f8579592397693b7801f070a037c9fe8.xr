var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_VIRTIO_BLK_H\">_LINUX_VIRTIO_BLK_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_VIRTIO_BLK_H\">_LINUX_VIRTIO_BLK_H</a>", 
"<span class=\"comment\">/* This header is BSD licensed so anyone can use the definitions to implement</span>", 
"<span class=\"comment\"> * compatible drivers/servers. */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_ids\">virtio_ids</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_config\">virtio_config</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Feature bits */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_F_BARRIER\">VIRTIO_BLK_F_BARRIER</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* Does host support barriers? */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_F_SIZE_MAX\">VIRTIO_BLK_F_SIZE_MAX</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* Indicates maximum segment size */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_F_SEG_MAX\">VIRTIO_BLK_F_SEG_MAX</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* Indicates maximum # of segments */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_F_GEOMETRY\">VIRTIO_BLK_F_GEOMETRY</a><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* Legacy geometry available  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_F_RO\">VIRTIO_BLK_F_RO</a><span class=\"ts\"/><span class=\"ts\"/>5<span class=\"ts\"/><span class=\"comment\">/* Disk is read-only */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_F_BLK_SIZE\">VIRTIO_BLK_F_BLK_SIZE</a><span class=\"ts\"/>6<span class=\"ts\"/><span class=\"comment\">/* Block size of disk is available*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_F_SCSI\">VIRTIO_BLK_F_SCSI</a><span class=\"ts\"/>7<span class=\"ts\"/><span class=\"comment\">/* Supports scsi command passthru */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_F_FLUSH\">VIRTIO_BLK_F_FLUSH</a><span class=\"ts\"/>9<span class=\"ts\"/><span class=\"comment\">/* Cache flush command support */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_F_TOPOLOGY\">VIRTIO_BLK_F_TOPOLOGY</a><span class=\"ts\"/>10<span class=\"ts\"/><span class=\"comment\">/* Topology information is available */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_ID_BYTES\">VIRTIO_BLK_ID_BYTES</a><span class=\"ts\"/>20<span class=\"ts\"/><span class=\"comment\">/* ID string length */</span>", 
"", 
"struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* The capacity (in 512-byte sectors). */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#capacity\">capacity</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* The maximum segment size (if VIRTIO_BLK_F_SIZE_MAX) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#size_max\">size_max</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* The maximum number of segments (if VIRTIO_BLK_F_SEG_MAX) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#seg_max\">seg_max</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* geometry the device (if VIRTIO_BLK_F_GEOMETRY) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk_geometry\">virtio_blk_geometry</a> {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#cylinders\">cylinders</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#heads\">heads</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#sectors\">sectors</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#geometry\">geometry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* block size of device (if VIRTIO_BLK_F_BLK_SIZE) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#blk_size\">blk_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the next 4 entries are guarded by VIRTIO_BLK_F_TOPOLOGY  */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* exponent for physical block per logical block. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#physical_block_exp\">physical_block_exp</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* alignment offset in logical blocks. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* minimum I/O size without performance penalty in logical blocks. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#min_io_size\">min_io_size</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* optimal sustained I/O size in logical blocks. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#opt_io_size\">opt_io_size</a>;", 
"", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Command types</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Usage is a bit tricky as some bits are used as flags and some are not.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Rules:</span>", 
"<span class=\"comment\"> *   VIRTIO_BLK_T_OUT may be combined with VIRTIO_BLK_T_SCSI_CMD or</span>", 
"<span class=\"comment\"> *   VIRTIO_BLK_T_BARRIER.  VIRTIO_BLK_T_FLUSH is a command of its own</span>", 
"<span class=\"comment\"> *   and may not be combined with any of the other flags.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* These two define direction. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_T_IN\">VIRTIO_BLK_T_IN</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_T_OUT\">VIRTIO_BLK_T_OUT</a><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/* This bit says it's a scsi command, not an actual read or write. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_T_SCSI_CMD\">VIRTIO_BLK_T_SCSI_CMD</a><span class=\"ts\"/>2", 
"", 
"<span class=\"comment\">/* Cache flush command */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_T_FLUSH\">VIRTIO_BLK_T_FLUSH</a><span class=\"ts\"/>4", 
"", 
"<span class=\"comment\">/* Get device ID command */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_T_GET_ID\">VIRTIO_BLK_T_GET_ID</a>    8", 
"", 
"<span class=\"comment\">/* Barrier before this op. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_T_BARRIER\">VIRTIO_BLK_T_BARRIER</a><span class=\"ts\"/>0x80000000", 
"", 
"<span class=\"comment\">/* This is the first element of the read scatter-gather list. */</span>", 
"struct <a class=\"id\" href=\"#virtio_blk_outhdr\">virtio_blk_outhdr</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* VIRTIO_BLK_T* */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* io priority. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ioprio\">ioprio</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Sector (ie. 512 byte offset) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#sector\">sector</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#virtio_scsi_inhdr\">virtio_scsi_inhdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#errors\">errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#data_len\">data_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#sense_len\">sense_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#residual\">residual</a>;", 
"};", 
"", 
"<span class=\"comment\">/* And this is the final byte of the write scatter-gather list. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_S_OK\">VIRTIO_BLK_S_OK</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_S_IOERR\">VIRTIO_BLK_S_IOERR</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_BLK_S_UNSUPP\">VIRTIO_BLK_S_UNSUPP</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_VIRTIO_BLK_H */</span>", 
];
xr_frag_insert('l/b3/b68f99f8579592397693b7801f070a037c9fe8.xr', __xr_tmp);
