var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Definitions for mount interface. This describes the in the kernel build </span>", 
"<span class=\"comment\"> * linkedlist with mounted filesystems.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author:  Marco van Wieringen &lt;mvw@planets.elm.net&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_MOUNT_H\">_LINUX_MOUNT_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_MOUNT_H\">_LINUX_MOUNT_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nodemask\">nodemask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#super_block\">super_block</a>;", 
"struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a>;", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"struct <a class=\"id\" href=\"#mnt_namespace\">mnt_namespace</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_NOSUID\">MNT_NOSUID</a><span class=\"ts\"/>0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_NODEV\">MNT_NODEV</a><span class=\"ts\"/>0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_NOEXEC\">MNT_NOEXEC</a><span class=\"ts\"/>0x04", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_NOATIME\">MNT_NOATIME</a><span class=\"ts\"/>0x08", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_NODIRATIME\">MNT_NODIRATIME</a><span class=\"ts\"/>0x10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_RELATIME\">MNT_RELATIME</a><span class=\"ts\"/>0x20", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_READONLY\">MNT_READONLY</a><span class=\"ts\"/>0x40<span class=\"ts\"/><span class=\"comment\">/* does the user want this to be r/o? */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_SHRINKABLE\">MNT_SHRINKABLE</a><span class=\"ts\"/>0x100", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_WRITE_HOLD\">MNT_WRITE_HOLD</a><span class=\"ts\"/>0x200", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_SHARED\">MNT_SHARED</a><span class=\"ts\"/>0x1000<span class=\"ts\"/><span class=\"comment\">/* if the vfsmount is a shared mount */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_UNBINDABLE\">MNT_UNBINDABLE</a><span class=\"ts\"/>0x2000<span class=\"ts\"/><span class=\"comment\">/* if the vfsmount is a unbindable mount */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * MNT_SHARED_MASK is the set of flags that should be cleared when a</span>", 
"<span class=\"comment\"> * mount becomes shared.  Currently, this is only the flag that says a</span>", 
"<span class=\"comment\"> * mount cannot be bind mounted, since this is how we create a mount</span>", 
"<span class=\"comment\"> * that shares events with another mount.  If you add a new MNT_*</span>", 
"<span class=\"comment\"> * flag, consider how it interacts with shared mounts.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_SHARED_MASK\">MNT_SHARED_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MNT_UNBINDABLE\">MNT_UNBINDABLE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_PROPAGATION_MASK\">MNT_PROPAGATION_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MNT_SHARED\">MNT_SHARED</a> | <a class=\"id\" href=\"#MNT_UNBINDABLE\">MNT_UNBINDABLE</a>)", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MNT_INTERNAL\">MNT_INTERNAL</a><span class=\"ts\"/>0x4000", 
"", 
"struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#mnt_hash\">mnt_hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt_parent\">mnt_parent</a>;<span class=\"ts\"/><span class=\"comment\">/* fs we are mounted on */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#mnt_mountpoint\">mnt_mountpoint</a>;<span class=\"ts\"/><span class=\"comment\">/* dentry of mountpoint */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#mnt_root\">mnt_root</a>;<span class=\"ts\"/><span class=\"comment\">/* root of the mounted tree */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#mnt_sb\">mnt_sb</a>;<span class=\"ts\"/><span class=\"comment\">/* pointer to superblock */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#mnt_mounts\">mnt_mounts</a>;<span class=\"ts\"/><span class=\"comment\">/* list of children, anchored here */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#mnt_child\">mnt_child</a>;<span class=\"ts\"/><span class=\"comment\">/* and going through their mnt_child */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mnt_flags\">mnt_flags</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* 4 bytes hole on 64bits arches without fsnotify */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FSNOTIFY\">CONFIG_FSNOTIFY</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mnt_fsnotify_mask\">mnt_fsnotify_mask</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> <a class=\"id\" href=\"#mnt_fsnotify_marks\">mnt_fsnotify_marks</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#mnt_devname\">mnt_devname</a>;<span class=\"ts\"/><span class=\"comment\">/* Name of device e.g. /dev/dsk/hda1 */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#mnt_list\">mnt_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#mnt_expire\">mnt_expire</a>;<span class=\"ts\"/><span class=\"comment\">/* link in fs-specific expiry list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#mnt_share\">mnt_share</a>;<span class=\"ts\"/><span class=\"comment\">/* circular list of shared mounts */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#mnt_slave_list\">mnt_slave_list</a>;<span class=\"comment\">/* list of slave mounts */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#mnt_slave\">mnt_slave</a>;<span class=\"ts\"/><span class=\"comment\">/* slave list entry */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt_master\">mnt_master</a>;<span class=\"ts\"/><span class=\"comment\">/* slave is on master-&gt;mnt_slave_list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mnt_namespace\">mnt_namespace</a> *<a class=\"id\" href=\"#mnt_ns\">mnt_ns</a>;<span class=\"ts\"/><span class=\"comment\">/* containing namespace */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mnt_id\">mnt_id</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* mount identifier */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mnt_group_id\">mnt_group_id</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* peer group identifier */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We put mnt_count &amp; mnt_expiry_mark at the end of struct vfsmount</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to let these frequently modified fields in a separate cache line</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (so that reads of mnt_flags wont ping-pong on SMP machines)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#mnt_count\">mnt_count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mnt_expiry_mark\">mnt_expiry_mark</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* true if marked for expiry */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mnt_pinned\">mnt_pinned</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mnt_ghosts\">mnt_ghosts</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#mnt_writers\">mnt_writers</a>;", 
"#else", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mnt_writers\">mnt_writers</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int *<a class=\"id\" href=\"#get_mnt_writers_ptr\">get_mnt_writers_ptr</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_writers\">mnt_writers</a>;", 
"#else", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_writers\">mnt_writers</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mntget\">mntget</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_count\">mnt_count</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mnt\">mnt</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#file\">file</a>; <span class=\"comment\">/* forward dec */</span>", 
"", 
"extern int <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"extern int <a class=\"id\" href=\"#mnt_want_write_file\">mnt_want_write_file</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"extern int <a class=\"id\" href=\"#mnt_clone_write\">mnt_clone_write</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"extern void <a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"extern void <a class=\"id\" href=\"#mntput_no_expire\">mntput_no_expire</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"extern void <a class=\"id\" href=\"#mnt_pin\">mnt_pin</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"extern void <a class=\"id\" href=\"#mnt_unpin\">mnt_unpin</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"extern int <a class=\"id\" href=\"#__mnt_is_readonly\">__mnt_is_readonly</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mntput\">mntput</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mnt\">mnt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_expiry_mark\">mnt_expiry_mark</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mntput_no_expire\">mntput_no_expire</a>(<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"extern struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#do_kern_mount\">do_kern_mount</a>(const char *<a class=\"id\" href=\"#fstype\">fstype</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#name\">name</a>, void *<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a>;", 
"extern struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#vfs_kern_mount\">vfs_kern_mount</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#flags\">flags</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      void *<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"struct <a class=\"id\" href=\"#nameidata\">nameidata</a>;", 
"", 
"struct <a class=\"id\" href=\"#path\">path</a>;", 
"extern int <a class=\"id\" href=\"#do_add_mount\">do_add_mount</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#newmnt\">newmnt</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#mnt_flags\">mnt_flags</a>, struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#fslist\">fslist</a>);", 
"", 
"extern void <a class=\"id\" href=\"#mark_mounts_for_expiry\">mark_mounts_for_expiry</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#mounts\">mounts</a>);", 
"", 
"extern <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#name_to_dev_t\">name_to_dev_t</a>(char *<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_MOUNT_H */</span>", 
];
xr_frag_insert('l/b4/874b1ba5bdd62bcdb6068f7e632344e10526a6.xr', __xr_tmp);
