var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * include/linux/kmemleak.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008 ARM Limited</span>", 
"<span class=\"comment\"> * Written by Catalin Marinas &lt;catalin.marinas@arm.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License version 2 as</span>", 
"<span class=\"comment\"> * published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__KMEMLEAK_H\">__KMEMLEAK_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__KMEMLEAK_H\">__KMEMLEAK_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_KMEMLEAK\">CONFIG_DEBUG_KMEMLEAK</a>", 
"", 
"extern void <a class=\"id\" href=\"#kmemleak_init\">kmemleak_init</a>(void) <a class=\"id\" href=\"#__ref\">__ref</a>;", 
"extern void <a class=\"id\" href=\"#kmemleak_alloc\">kmemleak_alloc</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#min_count\">min_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>) <a class=\"id\" href=\"#__ref\">__ref</a>;", 
"extern void <a class=\"id\" href=\"#kmemleak_free\">kmemleak_free</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>) <a class=\"id\" href=\"#__ref\">__ref</a>;", 
"extern void <a class=\"id\" href=\"#kmemleak_free_part\">kmemleak_free_part</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>) <a class=\"id\" href=\"#__ref\">__ref</a>;", 
"extern void <a class=\"id\" href=\"#kmemleak_padding\">kmemleak_padding</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, unsigned long <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>) <a class=\"id\" href=\"#__ref\">__ref</a>;", 
"extern void <a class=\"id\" href=\"#kmemleak_not_leak\">kmemleak_not_leak</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>) <a class=\"id\" href=\"#__ref\">__ref</a>;", 
"extern void <a class=\"id\" href=\"#kmemleak_ignore\">kmemleak_ignore</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>) <a class=\"id\" href=\"#__ref\">__ref</a>;", 
"extern void <a class=\"id\" href=\"#kmemleak_scan_area\">kmemleak_scan_area</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>) <a class=\"id\" href=\"#__ref\">__ref</a>;", 
"extern void <a class=\"id\" href=\"#kmemleak_no_scan\">kmemleak_no_scan</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>) <a class=\"id\" href=\"#__ref\">__ref</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_alloc_recursive\">kmemleak_alloc_recursive</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#min_count\">min_count</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SLAB_NOLEAKTRACE\">SLAB_NOLEAKTRACE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmemleak_alloc\">kmemleak_alloc</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#min_count\">min_count</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_free_recursive\">kmemleak_free_recursive</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SLAB_NOLEAKTRACE\">SLAB_NOLEAKTRACE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmemleak_free\">kmemleak_free</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_erase\">kmemleak_erase</a>(void **<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#else", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_init\">kmemleak_init</a>(void)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_alloc\">kmemleak_alloc</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#min_count\">min_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_alloc_recursive\">kmemleak_alloc_recursive</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#min_count\">min_count</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_free\">kmemleak_free</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_free_part\">kmemleak_free_part</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_free_recursive\">kmemleak_free_recursive</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_not_leak\">kmemleak_not_leak</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_ignore\">kmemleak_ignore</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kmemleak_scan_area\">kmemleak_scan_area</a>(const void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"}", 
];
xr_frag_insert('l/b4/8d121a81bc04f3f4c653444397ab754637beba.xr', __xr_tmp);
