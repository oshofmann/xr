var __xr_tmp = [
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#nla_get_be32\">nla_get_be32</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return *(<a class=\"id\" href=\"#__be32\">__be32</a> *) <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_u16 - return payload of u16 attribute</span>", 
"<span class=\"comment\"> * @nla: u16 netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#nla_get_u16\">nla_get_u16</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return *(<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_be16 - return payload of __be16 attribute</span>", 
"<span class=\"comment\"> * @nla: __be16 netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#nla_get_be16\">nla_get_be16</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return *(<a class=\"id\" href=\"#__be16\">__be16</a> *) <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_le16 - return payload of __le16 attribute</span>", 
"<span class=\"comment\"> * @nla: __le16 netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__le16\">__le16</a> <a class=\"id\" href=\"#nla_get_le16\">nla_get_le16</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return *(<a class=\"id\" href=\"#__le16\">__le16</a> *) <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_u8 - return payload of u8 attribute</span>", 
"<span class=\"comment\"> * @nla: u8 netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#nla_get_u8\">nla_get_u8</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return *(<a class=\"id\" href=\"#u8\">u8</a> *) <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_u64 - return payload of u64 attribute</span>", 
"<span class=\"comment\"> * @nla: u64 netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#nla_get_u64\">nla_get_u64</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_memcpy\">nla_memcpy</a>(&amp;<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#nla\">nla</a>, sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_be64 - return payload of __be64 attribute</span>", 
"<span class=\"comment\"> * @nla: __be64 netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__be64\">__be64</a> <a class=\"id\" href=\"#nla_get_be64\">nla_get_be64</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be64\">__be64</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_memcpy\">nla_memcpy</a>(&amp;<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#nla\">nla</a>, sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_flag - return payload of flag attribute</span>", 
"<span class=\"comment\"> * @nla: flag netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_get_flag\">nla_get_flag</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return !!<a class=\"id\" href=\"#nla\">nla</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_msecs - return payload of msecs attribute</span>", 
"<span class=\"comment\"> * @nla: msecs netlink attribute</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the number of milliseconds in jiffies.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#nla_get_msecs\">nla_get_msecs</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#msecs\">msecs</a> = <a class=\"id\" href=\"#nla_get_u64\">nla_get_u64</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>((unsigned long) <a class=\"id\" href=\"#msecs\">msecs</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_nest_start - Start a new level of nested attributes</span>", 
"<span class=\"comment\"> * @skb: socket buffer to add attributes to</span>", 
"<span class=\"comment\"> * @attrtype: attribute type of container</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the container attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#start\">start</a> = (struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *)<a class=\"id\" href=\"#skb_tail_pointer\">skb_tail_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#start\">start</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_nest_end - Finalize nesting of attributes</span>", 
"<span class=\"comment\"> * @skb: socket buffer the attributes are stored in</span>", 
"<span class=\"comment\"> * @start: container attribute</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Corrects the container attribute header to include the all</span>", 
"<span class=\"comment\"> * appeneded attributes.</span>", 
"<span class=\"comment\"> *</span>", 
];
xr_frag_insert('l/b4/b0426979825104da37562b77327d121b8b3d77.xr', __xr_tmp);
