var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkpg\">blkpg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cdrom\">cdrom</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi\">scsi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_dbg\">scsi_dbg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_device\">scsi_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_eh\">scsi_eh</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"sr.h\"", 
"", 
"#if 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* The sr_is_xa() seems to trigger firmware bugs with some drives :-(</span>", 
"<span class=\"comment\"> * It is off by default and can be turned on with this module parameter */</span>", 
"static int <a class=\"id\" href=\"#xa_test\">xa_test</a> = 0;", 
"", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#xa_test\">xa_test</a>, int, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>);", 
"", 
"<span class=\"comment\">/* primitive to determine whether we need to have GFP_DMA set based on</span>", 
"<span class=\"comment\"> * the status of the unchecked_isa_dma flag in the host structure */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SR_GFP_DMA\">SR_GFP_DMA</a>(<a class=\"id\" href=\"#cd\">cd</a>) (((<a class=\"id\" href=\"#cd\">cd</a>)-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#unchecked_isa_dma\">unchecked_isa_dma</a>) ? <a class=\"id\" href=\"#GFP_DMA\">GFP_DMA</a> : 0)", 
"", 
"", 
"static int <a class=\"id\" href=\"#sr_read_tochdr\">sr_read_tochdr</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_tochdr\">cdrom_tochdr</a> *<a class=\"id\" href=\"#tochdr\">tochdr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(32, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#SR_GFP_DMA\">SR_GFP_DMA</a>(<a class=\"id\" href=\"#cd\">cd</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_TOC_PMA_ATIP\">GPCMD_READ_TOC_PMA_ATIP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 12;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* LSB of length */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = 12;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cd\">cd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tochdr\">tochdr</a>-><a class=\"id\" href=\"#cdth_trk0\">cdth_trk0</a> = <a class=\"id\" href=\"#buffer\">buffer</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tochdr\">tochdr</a>-><a class=\"id\" href=\"#cdth_trk1\">cdth_trk1</a> = <a class=\"id\" href=\"#buffer\">buffer</a>[3];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sr_read_tocentry\">sr_read_tocentry</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_tocentry\">cdrom_tocentry</a> *<a class=\"id\" href=\"#tocentry\">tocentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(32, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#SR_GFP_DMA\">SR_GFP_DMA</a>(<a class=\"id\" href=\"#cd\">cd</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_TOC_PMA_ATIP\">GPCMD_READ_TOC_PMA_ATIP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] |= (<a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_format\">cdte_format</a> == <a class=\"id\" href=\"#CDROM_MSF\">CDROM_MSF</a>) ? 0x02 : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[6] = <a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_track\">cdte_track</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 12;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* LSB of length */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = 12;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cd\">cd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_ctrl\">cdte_ctrl</a> = <a class=\"id\" href=\"#buffer\">buffer</a>[5] &amp; 0xf;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_adr\">cdte_adr</a> = <a class=\"id\" href=\"#buffer\">buffer</a>[5] >> 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_datamode\">cdte_datamode</a> = (<a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_ctrl\">cdte_ctrl</a> &amp; 0x04) ? 1 : 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_format\">cdte_format</a> == <a class=\"id\" href=\"#CDROM_MSF\">CDROM_MSF</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#minute\">minute</a> = <a class=\"id\" href=\"#buffer\">buffer</a>[9];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#second\">second</a> = <a class=\"id\" href=\"#buffer\">buffer</a>[10];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#frame\">frame</a> = <a class=\"id\" href=\"#buffer\">buffer</a>[11];", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tocentry\">tocentry</a>-><a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#lba\">lba</a> = (((((<a class=\"id\" href=\"#buffer\">buffer</a>[8] << 8) + <a class=\"id\" href=\"#buffer\">buffer</a>[9]) << 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#buffer\">buffer</a>[10]) << 8) + <a class=\"id\" href=\"#buffer\">buffer</a>[11];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IOCTL_RETRIES\">IOCTL_RETRIES</a> 3", 
"", 
"<span class=\"comment\">/* ATAPI drives don't have a SCMD_PLAYAUDIO_TI command.  When these drives</span>", 
"<span class=\"comment\">   are emulating a SCSI device via the idescsi module, they need to have</span>", 
"<span class=\"comment\">   CDROMPLAYTRKIND commands translated into CDROMPLAYMSF commands for them */</span>", 
"", 
"static int <a class=\"id\" href=\"#sr_fake_playtrkind\">sr_fake_playtrkind</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, struct <a class=\"id\" href=\"#cdrom_ti\">cdrom_ti</a> *<a class=\"id\" href=\"#ti\">ti</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_tocentry\">cdrom_tocentry</a> <a class=\"id\" href=\"#trk0_te\">trk0_te</a>, <a class=\"id\" href=\"#trk1_te\">trk1_te</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_tochdr\">cdrom_tochdr</a> <a class=\"id\" href=\"#tochdr\">tochdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ntracks\">ntracks</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sr_read_tochdr\">sr_read_tochdr</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#tochdr\">tochdr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ntracks\">ntracks</a> = <a class=\"id\" href=\"#tochdr\">tochdr</a>.<a class=\"id\" href=\"#cdth_trk1\">cdth_trk1</a> - <a class=\"id\" href=\"#tochdr\">tochdr</a>.<a class=\"id\" href=\"#cdth_trk0\">cdth_trk0</a> + 1;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_trk1\">cdti_trk1</a> == <a class=\"id\" href=\"#ntracks\">ntracks</a>) ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_trk1\">cdti_trk1</a> = <a class=\"id\" href=\"#CDROM_LEADOUT\">CDROM_LEADOUT</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_trk1\">cdti_trk1</a> != <a class=\"id\" href=\"#CDROM_LEADOUT\">CDROM_LEADOUT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_trk1\">cdti_trk1</a> ++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trk0_te\">trk0_te</a>.<a class=\"id\" href=\"#cdte_track\">cdte_track</a> = <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_trk0\">cdti_trk0</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trk0_te\">trk0_te</a>.<a class=\"id\" href=\"#cdte_format\">cdte_format</a> = <a class=\"id\" href=\"#CDROM_MSF\">CDROM_MSF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trk1_te\">trk1_te</a>.<a class=\"id\" href=\"#cdte_track\">cdte_track</a> = <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_trk1\">cdti_trk1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trk1_te\">trk1_te</a>.<a class=\"id\" href=\"#cdte_format\">cdte_format</a> = <a class=\"id\" href=\"#CDROM_MSF\">CDROM_MSF</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sr_read_tocentry\">sr_read_tocentry</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#trk0_te\">trk0_te</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sr_read_tocentry\">sr_read_tocentry</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#trk1_te\">trk1_te</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_PLAY_AUDIO_MSF\">GPCMD_PLAY_AUDIO_MSF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = <a class=\"id\" href=\"#trk0_te\">trk0_te</a>.<a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#minute\">minute</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = <a class=\"id\" href=\"#trk0_te\">trk0_te</a>.<a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#second\">second</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[5] = <a class=\"id\" href=\"#trk0_te\">trk0_te</a>.<a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#frame\">frame</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[6] = <a class=\"id\" href=\"#trk1_te\">trk1_te</a>.<a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#minute\">minute</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#trk1_te\">trk1_te</a>.<a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#second\">second</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#trk1_te\">trk1_te</a>.<a class=\"id\" href=\"#cdte_addr\">cdte_addr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#frame\">frame</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sr_play_trkind\">sr_play_trkind</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_ti\">cdrom_ti</a> *<a class=\"id\" href=\"#ti\">ti</a>)", 
"", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_PLAYAUDIO_TI\">GPCMD_PLAYAUDIO_TI</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_trk0\">cdti_trk0</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[5] = <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_ind0\">cdti_ind0</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_trk1\">cdti_trk1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#cdti_ind1\">cdti_ind1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cd\">cd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a> == -<a class=\"id\" href=\"#EDRIVE_CANT_DO_THIS\">EDRIVE_CANT_DO_THIS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sr_fake_playtrkind\">sr_fake_playtrkind</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#ti\">ti</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/* We do our own retries because we want to know what the specific</span>", 
"<span class=\"comment\">   error code is.  Normally the UNIT_ATTENTION code will automatically</span>", 
"<span class=\"comment\">   clear after one error */</span>", 
"", 
"int <a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a>, struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#SDev\">SDev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> <a class=\"id\" href=\"#sshdr\">sshdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#err\">err</a> = 0, <a class=\"id\" href=\"#retries\">retries</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sense\">request_sense</a> *<a class=\"id\" href=\"#sense\">sense</a> = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#sense\">sense</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDev\">SDev</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sense\">sense</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sense\">sense</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#SCSI_SENSE_BUFFERSIZE\">SCSI_SENSE_BUFFERSIZE</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sense\">sense</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#SDev\">SDev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#sense\">sense</a>, 0, sizeof(*<a class=\"id\" href=\"#sense\">sense</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#scsi_execute\">scsi_execute</a>(<a class=\"id\" href=\"#SDev\">SDev</a>, <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#data_direction\">data_direction</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a>, (char *)<a class=\"id\" href=\"#sense\">sense</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#IOCTL_RETRIES\">IOCTL_RETRIES</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_normalize_sense\">scsi_normalize_sense</a>((char *)<a class=\"id\" href=\"#sense\">sense</a>, sizeof(*<a class=\"id\" href=\"#sense\">sense</a>), &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Minimal error checking.  Ignore cases we know about, and report the rest. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver_byte\">driver_byte</a>(<a class=\"id\" href=\"#result\">result</a>) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#sense_key\">sense_key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#UNIT_ATTENTION\">UNIT_ATTENTION</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SDev\">SDev</a>-><a class=\"id\" href=\"#changed\">changed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#quiet\">quiet</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: disc change detected.\\n\", <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retries\">retries</a>++ &lt; 10)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NOT_READY\">NOT_READY</a>:<span class=\"ts\"/><span class=\"comment\">/* This happens if there is no disc in drive */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#asc\">asc</a> == 0x04 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#ascq\">ascq</a> == 0x01) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sense: Logical unit is in process of becoming ready */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#quiet\">quiet</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: CDROM not ready yet.\\n\", <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retries\">retries</a>++ &lt; 10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sleep 2 sec and try again */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ssleep\">ssleep</a>(2);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 20 secs are enough? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#quiet\">quiet</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: CDROM not ready.  Make sure there is a disc in the drive.\\n\", <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_print_sense_hdr\">scsi_print_sense_hdr</a>(\"sr\", &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ILLEGAL_REQUEST\">ILLEGAL_REQUEST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#asc\">asc</a> == 0x20 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#ascq\">ascq</a> == 0x00)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sense: Invalid command operation code */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EDRIVE_CANT_DO_THIS\">EDRIVE_CANT_DO_THIS</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__scsi_print_command\">__scsi_print_command</a>(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_print_sense_hdr\">scsi_print_sense_hdr</a>(\"sr\", &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: CDROM (ioctl) error, command: \", <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__scsi_print_command\">__scsi_print_command</a>(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_print_sense_hdr\">scsi_print_sense_hdr</a>(\"sr\", &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wake up a process waiting for device */</span>", 
"      <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#sense\">sense</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sense\">sense</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/* ---------------------------------------------------------------------- */</span>", 
"<span class=\"comment\">/* interface to cdrom.c                                                   */</span>", 
"", 
"int <a class=\"id\" href=\"#sr_tray_move\">sr_tray_move</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_START_STOP_UNIT\">GPCMD_START_STOP_UNIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = (<a class=\"id\" href=\"#pos\">pos</a> == 0) ? 0x03 <span class=\"comment\">/* close */</span> : 0x02 <span class=\"comment\">/* eject */</span> ;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cd\">cd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#sr_lock_door\">sr_lock_door</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_set_medium_removal\">scsi_set_medium_removal</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#lock\">lock</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#SCSI_REMOVAL_PREVENT\">SCSI_REMOVAL_PREVENT</a> : <a class=\"id\" href=\"#SCSI_REMOVAL_ALLOW\">SCSI_REMOVAL_ALLOW</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#sr_drive_status\">sr_drive_status</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> <a class=\"id\" href=\"#sshdr\">sshdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#media_event_desc\">media_event_desc</a> <a class=\"id\" href=\"#med\">med</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a> != <a class=\"id\" href=\"#slot\">slot</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we have no changer support */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (0 == <a class=\"id\" href=\"#sr_test_unit_ready\">sr_test_unit_ready</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>, &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_DISC_OK\">CDS_DISC_OK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SK/ASC/ASCQ of 2/4/1 means \"unit is becoming ready\" */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_sense_valid\">scsi_sense_valid</a>(&amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>) && <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#sense_key\">sense_key</a> == <a class=\"id\" href=\"#NOT_READY\">NOT_READY</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#asc\">asc</a> == 0x04 && <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#ascq\">ascq</a> == 0x01)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_DRIVE_NOT_READY\">CDS_DRIVE_NOT_READY</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cdrom_get_media_event\">cdrom_get_media_event</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#med\">med</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#med\">med</a>.<a class=\"id\" href=\"#media_present\">media_present</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_DISC_OK\">CDS_DISC_OK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#med\">med</a>.<a class=\"id\" href=\"#door_open\">door_open</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_TRAY_OPEN\">CDS_TRAY_OPEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_NO_DISC\">CDS_NO_DISC</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x04 is format in progress .. but there must be a disc present!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#sense_key\">sense_key</a> == <a class=\"id\" href=\"#NOT_READY\">NOT_READY</a> && <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#asc\">asc</a> == 0x04)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_DISC_OK\">CDS_DISC_OK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If not using Mt Fuji extended media tray reports,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * just return TRAY_OPEN since ATAPI doesn't provide</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * any other way to detect this...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_sense_valid\">scsi_sense_valid</a>(&amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>) &&", 
"<span class=\"ts\"/>    <span class=\"comment\">/* 0x3a is medium not present */</span>", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#asc\">asc</a> == 0x3a)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_NO_DISC\">CDS_NO_DISC</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_TRAY_OPEN\">CDS_TRAY_OPEN</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_DRIVE_NOT_READY\">CDS_DRIVE_NOT_READY</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#sr_disk_status\">sr_disk_status</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_tochdr\">cdrom_tochdr</a> <a class=\"id\" href=\"#toc_h\">toc_h</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_tocentry\">cdrom_tocentry</a> <a class=\"id\" href=\"#toc_e\">toc_e</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#have_datatracks\">have_datatracks</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* look for data tracks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sr_read_tochdr\">sr_read_tochdr</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#toc_h\">toc_h</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#rc\">rc</a> == -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>) ? <a class=\"id\" href=\"#CDS_NO_DISC\">CDS_NO_DISC</a> : <a class=\"id\" href=\"#CDS_NO_INFO\">CDS_NO_INFO</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#toc_h\">toc_h</a>.<a class=\"id\" href=\"#cdth_trk0\">cdth_trk0</a>; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#toc_h\">toc_h</a>.<a class=\"id\" href=\"#cdth_trk1\">cdth_trk1</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#toc_e\">toc_e</a>.<a class=\"id\" href=\"#cdte_track\">cdte_track</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#toc_e\">toc_e</a>.<a class=\"id\" href=\"#cdte_format\">cdte_format</a> = <a class=\"id\" href=\"#CDROM_LBA\">CDROM_LBA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sr_read_tocentry\">sr_read_tocentry</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#toc_e\">toc_e</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_NO_INFO\">CDS_NO_INFO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#toc_e\">toc_e</a>.<a class=\"id\" href=\"#cdte_ctrl\">cdte_ctrl</a> &amp; <a class=\"id\" href=\"#CDROM_DATA_TRACK\">CDROM_DATA_TRACK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#have_datatracks\">have_datatracks</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#have_datatracks\">have_datatracks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_AUDIO\">CDS_AUDIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#xa_flag\">xa_flag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_XA_2_1\">CDS_XA_2_1</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_DATA_1\">CDS_DATA_1</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#sr_get_last_session\">sr_get_last_session</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_multisession\">cdrom_multisession</a> *<a class=\"id\" href=\"#ms_info\">ms_info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ms_info\">ms_info</a>-><a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#lba\">lba</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#ms_offset\">ms_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ms_info\">ms_info</a>-><a class=\"id\" href=\"#xa_flag\">xa_flag</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#xa_flag\">xa_flag</a> || <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#ms_offset\">ms_offset</a> &gt; 0;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#sr_get_mcn\">sr_get_mcn</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, struct <a class=\"id\" href=\"#cdrom_mcn\">cdrom_mcn</a> *<a class=\"id\" href=\"#mcn\">mcn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(32, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#SR_GFP_DMA\">SR_GFP_DMA</a>(<a class=\"id\" href=\"#cd\">cd</a>));", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_SUBCHANNEL\">GPCMD_READ_SUBCHANNEL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = 0x40;<span class=\"ts\"/><span class=\"comment\">/* I do want the subchannel info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = 0x02;<span class=\"ts\"/><span class=\"comment\">/* Give me medium catalog number info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 24;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = 24;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cd\">cd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#mcn\">mcn</a>-><a class=\"id\" href=\"#medium_catalog_number\">medium_catalog_number</a>, <a class=\"id\" href=\"#buffer\">buffer</a> + 9, 13);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mcn\">mcn</a>-><a class=\"id\" href=\"#medium_catalog_number\">medium_catalog_number</a>[13] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#sr_reset\">sr_reset</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#sr_select_speed\">sr_select_speed</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#speed\">speed</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#speed\">speed</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#speed\">speed</a> = 0xffff;<span class=\"ts\"/><span class=\"comment\">/* set to max */</span>", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#speed\">speed</a> *= 177;<span class=\"ts\"/><span class=\"comment\">/* Nx to kbyte/s */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_SET_SPEED\">GPCMD_SET_SPEED</a>;<span class=\"ts\"/><span class=\"comment\">/* SET CD SPEED */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = (<a class=\"id\" href=\"#speed\">speed</a> >> 8) &amp; 0xff;<span class=\"ts\"/><span class=\"comment\">/* MSB for speed (in kbytes/sec) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = <a class=\"id\" href=\"#speed\">speed</a> &amp; 0xff;<span class=\"ts\"/><span class=\"comment\">/* LSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cd\">cd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* ----------------------------------------------------------------------- */</span>", 
"<span class=\"comment\">/* this is called by the generic cdrom driver. arg is a _kernel_ pointer,  */</span>", 
"<span class=\"comment\">/* because the generic cdrom driver does the user access stuff for us.     */</span>", 
"<span class=\"comment\">/* only cdromreadtochdr and cdromreadtocentry are left - for use with the  */</span>", 
"<span class=\"comment\">/* sr_disk_status interface for the generic cdrom driver.                  */</span>", 
"", 
"int <a class=\"id\" href=\"#sr_audio_ioctl\">sr_audio_ioctl</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDROMREADTOCHDR\">CDROMREADTOCHDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sr_read_tochdr\">sr_read_tochdr</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDROMREADTOCENTRY\">CDROMREADTOCENTRY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sr_read_tocentry\">sr_read_tocentry</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDROMPLAYTRKIND\">CDROMPLAYTRKIND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sr_play_trkind\">sr_play_trkind</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* -----------------------------------------------------------------------</span>", 
"<span class=\"comment\"> * a function to read all sorts of funny cdrom sectors using the READ_CD</span>", 
"<span class=\"comment\"> * scsi-3 mmc command</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * lba:     linear block address</span>", 
"<span class=\"comment\"> * format:  0 = data (anything)</span>", 
"<span class=\"comment\"> *          1 = audio</span>", 
"<span class=\"comment\"> *          2 = data (mode 1)</span>", 
"<span class=\"comment\"> *          3 = data (mode 2)</span>", 
"<span class=\"comment\"> *          4 = data (mode 2 form1)</span>", 
"<span class=\"comment\"> *          5 = data (mode 2 form2)</span>", 
"<span class=\"comment\"> * blksize: 2048 | 2336 | 2340 | 2352</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#sr_read_cd\">sr_read_cd</a>(<a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a>, unsigned char *<a class=\"id\" href=\"#dest\">dest</a>, int <a class=\"id\" href=\"#lba\">lba</a>, int <a class=\"id\" href=\"#format\">format</a>, int <a class=\"id\" href=\"#blksize\">blksize</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s: sr_read_cd lba=%d format=%d blksize=%d\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#lba\">lba</a>, <a class=\"id\" href=\"#format\">format</a>, <a class=\"id\" href=\"#blksize\">blksize</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_CD\">GPCMD_READ_CD</a>;<span class=\"ts\"/><span class=\"comment\">/* READ_CD */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = ((<a class=\"id\" href=\"#format\">format</a> &amp; 7) << 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = (unsigned char) (<a class=\"id\" href=\"#lba\">lba</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = (unsigned char) (<a class=\"id\" href=\"#lba\">lba</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = (unsigned char) (<a class=\"id\" href=\"#lba\">lba</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[5] = (unsigned char) <a class=\"id\" href=\"#lba\">lba</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 1;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#blksize\">blksize</a>) {", 
"<span class=\"ts\"/>case 2336:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[9] = 0x58;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2340:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[9] = 0x78;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2352:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[9] = 0xf8;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[9] = 0x10;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#blksize\">blksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cd\">cd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * read sectors with blocksizes other than 2048</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#sr_read_sector\">sr_read_sector</a>(<a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a>, int <a class=\"id\" href=\"#lba\">lba</a>, int <a class=\"id\" href=\"#blksize\">blksize</a>, unsigned char *<a class=\"id\" href=\"#dest\">dest</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we try the READ CD command first... */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#readcd_known\">readcd_known</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sr_read_cd\">sr_read_cd</a>(<a class=\"id\" href=\"#cd\">cd</a>, <a class=\"id\" href=\"#dest\">dest</a>, <a class=\"id\" href=\"#lba\">lba</a>, 0, <a class=\"id\" href=\"#blksize\">blksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (-<a class=\"id\" href=\"#EDRIVE_CANT_DO_THIS\">EDRIVE_CANT_DO_THIS</a> != <a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#readcd_known\">readcd_known</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"CDROM does'nt support READ CD (0xbe) command\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall &amp; retry the other way */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* ... if this fails, we switch the blocksize using MODE SELECT */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blksize\">blksize</a> != <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (0 != (<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sr_set_blocklength\">sr_set_blocklength</a>(<a class=\"id\" href=\"#cd\">cd</a>, <a class=\"id\" href=\"#blksize\">blksize</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s: sr_read_sector lba=%d blksize=%d\\n\", <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#lba\">lba</a>, <a class=\"id\" href=\"#blksize\">blksize</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_10\">GPCMD_READ_10</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = (unsigned char) (<a class=\"id\" href=\"#lba\">lba</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = (unsigned char) (<a class=\"id\" href=\"#lba\">lba</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = (unsigned char) (<a class=\"id\" href=\"#lba\">lba</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[5] = (unsigned char) <a class=\"id\" href=\"#lba\">lba</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#blksize\">blksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cd\">cd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * read a sector in raw mode to check the sector format</span>", 
"<span class=\"comment\"> * ret: 1 == mode2 (XA), 0 == mode1, &lt;0 == error </span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#sr_is_xa\">sr_is_xa</a>(<a class=\"id\" href=\"#Scsi_CD\">Scsi_CD</a> *<a class=\"id\" href=\"#cd\">cd</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#raw_sector\">raw_sector</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_xa\">is_xa</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xa_test\">xa_test</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_sector\">raw_sector</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(2048, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#SR_GFP_DMA\">SR_GFP_DMA</a>(<a class=\"id\" href=\"#cd\">cd</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#raw_sector\">raw_sector</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (0 == <a class=\"id\" href=\"#sr_read_sector\">sr_read_sector</a>(<a class=\"id\" href=\"#cd\">cd</a>, <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#ms_offset\">ms_offset</a> + 16,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CD_FRAMESIZE_RAW1\">CD_FRAMESIZE_RAW1</a>, <a class=\"id\" href=\"#raw_sector\">raw_sector</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_xa\">is_xa</a> = (<a class=\"id\" href=\"#raw_sector\">raw_sector</a>[3] == 0x02) ? 1 : 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* read a raw sector failed for some reason. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_xa\">is_xa</a> = -1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#raw_sector\">raw_sector</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s: sr_is_xa: %d\\n\", <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#is_xa\">is_xa</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#is_xa\">is_xa</a>;", 
"}", 
];
xr_frag_insert('l/b5/5ae30fc97eccf27a22b4988fded2abbed73fe1.xr', __xr_tmp);
