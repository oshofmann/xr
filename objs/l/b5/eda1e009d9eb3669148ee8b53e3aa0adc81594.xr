var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> != <a class=\"id\" href=\"#N_IDS\">N_IDS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_cpu\">centrino_cpu</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>) = &amp;<a class=\"id\" href=\"#cpu_ids\">cpu_ids</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_cpu\">centrino_cpu</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"found unsupported CPU with \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"Enhanced SpeedStep: send /proc/cpuinfo to \"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MAINTAINER\">MAINTAINER</a> \"\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#centrino_cpu_init_table\">centrino_cpu_init_table</a>(<a class=\"id\" href=\"#policy\">policy</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check to see if Enhanced SpeedStep is enabled, and try to</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   enable it if not. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE\">MSR_IA32_MISC_ENABLE</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#l\">l</a> &amp; <a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE_ENHANCED_SPEEDSTEP\">MSR_IA32_MISC_ENABLE_ENHANCED_SPEEDSTEP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> |= <a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE_ENHANCED_SPEEDSTEP\">MSR_IA32_MISC_ENABLE_ENHANCED_SPEEDSTEP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"trying to enable Enhanced SpeedStep (%x)\\n\", <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE\">MSR_IA32_MISC_ENABLE</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check to see if it stuck */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE\">MSR_IA32_MISC_ENABLE</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#l\">l</a> &amp; <a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE_ENHANCED_SPEEDSTEP\">MSR_IA32_MISC_ENABLE_ENHANCED_SPEEDSTEP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"couldn't enable Enhanced SpeedStep\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freq\">freq</a> = <a class=\"id\" href=\"#get_cur_freq\">get_cur_freq</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>.<a class=\"id\" href=\"#transition_latency\">transition_latency</a> = 10000;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 10uS transition latency */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#freq\">freq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"centrino_cpu_init: cur=%dkHz\\n\", <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_frequency_table_cpuinfo\">cpufreq_frequency_table_cpuinfo</a>(<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_model\">centrino_model</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#op_points\">op_points</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_frequency_table_get_attr\">cpufreq_frequency_table_get_attr</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_model\">centrino_model</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#op_points\">op_points</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#centrino_cpu_exit\">centrino_cpu_exit</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_model\">centrino_model</a>, <a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_frequency_table_put_attr\">cpufreq_frequency_table_put_attr</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_model\">centrino_model</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * centrino_verify - verifies a new CPUFreq policy</span>", 
"<span class=\"comment\"> * @policy: new policy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Limit must be within this model's frequency range at least one</span>", 
"<span class=\"comment\"> * border included.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#centrino_verify\">centrino_verify</a> (struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpufreq_frequency_table_verify\">cpufreq_frequency_table_verify</a>(<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_model\">centrino_model</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#op_points\">op_points</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * centrino_setpolicy - set a new CPUFreq policy</span>", 
"<span class=\"comment\"> * @policy: new policy</span>", 
"<span class=\"comment\"> * @target_freq: the target frequency</span>", 
"<span class=\"comment\"> * @relation: how that frequency relates to achieved frequency</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(CPUFREQ_RELATION_L or CPUFREQ_RELATION_H)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Sets a new CPUFreq policy.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#centrino_target\">centrino_target</a> (struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#target_freq\">target_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#relation\">relation</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int    <a class=\"id\" href=\"#newstate\">newstate</a> = 0;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#oldmsr\">oldmsr</a> = 0, <a class=\"id\" href=\"#h\">h</a> = 0, <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_freqs\">cpufreq_freqs</a><span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#first_cpu\">first_cpu</a>, <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#covered_cpus\">covered_cpus</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#zalloc_cpumask_var\">zalloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#covered_cpus\">covered_cpus</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_model\">centrino_model</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cpufreq_frequency_table_target\">cpufreq_frequency_table_target</a>(<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_model\">centrino_model</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#op_points\">op_points</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_freq\">target_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relation\">relation</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#newstate\">newstate</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first_cpu\">first_cpu</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#good_cpu\">good_cpu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* cpufreq holds the hotplug lock, so we are safe here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#j\">j</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Support for SMP systems.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Make sure we are running on CPU that wants to change freq</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#shared_type\">shared_type</a> == <a class=\"id\" href=\"#CPUFREQ_SHARED_TYPE_ANY\">CPUFREQ_SHARED_TYPE_ANY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#good_cpu\">good_cpu</a> = <a class=\"id\" href=\"#cpumask_any_and\">cpumask_any_and</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#good_cpu\">good_cpu</a> = <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#good_cpu\">good_cpu</a> >= <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"couldn't limit to CPUs in this domain\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#first_cpu\">first_cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We haven't started the transition yet. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr\">msr</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#centrino_model\">centrino_model</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#op_points\">op_points</a>[<a class=\"id\" href=\"#newstate\">newstate</a>].<a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#first_cpu\">first_cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr_on_cpu\">rdmsr_on_cpu</a>(<a class=\"id\" href=\"#good_cpu\">good_cpu</a>, <a class=\"id\" href=\"#MSR_IA32_PERF_CTL\">MSR_IA32_PERF_CTL</a>, &amp;<a class=\"id\" href=\"#oldmsr\">oldmsr</a>, &amp;<a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#msr\">msr</a> == (<a class=\"id\" href=\"#oldmsr\">oldmsr</a> &amp; 0xffff)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"no change needed - msr was and needs \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"to be %x\\n\", <a class=\"id\" href=\"#oldmsr\">oldmsr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#extract_clock\">extract_clock</a>(<a class=\"id\" href=\"#oldmsr\">oldmsr</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#extract_clock\">extract_clock</a>(<a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"target=%dkHz old=%d new=%d msr=%04x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_freq\">target_freq</a>, <a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#msr\">msr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#k\">k</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_notify_transition\">cpufreq_notify_transition</a>(&amp;<a class=\"id\" href=\"#freqs\">freqs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_PRECHANGE\">CPUFREQ_PRECHANGE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_cpu\">first_cpu</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* all but 16 LSB are reserved, treat them with care */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oldmsr\">oldmsr</a> &= ~0xffff;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr\">msr</a> &= 0xffff;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oldmsr\">oldmsr</a> |= <a class=\"id\" href=\"#msr\">msr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr_on_cpu\">wrmsr_on_cpu</a>(<a class=\"id\" href=\"#good_cpu\">good_cpu</a>, <a class=\"id\" href=\"#MSR_IA32_PERF_CTL\">MSR_IA32_PERF_CTL</a>, <a class=\"id\" href=\"#oldmsr\">oldmsr</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#shared_type\">shared_type</a> == <a class=\"id\" href=\"#CPUFREQ_SHARED_TYPE_ANY\">CPUFREQ_SHARED_TYPE_ANY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_set_cpu\">cpumask_set_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#covered_cpus\">covered_cpus</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#k\">k</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_notify_transition\">cpufreq_notify_transition</a>(&amp;<a class=\"id\" href=\"#freqs\">freqs</a>, <a class=\"id\" href=\"#CPUFREQ_POSTCHANGE\">CPUFREQ_POSTCHANGE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#retval\">retval</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We have failed halfway through the frequency change.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We have sent callbacks to policy-&gt;cpus and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * MSRs have already been written on coverd_cpus.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Best effort undo..</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#covered_cpus\">covered_cpus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr_on_cpu\">wrmsr_on_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#MSR_IA32_PERF_CTL\">MSR_IA32_PERF_CTL</a>, <a class=\"id\" href=\"#oldmsr\">oldmsr</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#j\">j</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_notify_transition\">cpufreq_notify_transition</a>(&amp;<a class=\"id\" href=\"#freqs\">freqs</a>, <a class=\"id\" href=\"#CPUFREQ_PRECHANGE\">CPUFREQ_PRECHANGE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_notify_transition\">cpufreq_notify_transition</a>(&amp;<a class=\"id\" href=\"#freqs\">freqs</a>, <a class=\"id\" href=\"#CPUFREQ_POSTCHANGE\">CPUFREQ_POSTCHANGE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#covered_cpus\">covered_cpus</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#freq_attr\">freq_attr</a>* <a class=\"id\" href=\"#centrino_attr\">centrino_attr</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpufreq_freq_attr_scaling_available_freqs\">cpufreq_freq_attr_scaling_available_freqs</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a> <a class=\"id\" href=\"#centrino_driver\">centrino_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"centrino\", <span class=\"comment\">/* should be speedstep-centrino,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> but there's a 16 char limit */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#centrino_cpu_init\">centrino_cpu_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#centrino_cpu_exit\">centrino_cpu_exit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#verify\">verify</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#centrino_verify\">centrino_verify</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#target\">target</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#centrino_target\">centrino_target</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get\">get</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#get_cur_freq\">get_cur_freq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a>           = <a class=\"id\" href=\"#centrino_attr\">centrino_attr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * centrino_init - initializes the Enhanced SpeedStep CPUFreq driver</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Initializes the Enhanced SpeedStep support. Returns -ENODEV on</span>", 
"<span class=\"comment\"> * unsupported devices, -ENOENT if there's no voltage table for this</span>", 
"<span class=\"comment\"> * particular CPU model, -EINVAL on problems during initiatization,</span>", 
"<span class=\"comment\"> * and zero on success.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is quite picky.  Not only does the CPU have to advertise the</span>", 
"<span class=\"comment\"> * \"est\" flag in the cpuid capability flags, we look for a specific</span>", 
"<span class=\"comment\"> * CPU model and stepping, and we need to have the exact model name in</span>", 
"<span class=\"comment\"> * our voltage tables.  That is, be paranoid about not releasing</span>", 
"<span class=\"comment\"> * someone's valuable magic smoke.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#centrino_init\">centrino_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#cpu\">cpu</a> = &amp;<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(0);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#X86_FEATURE_EST\">X86_FEATURE_EST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpufreq_register_driver\">cpufreq_register_driver</a>(&amp;<a class=\"id\" href=\"#centrino_driver\">centrino_driver</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#centrino_exit\">centrino_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_unregister_driver\">cpufreq_unregister_driver</a>(&amp;<a class=\"id\" href=\"#centrino_driver\">centrino_driver</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a> (\"Jeremy Fitzhardinge <jeremy@goop.org>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a> (\"Enhanced SpeedStep driver for Intel Pentium M processors.\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a> (\"GPL\");", 
"", 
"<a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#centrino_init\">centrino_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#centrino_exit\">centrino_exit</a>);", 
];
xr_frag_insert('l/b5/eda1e009d9eb3669148ee8b53e3aa0adc81594.xr', __xr_tmp);
