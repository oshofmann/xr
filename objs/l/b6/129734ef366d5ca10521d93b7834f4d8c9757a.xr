var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright(c) 2004 - 2006 Intel Corporation. All rights reserved.</span>", 
"<span class=\"comment\"> * Portions based on net/core/datagram.c and copyrighted by their authors.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation; either version 2 of the License, or (at your option)</span>", 
"<span class=\"comment\"> * any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful, but WITHOUT</span>", 
"<span class=\"comment\"> * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span>", 
"<span class=\"comment\"> * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for</span>", 
"<span class=\"comment\"> * more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License along with</span>", 
"<span class=\"comment\"> * this program; if not, write to the Free Software Foundation, Inc., 59</span>", 
"<span class=\"comment\"> * Temple Place - Suite 330, Boston, MA  02111-1307, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The full GNU General Public License is included in this distribution in the</span>", 
"<span class=\"comment\"> * file called COPYING.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This code allows the net stack to make use of a DMA engine for</span>", 
"<span class=\"comment\"> * skb to iovec copies.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmaengine\">dmaengine</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt; <span class=\"comment\">/* for memcpy_toiovec */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#num_pages_spanned\">num_pages_spanned</a>(struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>)", 
"{", 
"<span class=\"ts\"/>return", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>((unsigned long)<a class=\"id\" href=\"#iov\">iov</a>-><a class=\"id\" href=\"#iov_base\">iov_base</a> + <a class=\"id\" href=\"#iov\">iov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a>) -", 
"<span class=\"ts\"/>((unsigned long)<a class=\"id\" href=\"#iov\">iov</a>-><a class=\"id\" href=\"#iov_base\">iov_base</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Pin down all the iovec pages needed for len bytes.</span>", 
"<span class=\"comment\"> * Return a struct dma_pinned_list to keep track of pages pinned down.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We are allocating a single chunk of memory, and then carving it up into</span>", 
"<span class=\"comment\"> * 3 sections, the latter 2 whose size depends on the number of iovecs and the</span>", 
"<span class=\"comment\"> * total number of pages, respectively.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dma_pinned_list\">dma_pinned_list</a> *<a class=\"id\" href=\"#dma_pin_iovec_pages\">dma_pin_iovec_pages</a>(struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_pinned_list\">dma_pinned_list</a> *<a class=\"id\" href=\"#local_list\">local_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#iovec_len_used\">iovec_len_used</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#iovec_pages_used\">iovec_pages_used</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* don't pin down non-user-based iovecs */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#segment_eq\">segment_eq</a>(<a class=\"id\" href=\"#get_fs\">get_fs</a>(), <a class=\"id\" href=\"#KERNEL_DS\">KERNEL_DS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* determine how many iovecs/pages there are, up front */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iovec_len_used\">iovec_len_used</a> += <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iovec_pages_used\">iovec_pages_used</a> += <a class=\"id\" href=\"#num_pages_spanned\">num_pages_spanned</a>(&amp;<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a>++;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#iovec_len_used\">iovec_len_used</a> &lt; <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* single kmalloc for pinned list, page_list[], and the page arrays */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_list\">local_list</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#local_list\">local_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>+ (<a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a> * sizeof (struct <a class=\"id\" href=\"#dma_page_list\">dma_page_list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>+ (<a class=\"id\" href=\"#iovec_pages_used\">iovec_pages_used</a> * sizeof (struct <a class=\"id\" href=\"#page\">page</a>*)), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#local_list\">local_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* list of pages starts right after the page list array */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a> = (struct <a class=\"id\" href=\"#page\">page</a> **) &amp;<a class=\"id\" href=\"#local_list\">local_list</a>-><a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_list\">local_list</a>-><a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_page_list\">dma_page_list</a> *<a class=\"id\" href=\"#page_list\">page_list</a> = &amp;<a class=\"id\" href=\"#local_list\">local_list</a>-><a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>, <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unpin\">unpin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#num_pages_spanned\">num_pages_spanned</a>(&amp;<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#base_address\">base_address</a> = <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a> += <a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pin pages down */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_user_pages\">get_user_pages</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long) <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>1,<span class=\"ts\"/><span class=\"comment\">/* write */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0,<span class=\"ts\"/><span class=\"comment\">/* force */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#pages\">pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unpin\">unpin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_list\">local_list</a>-><a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a> = <a class=\"id\" href=\"#i\">i</a> + 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#local_list\">local_list</a>;", 
"", 
"<a class=\"id\" href=\"#unpin\">unpin</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_unpin_iovec_pages\">dma_unpin_iovec_pages</a>(<a class=\"id\" href=\"#local_list\">local_list</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dma_unpin_iovec_pages\">dma_unpin_iovec_pages</a>(struct <a class=\"id\" href=\"#dma_pinned_list\">dma_pinned_list</a> *<a class=\"id\" href=\"#pinned_list\">pinned_list</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pinned_list\">pinned_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pinned_list\">pinned_list</a>-><a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_page_list\">dma_page_list</a> *<a class=\"id\" href=\"#page_list\">page_list</a> = &amp;<a class=\"id\" href=\"#pinned_list\">pinned_list</a>-><a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_page_dirty_lock\">set_page_dirty_lock</a>(<a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#j\">j</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#j\">j</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pinned_list\">pinned_list</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We have already pinned down the pages we will be using in the iovecs.</span>", 
"<span class=\"comment\"> * Each entry in iov array has corresponding entry in pinned_list-&gt;page_list.</span>", 
"<span class=\"comment\"> * Using array indexing to keep iov[] and page_list[] in sync.</span>", 
"<span class=\"comment\"> * Initial elements in iov array's iov-&gt;iov_len will be 0 if already copied into</span>", 
"<span class=\"comment\"> *   by another call.</span>", 
"<span class=\"comment\"> * iov array length remaining guaranteed to be bigger than len.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#dma_cookie_t\">dma_cookie_t</a> <a class=\"id\" href=\"#dma_memcpy_to_iovec\">dma_memcpy_to_iovec</a>(struct <a class=\"id\" href=\"#dma_chan\">dma_chan</a> *<a class=\"id\" href=\"#chan\">chan</a>, struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_pinned_list\">dma_pinned_list</a> *<a class=\"id\" href=\"#pinned_list\">pinned_list</a>, unsigned char *<a class=\"id\" href=\"#kdata\">kdata</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_cookie_t\">dma_cookie_t</a> <a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#page_idx\">page_idx</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chan\">chan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#memcpy_toiovec\">memcpy_toiovec</a>(<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#kdata\">kdata</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iovec_idx\">iovec_idx</a> = 0;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a> &lt; <a class=\"id\" href=\"#pinned_list\">pinned_list</a>-><a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_page_list\">dma_page_list</a> *<a class=\"id\" href=\"#page_list\">page_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* skip already used-up iovecs */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a> = &amp;<a class=\"id\" href=\"#pinned_list\">pinned_list</a>-><a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a> = ((unsigned long)<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_idx\">page_idx</a> = (((unsigned long)<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> - ((unsigned long)<a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#base_address\">base_address</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* break up copies to not cross page boundary */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> = <a class=\"id\" href=\"#dma_async_memcpy_buf_to_pg\">dma_async_memcpy_buf_to_pg</a>(<a class=\"id\" href=\"#chan\">chan</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#page_idx\">page_idx</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdata\">kdata</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* poll for a descriptor slot */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_async_issue_pending\">dma_async_issue_pending</a>(<a class=\"id\" href=\"#chan\">chan</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a> -= <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dma_cookie\">dma_cookie</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdata\">kdata</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_idx\">page_idx</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* really bad if we ever run out of iovecs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#dma_cookie_t\">dma_cookie_t</a> <a class=\"id\" href=\"#dma_memcpy_pg_to_iovec\">dma_memcpy_pg_to_iovec</a>(struct <a class=\"id\" href=\"#dma_chan\">dma_chan</a> *<a class=\"id\" href=\"#chan\">chan</a>, struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_pinned_list\">dma_pinned_list</a> *<a class=\"id\" href=\"#pinned_list\">pinned_list</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_cookie_t\">dma_cookie_t</a> <a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#page_idx\">page_idx</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* this needs as-yet-unimplemented buf-to-buff, so punt. */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* TODO: use dma for this */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chan\">chan</a> || !<a class=\"id\" href=\"#pinned_list\">pinned_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#vaddr\">vaddr</a> = <a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#memcpy_toiovec\">memcpy_toiovec</a>(<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iovec_idx\">iovec_idx</a> = 0;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a> &lt; <a class=\"id\" href=\"#pinned_list\">pinned_list</a>-><a class=\"id\" href=\"#nr_iovecs\">nr_iovecs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_page_list\">dma_page_list</a> *<a class=\"id\" href=\"#page_list\">page_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* skip already used-up iovecs */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a> = &amp;<a class=\"id\" href=\"#pinned_list\">pinned_list</a>-><a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a> = ((unsigned long)<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_idx\">page_idx</a> = (((unsigned long)<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> - ((unsigned long)<a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#base_address\">base_address</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* break up copies to not cross page boundary */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> = <a class=\"id\" href=\"#dma_async_memcpy_pg_to_pg\">dma_async_memcpy_pg_to_pg</a>(<a class=\"id\" href=\"#chan\">chan</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#page_idx\">page_idx</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* poll for a descriptor slot */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_async_issue_pending\">dma_async_issue_pending</a>(<a class=\"id\" href=\"#chan\">chan</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a> -= <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dma_cookie\">dma_cookie</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_byte_offset\">iov_byte_offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_idx\">page_idx</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iovec_idx\">iovec_idx</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* really bad if we ever run out of iovecs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"}", 
];
xr_frag_insert('l/b6/129734ef366d5ca10521d93b7834f4d8c9757a.xr', __xr_tmp);
