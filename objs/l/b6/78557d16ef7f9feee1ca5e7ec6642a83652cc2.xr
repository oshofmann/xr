var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  libata-sff.c - helper library for PCI IDE BMDMA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Maintained by:  Jeff Garzik &lt;jgarzik@pobox.com&gt;</span>", 
"<span class=\"comment\"> *    <span class=\"ts\"/><span class=\"ts\"/>    Please ALWAYS copy linux-ide@vger.kernel.org</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>    on emails.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright 2003-2006 Red Hat, Inc.  All rights reserved.</span>", 
"<span class=\"comment\"> *  Copyright 2003-2006 Jeff Garzik</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2, or (at your option)</span>", 
"<span class=\"comment\"> *  any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> *  along with this program; see the file COPYING.  If not, write to</span>", 
"<span class=\"comment\"> *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  libata documentation is available via 'make {ps|pdf}docs',</span>", 
"<span class=\"comment\"> *  as Documentation/DocBook/libata.*</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Hardware documentation available from http://www.t13.org/ and</span>", 
"<span class=\"comment\"> *  http://www.sata-io.org/</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#libata\">libata</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"libata.h\"", 
"", 
"static struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#ata_sff_wq\">ata_sff_wq</a>;", 
"", 
"const struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ata_sff_port_ops\">ata_sff_port_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ata_base_port_ops\">ata_base_port_ops</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#qc_prep\">qc_prep</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_noop_qc_prep\">ata_noop_qc_prep</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#qc_issue\">qc_issue</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_qc_issue\">ata_sff_qc_issue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#qc_fill_rtf\">qc_fill_rtf</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_qc_fill_rtf\">ata_sff_qc_fill_rtf</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freeze\">freeze</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_freeze\">ata_sff_freeze</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#thaw\">thaw</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_thaw\">ata_sff_thaw</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#prereset\">prereset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_prereset\">ata_sff_prereset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#softreset\">softreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_softreset\">ata_sff_softreset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hardreset\">hardreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sata_sff_hardreset\">sata_sff_hardreset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#postreset\">postreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_postreset\">ata_sff_postreset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#error_handler\">error_handler</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_error_handler\">ata_sff_error_handler</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sff_dev_select\">sff_dev_select</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_dev_select\">ata_sff_dev_select</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sff_check_status\">sff_check_status</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_check_status\">ata_sff_check_status</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sff_tf_load\">sff_tf_load</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_tf_load\">ata_sff_tf_load</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sff_tf_read\">sff_tf_read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_tf_read\">ata_sff_tf_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sff_exec_command\">sff_exec_command</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_exec_command\">ata_sff_exec_command</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sff_data_xfer\">sff_data_xfer</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_data_xfer\">ata_sff_data_xfer</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sff_drain_fifo\">sff_drain_fifo</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_drain_fifo\">ata_sff_drain_fifo</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lost_interrupt\">lost_interrupt</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_sff_lost_interrupt\">ata_sff_lost_interrupt</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_port_ops\">ata_sff_port_ops</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_check_status - Read device status reg &amp; clear interrupt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port where the device is</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Reads ATA taskfile status register for currently-selected device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and return its value. This also clears pending interrupts</span>", 
"<span class=\"comment\"> *      from this device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ata_sff_check_status\">ata_sff_check_status</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#status_addr\">status_addr</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_check_status\">ata_sff_check_status</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_altstatus - Read device alternate status reg</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port where the device is</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Reads ATA taskfile alternate status register for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>currently-selected device and return its value.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: may NOT be used as the check_altstatus() entry in</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_port_operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ata_sff_altstatus\">ata_sff_altstatus</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_altstatus\">sff_check_altstatus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_altstatus\">sff_check_altstatus</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#altstatus_addr\">altstatus_addr</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_irq_status - Check if the device is busy</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port where the device is</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Determine if the port is currently busy. Uses altstatus</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if available in order to avoid clearing shared IRQ status</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>when finding an IRQ source. Non ctl capable devices don't</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>share interrupt lines fortunately for us.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ata_sff_irq_status\">ata_sff_irq_status</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_altstatus\">sff_check_altstatus</a> || <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#altstatus_addr\">altstatus_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_sff_altstatus\">ata_sff_altstatus</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Not us: We are busy */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Clear INTRQ latch */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_status\">sff_check_status</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_sync - Flush writes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port to wait for.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>CAUTION:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If we have an mmio device with no ctl and no altstatus</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>method this will fail. No such devices are known to exist.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ata_sff_sync\">ata_sff_sync</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_altstatus\">sff_check_altstatus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_altstatus\">sff_check_altstatus</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#altstatus_addr\">altstatus_addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#altstatus_addr\">altstatus_addr</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_pause<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>Flush writes and wait 400nS</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port to pause for.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>CAUTION:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If we have an mmio device with no ctl and no altstatus</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>method this will fail. No such devices are known to exist.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ata_sff_pause\">ata_sff_pause</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_sync\">ata_sff_sync</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndelay\">ndelay</a>(400);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_pause\">ata_sff_pause</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_dma_pause<span class=\"ts\"/>-<span class=\"ts\"/>Pause before commencing DMA</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port to pause for.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform I/O fencing and ensure sufficient cycle delays occur</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for the HDMA1:0 transition</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ata_sff_dma_pause\">ata_sff_dma_pause</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_altstatus\">sff_check_altstatus</a> || <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#altstatus_addr\">altstatus_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* An altstatus read will cause the needed delay without</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   messing up the IRQ status */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_altstatus\">ata_sff_altstatus</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* There are no DMA controllers without ctl. BUG here to ensure</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   we never violate the HDMA1:0 transition timing and risk</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   corruption. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_dma_pause\">ata_sff_dma_pause</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_busy_sleep - sleep until BSY clears, or timeout</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port containing status register to be polled</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tmout_pat: impatience timeout in msecs</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tmout: overall timeout in msecs</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Sleep until ATA Status register bit BSY clears,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>or a timeout occurs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, -errno otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_sff_busy_sleep\">ata_sff_busy_sleep</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#tmout_pat\">tmout_pat</a>, unsigned long <a class=\"id\" href=\"#tmout\">tmout</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#timer_start\">timer_start</a>, <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_sff_busy_wait\">ata_sff_busy_wait</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>, 300);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer_start\">timer_start</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#ata_deadline\">ata_deadline</a>(<a class=\"id\" href=\"#timer_start\">timer_start</a>, <a class=\"id\" href=\"#tmout_pat\">tmout_pat</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#status\">status</a> != 0xff && (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#timeout\">timeout</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(50);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_sff_busy_wait\">ata_sff_busy_wait</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>, 3);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != 0xff && (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"port is slow to respond, please be patient \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(Status 0x%x)\\n\", <a class=\"id\" href=\"#status\">status</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#ata_deadline\">ata_deadline</a>(<a class=\"id\" href=\"#timer_start\">timer_start</a>, <a class=\"id\" href=\"#tmout\">tmout</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#status\">status</a> != 0xff && (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#timeout\">timeout</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(50);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_status\">sff_check_status</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> == 0xff)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"port failed to respond \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(%lu secs, Status 0x%x)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#tmout\">tmout</a>, 1000), <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_busy_sleep\">ata_sff_busy_sleep</a>);", 
"", 
"static int <a class=\"id\" href=\"#ata_sff_check_ready\">ata_sff_check_ready</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_status\">sff_check_status</a>(<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_check_ready\">ata_check_ready</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_wait_ready - sleep until BSY clears, or timeout</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: SFF link to wait ready status for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@deadline: deadline jiffies for the operation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Sleep until ATA Status register bit BSY clears, or timeout</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>occurs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, -errno otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_sff_wait_ready\">ata_sff_wait_ready</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_wait_ready\">ata_wait_ready</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#deadline\">deadline</a>, <a class=\"id\" href=\"#ata_sff_check_ready\">ata_sff_check_ready</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_wait_ready\">ata_sff_wait_ready</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_set_devctl - Write device control reg</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port where the device is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ctl: value to write</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Writes ATA taskfile device control register.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: may NOT be used as the sff_set_devctl() entry in</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_port_operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ata_sff_set_devctl\">ata_sff_set_devctl</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ctl\">ctl</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_set_devctl\">sff_set_devctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_set_devctl\">sff_set_devctl</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ctl\">ctl</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#ctl\">ctl</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#ctl_addr\">ctl_addr</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_dev_select - Select device 0/1 on ATA bus</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: ATA channel to manipulate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@device: ATA device (numbered from zero) to select</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Use the method defined in the ATA specification to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>make either device 0, or device 1, active on the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ATA channel.  Works with both PIO and MMIO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>May be used as the dev_select() entry in ata_port_operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>caller.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_sff_dev_select\">ata_sff_dev_select</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, unsigned int <a class=\"id\" href=\"#device\">device</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#device\">device</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ATA_DEVICE_OBS\">ATA_DEVICE_OBS</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ATA_DEVICE_OBS\">ATA_DEVICE_OBS</a> | <a class=\"id\" href=\"#ATA_DEV1\">ATA_DEV1</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#device_addr\">device_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_pause\">ata_sff_pause</a>(<a class=\"id\" href=\"#ap\">ap</a>);<span class=\"ts\"/><span class=\"comment\">/* needed; also flushes, for mmio */</span>", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_dev_select\">ata_sff_dev_select</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_dev_select - Select device 0/1 on ATA bus</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: ATA channel to manipulate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@device: ATA device (numbered from zero) to select</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@wait: non-zero to wait for Status register BSY bit to clear</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@can_sleep: non-zero if context allows sleeping</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Use the method defined in the ATA specification to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>make either device 0, or device 1, active on the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ATA channel.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is a high-level version of ata_sff_dev_select(), which</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>additionally provides the services of inserting the proper</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pauses and status polling, where needed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ata_dev_select\">ata_dev_select</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, unsigned int <a class=\"id\" href=\"#device\">device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#wait\">wait</a>, unsigned int <a class=\"id\" href=\"#can_sleep\">can_sleep</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_msg_probe\">ata_msg_probe</a>(<a class=\"id\" href=\"#ap\">ap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"ata_dev_select: ENTER, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"device %u, wait %u\\n\", <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wait\">wait</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_wait_idle\">ata_wait_idle</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_dev_select\">sff_dev_select</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#device\">device</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wait\">wait</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#can_sleep\">can_sleep</a> && <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#device\">device</a>[<a class=\"id\" href=\"#device\">device</a>].<a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATAPI\">ATA_DEV_ATAPI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(150);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_wait_idle\">ata_wait_idle</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_irq_on - Enable interrupts on a port.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port on which interrupts are enabled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Enable interrupts on a legacy IDE device using MMIO or PIO,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>wait for idle, clear any pending interrupts.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: may NOT be used as the sff_irq_on() entry in</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_port_operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_sff_irq_on\">ata_sff_irq_on</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_ioports\">ata_ioports</a> *<a class=\"id\" href=\"#ioaddr\">ioaddr</a> = &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_on\">sff_irq_on</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_on\">sff_irq_on</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ctl\">ctl</a> &= ~<a class=\"id\" href=\"#ATA_NIEN\">ATA_NIEN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#last_ctl\">last_ctl</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ctl\">ctl</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_set_devctl\">sff_set_devctl</a> || <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#ctl_addr\">ctl_addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_set_devctl\">ata_sff_set_devctl</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ctl\">ctl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_wait_idle\">ata_wait_idle</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_irq_on\">ata_sff_irq_on</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_tf_load - send taskfile registers to host controller</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port to which output is sent</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tf: ATA taskfile register set</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Outputs ATA taskfile to standard ATA host controller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_sff_tf_load\">ata_sff_tf_load</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, const struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_ioports\">ata_ioports</a> *<a class=\"id\" href=\"#ioaddr\">ioaddr</a> = &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#is_addr\">is_addr</a> = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_ISADDR\">ATA_TFLAG_ISADDR</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#ctl\">ctl</a> != <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#last_ctl\">last_ctl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#ctl_addr\">ctl_addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#ctl\">ctl</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#ctl_addr\">ctl_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#last_ctl\">last_ctl</a> = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#ctl\">ctl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_wait_idle\">ata_wait_idle</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_addr\">is_addr</a> && (<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_LBA48\">ATA_TFLAG_LBA48</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#ctl_addr\">ctl_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_feature\">hob_feature</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#feature_addr\">feature_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_nsect\">hob_nsect</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#nsect_addr\">nsect_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbal\">hob_lbal</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbal_addr\">lbal_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbam\">hob_lbam</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbam_addr\">lbam_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbah\">hob_lbah</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbah_addr\">lbah_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"hob: feat 0x%X nsect 0x%X, lba 0x%X 0x%X 0x%X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_feature\">hob_feature</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_nsect\">hob_nsect</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbal\">hob_lbal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbam\">hob_lbam</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbah\">hob_lbah</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_addr\">is_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#feature\">feature</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#feature_addr\">feature_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#nsect\">nsect</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#nsect_addr\">nsect_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbal\">lbal</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbal_addr\">lbal_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbam\">lbam</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbam_addr\">lbam_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbah\">lbah</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbah_addr\">lbah_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"feat 0x%X nsect 0x%X lba 0x%X 0x%X 0x%X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#feature\">feature</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#nsect\">nsect</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbal\">lbal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbam\">lbam</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbah\">lbah</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_DEVICE\">ATA_TFLAG_DEVICE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#device_addr\">device_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"device 0x%X\\n\", <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#device\">device</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_wait_idle\">ata_wait_idle</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_tf_load\">ata_sff_tf_load</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_tf_read - input device's ATA taskfile shadow registers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port from which input is read</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tf: ATA taskfile register set for storing input</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Reads ATA taskfile registers for currently-selected device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>into @tf. Assumes the device has a fully SFF compliant task file</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>layout and behaviour. If you device does not (eg has a different</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>status method) then you will need to provide a replacement tf_read</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_sff_tf_read\">ata_sff_tf_read</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_ioports\">ata_ioports</a> *<a class=\"id\" href=\"#ioaddr\">ioaddr</a> = &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#ata_sff_check_status\">ata_sff_check_status</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#feature\">feature</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#error_addr\">error_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#nsect\">nsect</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#nsect_addr\">nsect_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbal\">lbal</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbal_addr\">lbal_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbam\">lbam</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbam_addr\">lbam_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbah\">lbah</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbah_addr\">lbah_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#device_addr\">device_addr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_LBA48\">ATA_TFLAG_LBA48</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#ctl_addr\">ctl_addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#ctl\">ctl</a> | <a class=\"id\" href=\"#ATA_HOB\">ATA_HOB</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#ctl_addr\">ctl_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_feature\">hob_feature</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#error_addr\">error_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_nsect\">hob_nsect</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#nsect_addr\">nsect_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbal\">hob_lbal</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbal_addr\">lbal_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbam\">hob_lbam</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbam_addr\">lbam_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbah\">hob_lbah</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#lbah_addr\">lbah_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#ctl\">ctl</a>, <a class=\"id\" href=\"#ioaddr\">ioaddr</a>-><a class=\"id\" href=\"#ctl_addr\">ctl_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#last_ctl\">last_ctl</a> = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#ctl\">ctl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_tf_read\">ata_sff_tf_read</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_exec_command - issue ATA command to host controller</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port to which command is being issued</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tf: ATA taskfile register set</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Issues ATA command, with proper synchronization with interrupt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>handler / other threads.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>spin_lock_irqsave(host lock)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_sff_exec_command\">ata_sff_exec_command</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, const struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ata%u: cmd 0x%X\\n\", <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>, <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#command\">command</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite8\">iowrite8</a>(<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#command\">command</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#command_addr\">command_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_pause\">ata_sff_pause</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_exec_command\">ata_sff_exec_command</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_tf_to_host - issue ATA taskfile to host controller</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port to which command is being issued</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tf: ATA taskfile register set</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Issues ATA taskfile register set to ATA host controller,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with proper synchronization with interrupt handler and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>other threads.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>spin_lock_irqsave(host lock)</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ata_tf_to_host\">ata_tf_to_host</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_tf_load\">sff_tf_load</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#tf\">tf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_exec_command\">sff_exec_command</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#tf\">tf</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_data_xfer - Transfer data by PIO</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device to target</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: data buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buflen: buffer length</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@rw: read/write</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Transfer data from/to the device data register by PIO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Bytes consumed.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#ata_sff_data_xfer\">ata_sff_data_xfer</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#buflen\">buflen</a>, int <a class=\"id\" href=\"#rw\">rw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#data_addr\">data_addr</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#data_addr\">data_addr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#words\">words</a> = <a class=\"id\" href=\"#buflen\">buflen</a> >> 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Transfer multiple of 2 bytes */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#READ\">READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioread16_rep\">ioread16_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#words\">words</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite16_rep\">iowrite16_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#words\">words</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Transfer trailing byte, if any. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#buflen\">buflen</a> &amp; 0x01)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#pad\">pad</a>[2];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Point buf to the tail of buffer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#buflen\">buflen</a> - 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Use io*16_rep() accessors here as well to avoid pointlessly</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * swapping bytes to and from on the big endian machines...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#READ\">READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioread16_rep\">ioread16_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#pad\">pad</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#pad\">pad</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pad\">pad</a>[0] = *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite16_rep\">iowrite16_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#pad\">pad</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#words\">words</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#words\">words</a> << 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_data_xfer\">ata_sff_data_xfer</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_data_xfer32 - Transfer data by PIO</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device to target</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: data buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buflen: buffer length</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@rw: read/write</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Transfer data from/to the device data register by PIO using 32bit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>I/O operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Bytes consumed.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"unsigned int <a class=\"id\" href=\"#ata_sff_data_xfer32\">ata_sff_data_xfer32</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#buflen\">buflen</a>, int <a class=\"id\" href=\"#rw\">rw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#data_addr\">data_addr</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#data_addr\">data_addr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#words\">words</a> = <a class=\"id\" href=\"#buflen\">buflen</a> >> 2;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#slop\">slop</a> = <a class=\"id\" href=\"#buflen\">buflen</a> &amp; 3;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pflags\">pflags</a> &amp; <a class=\"id\" href=\"#ATA_PFLAG_PIO32\">ATA_PFLAG_PIO32</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ata_sff_data_xfer\">ata_sff_data_xfer</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buflen\">buflen</a>, <a class=\"id\" href=\"#rw\">rw</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Transfer multiple of 4 bytes */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#READ\">READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioread32_rep\">ioread32_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#words\">words</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite32_rep\">iowrite32_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#words\">words</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Transfer trailing bytes, if any */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#slop\">slop</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#pad\">pad</a>[4];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Point buf to the tail of buffer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#buflen\">buflen</a> - <a class=\"id\" href=\"#slop\">slop</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Use io*_rep() accessors here as well to avoid pointlessly</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * swapping bytes to and from on the big endian machines...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#READ\">READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#slop\">slop</a> &lt; 3)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioread16_rep\">ioread16_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#pad\">pad</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioread32_rep\">ioread32_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#pad\">pad</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#pad\">pad</a>, <a class=\"id\" href=\"#slop\">slop</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#pad\">pad</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#slop\">slop</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#slop\">slop</a> &lt; 3)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite16_rep\">iowrite16_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#pad\">pad</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite32_rep\">iowrite32_rep</a>(<a class=\"id\" href=\"#data_addr\">data_addr</a>, <a class=\"id\" href=\"#pad\">pad</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#buflen\">buflen</a> + 1) &amp; ~1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_data_xfer32\">ata_sff_data_xfer32</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_data_xfer_noirq - Transfer data by PIO</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device to target</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: data buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buflen: buffer length</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@rw: read/write</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Transfer data from/to the device data register by PIO. Do the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>transfer with interrupts disabled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Bytes consumed.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#ata_sff_data_xfer_noirq\">ata_sff_data_xfer_noirq</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#buflen\">buflen</a>, int <a class=\"id\" href=\"#rw\">rw</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#consumed\">consumed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#consumed\">consumed</a> = <a class=\"id\" href=\"#ata_sff_data_xfer\">ata_sff_data_xfer</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buflen\">buflen</a>, <a class=\"id\" href=\"#rw\">rw</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#consumed\">consumed</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_data_xfer_noirq\">ata_sff_data_xfer_noirq</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_pio_sector - Transfer a sector of data.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: Command on going</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Transfer qc-&gt;sect_size bytes of data from/to the ATA device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ata_pio_sector\">ata_pio_sector</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#do_write\">do_write</a> = (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#curbytes\">curbytes</a> == <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a> - <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#sect_size\">sect_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_LAST\">HSM_ST_LAST</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#sg_page\">sg_page</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg\">cursg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg\">cursg</a>-><a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get the current page and offset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#nth_page\">nth_page</a>(<a class=\"id\" href=\"#page\">page</a>, (<a class=\"id\" href=\"#offset\">offset</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> %= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"data %s\\n\", <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a> ? \"write\" : \"read\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageHighMem\">PageHighMem</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIXME: use a bounce buffer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#KM_IRQ0\">KM_IRQ0</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* do the actual data transfer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_data_xfer\">sff_data_xfer</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#sect_size\">sect_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#do_write\">do_write</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#KM_IRQ0\">KM_IRQ0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_data_xfer\">sff_data_xfer</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#sect_size\">sect_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#do_write\">do_write</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#do_write\">do_write</a> && !<a class=\"id\" href=\"#PageSlab\">PageSlab</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#curbytes\">curbytes</a> += <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#sect_size\">sect_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a> += <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#sect_size\">sect_size</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a> == <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg\">cursg</a>-><a class=\"id\" href=\"#length\">length</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg\">cursg</a> = <a class=\"id\" href=\"#sg_next\">sg_next</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg\">cursg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_pio_sectors - Transfer one or many sectors.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: Command on going</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Transfer one or many sectors of data from/to the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ATA device for the DRQ request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ata_pio_sectors\">ata_pio_sectors</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_multi_taskfile\">is_multi_taskfile</a>(&amp;<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* READ/WRITE MULTIPLE */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nsect\">nsect</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multi_count\">multi_count</a> == 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsect\">nsect</a> = <a class=\"id\" href=\"#min\">min</a>((<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a> - <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#curbytes\">curbytes</a>) / <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#sect_size\">sect_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multi_count\">multi_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#nsect\">nsect</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_pio_sector\">ata_pio_sector</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_pio_sector\">ata_pio_sector</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_sync\">ata_sff_sync</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#ap\">ap</a>); <span class=\"comment\">/* flush */</span>", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>atapi_send_cdb - Write CDB bytes to hardware</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port to which ATAPI device is attached.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: Taskfile currently active</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>When device has indicated its readiness to accept</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a CDB, this function is called.  Send the CDB.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#atapi_send_cdb\">atapi_send_cdb</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* send SCSI cdb */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"send cdb\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cdb_len\">cdb_len</a> &lt; 12);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_data_xfer\">sff_data_xfer</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cdb\">cdb</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cdb_len\">cdb_len</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_sync\">ata_sff_sync</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: If the CDB is for DMA do we need to do the transition delay</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   or is bmdma_start guaranteed to do it ? */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#protocol\">protocol</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATAPI_PROT_PIO\">ATAPI_PROT_PIO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST\">HSM_ST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATAPI_PROT_NODATA\">ATAPI_PROT_NODATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_LAST\">HSM_ST_LAST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ATA_BMDMA\">CONFIG_ATA_BMDMA</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATAPI_PROT_DMA\">ATAPI_PROT_DMA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_LAST\">HSM_ST_LAST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* initiate bmdma */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#bmdma_start\">bmdma_start</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_ATA_BMDMA */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>__atapi_pio_bytes - Transfer data from/to the ATAPI device.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: Command on going</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bytes: number of bytes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Transfer Transfer data from/to the ATAPI device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__atapi_pio_bytes\">__atapi_pio_bytes</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>, unsigned int <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rw\">rw</a> = (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a>) ? <a class=\"id\" href=\"#WRITE\">WRITE</a> : <a class=\"id\" href=\"#READ\">READ</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_eh_info\">ata_eh_info</a> *<a class=\"id\" href=\"#ehi\">ehi</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_info\">eh_info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#consumed\">consumed</a>;", 
"", 
"<a class=\"id\" href=\"#next_sg\">next_sg</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg\">cursg</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#sg\">sg</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_ehi_push_desc\">ata_ehi_push_desc</a>(<a class=\"id\" href=\"#ehi\">ehi</a>, \"unexpected or too much trailing data \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"buf=%u cur=%u bytes=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#curbytes\">curbytes</a>, <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#sg_page\">sg_page</a>(<a class=\"id\" href=\"#sg\">sg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get the current page and offset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#nth_page\">nth_page</a>(<a class=\"id\" href=\"#page\">page</a>, (<a class=\"id\" href=\"#offset\">offset</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> %= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* don't overrun current sg */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#length\">length</a> - <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a>, <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* don't cross page boundaries */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#count\">count</a>, (unsigned int)<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"data %s\\n\", <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a> ? \"write\" : \"read\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageHighMem\">PageHighMem</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIXME: use bounce buffer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#KM_IRQ0\">KM_IRQ0</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* do the actual data transfer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#consumed\">consumed</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_data_xfer\">sff_data_xfer</a>(<a class=\"id\" href=\"#dev\">dev</a>,  <a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#rw\">rw</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#KM_IRQ0\">KM_IRQ0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#consumed\">consumed</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_data_xfer\">sff_data_xfer</a>(<a class=\"id\" href=\"#dev\">dev</a>,  <a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#rw\">rw</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> -= <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#bytes\">bytes</a>, <a class=\"id\" href=\"#consumed\">consumed</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#curbytes\">curbytes</a> += <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a> += <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a> == <a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#length\">length</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg\">cursg</a> = <a class=\"id\" href=\"#sg_next\">sg_next</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg\">cursg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * There used to be a  WARN_ON_ONCE(qc-&gt;cursg &amp;&amp; count != consumed);</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Unfortunately __atapi_pio_bytes doesn't know enough to do the WARN</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check correctly as it doesn't know if it is the last request being</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * made. Somebody should implement a proper sanity check.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bytes\">bytes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next_sg\">next_sg</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>atapi_pio_bytes - Transfer data from/to the ATAPI device.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: Command on going</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Transfer Transfer data from/to the ATAPI device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#atapi_pio_bytes\">atapi_pio_bytes</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_eh_info\">ata_eh_info</a> *<a class=\"id\" href=\"#ehi\">ehi</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_info\">eh_info</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ireason\">ireason</a>, <a class=\"id\" href=\"#bc_lo\">bc_lo</a>, <a class=\"id\" href=\"#bc_hi\">bc_hi</a>, <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i_write\">i_write</a>, <a class=\"id\" href=\"#do_write\">do_write</a> = (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a>) ? 1 : 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Abuse qc-&gt;result_tf for temp storage of intermediate TF</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * here to save some kernel stack usage.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For normal completion, qc-&gt;result_tf is not relevant. For</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * error, qc-&gt;result_tf is later overwritten by ata_qc_complete().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So, the correctness of qc-&gt;result_tf is not affected.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_tf_read\">sff_tf_read</a>(<a class=\"id\" href=\"#ap\">ap</a>, &amp;<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#result_tf\">result_tf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireason\">ireason</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#result_tf\">result_tf</a>.<a class=\"id\" href=\"#nsect\">nsect</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bc_lo\">bc_lo</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#result_tf\">result_tf</a>.<a class=\"id\" href=\"#lbam\">lbam</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bc_hi\">bc_hi</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#result_tf\">result_tf</a>.<a class=\"id\" href=\"#lbah\">lbah</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> = (<a class=\"id\" href=\"#bc_hi\">bc_hi</a> << 8) | <a class=\"id\" href=\"#bc_lo\">bc_lo</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* shall be cleared to zero, indicating xfer of data */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ireason\">ireason</a> &amp; (1 << 0)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#atapi_check\">atapi_check</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* make sure transfer direction matches expected */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_write\">i_write</a> = ((<a class=\"id\" href=\"#ireason\">ireason</a> &amp; (1 << 1)) == 0) ? 1 : 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#do_write\">do_write</a> != <a class=\"id\" href=\"#i_write\">i_write</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#atapi_check\">atapi_check</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#bytes\">bytes</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#atapi_check\">atapi_check</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"ata%u: xfering %d bytes\\n\", <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>, <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#__atapi_pio_bytes\">__atapi_pio_bytes</a>(<a class=\"id\" href=\"#qc\">qc</a>, <a class=\"id\" href=\"#bytes\">bytes</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_sync\">ata_sff_sync</a>(<a class=\"id\" href=\"#ap\">ap</a>); <span class=\"comment\">/* flush */</span>", 
"", 
"<span class=\"ts\"/>return;", 
"", 
" <a class=\"id\" href=\"#atapi_check\">atapi_check</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_ehi_push_desc\">ata_ehi_push_desc</a>(<a class=\"id\" href=\"#ehi\">ehi</a>, \"ATAPI check failed (ireason=0x%x bytes=%u)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ireason\">ireason</a>, <a class=\"id\" href=\"#bytes\">bytes</a>);", 
" <a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_hsm_ok_in_wq - Check if the qc can be handled in the workqueue.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: the target ata_port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: qc on going</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1 if ok in workqueue, 0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_hsm_ok_in_wq\">ata_hsm_ok_in_wq</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> == <a class=\"id\" href=\"#HSM_ST_FIRST\">HSM_ST_FIRST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#ATA_PROT_PIO\">ATA_PROT_PIO</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>    return 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_is_atapi\">ata_is_atapi</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#protocol\">protocol</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>   !(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_DFLAG_CDB_INTR\">ATA_DFLAG_CDB_INTR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_hsm_qc_complete - finish a qc running on standard HSM</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: Command to complete</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@in_wq: 1 if called from workqueue, 0 otherwise</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Finish @qc which is running on standard HSM.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If @in_wq is zero, spin_lock_irqsave(host lock).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Otherwise, none on entry and grabs host lock.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ata_hsm_qc_complete\">ata_hsm_qc_complete</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>, int <a class=\"id\" href=\"#in_wq\">in_wq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#error_handler\">error_handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_wq\">in_wq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* EH might have kicked in while host lock is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * released.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a> = <a class=\"id\" href=\"#ata_qc_from_tag\">ata_qc_from_tag</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tag\">tag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> &amp; <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_irq_on\">ata_sff_irq_on</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_qc_complete\">ata_qc_complete</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_freeze\">ata_port_freeze</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> &amp; <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_qc_complete\">ata_qc_complete</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_freeze\">ata_port_freeze</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_wq\">in_wq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_irq_on\">ata_sff_irq_on</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_qc_complete\">ata_qc_complete</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_qc_complete\">ata_qc_complete</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_hsm_move - move the HSM to the next state.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: the target ata_port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: qc on going</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@status: current device status</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@in_wq: 1 if called from workqueue, 0 otherwise</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1 when poll next status needed, 0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_sff_hsm_move\">ata_sff_hsm_move</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>, int <a class=\"id\" href=\"#in_wq\">in_wq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_eh_info\">ata_eh_info</a> *<a class=\"id\" href=\"#ehi\">ehi</a> = &amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_info\">eh_info</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#poll_next\">poll_next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>((<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_QCFLAG_ACTIVE\">ATA_QCFLAG_ACTIVE</a>) == 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure ata_sff_qc_issue() does not throw things</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * like DMA polling into the workqueue. Notice that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in_wq is not equivalent to (qc-&gt;tf.flags &amp; ATA_TFLAG_POLLING).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#in_wq\">in_wq</a> != <a class=\"id\" href=\"#ata_hsm_ok_in_wq\">ata_hsm_ok_in_wq</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#qc\">qc</a>));", 
"", 
"<a class=\"id\" href=\"#fsm_start\">fsm_start</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ata%u: protocol %d task_state %d (dev_stat 0x%X)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#HSM_ST_FIRST\">HSM_ST_FIRST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Send first data block or PACKET CDB */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If polling, we will stay in the work queue after</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * sending the data. Otherwise, interrupt handler</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * takes over after sending the data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#poll_next\">poll_next</a> = (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check device status */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>) == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* handle BSY=0, DRQ=0 as error */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#ATA_ERR\">ATA_ERR</a> | <a class=\"id\" href=\"#ATA_DF\">ATA_DF</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device stops HSM for abort/error */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_DEV\">AC_ERR_DEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* HSM violation. Let EH handle this */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_ehi_push_desc\">ata_ehi_push_desc</a>(<a class=\"id\" href=\"#ehi\">ehi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ST_FIRST: !(DRQ|ERR|DF)\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Device should not ask for data transfer (DRQ=1)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * when it finds something wrong.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We ignore DRQ here and stop the HSM by</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * changing hsm_task_state to HSM_ST_ERR and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * let the EH abort the command or reset the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#ATA_ERR\">ATA_ERR</a> | <a class=\"id\" href=\"#ATA_DF\">ATA_DF</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Some ATAPI tape drives forget to clear the ERR bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * when doing the next command (mostly request sense).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We ignore ERR here to workaround and proceed sending</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the CDB.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp; <a class=\"id\" href=\"#ATA_HORKAGE_STUCK_ERR\">ATA_HORKAGE_STUCK_ERR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_ehi_push_desc\">ata_ehi_push_desc</a>(<a class=\"id\" href=\"#ehi\">ehi</a>, \"ST_FIRST: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"DRQ=1 with device error, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"dev_stat 0x%X\", <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Send the CDB (atapi) or the first data block (ata pio out).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * During the state transition, interrupt handler shouldn't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be invoked before the data transfer is complete and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hsm_task_state is changed. Hence, the following locking.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_wq\">in_wq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#ATA_PROT_PIO\">ATA_PROT_PIO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PIO data out protocol.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * send first data block.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ata_pio_sectors() might change the state</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to HSM_ST_LAST. so, the state is changed here</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * before ata_pio_sectors().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST\">HSM_ST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_pio_sectors\">ata_pio_sectors</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* send CDB */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atapi_send_cdb\">atapi_send_cdb</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#qc\">qc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_wq\">in_wq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if polling, ata_sff_pio_task() handles the rest.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * otherwise, interrupt handler takes over from here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#HSM_ST\">HSM_ST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* complete command or read/write the data register */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#ATAPI_PROT_PIO\">ATAPI_PROT_PIO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ATAPI PIO protocol */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No more data to transfer or device error.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Device error will be tagged in HSM_ST_LAST.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_LAST\">HSM_ST_LAST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Device should not ask for data transfer (DRQ=1)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * when it finds something wrong.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We ignore DRQ here and stop the HSM by</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * changing hsm_task_state to HSM_ST_ERR and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * let the EH abort the command or reset the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#ATA_ERR\">ATA_ERR</a> | <a class=\"id\" href=\"#ATA_DF\">ATA_DF</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_ehi_push_desc\">ata_ehi_push_desc</a>(<a class=\"id\" href=\"#ehi\">ehi</a>, \"ST-ATAPI: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"DRQ=1 with device error, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"dev_stat 0x%X\", <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atapi_pio_bytes\">atapi_pio_bytes</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> == <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bad ireason reported by device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ATA PIO protocol */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>) == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* handle BSY=0, DRQ=0 as error */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#ATA_ERR\">ATA_ERR</a> | <a class=\"id\" href=\"#ATA_DF\">ATA_DF</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device stops HSM for abort/error */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_DEV\">AC_ERR_DEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If diagnostic failed and this is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * IDENTIFY, it's likely a phantom</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * device.  Mark hint.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ATA_HORKAGE_DIAGNOSTIC\">ATA_HORKAGE_DIAGNOSTIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AC_ERR_NODEV_HINT\">AC_ERR_NODEV_HINT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* HSM violation. Let EH handle this.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Phantom devices also trigger this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * condition.  Mark hint.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_ehi_push_desc\">ata_ehi_push_desc</a>(<a class=\"id\" href=\"#ehi\">ehi</a>, \"ST-ATA: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"DRQ=0 without device error, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"dev_stat 0x%X\", <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AC_ERR_NODEV_HINT\">AC_ERR_NODEV_HINT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For PIO reads, some devices may ask for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * data transfer (DRQ=1) alone with ERR=1.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We respect DRQ here and transfer one</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * block of junk data before changing the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * hsm_task_state to HSM_ST_ERR.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * For PIO writes, ERR=1 DRQ=1 doesn't make</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * sense since the data block has been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * transferred to the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#ATA_ERR\">ATA_ERR</a> | <a class=\"id\" href=\"#ATA_DF\">ATA_DF</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* data might be corrputed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_DEV\">AC_ERR_DEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_pio_sectors\">ata_pio_sectors</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_wait_idle\">ata_wait_idle</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a> | <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_ehi_push_desc\">ata_ehi_push_desc</a>(<a class=\"id\" href=\"#ehi\">ehi</a>, \"ST-ATA: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"BUSY|DRQ persists on ERR|DF, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"dev_stat 0x%X\", <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* There are oddball controllers with</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * status register stuck at 0x7f and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * lbal/m/h at zero which makes it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * pass all other presence detection</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * mechanisms we have.  Set NODEV_HINT</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * for it.  Kernel bz#7241.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> == 0x7f)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_NODEV_HINT\">AC_ERR_NODEV_HINT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ata_pio_sectors() might change the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * state to HSM_ST_LAST. so, the state</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * is changed after ata_pio_sectors().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_pio_sectors\">ata_pio_sectors</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> == <a class=\"id\" href=\"#HSM_ST_LAST\">HSM_ST_LAST</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (!(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* all data read */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_wait_idle\">ata_wait_idle</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#poll_next\">poll_next</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#HSM_ST_LAST\">HSM_ST_LAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ata_ok\">ata_ok</a>(<a class=\"id\" href=\"#status\">status</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#__ac_err_mask\">__ac_err_mask</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no more data to transfer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ata%u: dev %u command complete, drv_stat 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> &amp; (<a class=\"id\" href=\"#AC_ERR_DEV\">AC_ERR_DEV</a> | <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_IDLE\">HSM_ST_IDLE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* complete taskfile transaction */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_hsm_qc_complete\">ata_hsm_qc_complete</a>(<a class=\"id\" href=\"#qc\">qc</a>, <a class=\"id\" href=\"#in_wq\">in_wq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#poll_next\">poll_next</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_IDLE\">HSM_ST_IDLE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* complete taskfile transaction */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_hsm_qc_complete\">ata_hsm_qc_complete</a>(<a class=\"id\" href=\"#qc\">qc</a>, <a class=\"id\" href=\"#in_wq\">in_wq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#poll_next\">poll_next</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#poll_next\">poll_next</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#poll_next\">poll_next</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_hsm_move\">ata_sff_hsm_move</a>);", 
"", 
"void <a class=\"id\" href=\"#ata_sff_queue_pio_task\">ata_sff_queue_pio_task</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#delay\">delay</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>((<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sff_pio_task_link\">sff_pio_task_link</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sff_pio_task_link\">sff_pio_task_link</a> != <a class=\"id\" href=\"#link\">link</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sff_pio_task_link\">sff_pio_task_link</a> = <a class=\"id\" href=\"#link\">link</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* may fail if ata_sff_flush_pio_task() in progress */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_delayed_work\">queue_delayed_work</a>(<a class=\"id\" href=\"#ata_sff_wq\">ata_sff_wq</a>, &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sff_pio_task\">sff_pio_task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#delay\">delay</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_queue_pio_task\">ata_sff_queue_pio_task</a>);", 
"", 
"void <a class=\"id\" href=\"#ata_sff_flush_pio_task\">ata_sff_flush_pio_task</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ENTER\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_rearming_delayed_work\">cancel_rearming_delayed_work</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sff_pio_task\">sff_pio_task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_IDLE\">HSM_ST_IDLE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_msg_ctl\">ata_msg_ctl</a>(<a class=\"id\" href=\"#ap\">ap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, \"%s: EXIT\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ata_sff_pio_task\">ata_sff_pio_task</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#ata_port\">ata_port</a>, <a class=\"id\" href=\"#sff_pio_task\">sff_pio_task</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sff_pio_task_link\">sff_pio_task_link</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#poll_next\">poll_next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sff_pio_task_link\">sff_pio_task_link</a> == <a class=\"id\" href=\"#NULL\">NULL</a>); ", 
"<span class=\"ts\"/><span class=\"comment\">/* qc can be NULL if timeout occurred */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a> = <a class=\"id\" href=\"#ata_qc_from_tag\">ata_qc_from_tag</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#active_tag\">active_tag</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#qc\">qc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sff_pio_task_link\">sff_pio_task_link</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#fsm_start\">fsm_start</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> == <a class=\"id\" href=\"#HSM_ST_IDLE\">HSM_ST_IDLE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is purely heuristic.  This is a fast path.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Sometimes when we enter, BSY will be cleared in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a chk-status or two.  If not, the drive is probably seeking</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or something.  Snooze for a couple msecs, then</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * chk-status again.  If still busy, queue delayed work.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_sff_busy_wait\">ata_sff_busy_wait</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>, 5);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(2);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_sff_busy_wait\">ata_sff_busy_wait</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>, 10);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_queue_pio_task\">ata_sff_queue_pio_task</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ATA_SHORT_PAUSE\">ATA_SHORT_PAUSE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hsm_move() may trigger another command to be processed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * clean the link beforehand.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#sff_pio_task_link\">sff_pio_task_link</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* move the HSM */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_next\">poll_next</a> = <a class=\"id\" href=\"#ata_sff_hsm_move\">ata_sff_hsm_move</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#qc\">qc</a>, <a class=\"id\" href=\"#status\">status</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* another command or interrupt handler</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may be running at this point.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#poll_next\">poll_next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fsm_start\">fsm_start</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_qc_issue - issue taskfile to a SFF controller</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: command to issue to device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function issues a PIO or NODATA command to a SFF</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>controller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>spin_lock_irqsave(host lock)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Zero on success, AC_ERR_* mask on failure</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#ata_sff_qc_issue\">ata_sff_qc_issue</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Use polling pio if the LLD doesn't handle</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interrupt driven pio and atapi CDB interrupt.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_PIO_POLLING\">ATA_FLAG_PIO_POLLING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* select the device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_select\">ata_dev_select</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>, 1, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* start the command */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#protocol\">protocol</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_PROT_NODATA\">ATA_PROT_NODATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_qc_set_polling\">ata_qc_set_polling</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_tf_to_host\">ata_tf_to_host</a>(<a class=\"id\" href=\"#ap\">ap</a>, &amp;<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_LAST\">HSM_ST_LAST</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_queue_pio_task\">ata_sff_queue_pio_task</a>(<a class=\"id\" href=\"#link\">link</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_PROT_PIO\">ATA_PROT_PIO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_qc_set_polling\">ata_qc_set_polling</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_tf_to_host\">ata_tf_to_host</a>(<a class=\"id\" href=\"#ap\">ap</a>, &amp;<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PIO data out protocol */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_FIRST\">HSM_ST_FIRST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_queue_pio_task\">ata_sff_queue_pio_task</a>(<a class=\"id\" href=\"#link\">link</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* always send first data block using the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * ata_sff_pio_task() codepath.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PIO data in protocol */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST\">HSM_ST</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_queue_pio_task\">ata_sff_queue_pio_task</a>(<a class=\"id\" href=\"#link\">link</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if polling, ata_sff_pio_task() handles the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * rest.  otherwise, interrupt handler takes</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * over from here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATAPI_PROT_PIO\">ATAPI_PROT_PIO</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATAPI_PROT_NODATA\">ATAPI_PROT_NODATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_qc_set_polling\">ata_qc_set_polling</a>(<a class=\"id\" href=\"#qc\">qc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_tf_to_host\">ata_tf_to_host</a>(<a class=\"id\" href=\"#ap\">ap</a>, &amp;<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_FIRST\">HSM_ST_FIRST</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* send cdb by polling if no cdb interrupt */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_DFLAG_CDB_INTR\">ATA_DFLAG_CDB_INTR</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_queue_pio_task\">ata_sff_queue_pio_task</a>(<a class=\"id\" href=\"#link\">link</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AC_ERR_SYSTEM\">AC_ERR_SYSTEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_qc_issue\">ata_sff_qc_issue</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_qc_fill_rtf - fill result TF using -&gt;sff_tf_read</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: qc to fill result TF for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc is finished and result TF needs to be filled.  Fill it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>using -&gt;sff_tf_read.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>spin_lock_irqsave(host lock)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>true indicating that result TF is successfully filled.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ata_sff_qc_fill_rtf\">ata_sff_qc_fill_rtf</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_tf_read\">sff_tf_read</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#ap\">ap</a>, &amp;<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#result_tf\">result_tf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_qc_fill_rtf\">ata_sff_qc_fill_rtf</a>);", 
"", 
"static unsigned int <a class=\"id\" href=\"#ata_sff_idle_irq\">ata_sff_idle_irq</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#idle_irq\">idle_irq</a>++;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ATA_IRQ_TRAP\">ATA_IRQ_TRAP</a>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#idle_irq\">idle_irq</a> % 1000) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_status\">sff_check_status</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"irq trap\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;<span class=\"ts\"/><span class=\"comment\">/* irq not handled */</span>", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#__ata_sff_port_intr\">__ata_sff_port_intr</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#hsmv_on_idle\">hsmv_on_idle</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"ata%u: protocol %d task_state %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check whether we are expecting interrupt in this state */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#HSM_ST_FIRST\">HSM_ST_FIRST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Some pre-ATAPI-4 devices assert INTRQ</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * at this state when ready to receive CDB.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check the ATA_DFLAG_CDB_INTR flag is enough here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The flag was turned on only for atapi devices.  No</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * need to check ata_is_atapi(qc-&gt;tf.protocol) again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_DFLAG_CDB_INTR\">ATA_DFLAG_CDB_INTR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ata_sff_idle_irq\">ata_sff_idle_irq</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#HSM_ST\">HSM_ST</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#HSM_ST_LAST\">HSM_ST_LAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ata_sff_idle_irq\">ata_sff_idle_irq</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check main status, clearing INTRQ if needed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_sff_irq_status\">ata_sff_irq_status</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hsmv_on_idle\">hsmv_on_idle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* BMDMA engine is already stopped, we're screwed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hsm_task_state\">hsm_task_state</a> = <a class=\"id\" href=\"#HSM_ST_ERR\">HSM_ST_ERR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ata_sff_idle_irq\">ata_sff_idle_irq</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear irq events */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_hsm_move\">ata_sff_hsm_move</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#qc\">qc</a>, <a class=\"id\" href=\"#status\">status</a>, 0);", 
"", 
"<span class=\"ts\"/>return 1;<span class=\"ts\"/><span class=\"comment\">/* irq handled */</span>", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_port_intr - Handle SFF port interrupt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port on which interrupt arrived (possibly...)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@qc: Taskfile currently active in engine</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Handle port interrupt for given queued command.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>spin_lock_irqsave(host lock)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>One if interrupt was handled, zero if not (shared irq).</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#ata_sff_port_intr\">ata_sff_port_intr</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ata_sff_port_intr\">__ata_sff_port_intr</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#qc\">qc</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_port_intr\">ata_sff_port_intr</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#__ata_sff_interrupt\">__ata_sff_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_instance\">dev_instance</a>,", 
"<span class=\"ts\"/>unsigned int (*<a class=\"id\" href=\"#port_intr\">port_intr</a>)(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *, struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a> = <a class=\"id\" href=\"#dev_instance\">dev_instance</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#retried\">retried</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#handled\">handled</a>, <a class=\"id\" href=\"#idle\">idle</a>, <a class=\"id\" href=\"#polling\">polling</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TODO: make _irqsave conditional on x86 PCI IDE legacy mode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handled\">handled</a> = <a class=\"id\" href=\"#idle\">idle</a> = <a class=\"id\" href=\"#polling\">polling</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#n_ports\">n_ports</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a> = <a class=\"id\" href=\"#ata_qc_from_tag\">ata_qc_from_tag</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#active_tag\">active_tag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qc\">qc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handled\">handled</a> |= <a class=\"id\" href=\"#port_intr\">port_intr</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#qc\">qc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#polling\">polling</a> |= 1 << <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle\">idle</a> |= 1 << <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If no port was expecting IRQ but the controller is actually</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * asserting IRQ line, nobody cared will ensue.  Check IRQ</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pending status if available and clear spurious IRQ.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handled\">handled</a> && !<a class=\"id\" href=\"#retried\">retried</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#retry\">retry</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#n_ports\">n_ports</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#polling\">polling</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_check\">sff_irq_check</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_check\">sff_irq_check</a>(<a class=\"id\" href=\"#ap\">ap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idle\">idle</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_status\">sff_check_status</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clear INTRQ and check if BUSY cleared */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_status\">sff_check_status</a>(<a class=\"id\" href=\"#ap\">ap</a>) &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry\">retry</a> |= <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * With command in flight, we can't do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * sff_irq_clear() w/o racing with completion.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retry\">retry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retried\">retried</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_RETVAL\">IRQ_RETVAL</a>(<a class=\"id\" href=\"#handled\">handled</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_interrupt - Default SFF ATA host interrupt handler</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@irq: irq line (unused)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev_instance: pointer to our ata_host information structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Default interrupt handler for PCI IDE devices.  Calls</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_port_intr() for each port that is not disabled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Obtains host lock during operation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IRQ_NONE or IRQ_HANDLED.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#ata_sff_interrupt\">ata_sff_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_instance\">dev_instance</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ata_sff_interrupt\">__ata_sff_interrupt</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#dev_instance\">dev_instance</a>, <a class=\"id\" href=\"#ata_sff_port_intr\">ata_sff_port_intr</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_interrupt\">ata_sff_interrupt</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_lost_interrupt<span class=\"ts\"/>-<span class=\"ts\"/>Check for an apparent lost interrupt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port that appears to have timed out</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called from the libata error handlers when the core code suspects</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>an interrupt has been lost. If it has complete anything we can and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>then return. Interface must support altstatus for this faster</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>recovery to occur.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Caller holds host lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ata_sff_lost_interrupt\">ata_sff_lost_interrupt</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only one outstanding command per SFF channel */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a> = <a class=\"id\" href=\"#ata_qc_from_tag\">ata_qc_from_tag</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#active_tag\">active_tag</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* We cannot lose an interrupt on a non-existent or polled command */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#qc\">qc</a> || <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_POLLING\">ATA_TFLAG_POLLING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/* See if the controller thinks it is still busy - if so the command</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   isn't a lost IRQ but is still in progress */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_sff_altstatus\">ata_sff_altstatus</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* There was a command running, we are no longer busy and we have</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   no interrupt. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"lost interrupt (Status 0x%x)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Run the host interrupt logic as if the interrupt had not been</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   lost */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_port_intr\">ata_sff_port_intr</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#qc\">qc</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_lost_interrupt\">ata_sff_lost_interrupt</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_freeze - Freeze SFF controller port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port to freeze</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Freeze SFF controller port.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_sff_freeze\">ata_sff_freeze</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ctl\">ctl</a> |= <a class=\"id\" href=\"#ATA_NIEN\">ATA_NIEN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#last_ctl\">last_ctl</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ctl\">ctl</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_set_devctl\">sff_set_devctl</a> || <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#ctl_addr\">ctl_addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_sff_set_devctl\">ata_sff_set_devctl</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ctl\">ctl</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Under certain circumstances, some controllers raise IRQ on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ATA_NIEN manipulation.  Also, many controllers fail to mask</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * previously pending IRQ on ATA_NIEN assertion.  Clear it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_status\">sff_check_status</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_irq_clear\">sff_irq_clear</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sff_freeze\">ata_sff_freeze</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_thaw - Thaw SFF controller port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port to thaw</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Thaw SFF controller port.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_sff_thaw\">ata_sff_thaw</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* clear &amp; re-enable interrupts */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_status\">sff_check_status</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
];
xr_frag_insert('l/b6/78557d16ef7f9feee1ca5e7ec6642a83652cc2.xr', __xr_tmp);
