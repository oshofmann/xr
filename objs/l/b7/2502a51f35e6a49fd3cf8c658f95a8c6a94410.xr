var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 1992 Krishna Balasubramanian and Linus Torvalds</span>", 
"<span class=\"comment\"> * Copyright (C) 1999 Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2002 Andi Kleen</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This handles calls from both 32bit and 64bit mode.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ldt\">ldt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mmu_context\">mmu_context</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"static void <a class=\"id\" href=\"#flush_ldt\">flush_ldt</a>(void *<a class=\"id\" href=\"#current_mm\">current_mm</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#active_mm\">active_mm</a> == <a class=\"id\" href=\"#current_mm\">current_mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#load_LDT\">load_LDT</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#active_mm\">active_mm</a>-><a class=\"id\" href=\"#context\">context</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#alloc_ldt\">alloc_ldt</a>(<a class=\"id\" href=\"#mm_context_t\">mm_context_t</a> *<a class=\"id\" href=\"#pc\">pc</a>, int <a class=\"id\" href=\"#mincount\">mincount</a>, int <a class=\"id\" href=\"#reload\">reload</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#oldldt\">oldldt</a>, *<a class=\"id\" href=\"#newldt\">newldt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#oldsize\">oldsize</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mincount\">mincount</a> <= <a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oldsize\">oldsize</a> = <a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mincount\">mincount</a> = (<a class=\"id\" href=\"#mincount\">mincount</a> + (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> / <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a> - 1)) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(~(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> / <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a> - 1));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mincount\">mincount</a> * <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newldt\">newldt</a> = <a class=\"id\" href=\"#vmalloc\">vmalloc</a>(<a class=\"id\" href=\"#mincount\">mincount</a> * <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newldt\">newldt</a> = (void *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#newldt\">newldt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oldsize\">oldsize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#newldt\">newldt</a>, <a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#ldt\">ldt</a>, <a class=\"id\" href=\"#oldsize\">oldsize</a> * <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oldldt\">oldldt</a> = <a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#ldt\">ldt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#newldt\">newldt</a> + <a class=\"id\" href=\"#oldsize\">oldsize</a> * <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a>, 0,", 
"<span class=\"ts\"/>       (<a class=\"id\" href=\"#mincount\">mincount</a> - <a class=\"id\" href=\"#oldsize\">oldsize</a>) * <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#paravirt_alloc_ldt\">paravirt_alloc_ldt</a>(<a class=\"id\" href=\"#newldt\">newldt</a>, <a class=\"id\" href=\"#mincount\">mincount</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* CHECKME: Do we really need this ? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#ldt\">ldt</a> = <a class=\"id\" href=\"#newldt\">newldt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#mincount\">mincount</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reload\">reload</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#load_LDT\">load_LDT</a>(<a class=\"id\" href=\"#pc\">pc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpumask_equal\">cpumask_equal</a>(<a class=\"id\" href=\"#mm_cpumask\">mm_cpumask</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>())))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_call_function\">smp_call_function</a>(<a class=\"id\" href=\"#flush_ldt\">flush_ldt</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#load_LDT\">load_LDT</a>(<a class=\"id\" href=\"#pc\">pc</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oldsize\">oldsize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#paravirt_free_ldt\">paravirt_free_ldt</a>(<a class=\"id\" href=\"#oldldt\">oldldt</a>, <a class=\"id\" href=\"#oldsize\">oldsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oldsize\">oldsize</a> * <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#oldldt\">oldldt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_page\">put_page</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#oldldt\">oldldt</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#copy_ldt\">copy_ldt</a>(<a class=\"id\" href=\"#mm_context_t\">mm_context_t</a> *<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#mm_context_t\">mm_context_t</a> *<a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#alloc_ldt\">alloc_ldt</a>(<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#size\">size</a>, 0);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#size\">size</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_ldt_entry\">write_ldt_entry</a>(<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#ldt\">ldt</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#ldt\">ldt</a> + <a class=\"id\" href=\"#i\">i</a> * <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * we do not have to muck with descriptors here, that is</span>", 
"<span class=\"comment\"> * done in switch_mm() as needed.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#init_new_context\">init_new_context</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#old_mm\">old_mm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#size\">size</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_mm\">old_mm</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_mm\">old_mm</a> && <a class=\"id\" href=\"#old_mm\">old_mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#size\">size</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#old_mm\">old_mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#copy_ldt\">copy_ldt</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#old_mm\">old_mm</a>-><a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#old_mm\">old_mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * No need to lock the MM as we are the last user</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 64bit: Don't touch the LDT register - we're already in the next thread.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#destroy_context\">destroy_context</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#size\">size</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CHECKME: Can this ever happen ? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a> == <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#active_mm\">active_mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_LDT\">clear_LDT</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#paravirt_free_ldt\">paravirt_free_ldt</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#ldt\">ldt</a>, <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#size\">size</a> * <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#ldt\">ldt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_page\">put_page</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#ldt\">ldt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#size\">size</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#read_ldt\">read_ldt</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ptr\">ptr</a>, unsigned long <a class=\"id\" href=\"#bytecount\">bytecount</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bytecount\">bytecount</a> &gt; <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a> * <a class=\"id\" href=\"#LDT_ENTRIES\">LDT_ENTRIES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytecount\">bytecount</a> = <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a> * <a class=\"id\" href=\"#LDT_ENTRIES\">LDT_ENTRIES</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#size\">size</a> * <a class=\"id\" href=\"#LDT_ENTRY_SIZE\">LDT_ENTRY_SIZE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#bytecount\">bytecount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#bytecount\">bytecount</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#ldt\">ldt</a>, <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> != <a class=\"id\" href=\"#bytecount\">bytecount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* zero-fill the rest */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#clear_user\">clear_user</a>(<a class=\"id\" href=\"#ptr\">ptr</a> + <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#bytecount\">bytecount</a> - <a class=\"id\" href=\"#size\">size</a>) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bytecount\">bytecount</a>;", 
"<a class=\"id\" href=\"#error_return\">error_return</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#read_default_ldt\">read_default_ldt</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ptr\">ptr</a>, unsigned long <a class=\"id\" href=\"#bytecount\">bytecount</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* CHECKME: Can we use _one_ random number ? */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a> = 5 * sizeof(struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a>);", 
"#else", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a> = 128;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bytecount\">bytecount</a> &gt; <a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytecount\">bytecount</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#clear_user\">clear_user</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#bytecount\">bytecount</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bytecount\">bytecount</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#write_ldt\">write_ldt</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ptr\">ptr</a>, unsigned long <a class=\"id\" href=\"#bytecount\">bytecount</a>, int <a class=\"id\" href=\"#oldmode\">oldmode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> <a class=\"id\" href=\"#ldt\">ldt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#ldt_info\">ldt_info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bytecount\">bytecount</a> != sizeof(<a class=\"id\" href=\"#ldt_info\">ldt_info</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ldt_info\">ldt_info</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, sizeof(<a class=\"id\" href=\"#ldt_info\">ldt_info</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ldt_info\">ldt_info</a>.<a class=\"id\" href=\"#entry_number\">entry_number</a> >= <a class=\"id\" href=\"#LDT_ENTRIES\">LDT_ENTRIES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ldt_info\">ldt_info</a>.<a class=\"id\" href=\"#contents\">contents</a> == 3) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oldmode\">oldmode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ldt_info\">ldt_info</a>.<a class=\"id\" href=\"#seg_not_present\">seg_not_present</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ldt_info\">ldt_info</a>.<a class=\"id\" href=\"#entry_number\">entry_number</a> >= <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#size\">size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#alloc_ldt\">alloc_ldt</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ldt_info\">ldt_info</a>.<a class=\"id\" href=\"#entry_number\">entry_number</a> + 1, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allow LDTs to be cleared by the user. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ldt_info\">ldt_info</a>.<a class=\"id\" href=\"#base_addr\">base_addr</a> == 0 && <a class=\"id\" href=\"#ldt_info\">ldt_info</a>.<a class=\"id\" href=\"#limit\">limit</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oldmode\">oldmode</a> || <a class=\"id\" href=\"#LDT_empty\">LDT_empty</a>(&amp;<a class=\"id\" href=\"#ldt_info\">ldt_info</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#ldt\">ldt</a>, 0, sizeof(<a class=\"id\" href=\"#ldt\">ldt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#install\">install</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fill_ldt\">fill_ldt</a>(&amp;<a class=\"id\" href=\"#ldt\">ldt</a>, &amp;<a class=\"id\" href=\"#ldt_info\">ldt_info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oldmode\">oldmode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ldt\">ldt</a>.<a class=\"id\" href=\"#avl\">avl</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Install the new entry ...  */</span>", 
"<a class=\"id\" href=\"#install\">install</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_ldt_entry\">write_ldt_entry</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#ldt\">ldt</a>, <a class=\"id\" href=\"#ldt_info\">ldt_info</a>.<a class=\"id\" href=\"#entry_number\">entry_number</a>, &amp;<a class=\"id\" href=\"#ldt\">ldt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> int <a class=\"id\" href=\"#sys_modify_ldt\">sys_modify_ldt</a>(int <a class=\"id\" href=\"#func\">func</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ptr\">ptr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#bytecount\">bytecount</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#func\">func</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#read_ldt\">read_ldt</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#bytecount\">bytecount</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#write_ldt\">write_ldt</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#bytecount\">bytecount</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#read_default_ldt\">read_default_ldt</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#bytecount\">bytecount</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 0x11:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#write_ldt\">write_ldt</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#bytecount\">bytecount</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
];
xr_frag_insert('l/b7/2502a51f35e6a49fd3cf8c658f95a8c6a94410.xr', __xr_tmp);
