var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Synchronous Cryptographic Hash operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2008 Herbert Xu &lt;herbert@gondor.apana.org.au&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation; either version 2 of the License, or (at your option)</span>", 
"<span class=\"comment\"> * any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#crypto\">crypto</a>/<a class=\"id\" href=\"#scatterwalk\">scatterwalk</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#crypto\">crypto</a>/<a class=\"id\" href=\"#internal\">internal</a>/<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"static const struct <a class=\"id\" href=\"#crypto_type\">crypto_type</a> <a class=\"id\" href=\"#crypto_shash_type\">crypto_shash_type</a>;", 
"", 
"static int <a class=\"id\" href=\"#shash_no_setkey\">shash_no_setkey</a>(struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_setkey_unaligned\">shash_setkey_unaligned</a>(struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_shash_alg\">crypto_shash_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_shash_alignmask\">crypto_shash_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#absize\">absize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, *<a class=\"id\" href=\"#alignbuffer\">alignbuffer</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#absize\">absize</a> = <a class=\"id\" href=\"#keylen\">keylen</a> + (<a class=\"id\" href=\"#alignmask\">alignmask</a> &amp; ~(<a class=\"id\" href=\"#crypto_tfm_ctx_alignment\">crypto_tfm_ctx_alignment</a>() - 1));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#absize\">absize</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alignbuffer\">alignbuffer</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#ALIGN\">ALIGN</a>((unsigned long)<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#alignmask\">alignmask</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#alignbuffer\">alignbuffer</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shash\">shash</a>-><a class=\"id\" href=\"#setkey\">setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#alignbuffer\">alignbuffer</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kzfree\">kzfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#crypto_shash_setkey\">crypto_shash_setkey</a>(struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_shash_alg\">crypto_shash_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_shash_alignmask\">crypto_shash_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#key\">key</a> &amp; <a class=\"id\" href=\"#alignmask\">alignmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#shash_setkey_unaligned\">shash_setkey_unaligned</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shash\">shash</a>-><a class=\"id\" href=\"#setkey\">setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_shash_setkey\">crypto_shash_setkey</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#shash_align_buffer_size\">shash_align_buffer_size</a>(unsigned <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a> + (<a class=\"id\" href=\"#mask\">mask</a> &amp; ~(<a class=\"id\" href=\"#__alignof__\">__alignof__</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#aligned\">aligned</a>))) - 1));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_update_unaligned\">shash_update_unaligned</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_shash_alg\">crypto_shash_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_shash_alignmask\">crypto_shash_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#unaligned_len\">unaligned_len</a> = <a class=\"id\" href=\"#alignmask\">alignmask</a> + 1 -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     ((unsigned long)<a class=\"id\" href=\"#data\">data</a> &amp; <a class=\"id\" href=\"#alignmask\">alignmask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ubuf\">ubuf</a>[<a class=\"id\" href=\"#shash_align_buffer_size\">shash_align_buffer_size</a>(<a class=\"id\" href=\"#unaligned_len\">unaligned_len</a>, <a class=\"id\" href=\"#alignmask\">alignmask</a>)]", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#aligned\">aligned</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#PTR_ALIGN\">PTR_ALIGN</a>(&amp;<a class=\"id\" href=\"#ubuf\">ubuf</a>[0], <a class=\"id\" href=\"#alignmask\">alignmask</a> + 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unaligned_len\">unaligned_len</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unaligned_len\">unaligned_len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#unaligned_len\">unaligned_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shash\">shash</a>-><a class=\"id\" href=\"#update\">update</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#unaligned_len\">unaligned_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0, <a class=\"id\" href=\"#unaligned_len\">unaligned_len</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a> ?:", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#shash\">shash</a>-><a class=\"id\" href=\"#update\">update</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#unaligned_len\">unaligned_len</a>, <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#unaligned_len\">unaligned_len</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#crypto_shash_update\">crypto_shash_update</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_shash_alg\">crypto_shash_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_shash_alignmask\">crypto_shash_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#data\">data</a> &amp; <a class=\"id\" href=\"#alignmask\">alignmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#shash_update_unaligned\">shash_update_unaligned</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shash\">shash</a>-><a class=\"id\" href=\"#update\">update</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_shash_update\">crypto_shash_update</a>);", 
"", 
"static int <a class=\"id\" href=\"#shash_final_unaligned\">shash_final_unaligned</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_shash_alignmask\">crypto_shash_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_shash_alg\">crypto_shash_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ds\">ds</a> = <a class=\"id\" href=\"#crypto_shash_digestsize\">crypto_shash_digestsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ubuf\">ubuf</a>[<a class=\"id\" href=\"#shash_align_buffer_size\">shash_align_buffer_size</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#alignmask\">alignmask</a>)]", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#aligned\">aligned</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#PTR_ALIGN\">PTR_ALIGN</a>(&amp;<a class=\"id\" href=\"#ubuf\">ubuf</a>[0], <a class=\"id\" href=\"#alignmask\">alignmask</a> + 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shash\">shash</a>-><a class=\"id\" href=\"#final\">final</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#ds\">ds</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0, <a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#crypto_shash_final\">crypto_shash_final</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_shash_alg\">crypto_shash_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_shash_alignmask\">crypto_shash_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#out\">out</a> &amp; <a class=\"id\" href=\"#alignmask\">alignmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#shash_final_unaligned\">shash_final_unaligned</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shash\">shash</a>-><a class=\"id\" href=\"#final\">final</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_shash_final\">crypto_shash_final</a>);", 
"", 
"static int <a class=\"id\" href=\"#shash_finup_unaligned\">shash_finup_unaligned</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_update\">crypto_shash_update</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>) ?:", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#crypto_shash_final\">crypto_shash_final</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#crypto_shash_finup\">crypto_shash_finup</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_shash_alg\">crypto_shash_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_shash_alignmask\">crypto_shash_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>if (((unsigned long)<a class=\"id\" href=\"#data\">data</a> | (unsigned long)<a class=\"id\" href=\"#out\">out</a>) &amp; <a class=\"id\" href=\"#alignmask\">alignmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#shash_finup_unaligned\">shash_finup_unaligned</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shash\">shash</a>-><a class=\"id\" href=\"#finup\">finup</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_shash_finup\">crypto_shash_finup</a>);", 
"", 
"static int <a class=\"id\" href=\"#shash_digest_unaligned\">shash_digest_unaligned</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_init\">crypto_shash_init</a>(<a class=\"id\" href=\"#desc\">desc</a>) ?:", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#crypto_shash_finup\">crypto_shash_finup</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#crypto_shash_digest\">crypto_shash_digest</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_shash_alg\">crypto_shash_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_shash_alignmask\">crypto_shash_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>if (((unsigned long)<a class=\"id\" href=\"#data\">data</a> | (unsigned long)<a class=\"id\" href=\"#out\">out</a>) &amp; <a class=\"id\" href=\"#alignmask\">alignmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#shash_digest_unaligned\">shash_digest_unaligned</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shash\">shash</a>-><a class=\"id\" href=\"#digest\">digest</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_shash_digest\">crypto_shash_digest</a>);", 
"", 
"static int <a class=\"id\" href=\"#shash_default_export\">shash_default_export</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, void *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#shash_desc_ctx\">shash_desc_ctx</a>(<a class=\"id\" href=\"#desc\">desc</a>), <a class=\"id\" href=\"#crypto_shash_descsize\">crypto_shash_descsize</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_default_import\">shash_default_import</a>(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const void *<a class=\"id\" href=\"#in\">in</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#shash_desc_ctx\">shash_desc_ctx</a>(<a class=\"id\" href=\"#desc\">desc</a>), <a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#crypto_shash_descsize\">crypto_shash_descsize</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_async_setkey\">shash_async_setkey</a>(struct <a class=\"id\" href=\"#crypto_ahash\">crypto_ahash</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> **<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_ahash_ctx\">crypto_ahash_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_setkey\">crypto_shash_setkey</a>(*<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_async_init\">shash_async_init</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> **<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_ahash_ctx\">crypto_ahash_ctx</a>(<a class=\"id\" href=\"#crypto_ahash_reqtfm\">crypto_ahash_reqtfm</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ahash_request_ctx\">ahash_request_ctx</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a> = *<a class=\"id\" href=\"#ctx\">ctx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_init\">crypto_shash_init</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#shash_ahash_update\">shash_ahash_update</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>, struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_hash_walk\">crypto_hash_walk</a> <a class=\"id\" href=\"#walk\">walk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_hash_walk_first\">crypto_hash_walk_first</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>); <a class=\"id\" href=\"#nbytes\">nbytes</a> &gt; 0;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_hash_walk_done\">crypto_hash_walk_done</a>(&amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_shash_update\">crypto_shash_update</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#shash_ahash_update\">shash_ahash_update</a>);", 
"", 
"static int <a class=\"id\" href=\"#shash_async_update\">shash_async_update</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shash_ahash_update\">shash_ahash_update</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#ahash_request_ctx\">ahash_request_ctx</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_async_final\">shash_async_final</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_final\">crypto_shash_final</a>(<a class=\"id\" href=\"#ahash_request_ctx\">ahash_request_ctx</a>(<a class=\"id\" href=\"#req\">req</a>), <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#result\">result</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#shash_ahash_finup\">shash_ahash_finup</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>, struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_hash_walk\">crypto_hash_walk</a> <a class=\"id\" href=\"#walk\">walk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_hash_walk_first\">crypto_hash_walk_first</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nbytes\">nbytes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_final\">crypto_shash_final</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#result\">result</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_hash_walk_last\">crypto_hash_walk_last</a>(&amp;<a class=\"id\" href=\"#walk\">walk</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#crypto_shash_finup\">crypto_shash_finup</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#result\">result</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#crypto_shash_update\">crypto_shash_update</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_hash_walk_done\">crypto_hash_walk_done</a>(&amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#nbytes\">nbytes</a> &gt; 0);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#shash_ahash_finup\">shash_ahash_finup</a>);", 
"", 
"static int <a class=\"id\" href=\"#shash_async_finup\">shash_async_finup</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> **<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_ahash_ctx\">crypto_ahash_ctx</a>(<a class=\"id\" href=\"#crypto_ahash_reqtfm\">crypto_ahash_reqtfm</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ahash_request_ctx\">ahash_request_ctx</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a> = *<a class=\"id\" href=\"#ctx\">ctx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shash_ahash_finup\">shash_ahash_finup</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#shash_ahash_digest\">shash_ahash_digest</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>, struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nbytes\">nbytes</a> &lt; <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#length\">length</a>, ((unsigned int)(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)) - <a class=\"id\" href=\"#offset\">offset</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#crypto_kmap\">crypto_kmap</a>(<a class=\"id\" href=\"#sg_page\">sg_page</a>(<a class=\"id\" href=\"#sg\">sg</a>), 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_shash_digest\">crypto_shash_digest</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_kunmap\">crypto_kunmap</a>(<a class=\"id\" href=\"#data\">data</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_yield\">crypto_yield</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_shash_init\">crypto_shash_init</a>(<a class=\"id\" href=\"#desc\">desc</a>) ?:", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#shash_ahash_finup\">shash_ahash_finup</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#shash_ahash_digest\">shash_ahash_digest</a>);", 
"", 
"static int <a class=\"id\" href=\"#shash_async_digest\">shash_async_digest</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> **<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_ahash_ctx\">crypto_ahash_ctx</a>(<a class=\"id\" href=\"#crypto_ahash_reqtfm\">crypto_ahash_reqtfm</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ahash_request_ctx\">ahash_request_ctx</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a> = *<a class=\"id\" href=\"#ctx\">ctx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shash_ahash_digest\">shash_ahash_digest</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_async_export\">shash_async_export</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>, void *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_export\">crypto_shash_export</a>(<a class=\"id\" href=\"#ahash_request_ctx\">ahash_request_ctx</a>(<a class=\"id\" href=\"#req\">req</a>), <a class=\"id\" href=\"#out\">out</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_async_import\">shash_async_import</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>, const void *<a class=\"id\" href=\"#in\">in</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_import\">crypto_shash_import</a>(<a class=\"id\" href=\"#ahash_request_ctx\">ahash_request_ctx</a>(<a class=\"id\" href=\"#req\">req</a>), <a class=\"id\" href=\"#in\">in</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#crypto_exit_shash_ops_async\">crypto_exit_shash_ops_async</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> **<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_tfm_ctx\">crypto_tfm_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_shash\">crypto_free_shash</a>(*<a class=\"id\" href=\"#ctx\">ctx</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#crypto_init_shash_ops_async\">crypto_init_shash_ops_async</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#calg\">calg</a> = <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#__crypto_shash_alg\">__crypto_shash_alg</a>(<a class=\"id\" href=\"#calg\">calg</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ahash\">crypto_ahash</a> *<a class=\"id\" href=\"#crt\">crt</a> = <a class=\"id\" href=\"#__crypto_ahash_cast\">__crypto_ahash_cast</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> **<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_tfm_ctx\">crypto_tfm_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#shash\">shash</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#crypto_mod_get\">crypto_mod_get</a>(<a class=\"id\" href=\"#calg\">calg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_create_tfm\">crypto_create_tfm</a>(<a class=\"id\" href=\"#calg\">calg</a>, &amp;<a class=\"id\" href=\"#crypto_shash_type\">crypto_shash_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shash\">shash</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_mod_put\">crypto_mod_put</a>(<a class=\"id\" href=\"#calg\">calg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#shash\">shash</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#shash\">shash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#crypto_exit_shash_ops_async\">crypto_exit_shash_ops_async</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#shash_async_init\">shash_async_init</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#update\">update</a> = <a class=\"id\" href=\"#shash_async_update\">shash_async_update</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#final\">final</a> = <a class=\"id\" href=\"#shash_async_final\">shash_async_final</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#finup\">finup</a> = <a class=\"id\" href=\"#shash_async_finup\">shash_async_finup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#digest\">digest</a> = <a class=\"id\" href=\"#shash_async_digest\">shash_async_digest</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#setkey\">setkey</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#setkey\">setkey</a> = <a class=\"id\" href=\"#shash_async_setkey\">shash_async_setkey</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#export\">export</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#export\">export</a> = <a class=\"id\" href=\"#shash_async_export\">shash_async_export</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#import\">import</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#import\">import</a> = <a class=\"id\" href=\"#shash_async_import\">shash_async_import</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#reqsize\">reqsize</a> = sizeof(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a>) + <a class=\"id\" href=\"#crypto_shash_descsize\">crypto_shash_descsize</a>(<a class=\"id\" href=\"#shash\">shash</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_compat_setkey\">shash_compat_setkey</a>(struct <a class=\"id\" href=\"#crypto_hash\">crypto_hash</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> **<a class=\"id\" href=\"#descp\">descp</a> = <a class=\"id\" href=\"#crypto_hash_ctx\">crypto_hash_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = *<a class=\"id\" href=\"#descp\">descp</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_setkey\">crypto_shash_setkey</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_compat_init\">shash_compat_init</a>(struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#hdesc\">hdesc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> **<a class=\"id\" href=\"#descp\">descp</a> = <a class=\"id\" href=\"#crypto_hash_ctx\">crypto_hash_ctx</a>(<a class=\"id\" href=\"#hdesc\">hdesc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = *<a class=\"id\" href=\"#descp\">descp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#hdesc\">hdesc</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_init\">crypto_shash_init</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_compat_update\">shash_compat_update</a>(struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#hdesc\">hdesc</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> **<a class=\"id\" href=\"#descp\">descp</a> = <a class=\"id\" href=\"#crypto_hash_ctx\">crypto_hash_ctx</a>(<a class=\"id\" href=\"#hdesc\">hdesc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = *<a class=\"id\" href=\"#descp\">descp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_hash_walk\">crypto_hash_walk</a> <a class=\"id\" href=\"#walk\">walk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_hash_walk_first_compat\">crypto_hash_walk_first_compat</a>(<a class=\"id\" href=\"#hdesc\">hdesc</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#nbytes\">nbytes</a> &gt; 0; <a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_hash_walk_done\">crypto_hash_walk_done</a>(&amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_shash_update\">crypto_shash_update</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_compat_final\">shash_compat_final</a>(struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#hdesc\">hdesc</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> **<a class=\"id\" href=\"#descp\">descp</a> = <a class=\"id\" href=\"#crypto_hash_ctx\">crypto_hash_ctx</a>(<a class=\"id\" href=\"#hdesc\">hdesc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_shash_final\">crypto_shash_final</a>(*<a class=\"id\" href=\"#descp\">descp</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shash_compat_digest\">shash_compat_digest</a>(struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#hdesc\">hdesc</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nbytes\">nbytes</a> &lt; <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#length\">length</a>, ((unsigned int)(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)) - <a class=\"id\" href=\"#offset\">offset</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> **<a class=\"id\" href=\"#descp\">descp</a> = <a class=\"id\" href=\"#crypto_hash_ctx\">crypto_hash_ctx</a>(<a class=\"id\" href=\"#hdesc\">hdesc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = *<a class=\"id\" href=\"#descp\">descp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#hdesc\">hdesc</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#crypto_kmap\">crypto_kmap</a>(<a class=\"id\" href=\"#sg_page\">sg_page</a>(<a class=\"id\" href=\"#sg\">sg</a>), 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_shash_digest\">crypto_shash_digest</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_kunmap\">crypto_kunmap</a>(<a class=\"id\" href=\"#data\">data</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_yield\">crypto_yield</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shash_compat_init\">shash_compat_init</a>(<a class=\"id\" href=\"#hdesc\">hdesc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shash_compat_update\">shash_compat_update</a>(<a class=\"id\" href=\"#hdesc\">hdesc</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shash_compat_final\">shash_compat_final</a>(<a class=\"id\" href=\"#hdesc\">hdesc</a>, <a class=\"id\" href=\"#out\">out</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#crypto_exit_shash_ops_compat\">crypto_exit_shash_ops_compat</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> **<a class=\"id\" href=\"#descp\">descp</a> = <a class=\"id\" href=\"#crypto_tfm_ctx\">crypto_tfm_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = *<a class=\"id\" href=\"#descp\">descp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_shash\">crypto_free_shash</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kzfree\">kzfree</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_init_shash_ops_compat\">crypto_init_shash_ops_compat</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_tfm\">hash_tfm</a> *<a class=\"id\" href=\"#crt\">crt</a> = &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#crt_hash\">crt_hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#calg\">calg</a> = <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#__crypto_shash_alg\">__crypto_shash_alg</a>(<a class=\"id\" href=\"#calg\">calg</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> **<a class=\"id\" href=\"#descp\">descp</a> = <a class=\"id\" href=\"#crypto_tfm_ctx\">crypto_tfm_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#shash\">shash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#crypto_mod_get\">crypto_mod_get</a>(<a class=\"id\" href=\"#calg\">calg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shash\">shash</a> = <a class=\"id\" href=\"#crypto_create_tfm\">crypto_create_tfm</a>(<a class=\"id\" href=\"#calg\">calg</a>, &amp;<a class=\"id\" href=\"#crypto_shash_type\">crypto_shash_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shash\">shash</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_mod_put\">crypto_mod_put</a>(<a class=\"id\" href=\"#calg\">calg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#shash\">shash</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#desc\">desc</a>) + <a class=\"id\" href=\"#crypto_shash_descsize\">crypto_shash_descsize</a>(<a class=\"id\" href=\"#shash\">shash</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_shash\">crypto_free_shash</a>(<a class=\"id\" href=\"#shash\">shash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#descp\">descp</a> = <a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#shash\">shash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#crypto_exit_shash_ops_compat\">crypto_exit_shash_ops_compat</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#shash_compat_init\">shash_compat_init</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#update\">update</a> = <a class=\"id\" href=\"#shash_compat_update\">shash_compat_update</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#final\">final</a>  = <a class=\"id\" href=\"#shash_compat_final\">shash_compat_final</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#digest\">digest</a> = <a class=\"id\" href=\"#shash_compat_digest\">shash_compat_digest</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#setkey\">setkey</a> = <a class=\"id\" href=\"#shash_compat_setkey\">shash_compat_setkey</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#digestsize\">digestsize</a> = <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#digestsize\">digestsize</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_init_shash_ops\">crypto_init_shash_ops</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_HASH_MASK\">CRYPTO_ALG_TYPE_HASH_MASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_init_shash_ops_compat\">crypto_init_shash_ops_compat</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#crypto_shash_ctxsize\">crypto_shash_ctxsize</a>(struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_HASH_MASK\">CRYPTO_ALG_TYPE_HASH_MASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return sizeof(struct <a class=\"id\" href=\"#shash_desc\">shash_desc</a> *);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_shash_init_tfm\">crypto_shash_init_tfm</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#__crypto_shash_cast\">__crypto_shash_cast</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#descsize\">descsize</a> = <a class=\"id\" href=\"#crypto_shash_alg\">crypto_shash_alg</a>(<a class=\"id\" href=\"#hash\">hash</a>)-><a class=\"id\" href=\"#descsize\">descsize</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#crypto_shash_extsize\">crypto_shash_extsize</a>(struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_ctxsize\">cra_ctxsize</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#crypto_shash_show\">crypto_shash_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#unused\">unused</a>));", 
"static void <a class=\"id\" href=\"#crypto_shash_show\">crypto_shash_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#salg\">salg</a> = <a class=\"id\" href=\"#__crypto_shash_alg\">__crypto_shash_alg</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"type         : shash\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"blocksize    : %u\\n\", <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_blocksize\">cra_blocksize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"digestsize   : %u\\n\", <a class=\"id\" href=\"#salg\">salg</a>-><a class=\"id\" href=\"#digestsize\">digestsize</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#crypto_type\">crypto_type</a> <a class=\"id\" href=\"#crypto_shash_type\">crypto_shash_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ctxsize\">ctxsize</a> = <a class=\"id\" href=\"#crypto_shash_ctxsize\">crypto_shash_ctxsize</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#extsize\">extsize</a> = <a class=\"id\" href=\"#crypto_shash_extsize\">crypto_shash_extsize</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#crypto_init_shash_ops\">crypto_init_shash_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init_tfm\">init_tfm</a> = <a class=\"id\" href=\"#crypto_shash_init_tfm\">crypto_shash_init_tfm</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a> = <a class=\"id\" href=\"#crypto_shash_show\">crypto_shash_show</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#maskclear\">maskclear</a> = ~<a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#maskset\">maskset</a> = <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_SHASH\">CRYPTO_ALG_TYPE_SHASH</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#tfmsize\">tfmsize</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a>, <a class=\"id\" href=\"#base\">base</a>),", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_shash\">crypto_shash</a> *<a class=\"id\" href=\"#crypto_alloc_shash\">crypto_alloc_shash</a>(const char *<a class=\"id\" href=\"#alg_name\">alg_name</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_alloc_tfm\">crypto_alloc_tfm</a>(<a class=\"id\" href=\"#alg_name\">alg_name</a>, &amp;<a class=\"id\" href=\"#crypto_shash_type\">crypto_shash_type</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_alloc_shash\">crypto_alloc_shash</a>);", 
"", 
"static int <a class=\"id\" href=\"#shash_prepare_alg\">shash_prepare_alg</a>(struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#base\">base</a> = &amp;<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#digestsize\">digestsize</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> / 8 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#descsize\">descsize</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> / 8 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#statesize\">statesize</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> / 8)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#cra_type\">cra_type</a> = &amp;<a class=\"id\" href=\"#crypto_shash_type\">crypto_shash_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#cra_flags\">cra_flags</a> &= ~<a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#cra_flags\">cra_flags</a> |= <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_SHASH\">CRYPTO_ALG_TYPE_SHASH</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#finup\">finup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#finup\">finup</a> = <a class=\"id\" href=\"#shash_finup_unaligned\">shash_finup_unaligned</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#digest\">digest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#digest\">digest</a> = <a class=\"id\" href=\"#shash_digest_unaligned\">shash_digest_unaligned</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#export\">export</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#export\">export</a> = <a class=\"id\" href=\"#shash_default_export\">shash_default_export</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#import\">import</a> = <a class=\"id\" href=\"#shash_default_import\">shash_default_import</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#statesize\">statesize</a> = <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#descsize\">descsize</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#setkey\">setkey</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#setkey\">setkey</a> = <a class=\"id\" href=\"#shash_no_setkey\">shash_no_setkey</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#crypto_register_shash\">crypto_register_shash</a>(struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#base\">base</a> = &amp;<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shash_prepare_alg\">shash_prepare_alg</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_register_alg\">crypto_register_alg</a>(<a class=\"id\" href=\"#base\">base</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_register_shash\">crypto_register_shash</a>);", 
"", 
"int <a class=\"id\" href=\"#crypto_unregister_shash\">crypto_unregister_shash</a>(struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_unregister_alg\">crypto_unregister_alg</a>(&amp;<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#base\">base</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_unregister_shash\">crypto_unregister_shash</a>);", 
"", 
"int <a class=\"id\" href=\"#shash_register_instance\">shash_register_instance</a>(struct <a class=\"id\" href=\"#crypto_template\">crypto_template</a> *<a class=\"id\" href=\"#tmpl\">tmpl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#shash_instance\">shash_instance</a> *<a class=\"id\" href=\"#inst\">inst</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shash_prepare_alg\">shash_prepare_alg</a>(&amp;<a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_register_instance\">crypto_register_instance</a>(<a class=\"id\" href=\"#tmpl\">tmpl</a>, <a class=\"id\" href=\"#shash_crypto_instance\">shash_crypto_instance</a>(<a class=\"id\" href=\"#inst\">inst</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#shash_register_instance\">shash_register_instance</a>);", 
"", 
"void <a class=\"id\" href=\"#shash_free_instance\">shash_free_instance</a>(struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#inst\">inst</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_drop_spawn\">crypto_drop_spawn</a>(<a class=\"id\" href=\"#crypto_instance_ctx\">crypto_instance_ctx</a>(<a class=\"id\" href=\"#inst\">inst</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#shash_instance\">shash_instance</a>(<a class=\"id\" href=\"#inst\">inst</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#shash_free_instance\">shash_free_instance</a>);", 
"", 
"int <a class=\"id\" href=\"#crypto_init_shash_spawn\">crypto_init_shash_spawn</a>(struct <a class=\"id\" href=\"#crypto_shash_spawn\">crypto_shash_spawn</a> *<a class=\"id\" href=\"#spawn\">spawn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#inst\">inst</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_init_spawn2\">crypto_init_spawn2</a>(&amp;<a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#base\">base</a>, &amp;<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#inst\">inst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#crypto_shash_type\">crypto_shash_type</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_init_shash_spawn\">crypto_init_shash_spawn</a>);", 
"", 
"struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a> *<a class=\"id\" href=\"#shash_attr_alg\">shash_attr_alg</a>(struct <a class=\"id\" href=\"#rtattr\">rtattr</a> *<a class=\"id\" href=\"#rta\">rta</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#crypto_attr_alg2\">crypto_attr_alg2</a>(<a class=\"id\" href=\"#rta\">rta</a>, &amp;<a class=\"id\" href=\"#crypto_shash_type\">crypto_shash_type</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#alg\">alg</a>) ? <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#alg\">alg</a>) :", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#alg\">alg</a>, struct <a class=\"id\" href=\"#shash_alg\">shash_alg</a>, <a class=\"id\" href=\"#base\">base</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#shash_attr_alg\">shash_attr_alg</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Synchronous cryptographic hash type\");", 
];
xr_frag_insert('l/b7/60bc171718443846a63f7feda1812888fa795f.xr', __xr_tmp);
