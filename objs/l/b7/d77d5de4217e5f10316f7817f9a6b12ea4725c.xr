var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is &lt;linux/capability.h&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Andrew G. Morgan &lt;morgan@kernel.org&gt;</span>", 
"<span class=\"comment\"> * Alexander Kjeldaas &lt;astor@guardian.no&gt;</span>", 
"<span class=\"comment\"> * with help from Aleph1, Roland Buresund and Andrew Main.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See here for the libcap library (\"POSIX draft\" compliance):</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ftp://www.kernel.org/pub/linux/libs/security/linux-privs/kernel-2.6/</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_H\">_LINUX_CAPABILITY_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_H\">_LINUX_CAPABILITY_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#task_struct\">task_struct</a>;", 
"", 
"<span class=\"comment\">/* User-level do most of the mapping between kernel and user</span>", 
"<span class=\"comment\">   capabilities based on the version tag given by the kernel. The</span>", 
"<span class=\"comment\">   kernel might be somewhat backwards compatible, but don't bet on</span>", 
"<span class=\"comment\">   it. */</span>", 
"", 
"<span class=\"comment\">/* Note, cap_t, is defined by POSIX (draft) to be an \"opaque\" pointer to</span>", 
"<span class=\"comment\">   a set of three capability sets.  The transposition of 3*the</span>", 
"<span class=\"comment\">   following structure to such a composite is better handled in a user</span>", 
"<span class=\"comment\">   library since the draft standard requires the use of malloc/free</span>", 
"<span class=\"comment\">   etc.. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_VERSION_1\">_LINUX_CAPABILITY_VERSION_1</a>  0x19980330", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_U32S_1\">_LINUX_CAPABILITY_U32S_1</a>     1", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_VERSION_2\">_LINUX_CAPABILITY_VERSION_2</a>  0x20071026  <span class=\"comment\">/* deprecated - use v3 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_U32S_2\">_LINUX_CAPABILITY_U32S_2</a>     2", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_VERSION_3\">_LINUX_CAPABILITY_VERSION_3</a>  0x20080522", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_U32S_3\">_LINUX_CAPABILITY_U32S_3</a>     2", 
"", 
"typedef struct <a class=\"id\" href=\"#__user_cap_header_struct\">__user_cap_header_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pid\">pid</a>;", 
"} <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#cap_user_header_t\">cap_user_header_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#__user_cap_data_struct\">__user_cap_data_struct</a> {", 
"        <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#effective\">effective</a>;", 
"        <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#permitted\">permitted</a>;", 
"        <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#inheritable\">inheritable</a>;", 
"} <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#cap_user_data_t\">cap_user_data_t</a>;", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_REVISION_MASK\">VFS_CAP_REVISION_MASK</a><span class=\"ts\"/>0xFF000000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_REVISION_SHIFT\">VFS_CAP_REVISION_SHIFT</a><span class=\"ts\"/>24", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_FLAGS_MASK\">VFS_CAP_FLAGS_MASK</a><span class=\"ts\"/>~<a class=\"id\" href=\"#VFS_CAP_REVISION_MASK\">VFS_CAP_REVISION_MASK</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_FLAGS_EFFECTIVE\">VFS_CAP_FLAGS_EFFECTIVE</a><span class=\"ts\"/>0x000001", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_REVISION_1\">VFS_CAP_REVISION_1</a><span class=\"ts\"/>0x01000000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_U32_1\">VFS_CAP_U32_1</a>           1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XATTR_CAPS_SZ_1\">XATTR_CAPS_SZ_1</a>         (sizeof(<a class=\"id\" href=\"#__le32\">__le32</a>)*(1 + 2*<a class=\"id\" href=\"#VFS_CAP_U32_1\">VFS_CAP_U32_1</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_REVISION_2\">VFS_CAP_REVISION_2</a><span class=\"ts\"/>0x02000000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_U32_2\">VFS_CAP_U32_2</a>           2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XATTR_CAPS_SZ_2\">XATTR_CAPS_SZ_2</a>         (sizeof(<a class=\"id\" href=\"#__le32\">__le32</a>)*(1 + 2*<a class=\"id\" href=\"#VFS_CAP_U32_2\">VFS_CAP_U32_2</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XATTR_CAPS_SZ\">XATTR_CAPS_SZ</a>           <a class=\"id\" href=\"#XATTR_CAPS_SZ_2\">XATTR_CAPS_SZ_2</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_U32\">VFS_CAP_U32</a>             <a class=\"id\" href=\"#VFS_CAP_U32_2\">VFS_CAP_U32_2</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VFS_CAP_REVISION\">VFS_CAP_REVISION</a><span class=\"ts\"/><a class=\"id\" href=\"#VFS_CAP_REVISION_2\">VFS_CAP_REVISION_2</a>", 
"", 
"struct <a class=\"id\" href=\"#vfs_cap_data\">vfs_cap_data</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#magic_etc\">magic_etc</a>;            <span class=\"comment\">/* Little endian */</span>", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#permitted\">permitted</a>;    <span class=\"comment\">/* Little endian */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#inheritable\">inheritable</a>;  <span class=\"comment\">/* Little endian */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#VFS_CAP_U32\">VFS_CAP_U32</a>];", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Backwardly compatible definition for source code - trapped in a</span>", 
"<span class=\"comment\"> * 32-bit world. If you find you need this, please consider using</span>", 
"<span class=\"comment\"> * libcap to untrap yourself...</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_VERSION\">_LINUX_CAPABILITY_VERSION</a>  <a class=\"id\" href=\"#_LINUX_CAPABILITY_VERSION_1\">_LINUX_CAPABILITY_VERSION_1</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_U32S\">_LINUX_CAPABILITY_U32S</a>     <a class=\"id\" href=\"#_LINUX_CAPABILITY_U32S_1\">_LINUX_CAPABILITY_U32S_1</a>", 
"", 
"#else", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_KERNEL_CAPABILITY_VERSION\">_KERNEL_CAPABILITY_VERSION</a> <a class=\"id\" href=\"#_LINUX_CAPABILITY_VERSION_3\">_LINUX_CAPABILITY_VERSION_3</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_KERNEL_CAPABILITY_U32S\">_KERNEL_CAPABILITY_U32S</a>    <a class=\"id\" href=\"#_LINUX_CAPABILITY_U32S_3\">_LINUX_CAPABILITY_U32S_3</a>", 
"", 
"extern int <a class=\"id\" href=\"#file_caps_enabled\">file_caps_enabled</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#kernel_cap_struct\">kernel_cap_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#cap\">cap</a>[<a class=\"id\" href=\"#_KERNEL_CAPABILITY_U32S\">_KERNEL_CAPABILITY_U32S</a>];", 
"} <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a>;", 
"", 
"<span class=\"comment\">/* exact same as vfs_cap_data but in cpu endian and always filled completely */</span>", 
"struct <a class=\"id\" href=\"#cpu_vfs_cap_data\">cpu_vfs_cap_data</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#magic_etc\">magic_etc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#permitted\">permitted</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#inheritable\">inheritable</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_USER_CAP_HEADER_SIZE\">_USER_CAP_HEADER_SIZE</a>  (sizeof(struct <a class=\"id\" href=\"#__user_cap_header_struct\">__user_cap_header_struct</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_KERNEL_CAP_T_SIZE\">_KERNEL_CAP_T_SIZE</a>     (sizeof(<a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a>))", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> ** POSIX-draft defined capabilities.</span>", 
"<span class=\"comment\"> **/</span>", 
"", 
"<span class=\"comment\">/* In a system with the [_POSIX_CHOWN_RESTRICTED] option defined, this</span>", 
"<span class=\"comment\">   overrides the restriction of changing file ownership and group</span>", 
"<span class=\"comment\">   ownership. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_CHOWN\">CAP_CHOWN</a>            0", 
"", 
"<span class=\"comment\">/* Override all DAC access, including ACL execute access if</span>", 
"<span class=\"comment\">   [_POSIX_ACL] is defined. Excluding DAC access covered by</span>", 
"<span class=\"comment\">   CAP_LINUX_IMMUTABLE. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_DAC_OVERRIDE\">CAP_DAC_OVERRIDE</a>     1", 
"", 
"<span class=\"comment\">/* Overrides all DAC restrictions regarding read and search on files</span>", 
"<span class=\"comment\">   and directories, including ACL restrictions if [_POSIX_ACL] is</span>", 
"<span class=\"comment\">   defined. Excluding DAC access covered by CAP_LINUX_IMMUTABLE. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_DAC_READ_SEARCH\">CAP_DAC_READ_SEARCH</a>  2", 
"", 
"<span class=\"comment\">/* Overrides all restrictions about allowed operations on files, where</span>", 
"<span class=\"comment\">   file owner ID must be equal to the user ID, except where CAP_FSETID</span>", 
"<span class=\"comment\">   is applicable. It doesn't override MAC and DAC restrictions. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_FOWNER\">CAP_FOWNER</a>           3", 
"", 
"<span class=\"comment\">/* Overrides the following restrictions that the effective user ID</span>", 
"<span class=\"comment\">   shall match the file owner ID when setting the S_ISUID and S_ISGID</span>", 
"<span class=\"comment\">   bits on that file; that the effective group ID (or one of the</span>", 
"<span class=\"comment\">   supplementary group IDs) shall match the file owner ID when setting</span>", 
"<span class=\"comment\">   the S_ISGID bit on that file; that the S_ISUID and S_ISGID bits are</span>", 
"<span class=\"comment\">   cleared on successful return from chown(2) (not implemented). */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_FSETID\">CAP_FSETID</a>           4", 
"", 
"<span class=\"comment\">/* Overrides the restriction that the real or effective user ID of a</span>", 
"<span class=\"comment\">   process sending a signal must match the real or effective user ID</span>", 
"<span class=\"comment\">   of the process receiving the signal. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_KILL\">CAP_KILL</a>             5", 
"", 
"<span class=\"comment\">/* Allows setgid(2) manipulation */</span>", 
"<span class=\"comment\">/* Allows setgroups(2) */</span>", 
"<span class=\"comment\">/* Allows forged gids on socket credentials passing. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SETGID\">CAP_SETGID</a>           6", 
"", 
"<span class=\"comment\">/* Allows set*uid(2) manipulation (including fsuid). */</span>", 
"<span class=\"comment\">/* Allows forged pids on socket credentials passing. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SETUID\">CAP_SETUID</a>           7", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> ** Linux-specific capabilities</span>", 
"<span class=\"comment\"> **/</span>", 
"", 
"<span class=\"comment\">/* Without VFS support for capabilities:</span>", 
"<span class=\"comment\"> *   Transfer any capability in your permitted set to any pid,</span>", 
"<span class=\"comment\"> *   remove any capability in your permitted set from any pid</span>", 
"<span class=\"comment\"> * With VFS support for capabilities (neither of above, but)</span>", 
"<span class=\"comment\"> *   Add any capability from current's capability bounding set</span>", 
"<span class=\"comment\"> *       to the current process' inheritable set</span>", 
"<span class=\"comment\"> *   Allow taking bits out of capability bounding set</span>", 
"<span class=\"comment\"> *   Allow modification of the securebits for a process</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SETPCAP\">CAP_SETPCAP</a>          8", 
"", 
"<span class=\"comment\">/* Allow modification of S_IMMUTABLE and S_APPEND file attributes */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_LINUX_IMMUTABLE\">CAP_LINUX_IMMUTABLE</a>  9", 
"", 
"<span class=\"comment\">/* Allows binding to TCP/UDP sockets below 1024 */</span>", 
"<span class=\"comment\">/* Allows binding to ATM VCIs below 32 */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_NET_BIND_SERVICE\">CAP_NET_BIND_SERVICE</a> 10", 
"", 
"<span class=\"comment\">/* Allow broadcasting, listen to multicast */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_NET_BROADCAST\">CAP_NET_BROADCAST</a>    11", 
"", 
"<span class=\"comment\">/* Allow interface configuration */</span>", 
"<span class=\"comment\">/* Allow administration of IP firewall, masquerading and accounting */</span>", 
"<span class=\"comment\">/* Allow setting debug option on sockets */</span>", 
"<span class=\"comment\">/* Allow modification of routing tables */</span>", 
"<span class=\"comment\">/* Allow setting arbitrary process / process group ownership on</span>", 
"<span class=\"comment\">   sockets */</span>", 
"<span class=\"comment\">/* Allow binding to any address for transparent proxying */</span>", 
"<span class=\"comment\">/* Allow setting TOS (type of service) */</span>", 
"<span class=\"comment\">/* Allow setting promiscuous mode */</span>", 
"<span class=\"comment\">/* Allow clearing driver statistics */</span>", 
"<span class=\"comment\">/* Allow multicasting */</span>", 
"<span class=\"comment\">/* Allow read/write of device-specific registers */</span>", 
"<span class=\"comment\">/* Allow activation of ATM control sockets */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>        12", 
"", 
"<span class=\"comment\">/* Allow use of RAW sockets */</span>", 
"<span class=\"comment\">/* Allow use of PACKET sockets */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_NET_RAW\">CAP_NET_RAW</a>          13", 
"", 
"<span class=\"comment\">/* Allow locking of shared memory segments */</span>", 
"<span class=\"comment\">/* Allow mlock and mlockall (which doesn't really have anything to do</span>", 
"<span class=\"comment\">   with IPC) */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_IPC_LOCK\">CAP_IPC_LOCK</a>         14", 
"", 
"<span class=\"comment\">/* Override IPC ownership checks */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_IPC_OWNER\">CAP_IPC_OWNER</a>        15", 
"", 
"<span class=\"comment\">/* Insert and remove kernel modules - modify kernel without limit */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_MODULE\">CAP_SYS_MODULE</a>       16", 
"", 
"<span class=\"comment\">/* Allow ioperm/iopl access */</span>", 
"<span class=\"comment\">/* Allow sending USB messages to any device via /proc/bus/usb */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_RAWIO\">CAP_SYS_RAWIO</a>        17", 
"", 
"<span class=\"comment\">/* Allow use of chroot() */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_CHROOT\">CAP_SYS_CHROOT</a>       18", 
"", 
"<span class=\"comment\">/* Allow ptrace() of any process */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_PTRACE\">CAP_SYS_PTRACE</a>       19", 
"", 
"<span class=\"comment\">/* Allow configuration of process accounting */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_PACCT\">CAP_SYS_PACCT</a>        20", 
"", 
"<span class=\"comment\">/* Allow configuration of the secure attention key */</span>", 
"<span class=\"comment\">/* Allow administration of the random device */</span>", 
"<span class=\"comment\">/* Allow examination and configuration of disk quotas */</span>", 
"<span class=\"comment\">/* Allow configuring the kernel's syslog (printk behaviour) */</span>", 
"<span class=\"comment\">/* Allow setting the domainname */</span>", 
"<span class=\"comment\">/* Allow setting the hostname */</span>", 
"<span class=\"comment\">/* Allow calling bdflush() */</span>", 
"<span class=\"comment\">/* Allow mount() and umount(), setting up new smb connection */</span>", 
"<span class=\"comment\">/* Allow some autofs root ioctls */</span>", 
"<span class=\"comment\">/* Allow nfsservctl */</span>", 
"<span class=\"comment\">/* Allow VM86_REQUEST_IRQ */</span>", 
"<span class=\"comment\">/* Allow to read/write pci config on alpha */</span>", 
"<span class=\"comment\">/* Allow irix_prctl on mips (setstacksize) */</span>", 
"<span class=\"comment\">/* Allow flushing all cache on m68k (sys_cacheflush) */</span>", 
"<span class=\"comment\">/* Allow removing semaphores */</span>", 
"<span class=\"comment\">/* Used instead of CAP_CHOWN to \"chown\" IPC message queues, semaphores</span>", 
"<span class=\"comment\">   and shared memory */</span>", 
"<span class=\"comment\">/* Allow locking/unlocking of shared memory segment */</span>", 
"<span class=\"comment\">/* Allow turning swap on/off */</span>", 
"<span class=\"comment\">/* Allow forged pids on socket credentials passing */</span>", 
"<span class=\"comment\">/* Allow setting readahead and flushing buffers on block devices */</span>", 
"<span class=\"comment\">/* Allow setting geometry in floppy driver */</span>", 
"<span class=\"comment\">/* Allow turning DMA on/off in xd driver */</span>", 
"<span class=\"comment\">/* Allow administration of md devices (mostly the above, but some</span>", 
"<span class=\"comment\">   extra ioctls) */</span>", 
"<span class=\"comment\">/* Allow tuning the ide driver */</span>", 
"<span class=\"comment\">/* Allow access to the nvram device */</span>", 
"<span class=\"comment\">/* Allow administration of apm_bios, serial and bttv (TV) device */</span>", 
"<span class=\"comment\">/* Allow manufacturer commands in isdn CAPI support driver */</span>", 
"<span class=\"comment\">/* Allow reading non-standardized portions of pci configuration space */</span>", 
"<span class=\"comment\">/* Allow DDI debug ioctl on sbpcd driver */</span>", 
"<span class=\"comment\">/* Allow setting up serial ports */</span>", 
"<span class=\"comment\">/* Allow sending raw qic-117 commands */</span>", 
"<span class=\"comment\">/* Allow enabling/disabling tagged queuing on SCSI controllers and sending</span>", 
"<span class=\"comment\">   arbitrary SCSI commands */</span>", 
"<span class=\"comment\">/* Allow setting encryption key on loopback filesystem */</span>", 
"<span class=\"comment\">/* Allow setting zone reclaim policy */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>        21", 
"", 
"<span class=\"comment\">/* Allow use of reboot() */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_BOOT\">CAP_SYS_BOOT</a>         22", 
"", 
"<span class=\"comment\">/* Allow raising priority and setting priority on other (different</span>", 
"<span class=\"comment\">   UID) processes */</span>", 
"<span class=\"comment\">/* Allow use of FIFO and round-robin (realtime) scheduling on own</span>", 
"<span class=\"comment\">   processes and setting the scheduling algorithm used by another</span>", 
"<span class=\"comment\">   process. */</span>", 
"<span class=\"comment\">/* Allow setting cpu affinity on other processes */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_NICE\">CAP_SYS_NICE</a>         23", 
"", 
"<span class=\"comment\">/* Override resource limits. Set resource limits. */</span>", 
"<span class=\"comment\">/* Override quota limits. */</span>", 
"<span class=\"comment\">/* Override reserved space on ext2 filesystem */</span>", 
"<span class=\"comment\">/* Modify data journaling mode on ext3 filesystem (uses journaling</span>", 
"<span class=\"comment\">   resources) */</span>", 
"<span class=\"comment\">/* NOTE: ext2 honors fsuid when checking for resource overrides, so</span>", 
"<span class=\"comment\">   you can override using fsuid too */</span>", 
"<span class=\"comment\">/* Override size restrictions on IPC message queues */</span>", 
"<span class=\"comment\">/* Allow more than 64hz interrupts from the real-time clock */</span>", 
"<span class=\"comment\">/* Override max number of consoles on console allocation */</span>", 
"<span class=\"comment\">/* Override max number of keymaps */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_RESOURCE\">CAP_SYS_RESOURCE</a>     24", 
"", 
"<span class=\"comment\">/* Allow manipulation of system clock */</span>", 
"<span class=\"comment\">/* Allow irix_stime on mips */</span>", 
"<span class=\"comment\">/* Allow setting the real-time clock */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_TIME\">CAP_SYS_TIME</a>         25", 
"", 
"<span class=\"comment\">/* Allow configuration of tty devices */</span>", 
"<span class=\"comment\">/* Allow vhangup() of tty */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SYS_TTY_CONFIG\">CAP_SYS_TTY_CONFIG</a>   26", 
"", 
"<span class=\"comment\">/* Allow the privileged aspects of mknod() */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_MKNOD\">CAP_MKNOD</a>            27", 
"", 
"<span class=\"comment\">/* Allow taking of leases on files */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_LEASE\">CAP_LEASE</a>            28", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_AUDIT_WRITE\">CAP_AUDIT_WRITE</a>      29", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_AUDIT_CONTROL\">CAP_AUDIT_CONTROL</a>    30", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_SETFCAP\">CAP_SETFCAP</a><span class=\"ts\"/>     31", 
"", 
"<span class=\"comment\">/* Override MAC access.</span>", 
"<span class=\"comment\">   The base kernel enforces no MAC policy.</span>", 
"<span class=\"comment\">   An LSM may enforce a MAC policy, and if it does and it chooses</span>", 
"<span class=\"comment\">   to implement capability based overrides of that policy, this is</span>", 
"<span class=\"comment\">   the capability it should use to do so. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_MAC_OVERRIDE\">CAP_MAC_OVERRIDE</a>     32", 
"", 
"<span class=\"comment\">/* Allow MAC configuration or state changes.</span>", 
"<span class=\"comment\">   The base kernel requires no MAC configuration.</span>", 
"<span class=\"comment\">   An LSM may enforce a MAC policy, and if it does and it chooses</span>", 
"<span class=\"comment\">   to implement capability based checks on modifications to that</span>", 
"<span class=\"comment\">   policy or the data required to maintain it, this is the</span>", 
"<span class=\"comment\">   capability it should use to do so. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_MAC_ADMIN\">CAP_MAC_ADMIN</a>        33", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_LAST_CAP\">CAP_LAST_CAP</a>         <a class=\"id\" href=\"#CAP_MAC_ADMIN\">CAP_MAC_ADMIN</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cap_valid\">cap_valid</a>(<a class=\"id\" href=\"#x\">x</a>) ((<a class=\"id\" href=\"#x\">x</a>) >= 0 && (<a class=\"id\" href=\"#x\">x</a>) <= <a class=\"id\" href=\"#CAP_LAST_CAP\">CAP_LAST_CAP</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Bit location of each capability (used by user-space library and kernel)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_TO_INDEX\">CAP_TO_INDEX</a>(<a class=\"id\" href=\"#x\">x</a>)     ((<a class=\"id\" href=\"#x\">x</a>) >> 5)        <span class=\"comment\">/* 1 &lt;&lt; 5 == bits in __u32 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#x\">x</a>)      (1 << ((<a class=\"id\" href=\"#x\">x</a>) &amp; 31)) <span class=\"comment\">/* mask for indexed __u32 */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Internal kernel functions only</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_FOR_EACH_U32\">CAP_FOR_EACH_U32</a>(<a class=\"id\" href=\"#__capi\">__capi</a>)  \\", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#__capi\">__capi</a> = 0; <a class=\"id\" href=\"#__capi\">__capi</a> &lt; <a class=\"id\" href=\"#_KERNEL_CAPABILITY_U32S\">_KERNEL_CAPABILITY_U32S</a>; ++<a class=\"id\" href=\"#__capi\">__capi</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * CAP_FS_MASK and CAP_NFSD_MASKS:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The fs mask is all the privileges that fsuid==0 historically meant.</span>", 
"<span class=\"comment\"> * At one time in the past, that included CAP_MKNOD and CAP_LINUX_IMMUTABLE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It has never meant setting security.* and trusted.* xattrs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We could also define fsmask as follows:</span>", 
"<span class=\"comment\"> *   1. CAP_FS_MASK is the privilege to bypass all fs-related DAC permissions</span>", 
"<span class=\"comment\"> *   2. The security.* and trusted.* xattrs are fs-related MAC permissions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_FS_MASK_B0\">CAP_FS_MASK_B0</a>     (<a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_CHOWN\">CAP_CHOWN</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    | <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_MKNOD\">CAP_MKNOD</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    | <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_DAC_OVERRIDE\">CAP_DAC_OVERRIDE</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    | <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_DAC_READ_SEARCH\">CAP_DAC_READ_SEARCH</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    | <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_FOWNER\">CAP_FOWNER</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    | <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_FSETID\">CAP_FSETID</a>))", 
"", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_FS_MASK_B1\">CAP_FS_MASK_B1</a>     (<a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_MAC_OVERRIDE\">CAP_MAC_OVERRIDE</a>))", 
"", 
"#if <a class=\"id\" href=\"#_KERNEL_CAPABILITY_U32S\">_KERNEL_CAPABILITY_U32S</a> != 2", 
"# <a class=\"id\" href=\"#error\">error</a> <a class=\"id\" href=\"#Fix\">Fix</a> <a class=\"id\" href=\"#up\">up</a> <a class=\"id\" href=\"#hand\">hand</a>-<a class=\"id\" href=\"#coded\">coded</a> <a class=\"id\" href=\"#capability\">capability</a> <a class=\"id\" href=\"#macro\">macro</a> <a class=\"id\" href=\"#initializers\">initializers</a>", 
"#else <span class=\"comment\">/* HAND-CODED capability initializers */</span>", 
"", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_EMPTY_SET\">CAP_EMPTY_SET</a>    ((<a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a>){{ 0, 0 }})", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_FULL_SET\">CAP_FULL_SET</a>     ((<a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a>){{ ~0, ~0 }})", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_INIT_EFF_SET\">CAP_INIT_EFF_SET</a> ((<a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a>){{ ~<a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_SETPCAP\">CAP_SETPCAP</a>), ~0 }})", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_FS_SET\">CAP_FS_SET</a>       ((<a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a>){{ <a class=\"id\" href=\"#CAP_FS_MASK_B0\">CAP_FS_MASK_B0</a> \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    | <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_LINUX_IMMUTABLE\">CAP_LINUX_IMMUTABLE</a>), \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#CAP_FS_MASK_B1\">CAP_FS_MASK_B1</a> } })", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_NFSD_SET\">CAP_NFSD_SET</a>     ((<a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a>){{ <a class=\"id\" href=\"#CAP_FS_MASK_B0\">CAP_FS_MASK_B0</a> \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    | <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#CAP_SYS_RESOURCE\">CAP_SYS_RESOURCE</a>), \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#CAP_FS_MASK_B1\">CAP_FS_MASK_B1</a> } })", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _KERNEL_CAPABILITY_U32S != 2 */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_INIT_INH_SET\">CAP_INIT_INH_SET</a>    <a class=\"id\" href=\"#CAP_EMPTY_SET\">CAP_EMPTY_SET</a>", 
"", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cap_clear\">cap_clear</a>(<a class=\"id\" href=\"#c\">c</a>)         do { (<a class=\"id\" href=\"#c\">c</a>) = <a class=\"id\" href=\"#__cap_empty_set\">__cap_empty_set</a>; } while (0)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cap_set_full\">cap_set_full</a>(<a class=\"id\" href=\"#c\">c</a>)      do { (<a class=\"id\" href=\"#c\">c</a>) = <a class=\"id\" href=\"#__cap_full_set\">__cap_full_set</a>; } while (0)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cap_set_init_eff\">cap_set_init_eff</a>(<a class=\"id\" href=\"#c\">c</a>)  do { (<a class=\"id\" href=\"#c\">c</a>) = <a class=\"id\" href=\"#__cap_init_eff_set\">__cap_init_eff_set</a>; } while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cap_raise\">cap_raise</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#flag\">flag</a>)  ((<a class=\"id\" href=\"#c\">c</a>).<a class=\"id\" href=\"#cap\">cap</a>[<a class=\"id\" href=\"#CAP_TO_INDEX\">CAP_TO_INDEX</a>(<a class=\"id\" href=\"#flag\">flag</a>)] |= <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#flag\">flag</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cap_lower\">cap_lower</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#flag\">flag</a>)  ((<a class=\"id\" href=\"#c\">c</a>).<a class=\"id\" href=\"#cap\">cap</a>[<a class=\"id\" href=\"#CAP_TO_INDEX\">CAP_TO_INDEX</a>(<a class=\"id\" href=\"#flag\">flag</a>)] &= ~<a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#flag\">flag</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cap_raised\">cap_raised</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#flag\">flag</a>) ((<a class=\"id\" href=\"#c\">c</a>).<a class=\"id\" href=\"#cap\">cap</a>[<a class=\"id\" href=\"#CAP_TO_INDEX\">CAP_TO_INDEX</a>(<a class=\"id\" href=\"#flag\">flag</a>)] &amp; <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#flag\">flag</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_BOP_ALL\">CAP_BOP_ALL</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#OP\">OP</a>)                                    \\", 
"do {                                                                \\", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#__capi\">__capi</a>;                                            \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CAP_FOR_EACH_U32\">CAP_FOR_EACH_U32</a>(<a class=\"id\" href=\"#__capi\">__capi</a>) {                                  \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#cap\">cap</a>[<a class=\"id\" href=\"#__capi\">__capi</a>] = <a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#cap\">cap</a>[<a class=\"id\" href=\"#__capi\">__capi</a>] <a class=\"id\" href=\"#OP\">OP</a> <a class=\"id\" href=\"#b\">b</a>.<a class=\"id\" href=\"#cap\">cap</a>[<a class=\"id\" href=\"#__capi\">__capi</a>];     \\", 
"<span class=\"ts\"/>}                                                           \\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CAP_UOP_ALL\">CAP_UOP_ALL</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#OP\">OP</a>)                                       \\", 
"do {                                                                \\", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#__capi\">__capi</a>;                                            \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CAP_FOR_EACH_U32\">CAP_FOR_EACH_U32</a>(<a class=\"id\" href=\"#__capi\">__capi</a>) {                                  \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#cap\">cap</a>[<a class=\"id\" href=\"#__capi\">__capi</a>] = <a class=\"id\" href=\"#OP\">OP</a> <a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#cap\">cap</a>[<a class=\"id\" href=\"#__capi\">__capi</a>];                   \\", 
"<span class=\"ts\"/>}                                                           \\", 
"} while (0)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#cap_combine\">cap_combine</a>(const <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CAP_BOP_ALL\">CAP_BOP_ALL</a>(<a class=\"id\" href=\"#dest\">dest</a>, <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, |);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dest\">dest</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#cap_intersect\">cap_intersect</a>(const <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CAP_BOP_ALL\">CAP_BOP_ALL</a>(<a class=\"id\" href=\"#dest\">dest</a>, <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, &amp;);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dest\">dest</a>;", 
"}", 
];
xr_frag_insert('l/b7/d77d5de4217e5f10316f7817f9a6b12ea4725c.xr', __xr_tmp);
