var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#gso_size\">gso_size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Bytes to append to hdr_len per frame */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#csum_start\">csum_start</a>;<span class=\"ts\"/><span class=\"comment\">/* Position to start checksumming from */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#csum_offset\">csum_offset</a>;<span class=\"ts\"/><span class=\"comment\">/* Offset after that to place checksum */</span>", 
"};", 
"", 
"<span class=\"comment\">/* This is the version of the header to use when the MRG_RXBUF</span>", 
"<span class=\"comment\"> * feature has been negotiated. */</span>", 
"struct <a class=\"id\" href=\"#virtio_net_hdr_mrg_rxbuf\">virtio_net_hdr_mrg_rxbuf</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_net_hdr\">virtio_net_hdr</a> <a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#num_buffers\">num_buffers</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of merged rx buffers */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Control virtqueue data structures</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The control virtqueue expects a header in the first sg entry</span>", 
"<span class=\"comment\"> * and an ack/status response in the last entry.  Data for the</span>", 
"<span class=\"comment\"> * command goes in between.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#virtio_net_ctrl_hdr\">virtio_net_ctrl_hdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"typedef <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#virtio_net_ctrl_ack\">virtio_net_ctrl_ack</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_NET_OK\">VIRTIO_NET_OK</a>     0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_NET_ERR\">VIRTIO_NET_ERR</a>    1", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Control the RX mode, ie. promisucous, allmulti, etc...</span>", 
"<span class=\"comment\"> * All commands require an \"out\" sg entry containing a 1 byte</span>", 
"<span class=\"comment\"> * state value, zero = disable, non-zero = enable.  Commands</span>", 
"<span class=\"comment\"> * 0 and 1 are supported with the VIRTIO_NET_F_CTRL_RX feature.</span>", 
"<span class=\"comment\"> * Commands 2-5 are added with VIRTIO_NET_F_CTRL_RX_EXTRA.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX\">VIRTIO_NET_CTRL_RX</a>    0", 
" #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX_PROMISC\">VIRTIO_NET_CTRL_RX_PROMISC</a>      0", 
" #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX_ALLMULTI\">VIRTIO_NET_CTRL_RX_ALLMULTI</a>     1", 
" #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX_ALLUNI\">VIRTIO_NET_CTRL_RX_ALLUNI</a>       2", 
" #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX_NOMULTI\">VIRTIO_NET_CTRL_RX_NOMULTI</a>      3", 
" #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX_NOUNI\">VIRTIO_NET_CTRL_RX_NOUNI</a>        4", 
" #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX_NOBCAST\">VIRTIO_NET_CTRL_RX_NOBCAST</a>      5", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Control the MAC filter table.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The MAC filter table is managed by the hypervisor, the guest should</span>", 
"<span class=\"comment\"> * assume the size is infinite.  Filtering should be considered</span>", 
"<span class=\"comment\"> * non-perfect, ie. based on hypervisor resources, the guest may</span>", 
];
xr_frag_insert('l/b7/ee4cbb8a42849aabcd2150ede085c11c613411.xr', __xr_tmp);
