var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__PAT_INTERNAL_H_\">__PAT_INTERNAL_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__PAT_INTERNAL_H_\">__PAT_INTERNAL_H_</a>", 
"", 
"extern int <a class=\"id\" href=\"#pat_debug_enable\">pat_debug_enable</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dprintk\">dprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#arg\">arg</a>...) \\", 
"<span class=\"ts\"/>do { if (<a class=\"id\" href=\"#pat_debug_enable\">pat_debug_enable</a>) <a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#fmt\">fmt</a>, ##<a class=\"id\" href=\"#arg\">arg</a>); } while (0)", 
"", 
"struct <a class=\"id\" href=\"#memtype\">memtype</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subtree_max_end\">subtree_max_end</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb\">rb</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> char *<a class=\"id\" href=\"#cattr_name\">cattr_name</a>(unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#_PAGE_CACHE_MASK\">_PAGE_CACHE_MASK</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#_PAGE_CACHE_UC\">_PAGE_CACHE_UC</a>:<span class=\"ts\"/><span class=\"ts\"/>return \"uncached\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#_PAGE_CACHE_UC_MINUS\">_PAGE_CACHE_UC_MINUS</a>:<span class=\"ts\"/>return \"uncached-minus\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#_PAGE_CACHE_WB\">_PAGE_CACHE_WB</a>:<span class=\"ts\"/><span class=\"ts\"/>return \"write-back\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#_PAGE_CACHE_WC\">_PAGE_CACHE_WC</a>:<span class=\"ts\"/><span class=\"ts\"/>return \"write-combining\";", 
"<span class=\"ts\"/>default:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return \"broken\";", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_PAT\">CONFIG_X86_PAT</a>", 
"extern int <a class=\"id\" href=\"#rbt_memtype_check_insert\">rbt_memtype_check_insert</a>(struct <a class=\"id\" href=\"#memtype\">memtype</a> *<a class=\"id\" href=\"#new\">new</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#new_type\">new_type</a>);", 
"extern struct <a class=\"id\" href=\"#memtype\">memtype</a> *<a class=\"id\" href=\"#rbt_memtype_erase\">rbt_memtype_erase</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>);", 
"extern struct <a class=\"id\" href=\"#memtype\">memtype</a> *<a class=\"id\" href=\"#rbt_memtype_lookup\">rbt_memtype_lookup</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#addr\">addr</a>);", 
"extern int <a class=\"id\" href=\"#rbt_memtype_copy_nth_element\">rbt_memtype_copy_nth_element</a>(struct <a class=\"id\" href=\"#memtype\">memtype</a> *<a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rbt_memtype_check_insert\">rbt_memtype_check_insert</a>(struct <a class=\"id\" href=\"#memtype\">memtype</a> *<a class=\"id\" href=\"#new\">new</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#new_type\">new_type</a>)", 
"{ return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#memtype\">memtype</a> *<a class=\"id\" href=\"#rbt_memtype_erase\">rbt_memtype_erase</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>)", 
"{ return <a class=\"id\" href=\"#NULL\">NULL</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#memtype\">memtype</a> *<a class=\"id\" href=\"#rbt_memtype_lookup\">rbt_memtype_lookup</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{ return <a class=\"id\" href=\"#NULL\">NULL</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rbt_memtype_copy_nth_element\">rbt_memtype_copy_nth_element</a>(struct <a class=\"id\" href=\"#memtype\">memtype</a> *<a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{ return 0; }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __PAT_INTERNAL_H_ */</span>", 
];
xr_frag_insert('l/b8/3ef3b9aa7694c7fc3e2b59e30856c38f7bafb5.xr', __xr_tmp);
