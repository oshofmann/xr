var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is an implementation of the notion of \"decrement a</span>", 
"<span class=\"comment\"> * reference count, and return locked if it decremented to zero\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE NOTE NOTE! This is _not_ equivalent to</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if (atomic_dec_and_test(&amp;atomic)) {</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>spin_lock(&amp;lock);</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>return 1;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>}</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>return 0;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * because the spin-lock and the decrement must be</span>", 
"<span class=\"comment\"> * \"atomic\".</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#_atomic_dec_and_lock\">_atomic_dec_and_lock</a>(<a class=\"id\" href=\"#atomic_t\">atomic_t</a> *<a class=\"id\" href=\"#atomic\">atomic</a>, <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Subtract 1 from counter unless that drops it to 0 (ie. it was 1) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_add_unless\">atomic_add_unless</a>(<a class=\"id\" href=\"#atomic\">atomic</a>, -1, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Otherwise do it the slow way */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(<a class=\"id\" href=\"#atomic\">atomic</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_atomic_dec_and_lock\">_atomic_dec_and_lock</a>);", 
];
xr_frag_insert('l/b8/5cfe954395d1549688e297cabd98a5d6a17356.xr', __xr_tmp);
