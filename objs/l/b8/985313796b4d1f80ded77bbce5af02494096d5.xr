var __xr_tmp = [
"<span class=\"comment\">/* internal.h: authentication token and access key management internal defs</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2003-5, 2007 Red Hat, Inc. All Rights Reserved.</span>", 
"<span class=\"comment\"> * Written by David Howells (dhowells@redhat.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_INTERNAL_H\">_INTERNAL_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_INTERNAL_H\">_INTERNAL_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#key\">key</a>-<a class=\"id\" href=\"#type\">type</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KDEBUG\">__KDEBUG</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kenter\">kenter</a>(<a class=\"id\" href=\"#FMT\">FMT</a>, ...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"==> %s(\"<a class=\"id\" href=\"#FMT\">FMT</a>\")\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, ##<a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kleave\">kleave</a>(<a class=\"id\" href=\"#FMT\">FMT</a>, ...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"<== %s()\"<a class=\"id\" href=\"#FMT\">FMT</a>\"\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, ##<a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kdebug\">kdebug</a>(<a class=\"id\" href=\"#FMT\">FMT</a>, ...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"   \"<a class=\"id\" href=\"#FMT\">FMT</a>\"\\n\", ##<a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kenter\">kenter</a>(<a class=\"id\" href=\"#FMT\">FMT</a>, ...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#no_printk\">no_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"==> %s(\"<a class=\"id\" href=\"#FMT\">FMT</a>\")\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, ##<a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kleave\">kleave</a>(<a class=\"id\" href=\"#FMT\">FMT</a>, ...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#no_printk\">no_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"<== %s()\"<a class=\"id\" href=\"#FMT\">FMT</a>\"\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, ##<a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kdebug\">kdebug</a>(<a class=\"id\" href=\"#FMT\">FMT</a>, ...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#no_printk\">no_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#FMT\">FMT</a>\"\\n\", ##<a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern struct <a class=\"id\" href=\"#key_type\">key_type</a> <a class=\"id\" href=\"#key_type_user\">key_type_user</a>;", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * keep track of keys for a user</span>", 
"<span class=\"comment\"> * - this needs to be separate to user_struct to avoid a refcount-loop</span>", 
"<span class=\"comment\"> *   (user_struct pins some keyrings which pin this struct)</span>", 
"<span class=\"comment\"> * - this also keeps track of keys under request from userspace for this UID</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key_user\">key_user</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cons_lock\">cons_lock</a>;<span class=\"ts\"/><span class=\"comment\">/* construction initiation lock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#usage\">usage</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for accessing qnkeys &amp; qnbytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nkeys\">nkeys</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of keys */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nikeys\">nikeys</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of instantiated keys */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a><span class=\"ts\"/>*<a class=\"id\" href=\"#user_ns\">user_ns</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qnkeys\">qnkeys</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of keys allocated to this user */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qnbytes\">qnbytes</a>;<span class=\"ts\"/><span class=\"comment\">/* number of bytes allocated to this user */</span>", 
"};", 
"", 
"extern struct <a class=\"id\" href=\"#rb_root\">rb_root</a><span class=\"ts\"/><a class=\"id\" href=\"#key_user_tree\">key_user_tree</a>;", 
"extern <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><a class=\"id\" href=\"#key_user_lock\">key_user_lock</a>;", 
"extern struct <a class=\"id\" href=\"#key_user\">key_user</a><span class=\"ts\"/><a class=\"id\" href=\"#root_key_user\">root_key_user</a>;", 
"", 
"extern struct <a class=\"id\" href=\"#key_user\">key_user</a> *<a class=\"id\" href=\"#key_user_lookup\">key_user_lookup</a>(<a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#uid\">uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#user_ns\">user_ns</a>);", 
"extern void <a class=\"id\" href=\"#key_user_put\">key_user_put</a>(struct <a class=\"id\" href=\"#key_user\">key_user</a> *<a class=\"id\" href=\"#user\">user</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * key quota limits</span>", 
"<span class=\"comment\"> * - root has its own separate limits to everyone else</span>", 
"<span class=\"comment\"> */</span>", 
"extern unsigned <a class=\"id\" href=\"#key_quota_root_maxkeys\">key_quota_root_maxkeys</a>;", 
"extern unsigned <a class=\"id\" href=\"#key_quota_root_maxbytes\">key_quota_root_maxbytes</a>;", 
"extern unsigned <a class=\"id\" href=\"#key_quota_maxkeys\">key_quota_maxkeys</a>;", 
"extern unsigned <a class=\"id\" href=\"#key_quota_maxbytes\">key_quota_maxbytes</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEYQUOTA_LINK_BYTES\">KEYQUOTA_LINK_BYTES</a><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* a link in a keyring is worth 4 bytes */</span>", 
"", 
"", 
"extern struct <a class=\"id\" href=\"#rb_root\">rb_root</a> <a class=\"id\" href=\"#key_serial_tree\">key_serial_tree</a>;", 
"extern <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>;", 
"extern struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#key_construction_mutex\">key_construction_mutex</a>;", 
"extern <a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> <a class=\"id\" href=\"#request_key_conswq\">request_key_conswq</a>;", 
"", 
"", 
"extern struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#key_type_lookup\">key_type_lookup</a>(const char *<a class=\"id\" href=\"#type\">type</a>);", 
"extern void <a class=\"id\" href=\"#key_type_put\">key_type_put</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#ktype\">ktype</a>);", 
"", 
"extern int <a class=\"id\" href=\"#__key_link_begin\">__key_link_begin</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring\">keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#keyring_list\">keyring_list</a> **<a class=\"id\" href=\"#_prealloc\">_prealloc</a>);", 
"extern int <a class=\"id\" href=\"#__key_link_check_live_key\">__key_link_check_live_key</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring\">keyring</a>, struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>);", 
"extern void <a class=\"id\" href=\"#__key_link\">__key_link</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring\">keyring</a>, struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#keyring_list\">keyring_list</a> **<a class=\"id\" href=\"#_prealloc\">_prealloc</a>);", 
"extern void <a class=\"id\" href=\"#__key_link_end\">__key_link_end</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring\">keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#keyring_list\">keyring_list</a> *<a class=\"id\" href=\"#prealloc\">prealloc</a>);", 
"", 
"extern <a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#__keyring_search_one\">__keyring_search_one</a>(<a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#key_perm_t\">key_perm_t</a> <a class=\"id\" href=\"#perm\">perm</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring_search_instkey\">keyring_search_instkey</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring\">keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#target_id\">target_id</a>);", 
"", 
"typedef int (*<a class=\"id\" href=\"#key_match_func_t\">key_match_func_t</a>)(const struct <a class=\"id\" href=\"#key\">key</a> *, const void *);", 
"", 
"extern <a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#keyring_search_aux\">keyring_search_aux</a>(<a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const void *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key_match_func_t\">key_match_func_t</a> <a class=\"id\" href=\"#match\">match</a>);", 
"", 
"extern <a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#search_my_process_keyrings\">search_my_process_keyrings</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const void *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key_match_func_t\">key_match_func_t</a> <a class=\"id\" href=\"#match\">match</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>);", 
"extern <a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#search_process_keyrings\">search_process_keyrings</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const void *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#key_match_func_t\">key_match_func_t</a> <a class=\"id\" href=\"#match\">match</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#find_keyring_by_name\">find_keyring_by_name</a>(const char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#skip_perm_check\">skip_perm_check</a>);", 
"", 
"extern int <a class=\"id\" href=\"#install_user_keyrings\">install_user_keyrings</a>(void);", 
"extern int <a class=\"id\" href=\"#install_thread_keyring_to_cred\">install_thread_keyring_to_cred</a>(struct <a class=\"id\" href=\"#cred\">cred</a> *);", 
"extern int <a class=\"id\" href=\"#install_process_keyring_to_cred\">install_process_keyring_to_cred</a>(struct <a class=\"id\" href=\"#cred\">cred</a> *);", 
"extern int <a class=\"id\" href=\"#install_session_keyring_to_cred\">install_session_keyring_to_cred</a>(struct <a class=\"id\" href=\"#cred\">cred</a> *, struct <a class=\"id\" href=\"#key\">key</a> *);", 
"", 
"extern struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#request_key_and_link\">request_key_and_link</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#aux\">aux</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"extern int <a class=\"id\" href=\"#lookup_user_key_possessed\">lookup_user_key_possessed</a>(const struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, const void *<a class=\"id\" href=\"#target\">target</a>);", 
"extern <a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#key_perm_t\">key_perm_t</a> <a class=\"id\" href=\"#perm\">perm</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a><span class=\"ts\"/>0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEY_LOOKUP_PARTIAL\">KEY_LOOKUP_PARTIAL</a><span class=\"ts\"/>0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEY_LOOKUP_FOR_UNLINK\">KEY_LOOKUP_FOR_UNLINK</a><span class=\"ts\"/>0x04", 
"", 
"extern long <a class=\"id\" href=\"#join_session_keyring\">join_session_keyring</a>(const char *<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"extern unsigned <a class=\"id\" href=\"#key_gc_delay\">key_gc_delay</a>;", 
"extern void <a class=\"id\" href=\"#keyring_gc\">keyring_gc</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring\">keyring</a>, <a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#limit\">limit</a>);", 
"extern void <a class=\"id\" href=\"#key_schedule_gc\">key_schedule_gc</a>(<a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#expiry_at\">expiry_at</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * check to see whether permission is granted to use a key in the desired way</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#key_task_permission\">key_task_permission</a>(const <a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#key_perm_t\">key_perm_t</a> <a class=\"id\" href=\"#perm\">perm</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#key_permission\">key_permission</a>(const <a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>, <a class=\"id\" href=\"#key_perm_t\">key_perm_t</a> <a class=\"id\" href=\"#perm\">perm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#key_task_permission\">key_task_permission</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>, <a class=\"id\" href=\"#current_cred\">current_cred</a>(), <a class=\"id\" href=\"#perm\">perm</a>);", 
"}", 
"", 
"<span class=\"comment\">/* required permissions */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#KEY_VIEW\">KEY_VIEW</a><span class=\"ts\"/>0x01<span class=\"ts\"/><span class=\"comment\">/* require permission to view attributes */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#KEY_READ\">KEY_READ</a><span class=\"ts\"/>0x02<span class=\"ts\"/><span class=\"comment\">/* require permission to read content */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a><span class=\"ts\"/>0x04<span class=\"ts\"/><span class=\"comment\">/* require permission to update / modify */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#KEY_SEARCH\">KEY_SEARCH</a><span class=\"ts\"/>0x08<span class=\"ts\"/><span class=\"comment\">/* require permission to search (keyring) or find (key) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#KEY_LINK\">KEY_LINK</a><span class=\"ts\"/>0x10<span class=\"ts\"/><span class=\"comment\">/* require permission to link */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#KEY_SETATTR\">KEY_SETATTR</a><span class=\"ts\"/>0x20<span class=\"ts\"/><span class=\"comment\">/* require permission to change attributes */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#KEY_ALL\">KEY_ALL</a><span class=\"ts\"/><span class=\"ts\"/>0x3f<span class=\"ts\"/><span class=\"comment\">/* all the above permissions */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * request_key authorisation</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#target_key\">target_key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cred\">cred</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#callout_info\">callout_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#callout_len\">callout_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a>;", 
"};", 
"", 
"extern struct <a class=\"id\" href=\"#key_type\">key_type</a> <a class=\"id\" href=\"#key_type_request_key_auth\">key_type_request_key_auth</a>;", 
"extern struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#request_key_auth_new\">request_key_auth_new</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key_get_instantiation_authkey\">key_get_instantiation_authkey</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#target_id\">target_id</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * keyctl functions</span>", 
"<span class=\"comment\"> */</span>", 
"extern long <a class=\"id\" href=\"#keyctl_get_keyring_ID\">keyctl_get_keyring_ID</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, int);", 
"extern long <a class=\"id\" href=\"#keyctl_join_session_keyring\">keyctl_join_session_keyring</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *);", 
"extern long <a class=\"id\" href=\"#keyctl_update_key\">keyctl_update_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, const void <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_revoke_key\">keyctl_revoke_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_keyring_clear\">keyctl_keyring_clear</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_keyring_link\">keyctl_keyring_link</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_keyring_unlink\">keyctl_keyring_unlink</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_describe_key\">keyctl_describe_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_keyring_search\">keyctl_keyring_search</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_read_key\">keyctl_read_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_chown_key\">keyctl_chown_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_setperm_key\">keyctl_setperm_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, <a class=\"id\" href=\"#key_perm_t\">key_perm_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_instantiate_key\">keyctl_instantiate_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, const void <a class=\"id\" href=\"#__user\">__user</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_negate_key\">keyctl_negate_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, unsigned, <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_set_reqkey_keyring\">keyctl_set_reqkey_keyring</a>(int);", 
"extern long <a class=\"id\" href=\"#keyctl_set_timeout\">keyctl_set_timeout</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, unsigned);", 
"extern long <a class=\"id\" href=\"#keyctl_assume_authority\">keyctl_assume_authority</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_get_security\">keyctl_get_security</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#keyid\">keyid</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buflen\">buflen</a>);", 
"extern long <a class=\"id\" href=\"#keyctl_session_to_parent\">keyctl_session_to_parent</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * debugging key validation</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#KEY_DEBUGGING\">KEY_DEBUGGING</a>", 
"extern void <a class=\"id\" href=\"#__key_check\">__key_check</a>(const struct <a class=\"id\" href=\"#key\">key</a> *);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#key_check\">key_check</a>(const struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a> && (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key\">key</a>) || <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#magic\">magic</a> != <a class=\"id\" href=\"#KEY_DEBUG_MAGIC\">KEY_DEBUG_MAGIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__key_check\">__key_check</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"}", 
"", 
"#else", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#key_check\">key_check</a>(<a class=\"id\" href=\"#key\">key</a>) do {} while(0)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _INTERNAL_H */</span>", 
];
xr_frag_insert('l/b8/985313796b4d1f80ded77bbce5af02494096d5.xr', __xr_tmp);
