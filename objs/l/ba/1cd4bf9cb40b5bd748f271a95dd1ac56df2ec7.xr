var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Holds initial configuration information for devices.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version:<span class=\"ts\"/>@(#)Space.c<span class=\"ts\"/>1.0.7<span class=\"ts\"/>08/12/93</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Donald J. Becker, &lt;becker@scyld.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Changelog:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Stephen Hemminger (09/2003)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- get rid of pre-linked dev list, dynamic device allocation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Paul Gortmaker (03/2002)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- struct init cleanup, enable multiple ISA autoprobes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Arnaldo Carvalho de Melo &lt;acme@conectiva.com.br&gt; - 09/1999</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- fix sbni: s/device/net_device/</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Paul Gortmaker (06/98):</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/> - sort probes in a sane way, make sure all (safe) probes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>   get run once &amp; failed autoprobes don't autoprobe again.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#etherdevice\">etherdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#trdevice\">trdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* A unified ethernet device probe.  This is the easiest way to have every</span>", 
"<span class=\"comment\">   ethernet adaptor have the name \"eth[0123...]\".</span>", 
"<span class=\"comment\">   */</span>", 
"", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ne2_probe\">ne2_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#hp100_probe\">hp100_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ultra_probe\">ultra_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ultra32_probe\">ultra32_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#wd_probe\">wd_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#el2_probe\">el2_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ne_probe\">ne_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#hp_probe\">hp_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#hp_plus_probe\">hp_plus_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#express_probe\">express_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#eepro_probe\">eepro_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#at1700_probe\">at1700_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#fmv18x_probe\">fmv18x_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#eth16i_probe\">eth16i_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#i82596_probe\">i82596_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ewrk3_probe\">ewrk3_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#el1_probe\">el1_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#wavelan_probe\">wavelan_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#arlan_probe\">arlan_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#el16_probe\">el16_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#elmc_probe\">elmc_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#elplus_probe\">elplus_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ac3200_probe\">ac3200_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#es_probe\">es_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#lne390_probe\">lne390_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#e2100_probe\">e2100_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ni5010_probe\">ni5010_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ni52_probe\">ni52_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ni65_probe\">ni65_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#sonic_probe\">sonic_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#SK_init\">SK_init</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#seeq8005_probe\">seeq8005_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#smc_init\">smc_init</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#atarilance_probe\">atarilance_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#sun3lance_probe\">sun3lance_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#sun3_82586_probe\">sun3_82586_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#apne_probe\">apne_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#cs89x0_probe\">cs89x0_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#hplance_probe\">hplance_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#bagetlance_probe\">bagetlance_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#mvme147lance_probe\">mvme147lance_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#tc515_probe\">tc515_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#lance_probe\">lance_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#mac8390_probe\">mac8390_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#mac89x0_probe\">mac89x0_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#mc32_probe\">mc32_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#cops_probe\">cops_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ltpc_probe\">ltpc_probe</a>(void);", 
"", 
"<span class=\"comment\">/* Detachable devices (\"pocket adaptors\") */</span>", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#de620_probe\">de620_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"", 
"<span class=\"comment\">/* Fibre Channel adapters */</span>", 
"extern int <a class=\"id\" href=\"#iph5526_probe\">iph5526_probe</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"comment\">/* SBNI adapters */</span>", 
"extern int <a class=\"id\" href=\"#sbni_probe\">sbni_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"", 
"struct <a class=\"id\" href=\"#devprobe2\">devprobe2</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *(*<a class=\"id\" href=\"#probe\">probe</a>)(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#status\">status</a>;<span class=\"ts\"/><span class=\"comment\">/* non-zero if autoprobe has failed */</span>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#probe_list2\">probe_list2</a>(int <a class=\"id\" href=\"#unit\">unit</a>, struct <a class=\"id\" href=\"#devprobe2\">devprobe2</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#autoprobe\">autoprobe</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#probe\">probe</a>; <a class=\"id\" href=\"#p\">p</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#autoprobe\">autoprobe</a> && <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#probe\">probe</a>(<a class=\"id\" href=\"#unit\">unit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#autoprobe\">autoprobe</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is a bit of an artificial separation as there are PCI drivers</span>", 
"<span class=\"comment\"> * that also probe for EISA cards (in the PCI group) and there are ISA</span>", 
"<span class=\"comment\"> * drivers that probe for EISA cards (in the ISA group).  These are the</span>", 
"<span class=\"comment\"> * legacy EISA only driver probes, and also the legacy PCI probes</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#devprobe2\">devprobe2</a> <a class=\"id\" href=\"#eisa_probes\">eisa_probes</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ULTRA32\">CONFIG_ULTRA32</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ultra32_probe\">ultra32_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AC3200\">CONFIG_AC3200</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ac3200_probe\">ac3200_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ES3210\">CONFIG_ES3210</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#es_probe\">es_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LNE390\">CONFIG_LNE390</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#lne390_probe\">lne390_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#NULL\">NULL</a>, 0},", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#devprobe2\">devprobe2</a> <a class=\"id\" href=\"#mca_probes\">mca_probes</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NE2_MCA\">CONFIG_NE2_MCA</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ne2_probe\">ne2_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ELMC\">CONFIG_ELMC</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3c523 */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#elmc_probe\">elmc_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ELMC_II\">CONFIG_ELMC_II</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3c527 */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#mc32_probe\">mc32_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#NULL\">NULL</a>, 0},", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ISA probes that touch addresses &lt; 0x400 (including those that also</span>", 
"<span class=\"comment\"> * look for EISA/PCI/MCA cards in addition to ISA cards).</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#devprobe2\">devprobe2</a> <a class=\"id\" href=\"#isa_probes\">isa_probes</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_HP100\">CONFIG_HP100</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_ISA\">CONFIG_ISA</a>)<span class=\"ts\"/><span class=\"comment\">/* ISA, EISA */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#hp100_probe\">hp100_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_3C515\">CONFIG_3C515</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#tc515_probe\">tc515_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ULTRA\">CONFIG_ULTRA</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ultra_probe\">ultra_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_WD80x3\">CONFIG_WD80x3</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#wd_probe\">wd_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EL2\">CONFIG_EL2</a> <span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3c503 */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#el2_probe\">el2_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPLAN\">CONFIG_HPLAN</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#hp_probe\">hp_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPLAN_PLUS\">CONFIG_HPLAN_PLUS</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#hp_plus_probe\">hp_plus_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_E2100\">CONFIG_E2100</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Cabletron E21xx series. */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#e2100_probe\">e2100_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NE2000\">CONFIG_NE2000</a>) || \\", 
"    <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NE_H8300\">CONFIG_NE_H8300</a>)  <span class=\"comment\">/* ISA (use ne2k-pci for PCI cards) */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ne_probe\">ne_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LANCE\">CONFIG_LANCE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ISA/VLB (use pcnet32 for PCI cards) */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#lance_probe\">lance_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMC9194\">CONFIG_SMC9194</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#smc_init\">smc_init</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SEEQ8005\">CONFIG_SEEQ8005</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#seeq8005_probe\">seeq8005_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CS89x0\">CONFIG_CS89x0</a>", 
" <span class=\"ts\"/>{<a class=\"id\" href=\"#cs89x0_probe\">cs89x0_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AT1700\">CONFIG_AT1700</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#at1700_probe\">at1700_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ETH16I\">CONFIG_ETH16I</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#eth16i_probe\">eth16i_probe</a>, 0},<span class=\"ts\"/><span class=\"comment\">/* ICL EtherTeam 16i/32 */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EEXPRESS\">CONFIG_EEXPRESS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Intel EtherExpress */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#express_probe\">express_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EEXPRESS_PRO\">CONFIG_EEXPRESS_PRO</a><span class=\"ts\"/><span class=\"comment\">/* Intel EtherExpress Pro/10 */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#eepro_probe\">eepro_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EWRK3\">CONFIG_EWRK3</a>             <span class=\"comment\">/* DEC EtherWORKS 3 */</span>", 
"    <span class=\"ts\"/>{<a class=\"id\" href=\"#ewrk3_probe\">ewrk3_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_APRICOT\">CONFIG_APRICOT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_MVME16x_NET\">CONFIG_MVME16x_NET</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_BVME6000_NET\">CONFIG_BVME6000_NET</a>)<span class=\"ts\"/><span class=\"comment\">/* Intel I82596 */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#i82596_probe\">i82596_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EL1\">CONFIG_EL1</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3c501 */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#el1_probe\">el1_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EL16\">CONFIG_EL16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3c507 */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#el16_probe\">el16_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ELPLUS\">CONFIG_ELPLUS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3c505 */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#elplus_probe\">elplus_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NI5010\">CONFIG_NI5010</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ni5010_probe\">ni5010_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NI52\">CONFIG_NI52</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ni52_probe\">ni52_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NI65\">CONFIG_NI65</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ni65_probe\">ni65_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#NULL\">NULL</a>, 0},", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#devprobe2\">devprobe2</a> <a class=\"id\" href=\"#parport_probes\">parport_probes</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DE620\">CONFIG_DE620</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* D-Link DE-620 adapter */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#de620_probe\">de620_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#NULL\">NULL</a>, 0},", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#devprobe2\">devprobe2</a> <a class=\"id\" href=\"#m68k_probes\">m68k_probes</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ATARILANCE\">CONFIG_ATARILANCE</a><span class=\"ts\"/><span class=\"comment\">/* Lance-based Atari ethernet boards */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#atarilance_probe\">atarilance_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SUN3LANCE\">CONFIG_SUN3LANCE</a>         <span class=\"comment\">/* sun3 onboard Lance chip */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#sun3lance_probe\">sun3lance_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SUN3_82586\">CONFIG_SUN3_82586</a>        <span class=\"comment\">/* sun3 onboard Intel 82586 chip */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#sun3_82586_probe\">sun3_82586_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_APNE\">CONFIG_APNE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* A1200 PCMCIA NE2000 */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#apne_probe\">apne_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MVME147_NET\">CONFIG_MVME147_NET</a><span class=\"ts\"/><span class=\"comment\">/* MVME147 internal Ethernet */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#mvme147lance_probe\">mvme147lance_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MAC8390\">CONFIG_MAC8390</a>           <span class=\"comment\">/* NuBus NS8390-based cards */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#mac8390_probe\">mac8390_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MAC89x0\">CONFIG_MAC89x0</a>", 
" <span class=\"ts\"/>{<a class=\"id\" href=\"#mac89x0_probe\">mac89x0_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#NULL\">NULL</a>, 0},", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Unified ethernet device probe, segmented per architecture and</span>", 
"<span class=\"comment\"> * per bus interface. This drives the legacy devices only for now.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ethif_probe2\">ethif_probe2</a>(int <a class=\"id\" href=\"#unit\">unit</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base_addr\">base_addr</a> = <a class=\"id\" href=\"#netdev_boot_base\">netdev_boot_base</a>(\"eth\", <a class=\"id\" href=\"#unit\">unit</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#base_addr\">base_addr</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>(void)(<span class=\"ts\"/><a class=\"id\" href=\"#probe_list2\">probe_list2</a>(<a class=\"id\" href=\"#unit\">unit</a>, <a class=\"id\" href=\"#m68k_probes\">m68k_probes</a>, <a class=\"id\" href=\"#base_addr\">base_addr</a> == 0) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#probe_list2\">probe_list2</a>(<a class=\"id\" href=\"#unit\">unit</a>, <a class=\"id\" href=\"#eisa_probes\">eisa_probes</a>, <a class=\"id\" href=\"#base_addr\">base_addr</a> == 0) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#probe_list2\">probe_list2</a>(<a class=\"id\" href=\"#unit\">unit</a>, <a class=\"id\" href=\"#mca_probes\">mca_probes</a>, <a class=\"id\" href=\"#base_addr\">base_addr</a> == 0) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#probe_list2\">probe_list2</a>(<a class=\"id\" href=\"#unit\">unit</a>, <a class=\"id\" href=\"#isa_probes\">isa_probes</a>, <a class=\"id\" href=\"#base_addr\">base_addr</a> == 0) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#probe_list2\">probe_list2</a>(<a class=\"id\" href=\"#unit\">unit</a>, <a class=\"id\" href=\"#parport_probes\">parport_probes</a>, <a class=\"id\" href=\"#base_addr\">base_addr</a> == 0));", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TR\">CONFIG_TR</a>", 
"<span class=\"comment\">/* Token-ring device probe */</span>", 
"extern int <a class=\"id\" href=\"#ibmtr_probe_card\">ibmtr_probe_card</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *);", 
"extern struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#smctr_probe\">smctr_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>);", 
"", 
"static struct <a class=\"id\" href=\"#devprobe2\">devprobe2</a> <a class=\"id\" href=\"#tr_probes2\">tr_probes2</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMCTR\">CONFIG_SMCTR</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#smctr_probe\">smctr_probe</a>, 0},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#NULL\">NULL</a>, 0},", 
"};", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#trif_probe\">trif_probe</a>(int <a class=\"id\" href=\"#unit\">unit</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IBMTR\">CONFIG_IBMTR</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#alloc_trdev\">alloc_trdev</a>(0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, \"tr%d\", <a class=\"id\" href=\"#unit\">unit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netdev_boot_setup_check\">netdev_boot_setup_check</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ibmtr_probe_card\">ibmtr_probe_card</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_netdev\">free_netdev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#trif_probe2\">trif_probe2</a>(int <a class=\"id\" href=\"#unit\">unit</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base_addr\">base_addr</a> = <a class=\"id\" href=\"#netdev_boot_base\">netdev_boot_base</a>(\"tr\", <a class=\"id\" href=\"#unit\">unit</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#base_addr\">base_addr</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#probe_list2\">probe_list2</a>(<a class=\"id\" href=\"#unit\">unit</a>, <a class=\"id\" href=\"#tr_probes2\">tr_probes2</a>, <a class=\"id\" href=\"#base_addr\">base_addr</a> == 0);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<span class=\"comment\">/*  Statically configured drivers -- order matters here. */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#net_olddevs_init\">net_olddevs_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num\">num</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SBNI\">CONFIG_SBNI</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#num\">num</a> = 0; <a class=\"id\" href=\"#num\">num</a> &lt; 8; ++<a class=\"id\" href=\"#num\">num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbni_probe\">sbni_probe</a>(<a class=\"id\" href=\"#num\">num</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TR\">CONFIG_TR</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#num\">num</a> = 0; <a class=\"id\" href=\"#num\">num</a> &lt; 8; ++<a class=\"id\" href=\"#num\">num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#trif_probe\">trif_probe</a>(<a class=\"id\" href=\"#num\">num</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trif_probe2\">trif_probe2</a>(<a class=\"id\" href=\"#num\">num</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#num\">num</a> = 0; <a class=\"id\" href=\"#num\">num</a> &lt; 8; ++<a class=\"id\" href=\"#num\">num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ethif_probe2\">ethif_probe2</a>(<a class=\"id\" href=\"#num\">num</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COPS\">CONFIG_COPS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cops_probe\">cops_probe</a>(0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cops_probe\">cops_probe</a>(1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cops_probe\">cops_probe</a>(2);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LTPC\">CONFIG_LTPC</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ltpc_probe\">ltpc_probe</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#net_olddevs_init\">net_olddevs_init</a>);", 
];
xr_frag_insert('l/ba/1cd4bf9cb40b5bd748f271a95dd1ac56df2ec7.xr', __xr_tmp);
