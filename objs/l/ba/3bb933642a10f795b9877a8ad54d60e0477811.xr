var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rss\">rss</a> += <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#nrpages\">nrpages</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total\">total</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function handles some shmctl commands which require the rw_mutex</span>", 
"<span class=\"comment\"> * to be held in write mode.</span>", 
"<span class=\"comment\"> * NOTE: no locks must be held, the rw_mutex is taken inside this function.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#shmctl_down\">shmctl_down</a>(struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>, int <a class=\"id\" href=\"#shmid\">shmid</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#shmid_ds\">shmid_ds</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#version\">version</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#ipcp\">ipcp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmid64_ds\">shmid64_ds</a> <a class=\"id\" href=\"#shmid64\">shmid64</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmid_kernel\">shmid_kernel</a> *<a class=\"id\" href=\"#shp\">shp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#IPC_SET\">IPC_SET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_shmid_from_user\">copy_shmid_from_user</a>(&amp;<a class=\"id\" href=\"#shmid64\">shmid64</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#version\">version</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipcp\">ipcp</a> = <a class=\"id\" href=\"#ipcctl_pre_down\">ipcctl_pre_down</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>), <a class=\"id\" href=\"#shmid\">shmid</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, &amp;<a class=\"id\" href=\"#shmid64\">shmid64</a>.<a class=\"id\" href=\"#shm_perm\">shm_perm</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ipcp\">ipcp</a>, struct <a class=\"id\" href=\"#shmid_kernel\">shmid_kernel</a>, <a class=\"id\" href=\"#shm_perm\">shm_perm</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_shm_shmctl\">security_shm_shmctl</a>(<a class=\"id\" href=\"#shp\">shp</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_RMID\">IPC_RMID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_shm_rmid\">do_shm_rmid</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#ipcp\">ipcp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_up\">out_up</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_SET\">IPC_SET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipc_update_perm\">ipc_update_perm</a>(&amp;<a class=\"id\" href=\"#shmid64\">shmid64</a>.<a class=\"id\" href=\"#shm_perm\">shm_perm</a>, <a class=\"id\" href=\"#ipcp\">ipcp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_ctim\">shm_ctim</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shm_unlock\">shm_unlock</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<a class=\"id\" href=\"#out_up\">out_up</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>).<a class=\"id\" href=\"#rw_mutex\">rw_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#shmctl\">shmctl</a>, int, <a class=\"id\" href=\"#shmid\">shmid</a>, int, <a class=\"id\" href=\"#cmd\">cmd</a>, struct <a class=\"id\" href=\"#shmid_ds\">shmid_ds</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmid_kernel\">shmid_kernel</a> *<a class=\"id\" href=\"#shp\">shp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> &lt; 0 || <a class=\"id\" href=\"#shmid\">shmid</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#version\">version</a> = <a class=\"id\" href=\"#ipc_parse_version\">ipc_parse_version</a>(&amp;<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#nsproxy\">nsproxy</a>-><a class=\"id\" href=\"#ipc_ns\">ipc_ns</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) { <span class=\"comment\">/* replace with proc interface ? */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_INFO\">IPC_INFO</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shminfo64\">shminfo64</a> <a class=\"id\" href=\"#shminfo\">shminfo</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_shm_shmctl\">security_shm_shmctl</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#shminfo\">shminfo</a>, 0, sizeof(<a class=\"id\" href=\"#shminfo\">shminfo</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shminfo\">shminfo</a>.<a class=\"id\" href=\"#shmmni\">shmmni</a> = <a class=\"id\" href=\"#shminfo\">shminfo</a>.<a class=\"id\" href=\"#shmseg\">shmseg</a> = <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#shm_ctlmni\">shm_ctlmni</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shminfo\">shminfo</a>.<a class=\"id\" href=\"#shmmax\">shmmax</a> = <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#shm_ctlmax\">shm_ctlmax</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shminfo\">shminfo</a>.<a class=\"id\" href=\"#shmall\">shmall</a> = <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#shm_ctlall\">shm_ctlall</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shminfo\">shminfo</a>.<a class=\"id\" href=\"#shmmin\">shmmin</a> = <a class=\"id\" href=\"#SHMMIN\">SHMMIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#copy_shminfo_to_user\">copy_shminfo_to_user</a> (<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#shminfo\">shminfo</a>, <a class=\"id\" href=\"#version\">version</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>).<a class=\"id\" href=\"#rw_mutex\">rw_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipc_get_maxid\">ipc_get_maxid</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>).<a class=\"id\" href=\"#rw_mutex\">rw_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#err\">err</a>&lt;0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SHM_INFO\">SHM_INFO</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shm_info\">shm_info</a> <a class=\"id\" href=\"#shm_info\">shm_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_shm_shmctl\">security_shm_shmctl</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#shm_info\">shm_info</a>, 0, sizeof(<a class=\"id\" href=\"#shm_info\">shm_info</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>).<a class=\"id\" href=\"#rw_mutex\">rw_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_info\">shm_info</a>.<a class=\"id\" href=\"#used_ids\">used_ids</a> = <a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>).<a class=\"id\" href=\"#in_use\">in_use</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_get_stat\">shm_get_stat</a> (<a class=\"id\" href=\"#ns\">ns</a>, &amp;<a class=\"id\" href=\"#shm_info\">shm_info</a>.<a class=\"id\" href=\"#shm_rss\">shm_rss</a>, &amp;<a class=\"id\" href=\"#shm_info\">shm_info</a>.<a class=\"id\" href=\"#shm_swp\">shm_swp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_info\">shm_info</a>.<a class=\"id\" href=\"#shm_tot\">shm_tot</a> = <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#shm_tot\">shm_tot</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_info\">shm_info</a>.<a class=\"id\" href=\"#swap_attempts\">swap_attempts</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_info\">shm_info</a>.<a class=\"id\" href=\"#swap_successes\">swap_successes</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipc_get_maxid\">ipc_get_maxid</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>).<a class=\"id\" href=\"#rw_mutex\">rw_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#shm_info\">shm_info</a>, sizeof(<a class=\"id\" href=\"#shm_info\">shm_info</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#err\">err</a> &lt; 0 ? 0 : <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SHM_STAT\">SHM_STAT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_STAT\">IPC_STAT</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shmid64_ds\">shmid64_ds</a> <a class=\"id\" href=\"#tbuf\">tbuf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SHM_STAT\">SHM_STAT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a> = <a class=\"id\" href=\"#shm_lock\">shm_lock</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#shmid\">shmid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shp\">shp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a> = <a class=\"id\" href=\"#shm_lock_check\">shm_lock_check</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#shmid\">shmid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shp\">shp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipcperms\">ipcperms</a> (&amp;<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_shm_shmctl\">security_shm_shmctl</a>(<a class=\"id\" href=\"#shp\">shp</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#tbuf\">tbuf</a>, 0, sizeof(<a class=\"id\" href=\"#tbuf\">tbuf</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kernel_to_ipc64_perm\">kernel_to_ipc64_perm</a>(&amp;<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>, &amp;<a class=\"id\" href=\"#tbuf\">tbuf</a>.<a class=\"id\" href=\"#shm_perm\">shm_perm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbuf\">tbuf</a>.<a class=\"id\" href=\"#shm_segsz\">shm_segsz</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_segsz\">shm_segsz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbuf\">tbuf</a>.<a class=\"id\" href=\"#shm_atime\">shm_atime</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_atim\">shm_atim</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbuf\">tbuf</a>.<a class=\"id\" href=\"#shm_dtime\">shm_dtime</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_dtim\">shm_dtim</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbuf\">tbuf</a>.<a class=\"id\" href=\"#shm_ctime\">shm_ctime</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_ctim\">shm_ctim</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbuf\">tbuf</a>.<a class=\"id\" href=\"#shm_cpid\">shm_cpid</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_cprid\">shm_cprid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbuf\">tbuf</a>.<a class=\"id\" href=\"#shm_lpid\">shm_lpid</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_lprid\">shm_lprid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbuf\">tbuf</a>.<a class=\"id\" href=\"#shm_nattch\">shm_nattch</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_nattch\">shm_nattch</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_unlock\">shm_unlock</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#copy_shmid_to_user\">copy_shmid_to_user</a> (<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#tbuf\">tbuf</a>, <a class=\"id\" href=\"#version\">version</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SHM_LOCK\">SHM_LOCK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SHM_UNLOCK\">SHM_UNLOCK</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#uninitialized_var\">uninitialized_var</a>(<a class=\"id\" href=\"#shm_file\">shm_file</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lru_add_drain_all\">lru_add_drain_all</a>();  <span class=\"comment\">/* drain pagevecs to lru lists */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a> = <a class=\"id\" href=\"#shm_lock_check\">shm_lock_check</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#shmid\">shmid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shp\">shp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_ipc_obj\">audit_ipc_obj</a>(&amp;(<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_IPC_LOCK\">CAP_IPC_LOCK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#euid\">euid</a> = <a class=\"id\" href=\"#current_euid\">current_euid</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#euid\">euid</a> != <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#uid\">uid</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#euid\">euid</a> != <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#cuid\">cuid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SHM_LOCK\">SHM_LOCK</a> && !<a class=\"id\" href=\"#rlimit\">rlimit</a>(<a class=\"id\" href=\"#RLIMIT_MEMLOCK\">RLIMIT_MEMLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_shm_shmctl\">security_shm_shmctl</a>(<a class=\"id\" href=\"#shp\">shp</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#cmd\">cmd</a>==<a class=\"id\" href=\"#SHM_LOCK\">SHM_LOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#current_user\">current_user</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_file_hugepages\">is_file_hugepages</a>(<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_file\">shm_file</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shmem_lock\">shmem_lock</a>(<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_file\">shm_file</a>, 1, <a class=\"id\" href=\"#user\">user</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && !(<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#SHM_LOCKED\">SHM_LOCKED</a>)){", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#mode\">mode</a> |= <a class=\"id\" href=\"#SHM_LOCKED\">SHM_LOCKED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#mlock_user\">mlock_user</a> = <a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#is_file_hugepages\">is_file_hugepages</a>(<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_file\">shm_file</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_lock\">shmem_lock</a>(<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_file\">shm_file</a>, 0, <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#mlock_user\">mlock_user</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#mode\">mode</a> &= ~<a class=\"id\" href=\"#SHM_LOCKED\">SHM_LOCKED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#mlock_user\">mlock_user</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_unlock\">shm_unlock</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_RMID\">IPC_RMID</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_SET\">IPC_SET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#shmctl_down\">shmctl_down</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#shmid\">shmid</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#version\">version</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shm_unlock\">shm_unlock</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Fix shmaddr, allocate descriptor, map shm, add attach descriptor to lists.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE! Despite the name, this is NOT a direct system call entrypoint. The</span>", 
"<span class=\"comment\"> * \"raddr\" thing points to kernel space, and there has to be a wrapper around</span>", 
"<span class=\"comment\"> * this.</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#do_shmat\">do_shmat</a>(int <a class=\"id\" href=\"#shmid\">shmid</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#shmaddr\">shmaddr</a>, int <a class=\"id\" href=\"#shmflg\">shmflg</a>, <a class=\"id\" href=\"#ulong\">ulong</a> *<a class=\"id\" href=\"#raddr\">raddr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmid_kernel\">shmid_kernel</a> *<a class=\"id\" href=\"#shp\">shp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>int    <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#prot\">prot</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#acc_mode\">acc_mode</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#user_addr\">user_addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shm_file_data\">shm_file_data</a> *<a class=\"id\" href=\"#sfd\">sfd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#f_mode\">f_mode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shmid\">shmid</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#addr\">addr</a> = (<a class=\"id\" href=\"#ulong\">ulong</a>)<a class=\"id\" href=\"#shmaddr\">shmaddr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> &amp; (<a class=\"id\" href=\"#SHMLBA\">SHMLBA</a>-1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#shmflg\">shmflg</a> &amp; <a class=\"id\" href=\"#SHM_RND\">SHM_RND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> &= ~(<a class=\"id\" href=\"#SHMLBA\">SHMLBA</a>-1);<span class=\"ts\"/>   <span class=\"comment\">/* round down */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ARCH_FORCE_SHMLBA\">__ARCH_FORCE_SHMLBA</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#MAP_SHARED\">MAP_SHARED</a> | <a class=\"id\" href=\"#MAP_FIXED\">MAP_FIXED</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#shmflg\">shmflg</a> &amp; <a class=\"id\" href=\"#SHM_REMAP\">SHM_REMAP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#MAP_SHARED\">MAP_SHARED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shmflg\">shmflg</a> &amp; <a class=\"id\" href=\"#SHM_RDONLY\">SHM_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot\">prot</a> = <a class=\"id\" href=\"#PROT_READ\">PROT_READ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acc_mode\">acc_mode</a> = <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f_mode\">f_mode</a> = <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot\">prot</a> = <a class=\"id\" href=\"#PROT_READ\">PROT_READ</a> | <a class=\"id\" href=\"#PROT_WRITE\">PROT_WRITE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acc_mode\">acc_mode</a> = <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f_mode\">f_mode</a> = <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a> | <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shmflg\">shmflg</a> &amp; <a class=\"id\" href=\"#SHM_EXEC\">SHM_EXEC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot\">prot</a> |= <a class=\"id\" href=\"#PROT_EXEC\">PROT_EXEC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acc_mode\">acc_mode</a> |= <a class=\"id\" href=\"#S_IXUGO\">S_IXUGO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We cannot rely on the fs check since SYSV IPC does have an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * additional creator id...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#nsproxy\">nsproxy</a>-><a class=\"id\" href=\"#ipc_ns\">ipc_ns</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a> = <a class=\"id\" href=\"#shm_lock_check\">shm_lock_check</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#shmid\">shmid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shp\">shp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipcperms\">ipcperms</a>(&amp;<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>, <a class=\"id\" href=\"#acc_mode\">acc_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_shm_shmat\">security_shm_shmat</a>(<a class=\"id\" href=\"#shp\">shp</a>, <a class=\"id\" href=\"#shmaddr\">shmaddr</a>, <a class=\"id\" href=\"#shmflg\">shmflg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_file\">shm_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_get\">path_get</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_nattch\">shm_nattch</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shm_unlock\">shm_unlock</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfd\">sfd</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sfd\">sfd</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sfd\">sfd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_dentry\">out_put_dentry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#alloc_file\">alloc_file</a>(&amp;<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#f_mode\">f_mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#is_file_hugepages\">is_file_hugepages</a>(<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_file\">shm_file</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#shm_file_operations_huge\">shm_file_operations_huge</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#shm_file_operations\">shm_file_operations</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#sfd\">sfd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a> = <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_file\">shm_file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfd\">sfd</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfd\">sfd</a>-><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#get_ipc_ns\">get_ipc_ns</a>(<a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfd\">sfd</a>-><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_file\">shm_file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfd\">sfd</a>-><a class=\"id\" href=\"#vm_ops\">vm_ops</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> && !(<a class=\"id\" href=\"#shmflg\">shmflg</a> &amp; <a class=\"id\" href=\"#SHM_REMAP\">SHM_REMAP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#find_vma_intersection\">find_vma_intersection</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#invalid\">invalid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If shm segment goes below stack, make sure there is some</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * space left for the stack to grow (at least 4 pages).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_stack\">start_stack</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#addr\">addr</a> &gt; <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_stack\">start_stack</a> - <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> * 5)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#invalid\">invalid</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#user_addr\">user_addr</a> = <a class=\"id\" href=\"#do_mmap\">do_mmap</a> (<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#prot\">prot</a>, <a class=\"id\" href=\"#flags\">flags</a>, 0);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#raddr\">raddr</a> = <a class=\"id\" href=\"#user_addr\">user_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR_VALUE\">IS_ERR_VALUE</a>(<a class=\"id\" href=\"#user_addr\">user_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = (long)<a class=\"id\" href=\"#user_addr\">user_addr</a>;", 
"<a class=\"id\" href=\"#invalid\">invalid</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<a class=\"id\" href=\"#out_nattch\">out_nattch</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>).<a class=\"id\" href=\"#rw_mutex\">rw_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a> = <a class=\"id\" href=\"#shm_lock\">shm_lock</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#shmid\">shmid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shp\">shp</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_nattch\">shm_nattch</a>--;", 
"<span class=\"ts\"/>if(<a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_nattch\">shm_nattch</a> == 0 &&", 
"<span class=\"ts\"/>   <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#SHM_DEST\">SHM_DEST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_destroy\">shm_destroy</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#shp\">shp</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_unlock\">shm_unlock</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#shm_ids\">shm_ids</a>(<a class=\"id\" href=\"#ns\">ns</a>).<a class=\"id\" href=\"#rw_mutex\">rw_mutex</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shm_unlock\">shm_unlock</a>(<a class=\"id\" href=\"#shp\">shp</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sfd\">sfd</a>);", 
"<a class=\"id\" href=\"#out_put_dentry\">out_put_dentry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nattch\">out_nattch</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#shmat\">shmat</a>, int, <a class=\"id\" href=\"#shmid\">shmid</a>, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#shmaddr\">shmaddr</a>, int, <a class=\"id\" href=\"#shmflg\">shmflg</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#do_shmat\">do_shmat</a>(<a class=\"id\" href=\"#shmid\">shmid</a>, <a class=\"id\" href=\"#shmaddr\">shmaddr</a>, <a class=\"id\" href=\"#shmflg\">shmflg</a>, &amp;<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#force_successful_syscall_return\">force_successful_syscall_return</a>();", 
"<span class=\"ts\"/>return (long)<a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * detach and kill segment if marked destroyed.</span>", 
"<span class=\"comment\"> * The work is done in shm_close.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#shmdt\">shmdt</a>, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#shmaddr\">shmaddr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a> = (unsigned long)<a class=\"id\" href=\"#shmaddr\">shmaddr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MMU\">CONFIG_MMU</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#size\">size</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This function tries to be smart and unmap shm segments that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * were modified by partial mlock or munmap calls:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - It first determines the size of the shm segment that should be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   unmapped: It searches for a vma that is backed by shm and that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   started at address shmaddr. It records it's size and then unmaps</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - Then it unmaps all shm vmas that started at shmaddr and that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   are within the initially determined size.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Errors from do_munmap are ignored: the function only fails if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it's called with invalid parameters or if it's called to unmap</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a part of a vma. Both calls in this function are for full vmas,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the parameters are directly copied from the vma itself and always</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * valid - therefore do_munmap cannot fail. (famous last words?)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If it had been mremap()'d, the starting address would not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * match the usual checks anyway. So assume all vma's are</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * above the starting address given.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MMU\">CONFIG_MMU</a>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#vma\">vma</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Check if the starting address would match, i.e. it's</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a fragment created by mprotect() and/or munmap(), or it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * otherwise it starts at this address with no hassles.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_ops\">vm_ops</a> == &amp;<a class=\"id\" href=\"#shm_vm_ops\">shm_vm_ops</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> - <a class=\"id\" href=\"#addr\">addr</a>)/<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> == <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a>) {", 
"", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_munmap\">do_munmap</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We discovered the size of the shm segment, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * break out of here and fall through to the next</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * loop that uses the size information to stop</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * searching for matching vma's.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need look no further than the maximum address a fragment</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * could possibly have landed at. Also cast things to loff_t to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * prevent overflows and make comparisions vs. equal-width types.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#vma\">vma</a> && (<a class=\"id\" href=\"#loff_t\">loff_t</a>)(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#addr\">addr</a>) <= <a class=\"id\" href=\"#size\">size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* finding a matching vma now does not alter retval */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_ops\">vm_ops</a> == &amp;<a class=\"id\" href=\"#shm_vm_ops\">shm_vm_ops</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> - <a class=\"id\" href=\"#addr\">addr</a>)/<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> == <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a>)", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_munmap\">do_munmap</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#else <span class=\"comment\">/* CONFIG_MMU */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* under NOMMU conditions, the exact address to be destroyed must be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * given */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> == <a class=\"id\" href=\"#addr\">addr</a> && <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_ops\">vm_ops</a> == &amp;<a class=\"id\" href=\"#shm_vm_ops\">shm_vm_ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_munmap\">do_munmap</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"static int <a class=\"id\" href=\"#sysvipc_shm_proc_show\">sysvipc_shm_proc_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#it\">it</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmid_kernel\">shmid_kernel</a> *<a class=\"id\" href=\"#shp\">shp</a> = <a class=\"id\" href=\"#it\">it</a>;", 
"", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> <= 32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIZE_SPEC\">SIZE_SPEC</a> \"%10lu\"", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIZE_SPEC\">SIZE_SPEC</a> \"%21lu\"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%10d %10d  %4o \" <a class=\"id\" href=\"#SIZE_SPEC\">SIZE_SPEC</a> \" %5u %5u  \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%5lu %5u %5u %5u %5u %10lu %10lu %10lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_segsz\">shm_segsz</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_cprid\">shm_cprid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_lprid\">shm_lprid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_nattch\">shm_nattch</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#uid\">uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#gid\">gid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#cuid\">cuid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_perm\">shm_perm</a>.<a class=\"id\" href=\"#cgid\">cgid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_atim\">shm_atim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_dtim\">shm_dtim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#shp\">shp</a>-><a class=\"id\" href=\"#shm_ctim\">shm_ctim</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/ba/3bb933642a10f795b9877a8ad54d60e0477811.xr', __xr_tmp);
