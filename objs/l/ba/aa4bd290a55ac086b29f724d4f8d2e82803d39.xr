var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * common LSM auditing functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Based on code written for SELinux by :</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Stephen Smalley, &lt;sds@epoch.ncsc.mil&gt;</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>James Morris &lt;jmorris@redhat.com&gt;</span>", 
"<span class=\"comment\"> * Author : Etienne Basset, &lt;etienne.basset@ensta.org&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License version 2,</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stddef\">stddef</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#un\">un</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#af_unix\">af_unix</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#udp\">udp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dccp\">dccp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sctp\">sctp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#lsm_audit\">lsm_audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ipv4_skb_to_auditdata : fill auditdata from skb</span>", 
"<span class=\"comment\"> * @skb : the skb</span>", 
"<span class=\"comment\"> * @ad : the audit data to fill</span>", 
"<span class=\"comment\"> * @proto : the layer 4 protocol</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * return  0 on success</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ipv4_skb_to_auditdata\">ipv4_skb_to_auditdata</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> *<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#ih\">ih</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ih\">ih</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ih\">ih</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v4info\">v4info</a>.<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v4info\">v4info</a>.<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#proto\">proto</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* non initial fragment */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a>) &amp; <a class=\"id\" href=\"#IP_OFFSET\">IP_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#protocol\">protocol</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#udphdr\">udphdr</a> *<a class=\"id\" href=\"#uh\">uh</a> = <a class=\"id\" href=\"#udp_hdr\">udp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uh\">uh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_DCCP\">IPPROTO_DCCP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dccp_hdr\">dccp_hdr</a> *<a class=\"id\" href=\"#dh\">dh</a> = <a class=\"id\" href=\"#dccp_hdr\">dccp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dh\">dh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#dh\">dh</a>-><a class=\"id\" href=\"#dccph_sport\">dccph_sport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#dh\">dh</a>-><a class=\"id\" href=\"#dccph_dport\">dccph_dport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_SCTP\">IPPROTO_SCTP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sctphdr\">sctphdr</a> *<a class=\"id\" href=\"#sh\">sh</a> = <a class=\"id\" href=\"#sctp_hdr\">sctp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sh\">sh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ipv6_skb_to_auditdata : fill auditdata from skb</span>", 
"<span class=\"comment\"> * @skb : the skb</span>", 
"<span class=\"comment\"> * @ad : the audit data to fill</span>", 
"<span class=\"comment\"> * @proto : the layer 4 protocol</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * return  0 on success</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ipv6_skb_to_auditdata\">ipv6_skb_to_auditdata</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> *<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#ip6\">ip6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6\">ip6</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip6\">ip6</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v6info\">v6info</a>.<a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#ip6\">ip6</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v6info\">v6info</a>.<a class=\"id\" href=\"#daddr\">daddr</a>, &amp;<a class=\"id\" href=\"#ip6\">ip6</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* IPv6 can have several extension header before the Transport header</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * skip them */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += sizeof(*<a class=\"id\" href=\"#ip6\">ip6</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#ip6\">ip6</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#ipv6_skip_exthdr\">ipv6_skip_exthdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, &amp;<a class=\"id\" href=\"#nexthdr\">nexthdr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#proto\">proto</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#nexthdr\">nexthdr</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> <a class=\"id\" href=\"#_tcph\">_tcph</a>, *<a class=\"id\" href=\"#th\">th</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_tcph\">_tcph</a>), &amp;<a class=\"id\" href=\"#_tcph\">_tcph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#udphdr\">udphdr</a> <a class=\"id\" href=\"#_udph\">_udph</a>, *<a class=\"id\" href=\"#uh\">uh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uh\">uh</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_udph\">_udph</a>), &amp;<a class=\"id\" href=\"#_udph\">_udph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uh\">uh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_DCCP\">IPPROTO_DCCP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dccp_hdr\">dccp_hdr</a> <a class=\"id\" href=\"#_dccph\">_dccph</a>, *<a class=\"id\" href=\"#dh\">dh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dh\">dh</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_dccph\">_dccph</a>), &amp;<a class=\"id\" href=\"#_dccph\">_dccph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dh\">dh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#dh\">dh</a>-><a class=\"id\" href=\"#dccph_sport\">dccph_sport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#dh\">dh</a>-><a class=\"id\" href=\"#dccph_dport\">dccph_dport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_SCTP\">IPPROTO_SCTP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sctphdr\">sctphdr</a> <a class=\"id\" href=\"#_sctph\">_sctph</a>, *<a class=\"id\" href=\"#sh\">sh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sh\">sh</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_sctph\">_sctph</a>), &amp;<a class=\"id\" href=\"#_sctph\">_sctph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sh\">sh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#print_ipv6_addr\">print_ipv6_addr</a>(struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#port\">port</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   char *<a class=\"id\" href=\"#name1\">name1</a>, char *<a class=\"id\" href=\"#name2\">name2</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(<a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" %s=%pI6c\", <a class=\"id\" href=\"#name1\">name1</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" %s=%d\", <a class=\"id\" href=\"#name2\">name2</a>, <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#port\">port</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#print_ipv4_addr\">print_ipv4_addr</a>(struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#port\">port</a>, char *<a class=\"id\" href=\"#name1\">name1</a>, char *<a class=\"id\" href=\"#name2\">name2</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" %s=%pI4\", <a class=\"id\" href=\"#name1\">name1</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" %s=%d\", <a class=\"id\" href=\"#name2\">name2</a>, <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#port\">port</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dump_common_audit_data - helper to dump common audit data</span>", 
"<span class=\"comment\"> * @a : common audit data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#dump_common_audit_data\">dump_common_audit_data</a>(struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tsk\">tsk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tsk\">tsk</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tsk\">tsk</a> && <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#pid\">pid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" pid=%d comm=\", <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_untrustedstring\">audit_log_untrustedstring</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LSM_AUDIT_DATA_NONE\">LSM_AUDIT_DATA_NONE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LSM_AUDIT_DATA_IPC\">LSM_AUDIT_DATA_IPC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" key=%d \", <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#ipc_id\">ipc_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LSM_AUDIT_DATA_CAP\">LSM_AUDIT_DATA_CAP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" capability=%d \", <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#cap\">cap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LSM_AUDIT_DATA_FS\">LSM_AUDIT_DATA_FS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_d_path\">audit_log_d_path</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"path=\", &amp;<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" name=\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_untrustedstring\">audit_log_untrustedstring</a>(<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#d_find_alias\">d_find_alias</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dentry\">dentry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" name=\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_untrustedstring\">audit_log_untrustedstring</a>(<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" dev=%s ino=%lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LSM_AUDIT_DATA_TASK\">LSM_AUDIT_DATA_TASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#tsk\">tsk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tsk\">tsk</a> && <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#pid\">pid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" pid=%d comm=\", <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_untrustedstring\">audit_log_untrustedstring</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LSM_AUDIT_DATA_NET\">LSM_AUDIT_DATA_NET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#unix_sock\">unix_sock</a> *<a class=\"id\" href=\"#u\">u</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AF_INET\">AF_INET</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_ipv4_addr\">print_ipv4_addr</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>,", 
];
xr_frag_insert('l/ba/aa4bd290a55ac086b29f724d4f8d2e82803d39.xr', __xr_tmp);
