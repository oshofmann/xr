var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * FLoating proportions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2007 Red Hat, Inc., Peter Zijlstra &lt;pzijlstr@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file contains the public data structure and API definitions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_PROPORTIONS_H\">_LINUX_PROPORTIONS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_PROPORTIONS_H\">_LINUX_PROPORTIONS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu_counter\">percpu_counter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#prop_global\">prop_global</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The period over which we differentiate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   period = 2^shift</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The total event counter aka 'time'.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Treated as an unsigned long; the lower 'shift - 1' bits are the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * counter bits, the remaining upper bits the period counter.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#events\">events</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * global proportion descriptor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * this is needed to consitently flip prop_global structures.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#prop_global\">prop_global</a> <a class=\"id\" href=\"#pg\">pg</a>[2];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#mutex\">mutex</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* serialize the prop_global switch */</span>", 
"};", 
"", 
"int <a class=\"id\" href=\"#prop_descriptor_init\">prop_descriptor_init</a>(struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> *<a class=\"id\" href=\"#pd\">pd</a>, int <a class=\"id\" href=\"#shift\">shift</a>);", 
"void <a class=\"id\" href=\"#prop_change_shift\">prop_change_shift</a>(struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> *<a class=\"id\" href=\"#pd\">pd</a>, int <a class=\"id\" href=\"#new_shift\">new_shift</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ----- PERCPU ------</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#prop_local_percpu\">prop_local_percpu</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the local events counter</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#events\">events</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * snapshot of the last seen global state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#period\">period</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#lock\">lock</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* protect the snapshot state */</span>", 
"};", 
"", 
"int <a class=\"id\" href=\"#prop_local_init_percpu\">prop_local_init_percpu</a>(struct <a class=\"id\" href=\"#prop_local_percpu\">prop_local_percpu</a> *<a class=\"id\" href=\"#pl\">pl</a>);", 
"void <a class=\"id\" href=\"#prop_local_destroy_percpu\">prop_local_destroy_percpu</a>(struct <a class=\"id\" href=\"#prop_local_percpu\">prop_local_percpu</a> *<a class=\"id\" href=\"#pl\">pl</a>);", 
"void <a class=\"id\" href=\"#__prop_inc_percpu\">__prop_inc_percpu</a>(struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#prop_local_percpu\">prop_local_percpu</a> *<a class=\"id\" href=\"#pl\">pl</a>);", 
"void <a class=\"id\" href=\"#prop_fraction_percpu\">prop_fraction_percpu</a>(struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#prop_local_percpu\">prop_local_percpu</a> *<a class=\"id\" href=\"#pl\">pl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>long *<a class=\"id\" href=\"#numerator\">numerator</a>, long *<a class=\"id\" href=\"#denominator\">denominator</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"void <a class=\"id\" href=\"#prop_inc_percpu\">prop_inc_percpu</a>(struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#prop_local_percpu\">prop_local_percpu</a> *<a class=\"id\" href=\"#pl\">pl</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__prop_inc_percpu\">__prop_inc_percpu</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pl\">pl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Limit the time part in order to ensure there are some bits left for the</span>", 
"<span class=\"comment\"> * cycle counter and fraction multiply.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PROP_MAX_SHIFT\">PROP_MAX_SHIFT</a> (3*<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>/4)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PROP_FRAC_SHIFT\">PROP_FRAC_SHIFT</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> - <a class=\"id\" href=\"#PROP_MAX_SHIFT\">PROP_MAX_SHIFT</a> - 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PROP_FRAC_BASE\">PROP_FRAC_BASE</a><span class=\"ts\"/><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#PROP_FRAC_SHIFT\">PROP_FRAC_SHIFT</a>)", 
"", 
"void <a class=\"id\" href=\"#__prop_inc_percpu_max\">__prop_inc_percpu_max</a>(struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> *<a class=\"id\" href=\"#pd\">pd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#prop_local_percpu\">prop_local_percpu</a> *<a class=\"id\" href=\"#pl\">pl</a>, long <a class=\"id\" href=\"#frac\">frac</a>);", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ----- SINGLE ------</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#prop_local_single\">prop_local_single</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the local events counter</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#events\">events</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * snapshot of the last seen global state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and a lock protecting this state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#period\">period</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#lock\">lock</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* protect the snapshot state */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INIT_PROP_LOCAL_SINGLE\">INIT_PROP_LOCAL_SINGLE</a>(<a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/>.<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#__SPIN_LOCK_UNLOCKED\">__SPIN_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#lock\">lock</a>),<span class=\"ts\"/>\\", 
"}", 
"", 
"int <a class=\"id\" href=\"#prop_local_init_single\">prop_local_init_single</a>(struct <a class=\"id\" href=\"#prop_local_single\">prop_local_single</a> *<a class=\"id\" href=\"#pl\">pl</a>);", 
"void <a class=\"id\" href=\"#prop_local_destroy_single\">prop_local_destroy_single</a>(struct <a class=\"id\" href=\"#prop_local_single\">prop_local_single</a> *<a class=\"id\" href=\"#pl\">pl</a>);", 
"void <a class=\"id\" href=\"#__prop_inc_single\">__prop_inc_single</a>(struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#prop_local_single\">prop_local_single</a> *<a class=\"id\" href=\"#pl\">pl</a>);", 
"void <a class=\"id\" href=\"#prop_fraction_single\">prop_fraction_single</a>(struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#prop_local_single\">prop_local_single</a> *<a class=\"id\" href=\"#pl\">pl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>long *<a class=\"id\" href=\"#numerator\">numerator</a>, long *<a class=\"id\" href=\"#denominator\">denominator</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"void <a class=\"id\" href=\"#prop_inc_single\">prop_inc_single</a>(struct <a class=\"id\" href=\"#prop_descriptor\">prop_descriptor</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#prop_local_single\">prop_local_single</a> *<a class=\"id\" href=\"#pl\">pl</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__prop_inc_single\">__prop_inc_single</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pl\">pl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_PROPORTIONS_H */</span>", 
];
xr_frag_insert('l/ba/d9365520c06a1fa94a43a0b0afd77f59ba1a9b.xr', __xr_tmp);
