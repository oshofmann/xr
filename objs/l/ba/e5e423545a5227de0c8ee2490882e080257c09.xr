var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 8253/PIT functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#clockchips\">clockchips</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timex\">timex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i8253\">i8253</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#DEFINE_RAW_SPINLOCK\">DEFINE_RAW_SPINLOCK</a>(<a class=\"id\" href=\"#i8253_lock\">i8253_lock</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#i8253_lock\">i8253_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * HPET replaces the PIT, when enabled. So we need to know, which of</span>", 
"<span class=\"comment\"> * the two timers is used</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#global_clock_event\">global_clock_event</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialize the PIT timer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is also called after resume to bring the PIT into operation again.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#init_pit_timer\">init_pit_timer</a>(enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#i8253_lock\">i8253_lock</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_PERIODIC\">CLOCK_EVT_MODE_PERIODIC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* binary, mode 2, LSB/MSB, ch 0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_pit\">outb_pit</a>(0x34, <a class=\"id\" href=\"#PIT_MODE\">PIT_MODE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_pit\">outb_pit</a>(<a class=\"id\" href=\"#LATCH\">LATCH</a> &amp; 0xff , <a class=\"id\" href=\"#PIT_CH0\">PIT_CH0</a>);<span class=\"ts\"/><span class=\"comment\">/* LSB */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_pit\">outb_pit</a>(<a class=\"id\" href=\"#LATCH\">LATCH</a> >> 8 , <a class=\"id\" href=\"#PIT_CH0\">PIT_CH0</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* MSB */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_SHUTDOWN\">CLOCK_EVT_MODE_SHUTDOWN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_UNUSED\">CLOCK_EVT_MODE_UNUSED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#CLOCK_EVT_MODE_PERIODIC\">CLOCK_EVT_MODE_PERIODIC</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#CLOCK_EVT_MODE_ONESHOT\">CLOCK_EVT_MODE_ONESHOT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_pit\">outb_pit</a>(0x30, <a class=\"id\" href=\"#PIT_MODE\">PIT_MODE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_pit\">outb_pit</a>(0, <a class=\"id\" href=\"#PIT_CH0\">PIT_CH0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_pit\">outb_pit</a>(0, <a class=\"id\" href=\"#PIT_CH0\">PIT_CH0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_ONESHOT\">CLOCK_EVT_MODE_ONESHOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* One shot setup */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_pit\">outb_pit</a>(0x38, <a class=\"id\" href=\"#PIT_MODE\">PIT_MODE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_RESUME\">CLOCK_EVT_MODE_RESUME</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Nothing to do here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#i8253_lock\">i8253_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Program the next event in oneshot mode</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Delta is given in PIT ticks</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pit_next_event\">pit_next_event</a>(unsigned long <a class=\"id\" href=\"#delta\">delta</a>, struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#i8253_lock\">i8253_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_pit\">outb_pit</a>(<a class=\"id\" href=\"#delta\">delta</a> &amp; 0xff , <a class=\"id\" href=\"#PIT_CH0\">PIT_CH0</a>);<span class=\"ts\"/><span class=\"comment\">/* LSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_pit\">outb_pit</a>(<a class=\"id\" href=\"#delta\">delta</a> >> 8 , <a class=\"id\" href=\"#PIT_CH0\">PIT_CH0</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* MSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#i8253_lock\">i8253_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * On UP the PIT can serve all of the possible timer functions. On SMP systems</span>", 
"<span class=\"comment\"> * it can be solely used for the global tick.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The profiling and update capabilities are switched off once the local apic is</span>", 
"<span class=\"comment\"> * registered. This mechanism replaces the previous #ifdef LOCAL_APIC -</span>", 
"<span class=\"comment\"> * !using_apic_timer decisions in do_timer_interrupt_hook()</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> <a class=\"id\" href=\"#pit_ce\">pit_ce</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"pit\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#features\">features</a><span class=\"ts\"/>= <a class=\"id\" href=\"#CLOCK_EVT_FEAT_PERIODIC\">CLOCK_EVT_FEAT_PERIODIC</a> | <a class=\"id\" href=\"#CLOCK_EVT_FEAT_ONESHOT\">CLOCK_EVT_FEAT_ONESHOT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_mode\">set_mode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#init_pit_timer\">init_pit_timer</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_next_event\">set_next_event</a> = <a class=\"id\" href=\"#pit_next_event\">pit_next_event</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shift\">shift</a><span class=\"ts\"/><span class=\"ts\"/>= 32,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq\">irq</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialize the conversion factor and the min/max deltas of the clock event</span>", 
"<span class=\"comment\"> * structure and register the clock event source with the framework.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_pit_timer\">setup_pit_timer</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Start pit with the boot cpu mask and make it global after the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * IO_APIC has been initialized.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pit_ce\">pit_ce</a>.<a class=\"id\" href=\"#cpumask\">cpumask</a> = <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pit_ce\">pit_ce</a>.<a class=\"id\" href=\"#mult\">mult</a> = <a class=\"id\" href=\"#div_sc\">div_sc</a>(<a class=\"id\" href=\"#CLOCK_TICK_RATE\">CLOCK_TICK_RATE</a>, <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>, <a class=\"id\" href=\"#pit_ce\">pit_ce</a>.<a class=\"id\" href=\"#shift\">shift</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pit_ce\">pit_ce</a>.<a class=\"id\" href=\"#max_delta_ns\">max_delta_ns</a> = <a class=\"id\" href=\"#clockevent_delta2ns\">clockevent_delta2ns</a>(0x7FFF, &amp;<a class=\"id\" href=\"#pit_ce\">pit_ce</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pit_ce\">pit_ce</a>.<a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> = <a class=\"id\" href=\"#clockevent_delta2ns\">clockevent_delta2ns</a>(0xF, &amp;<a class=\"id\" href=\"#pit_ce\">pit_ce</a>);", 
];
xr_frag_insert('l/ba/e5e423545a5227de0c8ee2490882e080257c09.xr', __xr_tmp);
