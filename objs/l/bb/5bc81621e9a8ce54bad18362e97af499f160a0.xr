var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Definitions for the protocol dispatcher.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version:<span class=\"ts\"/>@(#)protocol.h<span class=\"ts\"/>1.0.2<span class=\"ts\"/>05/07/93</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author:<span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Changes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Added a name field and a frag handler</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>field for later.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Cleaned up, and sorted types.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Pedro Roque<span class=\"ts\"/>:<span class=\"ts\"/>inet6 protocols</span>", 
"<span class=\"comment\"> */</span>", 
" ", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_PROTOCOL_H\">_PROTOCOL_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_PROTOCOL_H\">_PROTOCOL_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a><span class=\"ts\"/>256<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Must be a power of 2<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"", 
"<span class=\"comment\">/* This is used to register protocols. */</span>", 
"struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#handler\">handler</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#err_handler\">err_handler</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#gso_send_check\">gso_send_check</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a><span class=\"ts\"/>       *(*<a class=\"id\" href=\"#gso_segment\">gso_segment</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#features\">features</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a><span class=\"ts\"/>      **(*<a class=\"id\" href=\"#gro_receive\">gro_receive</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#gro_complete\">gro_complete</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_policy\">no_policy</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netns_ok\">netns_ok</a>:1;", 
"};", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#handler\">handler</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>void<span class=\"ts\"/>(*<a class=\"id\" href=\"#err_handler\">err_handler</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#code\">code</a>, int <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#gso_send_check\">gso_send_check</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *(*<a class=\"id\" href=\"#gso_segment\">gso_segment</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#features\">features</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **(*<a class=\"id\" href=\"#gro_receive\">gro_receive</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#gro_complete\">gro_complete</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"comment\">/* INET6_PROTO_xxx */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INET6_PROTO_NOPOLICY\">INET6_PROTO_NOPOLICY</a><span class=\"ts\"/>0x1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INET6_PROTO_FINAL\">INET6_PROTO_FINAL</a><span class=\"ts\"/>0x2", 
"<span class=\"comment\">/* This should be set for any extension header which is compatible with GSO. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INET6_PROTO_GSO_EXTHDR\">INET6_PROTO_GSO_EXTHDR</a><span class=\"ts\"/>0x4", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* This is used to register socket interfaces for IP protocols.  */</span>", 
"struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"", 
"        <span class=\"comment\">/* These two fields form the lookup key.  */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/> <a class=\"id\" href=\"#type\">type</a>;<span class=\"ts\"/>   <span class=\"comment\">/* This is the 2nd argument to socket(2). */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/> <a class=\"id\" href=\"#protocol\">protocol</a>; <span class=\"comment\">/* This is the L4 protocol number.  */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proto\">proto</a><span class=\"ts\"/> *<a class=\"id\" href=\"#prot\">prot</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"  ", 
"<span class=\"ts\"/>char             <a class=\"id\" href=\"#no_check\">no_check</a>;   <span class=\"comment\">/* checksum on rcv/xmit/none? */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/> <a class=\"id\" href=\"#flags\">flags</a>;      <span class=\"comment\">/* See INET_PROTOSW_* below.  */</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INET_PROTOSW_REUSE\">INET_PROTOSW_REUSE</a> 0x01<span class=\"ts\"/>     <span class=\"comment\">/* Are ports automatically reusable? */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INET_PROTOSW_PERMANENT\">INET_PROTOSW_PERMANENT</a> 0x02  <span class=\"comment\">/* Permanent protocols are unremovable. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INET_PROTOSW_ICSK\">INET_PROTOSW_ICSK</a>      0x04  <span class=\"comment\">/* Is this an inet_connection_sock? */</span>", 
"", 
"extern const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> *<a class=\"id\" href=\"#inet_protos\">inet_protos</a>[<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a>];", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"extern const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> *<a class=\"id\" href=\"#inet6_protos\">inet6_protos</a>[<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#inet_add_protocol\">inet_add_protocol</a>(const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> *<a class=\"id\" href=\"#prot\">prot</a>, unsigned char <a class=\"id\" href=\"#num\">num</a>);", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#inet_del_protocol\">inet_del_protocol</a>(const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> *<a class=\"id\" href=\"#prot\">prot</a>, unsigned char <a class=\"id\" href=\"#num\">num</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#inet_register_protosw\">inet_register_protosw</a>(struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#inet_unregister_protosw\">inet_unregister_protosw</a>(struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#inet6_add_protocol\">inet6_add_protocol</a>(const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> *<a class=\"id\" href=\"#prot\">prot</a>, unsigned char <a class=\"id\" href=\"#num\">num</a>);", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#inet6_del_protocol\">inet6_del_protocol</a>(const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> *<a class=\"id\" href=\"#prot\">prot</a>, unsigned char <a class=\"id\" href=\"#num\">num</a>);", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#inet6_register_protosw\">inet6_register_protosw</a>(struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#inet6_unregister_protosw\">inet6_unregister_protosw</a>(struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _PROTOCOL_H */</span>", 
];
xr_frag_insert('l/bb/5bc81621e9a8ce54bad18362e97af499f160a0.xr', __xr_tmp);
