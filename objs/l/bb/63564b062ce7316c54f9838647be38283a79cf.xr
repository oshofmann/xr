var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">  Red Black Trees</span>", 
"<span class=\"comment\">  (C) 1999  Andrea Arcangeli &lt;andrea@suse.de&gt;</span>", 
"<span class=\"comment\">  (C) 2002  David Woodhouse &lt;dwmw2@infradead.org&gt;</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\">  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\">  the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\">  (at your option) any later version.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\">  GNU General Public License for more details.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\">  along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\">  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  linux/lib/rbtree.c</span>", 
"<span class=\"comment\">*/</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rbtree\">rbtree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static void <a class=\"id\" href=\"#__rb_rotate_left\">__rb_rotate_left</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#right\">right</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#right\">right</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#right\">right</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#right\">right</a>, <a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#right\">right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#right\">right</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a> = <a class=\"id\" href=\"#right\">right</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#right\">right</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__rb_rotate_right\">__rb_rotate_right</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#left\">left</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#left\">left</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#left\">left</a>, <a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#left\">left</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a>, *<a class=\"id\" href=\"#gparent\">gparent</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>)) && <a class=\"id\" href=\"#rb_is_red\">rb_is_red</a>(<a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gparent\">gparent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a> == <a class=\"id\" href=\"#gparent\">gparent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>register struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#uncle\">uncle</a> = <a class=\"id\" href=\"#gparent\">gparent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uncle\">uncle</a> && <a class=\"id\" href=\"#rb_is_red\">rb_is_red</a>(<a class=\"id\" href=\"#uncle\">uncle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#uncle\">uncle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#gparent\">gparent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#gparent\">gparent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> == <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>register struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_left\">__rb_rotate_left</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#gparent\">gparent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_right\">__rb_rotate_right</a>(<a class=\"id\" href=\"#gparent\">gparent</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>register struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#uncle\">uncle</a> = <a class=\"id\" href=\"#gparent\">gparent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uncle\">uncle</a> && <a class=\"id\" href=\"#rb_is_red\">rb_is_red</a>(<a class=\"id\" href=\"#uncle\">uncle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#uncle\">uncle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#gparent\">gparent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#gparent\">gparent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> == <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>register struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_right\">__rb_rotate_right</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#gparent\">gparent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_left\">__rb_rotate_left</a>(<a class=\"id\" href=\"#gparent\">gparent</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>);", 
"", 
"static void <a class=\"id\" href=\"#__rb_erase_color\">__rb_erase_color</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#other\">other</a>;", 
"", 
"<span class=\"ts\"/>while ((!<a class=\"id\" href=\"#node\">node</a> || <a class=\"id\" href=\"#rb_is_black\">rb_is_black</a>(<a class=\"id\" href=\"#node\">node</a>)) && <a class=\"id\" href=\"#node\">node</a> != <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> == <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#other\">other</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rb_is_red\">rb_is_red</a>(<a class=\"id\" href=\"#other\">other</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#other\">other</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_left\">__rb_rotate_left</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#other\">other</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> || <a class=\"id\" href=\"#rb_is_black\">rb_is_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> || <a class=\"id\" href=\"#rb_is_black\">rb_is_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#other\">other</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> || <a class=\"id\" href=\"#rb_is_black\">rb_is_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#other\">other</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_right\">__rb_rotate_right</a>(<a class=\"id\" href=\"#other\">other</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#other\">other</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_color\">rb_set_color</a>(<a class=\"id\" href=\"#other\">other</a>, <a class=\"id\" href=\"#rb_color\">rb_color</a>(<a class=\"id\" href=\"#parent\">parent</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_left\">__rb_rotate_left</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#other\">other</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rb_is_red\">rb_is_red</a>(<a class=\"id\" href=\"#other\">other</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#other\">other</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_right\">__rb_rotate_right</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#other\">other</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> || <a class=\"id\" href=\"#rb_is_black\">rb_is_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> || <a class=\"id\" href=\"#rb_is_black\">rb_is_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#other\">other</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> || <a class=\"id\" href=\"#rb_is_black\">rb_is_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_red\">rb_set_red</a>(<a class=\"id\" href=\"#other\">other</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_left\">__rb_rotate_left</a>(<a class=\"id\" href=\"#other\">other</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#other\">other</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_color\">rb_set_color</a>(<a class=\"id\" href=\"#other\">other</a>, <a class=\"id\" href=\"#rb_color\">rb_color</a>(<a class=\"id\" href=\"#parent\">parent</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_rotate_right\">__rb_rotate_right</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_black\">rb_set_black</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#rb_erase\">rb_erase</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#child\">child</a>, *<a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#color\">color</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#left\">left</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#old\">old</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#old\">old</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a> == <a class=\"id\" href=\"#old\">old</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#old\">old</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#old\">old</a>)-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#color\">color</a> = <a class=\"id\" href=\"#rb_color\">rb_color</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a> == <a class=\"id\" href=\"#old\">old</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_parent_color\">rb_parent_color</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#rb_parent_color\">rb_parent_color</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#color\">color</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#color\">color</a> = <a class=\"id\" href=\"#rb_color\">rb_color</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> == <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"", 
" <a class=\"id\" href=\"#color\">color</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#color\">color</a> == <a class=\"id\" href=\"#RB_BLACK\">RB_BLACK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rb_erase_color\">__rb_erase_color</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rb_erase\">rb_erase</a>);", 
"", 
"static void <a class=\"id\" href=\"#rb_augment_path\">rb_augment_path</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#rb_augment_f\">rb_augment_f</a> <a class=\"id\" href=\"#func\">func</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<a class=\"id\" href=\"#up\">up</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> && <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#up\">up</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * after inserting @node into the tree, update the tree to account for</span>", 
"<span class=\"comment\"> * both the new entry and any damage done by rebalance</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rb_augment_insert\">rb_augment_insert</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#rb_augment_f\">rb_augment_f</a> <a class=\"id\" href=\"#func\">func</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_augment_path\">rb_augment_path</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * before removing the node, find the deepest node on the rebalance path</span>", 
"<span class=\"comment\"> * that will still be there after @node gets removed</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rb_augment_erase_begin\">rb_augment_erase_begin</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#deepest\">deepest</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> && !<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deepest\">deepest</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deepest\">deepest</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deepest\">deepest</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deepest\">deepest</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#deepest\">deepest</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deepest\">deepest</a> = <a class=\"id\" href=\"#deepest\">deepest</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#deepest\">deepest</a>) != <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deepest\">deepest</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#deepest\">deepest</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#deepest\">deepest</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * after removal, update the tree to account for the removed entry</span>", 
"<span class=\"comment\"> * and any rebalance damage.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rb_augment_erase_end\">rb_augment_erase_end</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#rb_augment_f\">rb_augment_f</a> <a class=\"id\" href=\"#func\">func</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_augment_path\">rb_augment_path</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function returns the first node (in sort order) of the tree.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rb_first\">rb_first</a>(const struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/>*<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rb_first\">rb_first</a>);", 
"", 
"struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rb_last\">rb_last</a>(const struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/>*<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rb_last\">rb_last</a>);", 
"", 
"struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rb_next\">rb_next</a>(const struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>) == <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we have a right-hand child, go down and then left as far</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   as we can. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>; ", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>=<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return (struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *)<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No right-hand children.  Everything down and left is</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   smaller than us, so any 'next' node must be in the general</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   direction of our parent. Go up the tree; any time the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   ancestor is a right-hand child of its parent, keep going</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   up. First time it's a left-hand child of its parent, said</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   parent is our 'next' node. */</span>", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>)) && <a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#parent\">parent</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rb_next\">rb_next</a>);", 
"", 
"struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rb_prev\">rb_prev</a>(const struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>) == <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we have a left-hand child, go down and then right as far</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   as we can. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>; ", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>=<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return (struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *)<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No left-hand children. Go up till we find an ancestor which</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   is a right-hand child of its parent */</span>", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>)) && <a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#parent\">parent</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rb_prev\">rb_prev</a>);", 
"", 
"void <a class=\"id\" href=\"#rb_replace_node\">rb_replace_node</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#victim\">victim</a>, struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#new\">new</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#victim\">victim</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the surrounding nodes to point to the replacement */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#victim\">victim</a> == <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_set_parent\">rb_set_parent</a>(<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy the pointers/colour from the victim to the replacement */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#new\">new</a> = *<a class=\"id\" href=\"#victim\">victim</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rb_replace_node\">rb_replace_node</a>);", 
];
xr_frag_insert('l/bb/63564b062ce7316c54f9838647be38283a79cf.xr', __xr_tmp);
