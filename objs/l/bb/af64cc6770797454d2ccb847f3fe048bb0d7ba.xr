var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__BEN_VLAN_802_1Q_INC__\">__BEN_VLAN_802_1Q_INC__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__BEN_VLAN_802_1Q_INC__\">__BEN_VLAN_802_1Q_INC__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_vlan\">if_vlan</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#u64_stats_sync\">u64_stats_sync</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>struct vlan_priority_tci_mapping - vlan egress priority mappings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@priority: skb priority</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@vlan_qos: vlan priority: (skb-&gt;priority &lt;&lt; 13) &amp; 0xE000</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@next: pointer to next struct</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#vlan_priority_tci_mapping\">vlan_priority_tci_mapping</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#priority\">priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vlan_qos\">vlan_qos</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vlan_priority_tci_mapping\">vlan_priority_tci_mapping</a><span class=\"ts\"/>*<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>struct vlan_rx_stats - VLAN percpu rx stats</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@rx_packets: number of received packets</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@rx_bytes: number of received bytes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@rx_multicast: number of received multicast packets</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@syncp: synchronization point for 64bit counters</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@rx_errors: number of errors</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#vlan_rx_stats\">vlan_rx_stats</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rx_packets\">rx_packets</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rx_bytes\">rx_bytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rx_multicast\">rx_multicast</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#u64_stats_sync\">u64_stats_sync</a><span class=\"ts\"/><a class=\"id\" href=\"#syncp\">syncp</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rx_errors\">rx_errors</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>struct vlan_dev_info - VLAN private device data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@nr_ingress_mappings: number of ingress priority mappings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ingress_priority_map: ingress priority mappings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@nr_egress_mappings: number of egress priority mappings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@egress_priority_map: hash of egress priority mappings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@vlan_id: VLAN identifier</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@flags: device flags</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@real_dev: underlying netdevice</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@real_dev_addr: address of underlying netdevice</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dent: proc dir entry</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cnt_inc_headroom_on_tx: statistic - number of skb expansions on TX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cnt_encap_on_xmit: statistic - number of skb encapsulations on TX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@vlan_rx_stats: ptr to percpu rx stats</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#vlan_dev_info\">vlan_dev_info</a> {", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_ingress_mappings\">nr_ingress_mappings</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ingress_priority_map\">ingress_priority_map</a>[8];", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_egress_mappings\">nr_egress_mappings</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vlan_priority_tci_mapping\">vlan_priority_tci_mapping</a><span class=\"ts\"/>*<a class=\"id\" href=\"#egress_priority_map\">egress_priority_map</a>[16];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vlan_id\">vlan_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#real_dev\">real_dev</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#real_dev_addr\">real_dev_addr</a>[<a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>];", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dent\">dent</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cnt_inc_headroom_on_tx\">cnt_inc_headroom_on_tx</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cnt_encap_on_xmit\">cnt_encap_on_xmit</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vlan_rx_stats\">vlan_rx_stats</a> <a class=\"id\" href=\"#__percpu\">__percpu</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#vlan_rx_stats\">vlan_rx_stats</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#vlan_dev_info\">vlan_dev_info</a> *<a class=\"id\" href=\"#vlan_dev_info\">vlan_dev_info</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VLAN_GRP_HASH_SHIFT\">VLAN_GRP_HASH_SHIFT</a><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VLAN_GRP_HASH_SIZE\">VLAN_GRP_HASH_SIZE</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#VLAN_GRP_HASH_SHIFT\">VLAN_GRP_HASH_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VLAN_GRP_HASH_MASK\">VLAN_GRP_HASH_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#VLAN_GRP_HASH_SIZE\">VLAN_GRP_HASH_SIZE</a> - 1)", 
"", 
"<span class=\"comment\">/*  Find a VLAN device by the MAC address of its Ethernet device, and</span>", 
"<span class=\"comment\"> *  it's VLAN ID.  The default configuration is to have VLAN's scope</span>", 
"<span class=\"comment\"> *  to be box-wide, so the MAC will be ignored.  The mac will only be</span>", 
"<span class=\"comment\"> *  looked at if we are configured to have a separate set of VLANs per</span>", 
"<span class=\"comment\"> *  each MAC addressable interface.  Note that this latter option does</span>", 
"<span class=\"comment\"> *  NOT follow the spec for VLANs, but may be useful for doing very</span>", 
"<span class=\"comment\"> *  large quantities of VLAN MUX/DEMUX onto FrameRelay or ATM PVCs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Must be invoked with rcu_read_lock (ie preempt disabled)</span>", 
"<span class=\"comment\"> *  or with RTNL.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#__find_vlan_dev\">__find_vlan_dev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#real_dev\">real_dev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#vlan_id\">vlan_id</a>);", 
"", 
"<span class=\"comment\">/* found in vlan_dev.c */</span>", 
"int <a class=\"id\" href=\"#vlan_skb_recv\">vlan_skb_recv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#packet_type\">packet_type</a> *<a class=\"id\" href=\"#ptype\">ptype</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#orig_dev\">orig_dev</a>);", 
"void <a class=\"id\" href=\"#vlan_dev_set_ingress_priority\">vlan_dev_set_ingress_priority</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#skb_prio\">skb_prio</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#vlan_prio\">vlan_prio</a>);", 
"int <a class=\"id\" href=\"#vlan_dev_set_egress_priority\">vlan_dev_set_egress_priority</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#skb_prio\">skb_prio</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#vlan_prio\">vlan_prio</a>);", 
"int <a class=\"id\" href=\"#vlan_dev_change_flags\">vlan_dev_change_flags</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flag\">flag</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"void <a class=\"id\" href=\"#vlan_dev_get_realdev_name\">vlan_dev_get_realdev_name</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, char *<a class=\"id\" href=\"#result\">result</a>);", 
"", 
"int <a class=\"id\" href=\"#vlan_check_real_dev\">vlan_check_real_dev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#real_dev\">real_dev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#vlan_id\">vlan_id</a>);", 
"void <a class=\"id\" href=\"#vlan_setup\">vlan_setup</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#register_vlan_dev\">register_vlan_dev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"void <a class=\"id\" href=\"#unregister_vlan_dev\">unregister_vlan_dev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#vlan_get_ingress_priority\">vlan_get_ingress_priority</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#vlan_tci\">vlan_tci</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vlan_dev_info\">vlan_dev_info</a> *<a class=\"id\" href=\"#vip\">vip</a> = <a class=\"id\" href=\"#vlan_dev_info\">vlan_dev_info</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vip\">vip</a>-><a class=\"id\" href=\"#ingress_priority_map\">ingress_priority_map</a>[(<a class=\"id\" href=\"#vlan_tci\">vlan_tci</a> >> <a class=\"id\" href=\"#VLAN_PRIO_SHIFT\">VLAN_PRIO_SHIFT</a>) &amp; 0x7];", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_VLAN_8021Q_GVRP\">CONFIG_VLAN_8021Q_GVRP</a>", 
"extern int <a class=\"id\" href=\"#vlan_gvrp_request_join\">vlan_gvrp_request_join</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"extern void <a class=\"id\" href=\"#vlan_gvrp_request_leave\">vlan_gvrp_request_leave</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"extern int <a class=\"id\" href=\"#vlan_gvrp_init_applicant\">vlan_gvrp_init_applicant</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"extern void <a class=\"id\" href=\"#vlan_gvrp_uninit_applicant\">vlan_gvrp_uninit_applicant</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"extern int <a class=\"id\" href=\"#vlan_gvrp_init\">vlan_gvrp_init</a>(void);", 
"extern void <a class=\"id\" href=\"#vlan_gvrp_uninit\">vlan_gvrp_uninit</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#vlan_gvrp_request_join\">vlan_gvrp_request_join</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#vlan_gvrp_request_leave\">vlan_gvrp_request_leave</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#vlan_gvrp_init_applicant\">vlan_gvrp_init_applicant</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#vlan_gvrp_uninit_applicant\">vlan_gvrp_uninit_applicant</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#vlan_gvrp_init\">vlan_gvrp_init</a>(void) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#vlan_gvrp_uninit\">vlan_gvrp_uninit</a>(void) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern const char <a class=\"id\" href=\"#vlan_fullname\">vlan_fullname</a>[];", 
"extern const char <a class=\"id\" href=\"#vlan_version\">vlan_version</a>[];", 
"extern int <a class=\"id\" href=\"#vlan_netlink_init\">vlan_netlink_init</a>(void);", 
"extern void <a class=\"id\" href=\"#vlan_netlink_fini\">vlan_netlink_fini</a>(void);", 
"", 
"extern struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> <a class=\"id\" href=\"#vlan_link_ops\">vlan_link_ops</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_vlan_dev\">is_vlan_dev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#priv_flags\">priv_flags</a> &amp; <a class=\"id\" href=\"#IFF_802_1Q_VLAN\">IFF_802_1Q_VLAN</a>;", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#vlan_net_id\">vlan_net_id</a>;", 
"", 
"struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a>;", 
"", 
"struct <a class=\"id\" href=\"#vlan_net\">vlan_net</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* /proc/net/vlan */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#proc_vlan_dir\">proc_vlan_dir</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* /proc/net/vlan/config */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#proc_vlan_conf\">proc_vlan_conf</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Determines interface naming scheme. */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#name_type\">name_type</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !(__BEN_VLAN_802_1Q_INC__) */</span>", 
];
xr_frag_insert('l/bb/af64cc6770797454d2ccb847f3fe048bb0d7ba.xr', __xr_tmp);
