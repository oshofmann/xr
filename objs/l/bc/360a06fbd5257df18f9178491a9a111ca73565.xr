var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"unexpected eh_depth\";", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#corrupted\">corrupted</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a> == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"invalid eh_max\";", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#corrupted\">corrupted</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#ext4_ext_max_entries\">ext4_ext_max_entries</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>) &gt; <a class=\"id\" href=\"#max\">max</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"too large eh_max\";", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#corrupted\">corrupted</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>) &gt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"invalid eh_entries\";", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#corrupted\">corrupted</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_valid_extent_entries\">ext4_valid_extent_entries</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#eh\">eh</a>, <a class=\"id\" href=\"#depth\">depth</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"invalid extent entries\";", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#corrupted\">corrupted</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#corrupted\">corrupted</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_error_inode\">ext4_error_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"bad header/extent: %s - magic %x, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"entries %u, max %u(%u), depth %u(%u)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a>, <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_magic\">eh_magic</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>), <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>, <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_depth\">eh_depth</a>), <a class=\"id\" href=\"#depth\">depth</a>);", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_ext_check\">ext4_ext_check</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#eh\">eh</a>, <a class=\"id\" href=\"#depth\">depth</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_ext_check\">__ext4_ext_check</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#eh\">eh</a>, <a class=\"id\" href=\"#depth\">depth</a>)", 
"", 
"int <a class=\"id\" href=\"#ext4_ext_check_inode\">ext4_ext_check_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext4_ext_check\">ext4_ext_check</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext_inode_hdr\">ext_inode_hdr</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXT_DEBUG\">EXT_DEBUG</a>", 
"static void <a class=\"id\" href=\"#ext4_ext_show_path\">ext4_ext_show_path</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"path:\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> <= <a class=\"id\" href=\"#l\">l</a>; <a class=\"id\" href=\"#k\">k</a>++, <a class=\"id\" href=\"#path\">path</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"  %d->%llu\", <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"  %d:[%d]%d:%llu \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_ext\">p_ext</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"  []\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"\\n\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext4_ext_show_leaf\">ext4_ext_show_leaf</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"Displaying leaf extents for inode %lu\\n\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>); <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#ex\">ex</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"%d:[%d]%d:%llu \", <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>), <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"\\n\");", 
"}", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_ext_show_path\">ext4_ext_show_path</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_ext_show_leaf\">ext4_ext_show_leaf</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#depth\">depth</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#path\">path</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_bh\">p_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_bh\">p_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_binsearch_idx:</span>", 
"<span class=\"comment\"> * binary search for the closest index of the given block</span>", 
"<span class=\"comment\"> * the header must be checked before calling this</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#ext4_ext_binsearch_idx\">ext4_ext_binsearch_idx</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#block\">block</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a> *<a class=\"id\" href=\"#r\">r</a>, *<a class=\"id\" href=\"#l\">l</a>, *<a class=\"id\" href=\"#m\">m</a>;", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"binsearch for %u(idx):  \", <a class=\"id\" href=\"#block\">block</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#eh\">eh</a>) + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#EXT_LAST_INDEX\">EXT_LAST_INDEX</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#l\">l</a> <= <a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#l\">l</a> + (<a class=\"id\" href=\"#r\">r</a> - <a class=\"id\" href=\"#l\">l</a>) / 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#m\">m</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#m\">m</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"%p(%u):%p(%u):%p(%u) \", <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#l\">l</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#ei_block\">ei_block</a>));", 
"<span class=\"ts\"/>}", 
"", 
];
xr_frag_insert('l/bc/360a06fbd5257df18f9178491a9a111ca73565.xr', __xr_tmp);
