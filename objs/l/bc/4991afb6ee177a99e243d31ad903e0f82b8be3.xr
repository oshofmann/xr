var __xr_tmp = [
"<span class=\"comment\">/* flow.c: Generic flow cache.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 Alexey N. Kuznetsov (kuznet@ms2.inr.ac.ru)</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 David S. Miller (davem@redhat.com)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jhash\">jhash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#completion\">completion</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#flow\">flow</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#flow_cache_entry\">flow_cache_entry</a> {", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a><span class=\"ts\"/><a class=\"id\" href=\"#hlist\">hlist</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#gc_list\">gc_list</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#u\">u</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genid\">genid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_object\">flow_cache_object</a><span class=\"ts\"/>*<a class=\"id\" href=\"#object\">object</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#hash_table\">hash_table</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash_count\">hash_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash_rnd_recalc\">hash_rnd_recalc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_tasklet\">flush_tasklet</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#flow_flush_info\">flow_flush_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#cache\">cache</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuleft\">cpuleft</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#completion\">completion</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#completion\">completion</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash_shift\">hash_shift</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a><span class=\"ts\"/>*<a class=\"id\" href=\"#percpu\">percpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hotcpu_notifier\">hotcpu_notifier</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#low_watermark\">low_watermark</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#high_watermark\">high_watermark</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rnd_timer\">rnd_timer</a>;", 
"};", 
"", 
"<a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#flow_cache_genid\">flow_cache_genid</a> = <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(0);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#flow_cache_genid\">flow_cache_genid</a>);", 
"static struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> <a class=\"id\" href=\"#flow_cache_global\">flow_cache_global</a>;", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#flow_cachep\">flow_cachep</a>;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#flow_cache_gc_lock\">flow_cache_gc_lock</a>);", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#flow_cache_gc_list\">flow_cache_gc_list</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#flow_cache_hash_size\">flow_cache_hash_size</a>(<a class=\"id\" href=\"#cache\">cache</a>)<span class=\"ts\"/>(1 << (<a class=\"id\" href=\"#cache\">cache</a>)-><a class=\"id\" href=\"#hash_shift\">hash_shift</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FLOW_HASH_RND_PERIOD\">FLOW_HASH_RND_PERIOD</a><span class=\"ts\"/><span class=\"ts\"/>(10 * 60 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"static void <a class=\"id\" href=\"#flow_cache_new_hashrnd\">flow_cache_new_hashrnd</a>(unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a> = (void *) <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#percpu\">percpu</a>, <a class=\"id\" href=\"#i\">i</a>)-><a class=\"id\" href=\"#hash_rnd_recalc\">hash_rnd_recalc</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#rnd_timer\">rnd_timer</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#FLOW_HASH_RND_PERIOD\">FLOW_HASH_RND_PERIOD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_timer\">add_timer</a>(&amp;<a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#rnd_timer\">rnd_timer</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#flow_entry_valid\">flow_entry_valid</a>(struct <a class=\"id\" href=\"#flow_cache_entry\">flow_cache_entry</a> *<a class=\"id\" href=\"#fle\">fle</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#flow_cache_genid\">flow_cache_genid</a>) != <a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#genid\">genid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a> && !<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#check\">check</a>(<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#flow_entry_kill\">flow_entry_kill</a>(struct <a class=\"id\" href=\"#flow_cache_entry\">flow_cache_entry</a> *<a class=\"id\" href=\"#fle\">fle</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#delete\">delete</a>(<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#flow_cachep\">flow_cachep</a>, <a class=\"id\" href=\"#fle\">fle</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#flow_cache_gc_task\">flow_cache_gc_task</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#gc_list\">gc_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_entry\">flow_cache_entry</a> *<a class=\"id\" href=\"#fce\">fce</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#gc_list\">gc_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#flow_cache_gc_lock\">flow_cache_gc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_splice_tail_init\">list_splice_tail_init</a>(&amp;<a class=\"id\" href=\"#flow_cache_gc_list\">flow_cache_gc_list</a>, &amp;<a class=\"id\" href=\"#gc_list\">gc_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#flow_cache_gc_lock\">flow_cache_gc_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#fce\">fce</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#gc_list\">gc_list</a>, <a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#gc_list\">gc_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flow_entry_kill\">flow_entry_kill</a>(<a class=\"id\" href=\"#fce\">fce</a>);", 
"}", 
"static <a class=\"id\" href=\"#DECLARE_WORK\">DECLARE_WORK</a>(<a class=\"id\" href=\"#flow_cache_gc_work\">flow_cache_gc_work</a>, <a class=\"id\" href=\"#flow_cache_gc_task\">flow_cache_gc_task</a>);", 
"", 
"static void <a class=\"id\" href=\"#flow_cache_queue_garbage\">flow_cache_queue_garbage</a>(struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> *<a class=\"id\" href=\"#fcp\">fcp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#deleted\">deleted</a>, struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#gc_list\">gc_list</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#deleted\">deleted</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_count\">hash_count</a> -= <a class=\"id\" href=\"#deleted\">deleted</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#flow_cache_gc_lock\">flow_cache_gc_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_splice_tail\">list_splice_tail</a>(<a class=\"id\" href=\"#gc_list\">gc_list</a>, &amp;<a class=\"id\" href=\"#flow_cache_gc_list\">flow_cache_gc_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#flow_cache_gc_lock\">flow_cache_gc_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#flow_cache_gc_work\">flow_cache_gc_work</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__flow_cache_shrink\">__flow_cache_shrink</a>(struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> *<a class=\"id\" href=\"#fcp\">fcp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#shrink_to\">shrink_to</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_entry\">flow_cache_entry</a> *<a class=\"id\" href=\"#fle\">fle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#entry\">entry</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#gc_list\">gc_list</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#deleted\">deleted</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#flow_cache_hash_size\">flow_cache_hash_size</a>(<a class=\"id\" href=\"#fc\">fc</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#saved\">saved</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_safe\">hlist_for_each_entry_safe</a>(<a class=\"id\" href=\"#fle\">fle</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#tmp\">tmp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_table\">hash_table</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#hlist\">hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#saved\">saved</a> &lt; <a class=\"id\" href=\"#shrink_to\">shrink_to</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#flow_entry_valid\">flow_entry_valid</a>(<a class=\"id\" href=\"#fle\">fle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved\">saved</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deleted\">deleted</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#hlist\">hlist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#gc_list\">gc_list</a>, &amp;<a class=\"id\" href=\"#gc_list\">gc_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flow_cache_queue_garbage\">flow_cache_queue_garbage</a>(<a class=\"id\" href=\"#fcp\">fcp</a>, <a class=\"id\" href=\"#deleted\">deleted</a>, &amp;<a class=\"id\" href=\"#gc_list\">gc_list</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#flow_cache_shrink\">flow_cache_shrink</a>(struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> *<a class=\"id\" href=\"#fcp\">fcp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#shrink_to\">shrink_to</a> = <a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#low_watermark\">low_watermark</a> / <a class=\"id\" href=\"#flow_cache_hash_size\">flow_cache_hash_size</a>(<a class=\"id\" href=\"#fc\">fc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flow_cache_shrink\">__flow_cache_shrink</a>(<a class=\"id\" href=\"#fc\">fc</a>, <a class=\"id\" href=\"#fcp\">fcp</a>, <a class=\"id\" href=\"#shrink_to\">shrink_to</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#flow_new_hash_rnd\">flow_new_hash_rnd</a>(struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> *<a class=\"id\" href=\"#fcp\">fcp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_rnd_recalc\">hash_rnd_recalc</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flow_cache_shrink\">__flow_cache_shrink</a>(<a class=\"id\" href=\"#fc\">fc</a>, <a class=\"id\" href=\"#fcp\">fcp</a>, 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flow_hash_code\">flow_hash_code</a>(struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> *<a class=\"id\" href=\"#fcp\">fcp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#k\">k</a> = (<a class=\"id\" href=\"#u32\">u32</a> *) <a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#jhash2\">jhash2</a>(<a class=\"id\" href=\"#k\">k</a>, (sizeof(*<a class=\"id\" href=\"#key\">key</a>) / sizeof(<a class=\"id\" href=\"#u32\">u32</a>)), <a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&amp; (<a class=\"id\" href=\"#flow_cache_hash_size\">flow_cache_hash_size</a>(<a class=\"id\" href=\"#fc\">fc</a>) - 1));", 
"}", 
"", 
"#if (<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> == 64)", 
"typedef <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#flow_compare_t\">flow_compare_t</a>;", 
"#else", 
"typedef <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flow_compare_t\">flow_compare_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* I hear what you're saying, use memcmp.  But memcmp cannot make</span>", 
"<span class=\"comment\"> * important assumptions that we can here, such as alignment and</span>", 
"<span class=\"comment\"> * constant size.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#flow_key_compare\">flow_key_compare</a>(struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#key1\">key1</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#key2\">key2</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flow_compare_t\">flow_compare_t</a> *<a class=\"id\" href=\"#k1\">k1</a>, *<a class=\"id\" href=\"#k1_lim\">k1_lim</a>, *<a class=\"id\" href=\"#k2\">k2</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#n_elem\">n_elem</a> = sizeof(struct <a class=\"id\" href=\"#flowi\">flowi</a>) / sizeof(<a class=\"id\" href=\"#flow_compare_t\">flow_compare_t</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(sizeof(struct <a class=\"id\" href=\"#flowi\">flowi</a>) % sizeof(<a class=\"id\" href=\"#flow_compare_t\">flow_compare_t</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k1\">k1</a> = (<a class=\"id\" href=\"#flow_compare_t\">flow_compare_t</a> *) <a class=\"id\" href=\"#key1\">key1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k1_lim\">k1_lim</a> = <a class=\"id\" href=\"#k1\">k1</a> + <a class=\"id\" href=\"#n_elem\">n_elem</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k2\">k2</a> = (<a class=\"id\" href=\"#flow_compare_t\">flow_compare_t</a> *) <a class=\"id\" href=\"#key2\">key2</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#k1\">k1</a>++ != *<a class=\"id\" href=\"#k2\">k2</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#k1\">k1</a> &lt; <a class=\"id\" href=\"#k1_lim\">k1_lim</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#flow_cache_object\">flow_cache_object</a> *", 
"<a class=\"id\" href=\"#flow_cache_lookup\">flow_cache_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#flow_resolve_t\">flow_resolve_t</a> <a class=\"id\" href=\"#resolver\">resolver</a>, void *<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a> = &amp;<a class=\"id\" href=\"#flow_cache_global\">flow_cache_global</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> *<a class=\"id\" href=\"#fcp\">fcp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_entry\">flow_cache_entry</a> *<a class=\"id\" href=\"#fle\">fle</a>, *<a class=\"id\" href=\"#tfle\">tfle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_object\">flow_cache_object</a> *<a class=\"id\" href=\"#flo\">flo</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fcp\">fcp</a> = <a class=\"id\" href=\"#this_cpu_ptr\">this_cpu_ptr</a>(<a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#percpu\">percpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flo\">flo</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Packet really early in init?  Making flow_cache_init a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pre-smp initcall would solve this.  --RR */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_table\">hash_table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nocache\">nocache</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_rnd_recalc\">hash_rnd_recalc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flow_new_hash_rnd\">flow_new_hash_rnd</a>(<a class=\"id\" href=\"#fc\">fc</a>, <a class=\"id\" href=\"#fcp\">fcp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#flow_hash_code\">flow_hash_code</a>(<a class=\"id\" href=\"#fc\">fc</a>, <a class=\"id\" href=\"#fcp\">fcp</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#tfle\">tfle</a>, <a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_table\">hash_table</a>[<a class=\"id\" href=\"#hash\">hash</a>], <a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#hlist\">hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tfle\">tfle</a>-><a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#family\">family</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tfle\">tfle</a>-><a class=\"id\" href=\"#dir\">dir</a> == <a class=\"id\" href=\"#dir\">dir</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#flow_key_compare\">flow_key_compare</a>(<a class=\"id\" href=\"#key\">key</a>, &amp;<a class=\"id\" href=\"#tfle\">tfle</a>-><a class=\"id\" href=\"#key\">key</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a> = <a class=\"id\" href=\"#tfle\">tfle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#fle\">fle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_count\">hash_count</a> &gt; <a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#high_watermark\">high_watermark</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flow_cache_shrink\">flow_cache_shrink</a>(<a class=\"id\" href=\"#fc\">fc</a>, <a class=\"id\" href=\"#fcp\">fcp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#flow_cachep\">flow_cachep</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fle\">fle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#key\">key</a>, sizeof(*<a class=\"id\" href=\"#key\">key</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#hlist\">hlist</a>, &amp;<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_table\">hash_table</a>[<a class=\"id\" href=\"#hash\">hash</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_count\">hash_count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#genid\">genid</a> == <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#flow_cache_genid\">flow_cache_genid</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flo\">flo</a> = <a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#flo\">flo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ret_object\">ret_object</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flo\">flo</a> = <a class=\"id\" href=\"#flo\">flo</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#flo\">flo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flo\">flo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ret_object\">ret_object</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a>) {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#flo\">flo</a> = <a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#flo\">flo</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#delete\">delete</a>(<a class=\"id\" href=\"#flo\">flo</a>);", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#nocache\">nocache</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flo\">flo</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fle\">fle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flo\">flo</a> = <a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flo\">flo</a> = <a class=\"id\" href=\"#resolver\">resolver</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#flo\">flo</a>, <a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fle\">fle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#genid\">genid</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#flow_cache_genid\">flow_cache_genid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#flo\">flo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#flo\">flo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#genid\">genid</a>--;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flo\">flo</a> && !<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#flo\">flo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flo\">flo</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#delete\">delete</a>(<a class=\"id\" href=\"#flo\">flo</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#ret_object\">ret_object</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flo\">flo</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#flow_cache_lookup\">flow_cache_lookup</a>);", 
"", 
"static void <a class=\"id\" href=\"#flow_cache_flush_tasklet\">flow_cache_flush_tasklet</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_flush_info\">flow_flush_info</a> *<a class=\"id\" href=\"#info\">info</a> = (void *)<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#cache\">cache</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> *<a class=\"id\" href=\"#fcp\">fcp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_entry\">flow_cache_entry</a> *<a class=\"id\" href=\"#fle\">fle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#entry\">entry</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#gc_list\">gc_list</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#deleted\">deleted</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fcp\">fcp</a> = <a class=\"id\" href=\"#this_cpu_ptr\">this_cpu_ptr</a>(<a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#percpu\">percpu</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#flow_cache_hash_size\">flow_cache_hash_size</a>(<a class=\"id\" href=\"#fc\">fc</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_safe\">hlist_for_each_entry_safe</a>(<a class=\"id\" href=\"#fle\">fle</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#tmp\">tmp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_table\">hash_table</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#hlist\">hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flow_entry_valid\">flow_entry_valid</a>(<a class=\"id\" href=\"#fle\">fle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deleted\">deleted</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#hlist\">hlist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#fle\">fle</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#gc_list\">gc_list</a>, &amp;<a class=\"id\" href=\"#gc_list\">gc_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flow_cache_queue_garbage\">flow_cache_queue_garbage</a>(<a class=\"id\" href=\"#fcp\">fcp</a>, <a class=\"id\" href=\"#deleted\">deleted</a>, &amp;<a class=\"id\" href=\"#gc_list\">gc_list</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#cpuleft\">cpuleft</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#completion\">completion</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#flow_cache_flush_per_cpu\">flow_cache_flush_per_cpu</a>(void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_flush_info\">flow_flush_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tasklet_struct\">tasklet_struct</a> *<a class=\"id\" href=\"#tasklet\">tasklet</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tasklet\">tasklet</a> = &amp;<a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#percpu\">percpu</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#flush_tasklet\">flush_tasklet</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tasklet\">tasklet</a>-><a class=\"id\" href=\"#data\">data</a> = (unsigned long)<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tasklet_schedule\">tasklet_schedule</a>(<a class=\"id\" href=\"#tasklet\">tasklet</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#flow_cache_flush\">flow_cache_flush</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_flush_info\">flow_flush_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#flow_flush_sem\">flow_flush_sem</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't want cpus going down or up during this. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_online_cpus\">get_online_cpus</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#flow_flush_sem\">flow_flush_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#cache\">cache</a> = &amp;<a class=\"id\" href=\"#flow_cache_global\">flow_cache_global</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#cpuleft\">cpuleft</a>, <a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_call_function\">smp_call_function</a>(<a class=\"id\" href=\"#flow_cache_flush_per_cpu\">flow_cache_flush_per_cpu</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flow_cache_flush_tasklet\">flow_cache_flush_tasklet</a>((unsigned long)&amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(&amp;<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#flow_flush_sem\">flow_flush_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_online_cpus\">put_online_cpus</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#flow_cache_cpu_prepare\">flow_cache_cpu_prepare</a>(struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> *<a class=\"id\" href=\"#fcp\">fcp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_table\">hash_table</a> = (struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_free_pages\">__get_free_pages</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>|<a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>, <a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#order\">order</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_table\">hash_table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"NET: failed to allocate flow cache order %lu\\n\", <a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#order\">order</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_rnd_recalc\">hash_rnd_recalc</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#hash_count\">hash_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tasklet_init\">tasklet_init</a>(&amp;<a class=\"id\" href=\"#fcp\">fcp</a>-><a class=\"id\" href=\"#flush_tasklet\">flush_tasklet</a>, <a class=\"id\" href=\"#flow_cache_flush_tasklet\">flow_cache_flush_tasklet</a>, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#flow_cache_cpu\">flow_cache_cpu</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nfb\">nfb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#action\">action</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#nfb\">nfb</a>, struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a>, <a class=\"id\" href=\"#hotcpu_notifier\">hotcpu_notifier</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = (unsigned long) <a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a> *<a class=\"id\" href=\"#fcp\">fcp</a> = <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#percpu\">percpu</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#action\">action</a> == <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a> || <a class=\"id\" href=\"#action\">action</a> == <a class=\"id\" href=\"#CPU_DEAD_FROZEN\">CPU_DEAD_FROZEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flow_cache_shrink\">__flow_cache_shrink</a>(<a class=\"id\" href=\"#fc\">fc</a>, <a class=\"id\" href=\"#fcp\">fcp</a>, 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#flow_cache_init\">flow_cache_init</a>(struct <a class=\"id\" href=\"#flow_cache\">flow_cache</a> *<a class=\"id\" href=\"#fc\">fc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#hash_shift\">hash_shift</a> = 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#low_watermark\">low_watermark</a> = 2 * <a class=\"id\" href=\"#flow_cache_hash_size\">flow_cache_hash_size</a>(<a class=\"id\" href=\"#fc\">fc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#high_watermark\">high_watermark</a> = 4 * <a class=\"id\" href=\"#flow_cache_hash_size\">flow_cache_hash_size</a>(<a class=\"id\" href=\"#fc\">fc</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#order\">order</a> = 0;", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> << <a class=\"id\" href=\"#order\">order</a>) &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/>     (sizeof(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a>)*<a class=\"id\" href=\"#flow_cache_hash_size\">flow_cache_hash_size</a>(<a class=\"id\" href=\"#fc\">fc</a>));", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#order\">order</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* NOTHING */</span>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#order\">order</a> = <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#percpu\">percpu</a> = <a class=\"id\" href=\"#alloc_percpu\">alloc_percpu</a>(struct <a class=\"id\" href=\"#flow_cache_percpu\">flow_cache_percpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#rnd_timer\">rnd_timer</a>, <a class=\"id\" href=\"#flow_cache_new_hashrnd\">flow_cache_new_hashrnd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    (unsigned long) <a class=\"id\" href=\"#fc\">fc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#rnd_timer\">rnd_timer</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#FLOW_HASH_RND_PERIOD\">FLOW_HASH_RND_PERIOD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_timer\">add_timer</a>(&amp;<a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#rnd_timer\">rnd_timer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flow_cache_cpu_prepare\">flow_cache_cpu_prepare</a>(<a class=\"id\" href=\"#fc\">fc</a>, <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#percpu\">percpu</a>, <a class=\"id\" href=\"#i\">i</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#hotcpu_notifier\">hotcpu_notifier</a> = (struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a>){", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#flow_cache_cpu\">flow_cache_cpu</a>,", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_hotcpu_notifier\">register_hotcpu_notifier</a>(&amp;<a class=\"id\" href=\"#fc\">fc</a>-><a class=\"id\" href=\"#hotcpu_notifier\">hotcpu_notifier</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#flow_cache_init_global\">flow_cache_init_global</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flow_cachep\">flow_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"flow_cache\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#flow_cache_entry\">flow_cache_entry</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flow_cache_init\">flow_cache_init</a>(&amp;<a class=\"id\" href=\"#flow_cache_global\">flow_cache_global</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#flow_cache_init_global\">flow_cache_init_global</a>);", 
];
xr_frag_insert('l/bc/4991afb6ee177a99e243d31ad903e0f82b8be3.xr', __xr_tmp);
