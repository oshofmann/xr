var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * File:<span class=\"ts\"/>htirq.c</span>", 
"<span class=\"comment\"> * Purpose:<span class=\"ts\"/>Hypertransport Interrupt Capability</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2006 Linux Networx</span>", 
"<span class=\"comment\"> * Copyright (C) Eric Biederman &lt;ebiederman@lnxi.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#htirq\">htirq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Global ht irq lock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is needed to serialize access to the data port in hypertransport</span>", 
"<span class=\"comment\"> * irq capability.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * With multiple simultaneous hypertransport irq devices it might pay</span>", 
"<span class=\"comment\"> * to make this more fine grained.  But start with simple, stupid, and correct.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#ht_irq_lock\">ht_irq_lock</a>);", 
"", 
"struct <a class=\"id\" href=\"#ht_irq_cfg\">ht_irq_cfg</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/> <span class=\"comment\">/* Update callback used to cope with buggy hardware */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ht_irq_update_t\">ht_irq_update_t</a> *<a class=\"id\" href=\"#update\">update</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ht_irq_msg\">ht_irq_msg</a> <a class=\"id\" href=\"#msg\">msg</a>;", 
"};", 
"", 
"", 
"void <a class=\"id\" href=\"#write_ht_irq_msg\">write_ht_irq_msg</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#ht_irq_msg\">ht_irq_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ht_irq_cfg\">ht_irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#get_irq_data\">get_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ht_irq_lock\">ht_irq_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#address_lo\">address_lo</a> != <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_lo\">address_lo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#pos\">pos</a> + 2, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#pos\">pos</a> + 4, <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_lo\">address_lo</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#address_hi\">address_hi</a> != <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_hi\">address_hi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#pos\">pos</a> + 2, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#idx\">idx</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#pos\">pos</a> + 4, <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_hi\">address_hi</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#update\">update</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#update\">update</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#msg\">msg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ht_irq_lock\">ht_irq_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#msg\">msg</a> = *<a class=\"id\" href=\"#msg\">msg</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#fetch_ht_irq_msg\">fetch_ht_irq_msg</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#ht_irq_msg\">ht_irq_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ht_irq_cfg\">ht_irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#get_irq_data\">get_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#msg\">msg</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#msg\">msg</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#mask_ht_irq\">mask_ht_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ht_irq_cfg\">ht_irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ht_irq_msg\">ht_irq_msg</a> <a class=\"id\" href=\"#msg\">msg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#get_irq_data\">get_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#address_lo\">address_lo</a> |= 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_ht_irq_msg\">write_ht_irq_msg</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#unmask_ht_irq\">unmask_ht_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ht_irq_cfg\">ht_irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ht_irq_msg\">ht_irq_msg</a> <a class=\"id\" href=\"#msg\">msg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#get_irq_data\">get_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#address_lo\">address_lo</a> &= ~1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_ht_irq_msg\">write_ht_irq_msg</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __ht_create_irq - create an irq and attach it to a device.</span>", 
"<span class=\"comment\"> * @dev: The hypertransport device to find the irq capability on.</span>", 
"<span class=\"comment\"> * @idx: Which of the possible irqs to attach to.</span>", 
"<span class=\"comment\"> * @update: Function to be called when changing the htirq message</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The irq number of the new irq or a negative error value is returned.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__ht_create_irq\">__ht_create_irq</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#ht_irq_update_t\">ht_irq_update_t</a> *<a class=\"id\" href=\"#update\">update</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ht_irq_cfg\">ht_irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#max_irq\">max_irq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_ht_capability\">pci_find_ht_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#HT_CAPTYPE_IRQ\">HT_CAPTYPE_IRQ</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Verify the idx I want to use is in range */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ht_irq_lock\">ht_irq_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + 2, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + 4, &amp;<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ht_irq_lock\">ht_irq_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_irq\">max_irq</a> = (<a class=\"id\" href=\"#data\">data</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/>if ( <a class=\"id\" href=\"#idx\">idx</a> &gt; <a class=\"id\" href=\"#max_irq\">max_irq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#cfg\">cfg</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#update\">update</a> = <a class=\"id\" href=\"#update\">update</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#idx\">idx</a> = 0x10 + (<a class=\"id\" href=\"#idx\">idx</a> * 2);", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize msg to a value that will never match the first write. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#address_lo\">address_lo</a> = 0xffffffff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#address_hi\">address_hi</a> = 0xffffffff;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#dev_to_node\">dev_to_node</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#create_irq_nr\">create_irq_nr</a>(0, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_irq_data\">set_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#cfg\">cfg</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arch_setup_ht_irq\">arch_setup_ht_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#dev\">dev</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ht_destroy_irq\">ht_destroy_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ht_create_irq - create an irq and attach it to a device.</span>", 
"<span class=\"comment\"> * @dev: The hypertransport device to find the irq capability on.</span>", 
"<span class=\"comment\"> * @idx: Which of the possible irqs to attach to.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ht_create_irq needs to be called for all hypertransport devices</span>", 
"<span class=\"comment\"> * that generate irqs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The irq number of the new irq or a negative error value is returned.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ht_create_irq\">ht_create_irq</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ht_create_irq\">__ht_create_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ht_destroy_irq - destroy an irq created with ht_create_irq</span>", 
"<span class=\"comment\"> * @irq: irq to be destroyed</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This reverses ht_create_irq removing the specified irq from</span>", 
"<span class=\"comment\"> * existence.  The irq should be free before this happens.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ht_destroy_irq\">ht_destroy_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ht_irq_cfg\">ht_irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#get_irq_data\">get_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_irq_chip\">set_irq_chip</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_irq_data\">set_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_irq\">destroy_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__ht_create_irq\">__ht_create_irq</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ht_create_irq\">ht_create_irq</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ht_destroy_irq\">ht_destroy_irq</a>);", 
];
xr_frag_insert('l/bc/c23b5efde21ba4c40c8a0eedbdec81644ec92a.xr', __xr_tmp);
