var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_POLL_H\">_LINUX_POLL_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_POLL_H\">_LINUX_POLL_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ktime\">ktime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> <a class=\"id\" href=\"#epoll_table\">epoll_table</a>[]; <span class=\"comment\">/* for sysctl */</span>", 
"<span class=\"comment\">/* ~832 bytes of stack space used max in sys_select/sys_poll before allocating</span>", 
"<span class=\"comment\">   additional memory. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_STACK_ALLOC\">MAX_STACK_ALLOC</a> 832", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FRONTEND_STACK_ALLOC\">FRONTEND_STACK_ALLOC</a><span class=\"ts\"/>256", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SELECT_STACK_ALLOC\">SELECT_STACK_ALLOC</a><span class=\"ts\"/><a class=\"id\" href=\"#FRONTEND_STACK_ALLOC\">FRONTEND_STACK_ALLOC</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POLL_STACK_ALLOC\">POLL_STACK_ALLOC</a><span class=\"ts\"/><a class=\"id\" href=\"#FRONTEND_STACK_ALLOC\">FRONTEND_STACK_ALLOC</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#WQUEUES_STACK_ALLOC\">WQUEUES_STACK_ALLOC</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MAX_STACK_ALLOC\">MAX_STACK_ALLOC</a> - <a class=\"id\" href=\"#FRONTEND_STACK_ALLOC\">FRONTEND_STACK_ALLOC</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#N_INLINE_POLL_ENTRIES\">N_INLINE_POLL_ENTRIES</a><span class=\"ts\"/>(<a class=\"id\" href=\"#WQUEUES_STACK_ALLOC\">WQUEUES_STACK_ALLOC</a> / sizeof(struct <a class=\"id\" href=\"#poll_table_entry\">poll_table_entry</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_POLLMASK\">DEFAULT_POLLMASK</a> (<a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a> | <a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a>)", 
"", 
"struct <a class=\"id\" href=\"#poll_table_struct\">poll_table_struct</a>;", 
"", 
"<span class=\"comment\">/* </span>", 
"<span class=\"comment\"> * structures and helpers for f_op-&gt;poll implementations</span>", 
"<span class=\"comment\"> */</span>", 
"typedef void (*<a class=\"id\" href=\"#poll_queue_proc\">poll_queue_proc</a>)(struct <a class=\"id\" href=\"#file\">file</a> *, <a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> *, struct <a class=\"id\" href=\"#poll_table_struct\">poll_table_struct</a> *);", 
"", 
"typedef struct <a class=\"id\" href=\"#poll_table_struct\">poll_table_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_queue_proc\">poll_queue_proc</a> <a class=\"id\" href=\"#qproc\">qproc</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#key\">key</a>;", 
"} <a class=\"id\" href=\"#poll_table\">poll_table</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#poll_wait\">poll_wait</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> * <a class=\"id\" href=\"#wait_address\">wait_address</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> && <a class=\"id\" href=\"#wait_address\">wait_address</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#qproc\">qproc</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#wait_address\">wait_address</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#init_poll_funcptr\">init_poll_funcptr</a>(<a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#pt\">pt</a>, <a class=\"id\" href=\"#poll_queue_proc\">poll_queue_proc</a> <a class=\"id\" href=\"#qproc\">qproc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#qproc\">qproc</a> = <a class=\"id\" href=\"#qproc\">qproc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#key\">key</a>   = ~0UL; <span class=\"comment\">/* all events enabled */</span>", 
"}", 
"", 
"struct <a class=\"id\" href=\"#poll_table_entry\">poll_table_entry</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_t\">wait_queue_t</a> <a class=\"id\" href=\"#wait\">wait</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> *<a class=\"id\" href=\"#wait_address\">wait_address</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structures and helpers for sys_poll/sys_poll</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#poll_wqueues\">poll_wqueues</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_table\">poll_table</a> <a class=\"id\" href=\"#pt\">pt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#poll_table_page\">poll_table_page</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#polling_task\">polling_task</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#triggered\">triggered</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#inline_index\">inline_index</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#poll_table_entry\">poll_table_entry</a> <a class=\"id\" href=\"#inline_entries\">inline_entries</a>[<a class=\"id\" href=\"#N_INLINE_POLL_ENTRIES\">N_INLINE_POLL_ENTRIES</a>];", 
"};", 
"", 
"extern void <a class=\"id\" href=\"#poll_initwait\">poll_initwait</a>(struct <a class=\"id\" href=\"#poll_wqueues\">poll_wqueues</a> *<a class=\"id\" href=\"#pwq\">pwq</a>);", 
"extern void <a class=\"id\" href=\"#poll_freewait\">poll_freewait</a>(struct <a class=\"id\" href=\"#poll_wqueues\">poll_wqueues</a> *<a class=\"id\" href=\"#pwq\">pwq</a>);", 
"extern int <a class=\"id\" href=\"#poll_schedule_timeout\">poll_schedule_timeout</a>(struct <a class=\"id\" href=\"#poll_wqueues\">poll_wqueues</a> *<a class=\"id\" href=\"#pwq\">pwq</a>, int <a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ktime_t\">ktime_t</a> *<a class=\"id\" href=\"#expires\">expires</a>, unsigned long <a class=\"id\" href=\"#slack\">slack</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#poll_schedule\">poll_schedule</a>(struct <a class=\"id\" href=\"#poll_wqueues\">poll_wqueues</a> *<a class=\"id\" href=\"#pwq\">pwq</a>, int <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#poll_schedule_timeout\">poll_schedule_timeout</a>(<a class=\"id\" href=\"#pwq\">pwq</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Scaleable version of the fd_set.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"typedef struct {", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#in\">in</a>, *<a class=\"id\" href=\"#out\">out</a>, *<a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#res_in\">res_in</a>, *<a class=\"id\" href=\"#res_out\">res_out</a>, *<a class=\"id\" href=\"#res_ex\">res_ex</a>;", 
"} <a class=\"id\" href=\"#fd_set_bits\">fd_set_bits</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * How many longwords for \"nr\" bits?</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDS_BITPERLONG\">FDS_BITPERLONG</a><span class=\"ts\"/>(8*sizeof(long))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDS_LONGS\">FDS_LONGS</a>(<a class=\"id\" href=\"#nr\">nr</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#nr\">nr</a>)+<a class=\"id\" href=\"#FDS_BITPERLONG\">FDS_BITPERLONG</a>-1)/<a class=\"id\" href=\"#FDS_BITPERLONG\">FDS_BITPERLONG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FDS_BYTES\">FDS_BYTES</a>(<a class=\"id\" href=\"#nr\">nr</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#FDS_LONGS\">FDS_LONGS</a>(<a class=\"id\" href=\"#nr\">nr</a>)*sizeof(long))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We do a VERIFY_WRITE here even though we are only reading this time:</span>", 
"<span class=\"comment\"> * we'll write to it eventually..</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Use \"unsigned long\" accesses to let user-mode fd_set's be long-aligned.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"int <a class=\"id\" href=\"#get_fd_set\">get_fd_set</a>(unsigned long <a class=\"id\" href=\"#nr\">nr</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ufdset\">ufdset</a>, unsigned long *<a class=\"id\" href=\"#fdset\">fdset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#FDS_BYTES\">FDS_BYTES</a>(<a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ufdset\">ufdset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#fdset\">fdset</a>, <a class=\"id\" href=\"#ufdset\">ufdset</a>, <a class=\"id\" href=\"#nr\">nr</a>) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#fdset\">fdset</a>, 0, <a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#__must_check\">__must_check</a>", 
"<a class=\"id\" href=\"#set_fd_set\">set_fd_set</a>(unsigned long <a class=\"id\" href=\"#nr\">nr</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ufdset\">ufdset</a>, unsigned long *<a class=\"id\" href=\"#fdset\">fdset</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ufdset\">ufdset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(<a class=\"id\" href=\"#ufdset\">ufdset</a>, <a class=\"id\" href=\"#fdset\">fdset</a>, <a class=\"id\" href=\"#FDS_BYTES\">FDS_BYTES</a>(<a class=\"id\" href=\"#nr\">nr</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"void <a class=\"id\" href=\"#zero_fd_set\">zero_fd_set</a>(unsigned long <a class=\"id\" href=\"#nr\">nr</a>, unsigned long *<a class=\"id\" href=\"#fdset\">fdset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#fdset\">fdset</a>, 0, <a class=\"id\" href=\"#FDS_BYTES\">FDS_BYTES</a>(<a class=\"id\" href=\"#nr\">nr</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_INT64_SECONDS\">MAX_INT64_SECONDS</a> (((<a class=\"id\" href=\"#s64\">s64</a>)(~((<a class=\"id\" href=\"#u64\">u64</a>)0)>>1)/<a class=\"id\" href=\"#HZ\">HZ</a>)-1)", 
"", 
"extern int <a class=\"id\" href=\"#do_select\">do_select</a>(int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fd_set_bits\">fd_set_bits</a> *<a class=\"id\" href=\"#fds\">fds</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#end_time\">end_time</a>);", 
"extern int <a class=\"id\" href=\"#do_sys_poll\">do_sys_poll</a>(struct <a class=\"id\" href=\"#pollfd\">pollfd</a> <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#ufds\">ufds</a>, unsigned int <a class=\"id\" href=\"#nfds\">nfds</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#end_time\">end_time</a>);", 
"extern int <a class=\"id\" href=\"#core_sys_select\">core_sys_select</a>(int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#outp\">outp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#exp\">exp</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#end_time\">end_time</a>);", 
"", 
"extern int <a class=\"id\" href=\"#poll_select_set_timeout\">poll_select_set_timeout</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#to\">to</a>, long <a class=\"id\" href=\"#sec\">sec</a>, long <a class=\"id\" href=\"#nsec\">nsec</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* KERNEL */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_POLL_H */</span>", 
];
xr_frag_insert('l/bc/dc5455c4fce68830cf53ee6386ef7be48e0398.xr', __xr_tmp);
