var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_NL80211_H\">__LINUX_NL80211_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_NL80211_H\">__LINUX_NL80211_H</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 802.11 netlink interface public header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2006-2010 Johannes Berg &lt;johannes@sipsolutions.net&gt;</span>", 
"<span class=\"comment\"> * Copyright 2008 Michael Wu &lt;flamingice@sourmilk.net&gt;</span>", 
"<span class=\"comment\"> * Copyright 2008 Luis Carlos Cobo &lt;luisca@cozybit.com&gt;</span>", 
"<span class=\"comment\"> * Copyright 2008 Michael Buesch &lt;mb@bu3sch.de&gt;</span>", 
"<span class=\"comment\"> * Copyright 2008, 2009 Luis R. Rodriguez &lt;lrodriguez@atheros.com&gt;</span>", 
"<span class=\"comment\"> * Copyright 2008 Jouni Malinen &lt;jouni.malinen@atheros.com&gt;</span>", 
"<span class=\"comment\"> * Copyright 2008 Colin McCabe &lt;colin@cozybit.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Permission to use, copy, modify, and/or distribute this software for any</span>", 
"<span class=\"comment\"> * purpose with or without fee is hereby granted, provided that the above</span>", 
"<span class=\"comment\"> * copyright notice and this permission notice appear in all copies.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES</span>", 
"<span class=\"comment\"> * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF</span>", 
"<span class=\"comment\"> * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR</span>", 
"<span class=\"comment\"> * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES</span>", 
"<span class=\"comment\"> * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN</span>", 
"<span class=\"comment\"> * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF</span>", 
"<span class=\"comment\"> * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * DOC: Station handling</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Stations are added per interface, but a special case exists with VLAN</span>", 
"<span class=\"comment\"> * interfaces. When a station is bound to an AP interface, it may be moved</span>", 
"<span class=\"comment\"> * into a VLAN identified by a VLAN interface index (%NL80211_ATTR_STA_VLAN).</span>", 
"<span class=\"comment\"> * The station is still assumed to belong to the AP interface it was added</span>", 
"<span class=\"comment\"> * to.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * TODO: need more info?</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_commands - supported nl80211 commands</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_UNSPEC: unspecified command to catch errors</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_WIPHY: request information about a wiphy or dump request</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to get a list of all present wiphys.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_WIPHY: set wiphy parameters, needs %NL80211_ATTR_WIPHY or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_IFINDEX; can be used to set %NL80211_ATTR_WIPHY_NAME,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_WIPHY_TXQ_PARAMS, %NL80211_ATTR_WIPHY_FREQ,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_WIPHY_CHANNEL_TYPE, %NL80211_ATTR_WIPHY_RETRY_SHORT,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_WIPHY_RETRY_LONG, %NL80211_ATTR_WIPHY_FRAG_THRESHOLD,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and/or %NL80211_ATTR_WIPHY_RTS_THRESHOLD.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>However, for setting the channel, see %NL80211_CMD_SET_CHANNEL</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>instead, the support here is for backward compatibility only.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_NEW_WIPHY: Newly created wiphy, response to get request</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>or rename notification. Has attributes %NL80211_ATTR_WIPHY and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_WIPHY_NAME.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_DEL_WIPHY: Wiphy deleted. Has attributes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_WIPHY and %NL80211_ATTR_WIPHY_NAME.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_INTERFACE: Request an interface's configuration;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>either a dump request on a %NL80211_ATTR_WIPHY or a specific get</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>on an %NL80211_ATTR_IFINDEX is supported.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_INTERFACE: Set type of a virtual interface, requires</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_IFINDEX and %NL80211_ATTR_IFTYPE.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_NEW_INTERFACE: Newly created virtual interface or response</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to %NL80211_CMD_GET_INTERFACE. Has %NL80211_ATTR_IFINDEX,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_WIPHY and %NL80211_ATTR_IFTYPE attributes. Can also</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>be sent from userspace to request creation of a new virtual interface,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>then requires attributes %NL80211_ATTR_WIPHY, %NL80211_ATTR_IFTYPE and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_IFNAME.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_DEL_INTERFACE: Virtual interface was deleted, has attributes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_IFINDEX and %NL80211_ATTR_WIPHY. Can also be sent from</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>userspace to request deletion of a virtual interface, then requires</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>attribute %NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_KEY: Get sequence counter information for a key specified</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>by %NL80211_ATTR_KEY_IDX and/or %NL80211_ATTR_MAC.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_KEY: Set key attributes %NL80211_ATTR_KEY_DEFAULT,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_KEY_DEFAULT_MGMT, or %NL80211_ATTR_KEY_THRESHOLD.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_NEW_KEY: add a key with given %NL80211_ATTR_KEY_DATA,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_KEY_IDX, %NL80211_ATTR_MAC, %NL80211_ATTR_KEY_CIPHER,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and %NL80211_ATTR_KEY_SEQ attributes.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_DEL_KEY: delete a key identified by %NL80211_ATTR_KEY_IDX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>or %NL80211_ATTR_MAC.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_BEACON: retrieve beacon information (returned in a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80222_CMD_NEW_BEACON message)</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_BEACON: set the beacon on an access point interface</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>using the %NL80211_ATTR_BEACON_INTERVAL, %NL80211_ATTR_DTIM_PERIOD,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_BEACON_HEAD and %NL80211_ATTR_BEACON_TAIL attributes.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_NEW_BEACON: add a new beacon to an access point interface,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>parameters are like for %NL80211_CMD_SET_BEACON.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_DEL_BEACON: remove the beacon, stop sending it</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_STATION: Get station attributes for station identified by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_MAC on the interface identified by %NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_STATION: Set station attributes for station identified by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_MAC on the interface identified by %NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_NEW_STATION: Add a station with given attributes to the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the interface identified by %NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_DEL_STATION: Remove a station identified by %NL80211_ATTR_MAC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>or, if no MAC address given, all stations, on the interface identified</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>by %NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_MPATH: Get mesh path attributes for mesh path to</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>destination %NL80211_ATTR_MAC on the interface identified by</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>%NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_MPATH:  Set mesh path attributes for mesh path to</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>destination %NL80211_ATTR_MAC on the interface identified by</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>%NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_NEW_PATH: Add a mesh path with given attributes to the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the interface identified by %NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_DEL_PATH: Remove a mesh path identified by %NL80211_ATTR_MAC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>or, if no MAC address given, all mesh paths, on the interface identified</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>by %NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_BSS: Set BSS attributes for BSS identified by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_IFINDEX.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_REG: ask the wireless core to send us its currently set</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>regulatory domain.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_REG: Set current regulatory domain. CRDA sends this command</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>after being queried by the kernel. CRDA replies by sending a regulatory</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>domain structure which consists of %NL80211_ATTR_REG_ALPHA set to our</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>current alpha2 if it found a match. It also provides</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>NL80211_ATTR_REG_RULE_FLAGS, and a set of regulatory rules. Each</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>regulatory rule is a nested set of attributes  given by</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>%NL80211_ATTR_REG_RULE_FREQ_[START|END] and</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>%NL80211_ATTR_FREQ_RANGE_MAX_BW with an attached power rule given by</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>%NL80211_ATTR_REG_RULE_POWER_MAX_ANT_GAIN and</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>%NL80211_ATTR_REG_RULE_POWER_MAX_EIRP.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_REQ_SET_REG: ask the wireless core to set the regulatory domain</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>to the specified ISO/IEC 3166-1 alpha2 country code. The core will</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>store this as a valid request and then query userspace for it.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_MESH_PARAMS: Get mesh networking properties for the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>interface identified by %NL80211_ATTR_IFINDEX</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_MESH_PARAMS: Set mesh networking properties for the</span>", 
"<span class=\"comment\"> *      interface identified by %NL80211_ATTR_IFINDEX</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_MGMT_EXTRA_IE: Set extra IEs for management frames. The</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>interface is identified with %NL80211_ATTR_IFINDEX and the management</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>frame subtype with %NL80211_ATTR_MGMT_SUBTYPE. The extra IE data to be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>added to the end of the specified management frame is specified with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_IE. If the command succeeds, the requested data will be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>added to all specified management frames generated by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>kernel/firmware/driver.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: This command has been removed and it is only reserved at this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>point to avoid re-using existing command number. The functionality this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>command was planned for has been provided with cleaner design with the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>option to specify additional IEs in NL80211_CMD_TRIGGER_SCAN,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_AUTHENTICATE, NL80211_CMD_ASSOCIATE,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_DEAUTHENTICATE, and NL80211_CMD_DISASSOCIATE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_SCAN: get scan results</span>", 
"<span class=\"comment\"> * @NL80211_CMD_TRIGGER_SCAN: trigger a new scan with the given parameters</span>", 
"<span class=\"comment\"> * @NL80211_CMD_NEW_SCAN_RESULTS: scan notification (as a reply to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_GET_SCAN and on the \"scan\" multicast group)</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SCAN_ABORTED: scan was aborted, for unspecified reasons,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>partial scan results may be available</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_GET_SURVEY: get survey resuls, e.g. channel occupation</span>", 
"<span class=\"comment\"> *      or noise level</span>", 
"<span class=\"comment\"> * @NL80211_CMD_NEW_SURVEY_RESULTS: survey data notification (as a reply to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_GET_SURVEY and on the \"scan\" multicast group)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_REG_CHANGE: indicates to userspace the regulatory domain</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>has been changed and provides details of the request information</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>that caused the change such as who initiated the regulatory request</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>(%NL80211_ATTR_REG_INITIATOR), the wiphy_idx</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>(%NL80211_ATTR_REG_ALPHA2) on which the request was made from if</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>the initiator was %NL80211_REGDOM_SET_BY_COUNTRY_IE or</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>%NL80211_REGDOM_SET_BY_DRIVER, the type of regulatory domain</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>set (%NL80211_ATTR_REG_TYPE), if the type of regulatory domain is</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>%NL80211_REG_TYPE_COUNTRY the alpha2 to which we have moved on</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>to (%NL80211_ATTR_REG_ALPHA2).</span>", 
"<span class=\"comment\"> * @NL80211_CMD_REG_BEACON_HINT: indicates to userspace that an AP beacon</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>has been found while world roaming thus enabling active scan or</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>any mode of operation that initiates TX (beacons) on a channel</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>where we would not have been able to do either before. As an example</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>if you are world roaming (regulatory domain set to world or if your</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>driver is using a custom world roaming regulatory domain) and while</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>doing a passive scan on the 5 GHz band you find an AP there (if not</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>on a DFS channel) you will now be able to actively scan for that AP</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>or use AP mode on your card on that same channel. Note that this will</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>never be used for channels 1-11 on the 2 GHz band as they are always</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>enabled world wide. This beacon hint is only sent if your device had</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>either disabled active scanning or beaconing on a channel. We send to</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>userspace the wiphy on which we removed a restriction from</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>(%NL80211_ATTR_WIPHY) and the channel on which this occurred</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>before (%NL80211_ATTR_FREQ_BEFORE) and after (%NL80211_ATTR_FREQ_AFTER)</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>the beacon hint was processed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_AUTHENTICATE: authentication request and notification.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This command is used both as a command (request to authenticate) and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>as an event on the \"mlme\" multicast group indicating completion of the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>authentication process.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>When used as a command, %NL80211_ATTR_IFINDEX is used to identify the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>interface. %NL80211_ATTR_MAC is used to specify PeerSTAAddress (and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>BSSID in case of station mode). %NL80211_ATTR_SSID is used to specify</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the SSID (mainly for association, but is included in authentication</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>request, too, to help BSS selection. %NL80211_ATTR_WIPHY_FREQ is used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to specify the frequence of the channel in MHz. %NL80211_ATTR_AUTH_TYPE</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is used to specify the authentication type. %NL80211_ATTR_IE is used to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>define IEs (VendorSpecificInfo, but also including RSN IE and FT IEs)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to be added to the frame.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>When used as an event, this reports reception of an Authentication</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>frame in station and IBSS modes when the local MLME processed the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>frame, i.e., it was for the local STA and was received in correct</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>state. This is similar to MLME-AUTHENTICATE.confirm primitive in the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>MLME SAP interface (kernel providing MLME, userspace SME). The</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>included %NL80211_ATTR_FRAME attribute contains the management frame</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(including both the header and frame body, but not FCS). This event is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>also used to indicate if the authentication attempt timed out. In that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>case the %NL80211_ATTR_FRAME attribute is replaced with a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_TIMED_OUT flag (and %NL80211_ATTR_MAC to indicate which</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pending authentication timed out).</span>", 
"<span class=\"comment\"> * @NL80211_CMD_ASSOCIATE: association request and notification; like</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_AUTHENTICATE but for Association and Reassociation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(similar to MLME-ASSOCIATE.request, MLME-REASSOCIATE.request,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>MLME-ASSOCIATE.confirm or MLME-REASSOCIATE.confirm primitives).</span>", 
"<span class=\"comment\"> * @NL80211_CMD_DEAUTHENTICATE: deauthentication request and notification; like</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_AUTHENTICATE but for Deauthentication frames (similar to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>MLME-DEAUTHENTICATION.request and MLME-DEAUTHENTICATE.indication</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>primitives).</span>", 
"<span class=\"comment\"> * @NL80211_CMD_DISASSOCIATE: disassociation request and notification; like</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_AUTHENTICATE but for Disassociation frames (similar to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>MLME-DISASSOCIATE.request and MLME-DISASSOCIATE.indication primitives).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_MICHAEL_MIC_FAILURE: notification of a locally detected Michael</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>MIC (part of TKIP) failure; sent on the \"mlme\" multicast group; the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>event includes %NL80211_ATTR_MAC to describe the source MAC address of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the frame with invalid MIC, %NL80211_ATTR_KEY_TYPE to show the key</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>type, %NL80211_ATTR_KEY_IDX to indicate the key identifier, and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_KEY_SEQ to indicate the TSC value of the frame; this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>event matches with MLME-MICHAELMICFAILURE.indication() primitive</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_JOIN_IBSS: Join a new IBSS -- given at least an SSID and a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>FREQ attribute (for the initial frequency if no peer can be found)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and optionally a MAC (as BSSID) and FREQ_FIXED attribute if those</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>should be fixed rather than automatically determined. Can only be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>executed on a network interface that is UP, and fixed BSSID/FREQ</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>may be rejected. Another optional parameter is the beacon interval,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>given in the %NL80211_ATTR_BEACON_INTERVAL attribute, which if not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>given defaults to 100 TU (102.4ms).</span>", 
"<span class=\"comment\"> * @NL80211_CMD_LEAVE_IBSS: Leave the IBSS -- no special arguments, the IBSS is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>determined by the network interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_TESTMODE: testmode command, takes a wiphy (or ifindex) attribute</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to identify the device, and the TESTDATA blob attribute to pass through</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to the driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_CONNECT: connection request and notification; this command</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>requests to connect to a specified network but without separating</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>auth and assoc steps. For this, you need to specify the SSID in a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_SSID attribute, and can optionally specify the association</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IEs in %NL80211_ATTR_IE, %NL80211_ATTR_AUTH_TYPE, %NL80211_ATTR_MAC,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_WIPHY_FREQ and %NL80211_ATTR_CONTROL_PORT.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It is also sent as an event, with the BSSID and response IEs when the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>connection is established or failed to be established. This can be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>determined by the STATUS_CODE attribute.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_ROAM: request that the card roam (currently not implemented),</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sent as an event when the card/driver roamed by itself.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_DISCONNECT: drop a given connection; also used to notify</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>userspace that a connection was dropped by the AP or due to other</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reasons, for this the %NL80211_ATTR_DISCONNECTED_BY_AP and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_REASON_CODE attributes are used.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_WIPHY_NETNS: Set a wiphy's netns. Note that all devices</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>associated with this wiphy must be down and will follow.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_REMAIN_ON_CHANNEL: Request to remain awake on the specified</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>channel for the specified amount of time. This can be used to do</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>off-channel operations like transmit a Public Action frame and wait for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a response while being associated to an AP on another channel.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_WIPHY or %NL80211_ATTR_IFINDEX is used to specify which</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>radio is used. %NL80211_ATTR_WIPHY_FREQ is used to specify the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>frequency for the operation and %NL80211_ATTR_WIPHY_CHANNEL_TYPE may be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>optionally used to specify additional channel parameters.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_DURATION is used to specify the duration in milliseconds</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to remain on the channel. This command is also used as an event to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>notify when the requested duration starts (it may take a while for the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>driver to schedule this time due to other concurrent needs for the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>radio).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>When called, this operation returns a cookie (%NL80211_ATTR_COOKIE)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that will be included with any events pertaining to this request;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the cookie is also used to cancel the request.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL: This command can be used to cancel a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pending remain-on-channel duration if the desired operation has been</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>completed prior to expiration of the originally requested duration.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_ATTR_WIPHY or %NL80211_ATTR_IFINDEX is used to specify the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>radio. The %NL80211_ATTR_COOKIE attribute must be given as well to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uniquely identify the request.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This command is also used as an event to notify when a requested</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>remain-on-channel duration has expired.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_TX_BITRATE_MASK: Set the mask of rates to be used in TX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>rate selection. %NL80211_ATTR_IFINDEX is used to specify the interface</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and @NL80211_ATTR_TX_RATES the set of allowed rates.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_REGISTER_ACTION: Register for receiving certain action frames</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(via @NL80211_CMD_ACTION) for processing in userspace. This command</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>requires an interface index and a match attribute containing the first</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>few bytes of the frame that should match, e.g. a single byte for only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a category match or four bytes for vendor frames including the OUI.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The registration cannot be dropped, but is removed automatically</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>when the netlink socket is closed. Multiple registrations can be made.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_ACTION: Action frame TX request and RX notification. This</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>command is used both as a request to transmit an Action frame and as an</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>event indicating reception of an Action frame that was not processed in</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>kernel code, but is for us (i.e., which may need to be processed in a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>user space application). %NL80211_ATTR_FRAME is used to specify the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>frame contents (including header). %NL80211_ATTR_WIPHY_FREQ (and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>optionally %NL80211_ATTR_WIPHY_CHANNEL_TYPE) is used to indicate on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>which channel the frame is to be transmitted or was received. This</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>channel has to be the current channel (remain-on-channel or the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>operational channel). When called, this operation returns a cookie</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(%NL80211_ATTR_COOKIE) that will be included with the TX status event</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pertaining to the TX request.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_ACTION_TX_STATUS: Report TX status of an Action frame</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>transmitted with %NL80211_CMD_ACTION. %NL80211_ATTR_COOKIE identifies</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the TX command and %NL80211_ATTR_FRAME includes the contents of the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>frame. %NL80211_ATTR_ACK flag is included if the recipient acknowledged</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the frame.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_CQM: Connection quality monitor configuration. This command</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is used to configure connection quality monitoring notification trigger</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>levels.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_NOTIFY_CQM: Connection quality monitor notification. This</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>command is used as an event to indicate the that a trigger level was</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reached.</span>", 
"<span class=\"comment\"> * @NL80211_CMD_SET_CHANNEL: Set the channel (using %NL80211_ATTR_WIPHY_FREQ</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and %NL80211_ATTR_WIPHY_CHANNEL_TYPE) the given interface (identifed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>by %NL80211_ATTR_IFINDEX) shall operate on.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>In case multiple channels are supported by the device, the mechanism</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with which it switches channels is implementation-defined.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>When a monitor interface is given, it can only switch channel while</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>no other interfaces are operating to avoid disturbing the operation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of any other interfaces, and other interfaces will again take</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>precedence when they are used.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_CMD_MAX: highest used command number</span>", 
"<span class=\"comment\"> * @__NL80211_CMD_AFTER_LAST: internal use</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_commands\">nl80211_commands</a> {", 
"<span class=\"comment\">/* don't change the order or add anything inbetween, this is ABI! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_UNSPEC\">NL80211_CMD_UNSPEC</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_WIPHY\">NL80211_CMD_GET_WIPHY</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can dump */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_WIPHY\">NL80211_CMD_SET_WIPHY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_NEW_WIPHY\">NL80211_CMD_NEW_WIPHY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DEL_WIPHY\">NL80211_CMD_DEL_WIPHY</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_INTERFACE\">NL80211_CMD_GET_INTERFACE</a>,<span class=\"ts\"/><span class=\"comment\">/* can dump */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_INTERFACE\">NL80211_CMD_SET_INTERFACE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_NEW_INTERFACE\">NL80211_CMD_NEW_INTERFACE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DEL_INTERFACE\">NL80211_CMD_DEL_INTERFACE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_KEY\">NL80211_CMD_GET_KEY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_KEY\">NL80211_CMD_SET_KEY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_NEW_KEY\">NL80211_CMD_NEW_KEY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DEL_KEY\">NL80211_CMD_DEL_KEY</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_BEACON\">NL80211_CMD_GET_BEACON</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_BEACON\">NL80211_CMD_SET_BEACON</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_NEW_BEACON\">NL80211_CMD_NEW_BEACON</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DEL_BEACON\">NL80211_CMD_DEL_BEACON</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_STATION\">NL80211_CMD_GET_STATION</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_STATION\">NL80211_CMD_SET_STATION</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_NEW_STATION\">NL80211_CMD_NEW_STATION</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DEL_STATION\">NL80211_CMD_DEL_STATION</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_MPATH\">NL80211_CMD_GET_MPATH</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_MPATH\">NL80211_CMD_SET_MPATH</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_NEW_MPATH\">NL80211_CMD_NEW_MPATH</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DEL_MPATH\">NL80211_CMD_DEL_MPATH</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_BSS\">NL80211_CMD_SET_BSS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_REG\">NL80211_CMD_SET_REG</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_REQ_SET_REG\">NL80211_CMD_REQ_SET_REG</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_MESH_PARAMS\">NL80211_CMD_GET_MESH_PARAMS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_MESH_PARAMS\">NL80211_CMD_SET_MESH_PARAMS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_MGMT_EXTRA_IE\">NL80211_CMD_SET_MGMT_EXTRA_IE</a> <span class=\"comment\">/* reserved; not used */</span>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_REG\">NL80211_CMD_GET_REG</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_SCAN\">NL80211_CMD_GET_SCAN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_TRIGGER_SCAN\">NL80211_CMD_TRIGGER_SCAN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_NEW_SCAN_RESULTS\">NL80211_CMD_NEW_SCAN_RESULTS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SCAN_ABORTED\">NL80211_CMD_SCAN_ABORTED</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_REG_CHANGE\">NL80211_CMD_REG_CHANGE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_AUTHENTICATE\">NL80211_CMD_AUTHENTICATE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_ASSOCIATE\">NL80211_CMD_ASSOCIATE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DEAUTHENTICATE\">NL80211_CMD_DEAUTHENTICATE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DISASSOCIATE\">NL80211_CMD_DISASSOCIATE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_MICHAEL_MIC_FAILURE\">NL80211_CMD_MICHAEL_MIC_FAILURE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_REG_BEACON_HINT\">NL80211_CMD_REG_BEACON_HINT</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_JOIN_IBSS\">NL80211_CMD_JOIN_IBSS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_LEAVE_IBSS\">NL80211_CMD_LEAVE_IBSS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_TESTMODE\">NL80211_CMD_TESTMODE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_CONNECT\">NL80211_CMD_CONNECT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_ROAM\">NL80211_CMD_ROAM</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DISCONNECT\">NL80211_CMD_DISCONNECT</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_WIPHY_NETNS\">NL80211_CMD_SET_WIPHY_NETNS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_SURVEY\">NL80211_CMD_GET_SURVEY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_NEW_SURVEY_RESULTS\">NL80211_CMD_NEW_SURVEY_RESULTS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_PMKSA\">NL80211_CMD_SET_PMKSA</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_DEL_PMKSA\">NL80211_CMD_DEL_PMKSA</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_FLUSH_PMKSA\">NL80211_CMD_FLUSH_PMKSA</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_REMAIN_ON_CHANNEL\">NL80211_CMD_REMAIN_ON_CHANNEL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL\">NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_TX_BITRATE_MASK\">NL80211_CMD_SET_TX_BITRATE_MASK</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_REGISTER_ACTION\">NL80211_CMD_REGISTER_ACTION</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_ACTION\">NL80211_CMD_ACTION</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_ACTION_TX_STATUS\">NL80211_CMD_ACTION_TX_STATUS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_POWER_SAVE\">NL80211_CMD_SET_POWER_SAVE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_GET_POWER_SAVE\">NL80211_CMD_GET_POWER_SAVE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_CQM\">NL80211_CMD_SET_CQM</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_NOTIFY_CQM\">NL80211_CMD_NOTIFY_CQM</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_SET_CHANNEL\">NL80211_CMD_SET_CHANNEL</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* add new commands above here */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* used to define NL80211_CMD_MAX below */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_CMD_AFTER_LAST\">__NL80211_CMD_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CMD_MAX\">NL80211_CMD_MAX</a> = <a class=\"id\" href=\"#__NL80211_CMD_AFTER_LAST\">__NL80211_CMD_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allow user space programs to use #ifdef on new commands by defining them</span>", 
"<span class=\"comment\"> * here</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_CMD_SET_BSS\">NL80211_CMD_SET_BSS</a> <a class=\"id\" href=\"#NL80211_CMD_SET_BSS\">NL80211_CMD_SET_BSS</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_CMD_SET_MGMT_EXTRA_IE\">NL80211_CMD_SET_MGMT_EXTRA_IE</a> <a class=\"id\" href=\"#NL80211_CMD_SET_MGMT_EXTRA_IE\">NL80211_CMD_SET_MGMT_EXTRA_IE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_CMD_REG_CHANGE\">NL80211_CMD_REG_CHANGE</a> <a class=\"id\" href=\"#NL80211_CMD_REG_CHANGE\">NL80211_CMD_REG_CHANGE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_CMD_AUTHENTICATE\">NL80211_CMD_AUTHENTICATE</a> <a class=\"id\" href=\"#NL80211_CMD_AUTHENTICATE\">NL80211_CMD_AUTHENTICATE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_CMD_ASSOCIATE\">NL80211_CMD_ASSOCIATE</a> <a class=\"id\" href=\"#NL80211_CMD_ASSOCIATE\">NL80211_CMD_ASSOCIATE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_CMD_DEAUTHENTICATE\">NL80211_CMD_DEAUTHENTICATE</a> <a class=\"id\" href=\"#NL80211_CMD_DEAUTHENTICATE\">NL80211_CMD_DEAUTHENTICATE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_CMD_DISASSOCIATE\">NL80211_CMD_DISASSOCIATE</a> <a class=\"id\" href=\"#NL80211_CMD_DISASSOCIATE\">NL80211_CMD_DISASSOCIATE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_CMD_REG_BEACON_HINT\">NL80211_CMD_REG_BEACON_HINT</a> <a class=\"id\" href=\"#NL80211_CMD_REG_BEACON_HINT\">NL80211_CMD_REG_BEACON_HINT</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_attrs - nl80211 netlink attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_UNSPEC: unspecified attribute to catch errors</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY: index of wiphy to operate on, cf.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>/sys/class/ieee80211/&lt;phyname&gt;/index</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_NAME: wiphy name (used for renaming)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_TXQ_PARAMS: a nested array of TX queue parameters</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_FREQ: frequency of the selected channel in MHz</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_CHANNEL_TYPE: included with NL80211_ATTR_WIPHY_FREQ</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if HT20 or HT40 are allowed (i.e., 802.11n disabled if not included):</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CHAN_NO_HT = HT not allowed (i.e., same as not including</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>this attribute)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CHAN_HT20 = HT20 only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CHAN_HT40MINUS = secondary channel is below the primary channel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CHAN_HT40PLUS = secondary channel is above the primary channel</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_RETRY_SHORT: TX retry limit for frames whose length is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>less than or equal to the RTS threshold; allowed range: 1..255;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dot11ShortRetryLimit; u8</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_RETRY_LONG: TX retry limit for frames whose length is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>greater than the RTS threshold; allowed range: 1..255;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dot11ShortLongLimit; u8</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_FRAG_THRESHOLD: fragmentation threshold, i.e., maximum</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>length in octets for frames; allowed range: 256..8000, disable</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>fragmentation with (u32)-1; dot11FragmentationThreshold; u32</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_RTS_THRESHOLD: RTS threshold (TX frames with length</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>larger than or equal to this use RTS/CTS handshake); allowed range:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0..65536, disable with (u32)-1; dot11RTSThreshold; u32</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_COVERAGE_CLASS: Coverage Class as defined by IEEE 802.11</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>section 7.3.2.9; dot11CoverageClass; u8</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_IFINDEX: network interface index of the device to operate on</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_IFNAME: network interface name</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_IFTYPE: type of virtual interface, see &amp;enum nl80211_iftype</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MAC: MAC address (various uses)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_KEY_DATA: (temporal) key data; for TKIP this consists of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>16 bytes encryption key followed by 8 bytes each for TX and RX MIC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>keys</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_KEY_IDX: key ID (u8, 0-3)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_KEY_CIPHER: key cipher suite (u32, as defined by IEEE 802.11</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>section 7.3.2.25.1, e.g. 0x000FAC04)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_KEY_SEQ: transmit key sequence number (IV/PN) for TKIP and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>CCMP keys, each six bytes in little endian</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_BEACON_INTERVAL: beacon interval in TU</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_DTIM_PERIOD: DTIM period for beaconing</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_BEACON_HEAD: portion of the beacon before the TIM IE</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_BEACON_TAIL: portion of the beacon after the TIM IE</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_STA_AID: Association ID for the station (u16)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_STA_FLAGS: flags, nested element with NLA_FLAG attributes of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>&amp;enum nl80211_sta_flags (deprecated, use %NL80211_ATTR_STA_FLAGS2)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_STA_LISTEN_INTERVAL: listen interval as defined by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IEEE 802.11 7.3.1.6 (u16).</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_STA_SUPPORTED_RATES: supported rates, array of supported</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>rates as defined by IEEE 802.11 7.3.2.2 but without the length</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>restriction (at most %NL80211_MAX_SUPP_RATES).</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_STA_VLAN: interface index of VLAN interface to move station</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to, or the AP interface the station was originally added to to.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_STA_INFO: information about a station, part of station info</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>given for %NL80211_CMD_GET_STATION, nested attribute containing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>info as possible, see &amp;enum nl80211_sta_info.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_BANDS: Information about an operating bands,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>consisting of a nested array.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MESH_ID: mesh id (1-32 bytes).</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_PLINK_ACTION: action to perform on the mesh peer link.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MPATH_NEXT_HOP: MAC address of the next hop for a mesh path.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MPATH_INFO: information about a mesh_path, part of mesh path</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>info given for %NL80211_CMD_GET_MPATH, nested attribute described at</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>&amp;enum nl80211_mpath_info.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MNTR_FLAGS: flags, nested element with NLA_FLAG attributes of</span>", 
"<span class=\"comment\"> *      &amp;enum nl80211_mntr_flags.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_REG_ALPHA2: an ISO-3166-alpha2 country code for which the</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>current regulatory domain should be set to or is already set to.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>For example, 'CR', for Costa Rica. This attribute is used by the kernel</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>to query the CRDA to retrieve one regulatory domain. This attribute can</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>also be used by userspace to query the kernel for the currently set</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>regulatory domain. We chose an alpha2 as that is also used by the</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>IEEE-802.11d country information element to identify a country.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Users can also simply ask the wireless core to set regulatory domain</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>to a specific alpha2.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_REG_RULES: a nested array of regulatory domain regulatory</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>rules.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_BSS_CTS_PROT: whether CTS protection is enabled (u8, 0 or 1)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_BSS_SHORT_PREAMBLE: whether short preamble is enabled</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(u8, 0 or 1)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_BSS_SHORT_SLOT_TIME: whether short slot time enabled</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(u8, 0 or 1)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_BSS_BASIC_RATES: basic rates, array of basic</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>rates in format defined by IEEE 802.11 7.3.2.2 but without the length</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>restriction (at most %NL80211_MAX_SUPP_RATES).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_HT_CAPABILITY: HT Capability information element (from</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>association request when used with NL80211_CMD_NEW_STATION)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_SUPPORTED_IFTYPES: nested attribute containing all</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>supported interface types, each a flag attribute with the number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of the interface mode.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MGMT_SUBTYPE: Management frame subtype for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_CMD_SET_MGMT_EXTRA_IE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_IE: Information element(s) data (used, e.g., with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_CMD_SET_MGMT_EXTRA_IE).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MAX_NUM_SCAN_SSIDS: number of SSIDs you can scan with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a single scan request, a wiphy attribute.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MAX_SCAN_IE_LEN: maximum length of information elements</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that can be added to a scan request</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_SCAN_FREQUENCIES: nested attribute with frequencies (in MHz)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_SCAN_SSIDS: nested attribute with SSIDs, leave out for passive</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>scanning and include a zero-length SSID (wildcard) for wildcard scan</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_BSS: scan result BSS</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_REG_INITIATOR: indicates who requested the regulatory domain</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>currently in effect. This could be any of the %NL80211_REGDOM_SET_BY_*</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_REG_TYPE: indicates the type of the regulatory domain currently</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>set. This can be one of the nl80211_reg_type (%NL80211_REGDOM_TYPE_*)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_SUPPORTED_COMMANDS: wiphy attribute that specifies</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>an array of command numbers (i.e. a mapping index to command number)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that the driver for the given wiphy supports.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_FRAME: frame data (binary attribute), including frame header</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and body, but not FCS; used, e.g., with NL80211_CMD_AUTHENTICATE and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_ASSOCIATE events</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_SSID: SSID (binary attribute, 0..32 octets)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_AUTH_TYPE: AuthenticationType, see &amp;enum nl80211_auth_type,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>represented as a u32</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_REASON_CODE: ReasonCode for %NL80211_CMD_DEAUTHENTICATE and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_CMD_DISASSOCIATE, u16</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_KEY_TYPE: Key Type, see &amp;enum nl80211_key_type, represented as</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a u32</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_FREQ_BEFORE: A channel which has suffered a regulatory change</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>due to considerations from a beacon hint. This attribute reflects</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>the state of the channel _before_ the beacon hint processing. This</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>attributes consists of a nested attribute containing</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>NL80211_FREQUENCY_ATTR_*</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_FREQ_AFTER: A channel which has suffered a regulatory change</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>due to considerations from a beacon hint. This attribute reflects</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>the state of the channel _after_ the beacon hint processing. This</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>attributes consists of a nested attribute containing</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>NL80211_FREQUENCY_ATTR_*</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_CIPHER_SUITES: a set of u32 values indicating the supported</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cipher suites</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_FREQ_FIXED: a flag indicating the IBSS should not try to look</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for other networks on different channels</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_TIMED_OUT: a flag indicating than an operation timed out; this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is used, e.g., with %NL80211_CMD_AUTHENTICATE event</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_USE_MFP: Whether management frame protection (IEEE 802.11w) is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>used for the association (&amp;enum nl80211_mfp, represented as a u32);</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>this attribute can be used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with %NL80211_CMD_ASSOCIATE request</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_STA_FLAGS2: Attribute containing a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>&amp;struct nl80211_sta_flag_update.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_CONTROL_PORT: A flag indicating whether user space controls</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IEEE 802.1X port, i.e., sets/clears %NL80211_STA_FLAG_AUTHORIZED, in</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>station mode. If the flag is included in %NL80211_CMD_ASSOCIATE</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>request, the driver will assume that the port is unauthorized until</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>authorized by user space. Otherwise, port is marked authorized by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>default in station mode.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_TESTDATA: Testmode data blob, passed through to the driver.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>We recommend using nested, driver-specific attributes within this.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_DISCONNECTED_BY_AP: A flag indicating that the DISCONNECT</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>event was due to the AP disconnecting the station, and not due to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a local disconnect request.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_STATUS_CODE: StatusCode for the %NL80211_CMD_CONNECT</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>event (u16)</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_PRIVACY: Flag attribute, used with connect(), indicating</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that protected APs should be used.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_CIPHERS_PAIRWISE: Used with CONNECT and ASSOCIATE to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>indicate which unicast key ciphers will be used with the connection</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(an array of u32).</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_CIPHER_GROUP: Used with CONNECT and ASSOCIATE to indicate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>which group key cipher will be used with the connection (a u32).</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WPA_VERSIONS: Used with CONNECT and ASSOCIATE to indicate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>which WPA version(s) the AP we want to associate with is using</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(a u32 with flags from &amp;enum nl80211_wpa_versions).</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_AKM_SUITES: Used with CONNECT and ASSOCIATE to indicate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>which key management algorithm(s) to use (an array of u32).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_REQ_IE: (Re)association request information elements as</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sent out by the card, for ROAM and successful CONNECT events.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_RESP_IE: (Re)association response information elements as</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sent by peer, for ROAM and successful CONNECT events.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_PREV_BSSID: previous BSSID, to be used by in ASSOCIATE</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>commands to specify using a reassociate frame</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_KEY: key information in a nested attribute with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_KEY_* sub-attributes</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_KEYS: array of keys for static WEP keys for connect()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and join_ibss(), key information is in a nested attribute each</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with %NL80211_KEY_* sub-attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_PID: Process ID of a network namespace.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_GENERATION: Used to indicate consistent snapshots for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dumps. This number increases whenever the object list being</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dumped changes, and as such userspace can verify that it has</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>obtained a complete and consistent snapshot by verifying that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>all dump messages contain the same generation number. If it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>changed then the list changed and the dump should be repeated</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>completely from scratch.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_4ADDR: Use 4-address frames on a virtual interface</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_SURVEY_INFO: survey information about a channel, part of</span>", 
"<span class=\"comment\"> *      the survey response for %NL80211_CMD_GET_SURVEY, nested attribute</span>", 
"<span class=\"comment\"> *      containing info as possible, see &amp;enum survey_info.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_PMKID: PMK material for PMKSA caching.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MAX_NUM_PMKIDS: maximum number of PMKIDs a firmware can</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cache, a wiphy attribute.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_DURATION: Duration of an operation in milliseconds, u32.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_COOKIE: Generic 64-bit cookie to identify objects.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_TX_RATES: Nested set of attributes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(enum nl80211_tx_rate_attributes) describing TX rates per band. The</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>enum nl80211_band value is used as the index (nla_type() of the nested</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>data. If a band is not included, it will be configured to allow all</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>rates based on negotiated supported rates information. This attribute</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is used with %NL80211_CMD_SET_TX_BITRATE_MASK.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_FRAME_MATCH: A binary attribute which typically must contain</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>at least one byte, currently used with @NL80211_CMD_REGISTER_ACTION.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_ACK: Flag attribute indicating that the frame was</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>acknowledged by the recipient.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_CQM: connection quality monitor configuration in a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>nested attribute with %NL80211_ATTR_CQM_* sub-attributes.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_LOCAL_STATE_CHANGE: Flag attribute to indicate that a command</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is requesting a local authentication/association state change without</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>invoking actual management frame exchange. This can be used with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_AUTHENTICATE, NL80211_CMD_DEAUTHENTICATE,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NL80211_CMD_DISASSOCIATE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_AP_ISOLATE: (AP mode) Do not forward traffic between stations</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>connected to this BSS.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_TX_POWER_SETTING: Transmit power setting type. See</span>", 
"<span class=\"comment\"> *      &amp;enum nl80211_tx_power_setting for possible values.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_WIPHY_TX_POWER_LEVEL: Transmit power level in signed mBm units.</span>", 
"<span class=\"comment\"> *      This is used in association with @NL80211_ATTR_WIPHY_TX_POWER_SETTING</span>", 
"<span class=\"comment\"> *      for non-automatic settings.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MAX: highest attribute number currently defined</span>", 
"<span class=\"comment\"> * @__NL80211_ATTR_AFTER_LAST: internal use</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_attrs\">nl80211_attrs</a> {", 
"<span class=\"comment\">/* don't change the order or add anything inbetween, this is ABI! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_UNSPEC\">NL80211_ATTR_UNSPEC</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY\">NL80211_ATTR_WIPHY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_NAME\">NL80211_ATTR_WIPHY_NAME</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_IFINDEX\">NL80211_ATTR_IFINDEX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_IFNAME\">NL80211_ATTR_IFNAME</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_IFTYPE\">NL80211_ATTR_IFTYPE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MAC\">NL80211_ATTR_MAC</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_KEY_DATA\">NL80211_ATTR_KEY_DATA</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_KEY_IDX\">NL80211_ATTR_KEY_IDX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_KEY_CIPHER\">NL80211_ATTR_KEY_CIPHER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_KEY_SEQ\">NL80211_ATTR_KEY_SEQ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_KEY_DEFAULT\">NL80211_ATTR_KEY_DEFAULT</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_BEACON_INTERVAL\">NL80211_ATTR_BEACON_INTERVAL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_DTIM_PERIOD\">NL80211_ATTR_DTIM_PERIOD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_BEACON_HEAD\">NL80211_ATTR_BEACON_HEAD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_BEACON_TAIL\">NL80211_ATTR_BEACON_TAIL</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_STA_AID\">NL80211_ATTR_STA_AID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_STA_FLAGS\">NL80211_ATTR_STA_FLAGS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_STA_LISTEN_INTERVAL\">NL80211_ATTR_STA_LISTEN_INTERVAL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_STA_SUPPORTED_RATES\">NL80211_ATTR_STA_SUPPORTED_RATES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_STA_VLAN\">NL80211_ATTR_STA_VLAN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_STA_INFO\">NL80211_ATTR_STA_INFO</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_BANDS\">NL80211_ATTR_WIPHY_BANDS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MNTR_FLAGS\">NL80211_ATTR_MNTR_FLAGS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MESH_ID\">NL80211_ATTR_MESH_ID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_STA_PLINK_ACTION\">NL80211_ATTR_STA_PLINK_ACTION</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MPATH_NEXT_HOP\">NL80211_ATTR_MPATH_NEXT_HOP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MPATH_INFO\">NL80211_ATTR_MPATH_INFO</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_BSS_CTS_PROT\">NL80211_ATTR_BSS_CTS_PROT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_BSS_SHORT_PREAMBLE\">NL80211_ATTR_BSS_SHORT_PREAMBLE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_BSS_SHORT_SLOT_TIME\">NL80211_ATTR_BSS_SHORT_SLOT_TIME</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_HT_CAPABILITY\">NL80211_ATTR_HT_CAPABILITY</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_SUPPORTED_IFTYPES\">NL80211_ATTR_SUPPORTED_IFTYPES</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_REG_ALPHA2\">NL80211_ATTR_REG_ALPHA2</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_REG_RULES\">NL80211_ATTR_REG_RULES</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MESH_PARAMS\">NL80211_ATTR_MESH_PARAMS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_BSS_BASIC_RATES\">NL80211_ATTR_BSS_BASIC_RATES</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_TXQ_PARAMS\">NL80211_ATTR_WIPHY_TXQ_PARAMS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_FREQ\">NL80211_ATTR_WIPHY_FREQ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_CHANNEL_TYPE\">NL80211_ATTR_WIPHY_CHANNEL_TYPE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_KEY_DEFAULT_MGMT\">NL80211_ATTR_KEY_DEFAULT_MGMT</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MGMT_SUBTYPE\">NL80211_ATTR_MGMT_SUBTYPE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_IE\">NL80211_ATTR_IE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MAX_NUM_SCAN_SSIDS\">NL80211_ATTR_MAX_NUM_SCAN_SSIDS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_SCAN_FREQUENCIES\">NL80211_ATTR_SCAN_FREQUENCIES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_SCAN_SSIDS\">NL80211_ATTR_SCAN_SSIDS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_GENERATION\">NL80211_ATTR_GENERATION</a>, <span class=\"comment\">/* replaces old SCAN_GENERATION */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_BSS\">NL80211_ATTR_BSS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_REG_INITIATOR\">NL80211_ATTR_REG_INITIATOR</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_REG_TYPE\">NL80211_ATTR_REG_TYPE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_SUPPORTED_COMMANDS\">NL80211_ATTR_SUPPORTED_COMMANDS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_FRAME\">NL80211_ATTR_FRAME</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_SSID\">NL80211_ATTR_SSID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_AUTH_TYPE\">NL80211_ATTR_AUTH_TYPE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_REASON_CODE\">NL80211_ATTR_REASON_CODE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_KEY_TYPE\">NL80211_ATTR_KEY_TYPE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MAX_SCAN_IE_LEN\">NL80211_ATTR_MAX_SCAN_IE_LEN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_CIPHER_SUITES\">NL80211_ATTR_CIPHER_SUITES</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_FREQ_BEFORE\">NL80211_ATTR_FREQ_BEFORE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_FREQ_AFTER\">NL80211_ATTR_FREQ_AFTER</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_FREQ_FIXED\">NL80211_ATTR_FREQ_FIXED</a>,", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_RETRY_SHORT\">NL80211_ATTR_WIPHY_RETRY_SHORT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_RETRY_LONG\">NL80211_ATTR_WIPHY_RETRY_LONG</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_FRAG_THRESHOLD\">NL80211_ATTR_WIPHY_FRAG_THRESHOLD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_RTS_THRESHOLD\">NL80211_ATTR_WIPHY_RTS_THRESHOLD</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_TIMED_OUT\">NL80211_ATTR_TIMED_OUT</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_USE_MFP\">NL80211_ATTR_USE_MFP</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_STA_FLAGS2\">NL80211_ATTR_STA_FLAGS2</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_CONTROL_PORT\">NL80211_ATTR_CONTROL_PORT</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_TESTDATA\">NL80211_ATTR_TESTDATA</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_PRIVACY\">NL80211_ATTR_PRIVACY</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_DISCONNECTED_BY_AP\">NL80211_ATTR_DISCONNECTED_BY_AP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_STATUS_CODE\">NL80211_ATTR_STATUS_CODE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_CIPHER_SUITES_PAIRWISE\">NL80211_ATTR_CIPHER_SUITES_PAIRWISE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_CIPHER_SUITE_GROUP\">NL80211_ATTR_CIPHER_SUITE_GROUP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WPA_VERSIONS\">NL80211_ATTR_WPA_VERSIONS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_AKM_SUITES\">NL80211_ATTR_AKM_SUITES</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_REQ_IE\">NL80211_ATTR_REQ_IE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_RESP_IE\">NL80211_ATTR_RESP_IE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_PREV_BSSID\">NL80211_ATTR_PREV_BSSID</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_KEY\">NL80211_ATTR_KEY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_KEYS\">NL80211_ATTR_KEYS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_PID\">NL80211_ATTR_PID</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_4ADDR\">NL80211_ATTR_4ADDR</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_SURVEY_INFO\">NL80211_ATTR_SURVEY_INFO</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_PMKID\">NL80211_ATTR_PMKID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MAX_NUM_PMKIDS\">NL80211_ATTR_MAX_NUM_PMKIDS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_DURATION\">NL80211_ATTR_DURATION</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_COOKIE\">NL80211_ATTR_COOKIE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_COVERAGE_CLASS\">NL80211_ATTR_WIPHY_COVERAGE_CLASS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_TX_RATES\">NL80211_ATTR_TX_RATES</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_FRAME_MATCH\">NL80211_ATTR_FRAME_MATCH</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_ACK\">NL80211_ATTR_ACK</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_PS_STATE\">NL80211_ATTR_PS_STATE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_CQM\">NL80211_ATTR_CQM</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_LOCAL_STATE_CHANGE\">NL80211_ATTR_LOCAL_STATE_CHANGE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_AP_ISOLATE\">NL80211_ATTR_AP_ISOLATE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_TX_POWER_SETTING\">NL80211_ATTR_WIPHY_TX_POWER_SETTING</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_WIPHY_TX_POWER_LEVEL\">NL80211_ATTR_WIPHY_TX_POWER_LEVEL</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* add attributes here, update the policy in nl80211.c */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_ATTR_AFTER_LAST\">__NL80211_ATTR_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_MAX\">NL80211_ATTR_MAX</a> = <a class=\"id\" href=\"#__NL80211_ATTR_AFTER_LAST\">__NL80211_ATTR_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/* source-level API compatibility */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_SCAN_GENERATION\">NL80211_ATTR_SCAN_GENERATION</a> <a class=\"id\" href=\"#NL80211_ATTR_GENERATION\">NL80211_ATTR_GENERATION</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allow user space programs to use #ifdef on new attributes by defining them</span>", 
"<span class=\"comment\"> * here</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_CMD_CONNECT\">NL80211_CMD_CONNECT</a> <a class=\"id\" href=\"#NL80211_CMD_CONNECT\">NL80211_CMD_CONNECT</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_HT_CAPABILITY\">NL80211_ATTR_HT_CAPABILITY</a> <a class=\"id\" href=\"#NL80211_ATTR_HT_CAPABILITY\">NL80211_ATTR_HT_CAPABILITY</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_BSS_BASIC_RATES\">NL80211_ATTR_BSS_BASIC_RATES</a> <a class=\"id\" href=\"#NL80211_ATTR_BSS_BASIC_RATES\">NL80211_ATTR_BSS_BASIC_RATES</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_WIPHY_TXQ_PARAMS\">NL80211_ATTR_WIPHY_TXQ_PARAMS</a> <a class=\"id\" href=\"#NL80211_ATTR_WIPHY_TXQ_PARAMS\">NL80211_ATTR_WIPHY_TXQ_PARAMS</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_WIPHY_FREQ\">NL80211_ATTR_WIPHY_FREQ</a> <a class=\"id\" href=\"#NL80211_ATTR_WIPHY_FREQ\">NL80211_ATTR_WIPHY_FREQ</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_WIPHY_CHANNEL_TYPE\">NL80211_ATTR_WIPHY_CHANNEL_TYPE</a> <a class=\"id\" href=\"#NL80211_ATTR_WIPHY_CHANNEL_TYPE\">NL80211_ATTR_WIPHY_CHANNEL_TYPE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_MGMT_SUBTYPE\">NL80211_ATTR_MGMT_SUBTYPE</a> <a class=\"id\" href=\"#NL80211_ATTR_MGMT_SUBTYPE\">NL80211_ATTR_MGMT_SUBTYPE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_IE\">NL80211_ATTR_IE</a> <a class=\"id\" href=\"#NL80211_ATTR_IE\">NL80211_ATTR_IE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_REG_INITIATOR\">NL80211_ATTR_REG_INITIATOR</a> <a class=\"id\" href=\"#NL80211_ATTR_REG_INITIATOR\">NL80211_ATTR_REG_INITIATOR</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_REG_TYPE\">NL80211_ATTR_REG_TYPE</a> <a class=\"id\" href=\"#NL80211_ATTR_REG_TYPE\">NL80211_ATTR_REG_TYPE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_FRAME\">NL80211_ATTR_FRAME</a> <a class=\"id\" href=\"#NL80211_ATTR_FRAME\">NL80211_ATTR_FRAME</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_SSID\">NL80211_ATTR_SSID</a> <a class=\"id\" href=\"#NL80211_ATTR_SSID\">NL80211_ATTR_SSID</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_AUTH_TYPE\">NL80211_ATTR_AUTH_TYPE</a> <a class=\"id\" href=\"#NL80211_ATTR_AUTH_TYPE\">NL80211_ATTR_AUTH_TYPE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_REASON_CODE\">NL80211_ATTR_REASON_CODE</a> <a class=\"id\" href=\"#NL80211_ATTR_REASON_CODE\">NL80211_ATTR_REASON_CODE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_CIPHER_SUITES_PAIRWISE\">NL80211_ATTR_CIPHER_SUITES_PAIRWISE</a> <a class=\"id\" href=\"#NL80211_ATTR_CIPHER_SUITES_PAIRWISE\">NL80211_ATTR_CIPHER_SUITES_PAIRWISE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_CIPHER_SUITE_GROUP\">NL80211_ATTR_CIPHER_SUITE_GROUP</a> <a class=\"id\" href=\"#NL80211_ATTR_CIPHER_SUITE_GROUP\">NL80211_ATTR_CIPHER_SUITE_GROUP</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_WPA_VERSIONS\">NL80211_ATTR_WPA_VERSIONS</a> <a class=\"id\" href=\"#NL80211_ATTR_WPA_VERSIONS\">NL80211_ATTR_WPA_VERSIONS</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_AKM_SUITES\">NL80211_ATTR_AKM_SUITES</a> <a class=\"id\" href=\"#NL80211_ATTR_AKM_SUITES\">NL80211_ATTR_AKM_SUITES</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_KEY\">NL80211_ATTR_KEY</a> <a class=\"id\" href=\"#NL80211_ATTR_KEY\">NL80211_ATTR_KEY</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_ATTR_KEYS\">NL80211_ATTR_KEYS</a> <a class=\"id\" href=\"#NL80211_ATTR_KEYS\">NL80211_ATTR_KEYS</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_MAX_SUPP_RATES\">NL80211_MAX_SUPP_RATES</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_MAX_SUPP_REG_RULES\">NL80211_MAX_SUPP_REG_RULES</a><span class=\"ts\"/><span class=\"ts\"/>32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_TKIP_DATA_OFFSET_ENCR_KEY\">NL80211_TKIP_DATA_OFFSET_ENCR_KEY</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_TKIP_DATA_OFFSET_TX_MIC_KEY\">NL80211_TKIP_DATA_OFFSET_TX_MIC_KEY</a><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_TKIP_DATA_OFFSET_RX_MIC_KEY\">NL80211_TKIP_DATA_OFFSET_RX_MIC_KEY</a><span class=\"ts\"/>24", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_HT_CAPABILITY_LEN\">NL80211_HT_CAPABILITY_LEN</a><span class=\"ts\"/><span class=\"ts\"/>26", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_MAX_NR_CIPHER_SUITES\">NL80211_MAX_NR_CIPHER_SUITES</a><span class=\"ts\"/><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_MAX_NR_AKM_SUITES\">NL80211_MAX_NR_AKM_SUITES</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_iftype - (virtual) interface types</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_IFTYPE_UNSPECIFIED: unspecified type, driver decides</span>", 
"<span class=\"comment\"> * @NL80211_IFTYPE_ADHOC: independent BSS member</span>", 
"<span class=\"comment\"> * @NL80211_IFTYPE_STATION: managed BSS member</span>", 
"<span class=\"comment\"> * @NL80211_IFTYPE_AP: access point</span>", 
"<span class=\"comment\"> * @NL80211_IFTYPE_AP_VLAN: VLAN interface for access points</span>", 
"<span class=\"comment\"> * @NL80211_IFTYPE_WDS: wireless distribution interface</span>", 
"<span class=\"comment\"> * @NL80211_IFTYPE_MONITOR: monitor interface receiving all frames</span>", 
"<span class=\"comment\"> * @NL80211_IFTYPE_MESH_POINT: mesh point</span>", 
"<span class=\"comment\"> * @NL80211_IFTYPE_MAX: highest interface type number currently defined</span>", 
"<span class=\"comment\"> * @__NL80211_IFTYPE_AFTER_LAST: internal use</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These values are used with the %NL80211_ATTR_IFTYPE</span>", 
"<span class=\"comment\"> * to set the type of an interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_iftype\">nl80211_iftype</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_IFTYPE_UNSPECIFIED\">NL80211_IFTYPE_UNSPECIFIED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_IFTYPE_ADHOC\">NL80211_IFTYPE_ADHOC</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_IFTYPE_STATION\">NL80211_IFTYPE_STATION</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_IFTYPE_AP\">NL80211_IFTYPE_AP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_IFTYPE_AP_VLAN\">NL80211_IFTYPE_AP_VLAN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_IFTYPE_WDS\">NL80211_IFTYPE_WDS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_IFTYPE_MONITOR\">NL80211_IFTYPE_MONITOR</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_IFTYPE_MESH_POINT\">NL80211_IFTYPE_MESH_POINT</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_IFTYPE_AFTER_LAST\">__NL80211_IFTYPE_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_IFTYPE_MAX\">NL80211_IFTYPE_MAX</a> = <a class=\"id\" href=\"#__NL80211_IFTYPE_AFTER_LAST\">__NL80211_IFTYPE_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_sta_flags - station flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Station flags. When a station is added to an AP interface, it is</span>", 
"<span class=\"comment\"> * assumed to be already associated (and hence authenticated.)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_STA_FLAG_AUTHORIZED: station is authorized (802.1X)</span>", 
"<span class=\"comment\"> * @NL80211_STA_FLAG_SHORT_PREAMBLE: station is capable of receiving frames</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with short barker preamble</span>", 
"<span class=\"comment\"> * @NL80211_STA_FLAG_WME: station is WME/QoS capable</span>", 
"<span class=\"comment\"> * @NL80211_STA_FLAG_MFP: station uses management frame protection</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_sta_flags\">nl80211_sta_flags</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_STA_FLAG_INVALID\">__NL80211_STA_FLAG_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_FLAG_AUTHORIZED\">NL80211_STA_FLAG_AUTHORIZED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_FLAG_SHORT_PREAMBLE\">NL80211_STA_FLAG_SHORT_PREAMBLE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_FLAG_WME\">NL80211_STA_FLAG_WME</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_FLAG_MFP\">NL80211_STA_FLAG_MFP</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_STA_FLAG_AFTER_LAST\">__NL80211_STA_FLAG_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_FLAG_MAX\">NL80211_STA_FLAG_MAX</a> = <a class=\"id\" href=\"#__NL80211_STA_FLAG_AFTER_LAST\">__NL80211_STA_FLAG_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct nl80211_sta_flag_update - station flags mask/set</span>", 
"<span class=\"comment\"> * @mask: mask of station flags to set</span>", 
"<span class=\"comment\"> * @set: which values to set them to</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Both mask and set contain bits as per &amp;enum nl80211_sta_flags.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#nl80211_sta_flag_update\">nl80211_sta_flag_update</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#set\">set</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_rate_info - bitrate information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These attribute types are used with %NL80211_STA_INFO_TXRATE</span>", 
"<span class=\"comment\"> * when getting information about the bitrate of a station.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @__NL80211_RATE_INFO_INVALID: attribute number 0 is reserved</span>", 
"<span class=\"comment\"> * @NL80211_RATE_INFO_BITRATE: total bitrate (u16, 100kbit/s)</span>", 
"<span class=\"comment\"> * @NL80211_RATE_INFO_MCS: mcs index for 802.11n (u8)</span>", 
"<span class=\"comment\"> * @NL80211_RATE_INFO_40_MHZ_WIDTH: 40 Mhz dualchannel bitrate</span>", 
"<span class=\"comment\"> * @NL80211_RATE_INFO_SHORT_GI: 400ns guard interval</span>", 
"<span class=\"comment\"> * @NL80211_RATE_INFO_MAX: highest rate_info number currently defined</span>", 
"<span class=\"comment\"> * @__NL80211_RATE_INFO_AFTER_LAST: internal use</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_rate_info\">nl80211_rate_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_RATE_INFO_INVALID\">__NL80211_RATE_INFO_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RATE_INFO_BITRATE\">NL80211_RATE_INFO_BITRATE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RATE_INFO_MCS\">NL80211_RATE_INFO_MCS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RATE_INFO_40_MHZ_WIDTH\">NL80211_RATE_INFO_40_MHZ_WIDTH</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RATE_INFO_SHORT_GI\">NL80211_RATE_INFO_SHORT_GI</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_RATE_INFO_AFTER_LAST\">__NL80211_RATE_INFO_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RATE_INFO_MAX\">NL80211_RATE_INFO_MAX</a> = <a class=\"id\" href=\"#__NL80211_RATE_INFO_AFTER_LAST\">__NL80211_RATE_INFO_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_sta_info - station information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These attribute types are used with %NL80211_ATTR_STA_INFO</span>", 
"<span class=\"comment\"> * when getting information about a station.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @__NL80211_STA_INFO_INVALID: attribute number 0 is reserved</span>", 
"<span class=\"comment\"> * @NL80211_STA_INFO_INACTIVE_TIME: time since last activity (u32, msecs)</span>", 
"<span class=\"comment\"> * @NL80211_STA_INFO_RX_BYTES: total received bytes (u32, from this station)</span>", 
"<span class=\"comment\"> * @NL80211_STA_INFO_TX_BYTES: total transmitted bytes (u32, to this station)</span>", 
"<span class=\"comment\"> * @__NL80211_STA_INFO_AFTER_LAST: internal</span>", 
"<span class=\"comment\"> * @NL80211_STA_INFO_MAX: highest possible station info attribute</span>", 
"<span class=\"comment\"> * @NL80211_STA_INFO_SIGNAL: signal strength of last received PPDU (u8, dBm)</span>", 
"<span class=\"comment\"> * @NL80211_STA_INFO_TX_BITRATE: current unicast tx rate, nested attribute</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>containing info as possible, see &amp;enum nl80211_sta_info_txrate.</span>", 
"<span class=\"comment\"> * @NL80211_STA_INFO_RX_PACKETS: total received packet (u32, from this station)</span>", 
"<span class=\"comment\"> * @NL80211_STA_INFO_TX_PACKETS: total transmitted packets (u32, to this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>station)</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_sta_info\">nl80211_sta_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_STA_INFO_INVALID\">__NL80211_STA_INFO_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_INACTIVE_TIME\">NL80211_STA_INFO_INACTIVE_TIME</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_RX_BYTES\">NL80211_STA_INFO_RX_BYTES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_TX_BYTES\">NL80211_STA_INFO_TX_BYTES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_LLID\">NL80211_STA_INFO_LLID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_PLID\">NL80211_STA_INFO_PLID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_PLINK_STATE\">NL80211_STA_INFO_PLINK_STATE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_SIGNAL\">NL80211_STA_INFO_SIGNAL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_TX_BITRATE\">NL80211_STA_INFO_TX_BITRATE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_RX_PACKETS\">NL80211_STA_INFO_RX_PACKETS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_TX_PACKETS\">NL80211_STA_INFO_TX_PACKETS</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_STA_INFO_AFTER_LAST\">__NL80211_STA_INFO_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_STA_INFO_MAX\">NL80211_STA_INFO_MAX</a> = <a class=\"id\" href=\"#__NL80211_STA_INFO_AFTER_LAST\">__NL80211_STA_INFO_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_mpath_flags - nl80211 mesh path flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MPATH_FLAG_ACTIVE: the mesh path is active</span>", 
"<span class=\"comment\"> * @NL80211_MPATH_FLAG_RESOLVING: the mesh path discovery process is running</span>", 
"<span class=\"comment\"> * @NL80211_MPATH_FLAG_SN_VALID: the mesh path contains a valid SN</span>", 
"<span class=\"comment\"> * @NL80211_MPATH_FLAG_FIXED: the mesh path has been manually set</span>", 
"<span class=\"comment\"> * @NL80211_MPATH_FLAG_RESOLVED: the mesh path discovery process succeeded</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_mpath_flags\">nl80211_mpath_flags</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_FLAG_ACTIVE\">NL80211_MPATH_FLAG_ACTIVE</a> =<span class=\"ts\"/>1<<0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_FLAG_RESOLVING\">NL80211_MPATH_FLAG_RESOLVING</a> =<span class=\"ts\"/>1<<1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_FLAG_SN_VALID\">NL80211_MPATH_FLAG_SN_VALID</a> =<span class=\"ts\"/>1<<2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_FLAG_FIXED\">NL80211_MPATH_FLAG_FIXED</a> =<span class=\"ts\"/>1<<3,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_FLAG_RESOLVED\">NL80211_MPATH_FLAG_RESOLVED</a> =<span class=\"ts\"/>1<<4,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_mpath_info - mesh path information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These attribute types are used with %NL80211_ATTR_MPATH_INFO when getting</span>", 
"<span class=\"comment\"> * information about a mesh path.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @__NL80211_MPATH_INFO_INVALID: attribute number 0 is reserved</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MPATH_FRAME_QLEN: number of queued frames for this destination</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MPATH_SN: destination sequence number</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MPATH_METRIC: metric (cost) of this mesh path</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MPATH_EXPTIME: expiration time for the path, in msec from now</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MPATH_FLAGS: mesh path flags, enumerated in</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>&amp;enum nl80211_mpath_flags;</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MPATH_DISCOVERY_TIMEOUT: total path discovery timeout, in msec</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_MPATH_DISCOVERY_RETRIES: mesh path discovery retries</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_mpath_info\">nl80211_mpath_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_MPATH_INFO_INVALID\">__NL80211_MPATH_INFO_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_INFO_FRAME_QLEN\">NL80211_MPATH_INFO_FRAME_QLEN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_INFO_SN\">NL80211_MPATH_INFO_SN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_INFO_METRIC\">NL80211_MPATH_INFO_METRIC</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_INFO_EXPTIME\">NL80211_MPATH_INFO_EXPTIME</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_INFO_FLAGS\">NL80211_MPATH_INFO_FLAGS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_INFO_DISCOVERY_TIMEOUT\">NL80211_MPATH_INFO_DISCOVERY_TIMEOUT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_INFO_DISCOVERY_RETRIES\">NL80211_MPATH_INFO_DISCOVERY_RETRIES</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_MPATH_INFO_AFTER_LAST\">__NL80211_MPATH_INFO_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MPATH_INFO_MAX\">NL80211_MPATH_INFO_MAX</a> = <a class=\"id\" href=\"#__NL80211_MPATH_INFO_AFTER_LAST\">__NL80211_MPATH_INFO_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_band_attr - band attributes</span>", 
"<span class=\"comment\"> * @__NL80211_BAND_ATTR_INVALID: attribute number 0 is reserved</span>", 
"<span class=\"comment\"> * @NL80211_BAND_ATTR_FREQS: supported frequencies in this band,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>an array of nested frequency attributes</span>", 
"<span class=\"comment\"> * @NL80211_BAND_ATTR_RATES: supported bitrates in this band,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>an array of nested bitrate attributes</span>", 
"<span class=\"comment\"> * @NL80211_BAND_ATTR_HT_MCS_SET: 16-byte attribute containing the MCS set as</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>defined in 802.11n</span>", 
"<span class=\"comment\"> * @NL80211_BAND_ATTR_HT_CAPA: HT capabilities, as in the HT information IE</span>", 
"<span class=\"comment\"> * @NL80211_BAND_ATTR_HT_AMPDU_FACTOR: A-MPDU factor, as in 11n</span>", 
"<span class=\"comment\"> * @NL80211_BAND_ATTR_HT_AMPDU_DENSITY: A-MPDU density, as in 11n</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_band_attr\">nl80211_band_attr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_BAND_ATTR_INVALID\">__NL80211_BAND_ATTR_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BAND_ATTR_FREQS\">NL80211_BAND_ATTR_FREQS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BAND_ATTR_RATES\">NL80211_BAND_ATTR_RATES</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BAND_ATTR_HT_MCS_SET\">NL80211_BAND_ATTR_HT_MCS_SET</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BAND_ATTR_HT_CAPA\">NL80211_BAND_ATTR_HT_CAPA</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BAND_ATTR_HT_AMPDU_FACTOR\">NL80211_BAND_ATTR_HT_AMPDU_FACTOR</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BAND_ATTR_HT_AMPDU_DENSITY\">NL80211_BAND_ATTR_HT_AMPDU_DENSITY</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_BAND_ATTR_AFTER_LAST\">__NL80211_BAND_ATTR_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BAND_ATTR_MAX\">NL80211_BAND_ATTR_MAX</a> = <a class=\"id\" href=\"#__NL80211_BAND_ATTR_AFTER_LAST\">__NL80211_BAND_ATTR_AFTER_LAST</a> - 1", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_BAND_ATTR_HT_CAPA\">NL80211_BAND_ATTR_HT_CAPA</a> <a class=\"id\" href=\"#NL80211_BAND_ATTR_HT_CAPA\">NL80211_BAND_ATTR_HT_CAPA</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_frequency_attr - frequency attributes</span>", 
"<span class=\"comment\"> * @NL80211_FREQUENCY_ATTR_FREQ: Frequency in MHz</span>", 
"<span class=\"comment\"> * @NL80211_FREQUENCY_ATTR_DISABLED: Channel is disabled in current</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>regulatory domain.</span>", 
"<span class=\"comment\"> * @NL80211_FREQUENCY_ATTR_PASSIVE_SCAN: Only passive scanning is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>permitted on this channel in current regulatory domain.</span>", 
"<span class=\"comment\"> * @NL80211_FREQUENCY_ATTR_NO_IBSS: IBSS networks are not permitted</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>on this channel in current regulatory domain.</span>", 
"<span class=\"comment\"> * @NL80211_FREQUENCY_ATTR_RADAR: Radar detection is mandatory</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>on this channel in current regulatory domain.</span>", 
"<span class=\"comment\"> * @NL80211_FREQUENCY_ATTR_MAX_TX_POWER: Maximum transmission power in mBm</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(100 * dBm).</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_frequency_attr\">nl80211_frequency_attr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_FREQUENCY_ATTR_INVALID\">__NL80211_FREQUENCY_ATTR_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_FREQUENCY_ATTR_FREQ\">NL80211_FREQUENCY_ATTR_FREQ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_FREQUENCY_ATTR_DISABLED\">NL80211_FREQUENCY_ATTR_DISABLED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_FREQUENCY_ATTR_PASSIVE_SCAN\">NL80211_FREQUENCY_ATTR_PASSIVE_SCAN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_FREQUENCY_ATTR_NO_IBSS\">NL80211_FREQUENCY_ATTR_NO_IBSS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_FREQUENCY_ATTR_RADAR\">NL80211_FREQUENCY_ATTR_RADAR</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_FREQUENCY_ATTR_MAX_TX_POWER\">NL80211_FREQUENCY_ATTR_MAX_TX_POWER</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_FREQUENCY_ATTR_AFTER_LAST\">__NL80211_FREQUENCY_ATTR_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_FREQUENCY_ATTR_MAX\">NL80211_FREQUENCY_ATTR_MAX</a> = <a class=\"id\" href=\"#__NL80211_FREQUENCY_ATTR_AFTER_LAST\">__NL80211_FREQUENCY_ATTR_AFTER_LAST</a> - 1", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NL80211_FREQUENCY_ATTR_MAX_TX_POWER\">NL80211_FREQUENCY_ATTR_MAX_TX_POWER</a> <a class=\"id\" href=\"#NL80211_FREQUENCY_ATTR_MAX_TX_POWER\">NL80211_FREQUENCY_ATTR_MAX_TX_POWER</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_bitrate_attr - bitrate attributes</span>", 
"<span class=\"comment\"> * @NL80211_BITRATE_ATTR_RATE: Bitrate in units of 100 kbps</span>", 
"<span class=\"comment\"> * @NL80211_BITRATE_ATTR_2GHZ_SHORTPREAMBLE: Short preamble supported</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in 2.4 GHz band.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_bitrate_attr\">nl80211_bitrate_attr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_BITRATE_ATTR_INVALID\">__NL80211_BITRATE_ATTR_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BITRATE_ATTR_RATE\">NL80211_BITRATE_ATTR_RATE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BITRATE_ATTR_2GHZ_SHORTPREAMBLE\">NL80211_BITRATE_ATTR_2GHZ_SHORTPREAMBLE</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_BITRATE_ATTR_AFTER_LAST\">__NL80211_BITRATE_ATTR_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BITRATE_ATTR_MAX\">NL80211_BITRATE_ATTR_MAX</a> = <a class=\"id\" href=\"#__NL80211_BITRATE_ATTR_AFTER_LAST\">__NL80211_BITRATE_ATTR_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_initiator - Indicates the initiator of a reg domain request</span>", 
"<span class=\"comment\"> * @NL80211_REGDOM_SET_BY_CORE: Core queried CRDA for a dynamic world</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>regulatory domain.</span>", 
"<span class=\"comment\"> * @NL80211_REGDOM_SET_BY_USER: User asked the wireless core to set the</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>regulatory domain.</span>", 
"<span class=\"comment\"> * @NL80211_REGDOM_SET_BY_DRIVER: a wireless drivers has hinted to the</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>wireless core it thinks its knows the regulatory domain we should be in.</span>", 
"<span class=\"comment\"> * @NL80211_REGDOM_SET_BY_COUNTRY_IE: the wireless core has received an</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>802.11 country information element with regulatory information it</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>thinks we should consider.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_reg_initiator\">nl80211_reg_initiator</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_REGDOM_SET_BY_CORE\">NL80211_REGDOM_SET_BY_CORE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_REGDOM_SET_BY_USER\">NL80211_REGDOM_SET_BY_USER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_REGDOM_SET_BY_DRIVER\">NL80211_REGDOM_SET_BY_DRIVER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_REGDOM_SET_BY_COUNTRY_IE\">NL80211_REGDOM_SET_BY_COUNTRY_IE</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_reg_type - specifies the type of regulatory domain</span>", 
"<span class=\"comment\"> * @NL80211_REGDOM_TYPE_COUNTRY: the regulatory domain set is one that pertains</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to a specific country. When this is set you can count on the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ISO / IEC 3166 alpha2 country code being valid.</span>", 
"<span class=\"comment\"> * @NL80211_REGDOM_TYPE_WORLD: the regulatory set domain is the world regulatory</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>domain.</span>", 
"<span class=\"comment\"> * @NL80211_REGDOM_TYPE_CUSTOM_WORLD: the regulatory domain set is a custom</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>driver specific world regulatory domain. These do not apply system-wide</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>and are only applicable to the individual devices which have requested</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>them to be applied.</span>", 
"<span class=\"comment\"> * @NL80211_REGDOM_TYPE_INTERSECTION: the regulatory domain set is the product</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of an intersection between two regulatory domains -- the previously</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>set regulatory domain on the system and the last accepted regulatory</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>domain request to be processed.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_reg_type\">nl80211_reg_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_REGDOM_TYPE_COUNTRY\">NL80211_REGDOM_TYPE_COUNTRY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_REGDOM_TYPE_WORLD\">NL80211_REGDOM_TYPE_WORLD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_REGDOM_TYPE_CUSTOM_WORLD\">NL80211_REGDOM_TYPE_CUSTOM_WORLD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_REGDOM_TYPE_INTERSECTION\">NL80211_REGDOM_TYPE_INTERSECTION</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_reg_rule_attr - regulatory rule attributes</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_REG_RULE_FLAGS: a set of flags which specify additional</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>considerations for a given frequency range. These are the</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>&amp;enum nl80211_reg_rule_flags.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_FREQ_RANGE_START: starting frequencry for the regulatory</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>rule in KHz. This is not a center of frequency but an actual regulatory</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>band edge.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_FREQ_RANGE_END: ending frequency for the regulatory rule</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>in KHz. This is not a center a frequency but an actual regulatory</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>band edge.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_FREQ_RANGE_MAX_BW: maximum allowed bandwidth for this</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>frequency range, in KHz.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_POWER_RULE_MAX_ANT_GAIN: the maximum allowed antenna gain</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>for a given frequency range. The value is in mBi (100 * dBi).</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>If you don't have one then don't send this.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_POWER_RULE_MAX_EIRP: the maximum allowed EIRP for</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>a given frequency range. The value is in mBm (100 * dBm).</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_reg_rule_attr\">nl80211_reg_rule_attr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_REG_RULE_ATTR_INVALID\">__NL80211_REG_RULE_ATTR_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_REG_RULE_FLAGS\">NL80211_ATTR_REG_RULE_FLAGS</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_FREQ_RANGE_START\">NL80211_ATTR_FREQ_RANGE_START</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_FREQ_RANGE_END\">NL80211_ATTR_FREQ_RANGE_END</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_FREQ_RANGE_MAX_BW\">NL80211_ATTR_FREQ_RANGE_MAX_BW</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_POWER_RULE_MAX_ANT_GAIN\">NL80211_ATTR_POWER_RULE_MAX_ANT_GAIN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_POWER_RULE_MAX_EIRP\">NL80211_ATTR_POWER_RULE_MAX_EIRP</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_REG_RULE_ATTR_AFTER_LAST\">__NL80211_REG_RULE_ATTR_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_REG_RULE_ATTR_MAX\">NL80211_REG_RULE_ATTR_MAX</a> = <a class=\"id\" href=\"#__NL80211_REG_RULE_ATTR_AFTER_LAST\">__NL80211_REG_RULE_ATTR_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_reg_rule_flags - regulatory rule flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_RRF_NO_OFDM: OFDM modulation not allowed</span>", 
"<span class=\"comment\"> * @NL80211_RRF_NO_CCK: CCK modulation not allowed</span>", 
"<span class=\"comment\"> * @NL80211_RRF_NO_INDOOR: indoor operation not allowed</span>", 
"<span class=\"comment\"> * @NL80211_RRF_NO_OUTDOOR: outdoor operation not allowed</span>", 
"<span class=\"comment\"> * @NL80211_RRF_DFS: DFS support is required to be used</span>", 
"<span class=\"comment\"> * @NL80211_RRF_PTP_ONLY: this is only for Point To Point links</span>", 
"<span class=\"comment\"> * @NL80211_RRF_PTMP_ONLY: this is only for Point To Multi Point links</span>", 
"<span class=\"comment\"> * @NL80211_RRF_PASSIVE_SCAN: passive scan is required</span>", 
"<span class=\"comment\"> * @NL80211_RRF_NO_IBSS: no IBSS is allowed</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_reg_rule_flags\">nl80211_reg_rule_flags</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RRF_NO_OFDM\">NL80211_RRF_NO_OFDM</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RRF_NO_CCK\">NL80211_RRF_NO_CCK</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RRF_NO_INDOOR\">NL80211_RRF_NO_INDOOR</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RRF_NO_OUTDOOR\">NL80211_RRF_NO_OUTDOOR</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<3,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RRF_DFS\">NL80211_RRF_DFS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 1<<4,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RRF_PTP_ONLY\">NL80211_RRF_PTP_ONLY</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<5,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RRF_PTMP_ONLY\">NL80211_RRF_PTMP_ONLY</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<6,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RRF_PASSIVE_SCAN\">NL80211_RRF_PASSIVE_SCAN</a><span class=\"ts\"/>= 1<<7,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_RRF_NO_IBSS\">NL80211_RRF_NO_IBSS</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<8,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_survey_info - survey information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These attribute types are used with %NL80211_ATTR_SURVEY_INFO</span>", 
"<span class=\"comment\"> * when getting information about a survey.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @__NL80211_SURVEY_INFO_INVALID: attribute number 0 is reserved</span>", 
"<span class=\"comment\"> * @NL80211_SURVEY_INFO_FREQUENCY: center frequency of channel</span>", 
"<span class=\"comment\"> * @NL80211_SURVEY_INFO_NOISE: noise level of channel (u8, dBm)</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_survey_info\">nl80211_survey_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_SURVEY_INFO_INVALID\">__NL80211_SURVEY_INFO_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_SURVEY_INFO_FREQUENCY\">NL80211_SURVEY_INFO_FREQUENCY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_SURVEY_INFO_NOISE\">NL80211_SURVEY_INFO_NOISE</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_SURVEY_INFO_AFTER_LAST\">__NL80211_SURVEY_INFO_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_SURVEY_INFO_MAX\">NL80211_SURVEY_INFO_MAX</a> = <a class=\"id\" href=\"#__NL80211_SURVEY_INFO_AFTER_LAST\">__NL80211_SURVEY_INFO_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_mntr_flags - monitor configuration flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Monitor configuration flags.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @__NL80211_MNTR_FLAG_INVALID: reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MNTR_FLAG_FCSFAIL: pass frames with bad FCS</span>", 
"<span class=\"comment\"> * @NL80211_MNTR_FLAG_PLCPFAIL: pass frames with bad PLCP</span>", 
"<span class=\"comment\"> * @NL80211_MNTR_FLAG_CONTROL: pass control frames</span>", 
"<span class=\"comment\"> * @NL80211_MNTR_FLAG_OTHER_BSS: disable BSSID filtering</span>", 
"<span class=\"comment\"> * @NL80211_MNTR_FLAG_COOK_FRAMES: report frames after processing.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>overrides all other flags.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @__NL80211_MNTR_FLAG_AFTER_LAST: internal use</span>", 
"<span class=\"comment\"> * @NL80211_MNTR_FLAG_MAX: highest possible monitor flag</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_mntr_flags\">nl80211_mntr_flags</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_MNTR_FLAG_INVALID\">__NL80211_MNTR_FLAG_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MNTR_FLAG_FCSFAIL\">NL80211_MNTR_FLAG_FCSFAIL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MNTR_FLAG_PLCPFAIL\">NL80211_MNTR_FLAG_PLCPFAIL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MNTR_FLAG_CONTROL\">NL80211_MNTR_FLAG_CONTROL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MNTR_FLAG_OTHER_BSS\">NL80211_MNTR_FLAG_OTHER_BSS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MNTR_FLAG_COOK_FRAMES\">NL80211_MNTR_FLAG_COOK_FRAMES</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_MNTR_FLAG_AFTER_LAST\">__NL80211_MNTR_FLAG_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MNTR_FLAG_MAX\">NL80211_MNTR_FLAG_MAX</a> = <a class=\"id\" href=\"#__NL80211_MNTR_FLAG_AFTER_LAST\">__NL80211_MNTR_FLAG_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_meshconf_params - mesh configuration parameters</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Mesh configuration parameters</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @__NL80211_MESHCONF_INVALID: internal use</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_RETRY_TIMEOUT: specifies the initial retry timeout in</span>", 
"<span class=\"comment\"> * millisecond units, used by the Peer Link Open message</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_CONFIRM_TIMEOUT: specifies the inital confirm timeout, in</span>", 
"<span class=\"comment\"> * millisecond units, used by the peer link management to close a peer link</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_HOLDING_TIMEOUT: specifies the holding timeout, in</span>", 
"<span class=\"comment\"> * millisecond units</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_MAX_PEER_LINKS: maximum number of peer links allowed</span>", 
"<span class=\"comment\"> * on this mesh interface</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_MAX_RETRIES: specifies the maximum number of peer link</span>", 
"<span class=\"comment\"> * open retries that can be sent to establish a new peer link instance in a</span>", 
"<span class=\"comment\"> * mesh</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_TTL: specifies the value of TTL field set at a source mesh</span>", 
"<span class=\"comment\"> * point.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_AUTO_OPEN_PLINKS: whether we should automatically</span>", 
"<span class=\"comment\"> * open peer links when we detect compatible mesh peers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_HWMP_MAX_PREQ_RETRIES: the number of action frames</span>", 
"<span class=\"comment\"> * containing a PREQ that an MP can send to a particular destination (path</span>", 
"<span class=\"comment\"> * target)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_PATH_REFRESH_TIME: how frequently to refresh mesh paths</span>", 
"<span class=\"comment\"> * (in milliseconds)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_MIN_DISCOVERY_TIMEOUT: minimum length of time to wait</span>", 
"<span class=\"comment\"> * until giving up on a path discovery (in milliseconds)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_HWMP_ACTIVE_PATH_TIMEOUT: The time (in TUs) for which mesh</span>", 
"<span class=\"comment\"> * points receiving a PREQ shall consider the forwarding information from the</span>", 
"<span class=\"comment\"> * root to be valid. (TU = time unit)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_HWMP_PREQ_MIN_INTERVAL: The minimum interval of time (in</span>", 
"<span class=\"comment\"> * TUs) during which an MP can send only one action frame containing a PREQ</span>", 
"<span class=\"comment\"> * reference element</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_HWMP_NET_DIAM_TRVS_TIME: The interval of time (in TUs)</span>", 
"<span class=\"comment\"> * that it takes for an HWMP information element to propagate across the mesh</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_ROOTMODE: whether root mode is enabled or not</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_MESHCONF_ATTR_MAX: highest possible mesh configuration attribute</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @__NL80211_MESHCONF_ATTR_AFTER_LAST: internal use</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_meshconf_params\">nl80211_meshconf_params</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_MESHCONF_INVALID\">__NL80211_MESHCONF_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_RETRY_TIMEOUT\">NL80211_MESHCONF_RETRY_TIMEOUT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_CONFIRM_TIMEOUT\">NL80211_MESHCONF_CONFIRM_TIMEOUT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_HOLDING_TIMEOUT\">NL80211_MESHCONF_HOLDING_TIMEOUT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_MAX_PEER_LINKS\">NL80211_MESHCONF_MAX_PEER_LINKS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_MAX_RETRIES\">NL80211_MESHCONF_MAX_RETRIES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_TTL\">NL80211_MESHCONF_TTL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_AUTO_OPEN_PLINKS\">NL80211_MESHCONF_AUTO_OPEN_PLINKS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_HWMP_MAX_PREQ_RETRIES\">NL80211_MESHCONF_HWMP_MAX_PREQ_RETRIES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_PATH_REFRESH_TIME\">NL80211_MESHCONF_PATH_REFRESH_TIME</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_MIN_DISCOVERY_TIMEOUT\">NL80211_MESHCONF_MIN_DISCOVERY_TIMEOUT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_HWMP_ACTIVE_PATH_TIMEOUT\">NL80211_MESHCONF_HWMP_ACTIVE_PATH_TIMEOUT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_HWMP_PREQ_MIN_INTERVAL\">NL80211_MESHCONF_HWMP_PREQ_MIN_INTERVAL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_HWMP_NET_DIAM_TRVS_TIME\">NL80211_MESHCONF_HWMP_NET_DIAM_TRVS_TIME</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_HWMP_ROOTMODE\">NL80211_MESHCONF_HWMP_ROOTMODE</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_MESHCONF_ATTR_AFTER_LAST\">__NL80211_MESHCONF_ATTR_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MESHCONF_ATTR_MAX\">NL80211_MESHCONF_ATTR_MAX</a> = <a class=\"id\" href=\"#__NL80211_MESHCONF_ATTR_AFTER_LAST\">__NL80211_MESHCONF_ATTR_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_txq_attr - TX queue parameter attributes</span>", 
"<span class=\"comment\"> * @__NL80211_TXQ_ATTR_INVALID: Attribute number 0 is reserved</span>", 
"<span class=\"comment\"> * @NL80211_TXQ_ATTR_QUEUE: TX queue identifier (NL80211_TXQ_Q_*)</span>", 
"<span class=\"comment\"> * @NL80211_TXQ_ATTR_TXOP: Maximum burst time in units of 32 usecs, 0 meaning</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>disabled</span>", 
"<span class=\"comment\"> * @NL80211_TXQ_ATTR_CWMIN: Minimum contention window [a value of the form</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>2^n-1 in the range 1..32767]</span>", 
"<span class=\"comment\"> * @NL80211_TXQ_ATTR_CWMAX: Maximum contention window [a value of the form</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>2^n-1 in the range 1..32767]</span>", 
"<span class=\"comment\"> * @NL80211_TXQ_ATTR_AIFS: Arbitration interframe space [0..255]</span>", 
"<span class=\"comment\"> * @__NL80211_TXQ_ATTR_AFTER_LAST: Internal</span>", 
"<span class=\"comment\"> * @NL80211_TXQ_ATTR_MAX: Maximum TXQ attribute number</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_txq_attr\">nl80211_txq_attr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_TXQ_ATTR_INVALID\">__NL80211_TXQ_ATTR_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_ATTR_QUEUE\">NL80211_TXQ_ATTR_QUEUE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_ATTR_TXOP\">NL80211_TXQ_ATTR_TXOP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_ATTR_CWMIN\">NL80211_TXQ_ATTR_CWMIN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_ATTR_CWMAX\">NL80211_TXQ_ATTR_CWMAX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_ATTR_AIFS\">NL80211_TXQ_ATTR_AIFS</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_TXQ_ATTR_AFTER_LAST\">__NL80211_TXQ_ATTR_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_ATTR_MAX\">NL80211_TXQ_ATTR_MAX</a> = <a class=\"id\" href=\"#__NL80211_TXQ_ATTR_AFTER_LAST\">__NL80211_TXQ_ATTR_AFTER_LAST</a> - 1", 
"};", 
"", 
"enum <a class=\"id\" href=\"#nl80211_txq_q\">nl80211_txq_q</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_Q_VO\">NL80211_TXQ_Q_VO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_Q_VI\">NL80211_TXQ_Q_VI</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_Q_BE\">NL80211_TXQ_Q_BE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXQ_Q_BK\">NL80211_TXQ_Q_BK</a>", 
"};", 
"", 
"enum <a class=\"id\" href=\"#nl80211_channel_type\">nl80211_channel_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CHAN_NO_HT\">NL80211_CHAN_NO_HT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CHAN_HT20\">NL80211_CHAN_HT20</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CHAN_HT40MINUS\">NL80211_CHAN_HT40MINUS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CHAN_HT40PLUS\">NL80211_CHAN_HT40PLUS</a>", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_bss - netlink attributes for a BSS</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @__NL80211_BSS_INVALID: invalid</span>", 
"<span class=\"comment\"> * @NL80211_BSS_FREQUENCY: frequency in MHz (u32)</span>", 
"<span class=\"comment\"> * @NL80211_BSS_TSF: TSF of the received probe response/beacon (u64)</span>", 
"<span class=\"comment\"> * @NL80211_BSS_BEACON_INTERVAL: beacon interval of the (I)BSS (u16)</span>", 
"<span class=\"comment\"> * @NL80211_BSS_CAPABILITY: capability field (CPU order, u16)</span>", 
"<span class=\"comment\"> * @NL80211_BSS_INFORMATION_ELEMENTS: binary attribute containing the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>raw information elements from the probe response/beacon (bin);</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if the %NL80211_BSS_BEACON_IES attribute is present, the IEs here are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>from a Probe Response frame; otherwise they are from a Beacon frame.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>However, if the driver does not indicate the source of the IEs, these</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IEs may be from either frame subtype.</span>", 
"<span class=\"comment\"> * @NL80211_BSS_SIGNAL_MBM: signal strength of probe response/beacon</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in mBm (100 * dBm) (s32)</span>", 
"<span class=\"comment\"> * @NL80211_BSS_SIGNAL_UNSPEC: signal strength of the probe response/beacon</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in unspecified units, scaled to 0..100 (u8)</span>", 
"<span class=\"comment\"> * @NL80211_BSS_STATUS: status, if this BSS is \"used\"</span>", 
"<span class=\"comment\"> * @NL80211_BSS_SEEN_MS_AGO: age of this BSS entry in ms</span>", 
"<span class=\"comment\"> * @NL80211_BSS_BEACON_IES: binary attribute containing the raw information</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>elements from a Beacon frame (bin); not present if no Beacon frame has</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>yet been received</span>", 
"<span class=\"comment\"> * @__NL80211_BSS_AFTER_LAST: internal</span>", 
"<span class=\"comment\"> * @NL80211_BSS_MAX: highest BSS attribute</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_bss\">nl80211_bss</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_BSS_INVALID\">__NL80211_BSS_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_BSSID\">NL80211_BSS_BSSID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_FREQUENCY\">NL80211_BSS_FREQUENCY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_TSF\">NL80211_BSS_TSF</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_BEACON_INTERVAL\">NL80211_BSS_BEACON_INTERVAL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_CAPABILITY\">NL80211_BSS_CAPABILITY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_INFORMATION_ELEMENTS\">NL80211_BSS_INFORMATION_ELEMENTS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_SIGNAL_MBM\">NL80211_BSS_SIGNAL_MBM</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_SIGNAL_UNSPEC\">NL80211_BSS_SIGNAL_UNSPEC</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_STATUS\">NL80211_BSS_STATUS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_SEEN_MS_AGO\">NL80211_BSS_SEEN_MS_AGO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_BEACON_IES\">NL80211_BSS_BEACON_IES</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_BSS_AFTER_LAST\">__NL80211_BSS_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_MAX\">NL80211_BSS_MAX</a> = <a class=\"id\" href=\"#__NL80211_BSS_AFTER_LAST\">__NL80211_BSS_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_bss_status - BSS \"status\"</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_bss_status\">nl80211_bss_status</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_STATUS_AUTHENTICATED\">NL80211_BSS_STATUS_AUTHENTICATED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_STATUS_ASSOCIATED\">NL80211_BSS_STATUS_ASSOCIATED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BSS_STATUS_IBSS_JOINED\">NL80211_BSS_STATUS_IBSS_JOINED</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_auth_type - AuthenticationType</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @NL80211_AUTHTYPE_OPEN_SYSTEM: Open System authentication</span>", 
"<span class=\"comment\"> * @NL80211_AUTHTYPE_SHARED_KEY: Shared Key authentication (WEP only)</span>", 
"<span class=\"comment\"> * @NL80211_AUTHTYPE_FT: Fast BSS Transition (IEEE 802.11r)</span>", 
"<span class=\"comment\"> * @NL80211_AUTHTYPE_NETWORK_EAP: Network EAP (some Cisco APs and mainly LEAP)</span>", 
"<span class=\"comment\"> * @__NL80211_AUTHTYPE_NUM: internal</span>", 
"<span class=\"comment\"> * @NL80211_AUTHTYPE_MAX: maximum valid auth algorithm</span>", 
"<span class=\"comment\"> * @NL80211_AUTHTYPE_AUTOMATIC: determine automatically (if necessary by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>trying multiple times); this is invalid in netlink -- leave out</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the attribute for this on CONNECT commands.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_auth_type\">nl80211_auth_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_AUTHTYPE_OPEN_SYSTEM\">NL80211_AUTHTYPE_OPEN_SYSTEM</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_AUTHTYPE_SHARED_KEY\">NL80211_AUTHTYPE_SHARED_KEY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_AUTHTYPE_FT\">NL80211_AUTHTYPE_FT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_AUTHTYPE_NETWORK_EAP\">NL80211_AUTHTYPE_NETWORK_EAP</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_AUTHTYPE_NUM\">__NL80211_AUTHTYPE_NUM</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_AUTHTYPE_MAX\">NL80211_AUTHTYPE_MAX</a> = <a class=\"id\" href=\"#__NL80211_AUTHTYPE_NUM\">__NL80211_AUTHTYPE_NUM</a> - 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_AUTHTYPE_AUTOMATIC\">NL80211_AUTHTYPE_AUTOMATIC</a>", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_key_type - Key Type</span>", 
"<span class=\"comment\"> * @NL80211_KEYTYPE_GROUP: Group (broadcast/multicast) key</span>", 
"<span class=\"comment\"> * @NL80211_KEYTYPE_PAIRWISE: Pairwise (unicast/individual) key</span>", 
"<span class=\"comment\"> * @NL80211_KEYTYPE_PEERKEY: PeerKey (DLS)</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_key_type\">nl80211_key_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEYTYPE_GROUP\">NL80211_KEYTYPE_GROUP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEYTYPE_PAIRWISE\">NL80211_KEYTYPE_PAIRWISE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEYTYPE_PEERKEY\">NL80211_KEYTYPE_PEERKEY</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_mfp - Management frame protection state</span>", 
"<span class=\"comment\"> * @NL80211_MFP_NO: Management frame protection not used</span>", 
"<span class=\"comment\"> * @NL80211_MFP_REQUIRED: Management frame protection required</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_mfp\">nl80211_mfp</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MFP_NO\">NL80211_MFP_NO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_MFP_REQUIRED\">NL80211_MFP_REQUIRED</a>,", 
"};", 
"", 
"enum <a class=\"id\" href=\"#nl80211_wpa_versions\">nl80211_wpa_versions</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_WPA_VERSION_1\">NL80211_WPA_VERSION_1</a> = 1 << 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_WPA_VERSION_2\">NL80211_WPA_VERSION_2</a> = 1 << 1,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_key_attributes - key attributes</span>", 
"<span class=\"comment\"> * @__NL80211_KEY_INVALID: invalid</span>", 
"<span class=\"comment\"> * @NL80211_KEY_DATA: (temporal) key data; for TKIP this consists of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>16 bytes encryption key followed by 8 bytes each for TX and RX MIC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>keys</span>", 
"<span class=\"comment\"> * @NL80211_KEY_IDX: key ID (u8, 0-3)</span>", 
"<span class=\"comment\"> * @NL80211_KEY_CIPHER: key cipher suite (u32, as defined by IEEE 802.11</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>section 7.3.2.25.1, e.g. 0x000FAC04)</span>", 
"<span class=\"comment\"> * @NL80211_KEY_SEQ: transmit key sequence number (IV/PN) for TKIP and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>CCMP keys, each six bytes in little endian</span>", 
"<span class=\"comment\"> * @NL80211_KEY_DEFAULT: flag indicating default key</span>", 
"<span class=\"comment\"> * @NL80211_KEY_DEFAULT_MGMT: flag indicating default management key</span>", 
"<span class=\"comment\"> * @__NL80211_KEY_AFTER_LAST: internal</span>", 
"<span class=\"comment\"> * @NL80211_KEY_MAX: highest key attribute</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_key_attributes\">nl80211_key_attributes</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_KEY_INVALID\">__NL80211_KEY_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEY_DATA\">NL80211_KEY_DATA</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEY_IDX\">NL80211_KEY_IDX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEY_CIPHER\">NL80211_KEY_CIPHER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEY_SEQ\">NL80211_KEY_SEQ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEY_DEFAULT\">NL80211_KEY_DEFAULT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEY_DEFAULT_MGMT\">NL80211_KEY_DEFAULT_MGMT</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_KEY_AFTER_LAST\">__NL80211_KEY_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_KEY_MAX\">NL80211_KEY_MAX</a> = <a class=\"id\" href=\"#__NL80211_KEY_AFTER_LAST\">__NL80211_KEY_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_tx_rate_attributes - TX rate set attributes</span>", 
"<span class=\"comment\"> * @__NL80211_TXRATE_INVALID: invalid</span>", 
"<span class=\"comment\"> * @NL80211_TXRATE_LEGACY: Legacy (non-MCS) rates allowed for TX rate selection</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in an array of rates as defined in IEEE 802.11 7.3.2.2 (u8 values with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1 = 500 kbps) but without the IE length restriction (at most</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>%NL80211_MAX_SUPP_RATES in a single array).</span>", 
"<span class=\"comment\"> * @__NL80211_TXRATE_AFTER_LAST: internal</span>", 
"<span class=\"comment\"> * @NL80211_TXRATE_MAX: highest TX rate attribute</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_tx_rate_attributes\">nl80211_tx_rate_attributes</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_TXRATE_INVALID\">__NL80211_TXRATE_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXRATE_LEGACY\">NL80211_TXRATE_LEGACY</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_TXRATE_AFTER_LAST\">__NL80211_TXRATE_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TXRATE_MAX\">NL80211_TXRATE_MAX</a> = <a class=\"id\" href=\"#__NL80211_TXRATE_AFTER_LAST\">__NL80211_TXRATE_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_band - Frequency band</span>", 
"<span class=\"comment\"> * @NL80211_BAND_2GHZ - 2.4 GHz ISM band</span>", 
"<span class=\"comment\"> * @NL80211_BAND_5GHZ - around 5 GHz band (4.9 - 5.7 GHz)</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_band\">nl80211_band</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BAND_2GHZ\">NL80211_BAND_2GHZ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_BAND_5GHZ\">NL80211_BAND_5GHZ</a>,", 
"};", 
"", 
"enum <a class=\"id\" href=\"#nl80211_ps_state\">nl80211_ps_state</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_PS_DISABLED\">NL80211_PS_DISABLED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_PS_ENABLED\">NL80211_PS_ENABLED</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_attr_cqm - connection quality monitor attributes</span>", 
"<span class=\"comment\"> * @__NL80211_ATTR_CQM_INVALID: invalid</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_CQM_RSSI_THOLD: RSSI threshold in dBm. This value specifies</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the threshold for the RSSI level at which an event will be sent. Zero</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to disable.</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_CQM_RSSI_HYST: RSSI hysteresis in dBm. This value specifies</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the minimum amount the RSSI level must change after an event before a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>new event may be issued (to reduce effects of RSSI oscillation).</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_CQM_RSSI_THRESHOLD_EVENT: RSSI threshold event</span>", 
"<span class=\"comment\"> * @__NL80211_ATTR_CQM_AFTER_LAST: internal</span>", 
"<span class=\"comment\"> * @NL80211_ATTR_CQM_MAX: highest key attribute</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_attr_cqm\">nl80211_attr_cqm</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_ATTR_CQM_INVALID\">__NL80211_ATTR_CQM_INVALID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_CQM_RSSI_THOLD\">NL80211_ATTR_CQM_RSSI_THOLD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_CQM_RSSI_HYST\">NL80211_ATTR_CQM_RSSI_HYST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_CQM_RSSI_THRESHOLD_EVENT\">NL80211_ATTR_CQM_RSSI_THRESHOLD_EVENT</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__NL80211_ATTR_CQM_AFTER_LAST\">__NL80211_ATTR_CQM_AFTER_LAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_ATTR_CQM_MAX\">NL80211_ATTR_CQM_MAX</a> = <a class=\"id\" href=\"#__NL80211_ATTR_CQM_AFTER_LAST\">__NL80211_ATTR_CQM_AFTER_LAST</a> - 1", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_cqm_rssi_threshold_event - RSSI threshold event</span>", 
"<span class=\"comment\"> * @NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW - The RSSI level is lower than the</span>", 
"<span class=\"comment\"> *      configured threshold</span>", 
"<span class=\"comment\"> * @NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH - The RSSI is higher than the</span>", 
"<span class=\"comment\"> *      configured threshold</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_cqm_rssi_threshold_event\">nl80211_cqm_rssi_threshold_event</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW\">NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH\">NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH</a>,", 
"};", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum nl80211_tx_power_setting - TX power adjustment</span>", 
"<span class=\"comment\"> * @NL80211_TX_POWER_AUTOMATIC: automatically determine transmit power</span>", 
"<span class=\"comment\"> * @NL80211_TX_POWER_LIMITED: limit TX power by the mBm parameter</span>", 
"<span class=\"comment\"> * @NL80211_TX_POWER_FIXED: fix TX power to the mBm parameter</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#nl80211_tx_power_setting\">nl80211_tx_power_setting</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TX_POWER_AUTOMATIC\">NL80211_TX_POWER_AUTOMATIC</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TX_POWER_LIMITED\">NL80211_TX_POWER_LIMITED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NL80211_TX_POWER_FIXED\">NL80211_TX_POWER_FIXED</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __LINUX_NL80211_H */</span>", 
];
xr_frag_insert('l/bd/05d297dc432fa967ef490ad85b06b5bcc5b2df.xr', __xr_tmp);
