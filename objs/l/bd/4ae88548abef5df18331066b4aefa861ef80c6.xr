var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  acpi_numa.c - ACPI NUMA support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2002 Takayoshi Kochi &lt;t-kochi@bq.jp.nec.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> *  (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> *  along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#numa\">numa</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_bus\">acpi_bus</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"ACPI: \"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_NUMA\">ACPI_NUMA</a><span class=\"ts\"/>0x80000000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_NUMA\">ACPI_NUMA</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"numa\");", 
"", 
"static <a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> <a class=\"id\" href=\"#nodes_found_map\">nodes_found_map</a> = <a class=\"id\" href=\"#NODE_MASK_NONE\">NODE_MASK_NONE</a>;", 
"", 
"<span class=\"comment\">/* maps to convert between proximity domain and logical node ID */</span>", 
"static int <a class=\"id\" href=\"#pxm_to_node_map\">pxm_to_node_map</a>[<a class=\"id\" href=\"#MAX_PXM_DOMAINS\">MAX_PXM_DOMAINS</a>]", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= { [0 ... <a class=\"id\" href=\"#MAX_PXM_DOMAINS\">MAX_PXM_DOMAINS</a> - 1] = <a class=\"id\" href=\"#NUMA_NO_NODE\">NUMA_NO_NODE</a> };", 
"static int <a class=\"id\" href=\"#node_to_pxm_map\">node_to_pxm_map</a>[<a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a>]", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= { [0 ... <a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a> - 1] = <a class=\"id\" href=\"#PXM_INVAL\">PXM_INVAL</a> };", 
"", 
"int <a class=\"id\" href=\"#pxm_to_node\">pxm_to_node</a>(int <a class=\"id\" href=\"#pxm\">pxm</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pxm\">pxm</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NUMA_NO_NODE\">NUMA_NO_NODE</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pxm_to_node_map\">pxm_to_node_map</a>[<a class=\"id\" href=\"#pxm\">pxm</a>];", 
"}", 
"", 
"int <a class=\"id\" href=\"#node_to_pxm\">node_to_pxm</a>(int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PXM_INVAL\">PXM_INVAL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#node_to_pxm_map\">node_to_pxm_map</a>[<a class=\"id\" href=\"#node\">node</a>];", 
"}", 
"", 
"void <a class=\"id\" href=\"#__acpi_map_pxm_to_node\">__acpi_map_pxm_to_node</a>(int <a class=\"id\" href=\"#pxm\">pxm</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pxm_to_node_map\">pxm_to_node_map</a>[<a class=\"id\" href=\"#pxm\">pxm</a>] == <a class=\"id\" href=\"#NUMA_NO_NODE\">NUMA_NO_NODE</a> || <a class=\"id\" href=\"#node\">node</a> &lt; <a class=\"id\" href=\"#pxm_to_node_map\">pxm_to_node_map</a>[<a class=\"id\" href=\"#pxm\">pxm</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pxm_to_node_map\">pxm_to_node_map</a>[<a class=\"id\" href=\"#pxm\">pxm</a>] = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node_to_pxm_map\">node_to_pxm_map</a>[<a class=\"id\" href=\"#node\">node</a>] == <a class=\"id\" href=\"#PXM_INVAL\">PXM_INVAL</a> || <a class=\"id\" href=\"#pxm\">pxm</a> &lt; <a class=\"id\" href=\"#node_to_pxm_map\">node_to_pxm_map</a>[<a class=\"id\" href=\"#node\">node</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_to_pxm_map\">node_to_pxm_map</a>[<a class=\"id\" href=\"#node\">node</a>] = <a class=\"id\" href=\"#pxm\">pxm</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_map_pxm_to_node\">acpi_map_pxm_to_node</a>(int <a class=\"id\" href=\"#pxm\">pxm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#pxm_to_node_map\">pxm_to_node_map</a>[<a class=\"id\" href=\"#pxm\">pxm</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nodes_weight\">nodes_weight</a>(<a class=\"id\" href=\"#nodes_found_map\">nodes_found_map</a>) >= <a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NUMA_NO_NODE\">NUMA_NO_NODE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#first_unset_node\">first_unset_node</a>(<a class=\"id\" href=\"#nodes_found_map\">nodes_found_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__acpi_map_pxm_to_node\">__acpi_map_pxm_to_node</a>(<a class=\"id\" href=\"#pxm\">pxm</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_set\">node_set</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#nodes_found_map\">nodes_found_map</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#node\">node</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_table_print_srat_entry\">acpi_table_print_srat_entry</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> *<a class=\"id\" href=\"#header\">header</a>)", 
"{", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_NAME\">ACPI_FUNCTION_NAME</a>(\"acpi_table_print_srat_entry\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#header\">header</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_SRAT_TYPE_CPU_AFFINITY\">ACPI_SRAT_TYPE_CPU_AFFINITY</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_DEBUG_OUTPUT\">ACPI_DEBUG_OUTPUT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_srat_cpu_affinity\">acpi_srat_cpu_affinity</a> *<a class=\"id\" href=\"#p\">p</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (struct <a class=\"id\" href=\"#acpi_srat_cpu_affinity\">acpi_srat_cpu_affinity</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"SRAT Processor (id[0x%02x] eid[0x%02x]) in proximity domain %d %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#apic_id\">apic_id</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#local_sapic_eid\">local_sapic_eid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#proximity_domain_lo\">proximity_domain_lo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_SRAT_CPU_ENABLED\">ACPI_SRAT_CPU_ENABLED</a>)?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"enabled\" : \"disabled\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ACPI_DEBUG_OUTPUT */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_SRAT_TYPE_MEMORY_AFFINITY\">ACPI_SRAT_TYPE_MEMORY_AFFINITY</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_DEBUG_OUTPUT\">ACPI_DEBUG_OUTPUT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_srat_mem_affinity\">acpi_srat_mem_affinity</a> *<a class=\"id\" href=\"#p\">p</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (struct <a class=\"id\" href=\"#acpi_srat_mem_affinity\">acpi_srat_mem_affinity</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"SRAT Memory (0x%lx length 0x%lx) in proximity domain %d %s%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (unsigned long)<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#base_address\">base_address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (unsigned long)<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#length\">length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#proximity_domain\">proximity_domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_SRAT_MEM_ENABLED\">ACPI_SRAT_MEM_ENABLED</a>)?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"enabled\" : \"disabled\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_SRAT_MEM_HOT_PLUGGABLE\">ACPI_SRAT_MEM_HOT_PLUGGABLE</a>)?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \" hot-pluggable\" : \"\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ACPI_DEBUG_OUTPUT */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_SRAT_TYPE_X2APIC_CPU_AFFINITY\">ACPI_SRAT_TYPE_X2APIC_CPU_AFFINITY</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_DEBUG_OUTPUT\">ACPI_DEBUG_OUTPUT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_srat_x2apic_cpu_affinity\">acpi_srat_x2apic_cpu_affinity</a> *<a class=\"id\" href=\"#p\">p</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (struct <a class=\"id\" href=\"#acpi_srat_x2apic_cpu_affinity\">acpi_srat_x2apic_cpu_affinity</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"SRAT Processor (x2apicid[0x%08x]) in\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \" proximity domain %d %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#apic_id\">apic_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#proximity_domain\">proximity_domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_SRAT_CPU_ENABLED\">ACPI_SRAT_CPU_ENABLED</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"enabled\" : \"disabled\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ACPI_DEBUG_OUTPUT */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Found unsupported SRAT entry (type = 0x%x)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A lot of BIOS fill in 10 (= no distance) everywhere. This messes</span>", 
"<span class=\"comment\"> * up the NUMA heuristics which wants the local node to have a smaller</span>", 
"<span class=\"comment\"> * distance than the others.</span>", 
"<span class=\"comment\"> * Do some quick checks here and only use the SLIT if it passes.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#slit_valid\">slit_valid</a>(struct <a class=\"id\" href=\"#acpi_table_slit\">acpi_table_slit</a> *<a class=\"id\" href=\"#slit\">slit</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#slit\">slit</a>-><a class=\"id\" href=\"#locality_count\">locality_count</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#d\">d</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#d\">d</a>; <a class=\"id\" href=\"#j\">j</a>++)  {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#slit\">slit</a>-><a class=\"id\" href=\"#entry\">entry</a>[<a class=\"id\" href=\"#d\">d</a>*<a class=\"id\" href=\"#i\">i</a> + <a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#j\">j</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> != <a class=\"id\" href=\"#LOCAL_DISTANCE\">LOCAL_DISTANCE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#val\">val</a> <= <a class=\"id\" href=\"#LOCAL_DISTANCE\">LOCAL_DISTANCE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_parse_slit\">acpi_parse_slit</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_slit\">acpi_table_slit</a> *<a class=\"id\" href=\"#slit\">slit</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slit\">slit</a> = (struct <a class=\"id\" href=\"#acpi_table_slit\">acpi_table_slit</a> *)<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#slit_valid\">slit_valid</a>(<a class=\"id\" href=\"#slit\">slit</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ACPI: SLIT table looks invalid. Not used.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_numa_slit_init\">acpi_numa_slit_init</a>(<a class=\"id\" href=\"#slit\">slit</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#weak\">weak</a>))", 
"<a class=\"id\" href=\"#acpi_numa_x2apic_affinity_init\">acpi_numa_x2apic_affinity_init</a>(struct <a class=\"id\" href=\"#acpi_srat_x2apic_cpu_affinity\">acpi_srat_x2apic_cpu_affinity</a> *<a class=\"id\" href=\"#pa\">pa</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/>       \"Found unsupported x2apic [0x%08x] SRAT entry\\n\", <a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#apic_id\">apic_id</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_x2apic_affinity\">acpi_parse_x2apic_affinity</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_srat_x2apic_cpu_affinity\">acpi_srat_x2apic_cpu_affinity</a> *<a class=\"id\" href=\"#processor_affinity\">processor_affinity</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor_affinity\">processor_affinity</a> = (struct <a class=\"id\" href=\"#acpi_srat_x2apic_cpu_affinity\">acpi_srat_x2apic_cpu_affinity</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#processor_affinity\">processor_affinity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_srat_entry\">acpi_table_print_srat_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* let architecture-dependent part to do it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_numa_x2apic_affinity_init\">acpi_numa_x2apic_affinity_init</a>(<a class=\"id\" href=\"#processor_affinity\">processor_affinity</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_processor_affinity\">acpi_parse_processor_affinity</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_srat_cpu_affinity\">acpi_srat_cpu_affinity</a> *<a class=\"id\" href=\"#processor_affinity\">processor_affinity</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor_affinity\">processor_affinity</a> = (struct <a class=\"id\" href=\"#acpi_srat_cpu_affinity\">acpi_srat_cpu_affinity</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#processor_affinity\">processor_affinity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_srat_entry\">acpi_table_print_srat_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* let architecture-dependent part to do it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_numa_processor_affinity_init\">acpi_numa_processor_affinity_init</a>(<a class=\"id\" href=\"#processor_affinity\">processor_affinity</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_parse_memory_affinity\">acpi_parse_memory_affinity</a>(struct <a class=\"id\" href=\"#acpi_subtable_header\">acpi_subtable_header</a> * <a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_srat_mem_affinity\">acpi_srat_mem_affinity</a> *<a class=\"id\" href=\"#memory_affinity\">memory_affinity</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memory_affinity\">memory_affinity</a> = (struct <a class=\"id\" href=\"#acpi_srat_mem_affinity\">acpi_srat_mem_affinity</a> *)<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#memory_affinity\">memory_affinity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_print_srat_entry\">acpi_table_print_srat_entry</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* let architecture-dependent part to do it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_numa_memory_affinity_init\">acpi_numa_memory_affinity_init</a>(<a class=\"id\" href=\"#memory_affinity\">memory_affinity</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_parse_srat\">acpi_parse_srat</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Real work done in acpi_table_parse_srat below. */</span>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_table_parse_srat\">acpi_table_parse_srat</a>(enum <a class=\"id\" href=\"#acpi_srat_type\">acpi_srat_type</a> <a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_table_entry_handler\">acpi_table_entry_handler</a> <a class=\"id\" href=\"#handler\">handler</a>, unsigned int <a class=\"id\" href=\"#max_entries\">max_entries</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_table_parse_entries\">acpi_table_parse_entries</a>(<a class=\"id\" href=\"#ACPI_SIG_SRAT\">ACPI_SIG_SRAT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#acpi_table_srat\">acpi_table_srat</a>), <a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#max_entries\">max_entries</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_numa_init\">acpi_numa_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SRAT: Static Resource Affinity Table */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_table_parse\">acpi_table_parse</a>(<a class=\"id\" href=\"#ACPI_SIG_SRAT\">ACPI_SIG_SRAT</a>, <a class=\"id\" href=\"#acpi_parse_srat\">acpi_parse_srat</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_parse_srat\">acpi_table_parse_srat</a>(<a class=\"id\" href=\"#ACPI_SRAT_TYPE_X2APIC_CPU_AFFINITY\">ACPI_SRAT_TYPE_X2APIC_CPU_AFFINITY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#acpi_parse_x2apic_affinity\">acpi_parse_x2apic_affinity</a>, <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_parse_srat\">acpi_table_parse_srat</a>(<a class=\"id\" href=\"#ACPI_SRAT_TYPE_CPU_AFFINITY\">ACPI_SRAT_TYPE_CPU_AFFINITY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#acpi_parse_processor_affinity\">acpi_parse_processor_affinity</a>, <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#acpi_table_parse_srat\">acpi_table_parse_srat</a>(<a class=\"id\" href=\"#ACPI_SRAT_TYPE_MEMORY_AFFINITY\">ACPI_SRAT_TYPE_MEMORY_AFFINITY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_parse_memory_affinity\">acpi_parse_memory_affinity</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NR_NODE_MEMBLKS\">NR_NODE_MEMBLKS</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SLIT: System Locality Information Table */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_parse\">acpi_table_parse</a>(<a class=\"id\" href=\"#ACPI_SIG_SLIT\">ACPI_SIG_SLIT</a>, <a class=\"id\" href=\"#acpi_parse_slit\">acpi_parse_slit</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_numa_arch_fixup\">acpi_numa_arch_fixup</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_get_pxm\">acpi_get_pxm</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#pxm\">pxm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#phandle\">phandle</a> = <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#phandle\">phandle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_integer\">acpi_evaluate_integer</a>(<a class=\"id\" href=\"#handle\">handle</a>, \"_PXM\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#pxm\">pxm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pxm\">pxm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_parent\">acpi_get_parent</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#phandle\">phandle</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>));", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_get_node\">acpi_get_node</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pxm\">pxm</a>, <a class=\"id\" href=\"#node\">node</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pxm\">pxm</a> = <a class=\"id\" href=\"#acpi_get_pxm\">acpi_get_pxm</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pxm\">pxm</a> >= 0 && <a class=\"id\" href=\"#pxm\">pxm</a> &lt; <a class=\"id\" href=\"#MAX_PXM_DOMAINS\">MAX_PXM_DOMAINS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#acpi_map_pxm_to_node\">acpi_map_pxm_to_node</a>(<a class=\"id\" href=\"#pxm\">pxm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#node\">node</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_get_node\">acpi_get_node</a>);", 
];
xr_frag_insert('l/bd/4ae88548abef5df18331066b4aefa861ef80c6.xr', __xr_tmp);
