var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#topology\">topology</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pci_x86\">pci_x86</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pci\">pci</a>-<a class=\"id\" href=\"#direct\">direct</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"bus_numa.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This discovers the pcibus &lt;-&gt; node mapping on AMD K8.</span>", 
"<span class=\"comment\"> * also get peer root bus resource for io,mmio</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#pci_hostbridge_probe\">pci_hostbridge_probe</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#slot\">slot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#vendor\">vendor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#device\">device</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#pci_hostbridge_probe\">pci_hostbridge_probe</a> <a class=\"id\" href=\"#pci_probes\">pci_probes</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"<span class=\"ts\"/>{ 0, 0x18, <a class=\"id\" href=\"#PCI_VENDOR_ID_AMD\">PCI_VENDOR_ID_AMD</a>, 0x1100 },", 
"<span class=\"ts\"/>{ 0, 0x18, <a class=\"id\" href=\"#PCI_VENDOR_ID_AMD\">PCI_VENDOR_ID_AMD</a>, 0x1200 },", 
"<span class=\"ts\"/>{ 0xff, 0, <a class=\"id\" href=\"#PCI_VENDOR_ID_AMD\">PCI_VENDOR_ID_AMD</a>, 0x1200 },", 
"<span class=\"ts\"/>{ 0, 0x18, <a class=\"id\" href=\"#PCI_VENDOR_ID_AMD\">PCI_VENDOR_ID_AMD</a>, 0x1300 },", 
"};", 
"", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#fam10h_mmconf_start\">fam10h_mmconf_start</a>;", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a>;", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#get_pci_mmcfg_amd_fam10h_range\">get_pci_mmcfg_amd_fam10h_range</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#msr\">msr</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#segn_busn_bits\">segn_busn_bits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* assume all cpus from fam10h have mmconf */</span>", 
"        if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> &lt; 0x10)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#MSR_FAM10H_MMIO_CONF_BASE\">MSR_FAM10H_MMIO_CONF_BASE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#msr\">msr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* mmconfig is not enable */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#msr\">msr</a> &amp; <a class=\"id\" href=\"#FAM10H_MMIO_CONF_ENABLE\">FAM10H_MMIO_CONF_ENABLE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#msr\">msr</a> &amp; (<a class=\"id\" href=\"#FAM10H_MMIO_CONF_BASE_MASK\">FAM10H_MMIO_CONF_BASE_MASK</a><<<a class=\"id\" href=\"#FAM10H_MMIO_CONF_BASE_SHIFT\">FAM10H_MMIO_CONF_BASE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segn_busn_bits\">segn_busn_bits</a> = (<a class=\"id\" href=\"#msr\">msr</a> >> <a class=\"id\" href=\"#FAM10H_MMIO_CONF_BUSRANGE_SHIFT\">FAM10H_MMIO_CONF_BUSRANGE_SHIFT</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#FAM10H_MMIO_CONF_BUSRANGE_MASK\">FAM10H_MMIO_CONF_BUSRANGE_MASK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fam10h_mmconf_start\">fam10h_mmconf_start</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a> = <a class=\"id\" href=\"#base\">base</a> + (1ULL<<(<a class=\"id\" href=\"#segn_busn_bits\">segn_busn_bits</a> + 20)) - 1;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a> 16", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * early_fill_mp_bus_to_node()</span>", 
"<span class=\"comment\"> * called before pcibios_scan_root and pci_scan_bus</span>", 
"<span class=\"comment\"> * fills the mp_bus_to_cpumask array based according to the LDT Bus Number</span>", 
"<span class=\"comment\"> * Registers found in the K8 northbridge</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_fill_mp_bus_info\">early_fill_mp_bus_info</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#slot\">slot</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#def_node\">def_node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#def_link\">def_link</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_root_info\">pci_root_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#range\">range</a> <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#found\">found</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#early_pci_allowed\">early_pci_allowed</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#pci_probes\">pci_probes</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#vendor\">vendor</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#pci_probes\">pci_probes</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#pci_probes\">pci_probes</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#slot\">slot</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 0, <a class=\"id\" href=\"#PCI_VENDOR_ID\">PCI_VENDOR_ID</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vendor\">vendor</a> = <a class=\"id\" href=\"#id\">id</a> &amp; 0xffff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a> = (<a class=\"id\" href=\"#id\">id</a>>>16) &amp; 0xffff;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_probes\">pci_probes</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#vendor\">vendor</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pci_probes\">pci_probes</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#device\">device</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_root_num\">pci_root_num</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#min_bus\">min_bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#max_bus\">max_bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 1, 0xe0 + (<a class=\"id\" href=\"#i\">i</a> << 2));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if that register is enabled for bus range */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#reg\">reg</a> &amp; 7) != 3)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_bus\">min_bus</a> = (<a class=\"id\" href=\"#reg\">reg</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_bus\">max_bus</a> = (<a class=\"id\" href=\"#reg\">reg</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = (<a class=\"id\" href=\"#reg\">reg</a> >> 4) &amp; 0x07;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = <a class=\"id\" href=\"#min_bus\">min_bus</a>; <a class=\"id\" href=\"#j\">j</a> <= <a class=\"id\" href=\"#max_bus\">max_bus</a>; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_mp_bus_to_node\">set_mp_bus_to_node</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = (<a class=\"id\" href=\"#reg\">reg</a> >> 8) &amp; 0x03;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#bus_min\">bus_min</a> = <a class=\"id\" href=\"#min_bus\">min_bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#bus_max\">bus_max</a> = <a class=\"id\" href=\"#max_bus\">max_bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#name\">name</a>, \"PCI Bus #%02x\", <a class=\"id\" href=\"#min_bus\">min_bus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get the default node and link for left over res */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 0, 0x60);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def_node\">def_node</a> = (<a class=\"id\" href=\"#reg\">reg</a> >> 8) &amp; 0x07;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 0, 0x64);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def_link\">def_link</a> = (<a class=\"id\" href=\"#reg\">reg</a> >> 8) &amp; 0x03;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#range\">range</a>, 0, sizeof(<a class=\"id\" href=\"#range\">range</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_range\">add_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, 0, 0, 0xffff + 1);", 
"<span class=\"ts\"/><span class=\"comment\">/* io port resource */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 1, 0xc0 + (<a class=\"id\" href=\"#i\">i</a> << 3));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg\">reg</a> &amp; 3))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#reg\">reg</a> &amp; 0xfff000;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 1, 0xc4 + (<a class=\"id\" href=\"#i\">i</a> << 3));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#reg\">reg</a> &amp; 0x07;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = (<a class=\"id\" href=\"#reg\">reg</a> >> 4) &amp; 0x03;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#reg\">reg</a> &amp; 0xfff000) | 0xfff;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* find the position */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#node\">node</a> && <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#link\">link</a> == <a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> == <a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue; <span class=\"comment\">/* not found */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"node %d link %d: io port [%llx, %llx]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* kernel only handle 16 bit only */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> &gt; 0xffff)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = 0xffff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_res\">update_res</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subtract_range\">subtract_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a> + 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* add left over io port range to def node/link, [0, 0xffff] */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* find the position */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#def_node\">def_node</a> && <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#link\">link</a> == <a class=\"id\" href=\"#def_link\">def_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_res\">update_res</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a> - 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#range\">range</a>, 0, sizeof(<a class=\"id\" href=\"#range\">range</a>));", 
"<span class=\"ts\"/><span class=\"comment\">/* 0xfd00000000-0xffffffffff for HT */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#cap_resource\">cap_resource</a>((0xfdULL<<32) - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_range\">add_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, 0, 0, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* need to take out [0, TOM) for RAM*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#MSR_K8_TOP_MEM1\">MSR_K8_TOP_MEM1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#val\">val</a> &amp; 0xffffff800000ULL);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"TOM: %016llx aka %lldM\\n\", <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#end\">end</a>>>20);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> &lt; (1ULL<<32))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subtract_range\">subtract_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, 0, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get mmconfig */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_pci_mmcfg_amd_fam10h_range\">get_pci_mmcfg_amd_fam10h_range</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* need to take out mmconf range */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"Fam 10h mmconf [%llx, %llx]\\n\", <a class=\"id\" href=\"#fam10h_mmconf_start\">fam10h_mmconf_start</a>, <a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subtract_range\">subtract_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, <a class=\"id\" href=\"#fam10h_mmconf_start\">fam10h_mmconf_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a> + 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* mmio resource */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 1, 0x80 + (<a class=\"id\" href=\"#i\">i</a> << 3));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg\">reg</a> &amp; 3))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#reg\">reg</a> &amp; 0xffffff00; <span class=\"comment\">/* 39:16 on 31:8*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> <<= 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 1, 0x84 + (<a class=\"id\" href=\"#i\">i</a> << 3));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#reg\">reg</a> &amp; 0x07;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = (<a class=\"id\" href=\"#reg\">reg</a> >> 4) &amp; 0x03;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#reg\">reg</a> &amp; 0xffffff00);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> <<= 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> |= 0xffff;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* find the position */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#node\">node</a> && <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#link\">link</a> == <a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> == <a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue; <span class=\"comment\">/* not found */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"node %d link %d: mmio [%llx, %llx]\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * some sick allocation would have range overlap with fam10h</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * mmconf range, so need to update start and end.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#changed\">changed</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#endx\">endx</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> >= <a class=\"id\" href=\"#fam10h_mmconf_start\">fam10h_mmconf_start</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#start\">start</a> <= <a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#changed\">changed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> >= <a class=\"id\" href=\"#fam10h_mmconf_start\">fam10h_mmconf_start</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#end\">end</a> <= <a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#fam10h_mmconf_start\">fam10h_mmconf_start</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#changed\">changed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> &lt; <a class=\"id\" href=\"#fam10h_mmconf_start\">fam10h_mmconf_start</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#end\">end</a> &gt; <a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we got a hole */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#endx\">endx</a> = <a class=\"id\" href=\"#fam10h_mmconf_start\">fam10h_mmconf_start</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_res\">update_res</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#endx\">endx</a>, <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subtract_range\">subtract_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#endx\">endx</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \" ==> [%llx, %llx]\", <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#endx\">endx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#fam10h_mmconf_end\">fam10h_mmconf_end</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#changed\">changed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#changed\">changed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> <= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \" %s [%llx, %llx]\", <a class=\"id\" href=\"#endx\">endx</a> ? \"and\" : \"==>\", <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"%s\\n\", <a class=\"id\" href=\"#endx\">endx</a>?\"\":\" ==> none\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_res\">update_res</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#cap_resource\">cap_resource</a>(<a class=\"id\" href=\"#start\">start</a>), <a class=\"id\" href=\"#cap_resource\">cap_resource</a>(<a class=\"id\" href=\"#end\">end</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subtract_range\">subtract_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* need to take out [4G, TOM2) for RAM*/</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* SYS_CFG */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#MSR_K8_SYSCFG\">MSR_K8_SYSCFG</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* TOP_MEM2 is enabled? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; (1<<21)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TOP_MEM2 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#MSR_K8_TOP_MEM2\">MSR_K8_TOP_MEM2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#val\">val</a> &amp; 0xffffff800000ULL);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"TOM2: %016llx aka %lldM\\n\", <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#end\">end</a>>>20);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subtract_range\">subtract_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, 1ULL<<32, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * add left over mmio range to def node/link ?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that is tricky, just record range in from start_min to 4G</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#def_node\">def_node</a> && <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#link\">link</a> == <a class=\"id\" href=\"#def_link\">def_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_res\">update_res</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#cap_resource\">cap_resource</a>(<a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#cap_resource\">cap_resource</a>(<a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a> - 1),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pci_root_num\">pci_root_num</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#res_num\">res_num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#busnum\">busnum</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#pci_root_info\">pci_root_info</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res_num\">res_num</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#res_num\">res_num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#busnum\">busnum</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#bus_min\">bus_min</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"bus: [%02x, %02x] on node %x link %x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#bus_min\">bus_min</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#bus_max\">bus_max</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#res_num\">res_num</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#res\">res</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"bus: %02x index %x %pR\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#busnum\">busnum</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENABLE_CF8_EXT_CFG\">ENABLE_CF8_EXT_CFG</a>      (1ULL << 46)", 
"", 
"static void <a class=\"id\" href=\"#enable_pci_io_ecs\">enable_pci_io_ecs</a>(void *<a class=\"id\" href=\"#unused\">unused</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#reg\">reg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_AMD64_NB_CFG\">MSR_AMD64_NB_CFG</a>, <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg\">reg</a> &amp; <a class=\"id\" href=\"#ENABLE_CF8_EXT_CFG\">ENABLE_CF8_EXT_CFG</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> |= <a class=\"id\" href=\"#ENABLE_CF8_EXT_CFG\">ENABLE_CF8_EXT_CFG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#MSR_AMD64_NB_CFG\">MSR_AMD64_NB_CFG</a>, <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#amd_cpu_notify\">amd_cpu_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = (long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_ONLINE_FROZEN\">CPU_ONLINE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_call_function_single\">smp_call_function_single</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#enable_pci_io_ecs\">enable_pci_io_ecs</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a> <a class=\"id\" href=\"#amd_cpu_notifier\">amd_cpu_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a><span class=\"ts\"/>= <a class=\"id\" href=\"#amd_cpu_notify\">amd_cpu_notify</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pci_io_ecs_init\">pci_io_ecs_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* assume all cpus from fam10h have IO ECS */</span>", 
"        if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> &lt; 0x10)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(&amp;<a class=\"id\" href=\"#amd_cpu_notifier\">amd_cpu_notifier</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_cpu_notify\">amd_cpu_notify</a>(&amp;<a class=\"id\" href=\"#amd_cpu_notifier\">amd_cpu_notifier</a>, (unsigned long)<a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (void *)(long)<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_probe\">pci_probe</a> |= <a class=\"id\" href=\"#PCI_HAS_IO_ECS\">PCI_HAS_IO_ECS</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#amd_postcore_init\">amd_postcore_init</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> != <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_fill_mp_bus_info\">early_fill_mp_bus_info</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_io_ecs_init\">pci_io_ecs_init</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#postcore_initcall\">postcore_initcall</a>(<a class=\"id\" href=\"#amd_postcore_init\">amd_postcore_init</a>);", 
];
xr_frag_insert('l/be/010f501e000c0a1c491ee3863fcea5628a43c8.xr', __xr_tmp);
