var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * core.c - contains all core device and protocol registration functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2002 Adam Belay &lt;ambx1@neo.rr.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pnp\">pnp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"base.h\"", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#pnp_protocols\">pnp_protocols</a>);", 
"<a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#pnp_global\">pnp_global</a>);", 
"<a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#pnp_lock\">pnp_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ACPI or PNPBIOS should tell us about all platform devices, so we can</span>", 
"<span class=\"comment\"> * skip some blind probes.  ISAPNP typically enumerates only plug-in ISA</span>", 
"<span class=\"comment\"> * devices, not built-in things like COM ports.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pnp_platform_devices\">pnp_platform_devices</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pnp_platform_devices\">pnp_platform_devices</a>);", 
"", 
"void *<a class=\"id\" href=\"#pnp_alloc\">pnp_alloc</a>(long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"pnp: Out of Memory\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pnp_protocol_register - adds a pnp protocol to the pnp layer</span>", 
"<span class=\"comment\"> * @protocol: pointer to the corresponding pnp_protocol structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Ex protocols: ISAPNP, PNPBIOS, etc</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pnp_register_protocol\">pnp_register_protocol</a>(struct <a class=\"id\" href=\"#pnp_protocol\">pnp_protocol</a> *<a class=\"id\" href=\"#protocol\">protocol</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nodenum\">nodenum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#devices\">devices</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#cards\">cards</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nodenum\">nodenum</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pnp_lock\">pnp_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* assign the lowest unused number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#pnp_protocols\">pnp_protocols</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_protocol\">pnp_protocol</a> *<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#to_pnp_protocol\">to_pnp_protocol</a>(<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#number\">number</a> == <a class=\"id\" href=\"#nodenum\">nodenum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = &amp;<a class=\"id\" href=\"#pnp_protocols\">pnp_protocols</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nodenum\">nodenum</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#protocol_list\">protocol_list</a>, &amp;<a class=\"id\" href=\"#pnp_protocols\">pnp_protocols</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pnp_lock\">pnp_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#number\">number</a> = <a class=\"id\" href=\"#nodenum\">nodenum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"pnp%d\", <a class=\"id\" href=\"#nodenum\">nodenum</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#device_register\">device_register</a>(&amp;<a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pnp_protocol_unregister - removes a pnp protocol from the pnp layer</span>", 
"<span class=\"comment\"> * @protocol: pointer to the corresponding pnp_protocol structure</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pnp_unregister_protocol\">pnp_unregister_protocol</a>(struct <a class=\"id\" href=\"#pnp_protocol\">pnp_protocol</a> *<a class=\"id\" href=\"#protocol\">protocol</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pnp_lock\">pnp_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#protocol_list\">protocol_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pnp_lock\">pnp_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(&amp;<a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pnp_free_ids\">pnp_free_ids</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_id\">pnp_id</a> *<a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_id\">pnp_id</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#id\">id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#pnp_free_resource\">pnp_free_resource</a>(struct <a class=\"id\" href=\"#pnp_resource\">pnp_resource</a> *<a class=\"id\" href=\"#pnp_res\">pnp_res</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#pnp_res\">pnp_res</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pnp_res\">pnp_res</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#pnp_free_resources\">pnp_free_resources</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_resource\">pnp_resource</a> *<a class=\"id\" href=\"#pnp_res\">pnp_res</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#pnp_res\">pnp_res</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resources\">resources</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_free_resource\">pnp_free_resource</a>(<a class=\"id\" href=\"#pnp_res\">pnp_res</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pnp_release_device\">pnp_release_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dmdev\">dmdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_pnp_dev\">to_pnp_dev</a>(<a class=\"id\" href=\"#dmdev\">dmdev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pnp_free_ids\">pnp_free_ids</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pnp_free_resources\">pnp_free_resources</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pnp_free_options\">pnp_free_options</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#pnp_alloc_dev\">pnp_alloc_dev</a>(struct <a class=\"id\" href=\"#pnp_protocol\">pnp_protocol</a> *<a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#id\">id</a>, char *<a class=\"id\" href=\"#pnpid\">pnpid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_id\">pnp_id</a> *<a class=\"id\" href=\"#dev_id\">dev_id</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resources\">resources</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#options\">options</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#number\">number</a> = <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a> = <a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(24);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#bus\">bus</a> = &amp;<a class=\"id\" href=\"#pnp_bus_type\">pnp_bus_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#dma_mask\">dma_mask</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#coherent_dma_mask\">coherent_dma_mask</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#release\">release</a> = &amp;<a class=\"id\" href=\"#pnp_release_device\">pnp_release_device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%02x:%02x\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#number\">number</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_id\">dev_id</a> = <a class=\"id\" href=\"#pnp_add_id\">pnp_add_id</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pnpid\">pnpid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev_id\">dev_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__pnp_add_device\">__pnp_add_device</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pnp_fixup_device\">pnp_fixup_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#PNP_READY\">PNP_READY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pnp_lock\">pnp_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#global_list\">global_list</a>, &amp;<a class=\"id\" href=\"#pnp_global\">pnp_global</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#protocol_list\">protocol_list</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#devices\">devices</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pnp_lock\">pnp_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#can_wakeup\">can_wakeup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_set_wakeup_capable\">device_set_wakeup_capable</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#can_wakeup\">can_wakeup</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#device_register\">device_register</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * pnp_add_device - adds a pnp device to the pnp layer</span>", 
"<span class=\"comment\"> * @dev: pointer to dev to add</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  adds to driver model, name database, fixups, interface, etc.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pnp_add_device\">pnp_add_device</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[128];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_id\">pnp_id</a> *<a class=\"id\" href=\"#id\">id</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#card\">card</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__pnp_add_device\">__pnp_add_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[0] = '\\0';", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>; <a class=\"id\" href=\"#id\">id</a>; <a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>, \" %s\", <a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pnp_dbg\">pnp_dbg</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%s device, IDs%s (%s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#protocol\">protocol</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#active\">active</a> ? \"active\" : \"disabled\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__pnp_remove_device\">__pnp_remove_device</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pnp_lock\">pnp_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#global_list\">global_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#protocol_list\">protocol_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pnp_lock\">pnp_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pnp_init\">pnp_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bus_register\">bus_register</a>(&amp;<a class=\"id\" href=\"#pnp_bus_type\">pnp_bus_type</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#pnp_init\">pnp_init</a>);", 
"", 
"int <a class=\"id\" href=\"#pnp_debug\">pnp_debug</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PNP_DEBUG_MESSAGES\">CONFIG_PNP_DEBUG_MESSAGES</a>)", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pnp_debug_setup\">pnp_debug_setup</a>(char *<a class=\"id\" href=\"#__unused\">__unused</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pnp_debug\">pnp_debug</a> = 1;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"pnp.debug\", <a class=\"id\" href=\"#pnp_debug_setup\">pnp_debug_setup</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/be/a2cb413e9f04c7014eebcc119d4ef777303114.xr', __xr_tmp);
