var __xr_tmp = [
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JPROBE_ENTRY\">JPROBE_ENTRY</a>(<a class=\"id\" href=\"#handler\">handler</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#handler\">handler</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Function-return probe -</span>", 
"<span class=\"comment\"> * Note:</span>", 
"<span class=\"comment\"> * User needs to provide a handler function, and initialize maxactive.</span>", 
"<span class=\"comment\"> * maxactive - The maximum number of instances of the probed function that</span>", 
"<span class=\"comment\"> * can be active concurrently.</span>", 
"<span class=\"comment\"> * nmissed - tracks the number of times the probed function's return was</span>", 
"<span class=\"comment\"> * ignored, due to maxactive being too low.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kprobe\">kprobe</a> <a class=\"id\" href=\"#kp\">kp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kretprobe_handler_t\">kretprobe_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kretprobe_handler_t\">kretprobe_handler_t</a> <a class=\"id\" href=\"#entry_handler\">entry_handler</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#maxactive\">maxactive</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nmissed\">nmissed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#data_size\">data_size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> <a class=\"id\" href=\"#free_instances\">free_instances</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#lock\">lock</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kretprobe_instance\">kretprobe_instance</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> <a class=\"id\" href=\"#hlist\">hlist</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> *<a class=\"id\" href=\"#rp\">rp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> *<a class=\"id\" href=\"#ret_addr\">ret_addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#data\">data</a>[0];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kretprobe_blackpoint\">kretprobe_blackpoint</a> {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#addr\">addr</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kprobe_blackpoint\">kprobe_blackpoint</a> {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_addr\">start_addr</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#range\">range</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KPROBES\">CONFIG_KPROBES</a>", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *, <a class=\"id\" href=\"#current_kprobe\">current_kprobe</a>);", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(struct <a class=\"id\" href=\"#kprobe_ctlblk\">kprobe_ctlblk</a>, <a class=\"id\" href=\"#kprobe_ctlblk\">kprobe_ctlblk</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For #ifdef avoidance:</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#kprobes_built_in\">kprobes_built_in</a>(void)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KRETPROBES\">CONFIG_KRETPROBES</a>", 
"extern void <a class=\"id\" href=\"#arch_prepare_kretprobe\">arch_prepare_kretprobe</a>(struct <a class=\"id\" href=\"#kretprobe_instance\">kretprobe_instance</a> *<a class=\"id\" href=\"#ri\">ri</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>);", 
"extern int <a class=\"id\" href=\"#arch_trampoline_kprobe\">arch_trampoline_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"#else <span class=\"comment\">/* CONFIG_KRETPROBES */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#arch_prepare_kretprobe\">arch_prepare_kretprobe</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> *<a class=\"id\" href=\"#rp\">rp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#arch_trampoline_kprobe\">arch_trampoline_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_KRETPROBES */</span>", 
"", 
"extern struct <a class=\"id\" href=\"#kretprobe_blackpoint\">kretprobe_blackpoint</a> <a class=\"id\" href=\"#kretprobe_blacklist\">kretprobe_blacklist</a>[];", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kretprobe_assert\">kretprobe_assert</a>(struct <a class=\"id\" href=\"#kretprobe_instance\">kretprobe_instance</a> *<a class=\"id\" href=\"#ri\">ri</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#orig_ret_address\">orig_ret_address</a>, unsigned long <a class=\"id\" href=\"#trampoline_address\">trampoline_address</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#orig_ret_address\">orig_ret_address</a> || (<a class=\"id\" href=\"#orig_ret_address\">orig_ret_address</a> == <a class=\"id\" href=\"#trampoline_address\">trampoline_address</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"kretprobe BUG!: Processing kretprobe %p @ %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ri\">ri</a>-><a class=\"id\" href=\"#rp\">rp</a>, <a class=\"id\" href=\"#ri\">ri</a>-><a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#kp\">kp</a>.<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KPROBES_SANITY_TEST\">CONFIG_KPROBES_SANITY_TEST</a>", 
"extern int <a class=\"id\" href=\"#init_test_probes\">init_test_probes</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#init_test_probes\">init_test_probes</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_KPROBES_SANITY_TEST */</span>", 
"", 
"extern int <a class=\"id\" href=\"#arch_prepare_kprobe\">arch_prepare_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"extern void <a class=\"id\" href=\"#arch_arm_kprobe\">arch_arm_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"extern void <a class=\"id\" href=\"#arch_disarm_kprobe\">arch_disarm_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"extern int <a class=\"id\" href=\"#arch_init_kprobes\">arch_init_kprobes</a>(void);", 
"extern void <a class=\"id\" href=\"#show_registers\">show_registers</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>);", 
"extern <a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> *<a class=\"id\" href=\"#get_insn_slot\">get_insn_slot</a>(void);", 
"extern void <a class=\"id\" href=\"#free_insn_slot\">free_insn_slot</a>(<a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> *<a class=\"id\" href=\"#slot\">slot</a>, int <a class=\"id\" href=\"#dirty\">dirty</a>);", 
"extern void <a class=\"id\" href=\"#kprobes_inc_nmissed_count\">kprobes_inc_nmissed_count</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_OPTPROBES\">CONFIG_OPTPROBES</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Internal structure for direct jump optimized probe</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#optimized_kprobe\">optimized_kprobe</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kprobe\">kprobe</a> <a class=\"id\" href=\"#kp\">kp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;<span class=\"ts\"/><span class=\"comment\">/* list for optimizing queue */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#arch_optimized_insn\">arch_optimized_insn</a> <a class=\"id\" href=\"#optinsn\">optinsn</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Architecture dependent functions for direct jump optimization */</span>", 
"extern int <a class=\"id\" href=\"#arch_prepared_optinsn\">arch_prepared_optinsn</a>(struct <a class=\"id\" href=\"#arch_optimized_insn\">arch_optimized_insn</a> *<a class=\"id\" href=\"#optinsn\">optinsn</a>);", 
"extern int <a class=\"id\" href=\"#arch_check_optimized_kprobe\">arch_check_optimized_kprobe</a>(struct <a class=\"id\" href=\"#optimized_kprobe\">optimized_kprobe</a> *<a class=\"id\" href=\"#op\">op</a>);", 
"extern int <a class=\"id\" href=\"#arch_prepare_optimized_kprobe\">arch_prepare_optimized_kprobe</a>(struct <a class=\"id\" href=\"#optimized_kprobe\">optimized_kprobe</a> *<a class=\"id\" href=\"#op\">op</a>);", 
"extern void <a class=\"id\" href=\"#arch_remove_optimized_kprobe\">arch_remove_optimized_kprobe</a>(struct <a class=\"id\" href=\"#optimized_kprobe\">optimized_kprobe</a> *<a class=\"id\" href=\"#op\">op</a>);", 
"extern int  <a class=\"id\" href=\"#arch_optimize_kprobe\">arch_optimize_kprobe</a>(struct <a class=\"id\" href=\"#optimized_kprobe\">optimized_kprobe</a> *<a class=\"id\" href=\"#op\">op</a>);", 
"extern void <a class=\"id\" href=\"#arch_unoptimize_kprobe\">arch_unoptimize_kprobe</a>(struct <a class=\"id\" href=\"#optimized_kprobe\">optimized_kprobe</a> *<a class=\"id\" href=\"#op\">op</a>);", 
"extern <a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> *<a class=\"id\" href=\"#get_optinsn_slot\">get_optinsn_slot</a>(void);", 
"extern void <a class=\"id\" href=\"#free_optinsn_slot\">free_optinsn_slot</a>(<a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> *<a class=\"id\" href=\"#slot\">slot</a>, int <a class=\"id\" href=\"#dirty\">dirty</a>);", 
"extern int <a class=\"id\" href=\"#arch_within_optimized_kprobe\">arch_within_optimized_kprobe</a>(struct <a class=\"id\" href=\"#optimized_kprobe\">optimized_kprobe</a> *<a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"extern void <a class=\"id\" href=\"#opt_pre_handler\">opt_pre_handler</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"extern int <a class=\"id\" href=\"#sysctl_kprobes_optimization\">sysctl_kprobes_optimization</a>;", 
"extern int <a class=\"id\" href=\"#proc_kprobes_optimization_handler\">proc_kprobes_optimization_handler</a>(struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#write\">write</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_OPTPROBES */</span>", 
"", 
"<span class=\"comment\">/* Get the kprobe at this addr (if any) - called with preemption disabled */</span>", 
"struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#get_kprobe\">get_kprobe</a>(void *<a class=\"id\" href=\"#addr\">addr</a>);", 
"void <a class=\"id\" href=\"#kretprobe_hash_lock\">kretprobe_hash_lock</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> **<a class=\"id\" href=\"#head\">head</a>, unsigned long *<a class=\"id\" href=\"#flags\">flags</a>);", 
"void <a class=\"id\" href=\"#kretprobe_hash_unlock\">kretprobe_hash_unlock</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, unsigned long *<a class=\"id\" href=\"#flags\">flags</a>);", 
"struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> * <a class=\"id\" href=\"#kretprobe_inst_table_head\">kretprobe_inst_table_head</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"comment\">/* kprobe_running() will just return the current_kprobe on this CPU */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#kprobe_running\">kprobe_running</a>(void)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#current_kprobe\">current_kprobe</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#reset_current_kprobe\">reset_current_kprobe</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#current_kprobe\">current_kprobe</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#kprobe_ctlblk\">kprobe_ctlblk</a> *<a class=\"id\" href=\"#get_kprobe_ctlblk\">get_kprobe_ctlblk</a>(void)", 
"{", 
"<span class=\"ts\"/>return (&amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#kprobe_ctlblk\">kprobe_ctlblk</a>));", 
"}", 
"", 
"int <a class=\"id\" href=\"#register_kprobe\">register_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"void <a class=\"id\" href=\"#unregister_kprobe\">unregister_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"int <a class=\"id\" href=\"#register_kprobes\">register_kprobes</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> **<a class=\"id\" href=\"#kps\">kps</a>, int <a class=\"id\" href=\"#num\">num</a>);", 
"void <a class=\"id\" href=\"#unregister_kprobes\">unregister_kprobes</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> **<a class=\"id\" href=\"#kps\">kps</a>, int <a class=\"id\" href=\"#num\">num</a>);", 
"int <a class=\"id\" href=\"#setjmp_pre_handler\">setjmp_pre_handler</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *);", 
"int <a class=\"id\" href=\"#longjmp_break_handler\">longjmp_break_handler</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *);", 
"int <a class=\"id\" href=\"#register_jprobe\">register_jprobe</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"void <a class=\"id\" href=\"#unregister_jprobe\">unregister_jprobe</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"int <a class=\"id\" href=\"#register_jprobes\">register_jprobes</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> **<a class=\"id\" href=\"#jps\">jps</a>, int <a class=\"id\" href=\"#num\">num</a>);", 
"void <a class=\"id\" href=\"#unregister_jprobes\">unregister_jprobes</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> **<a class=\"id\" href=\"#jps\">jps</a>, int <a class=\"id\" href=\"#num\">num</a>);", 
"void <a class=\"id\" href=\"#jprobe_return\">jprobe_return</a>(void);", 
"unsigned long <a class=\"id\" href=\"#arch_deref_entry_point\">arch_deref_entry_point</a>(void *);", 
"", 
"int <a class=\"id\" href=\"#register_kretprobe\">register_kretprobe</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> *<a class=\"id\" href=\"#rp\">rp</a>);", 
"void <a class=\"id\" href=\"#unregister_kretprobe\">unregister_kretprobe</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> *<a class=\"id\" href=\"#rp\">rp</a>);", 
"int <a class=\"id\" href=\"#register_kretprobes\">register_kretprobes</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> **<a class=\"id\" href=\"#rps\">rps</a>, int <a class=\"id\" href=\"#num\">num</a>);", 
"void <a class=\"id\" href=\"#unregister_kretprobes\">unregister_kretprobes</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> **<a class=\"id\" href=\"#rps\">rps</a>, int <a class=\"id\" href=\"#num\">num</a>);", 
"", 
"void <a class=\"id\" href=\"#kprobe_flush_task\">kprobe_flush_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tk\">tk</a>);", 
"void <a class=\"id\" href=\"#recycle_rp_inst\">recycle_rp_inst</a>(struct <a class=\"id\" href=\"#kretprobe_instance\">kretprobe_instance</a> *<a class=\"id\" href=\"#ri\">ri</a>, struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>);", 
"", 
"int <a class=\"id\" href=\"#disable_kprobe\">disable_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#kp\">kp</a>);", 
"int <a class=\"id\" href=\"#enable_kprobe\">enable_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#kp\">kp</a>);", 
"", 
"void <a class=\"id\" href=\"#dump_kprobe\">dump_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#kp\">kp</a>);", 
"", 
"#else <span class=\"comment\">/* !CONFIG_KPROBES: */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#kprobes_built_in\">kprobes_built_in</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#kprobe_fault_handler\">kprobe_fault_handler</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, int <a class=\"id\" href=\"#trapnr\">trapnr</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#get_kprobe\">get_kprobe</a>(void *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#kprobe_running\">kprobe_running</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_kprobe\">register_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_kprobes\">register_kprobes</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> **<a class=\"id\" href=\"#kps\">kps</a>, int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_kprobe\">unregister_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_kprobes\">unregister_kprobes</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> **<a class=\"id\" href=\"#kps\">kps</a>, int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_jprobe\">register_jprobe</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_jprobes\">register_jprobes</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> **<a class=\"id\" href=\"#jps\">jps</a>, int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_jprobe\">unregister_jprobe</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_jprobes\">unregister_jprobes</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> **<a class=\"id\" href=\"#jps\">jps</a>, int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#jprobe_return\">jprobe_return</a>(void)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_kretprobe\">register_kretprobe</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> *<a class=\"id\" href=\"#rp\">rp</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_kretprobes\">register_kretprobes</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> **<a class=\"id\" href=\"#rps\">rps</a>, int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_kretprobe\">unregister_kretprobe</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> *<a class=\"id\" href=\"#rp\">rp</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_kretprobes\">unregister_kretprobes</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> **<a class=\"id\" href=\"#rps\">rps</a>, int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kprobe_flush_task\">kprobe_flush_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tk\">tk</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#disable_kprobe\">disable_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#kp\">kp</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#enable_kprobe\">enable_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#kp\">kp</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_KPROBES */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#disable_kretprobe\">disable_kretprobe</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> *<a class=\"id\" href=\"#rp\">rp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#disable_kprobe\">disable_kprobe</a>(&amp;<a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#kp\">kp</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#enable_kretprobe\">enable_kretprobe</a>(struct <a class=\"id\" href=\"#kretprobe\">kretprobe</a> *<a class=\"id\" href=\"#rp\">rp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#enable_kprobe\">enable_kprobe</a>(&amp;<a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#kp\">kp</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#disable_jprobe\">disable_jprobe</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> *<a class=\"id\" href=\"#jp\">jp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#disable_kprobe\">disable_kprobe</a>(&amp;<a class=\"id\" href=\"#jp\">jp</a>-><a class=\"id\" href=\"#kp\">kp</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#enable_jprobe\">enable_jprobe</a>(struct <a class=\"id\" href=\"#jprobe\">jprobe</a> *<a class=\"id\" href=\"#jp\">jp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#enable_kprobe\">enable_kprobe</a>(&amp;<a class=\"id\" href=\"#jp\">jp</a>-><a class=\"id\" href=\"#kp\">kp</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_KPROBES_H */</span>", 
];
xr_frag_insert('l/be/bc7469a3336b6f06d0c3aa8bc2f132c64f81fc.xr', __xr_tmp);
