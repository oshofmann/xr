var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_LINKAGE_H\">_LINUX_LINKAGE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_LINKAGE_H\">_LINUX_LINKAGE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#linkage\">linkage</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__cplusplus\">__cplusplus</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPP_ASMLINKAGE\">CPP_ASMLINKAGE</a> extern \"C\"", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPP_ASMLINKAGE\">CPP_ASMLINKAGE</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#asmlinkage\">asmlinkage</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> <a class=\"id\" href=\"#CPP_ASMLINKAGE\">CPP_ASMLINKAGE</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#asmregparm\">asmregparm</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#asmregparm\">asmregparm</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__page_aligned_data\">__page_aligned_data</a><span class=\"ts\"/><a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#data\">data</a>..<a class=\"id\" href=\"#page_aligned\">page_aligned</a>) <a class=\"id\" href=\"#__aligned\">__aligned</a>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__page_aligned_bss\">__page_aligned_bss</a><span class=\"ts\"/><a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#bss\">bss</a>..<a class=\"id\" href=\"#page_aligned\">page_aligned</a>) <a class=\"id\" href=\"#__aligned\">__aligned</a>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For assembly routines.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note when using these that you must specify the appropriate</span>", 
"<span class=\"comment\"> * alignment directives yourself</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__PAGE_ALIGNED_DATA\">__PAGE_ALIGNED_DATA</a><span class=\"ts\"/>.<a class=\"id\" href=\"#section\">section</a> \".data..page_aligned\", \"aw\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__PAGE_ALIGNED_BSS\">__PAGE_ALIGNED_BSS</a><span class=\"ts\"/>.<a class=\"id\" href=\"#section\">section</a> \".bss..page_aligned\", \"aw\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is used by architectures to keep arguments on the stack</span>", 
"<span class=\"comment\"> * untouched by the compiler by keeping them live until the end.</span>", 
"<span class=\"comment\"> * The argument stack may be owned by the assembly-language</span>", 
"<span class=\"comment\"> * caller, not the callee, and gcc doesn't always understand</span>", 
"<span class=\"comment\"> * that.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We have the return value, and a maximum of six arguments.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This should always be followed by a \"return ret\" for the</span>", 
"<span class=\"comment\"> * protection to work (ie no more work that the compiler might</span>", 
"<span class=\"comment\"> * end up needing stack temporaries for).</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"comment\">/* Assembly files may be compiled with -traditional .. */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#asmlinkage_protect\">asmlinkage_protect</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#asmlinkage_protect\">asmlinkage_protect</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#args\">args</a>...)<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ALIGN\">__ALIGN</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__ALIGN\">__ALIGN</a><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#align\">align</a> 4,0x90", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__ALIGN_STR\">__ALIGN_STR</a><span class=\"ts\"/>\".align 4,0x90\"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#LINKER_SCRIPT\">LINKER_SCRIPT</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ALIGN\">ALIGN</a> <a class=\"id\" href=\"#__ALIGN\">__ALIGN</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ALIGN_STR\">ALIGN_STR</a> <a class=\"id\" href=\"#__ALIGN_STR\">__ALIGN_STR</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#ENTRY\">ENTRY</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#name\">name</a>) \\", 
"  .<a class=\"id\" href=\"#globl\">globl</a> <a class=\"id\" href=\"#name\">name</a>; \\", 
"  <a class=\"id\" href=\"#ALIGN\">ALIGN</a>; \\", 
"  <a class=\"id\" href=\"#name\">name</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* LINKER_SCRIPT */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#WEAK\">WEAK</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#WEAK\">WEAK</a>(<a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/>   \\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#weak\">weak</a> <a class=\"id\" href=\"#name\">name</a>;<span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#END\">END</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#END\">END</a>(<a class=\"id\" href=\"#name\">name</a>) \\", 
"  .<a class=\"id\" href=\"#size\">size</a> <a class=\"id\" href=\"#name\">name</a>, .-<a class=\"id\" href=\"#name\">name</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* If symbol 'name' is treated as a subroutine (gets called, and returns)</span>", 
"<span class=\"comment\"> * then please use ENDPROC to mark 'name' as STT_FUNC for the benefit of</span>", 
"<span class=\"comment\"> * static analysis tools such as stack depth analyzer.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#ENDPROC\">ENDPROC</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENDPROC\">ENDPROC</a>(<a class=\"id\" href=\"#name\">name</a>) \\", 
"  .<a class=\"id\" href=\"#type\">type</a> <a class=\"id\" href=\"#name\">name</a>, @<a class=\"id\" href=\"#function\">function</a>; \\", 
"  <a class=\"id\" href=\"#END\">END</a>(<a class=\"id\" href=\"#name\">name</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NORET_TYPE\">NORET_TYPE</a>    <span class=\"comment\">/**/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATTRIB_NORET\">ATTRIB_NORET</a>  <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#noreturn\">noreturn</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NORET_AND\">NORET_AND</a>     <a class=\"id\" href=\"#noreturn\">noreturn</a>,", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/bf/73f665d82e51c64e29273557ff00e77b4f14ee.xr', __xr_tmp);
