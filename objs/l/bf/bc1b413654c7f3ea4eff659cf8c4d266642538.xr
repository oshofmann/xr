var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_PKT_SCHED_H\">__LINUX_PKT_SCHED_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_PKT_SCHED_H\">__LINUX_PKT_SCHED_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Logical priority bands not depending on specific packet scheduler.</span>", 
"<span class=\"comment\">   Every scheduler will map them to real traffic classes, if it has</span>", 
"<span class=\"comment\">   no more precise mechanism to classify packets.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   These numbers have no special meaning, though their coincidence</span>", 
"<span class=\"comment\">   with obsolete IPv6 values is not occasional :-). New IPv6 drafts</span>", 
"<span class=\"comment\">   preferred full anarchy inspired by diffserv group.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Note: TC_PRIO_BESTEFFORT does not mean that it is the most unhappy</span>", 
"<span class=\"comment\">   class, actually, as rule it will be handled with more care than</span>", 
"<span class=\"comment\">   filler or even bulk.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_PRIO_BESTEFFORT\">TC_PRIO_BESTEFFORT</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_PRIO_FILLER\">TC_PRIO_FILLER</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_PRIO_BULK\">TC_PRIO_BULK</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_PRIO_INTERACTIVE_BULK\">TC_PRIO_INTERACTIVE_BULK</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_PRIO_INTERACTIVE\">TC_PRIO_INTERACTIVE</a><span class=\"ts\"/><span class=\"ts\"/>6", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_PRIO_CONTROL\">TC_PRIO_CONTROL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>7", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_PRIO_MAX\">TC_PRIO_MAX</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>15", 
"", 
"<span class=\"comment\">/* Generic queue statistics, available for all the elements.</span>", 
"<span class=\"comment\">   Particular schedulers may have also their private records.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#tc_stats\">tc_stats</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* NUmber of enqueues bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#packets\">packets</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Number of enqueued packets<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#drops\">drops</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Packets dropped because of lack of resources */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#overlimits\">overlimits</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Number of throttle events when this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * flow goes out of allocated bandwidth */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#bps\">bps</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Current flow byte rate */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#pps\">pps</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Current flow packet rate */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#qlen\">qlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#backlog\">backlog</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tc_estimator\">tc_estimator</a> {", 
"<span class=\"ts\"/>signed char<span class=\"ts\"/><a class=\"id\" href=\"#interval\">interval</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#ewma_log\">ewma_log</a>;", 
"};", 
"", 
"<span class=\"comment\">/* \"Handles\"</span>", 
"<span class=\"comment\">   ---------</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    All the traffic control objects have 32bit identifiers, or \"handles\".</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    They can be considered as opaque numbers from user API viewpoint,</span>", 
"<span class=\"comment\">    but actually they always consist of two fields: major and</span>", 
"<span class=\"comment\">    minor numbers, which are interpreted by kernel specially,</span>", 
"<span class=\"comment\">    that may be used by applications, though not recommended.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    F.e. qdisc handles always have minor number equal to zero,</span>", 
"<span class=\"comment\">    classes (or flows) have major equal to parent qdisc major, and</span>", 
"<span class=\"comment\">    minor uniquely identifying class inside qdisc.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    Macros to manipulate handles:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_H_MAJ_MASK\">TC_H_MAJ_MASK</a> (0xFFFF0000U)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_H_MIN_MASK\">TC_H_MIN_MASK</a> (0x0000FFFFU)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_H_MAJ\">TC_H_MAJ</a>(<a class=\"id\" href=\"#h\">h</a>) ((<a class=\"id\" href=\"#h\">h</a>)&amp;<a class=\"id\" href=\"#TC_H_MAJ_MASK\">TC_H_MAJ_MASK</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_H_MIN\">TC_H_MIN</a>(<a class=\"id\" href=\"#h\">h</a>) ((<a class=\"id\" href=\"#h\">h</a>)&amp;<a class=\"id\" href=\"#TC_H_MIN_MASK\">TC_H_MIN_MASK</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_H_MAKE\">TC_H_MAKE</a>(<a class=\"id\" href=\"#maj\">maj</a>,<a class=\"id\" href=\"#min\">min</a>) (((<a class=\"id\" href=\"#maj\">maj</a>)&amp;<a class=\"id\" href=\"#TC_H_MAJ_MASK\">TC_H_MAJ_MASK</a>)|((<a class=\"id\" href=\"#min\">min</a>)&amp;<a class=\"id\" href=\"#TC_H_MIN_MASK\">TC_H_MIN_MASK</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_H_UNSPEC\">TC_H_UNSPEC</a><span class=\"ts\"/>(0U)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_H_ROOT\">TC_H_ROOT</a><span class=\"ts\"/>(0xFFFFFFFFU)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_H_INGRESS\">TC_H_INGRESS</a>    (0xFFFFFFF1U)", 
"", 
"struct <a class=\"id\" href=\"#tc_ratespec\">tc_ratespec</a> {", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#cell_log\">cell_log</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#__reserved\">__reserved</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a>;", 
"<span class=\"ts\"/>short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cell_align\">cell_align</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#mpu\">mpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rate\">rate</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TC_RTAB_SIZE\">TC_RTAB_SIZE</a><span class=\"ts\"/>1024", 
"", 
"struct <a class=\"id\" href=\"#tc_sizespec\">tc_sizespec</a> {", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#cell_log\">cell_log</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#size_log\">size_log</a>;", 
"<span class=\"ts\"/>short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cell_align\">cell_align</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a>;", 
];
xr_frag_insert('l/bf/bc1b413654c7f3ea4eff659cf8c4d266642538.xr', __xr_tmp);
