var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Extension Header handling for IPv6</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen<span class=\"ts\"/><span class=\"ts\"/>&lt;ak@muc.de&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/>&lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Changes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>yoshfuji<span class=\"ts\"/><span class=\"ts\"/>: ensure not to overrun while parsing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  tlv options.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Mitsuru KANDA @USAGI and: Remove ipv6_parse_exthdrs().</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI  Register inbound extension header</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  handlers as inet6_protocol{}.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#icmpv6\">icmpv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#transp_v6\">transp_v6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#rawv6\">rawv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#ipv6_find_tlv\">ipv6_find_tlv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#nh\">nh</a> = <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#packet_len\">packet_len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> + 2 &gt; <a class=\"id\" href=\"#packet_len\">packet_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = (struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *)(<a class=\"id\" href=\"#nh\">nh</a> + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = ((<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdrlen\">hdrlen</a> + 1) << 3);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#packet_len\">packet_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= 2;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#opttype\">opttype</a> = <a class=\"id\" href=\"#nh\">nh</a>[<a class=\"id\" href=\"#offset\">offset</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optlen\">optlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opttype\">opttype</a> == <a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#opttype\">opttype</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_TLV_PAD0\">IPV6_TLV_PAD0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#optlen\">optlen</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#optlen\">optlen</a> = <a class=\"id\" href=\"#nh\">nh</a>[<a class=\"id\" href=\"#offset\">offset</a> + 1] + 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#optlen\">optlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#optlen\">optlen</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* not_found */</span>", 
" <a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/>return -1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ipv6_find_tlv\">ipv6_find_tlv</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Parsing tlv encoded headers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Parsing function \"func\" returns 1, if parsing succeed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and 0, if it failed.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It MUST NOT touch skb-&gt;h.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#tlvtype_proc\">tlvtype_proc</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#func\">func</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#offset\">offset</a>);", 
"};", 
"", 
"<span class=\"comment\">/*********************</span>", 
"<span class=\"comment\">  Generic functions</span>", 
"<span class=\"comment\"> *********************/</span>", 
"", 
"<span class=\"comment\">/* An unknown option is detected, decide what to do */</span>", 
"", 
"static int <a class=\"id\" href=\"#ip6_tlvopt_unknown\">ip6_tlvopt_unknown</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#optoff\">optoff</a>)", 
"{", 
"<span class=\"ts\"/>switch ((<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)[<a class=\"id\" href=\"#optoff\">optoff</a>] &amp; 0xC0) >> 6) {", 
"<span class=\"ts\"/>case 0: <span class=\"comment\">/* ignore */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>case 1: <span class=\"comment\">/* drop packet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case 3: <span class=\"comment\">/* Send ICMP if not a multicast address and drop packet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Actually, it is redundant check. icmp_send</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   will recheck in any case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(&amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2: <span class=\"comment\">/* send ICMP PARM PROB regardless and drop packet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_param_prob\">icmpv6_param_prob</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_UNK_OPTION\">ICMPV6_UNK_OPTION</a>, <a class=\"id\" href=\"#optoff\">optoff</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Parse tlv encoded option header (hop-by-hop or destination) */</span>", 
"", 
"static int <a class=\"id\" href=\"#ip6_parse_tlv\">ip6_parse_tlv</a>(struct <a class=\"id\" href=\"#tlvtype_proc\">tlvtype_proc</a> *<a class=\"id\" href=\"#procs\">procs</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tlvtype_proc\">tlvtype_proc</a> *<a class=\"id\" href=\"#curr\">curr</a>;", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#nh\">nh</a> = <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)[1] + 1) << 3;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_transport_offset\">skb_transport_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>) + <a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#skb_headlen\">skb_headlen</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> += 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= 2;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optlen\">optlen</a> = <a class=\"id\" href=\"#nh\">nh</a>[<a class=\"id\" href=\"#off\">off</a> + 1] + 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#nh\">nh</a>[<a class=\"id\" href=\"#off\">off</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_TLV_PAD0\">IPV6_TLV_PAD0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#optlen\">optlen</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_TLV_PADN\">IPV6_TLV_PADN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default: <span class=\"comment\">/* Other TLV code so scan list */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#curr\">curr</a>=<a class=\"id\" href=\"#procs\">procs</a>; <a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#type\">type</a> >= 0; <a class=\"id\" href=\"#curr\">curr</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#nh\">nh</a>[<a class=\"id\" href=\"#off\">off</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* type specific length/alignment</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   checks will be performed in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   func(). */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#off\">off</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#type\">type</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip6_tlvopt_unknown\">ip6_tlvopt_unknown</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#off\">off</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> += <a class=\"id\" href=\"#optlen\">optlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#optlen\">optlen</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*****************************</span>", 
"<span class=\"comment\">  Destination options header.</span>", 
"<span class=\"comment\"> *****************************/</span>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"static int <a class=\"id\" href=\"#ipv6_dest_hao\">ipv6_dest_hao</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#optoff\">optoff</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_destopt_hao\">ipv6_destopt_hao</a> *<a class=\"id\" href=\"#hao\">hao</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#ipv6h\">ipv6h</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#tmp_addr\">tmp_addr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dsthao\">dsthao</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"hao duplicated\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dsthao\">dsthao</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1\">dst1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1\">dst1</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hao\">hao</a> = (struct <a class=\"id\" href=\"#ipv6_destopt_hao\">ipv6_destopt_hao</a> *)(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + <a class=\"id\" href=\"#optoff\">optoff</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hao\">hao</a>-><a class=\"id\" href=\"#length\">length</a> != 16) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"hao invalid option length = %d\\n\", <a class=\"id\" href=\"#hao\">hao</a>-><a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#hao\">hao</a>-><a class=\"id\" href=\"#addr\">addr</a>) &amp; <a class=\"id\" href=\"#IPV6_ADDR_UNICAST\">IPV6_ADDR_UNICAST</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"hao is not an unicast addr: %pI6\\n\", &amp;<a class=\"id\" href=\"#hao\">hao</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#xfrm6_input_addr\">xfrm6_input_addr</a>(<a class=\"id\" href=\"#skb\">skb</a>, (<a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *)&amp;<a class=\"id\" href=\"#ipv6h\">ipv6h</a>-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *)&amp;<a class=\"id\" href=\"#hao\">hao</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#IPPROTO_DSTOPTS\">IPPROTO_DSTOPTS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a> &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_cloned\">skb_cloned</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pskb_expand_head\">pskb_expand_head</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, 0, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update all variable using below by copied skbuff */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hao\">hao</a> = (struct <a class=\"id\" href=\"#ipv6_destopt_hao\">ipv6_destopt_hao</a> *)(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#optoff\">optoff</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6h\">ipv6h</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_COMPLETE\">CHECKSUM_COMPLETE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#tmp_addr\">tmp_addr</a>, &amp;<a class=\"id\" href=\"#ipv6h\">ipv6h</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#ipv6h\">ipv6h</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#hao\">hao</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#hao\">hao</a>-><a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#tmp_addr\">tmp_addr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>.<a class=\"id\" href=\"#tv64\">tv64</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__net_timestamp\">__net_timestamp</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"", 
" <a class=\"id\" href=\"#discard\">discard</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#tlvtype_proc\">tlvtype_proc</a> <a class=\"id\" href=\"#tlvprocdestopt_lst\">tlvprocdestopt_lst</a>[] = {", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_TLV_HAO\">IPV6_TLV_HAO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#func\">func</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ipv6_dest_hao\">ipv6_dest_hao</a>,", 
"<span class=\"ts\"/>},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{-1,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>}", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ipv6_destopt_rcv\">ipv6_destopt_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#dstbuf\">dstbuf</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_transport_offset\">skb_transport_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>) + 8) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, (<a class=\"id\" href=\"#skb_transport_offset\">skb_transport_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> ((<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)[1] + 1) << 3)))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#lastopt\">lastopt</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1\">dst1</a> = <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dstbuf\">dstbuf</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1\">dst1</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst_clone\">dst_clone</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip6_parse_tlv\">ip6_parse_tlv</a>(<a class=\"id\" href=\"#tlvprocdestopt_lst\">tlvprocdestopt_lst</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> += (<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)[1] + 1) << 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#nhoff\">nhoff</a> = <a class=\"id\" href=\"#dstbuf\">dstbuf</a>;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#nhoff\">nhoff</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1\">dst1</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"<span class=\"comment\">/********************************</span>", 
"<span class=\"comment\">  Routing header.</span>", 
"<span class=\"comment\"> ********************************/</span>", 
"", 
"<span class=\"comment\">/* called with rcu_read_lock() */</span>", 
"static int <a class=\"id\" href=\"#ipv6_rthdr_rcv\">ipv6_rthdr_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_rt_hdr\">ipv6_rt_hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt0_hdr\">rt0_hdr</a> *<a class=\"id\" href=\"#rthdr\">rthdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#accept_source_route\">accept_source_route</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#accept_source_route\">accept_source_route</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a> && <a class=\"id\" href=\"#accept_source_route\">accept_source_route</a> &gt; <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#accept_source_route\">accept_source_route</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#accept_source_route\">accept_source_route</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#accept_source_route\">accept_source_route</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_transport_offset\">skb_transport_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>) + 8) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, (<a class=\"id\" href=\"#skb_transport_offset\">skb_transport_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> ((<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)[1] + 1) << 3)))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = (struct <a class=\"id\" href=\"#ipv6_rt_hdr\">ipv6_rt_hdr</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(&amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> != <a class=\"id\" href=\"#PACKET_HOST\">PACKET_HOST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INADDRERRORS\">IPSTATS_MIB_INADDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#looped_back\">looped_back</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#segments_left\">segments_left</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SRCRT_TYPE_2\">IPV6_SRCRT_TYPE_2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Silently discard type 2 header unless it was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * processed by own</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INADDRERRORS\">IPSTATS_MIB_INADDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#lastopt\">lastopt</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a> = <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> += (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdrlen\">hdrlen</a> + 1) << 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0\">dst0</a> = <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1\">dst1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1\">dst1</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#nhoff\">nhoff</a> = (&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>) - <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SRCRT_TYPE_2\">IPV6_SRCRT_TYPE_2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#accept_source_route\">accept_source_route</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unknown_rh\">unknown_rh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Silently discard invalid RTH type 2 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdrlen\">hdrlen</a> != 2 || <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#segments_left\">segments_left</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unknown_rh\">unknown_rh</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>This is the routing header forwarding algorithm from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>RFC 2460, page 16.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdrlen\">hdrlen</a> >> 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#segments_left\">segments_left</a> &gt; <a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_param_prob\">icmpv6_param_prob</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_HDR_FIELD\">ICMPV6_HDR_FIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  ((&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#segments_left\">segments_left</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We are about to mangle packet header. Be careful!</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Do not damage packets queued somewhere.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_cloned\">skb_cloned</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the copy is a forwarded packet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pskb_expand_head\">pskb_expand_head</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, 0, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = (struct <a class=\"id\" href=\"#ipv6_rt_hdr\">ipv6_rt_hdr</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_COMPLETE\">CHECKSUM_COMPLETE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#n\">n</a> - --<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#segments_left\">segments_left</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rthdr\">rthdr</a> = (struct <a class=\"id\" href=\"#rt0_hdr\">rt0_hdr</a> *) <a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#rthdr\">rthdr</a>-><a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#i\">i</a> - 1;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SRCRT_TYPE_2\">IPV6_SRCRT_TYPE_2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xfrm6_input_addr\">xfrm6_input_addr</a>(<a class=\"id\" href=\"#skb\">skb</a>, (<a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *)<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *)&amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IPPROTO_ROUTING\">IPPROTO_ROUTING</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INADDRERRORS\">IPSTATS_MIB_INADDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_chk_home_addr\">ipv6_chk_home_addr</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INADDRERRORS\">IPSTATS_MIB_INADDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(<a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INADDRERRORS\">IPSTATS_MIB_INADDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>, &amp;<a class=\"id\" href=\"#daddr\">daddr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_drop\">skb_dst_drop</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_route_input\">ip6_route_input</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a> - <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_input\">dst_input</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#hop_limit\">hop_limit</a> <= 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_TIME_EXCEED\">ICMPV6_TIME_EXCEED</a>, <a class=\"id\" href=\"#ICMPV6_EXC_HOPLIMIT\">ICMPV6_EXC_HOPLIMIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#hop_limit\">hop_limit</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#looped_back\">looped_back</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a> - <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_input\">dst_input</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return -1;", 
"", 
"<a class=\"id\" href=\"#unknown_rh\">unknown_rh</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)), <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_param_prob\">icmpv6_param_prob</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_HDR_FIELD\">ICMPV6_HDR_FIELD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#type\">type</a>) - <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> <a class=\"id\" href=\"#rthdr_protocol\">rthdr_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_rthdr_rcv\">ipv6_rthdr_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#INET6_PROTO_NOPOLICY\">INET6_PROTO_NOPOLICY</a> | <a class=\"id\" href=\"#INET6_PROTO_GSO_EXTHDR\">INET6_PROTO_GSO_EXTHDR</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> <a class=\"id\" href=\"#destopt_protocol\">destopt_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_destopt_rcv\">ipv6_destopt_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#INET6_PROTO_NOPOLICY\">INET6_PROTO_NOPOLICY</a> | <a class=\"id\" href=\"#INET6_PROTO_GSO_EXTHDR\">INET6_PROTO_GSO_EXTHDR</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> <a class=\"id\" href=\"#nodata_protocol\">nodata_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#dst_discard\">dst_discard</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#INET6_PROTO_NOPOLICY\">INET6_PROTO_NOPOLICY</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ipv6_exthdrs_init\">ipv6_exthdrs_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inet6_add_protocol\">inet6_add_protocol</a>(&amp;<a class=\"id\" href=\"#rthdr_protocol\">rthdr_protocol</a>, <a class=\"id\" href=\"#IPPROTO_ROUTING\">IPPROTO_ROUTING</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inet6_add_protocol\">inet6_add_protocol</a>(&amp;<a class=\"id\" href=\"#destopt_protocol\">destopt_protocol</a>, <a class=\"id\" href=\"#IPPROTO_DSTOPTS\">IPPROTO_DSTOPTS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_rthdr\">out_rthdr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inet6_add_protocol\">inet6_add_protocol</a>(&amp;<a class=\"id\" href=\"#nodata_protocol\">nodata_protocol</a>, <a class=\"id\" href=\"#IPPROTO_NONE\">IPPROTO_NONE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_destopt\">out_destopt</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<a class=\"id\" href=\"#out_rthdr\">out_rthdr</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_del_protocol\">inet6_del_protocol</a>(&amp;<a class=\"id\" href=\"#rthdr_protocol\">rthdr_protocol</a>, <a class=\"id\" href=\"#IPPROTO_ROUTING\">IPPROTO_ROUTING</a>);", 
"<a class=\"id\" href=\"#out_destopt\">out_destopt</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_del_protocol\">inet6_del_protocol</a>(&amp;<a class=\"id\" href=\"#destopt_protocol\">destopt_protocol</a>, <a class=\"id\" href=\"#IPPROTO_DSTOPTS\">IPPROTO_DSTOPTS</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"};", 
"", 
"void <a class=\"id\" href=\"#ipv6_exthdrs_exit\">ipv6_exthdrs_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_del_protocol\">inet6_del_protocol</a>(&amp;<a class=\"id\" href=\"#nodata_protocol\">nodata_protocol</a>, <a class=\"id\" href=\"#IPPROTO_NONE\">IPPROTO_NONE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_del_protocol\">inet6_del_protocol</a>(&amp;<a class=\"id\" href=\"#destopt_protocol\">destopt_protocol</a>, <a class=\"id\" href=\"#IPPROTO_DSTOPTS\">IPPROTO_DSTOPTS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_del_protocol\">inet6_del_protocol</a>(&amp;<a class=\"id\" href=\"#rthdr_protocol\">rthdr_protocol</a>, <a class=\"id\" href=\"#IPPROTO_ROUTING\">IPPROTO_ROUTING</a>);", 
"}", 
"", 
"<span class=\"comment\">/**********************************</span>", 
"<span class=\"comment\">  Hop-by-hop options.</span>", 
"<span class=\"comment\"> **********************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Note: we cannot rely on skb_dst(skb) before we assign it in ip6_route_input().</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#ipv6_skb_idev\">ipv6_skb_idev</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>) ? <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)) : <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#ipv6_skb_net\">ipv6_skb_net</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>) ? <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>) : <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Router Alert as of RFC 2711 */</span>", 
"", 
"static int <a class=\"id\" href=\"#ipv6_hop_ra\">ipv6_hop_ra</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#optoff\">optoff</a>)", 
"{", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#nh\">nh</a> = <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>[<a class=\"id\" href=\"#optoff\">optoff</a> + 1] == 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#optoff\">optoff</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"ipv6_hop_ra: wrong RA length %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#nh\">nh</a>[<a class=\"id\" href=\"#optoff\">optoff</a> + 1]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Jumbo payload */</span>", 
"", 
"static int <a class=\"id\" href=\"#ipv6_hop_jumbo\">ipv6_hop_jumbo</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#optoff\">optoff</a>)", 
"{", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#nh\">nh</a> = <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#ipv6_skb_net\">ipv6_skb_net</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pkt_len\">pkt_len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>[<a class=\"id\" href=\"#optoff\">optoff</a> + 1] != 4 || (<a class=\"id\" href=\"#optoff\">optoff</a> &amp; 3) != 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"ipv6_hop_jumbo: wrong jumbo opt length/alignment %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#nh\">nh</a>[<a class=\"id\" href=\"#optoff\">optoff</a>+1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ipv6_skb_idev\">ipv6_skb_idev</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_len\">pkt_len</a> = <a class=\"id\" href=\"#ntohl\">ntohl</a>(*(<a class=\"id\" href=\"#__be32\">__be32</a> *)(<a class=\"id\" href=\"#nh\">nh</a> + <a class=\"id\" href=\"#optoff\">optoff</a> + 2));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt_len\">pkt_len</a> <= <a class=\"id\" href=\"#IPV6_MAXPLEN\">IPV6_MAXPLEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ipv6_skb_idev\">ipv6_skb_idev</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_param_prob\">icmpv6_param_prob</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_HDR_FIELD\">ICMPV6_HDR_FIELD</a>, <a class=\"id\" href=\"#optoff\">optoff</a>+2);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#payload_len\">payload_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ipv6_skb_idev\">ipv6_skb_idev</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_param_prob\">icmpv6_param_prob</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_HDR_FIELD\">ICMPV6_HDR_FIELD</a>, <a class=\"id\" href=\"#optoff\">optoff</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt_len\">pkt_len</a> &gt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ipv6_skb_idev\">ipv6_skb_idev</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INTRUNCATEDPKTS\">IPSTATS_MIB_INTRUNCATEDPKTS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pskb_trim_rcsum\">pskb_trim_rcsum</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pkt_len\">pkt_len</a> + sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#tlvtype_proc\">tlvtype_proc</a> <a class=\"id\" href=\"#tlvprochopopt_lst\">tlvprochopopt_lst</a>[] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_TLV_ROUTERALERT\">IPV6_TLV_ROUTERALERT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#func\">func</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ipv6_hop_ra\">ipv6_hop_ra</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_TLV_JUMBO\">IPV6_TLV_JUMBO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#func\">func</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ipv6_hop_jumbo\">ipv6_hop_jumbo</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ -1, }", 
"};", 
"", 
"int <a class=\"id\" href=\"#ipv6_parse_hopopts\">ipv6_parse_hopopts</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * skb_network_header(skb) is equal to skb-&gt;data, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * skb_network_header_len(skb) is always equal to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sizeof(struct ipv6hdr) by definition of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hop-by-hop options.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) + 8) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, (sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> ((<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)[1] + 1) << 3)))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hop\">hop</a> = sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip6_parse_tlv\">ip6_parse_tlv</a>(<a class=\"id\" href=\"#tlvprochopopt_lst\">tlvprochopopt_lst</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> += (<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)[1] + 1) << 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#nhoff\">nhoff</a> = sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Creating outbound headers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>\"build\" functions work when skb is filled from head to tail (datagram)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>\"push\"<span class=\"ts\"/>functions work when headers are added from tail to head (tcp)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>In both cases we assume, that caller reserved enough room</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for headers.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ipv6_push_rthdr\">ipv6_push_rthdr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#ipv6_rt_hdr\">ipv6_rt_hdr</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> **<a class=\"id\" href=\"#addr_p\">addr_p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt0_hdr\">rt0_hdr</a> *<a class=\"id\" href=\"#phdr\">phdr</a>, *<a class=\"id\" href=\"#ihdr\">ihdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hops\">hops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ihdr\">ihdr</a> = (struct <a class=\"id\" href=\"#rt0_hdr\">rt0_hdr</a> *) <a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a> = (struct <a class=\"id\" href=\"#rt0_hdr\">rt0_hdr</a> *) <a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, (<a class=\"id\" href=\"#ihdr\">ihdr</a>-><a class=\"id\" href=\"#rt_hdr\">rt_hdr</a>.<a class=\"id\" href=\"#hdrlen\">hdrlen</a> + 1) << 3);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#phdr\">phdr</a>, <a class=\"id\" href=\"#ihdr\">ihdr</a>, sizeof(struct <a class=\"id\" href=\"#rt0_hdr\">rt0_hdr</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hops\">hops</a> = <a class=\"id\" href=\"#ihdr\">ihdr</a>-><a class=\"id\" href=\"#rt_hdr\">rt_hdr</a>.<a class=\"id\" href=\"#hdrlen\">hdrlen</a> >> 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hops\">hops</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#phdr\">phdr</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ihdr\">ihdr</a>-><a class=\"id\" href=\"#addr\">addr</a> + 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#hops\">hops</a> - 1) * sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(<a class=\"id\" href=\"#phdr\">phdr</a>-><a class=\"id\" href=\"#addr\">addr</a> + (<a class=\"id\" href=\"#hops\">hops</a> - 1), *<a class=\"id\" href=\"#addr_p\">addr_p</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#addr_p\">addr_p</a> = <a class=\"id\" href=\"#ihdr\">ihdr</a>-><a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>-><a class=\"id\" href=\"#rt_hdr\">rt_hdr</a>.<a class=\"id\" href=\"#nexthdr\">nexthdr</a> = *<a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#NEXTHDR_ROUTING\">NEXTHDR_ROUTING</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ipv6_push_exthdr\">ipv6_push_exthdr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *<a class=\"id\" href=\"#h\">h</a> = (struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *)<a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt\">opt</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt\">opt</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = *<a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ipv6_push_nfrag_opts\">ipv6_push_nfrag_opts</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> **<a class=\"id\" href=\"#daddr\">daddr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_rthdr\">ipv6_push_rthdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#proto\">proto</a>, <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>, <a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * IPV6_RTHDRDSTOPTS is ignored</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * unless IPV6_RTHDR is set (RFC3542).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_exthdr\">ipv6_push_exthdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#proto\">proto</a>, <a class=\"id\" href=\"#NEXTHDR_DEST\">NEXTHDR_DEST</a>, <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_exthdr\">ipv6_push_exthdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#proto\">proto</a>, <a class=\"id\" href=\"#NEXTHDR_HOP\">NEXTHDR_HOP</a>, <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ipv6_push_nfrag_opts\">ipv6_push_nfrag_opts</a>);", 
"", 
"void <a class=\"id\" href=\"#ipv6_push_frag_opts\">ipv6_push_frag_opts</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_exthdr\">ipv6_push_exthdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#proto\">proto</a>, <a class=\"id\" href=\"#NEXTHDR_DEST\">NEXTHDR_DEST</a>, <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *", 
"<a class=\"id\" href=\"#ipv6_dup_options\">ipv6_dup_options</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt2\">opt2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt2\">opt2</a> = <a class=\"id\" href=\"#sock_kmalloc\">sock_kmalloc</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt2\">opt2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#dif\">dif</a> = (char*)<a class=\"id\" href=\"#opt2\">opt2</a> - (char*)<a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#opt2\">opt2</a>, <a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*((char**)&amp;<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>) += <a class=\"id\" href=\"#dif\">dif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*((char**)&amp;<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>) += <a class=\"id\" href=\"#dif\">dif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*((char**)&amp;<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>) += <a class=\"id\" href=\"#dif\">dif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*((char**)&amp;<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>) += <a class=\"id\" href=\"#dif\">dif</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#opt2\">opt2</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ipv6_dup_options\">ipv6_dup_options</a>);", 
"", 
"static int <a class=\"id\" href=\"#ipv6_renew_option\">ipv6_renew_option</a>(void *<a class=\"id\" href=\"#ohdr\">ohdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#newopt\">newopt</a>, int <a class=\"id\" href=\"#newoptlen\">newoptlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#inherit\">inherit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> **<a class=\"id\" href=\"#hdr\">hdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char **<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inherit\">inherit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ohdr\">ohdr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(*<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#ohdr\">ohdr</a>, <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>((struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *)<a class=\"id\" href=\"#ohdr\">ohdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#hdr\">hdr</a> = (struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *)*<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#CMSG_ALIGN\">CMSG_ALIGN</a>(<a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(*(struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> **)<a class=\"id\" href=\"#hdr\">hdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newopt\">newopt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(*<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#newopt\">newopt</a>, <a class=\"id\" href=\"#newoptlen\">newoptlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#hdr\">hdr</a> = (struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *)*<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(*(struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> **)<a class=\"id\" href=\"#hdr\">hdr</a>) &gt; <a class=\"id\" href=\"#newoptlen\">newoptlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#CMSG_ALIGN\">CMSG_ALIGN</a>(<a class=\"id\" href=\"#newoptlen\">newoptlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *", 
"<a class=\"id\" href=\"#ipv6_renew_options\">ipv6_renew_options</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#newtype\">newtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#newopt\">newopt</a>, int <a class=\"id\" href=\"#newoptlen\">newoptlen</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tot_len\">tot_len</a> = 0;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt2\">opt2</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newtype\">newtype</a> != <a class=\"id\" href=\"#IPV6_HOPOPTS\">IPV6_HOPOPTS</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tot_len\">tot_len</a> += <a class=\"id\" href=\"#CMSG_ALIGN\">CMSG_ALIGN</a>(<a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newtype\">newtype</a> != <a class=\"id\" href=\"#IPV6_RTHDRDSTOPTS\">IPV6_RTHDRDSTOPTS</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tot_len\">tot_len</a> += <a class=\"id\" href=\"#CMSG_ALIGN\">CMSG_ALIGN</a>(<a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newtype\">newtype</a> != <a class=\"id\" href=\"#IPV6_RTHDR\">IPV6_RTHDR</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tot_len\">tot_len</a> += <a class=\"id\" href=\"#CMSG_ALIGN\">CMSG_ALIGN</a>(<a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newtype\">newtype</a> != <a class=\"id\" href=\"#IPV6_DSTOPTS\">IPV6_DSTOPTS</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tot_len\">tot_len</a> += <a class=\"id\" href=\"#CMSG_ALIGN\">CMSG_ALIGN</a>(<a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newopt\">newopt</a> && <a class=\"id\" href=\"#newoptlen\">newoptlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tot_len\">tot_len</a> += <a class=\"id\" href=\"#CMSG_ALIGN\">CMSG_ALIGN</a>(<a class=\"id\" href=\"#newoptlen\">newoptlen</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tot_len\">tot_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tot_len\">tot_len</a> += sizeof(*<a class=\"id\" href=\"#opt2\">opt2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt2\">opt2</a> = <a class=\"id\" href=\"#sock_kmalloc\">sock_kmalloc</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#tot_len\">tot_len</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#opt2\">opt2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#opt2\">opt2</a>, 0, <a class=\"id\" href=\"#tot_len\">tot_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#tot_len\">tot_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = (char *)(<a class=\"id\" href=\"#opt2\">opt2</a> + 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_renew_option\">ipv6_renew_option</a>(<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#newopt\">newopt</a>, <a class=\"id\" href=\"#newoptlen\">newoptlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtype\">newtype</a> != <a class=\"id\" href=\"#IPV6_HOPOPTS\">IPV6_HOPOPTS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_renew_option\">ipv6_renew_option</a>(<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#newopt\">newopt</a>, <a class=\"id\" href=\"#newoptlen\">newoptlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtype\">newtype</a> != <a class=\"id\" href=\"#IPV6_RTHDRDSTOPTS\">IPV6_RTHDRDSTOPTS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_renew_option\">ipv6_renew_option</a>(<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#newopt\">newopt</a>, <a class=\"id\" href=\"#newoptlen\">newoptlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtype\">newtype</a> != <a class=\"id\" href=\"#IPV6_RTHDR\">IPV6_RTHDR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> **)&amp;<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_renew_option\">ipv6_renew_option</a>(<a class=\"id\" href=\"#opt\">opt</a> ? <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#newopt\">newopt</a>, <a class=\"id\" href=\"#newoptlen\">newoptlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtype\">newtype</a> != <a class=\"id\" href=\"#IPV6_DSTOPTS\">IPV6_DSTOPTS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#opt_nflen\">opt_nflen</a> = (<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a> ? <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#hopopt\">hopopt</a>) : 0) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a> ? <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>) : 0) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a> ? <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>) : 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#opt_flen\">opt_flen</a> = (<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a> ? <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#dst1opt\">dst1opt</a>) : 0);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#opt2\">opt2</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#opt2\">opt2</a>, <a class=\"id\" href=\"#opt2\">opt2</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#ipv6_fixup_options\">ipv6_fixup_options</a>(struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt_space\">opt_space</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ignore the dest before srcrt unless srcrt is being included.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * --yoshfuji</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a> && !<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt_space\">opt_space</a> != <a class=\"id\" href=\"#opt\">opt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#opt_space\">opt_space</a>, <a class=\"id\" href=\"#opt\">opt</a>, sizeof(*<a class=\"id\" href=\"#opt_space\">opt_space</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#opt_space\">opt_space</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#opt_nflen\">opt_nflen</a> -= <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0opt\">dst0opt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#opt\">opt</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * fl6_update_dst - update flowi destination address with info given</span>", 
"<span class=\"comment\"> *                  by srcrt option, if any.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @fl: flowi for which fl6_dst is to be updated</span>", 
"<span class=\"comment\"> * @opt: struct ipv6_txoptions in which to look for srcrt opt</span>", 
"<span class=\"comment\"> * @orig: copy of original fl6_dst address if modified</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns NULL if no txoptions or no srcrt, otherwise returns orig</span>", 
"<span class=\"comment\"> * and initial value of fl-&gt;fl6_dst set in orig</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#fl6_update_dst\">fl6_update_dst</a>(struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#orig\">orig</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#opt\">opt</a> || !<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(<a class=\"id\" href=\"#orig\">orig</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>, ((struct <a class=\"id\" href=\"#rt0_hdr\">rt0_hdr</a> *)<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a>)-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#orig\">orig</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#fl6_update_dst\">fl6_update_dst</a>);", 
];
xr_frag_insert('l/bf/d7a2eeaa25c1607c3c8af52d1d074772b9e3ac.xr', __xr_tmp);
