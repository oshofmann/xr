var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>       (unsigned long long) <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       (unsigned long long) <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_print_type\">e820_print_type</a>(<a class=\"id\" href=\"#old_type\">old_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \" ==> \");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_print_type\">e820_print_type</a>(<a class=\"id\" href=\"#new_type\">new_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"\\n\");", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820x\">e820x</a>-><a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#ei\">ei</a> = &amp;<a class=\"id\" href=\"#e820x\">e820x</a>-><a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#final_start\">final_start</a>, <a class=\"id\" href=\"#final_end\">final_end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ei_end\">ei_end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#old_type\">old_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei_end\">ei_end</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* totally covered by new range? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#start\">start</a> && <a class=\"id\" href=\"#ei_end\">ei_end</a> <= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#new_type\">new_type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#real_updated_size\">real_updated_size</a> += <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* new range is totally covered? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#start\">start</a> && <a class=\"id\" href=\"#ei_end\">ei_end</a> &gt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__e820_add_region\">__e820_add_region</a>(<a class=\"id\" href=\"#e820x\">e820x</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#new_type\">new_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__e820_add_region\">__e820_add_region</a>(<a class=\"id\" href=\"#e820x\">e820x</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#ei_end\">ei_end</a> - <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#start\">start</a> - <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#real_updated_size\">real_updated_size</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* partially covered */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#final_start\">final_start</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#final_end\">final_end</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#ei_end\">ei_end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#final_start\">final_start</a> >= <a class=\"id\" href=\"#final_end\">final_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__e820_add_region\">__e820_add_region</a>(<a class=\"id\" href=\"#e820x\">e820x</a>, <a class=\"id\" href=\"#final_start\">final_start</a>, <a class=\"id\" href=\"#final_end\">final_end</a> - <a class=\"id\" href=\"#final_start\">final_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#new_type\">new_type</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#real_updated_size\">real_updated_size</a> += <a class=\"id\" href=\"#final_end\">final_end</a> - <a class=\"id\" href=\"#final_start\">final_start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * left range could be head or tail, so need to update</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * size at first.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a> -= <a class=\"id\" href=\"#final_end\">final_end</a> - <a class=\"id\" href=\"#final_start\">final_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#final_start\">final_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#final_end\">final_end</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#real_updated_size\">real_updated_size</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_update_range\">e820_update_range</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>, unsigned <a class=\"id\" href=\"#old_type\">old_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned <a class=\"id\" href=\"#new_type\">new_type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__e820_update_range\">__e820_update_range</a>(&amp;<a class=\"id\" href=\"#e820\">e820</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#old_type\">old_type</a>, <a class=\"id\" href=\"#new_type\">new_type</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_update_range_saved\">e820_update_range_saved</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned <a class=\"id\" href=\"#old_type\">old_type</a>, unsigned <a class=\"id\" href=\"#new_type\">new_type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__e820_update_range\">__e820_update_range</a>(&amp;<a class=\"id\" href=\"#e820_saved\">e820_saved</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#old_type\">old_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#new_type\">new_type</a>);", 
"}", 
"", 
"<span class=\"comment\">/* make e820 not cover the range */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_remove_range\">e820_remove_range</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>, unsigned <a class=\"id\" href=\"#old_type\">old_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#checktype\">checktype</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#real_removed_size\">real_removed_size</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; (<a class=\"id\" href=\"#ULLONG_MAX\">ULLONG_MAX</a> - <a class=\"id\" href=\"#start\">start</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#ULLONG_MAX\">ULLONG_MAX</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"e820 remove range: %016Lx - %016Lx \",", 
"<span class=\"ts\"/><span class=\"ts\"/>       (unsigned long long) <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       (unsigned long long) <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#checktype\">checktype</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_print_type\">e820_print_type</a>(<a class=\"id\" href=\"#old_type\">old_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"\\n\");", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#ei\">ei</a> = &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#final_start\">final_start</a>, <a class=\"id\" href=\"#final_end\">final_end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ei_end\">ei_end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#checktype\">checktype</a> && <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#old_type\">old_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei_end\">ei_end</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* totally covered? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#start\">start</a> && <a class=\"id\" href=\"#ei_end\">ei_end</a> <= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#real_removed_size\">real_removed_size</a> += <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#ei\">ei</a>, 0, sizeof(struct <a class=\"id\" href=\"#e820entry\">e820entry</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* new range is totally covered? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#start\">start</a> && <a class=\"id\" href=\"#ei_end\">ei_end</a> &gt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_add_region\">e820_add_region</a>(<a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#ei_end\">ei_end</a> - <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#start\">start</a> - <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#real_removed_size\">real_removed_size</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* partially covered */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#final_start\">final_start</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#final_end\">final_end</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#ei_end\">ei_end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#final_start\">final_start</a> >= <a class=\"id\" href=\"#final_end\">final_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#real_removed_size\">real_removed_size</a> += <a class=\"id\" href=\"#final_end\">final_end</a> - <a class=\"id\" href=\"#final_start\">final_start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * left range could be head or tail, so need to update</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * size at first.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a> -= <a class=\"id\" href=\"#final_end\">final_end</a> - <a class=\"id\" href=\"#final_start\">final_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#final_start\">final_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#final_end\">final_end</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#real_removed_size\">real_removed_size</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#update_e820\">update_e820</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nr_map\">nr_map</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_map\">nr_map</a> = <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>), &amp;<a class=\"id\" href=\"#nr_map\">nr_map</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a> = <a class=\"id\" href=\"#nr_map\">nr_map</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"modified physical RAM map:\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_print_map\">e820_print_map</a>(\"modified\");", 
"}", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#update_e820_saved\">update_e820_saved</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nr_map\">nr_map</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_map\">nr_map</a> = <a class=\"id\" href=\"#e820_saved\">e820_saved</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(<a class=\"id\" href=\"#e820_saved\">e820_saved</a>.<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#e820_saved\">e820_saved</a>.<a class=\"id\" href=\"#map\">map</a>), &amp;<a class=\"id\" href=\"#nr_map\">nr_map</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_saved\">e820_saved</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a> = <a class=\"id\" href=\"#nr_map\">nr_map</a>;", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_GAP_END\">MAX_GAP_END</a> 0x100000000ull", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Search for a gap in the e820 memory space from start_addr to end_addr.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#e820_search_gap\">e820_search_gap</a>(unsigned long *<a class=\"id\" href=\"#gapstart\">gapstart</a>, unsigned long *<a class=\"id\" href=\"#gapsize\">gapsize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_addr\">start_addr</a>, unsigned long long <a class=\"id\" href=\"#end_addr\">end_addr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = (<a class=\"id\" href=\"#end_addr\">end_addr</a> && <a class=\"id\" href=\"#end_addr\">end_addr</a> &lt; <a class=\"id\" href=\"#MAX_GAP_END\">MAX_GAP_END</a>) ? <a class=\"id\" href=\"#end_addr\">end_addr</a> : <a class=\"id\" href=\"#MAX_GAP_END\">MAX_GAP_END</a>;", 
"", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> &lt; <a class=\"id\" href=\"#start_addr\">start_addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Since \"last\" is at most 4GB, we know we'll</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * fit in 32 bits if this condition is true</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last\">last</a> &gt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#gap\">gap</a> = <a class=\"id\" href=\"#last\">last</a> - <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gap\">gap</a> >= *<a class=\"id\" href=\"#gapsize\">gapsize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#gapsize\">gapsize</a> = <a class=\"id\" href=\"#gap\">gap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#gapstart\">gapstart</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> &lt; <a class=\"id\" href=\"#last\">last</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Search for the biggest gap in the low 32 bits of the e820</span>", 
"<span class=\"comment\"> * memory space.  We pass this space to PCI to assign MMIO resources</span>", 
"<span class=\"comment\"> * for hotplug or unconfigured devices in.</span>", 
"<span class=\"comment\"> * Hopefully the BIOS let enough space left.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#e820_setup_gap\">e820_setup_gap</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#gapstart\">gapstart</a>, <a class=\"id\" href=\"#gapsize\">gapsize</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gapstart\">gapstart</a> = 0x10000000;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gapsize\">gapsize</a> = 0x400000;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a>  = <a class=\"id\" href=\"#e820_search_gap\">e820_search_gap</a>(&amp;<a class=\"id\" href=\"#gapstart\">gapstart</a>, &amp;<a class=\"id\" href=\"#gapsize\">gapsize</a>, 0, <a class=\"id\" href=\"#MAX_GAP_END\">MAX_GAP_END</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gapstart\">gapstart</a> = (<a class=\"id\" href=\"#max_pfn\">max_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) + 1024*1024;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/>\"PCI: Warning: Cannot find a gap in the 32bit address range\\n\"", 
"<span class=\"ts\"/>\"PCI: Unassigned devices with 32bit resource registers may break!\\n\");", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * e820_reserve_resources_late protect stolen RAM already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_mem_start\">pci_mem_start</a> = <a class=\"id\" href=\"#gapstart\">gapstart</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/>       \"Allocating PCI resources starting at %lx (gap: %lx:%lx)\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#pci_mem_start\">pci_mem_start</a>, <a class=\"id\" href=\"#gapstart\">gapstart</a>, <a class=\"id\" href=\"#gapsize\">gapsize</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * Because of the size limitation of struct boot_params, only first</span>", 
"<span class=\"comment\"> * 128 E820 memory entries are passed to kernel via</span>", 
"<span class=\"comment\"> * boot_params.e820_map, others are passed via SETUP_E820_EXT node of</span>", 
"<span class=\"comment\"> * linked list of struct setup_data, which is parsed here.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_e820_ext\">parse_e820_ext</a>(struct <a class=\"id\" href=\"#setup_data\">setup_data</a> *<a class=\"id\" href=\"#sdata\">sdata</a>, unsigned long <a class=\"id\" href=\"#pa_data\">pa_data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#map_len\">map_len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#entries\">entries</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#extmap\">extmap</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entries\">entries</a> = <a class=\"id\" href=\"#sdata\">sdata</a>-><a class=\"id\" href=\"#len\">len</a> / sizeof(struct <a class=\"id\" href=\"#e820entry\">e820entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map_len\">map_len</a> = <a class=\"id\" href=\"#sdata\">sdata</a>-><a class=\"id\" href=\"#len\">len</a> + sizeof(struct <a class=\"id\" href=\"#setup_data\">setup_data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#map_len\">map_len</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdata\">sdata</a> = <a class=\"id\" href=\"#early_ioremap\">early_ioremap</a>(<a class=\"id\" href=\"#pa_data\">pa_data</a>, <a class=\"id\" href=\"#map_len\">map_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#extmap\">extmap</a> = (struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *)(<a class=\"id\" href=\"#sdata\">sdata</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__append_e820_map\">__append_e820_map</a>(<a class=\"id\" href=\"#extmap\">extmap</a>, <a class=\"id\" href=\"#entries\">entries</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>), &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#map_len\">map_len</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#sdata\">sdata</a>, <a class=\"id\" href=\"#map_len\">map_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"extended physical RAM map:\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_print_map\">e820_print_map</a>(\"extended\");", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>) || \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_HIBERNATION\">CONFIG_HIBERNATION</a>))", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * Find the ranges of physical addresses that do not correspond to</span>", 
"<span class=\"comment\"> * e820 RAM areas and mark the corresponding pages as nosave for</span>", 
"<span class=\"comment\"> * hibernation (32 bit) or software suspend and suspend to RAM (64 bit).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function requires the e820 map to be sorted and without any</span>", 
"<span class=\"comment\"> * overlapping entries and assumes the first e820 area to be RAM.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_mark_nosave_regions\">e820_mark_nosave_regions</a>(unsigned long <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#PFN_DOWN\">PFN_DOWN</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[0].<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[0].<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 1; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#ei\">ei</a> = &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pfn\">pfn</a> &lt; <a class=\"id\" href=\"#PFN_UP\">PFN_UP</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#register_nosave_region\">register_nosave_region</a>(<a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#PFN_UP\">PFN_UP</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#PFN_DOWN\">PFN_DOWN</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a> && <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#E820_RESERVED_KERN\">E820_RESERVED_KERN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#register_nosave_region\">register_nosave_region</a>(<a class=\"id\" href=\"#PFN_UP\">PFN_UP</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>), <a class=\"id\" href=\"#pfn\">pfn</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pfn\">pfn</a> >= <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
];
xr_frag_insert('l/c0/411b7fdb22cc610c2d87ee3ea74bb9f9388969.xr', __xr_tmp);
