var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_MMZONE_H\">_LINUX_MMZONE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_MMZONE_H\">_LINUX_MMZONE_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__GENERATING_BOUNDS_H\">__GENERATING_BOUNDS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#threads\">threads</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#numa\">numa</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seqlock\">seqlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nodemask\">nodemask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pageblock\">pageblock</a>-<a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#generated\">generated</a>/<a class=\"id\" href=\"#bounds\">bounds</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Free memory management - zoned buddy allocator.  */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_FORCE_MAX_ZONEORDER\">CONFIG_FORCE_MAX_ZONEORDER</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a> 11", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a> <a class=\"id\" href=\"#CONFIG_FORCE_MAX_ZONEORDER\">CONFIG_FORCE_MAX_ZONEORDER</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ORDER_NR_PAGES\">MAX_ORDER_NR_PAGES</a> (1 << (<a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a> - 1))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PAGE_ALLOC_COSTLY_ORDER is the order at which allocations are deemed</span>", 
"<span class=\"comment\"> * costly to service.  That is between allocation orders which should</span>", 
"<span class=\"comment\"> * coelesce naturally under reasonable reclaim pressure and those which</span>", 
"<span class=\"comment\"> * will not.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PAGE_ALLOC_COSTLY_ORDER\">PAGE_ALLOC_COSTLY_ORDER</a> 3", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIGRATE_UNMOVABLE\">MIGRATE_UNMOVABLE</a>     0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIGRATE_RECLAIMABLE\">MIGRATE_RECLAIMABLE</a>   1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIGRATE_MOVABLE\">MIGRATE_MOVABLE</a>       2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIGRATE_PCPTYPES\">MIGRATE_PCPTYPES</a>      3 <span class=\"comment\">/* the number of types on the pcp lists */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIGRATE_RESERVE\">MIGRATE_RESERVE</a>       3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIGRATE_ISOLATE\">MIGRATE_ISOLATE</a>       4 <span class=\"comment\">/* can't allocate from here */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIGRATE_TYPES\">MIGRATE_TYPES</a>         5", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_migratetype_order\">for_each_migratetype_order</a>(<a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#type\">type</a>) \\", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#order\">order</a> = 0; <a class=\"id\" href=\"#order\">order</a> &lt; <a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a>; <a class=\"id\" href=\"#order\">order</a>++) \\", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#type\">type</a> = 0; <a class=\"id\" href=\"#type\">type</a> &lt; <a class=\"id\" href=\"#MIGRATE_TYPES\">MIGRATE_TYPES</a>; <a class=\"id\" href=\"#type\">type</a>++)", 
"", 
"extern int <a class=\"id\" href=\"#page_group_by_mobility_disabled\">page_group_by_mobility_disabled</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#get_pageblock_migratetype\">get_pageblock_migratetype</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#get_pageblock_flags_group\">get_pageblock_flags_group</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#PB_migrate\">PB_migrate</a>, <a class=\"id\" href=\"#PB_migrate_end\">PB_migrate_end</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#free_area\">free_area</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#free_list\">free_list</a>[<a class=\"id\" href=\"#MIGRATE_TYPES\">MIGRATE_TYPES</a>];", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_free\">nr_free</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pglist_data\">pglist_data</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * zone-&gt;lock and zone-&gt;lru_lock are two of the hottest locks in the kernel.</span>", 
"<span class=\"comment\"> * So add a wild amount of padding here to ensure that they fall into separate</span>", 
"<span class=\"comment\"> * cachelines.  There are very few zone structures in the machine, so space</span>", 
"<span class=\"comment\"> * consumption is not a concern here.</span>", 
"<span class=\"comment\"> */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>)", 
"struct <a class=\"id\" href=\"#zone_padding\">zone_padding</a> {", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#x\">x</a>[0];", 
"} <a class=\"id\" href=\"#____cacheline_internodealigned_in_smp\">____cacheline_internodealigned_in_smp</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ZONE_PADDING\">ZONE_PADDING</a>(<a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone_padding\">zone_padding</a> <a class=\"id\" href=\"#name\">name</a>;", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ZONE_PADDING\">ZONE_PADDING</a>(<a class=\"id\" href=\"#name\">name</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"enum <a class=\"id\" href=\"#zone_stat_item\">zone_stat_item</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* First 128 byte cacheline (assuming 64 bit words) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_FREE_PAGES\">NR_FREE_PAGES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_LRU_BASE\">NR_LRU_BASE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_INACTIVE_ANON\">NR_INACTIVE_ANON</a> = <a class=\"id\" href=\"#NR_LRU_BASE\">NR_LRU_BASE</a>, <span class=\"comment\">/* must match order of LRU_[IN]ACTIVE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_ACTIVE_ANON\">NR_ACTIVE_ANON</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  \"     \"     \"   \"       \"         */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_INACTIVE_FILE\">NR_INACTIVE_FILE</a>,<span class=\"ts\"/><span class=\"comment\">/*  \"     \"     \"   \"       \"         */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_ACTIVE_FILE\">NR_ACTIVE_FILE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  \"     \"     \"   \"       \"         */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_UNEVICTABLE\">NR_UNEVICTABLE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  \"     \"     \"   \"       \"         */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_MLOCK\">NR_MLOCK</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* mlock()ed pages found and moved off LRU */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_ANON_PAGES\">NR_ANON_PAGES</a>,<span class=\"ts\"/><span class=\"comment\">/* Mapped anonymous pages */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_FILE_MAPPED\">NR_FILE_MAPPED</a>,<span class=\"ts\"/><span class=\"comment\">/* pagecache pages mapped into pagetables.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   only modified from process context */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_FILE_PAGES\">NR_FILE_PAGES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_FILE_DIRTY\">NR_FILE_DIRTY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_WRITEBACK\">NR_WRITEBACK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_SLAB_RECLAIMABLE\">NR_SLAB_RECLAIMABLE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_SLAB_UNRECLAIMABLE\">NR_SLAB_UNRECLAIMABLE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_PAGETABLE\">NR_PAGETABLE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* used for pagetables */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_KERNEL_STACK\">NR_KERNEL_STACK</a>,", 
"<span class=\"ts\"/><span class=\"comment\">/* Second 128 byte cacheline */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_UNSTABLE_NFS\">NR_UNSTABLE_NFS</a>,<span class=\"ts\"/><span class=\"comment\">/* NFS unstable pages */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_BOUNCE\">NR_BOUNCE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_VMSCAN_WRITE\">NR_VMSCAN_WRITE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_WRITEBACK_TEMP\">NR_WRITEBACK_TEMP</a>,<span class=\"ts\"/><span class=\"comment\">/* Writeback using temporary buffers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_ISOLATED_ANON\">NR_ISOLATED_ANON</a>,<span class=\"ts\"/><span class=\"comment\">/* Temporary isolated pages from anon lru */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_ISOLATED_FILE\">NR_ISOLATED_FILE</a>,<span class=\"ts\"/><span class=\"comment\">/* Temporary isolated pages from file lru */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_SHMEM\">NR_SHMEM</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* shmem pages (included tmpfs/GEM pages) */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NUMA_HIT\">NUMA_HIT</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allocated in intended node */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NUMA_MISS\">NUMA_MISS</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allocated in non intended node */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NUMA_FOREIGN\">NUMA_FOREIGN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* was intended here, hit elsewhere */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NUMA_INTERLEAVE_HIT\">NUMA_INTERLEAVE_HIT</a>,<span class=\"ts\"/><span class=\"comment\">/* interleaver preferred this zone */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NUMA_LOCAL\">NUMA_LOCAL</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allocation from local node */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NUMA_OTHER\">NUMA_OTHER</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allocation from other node */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_VM_ZONE_STAT_ITEMS\">NR_VM_ZONE_STAT_ITEMS</a> };", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We do arithmetic on the LRU lists in various places in the code,</span>", 
"<span class=\"comment\"> * so it is important to keep the active lists LRU_ACTIVE higher in</span>", 
"<span class=\"comment\"> * the array than the corresponding inactive lists, and to keep</span>", 
"<span class=\"comment\"> * the *_FILE lists LRU_FILE higher than the corresponding _ANON lists.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This has to be kept in sync with the statistics in zone_stat_item</span>", 
"<span class=\"comment\"> * above and the descriptions in vmstat_text in mm/vmstat.c</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LRU_BASE\">LRU_BASE</a> 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LRU_ACTIVE\">LRU_ACTIVE</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LRU_FILE\">LRU_FILE</a> 2", 
"", 
"enum <a class=\"id\" href=\"#lru_list\">lru_list</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LRU_INACTIVE_ANON\">LRU_INACTIVE_ANON</a> = <a class=\"id\" href=\"#LRU_BASE\">LRU_BASE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LRU_ACTIVE_ANON\">LRU_ACTIVE_ANON</a> = <a class=\"id\" href=\"#LRU_BASE\">LRU_BASE</a> + <a class=\"id\" href=\"#LRU_ACTIVE\">LRU_ACTIVE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LRU_INACTIVE_FILE\">LRU_INACTIVE_FILE</a> = <a class=\"id\" href=\"#LRU_BASE\">LRU_BASE</a> + <a class=\"id\" href=\"#LRU_FILE\">LRU_FILE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LRU_ACTIVE_FILE\">LRU_ACTIVE_FILE</a> = <a class=\"id\" href=\"#LRU_BASE\">LRU_BASE</a> + <a class=\"id\" href=\"#LRU_FILE\">LRU_FILE</a> + <a class=\"id\" href=\"#LRU_ACTIVE\">LRU_ACTIVE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LRU_UNEVICTABLE\">LRU_UNEVICTABLE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_LRU_LISTS\">NR_LRU_LISTS</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_lru\">for_each_lru</a>(<a class=\"id\" href=\"#l\">l</a>) for (<a class=\"id\" href=\"#l\">l</a> = 0; <a class=\"id\" href=\"#l\">l</a> &lt; <a class=\"id\" href=\"#NR_LRU_LISTS\">NR_LRU_LISTS</a>; <a class=\"id\" href=\"#l\">l</a>++)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_evictable_lru\">for_each_evictable_lru</a>(<a class=\"id\" href=\"#l\">l</a>) for (<a class=\"id\" href=\"#l\">l</a> = 0; <a class=\"id\" href=\"#l\">l</a> <= <a class=\"id\" href=\"#LRU_ACTIVE_FILE\">LRU_ACTIVE_FILE</a>; <a class=\"id\" href=\"#l\">l</a>++)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_file_lru\">is_file_lru</a>(enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#l\">l</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#l\">l</a> == <a class=\"id\" href=\"#LRU_INACTIVE_FILE\">LRU_INACTIVE_FILE</a> || <a class=\"id\" href=\"#l\">l</a> == <a class=\"id\" href=\"#LRU_ACTIVE_FILE\">LRU_ACTIVE_FILE</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_active_lru\">is_active_lru</a>(enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#l\">l</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#l\">l</a> == <a class=\"id\" href=\"#LRU_ACTIVE_ANON\">LRU_ACTIVE_ANON</a> || <a class=\"id\" href=\"#l\">l</a> == <a class=\"id\" href=\"#LRU_ACTIVE_FILE\">LRU_ACTIVE_FILE</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_unevictable_lru\">is_unevictable_lru</a>(enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#l\">l</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#l\">l</a> == <a class=\"id\" href=\"#LRU_UNEVICTABLE\">LRU_UNEVICTABLE</a>);", 
"}", 
"", 
"enum <a class=\"id\" href=\"#zone_watermarks\">zone_watermarks</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WMARK_MIN\">WMARK_MIN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WMARK_LOW\">WMARK_LOW</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WMARK_HIGH\">WMARK_HIGH</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_WMARK\">NR_WMARK</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#min_wmark_pages\">min_wmark_pages</a>(<a class=\"id\" href=\"#z\">z</a>) (<a class=\"id\" href=\"#z\">z</a>-><a class=\"id\" href=\"#watermark\">watermark</a>[<a class=\"id\" href=\"#WMARK_MIN\">WMARK_MIN</a>])", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#low_wmark_pages\">low_wmark_pages</a>(<a class=\"id\" href=\"#z\">z</a>) (<a class=\"id\" href=\"#z\">z</a>-><a class=\"id\" href=\"#watermark\">watermark</a>[<a class=\"id\" href=\"#WMARK_LOW\">WMARK_LOW</a>])", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#high_wmark_pages\">high_wmark_pages</a>(<a class=\"id\" href=\"#z\">z</a>) (<a class=\"id\" href=\"#z\">z</a>-><a class=\"id\" href=\"#watermark\">watermark</a>[<a class=\"id\" href=\"#WMARK_HIGH\">WMARK_HIGH</a>])", 
"", 
"struct <a class=\"id\" href=\"#per_cpu_pages\">per_cpu_pages</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of pages in the list */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#high\">high</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* high watermark, emptying needed */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#batch\">batch</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* chunk size for buddy add/remove */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Lists of pages, one per migrate type stored on the pcp-lists */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#lists\">lists</a>[<a class=\"id\" href=\"#MIGRATE_PCPTYPES\">MIGRATE_PCPTYPES</a>];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#per_cpu_pageset\">per_cpu_pageset</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#per_cpu_pages\">per_cpu_pages</a> <a class=\"id\" href=\"#pcp\">pcp</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s8\">s8</a> <a class=\"id\" href=\"#expire\">expire</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s8\">s8</a> <a class=\"id\" href=\"#stat_threshold\">stat_threshold</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s8\">s8</a> <a class=\"id\" href=\"#vm_stat_diff\">vm_stat_diff</a>[<a class=\"id\" href=\"#NR_VM_ZONE_STAT_ITEMS\">NR_VM_ZONE_STAT_ITEMS</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !__GENERATING_BOUNDS.H */</span>", 
"", 
"enum <a class=\"id\" href=\"#zone_type\">zone_type</a> {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ZONE_DMA\">CONFIG_ZONE_DMA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ZONE_DMA is used when there are devices that are not able</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to do DMA to all of addressable memory (ZONE_NORMAL). Then we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * carve out the portion of memory that is needed for these devices.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The range is arch specific.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some examples</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Architecture<span class=\"ts\"/><span class=\"ts\"/>Limit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ---------------------------</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * parisc, ia64, sparc<span class=\"ts\"/>&lt;4G</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * s390<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&lt;2G</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * arm<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Various</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * alpha<span class=\"ts\"/><span class=\"ts\"/>Unlimited or 0-16MB.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i386, x86_64 and multiple other arches</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&lt;16M.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZONE_DMA\">ZONE_DMA</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ZONE_DMA32\">CONFIG_ZONE_DMA32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * x86_64 needs two ZONE_DMAs because it supports devices that are</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only able to do DMA to the lower 16M but also 32 bit devices that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can only do DMA areas below 4G.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZONE_DMA32\">ZONE_DMA32</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Normal addressable memory is in ZONE_NORMAL. DMA operations can be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * performed on pages in ZONE_NORMAL if the DMA devices support</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transfers to all addressable memory.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZONE_NORMAL\">ZONE_NORMAL</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGHMEM\">CONFIG_HIGHMEM</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A memory area that is only addressable by the kernel through</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mapping portions into its own address space. This is for example</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * used by i386 to allow the kernel to address the memory beyond</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 900MB. The kernel will set up special mappings (page</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * table entries on i386) for each page that the kernel needs to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * access.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZONE_HIGHMEM\">ZONE_HIGHMEM</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZONE_MOVABLE\">ZONE_MOVABLE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__MAX_NR_ZONES\">__MAX_NR_ZONES</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__GENERATING_BOUNDS_H\">__GENERATING_BOUNDS_H</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * When a memory allocation must conform to specific limitations (such</span>", 
"<span class=\"comment\"> * as being suitable for DMA) the caller will pass in hints to the</span>", 
"<span class=\"comment\"> * allocator in the gfp_mask, in the zone modifier bits.  These bits</span>", 
"<span class=\"comment\"> * are used to select a priority ordered list of memory zones which</span>", 
];
xr_frag_insert('l/c0/6587516c2e63d995321c9961f56c608e703892.xr', __xr_tmp);
