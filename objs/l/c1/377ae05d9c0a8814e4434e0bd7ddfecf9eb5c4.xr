var __xr_tmp = [
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOPT_WINDOW\">TCPOPT_WINDOW</a><span class=\"ts\"/><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* Window scaling */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOPT_SACK_PERM\">TCPOPT_SACK_PERM</a>        4       <span class=\"comment\">/* SACK Permitted */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOPT_SACK\">TCPOPT_SACK</a>             5       <span class=\"comment\">/* SACK Block */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOPT_TIMESTAMP\">TCPOPT_TIMESTAMP</a><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"comment\">/* Better RTT estimations/PAWS */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOPT_MD5SIG\">TCPOPT_MD5SIG</a><span class=\"ts\"/><span class=\"ts\"/>19<span class=\"ts\"/><span class=\"comment\">/* MD5 Signature (RFC2385) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOPT_COOKIE\">TCPOPT_COOKIE</a><span class=\"ts\"/><span class=\"ts\"/>253<span class=\"ts\"/><span class=\"comment\">/* Cookie extension (experimental) */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *     TCP option lengths</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_MSS\">TCPOLEN_MSS</a>            4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_WINDOW\">TCPOLEN_WINDOW</a>         3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_SACK_PERM\">TCPOLEN_SACK_PERM</a>      2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_TIMESTAMP\">TCPOLEN_TIMESTAMP</a>      10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_MD5SIG\">TCPOLEN_MD5SIG</a>         18", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a>    2<span class=\"ts\"/><span class=\"comment\">/* Cookie-less header extension */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_COOKIE_PAIR\">TCPOLEN_COOKIE_PAIR</a>    3<span class=\"ts\"/><span class=\"comment\">/* Cookie pair header extension */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_COOKIE_MIN\">TCPOLEN_COOKIE_MIN</a>     (<a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a>+<a class=\"id\" href=\"#TCP_COOKIE_MIN\">TCP_COOKIE_MIN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_COOKIE_MAX\">TCPOLEN_COOKIE_MAX</a>     (<a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a>+<a class=\"id\" href=\"#TCP_COOKIE_MAX\">TCP_COOKIE_MAX</a>)", 
"", 
"<span class=\"comment\">/* But this is what stacks really send out. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a><span class=\"ts\"/><span class=\"ts\"/>12", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_WSCALE_ALIGNED\">TCPOLEN_WSCALE_ALIGNED</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_SACKPERM_ALIGNED\">TCPOLEN_SACKPERM_ALIGNED</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_SACK_BASE\">TCPOLEN_SACK_BASE</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_SACK_BASE_ALIGNED\">TCPOLEN_SACK_BASE_ALIGNED</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_SACK_PERBLOCK\">TCPOLEN_SACK_PERBLOCK</a><span class=\"ts\"/><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_MD5SIG_ALIGNED\">TCPOLEN_MD5SIG_ALIGNED</a><span class=\"ts\"/><span class=\"ts\"/>20", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPOLEN_MSS_ALIGNED\">TCPOLEN_MSS_ALIGNED</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"", 
"<span class=\"comment\">/* Flags in tp-&gt;nonagle */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_NAGLE_OFF\">TCP_NAGLE_OFF</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* Nagle's algo is disabled */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_NAGLE_CORK\">TCP_NAGLE_CORK</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* Socket is corked<span class=\"ts\"/>    */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_NAGLE_PUSH\">TCP_NAGLE_PUSH</a><span class=\"ts\"/><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* Cork is overridden for already queued data */</span>", 
"", 
"<span class=\"comment\">/* TCP thin-stream limits */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_THIN_LINEAR_RETRIES\">TCP_THIN_LINEAR_RETRIES</a> 6       <span class=\"comment\">/* After 6 linear retries, do exp. backoff */</span>", 
"", 
"extern struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> <a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>;", 
"", 
"<span class=\"comment\">/* sysctl variables for tcp */</span>", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_timestamps\">sysctl_tcp_timestamps</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_window_scaling\">sysctl_tcp_window_scaling</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_sack\">sysctl_tcp_sack</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_fin_timeout\">sysctl_tcp_fin_timeout</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_keepalive_time\">sysctl_tcp_keepalive_time</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_keepalive_probes\">sysctl_tcp_keepalive_probes</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_keepalive_intvl\">sysctl_tcp_keepalive_intvl</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_syn_retries\">sysctl_tcp_syn_retries</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_synack_retries\">sysctl_tcp_synack_retries</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_retries1\">sysctl_tcp_retries1</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_retries2\">sysctl_tcp_retries2</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_orphan_retries\">sysctl_tcp_orphan_retries</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_syncookies\">sysctl_tcp_syncookies</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_retrans_collapse\">sysctl_tcp_retrans_collapse</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_stdurg\">sysctl_tcp_stdurg</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_rfc1337\">sysctl_tcp_rfc1337</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_abort_on_overflow\">sysctl_tcp_abort_on_overflow</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_max_orphans\">sysctl_tcp_max_orphans</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_fack\">sysctl_tcp_fack</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_reordering\">sysctl_tcp_reordering</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_ecn\">sysctl_tcp_ecn</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_dsack\">sysctl_tcp_dsack</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_mem\">sysctl_tcp_mem</a>[3];", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_wmem\">sysctl_tcp_wmem</a>[3];", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_rmem\">sysctl_tcp_rmem</a>[3];", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_app_win\">sysctl_tcp_app_win</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_adv_win_scale\">sysctl_tcp_adv_win_scale</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_tw_reuse\">sysctl_tcp_tw_reuse</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_frto\">sysctl_tcp_frto</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_frto_response\">sysctl_tcp_frto_response</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_low_latency\">sysctl_tcp_low_latency</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_dma_copybreak\">sysctl_tcp_dma_copybreak</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_nometrics_save\">sysctl_tcp_nometrics_save</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_moderate_rcvbuf\">sysctl_tcp_moderate_rcvbuf</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_tso_win_divisor\">sysctl_tcp_tso_win_divisor</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_abc\">sysctl_tcp_abc</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_mtu_probing\">sysctl_tcp_mtu_probing</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_base_mss\">sysctl_tcp_base_mss</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_workaround_signed_windows\">sysctl_tcp_workaround_signed_windows</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_slow_start_after_idle\">sysctl_tcp_slow_start_after_idle</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_max_ssthresh\">sysctl_tcp_max_ssthresh</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_thin_linear_timeouts\">sysctl_tcp_thin_linear_timeouts</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_thin_dupack\">sysctl_tcp_thin_dupack</a>;", 
"", 
"extern <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#tcp_memory_allocated\">tcp_memory_allocated</a>;", 
"extern struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#tcp_sockets_allocated\">tcp_sockets_allocated</a>;", 
"extern int <a class=\"id\" href=\"#tcp_memory_pressure\">tcp_memory_pressure</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The next routines deal with comparing 32 bit unsigned ints</span>", 
"<span class=\"comment\"> * and worry about wraparound (automatic with unsigned arithmetic).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#seq1\">seq1</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#seq2\">seq2</a>)", 
"{", 
"        return (<a class=\"id\" href=\"#__s32\">__s32</a>)(<a class=\"id\" href=\"#seq1\">seq1</a>-<a class=\"id\" href=\"#seq2\">seq2</a>) &lt; 0;", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#seq2\">seq2</a>, <a class=\"id\" href=\"#seq1\">seq1</a>) <span class=\"ts\"/><a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#seq1\">seq1</a>, <a class=\"id\" href=\"#seq2\">seq2</a>)", 
"", 
"<span class=\"comment\">/* is s2&lt;=s1&lt;=s3 ? */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#between\">between</a>(<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#seq1\">seq1</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#seq2\">seq2</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#seq3\">seq3</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq3\">seq3</a> - <a class=\"id\" href=\"#seq2\">seq2</a> >= <a class=\"id\" href=\"#seq1\">seq1</a> - <a class=\"id\" href=\"#seq2\">seq2</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tcp_too_many_orphans\">tcp_too_many_orphans</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#shift\">shift</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#ocp\">ocp</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#orphan_count\">orphan_count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#orphans\">orphans</a> = <a class=\"id\" href=\"#percpu_counter_read_positive\">percpu_counter_read_positive</a>(<a class=\"id\" href=\"#ocp\">ocp</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orphans\">orphans</a> << <a class=\"id\" href=\"#shift\">shift</a> &gt; <a class=\"id\" href=\"#sysctl_tcp_max_orphans\">sysctl_tcp_max_orphans</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orphans\">orphans</a> = <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(<a class=\"id\" href=\"#ocp\">ocp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#orphans\">orphans</a> << <a class=\"id\" href=\"#shift\">shift</a> &gt; <a class=\"id\" href=\"#sysctl_tcp_max_orphans\">sysctl_tcp_max_orphans</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a> &gt; <a class=\"id\" href=\"#SOCK_MIN_SNDBUF\">SOCK_MIN_SNDBUF</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#tcp_memory_allocated\">tcp_memory_allocated</a>) &gt; <a class=\"id\" href=\"#sysctl_tcp_mem\">sysctl_tcp_mem</a>[2])", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"<span class=\"comment\">/* syncookies: remember time of last synqueue overflow */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_synq_overflow\">tcp_synq_overflow</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"}", 
"", 
"<span class=\"comment\">/* syncookies: no recent synqueue overflow on this listening socket? */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_synq_no_recent_overflow\">tcp_synq_no_recent_overflow</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_overflow\">last_overflow</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#last_overflow\">last_overflow</a> + <a class=\"id\" href=\"#TCP_TIMEOUT_INIT\">TCP_TIMEOUT_INIT</a>);", 
"}", 
"", 
"extern struct <a class=\"id\" href=\"#proto\">proto</a> <a class=\"id\" href=\"#tcp_prot\">tcp_prot</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_INC_STATS\">TCP_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#field\">field</a>)<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_INC_STATS\">SNMP_INC_STATS</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>, <a class=\"id\" href=\"#field\">field</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#field\">field</a>)<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_INC_STATS_BH\">SNMP_INC_STATS_BH</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>, <a class=\"id\" href=\"#field\">field</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_DEC_STATS\">TCP_DEC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#field\">field</a>)<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_DEC_STATS\">SNMP_DEC_STATS</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>, <a class=\"id\" href=\"#field\">field</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_ADD_STATS_USER\">TCP_ADD_STATS_USER</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#SNMP_ADD_STATS_USER\">SNMP_ADD_STATS_USER</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#val\">val</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_ADD_STATS\">TCP_ADD_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_ADD_STATS\">SNMP_ADD_STATS</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#val\">val</a>)", 
"", 
"extern void <a class=\"id\" href=\"#tcp_v4_err\">tcp_v4_err</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a>);", 
"", 
"extern void <a class=\"id\" href=\"#tcp_shutdown\">tcp_shutdown</a> (struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#how\">how</a>);", 
"", 
"extern int <a class=\"id\" href=\"#tcp_v4_rcv\">tcp_v4_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"extern int <a class=\"id\" href=\"#tcp_v4_remember_stamp\">tcp_v4_remember_stamp</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern int <a class=\"id\" href=\"#tcp_v4_tw_remember_stamp\">tcp_v4_tw_remember_stamp</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>);", 
"extern int <a class=\"id\" href=\"#tcp_sendmsg\">tcp_sendmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>);", 
"extern int <a class=\"id\" href=\"#tcp_sendpage\">tcp_sendpage</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern int <a class=\"id\" href=\"#tcp_ioctl\">tcp_ioctl</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"extern int <a class=\"id\" href=\"#tcp_rcv_state_process\">tcp_rcv_state_process</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>, unsigned <a class=\"id\" href=\"#len\">len</a>);", 
"extern int <a class=\"id\" href=\"#tcp_rcv_established\">tcp_rcv_established</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>, unsigned <a class=\"id\" href=\"#len\">len</a>);", 
"extern void <a class=\"id\" href=\"#tcp_rcv_space_adjust\">tcp_rcv_space_adjust</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#tcp_cleanup_rbuf\">tcp_cleanup_rbuf</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#copied\">copied</a>);", 
"extern int <a class=\"id\" href=\"#tcp_twsk_unique\">tcp_twsk_unique</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sktw\">sktw</a>, void *<a class=\"id\" href=\"#twp\">twp</a>);", 
"extern void <a class=\"id\" href=\"#tcp_twsk_destructor\">tcp_twsk_destructor</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tcp_splice_read\">tcp_splice_read</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_dec_quickack_mode\">tcp_dec_quickack_mode</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const unsigned int <a class=\"id\" href=\"#pkts\">pkts</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#quick\">quick</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pkts\">pkts</a> >= <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#quick\">quick</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#quick\">quick</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Leaving quickack mode we deflate ATO. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#ato\">ato</a>   = <a class=\"id\" href=\"#TCP_ATO_MIN\">TCP_ATO_MIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#quick\">quick</a> -= <a class=\"id\" href=\"#pkts\">pkts</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#tcp_enter_quickack_mode\">tcp_enter_quickack_mode</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_OK\">TCP_ECN_OK</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_QUEUE_CWR\">TCP_ECN_QUEUE_CWR</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_DEMAND_CWR\">TCP_ECN_DEMAND_CWR</a><span class=\"ts\"/>4", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void", 
"<a class=\"id\" href=\"#TCP_ECN_create_request\">TCP_ECN_create_request</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>, struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_ecn\">sysctl_tcp_ecn</a> && <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ece\">ece</a> && <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#cwr\">cwr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#ecn_ok\">ecn_ok</a> = 1;", 
"}", 
"", 
"enum <a class=\"id\" href=\"#tcp_tw_status\">tcp_tw_status</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_TW_SUCCESS\">TCP_TW_SUCCESS</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_TW_RST\">TCP_TW_RST</a> = 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_TW_ACK\">TCP_TW_ACK</a> = 2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_TW_SYN\">TCP_TW_SYN</a> = 3", 
"};", 
"", 
"", 
"extern enum <a class=\"id\" href=\"#tcp_tw_status\">tcp_tw_status</a> <a class=\"id\" href=\"#tcp_timewait_state_process\">tcp_timewait_state_process</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>);", 
"extern struct <a class=\"id\" href=\"#sock\">sock</a> * <a class=\"id\" href=\"#tcp_check_req\">tcp_check_req</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#request_sock\">request_sock</a> **<a class=\"id\" href=\"#prev\">prev</a>);", 
"extern int <a class=\"id\" href=\"#tcp_child_process\">tcp_child_process</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#child\">child</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int <a class=\"id\" href=\"#tcp_use_frto\">tcp_use_frto</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#tcp_enter_frto\">tcp_enter_frto</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#tcp_enter_loss\">tcp_enter_loss</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#how\">how</a>);", 
"extern void <a class=\"id\" href=\"#tcp_clear_retrans\">tcp_clear_retrans</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>);", 
"extern void <a class=\"id\" href=\"#tcp_update_metrics\">tcp_update_metrics</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#tcp_close\">tcp_close</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"extern unsigned int <a class=\"id\" href=\"#tcp_poll\">tcp_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#poll_table_struct\">poll_table_struct</a> *<a class=\"id\" href=\"#wait\">wait</a>);", 
"extern int <a class=\"id\" href=\"#tcp_getsockopt\">tcp_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>);", 
"extern int <a class=\"id\" href=\"#tcp_setsockopt\">tcp_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"extern int <a class=\"id\" href=\"#compat_tcp_getsockopt\">compat_tcp_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>);", 
"extern int <a class=\"id\" href=\"#compat_tcp_setsockopt\">compat_tcp_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"extern void <a class=\"id\" href=\"#tcp_set_keepalive\">tcp_set_keepalive</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#val\">val</a>);", 
"extern void <a class=\"id\" href=\"#tcp_syn_ack_timeout\">tcp_syn_ack_timeout</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"extern int <a class=\"id\" href=\"#tcp_recvmsg\">tcp_recvmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#nonblock\">nonblock</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int *<a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"extern void <a class=\"id\" href=\"#tcp_parse_options\">tcp_parse_options</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> *<a class=\"id\" href=\"#opt_rx\">opt_rx</a>, <a class=\"id\" href=\"#u8\">u8</a> **<a class=\"id\" href=\"#hvpp\">hvpp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#estab\">estab</a>);", 
"extern <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#tcp_parse_md5sig_option\">tcp_parse_md5sig_option</a>(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>TCP v4 functions exported for the inet6 API</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern void <a class=\"id\" href=\"#tcp_v4_send_check\">tcp_v4_send_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int <a class=\"id\" href=\"#tcp_v4_conn_request\">tcp_v4_conn_request</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern struct <a class=\"id\" href=\"#sock\">sock</a> * <a class=\"id\" href=\"#tcp_create_openreq_child\">tcp_create_openreq_child</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern struct <a class=\"id\" href=\"#sock\">sock</a> * <a class=\"id\" href=\"#tcp_v4_syn_recv_sock\">tcp_v4_syn_recv_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>);", 
"extern int <a class=\"id\" href=\"#tcp_v4_do_rcv\">tcp_v4_do_rcv</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int <a class=\"id\" href=\"#tcp_v4_connect\">tcp_v4_connect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"extern int <a class=\"id\" href=\"#tcp_connect\">tcp_connect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> * <a class=\"id\" href=\"#tcp_make_synack\">tcp_make_synack</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request_values\">request_values</a> *<a class=\"id\" href=\"#rvp\">rvp</a>);", 
"extern int <a class=\"id\" href=\"#tcp_disconnect\">tcp_disconnect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"", 
"<span class=\"comment\">/* From syncookies.c */</span>", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#syncookie_secret\">syncookie_secret</a>[2][16-4+<a class=\"id\" href=\"#SHA_DIGEST_WORDS\">SHA_DIGEST_WORDS</a>];", 
"extern struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#cookie_v4_check\">cookie_v4_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#opt\">opt</a>);", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#cookie_v4_init_sequence\">cookie_v4_init_sequence</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#__u16\">__u16</a> *<a class=\"id\" href=\"#mss\">mss</a>);", 
"", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#cookie_init_timestamp\">cookie_init_timestamp</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#cookie_check_timestamp\">cookie_check_timestamp</a>(struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> *<a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#bool\">bool</a> *);", 
"", 
"<span class=\"comment\">/* From net/ipv6/syncookies.c */</span>", 
"extern struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#cookie_v6_check\">cookie_v6_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#cookie_v6_init_sequence\">cookie_v6_init_sequence</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#__u16\">__u16</a> *<a class=\"id\" href=\"#mss\">mss</a>);", 
"", 
"<span class=\"comment\">/* tcp_output.c */</span>", 
"", 
"extern void <a class=\"id\" href=\"#__tcp_push_pending_frames\">__tcp_push_pending_frames</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned int <a class=\"id\" href=\"#cur_mss\">cur_mss</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#nonagle\">nonagle</a>);", 
"extern int <a class=\"id\" href=\"#tcp_may_send_now\">tcp_may_send_now</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern int <a class=\"id\" href=\"#tcp_retransmit_skb\">tcp_retransmit_skb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *);", 
"extern void <a class=\"id\" href=\"#tcp_retransmit_timer\">tcp_retransmit_timer</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#tcp_xmit_retransmit_queue\">tcp_xmit_retransmit_queue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *);", 
"extern void <a class=\"id\" href=\"#tcp_simple_retransmit\">tcp_simple_retransmit</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *);", 
"extern int <a class=\"id\" href=\"#tcp_trim_head\">tcp_trim_head</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, <a class=\"id\" href=\"#u32\">u32</a>);", 
"extern int <a class=\"id\" href=\"#tcp_fragment\">tcp_fragment</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, <a class=\"id\" href=\"#u32\">u32</a>, unsigned int);", 
"", 
"extern void <a class=\"id\" href=\"#tcp_send_probe0\">tcp_send_probe0</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *);", 
"extern void <a class=\"id\" href=\"#tcp_send_partial\">tcp_send_partial</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *);", 
"extern int <a class=\"id\" href=\"#tcp_write_wakeup\">tcp_write_wakeup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *);", 
"extern void <a class=\"id\" href=\"#tcp_send_fin\">tcp_send_fin</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#tcp_send_active_reset\">tcp_send_active_reset</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#priority\">priority</a>);", 
"extern int <a class=\"id\" href=\"#tcp_send_synack\">tcp_send_synack</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *);", 
"extern void <a class=\"id\" href=\"#tcp_push_one\">tcp_push_one</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, unsigned int <a class=\"id\" href=\"#mss_now\">mss_now</a>);", 
"extern void <a class=\"id\" href=\"#tcp_send_ack\">tcp_send_ack</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#tcp_send_delayed_ack\">tcp_send_delayed_ack</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"comment\">/* tcp_input.c */</span>", 
"extern void <a class=\"id\" href=\"#tcp_cwnd_application_limited\">tcp_cwnd_application_limited</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"comment\">/* tcp_timer.c */</span>", 
"extern void <a class=\"id\" href=\"#tcp_init_xmit_timers\">tcp_init_xmit_timers</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *);", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_clear_xmit_timers\">tcp_clear_xmit_timers</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_clear_xmit_timers\">inet_csk_clear_xmit_timers</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"extern unsigned int <a class=\"id\" href=\"#tcp_sync_mss\">tcp_sync_mss</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pmtu\">pmtu</a>);", 
"extern unsigned int <a class=\"id\" href=\"#tcp_current_mss\">tcp_current_mss</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"comment\">/* Bound MSS / TSO packet size with the half of the window */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_bound_to_half_wnd\">tcp_bound_to_half_wnd</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, int <a class=\"id\" href=\"#pktsize\">pktsize</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cutoff\">cutoff</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* When peer uses tiny windows, there is no use in packetizing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to sub-MSS pieces for the sake of SWS or making sure there</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are enough packets in the pipe for fast recovery.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On the other hand, for extremely large MSS devices, handling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * smaller than MSS windows in this way does make sense.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#max_window\">max_window</a> >= 512)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cutoff\">cutoff</a> = (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#max_window\">max_window</a> >> 1);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cutoff\">cutoff</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#max_window\">max_window</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cutoff\">cutoff</a> && <a class=\"id\" href=\"#pktsize\">pktsize</a> &gt; <a class=\"id\" href=\"#cutoff\">cutoff</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#max_t\">max_t</a>(int, <a class=\"id\" href=\"#cutoff\">cutoff</a>, 68U - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pktsize\">pktsize</a>;", 
"}", 
"", 
"<span class=\"comment\">/* tcp.c */</span>", 
"extern void <a class=\"id\" href=\"#tcp_get_info\">tcp_get_info</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, struct <a class=\"id\" href=\"#tcp_info\">tcp_info</a> *);", 
"", 
"<span class=\"comment\">/* Read 'sendfile()'-style from a TCP socket */</span>", 
"typedef int (*<a class=\"id\" href=\"#sk_read_actor_t\">sk_read_actor_t</a>)(<a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> *, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"extern int <a class=\"id\" href=\"#tcp_read_sock\">tcp_read_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#sk_read_actor_t\">sk_read_actor_t</a> <a class=\"id\" href=\"#recv_actor\">recv_actor</a>);", 
"", 
"extern void <a class=\"id\" href=\"#tcp_initialize_rcv_mss\">tcp_initialize_rcv_mss</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"extern int <a class=\"id\" href=\"#tcp_mtu_to_mss\">tcp_mtu_to_mss</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#pmtu\">pmtu</a>);", 
"extern int <a class=\"id\" href=\"#tcp_mss_to_mtu\">tcp_mss_to_mtu</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#mss\">mss</a>);", 
"extern void <a class=\"id\" href=\"#tcp_mtup_init\">tcp_mtup_init</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_bound_rto\">tcp_bound_rto</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> &gt; <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> = <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__tcp_set_rto\">__tcp_set_rto</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#srtt\">srtt</a> >> 3) + <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rttvar\">rttvar</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__tcp_fast_path_on\">__tcp_fast_path_on</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#snd_wnd\">snd_wnd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#pred_flags\">pred_flags</a> = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> << 26) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#TCP_FLAG_ACK\">TCP_FLAG_ACK</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#snd_wnd\">snd_wnd</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_fast_path_on\">tcp_fast_path_on</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__tcp_fast_path_on\">__tcp_fast_path_on</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a> >> <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#snd_wscale\">snd_wscale</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_fast_path_check\">tcp_fast_path_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) &lt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_fast_path_on\">tcp_fast_path_on</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Compute the actual rto_min value */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tcp_rto_min\">tcp_rto_min</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#__sk_dst_get\">__sk_dst_get</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rto_min\">rto_min</a> = <a class=\"id\" href=\"#TCP_RTO_MIN\">TCP_RTO_MIN</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a> && <a class=\"id\" href=\"#dst_metric_locked\">dst_metric_locked</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_RTO_MIN\">RTAX_RTO_MIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rto_min\">rto_min</a> = <a class=\"id\" href=\"#dst_metric_rtt\">dst_metric_rtt</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_RTO_MIN\">RTAX_RTO_MIN</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rto_min\">rto_min</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Compute the actual receive window we are currently advertising.</span>", 
"<span class=\"comment\"> * Rcv_nxt can be after the window if our peer push more data</span>", 
"<span class=\"comment\"> * than the offered window.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tcp_receive_window\">tcp_receive_window</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#win\">win</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wup\">rcv_wup</a> + <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#win\">win</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#win\">win</a> = 0;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#win\">win</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Choose a new window, without checks for shrinking, and without</span>", 
"<span class=\"comment\"> * scaling applied to the result.  The caller does these things</span>", 
"<span class=\"comment\"> * if necessary.  This is a \"raw\" window selection.</span>", 
"<span class=\"comment\"> */</span>", 
"extern <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__tcp_select_window\">__tcp_select_window</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"comment\">/* TCP timestamps are only 32-bits, this causes a slight</span>", 
"<span class=\"comment\"> * complication on 64-bit systems since we store a snapshot</span>", 
"<span class=\"comment\"> * of jiffies in the buffer control blocks below.  We decided</span>", 
"<span class=\"comment\"> * to use only the low 32-bits of jiffies and hide the ugly</span>", 
"<span class=\"comment\"> * casts with the following macro.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#__u32\">__u32</a>)(<a class=\"id\" href=\"#jiffies\">jiffies</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tcp_flag_byte\">tcp_flag_byte</a>(<a class=\"id\" href=\"#th\">th</a>) (((<a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> *)<a class=\"id\" href=\"#th\">th</a>)[13])", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPHDR_FIN\">TCPHDR_FIN</a> 0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPHDR_SYN\">TCPHDR_SYN</a> 0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPHDR_RST\">TCPHDR_RST</a> 0x04", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPHDR_PSH\">TCPHDR_PSH</a> 0x08", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPHDR_ACK\">TCPHDR_ACK</a> 0x10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPHDR_URG\">TCPHDR_URG</a> 0x20", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPHDR_ECE\">TCPHDR_ECE</a> 0x40", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPHDR_CWR\">TCPHDR_CWR</a> 0x80", 
"", 
"<span class=\"comment\">/* This is what the send packet queuing engine uses to pass</span>", 
"<span class=\"comment\"> * TCP per-packet control information to the transmission code.</span>", 
"<span class=\"comment\"> * We also store the host-order sequence numbers in here too.</span>", 
"<span class=\"comment\"> * This is 44 bytes if IPV6 is enabled.</span>", 
"<span class=\"comment\"> * If this grows please adjust skbuff.h:skbuff-&gt;cb[xxx] size appropriately.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tcp_skb_cb\">tcp_skb_cb</a> {", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_skb_parm\">inet_skb_parm</a><span class=\"ts\"/><a class=\"id\" href=\"#h4\">h4</a>;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a><span class=\"ts\"/><a class=\"id\" href=\"#h6\">h6</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#header\">header</a>;<span class=\"ts\"/><span class=\"comment\">/* For incoming frames<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Starting sequence number<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_seq\">end_seq</a>;<span class=\"ts\"/><span class=\"comment\">/* SEQ + FIN + SYN + datalen<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#when\">when</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* used to compute rtt's<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TCP header flags.<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sacked\">sacked</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* State flags for SACK/FACK.<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPCB_SACKED_ACKED\">TCPCB_SACKED_ACKED</a><span class=\"ts\"/>0x01<span class=\"ts\"/><span class=\"comment\">/* SKB ACK'd by a SACK block<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPCB_SACKED_RETRANS\">TCPCB_SACKED_RETRANS</a><span class=\"ts\"/>0x02<span class=\"ts\"/><span class=\"comment\">/* SKB retransmitted<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPCB_LOST\">TCPCB_LOST</a><span class=\"ts\"/><span class=\"ts\"/>0x04<span class=\"ts\"/><span class=\"comment\">/* SKB is lost<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPCB_TAGBITS\">TCPCB_TAGBITS</a><span class=\"ts\"/><span class=\"ts\"/>0x07<span class=\"ts\"/><span class=\"comment\">/* All tag bits<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPCB_EVER_RETRANS\">TCPCB_EVER_RETRANS</a><span class=\"ts\"/>0x80<span class=\"ts\"/><span class=\"comment\">/* Ever retransmitted frame<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCPCB_RETRANS\">TCPCB_RETRANS</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#TCPCB_SACKED_RETRANS\">TCPCB_SACKED_RETRANS</a>|<a class=\"id\" href=\"#TCPCB_EVER_RETRANS\">TCPCB_EVER_RETRANS</a>)", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ack_seq\">ack_seq</a>;<span class=\"ts\"/><span class=\"comment\">/* Sequence number ACK'd<span class=\"ts\"/>*/</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#__skb\">__skb</a>)<span class=\"ts\"/>((struct <a class=\"id\" href=\"#tcp_skb_cb\">tcp_skb_cb</a> *)&amp;((<a class=\"id\" href=\"#__skb\">__skb</a>)-><a class=\"id\" href=\"#cb\">cb</a>[0]))", 
"", 
"<span class=\"comment\">/* Due to TSO, an SKB can be composed of multiple actual</span>", 
"<span class=\"comment\"> * packets.  To keep these tracked properly, we use this.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_segs\">gso_segs</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This is valid iff tcp_skb_pcount() &gt; 1. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_skb_mss\">tcp_skb_mss</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Events passed to congestion control interface */</span>", 
"enum <a class=\"id\" href=\"#tcp_ca_event\">tcp_ca_event</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CA_EVENT_TX_START\">CA_EVENT_TX_START</a>,<span class=\"ts\"/><span class=\"comment\">/* first transmit when no packets in flight */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CA_EVENT_CWND_RESTART\">CA_EVENT_CWND_RESTART</a>,<span class=\"ts\"/><span class=\"comment\">/* congestion window restart */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CA_EVENT_COMPLETE_CWR\">CA_EVENT_COMPLETE_CWR</a>,<span class=\"ts\"/><span class=\"comment\">/* end of congestion recovery */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CA_EVENT_FRTO\">CA_EVENT_FRTO</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fast recovery timeout */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CA_EVENT_LOSS\">CA_EVENT_LOSS</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* loss timeout */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CA_EVENT_FAST_ACK\">CA_EVENT_FAST_ACK</a>,<span class=\"ts\"/><span class=\"comment\">/* in sequence ack */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CA_EVENT_SLOW_ACK\">CA_EVENT_SLOW_ACK</a>,<span class=\"ts\"/><span class=\"comment\">/* other ack */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Interface for adding new TCP congestion control handlers</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_CA_NAME_MAX\">TCP_CA_NAME_MAX</a><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_CA_MAX\">TCP_CA_MAX</a><span class=\"ts\"/>128", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_CA_BUF_MAX\">TCP_CA_BUF_MAX</a><span class=\"ts\"/>(<a class=\"id\" href=\"#TCP_CA_NAME_MAX\">TCP_CA_NAME_MAX</a>*<a class=\"id\" href=\"#TCP_CA_MAX\">TCP_CA_MAX</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_CONG_NON_RESTRICTED\">TCP_CONG_NON_RESTRICTED</a> 0x1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_CONG_RTT_STAMP\">TCP_CONG_RTT_STAMP</a><span class=\"ts\"/>0x2", 
"", 
"struct <a class=\"id\" href=\"#tcp_congestion_ops\">tcp_congestion_ops</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* initialize private data (optional) */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#init\">init</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* cleanup private data  (optional) */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#release\">release</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* return slow start threshold (required) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> (*<a class=\"id\" href=\"#ssthresh\">ssthresh</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* lower bound for congestion window (optional) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> (*<a class=\"id\" href=\"#min_cwnd\">min_cwnd</a>)(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* do new cwnd calculation (required) */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cong_avoid\">cong_avoid</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#in_flight\">in_flight</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* call before changing ca_state (optional) */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#set_state\">set_state</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#new_state\">new_state</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* call when cwnd event occurs (optional) */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cwnd_event\">cwnd_event</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, enum <a class=\"id\" href=\"#tcp_ca_event\">tcp_ca_event</a> <a class=\"id\" href=\"#ev\">ev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* new value of cwnd after loss (optional) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>  (*<a class=\"id\" href=\"#undo_cwnd\">undo_cwnd</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* hook for packet ack accounting (optional) */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#num_acked\">num_acked</a>, <a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#rtt_us\">rtt_us</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* get info for inet_diag (optional) */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#get_info\">get_info</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ext\">ext</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>char <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#TCP_CA_NAME_MAX\">TCP_CA_NAME_MAX</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> <span class=\"ts\"/>*<a class=\"id\" href=\"#owner\">owner</a>;", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#tcp_register_congestion_control\">tcp_register_congestion_control</a>(struct <a class=\"id\" href=\"#tcp_congestion_ops\">tcp_congestion_ops</a> *<a class=\"id\" href=\"#type\">type</a>);", 
"extern void <a class=\"id\" href=\"#tcp_unregister_congestion_control\">tcp_unregister_congestion_control</a>(struct <a class=\"id\" href=\"#tcp_congestion_ops\">tcp_congestion_ops</a> *<a class=\"id\" href=\"#type\">type</a>);", 
"", 
"extern void <a class=\"id\" href=\"#tcp_init_congestion_control\">tcp_init_congestion_control</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#tcp_cleanup_congestion_control\">tcp_cleanup_congestion_control</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern int <a class=\"id\" href=\"#tcp_set_default_congestion_control\">tcp_set_default_congestion_control</a>(const char *<a class=\"id\" href=\"#name\">name</a>);", 
"extern void <a class=\"id\" href=\"#tcp_get_default_congestion_control\">tcp_get_default_congestion_control</a>(char *<a class=\"id\" href=\"#name\">name</a>);", 
"extern void <a class=\"id\" href=\"#tcp_get_available_congestion_control\">tcp_get_available_congestion_control</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"extern void <a class=\"id\" href=\"#tcp_get_allowed_congestion_control\">tcp_get_allowed_congestion_control</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"extern int <a class=\"id\" href=\"#tcp_set_allowed_congestion_control\">tcp_set_allowed_congestion_control</a>(char *<a class=\"id\" href=\"#allowed\">allowed</a>);", 
"extern int <a class=\"id\" href=\"#tcp_set_congestion_control\">tcp_set_congestion_control</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const char *<a class=\"id\" href=\"#name\">name</a>);", 
"extern void <a class=\"id\" href=\"#tcp_slow_start\">tcp_slow_start</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>);", 
"extern void <a class=\"id\" href=\"#tcp_cong_avoid_ai\">tcp_cong_avoid_ai</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#w\">w</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#tcp_congestion_ops\">tcp_congestion_ops</a> <a class=\"id\" href=\"#tcp_init_congestion_ops\">tcp_init_congestion_ops</a>;", 
"extern <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tcp_reno_ssthresh\">tcp_reno_ssthresh</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#tcp_reno_cong_avoid\">tcp_reno_cong_avoid</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#in_flight\">in_flight</a>);", 
"extern <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tcp_reno_min_cwnd\">tcp_reno_min_cwnd</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern struct <a class=\"id\" href=\"#tcp_congestion_ops\">tcp_congestion_ops</a> <a class=\"id\" href=\"#tcp_reno\">tcp_reno</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_set_ca_state\">tcp_set_ca_state</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ca_state\">ca_state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a>-><a class=\"id\" href=\"#set_state\">set_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a>-><a class=\"id\" href=\"#set_state\">set_state</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ca_state\">ca_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> = <a class=\"id\" href=\"#ca_state\">ca_state</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_ca_event\">tcp_ca_event</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const enum <a class=\"id\" href=\"#tcp_ca_event\">tcp_ca_event</a> <a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a>-><a class=\"id\" href=\"#cwnd_event\">cwnd_event</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a>-><a class=\"id\" href=\"#cwnd_event\">cwnd_event</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#event\">event</a>);", 
"}", 
"", 
"<span class=\"comment\">/* These functions determine how the current flow behaves in respect of SACK</span>", 
"<span class=\"comment\"> * handling. SACK is negotiated with the peer, and therefore it can vary</span>", 
"<span class=\"comment\"> * between different flows.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * tcp_is_sack - SACK enabled</span>", 
"<span class=\"comment\"> * tcp_is_reno - No SACK</span>", 
"<span class=\"comment\"> * tcp_is_fack - FACK enabled, implies SACK enabled</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_is_sack\">tcp_is_sack</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#sack_ok\">sack_ok</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#tcp_is_sack\">tcp_is_sack</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_is_fack\">tcp_is_fack</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#sack_ok\">sack_ok</a> &amp; 2;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_enable_fack\">tcp_enable_fack</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#sack_ok\">sack_ok</a> |= 2;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#tcp_left_out\">tcp_left_out</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> + <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_out\">lost_out</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This determines how many packets are \"in the network\" to the best</span>", 
"<span class=\"comment\"> * of our knowledge.  In many cases it is conservative, but where</span>", 
"<span class=\"comment\"> * detailed information is available from the receiver (via SACK</span>", 
"<span class=\"comment\"> * blocks etc.) we can make more aggressive calculations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Use this for decisions involving congestion control, use just</span>", 
"<span class=\"comment\"> * tp-&gt;packets_out to determine if the send queue is empty or not.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Read this equation as:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>\"Packets sent once on transmission queue\" MINUS</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>\"Packets left network, but not honestly ACKed yet\" PLUS</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>\"Packets fast retransmitted\"</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#tcp_packets_in_flight\">tcp_packets_in_flight</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> - <a class=\"id\" href=\"#tcp_left_out\">tcp_left_out</a>(<a class=\"id\" href=\"#tp\">tp</a>) + <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_INFINITE_SSTHRESH\">TCP_INFINITE_SSTHRESH</a><span class=\"ts\"/>0x7fffffff", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tcp_in_initial_slowstart\">tcp_in_initial_slowstart</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> >= <a class=\"id\" href=\"#TCP_INFINITE_SSTHRESH\">TCP_INFINITE_SSTHRESH</a>;", 
"}", 
"", 
"<span class=\"comment\">/* If cwnd &gt; ssthresh, we may raise ssthresh to be half-way to cwnd.</span>", 
"<span class=\"comment\"> * The exception is rate halving phase, when cwnd is decreasing towards</span>", 
"<span class=\"comment\"> * ssthresh.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#tcp_current_ssthresh\">tcp_current_ssthresh</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if ((1 << <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a>) &amp; (<a class=\"id\" href=\"#TCPF_CA_CWR\">TCPF_CA_CWR</a> | <a class=\"id\" href=\"#TCPF_CA_Recovery\">TCPF_CA_Recovery</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   ((<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> >> 1) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> >> 2)));", 
"}", 
"", 
"<span class=\"comment\">/* Use define here intentionally to get WARN_ON location shown at the caller */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tcp_verify_left_out\">tcp_verify_left_out</a>(<a class=\"id\" href=\"#tp\">tp</a>)<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#tcp_left_out\">tcp_left_out</a>(<a class=\"id\" href=\"#tp\">tp</a>) &gt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a>)", 
"", 
"extern void <a class=\"id\" href=\"#tcp_enter_cwr\">tcp_enter_cwr</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const int <a class=\"id\" href=\"#set_ssthresh\">set_ssthresh</a>);", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#tcp_init_cwnd\">tcp_init_cwnd</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"comment\">/* Slow start with delack produces 3 packets of burst, so that</span>", 
"<span class=\"comment\"> * it is safe \"de facto\".  This will be the default - same as</span>", 
"<span class=\"comment\"> * the default reordering threshold - but if reordering increases,</span>", 
"<span class=\"comment\"> * we must be able to allow cwnd to burst at least this much in order</span>", 
"<span class=\"comment\"> * to not pull it back when holes are filled.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#tcp_max_burst\">tcp_max_burst</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#reordering\">reordering</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Returns end sequence number of the receiver's advertised window */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tcp_wnd_end\">tcp_wnd_end</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a> + <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a>;", 
"}", 
"extern int <a class=\"id\" href=\"#tcp_is_cwnd_limited\">tcp_is_cwnd_limited</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#in_flight\">in_flight</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_minshall_update\">tcp_minshall_update</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, unsigned int <a class=\"id\" href=\"#mss\">mss</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#mss\">mss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_sml\">snd_sml</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_check_probe_timer\">tcp_check_probe_timer</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> && !<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_pending\">icsk_pending</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reset_xmit_timer\">inet_csk_reset_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_PROBE0\">ICSK_TIME_PROBE0</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>, <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_init_wl\">tcp_init_wl</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wl1\">snd_wl1</a> = <a class=\"id\" href=\"#seq\">seq</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_update_wl\">tcp_update_wl</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wl1\">snd_wl1</a> = <a class=\"id\" href=\"#seq\">seq</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Calculate(/check) TCP checksum</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__sum16\">__sum16</a> <a class=\"id\" href=\"#tcp_v4_check\">tcp_v4_check</a>(int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#base\">base</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#csum_tcpudp_magic\">csum_tcpudp_magic</a>(<a class=\"id\" href=\"#saddr\">saddr</a>,<a class=\"id\" href=\"#daddr\">daddr</a>,<a class=\"id\" href=\"#len\">len</a>,<a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>,<a class=\"id\" href=\"#base\">base</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__sum16\">__sum16</a> <a class=\"id\" href=\"#__tcp_checksum_complete\">__tcp_checksum_complete</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__skb_checksum_complete\">__skb_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_checksum_complete\">tcp_checksum_complete</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#skb_csum_unnecessary\">skb_csum_unnecessary</a>(<a class=\"id\" href=\"#skb\">skb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__tcp_checksum_complete\">__tcp_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Prequeue for VJ style copy to user, combined with checksumming. */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_prequeue_init\">tcp_prequeue_init</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#memory\">memory</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_head_init\">skb_queue_head_init</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#prequeue\">prequeue</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#wakeup\">wakeup</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#pinned_list\">pinned_list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/* Packet is added to VJ-style prequeue for processing in process</span>", 
"<span class=\"comment\"> * context, if a reader task is waiting. Apparently, this exciting</span>", 
"<span class=\"comment\"> * idea (VJ's mail \"Re: query about TCP header on tcp-ip\" of 07 Sep 93)</span>", 
"<span class=\"comment\"> * failed somewhere. Latency? Burstiness? Well, at least now we will</span>", 
"<span class=\"comment\"> * see, why it failed. 8)8)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  --ANK</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: is this not too big to inline?</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_prequeue\">tcp_prequeue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_low_latency\">sysctl_tcp_low_latency</a> || !<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#prequeue\">prequeue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#memory\">memory</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#memory\">memory</a> &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb1\">skb1</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb1\">skb1</a> = <a class=\"id\" href=\"#__skb_dequeue\">__skb_dequeue</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#prequeue\">prequeue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_backlog_rcv\">sk_backlog_rcv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb1\">skb1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#LINUX_MIB_TCPPREQUEUEDROPPED\">LINUX_MIB_TCPPREQUEUEDROPPED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#memory\">memory</a> = 0;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#skb_queue_len\">skb_queue_len</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#prequeue\">prequeue</a>) == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_sync_poll\">wake_up_interruptible_sync_poll</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a> | <a class=\"id\" href=\"#POLLRDBAND\">POLLRDBAND</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet_csk_ack_scheduled\">inet_csk_ack_scheduled</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reset_xmit_timer\">inet_csk_reset_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_DACK\">ICSK_TIME_DACK</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (3 * <a class=\"id\" href=\"#tcp_rto_min\">tcp_rto_min</a>(<a class=\"id\" href=\"#sk\">sk</a>)) / 4,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#STATE_TRACE\">STATE_TRACE</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#STATE_TRACE\">STATE_TRACE</a>", 
"static const char *<a class=\"id\" href=\"#statename\">statename</a>[]={", 
"<span class=\"ts\"/>\"Unused\",\"Established\",\"Syn Sent\",\"Syn Recv\",", 
"<span class=\"ts\"/>\"Fin Wait 1\",\"Fin Wait 2\",\"Time Wait\", \"Close\",", 
"<span class=\"ts\"/>\"Close Wait\",\"Last ACK\",\"Listen\",\"Closing\"", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"extern void <a class=\"id\" href=\"#tcp_set_state\">tcp_set_state</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#state\">state</a>);", 
"", 
"extern void <a class=\"id\" href=\"#tcp_done\">tcp_done</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_sack_reset\">tcp_sack_reset</a>(struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> *<a class=\"id\" href=\"#rx_opt\">rx_opt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#dsack\">dsack</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#num_sacks\">num_sacks</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/* Determine a window scaling and initial window to offer. */</span>", 
"extern void <a class=\"id\" href=\"#tcp_select_initial_window\">tcp_select_initial_window</a>(int <a class=\"id\" href=\"#__space\">__space</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mss\">mss</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>, <a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#window_clamp\">window_clamp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#wscale_ok\">wscale_ok</a>, <a class=\"id\" href=\"#__u8\">__u8</a> *<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#init_rcv_wnd\">init_rcv_wnd</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_win_from_space\">tcp_win_from_space</a>(int <a class=\"id\" href=\"#space\">space</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sysctl_tcp_adv_win_scale\">sysctl_tcp_adv_win_scale</a><=0 ?", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#space\">space</a>>>(-<a class=\"id\" href=\"#sysctl_tcp_adv_win_scale\">sysctl_tcp_adv_win_scale</a>)) :", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> - (<a class=\"id\" href=\"#space\">space</a>>><a class=\"id\" href=\"#sysctl_tcp_adv_win_scale\">sysctl_tcp_adv_win_scale</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Note: caller must be prepared to deal with negative returns */</span> ", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_space\">tcp_space</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_win_from_space\">tcp_win_from_space</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>));", 
"} ", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_full_space\">tcp_full_space</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_win_from_space\">tcp_win_from_space</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>); ", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_openreq_init\">tcp_openreq_init</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> *<a class=\"id\" href=\"#rx_opt\">rx_opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#ireq\">ireq</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* So that tcp_send_synack() knows! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cookie_ts\">cookie_ts</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#mss\">mss</a> = <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#mss_clamp\">mss_clamp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#ts_recent\">ts_recent</a> = <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> ? <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#rcv_tsval\">rcv_tsval</a> : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a> = <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#sack_ok\">sack_ok</a> = <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#sack_ok\">sack_ok</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#snd_wscale\">snd_wscale</a> = <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#snd_wscale\">snd_wscale</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#wscale_ok\">wscale_ok</a> = <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#wscale_ok\">wscale_ok</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#acked\">acked</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#ecn_ok\">ecn_ok</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_port\">rmt_port</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#loc_port\">loc_port</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dest\">dest</a>;", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#tcp_enter_memory_pressure\">tcp_enter_memory_pressure</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#keepalive_intvl_when\">keepalive_intvl_when</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#keepalive_intvl\">keepalive_intvl</a> ? : <a class=\"id\" href=\"#sysctl_tcp_keepalive_intvl\">sysctl_tcp_keepalive_intvl</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#keepalive_time_when\">keepalive_time_when</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#keepalive_time\">keepalive_time</a> ? : <a class=\"id\" href=\"#sysctl_tcp_keepalive_time\">sysctl_tcp_keepalive_time</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#keepalive_probes\">keepalive_probes</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#keepalive_probes\">keepalive_probes</a> ? : <a class=\"id\" href=\"#sysctl_tcp_keepalive_probes\">sysctl_tcp_keepalive_probes</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#keepalive_time_elapsed\">keepalive_time_elapsed</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = &amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#inet_conn\">inet_conn</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a> - <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#lrcvtime\">lrcvtime</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_tstamp\">rcv_tstamp</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_fin_time\">tcp_fin_time</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fin_timeout\">fin_timeout</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#linger2\">linger2</a> ? : <a class=\"id\" href=\"#sysctl_tcp_fin_timeout\">sysctl_tcp_fin_timeout</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#rto\">rto</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fin_timeout\">fin_timeout</a> &lt; (<a class=\"id\" href=\"#rto\">rto</a> << 2) - (<a class=\"id\" href=\"#rto\">rto</a> >> 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fin_timeout\">fin_timeout</a> = (<a class=\"id\" href=\"#rto\">rto</a> << 2) - (<a class=\"id\" href=\"#rto\">rto</a> >> 1);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fin_timeout\">fin_timeout</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_paws_check\">tcp_paws_check</a>(const struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> *<a class=\"id\" href=\"#rx_opt\">rx_opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#paws_win\">paws_win</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#ts_recent\">ts_recent</a> - <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#rcv_tsval\">rcv_tsval</a>) <= <a class=\"id\" href=\"#paws_win\">paws_win</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#get_seconds\">get_seconds</a>() >= <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> + <a class=\"id\" href=\"#TCP_PAWS_24DAYS\">TCP_PAWS_24DAYS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_paws_reject\">tcp_paws_reject</a>(const struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> *<a class=\"id\" href=\"#rx_opt\">rx_opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#rst\">rst</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_paws_check\">tcp_paws_check</a>(<a class=\"id\" href=\"#rx_opt\">rx_opt</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RST segments are not recommended to carry timestamp,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   and, if they do, it is recommended to ignore PAWS because</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   \"their cleanup function should take precedence over timestamps.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Certainly, it is mistake. It is necessary to understand the reasons</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   of this constraint to relax it: if peer reboots, clock may go</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   out-of-sync and half-open connections will not be reset.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Actually, the problem would be not existing if all</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   the implementations followed draft about maintaining clock</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   via reboots. Linux-2.2 DOES NOT!</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   However, we can relax time bounds for RST segments to MSL.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rst\">rst</a> && <a class=\"id\" href=\"#get_seconds\">get_seconds</a>() >= <a class=\"id\" href=\"#rx_opt\">rx_opt</a>-><a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> + <a class=\"id\" href=\"#TCP_PAWS_MSL\">TCP_PAWS_MSL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TCP_CHECK_TIMER\">TCP_CHECK_TIMER</a>(<a class=\"id\" href=\"#sk\">sk</a>) do { } while (0)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_mib_init\">tcp_mib_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* See RFC 2012 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_ADD_STATS_USER\">TCP_ADD_STATS_USER</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_RTOALGORITHM\">TCP_MIB_RTOALGORITHM</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_ADD_STATS_USER\">TCP_ADD_STATS_USER</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_RTOMIN\">TCP_MIB_RTOMIN</a>, <a class=\"id\" href=\"#TCP_RTO_MIN\">TCP_RTO_MIN</a>*1000/<a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_ADD_STATS_USER\">TCP_ADD_STATS_USER</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_RTOMAX\">TCP_MIB_RTOMAX</a>, <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>*1000/<a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_ADD_STATS_USER\">TCP_ADD_STATS_USER</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_MAXCONN\">TCP_MIB_MAXCONN</a>, -1);", 
"}", 
"", 
"<span class=\"comment\">/* from STCP */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_clear_retrans_hints_partial\">tcp_clear_retrans_hints_partial</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_skb_hint\">lost_skb_hint</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#scoreboard_skb_hint\">scoreboard_skb_hint</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_clear_all_retrans_hints\">tcp_clear_all_retrans_hints</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_clear_retrans_hints_partial\">tcp_clear_retrans_hints_partial</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retransmit_skb_hint\">retransmit_skb_hint</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* MD5 Signature */</span>", 
"struct <a class=\"id\" href=\"#crypto_hash\">crypto_hash</a>;", 
"", 
"<span class=\"comment\">/* - key database */</span>", 
"struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#keylen\">keylen</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tcp4_md5sig_key\">tcp4_md5sig_key</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tcp6_md5sig_key\">tcp6_md5sig_key</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a>;", 
"#if 0", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scope_id\">scope_id</a>;<span class=\"ts\"/><span class=\"comment\">/* XXX */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>;", 
"};", 
"", 
"<span class=\"comment\">/* - sock block */</span>", 
"struct <a class=\"id\" href=\"#tcp_md5sig_info\">tcp_md5sig_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp4_md5sig_key\">tcp4_md5sig_key</a><span class=\"ts\"/>*<a class=\"id\" href=\"#keys4\">keys4</a>;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp6_md5sig_key\">tcp6_md5sig_key</a><span class=\"ts\"/>*<a class=\"id\" href=\"#keys6\">keys6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entries6\">entries6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloced6\">alloced6</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entries4\">entries4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloced4\">alloced4</a>;", 
"};", 
"", 
"<span class=\"comment\">/* - pseudo header */</span>", 
"struct <a class=\"id\" href=\"#tcp4_pseudohdr\">tcp4_pseudohdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pad\">pad</a>;", 
];
xr_frag_insert('l/c1/377ae05d9c0a8814e4434e0bd7ddfecf9eb5c4.xr', __xr_tmp);
