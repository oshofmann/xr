var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Copyright (C) 1994-1998<span class=\"ts\"/>    Linus Torvalds &amp; authors (see below)</span>", 
"<span class=\"comment\"> *  Copyright (C) 2003-2005, 2007   Bartlomiej Zolnierkiewicz</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Mostly written by Mark Lord  &lt;mlord@pobox.com&gt;</span>", 
"<span class=\"comment\"> *                and Gadi Oxman &lt;gadio@netvision.net.il&gt;</span>", 
"<span class=\"comment\"> *                and Andre Hedrick &lt;andre@linux-ide.org&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  See linux/MAINTAINERS for address of current maintainer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the multiple IDE interface driver, as evolved from hd.c.</span>", 
"<span class=\"comment\"> * It supports up to MAX_HWIFS IDE interfaces, on one or more IRQs</span>", 
"<span class=\"comment\"> *   (usually 14 &amp; 15).</span>", 
"<span class=\"comment\"> * There can be up to two drives per interface, as per the ATA-2 spec.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ...</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  From hd.c:</span>", 
"<span class=\"comment\"> *  |</span>", 
"<span class=\"comment\"> *  | It traverses the request-list, using interrupts to jump between functions.</span>", 
"<span class=\"comment\"> *  | As nearly all functions can be called within interrupts, we may not sleep.</span>", 
"<span class=\"comment\"> *  | Special care is recommended.  Have Fun!</span>", 
"<span class=\"comment\"> *  |</span>", 
"<span class=\"comment\"> *  | modified by Drew Eckhardt to check nr of hd's from the CMOS.</span>", 
"<span class=\"comment\"> *  |</span>", 
"<span class=\"comment\"> *  | Thanks to Branko Lankester, lankeste@fwi.uva.nl, who found a bug</span>", 
"<span class=\"comment\"> *  | in the early extended-partition checks and added DM partitions.</span>", 
"<span class=\"comment\"> *  |</span>", 
"<span class=\"comment\"> *  | Early work on error handling by Mika Liljeberg (liljeber@cs.Helsinki.FI).</span>", 
"<span class=\"comment\"> *  |</span>", 
"<span class=\"comment\"> *  | IRQ-unmask, drive-id, multiple-mode, support for \"&gt;16 heads\",</span>", 
"<span class=\"comment\"> *  | and general streamlining by Mark Lord (mlord@pobox.com).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  October, 1994 -- Complete line-by-line overhaul for linux 1.1.x, by:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Mark Lord<span class=\"ts\"/>(mlord@pobox.com)<span class=\"ts\"/><span class=\"ts\"/>(IDE Perf.Pkg)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Delman Lee<span class=\"ts\"/>(delman@ieee.org)<span class=\"ts\"/><span class=\"ts\"/>(\"Mr. atdisk2\")</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Scott Snyder<span class=\"ts\"/>(snyder@fnald0.fnal.gov)<span class=\"ts\"/>(ATAPI IDE cd-rom)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This was a rewrite of just about everything from hd.c, though some original</span>", 
"<span class=\"comment\"> *  code is still sprinkled about.  Think of it as a major evolution, with</span>", 
"<span class=\"comment\"> *  inspiration from lots of linux users, esp.  hamish@zot.apana.org.au</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#genhd\">genhd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ide\">ide</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hdreg\">hdreg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#completion\">completion</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#ide_port_class\">ide_port_class</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ide_device_get<span class=\"ts\"/>-<span class=\"ts\"/>get an additional reference to a ide_drive_t</span>", 
"<span class=\"comment\"> * @drive:<span class=\"ts\"/>device to get a reference to</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Gets a reference to the ide_drive_t and increments the use count of the</span>", 
"<span class=\"comment\"> * underlying LLDD module.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ide_device_get\">ide_device_get</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#host_dev\">host_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#get_device\">get_device</a>(&amp;<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#gendev\">gendev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#host_dev\">host_dev</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module\">module</a> = <a class=\"id\" href=\"#host_dev\">host_dev</a> ? <a class=\"id\" href=\"#host_dev\">host_dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#owner\">owner</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#module\">module</a> && !<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#module\">module</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#gendev\">gendev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ide_device_get\">ide_device_get</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ide_device_put<span class=\"ts\"/>-<span class=\"ts\"/>release a reference to a ide_drive_t</span>", 
"<span class=\"comment\"> * @drive:<span class=\"ts\"/>device to release a reference on</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Release a reference to the ide_drive_t and decrements the use count of</span>", 
"<span class=\"comment\"> * the underlying LLDD module.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ide_device_put\">ide_device_put</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MODULE_UNLOAD\">CONFIG_MODULE_UNLOAD</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#host_dev\">host_dev</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>[0];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a> = <a class=\"id\" href=\"#host_dev\">host_dev</a> ? <a class=\"id\" href=\"#host_dev\">host_dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#owner\">owner</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#module\">module</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#module\">module</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#gendev\">gendev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ide_device_put\">ide_device_put</a>);", 
"", 
"static int <a class=\"id\" href=\"#ide_bus_match\">ide_bus_match</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ide_uevent\">ide_uevent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a> *<a class=\"id\" href=\"#env\">env</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a> = <a class=\"id\" href=\"#to_ide_device\">to_ide_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"MEDIA=%s\", <a class=\"id\" href=\"#ide_media_string\">ide_media_string</a>(<a class=\"id\" href=\"#drive\">drive</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"DRIVENAME=%s\", <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"MODALIAS=ide:m-%s\", <a class=\"id\" href=\"#ide_media_string\">ide_media_string</a>(<a class=\"id\" href=\"#drive\">drive</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#generic_ide_probe\">generic_ide_probe</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a> = <a class=\"id\" href=\"#to_ide_device\">to_ide_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ide_driver\">ide_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#to_ide_driver\">to_ide_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#probe\">probe</a> ? <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#probe\">probe</a>(<a class=\"id\" href=\"#drive\">drive</a>) : -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#generic_ide_remove\">generic_ide_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a> = <a class=\"id\" href=\"#to_ide_device\">to_ide_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ide_driver\">ide_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#to_ide_driver\">to_ide_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#remove\">remove</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#remove\">remove</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#generic_ide_shutdown\">generic_ide_shutdown</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a> = <a class=\"id\" href=\"#to_ide_device\">to_ide_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ide_driver\">ide_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#to_ide_driver\">to_ide_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#bus_type\">bus_type</a> <a class=\"id\" href=\"#ide_bus_type\">ide_bus_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"ide\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#match\">match</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ide_bus_match\">ide_bus_match</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#uevent\">uevent</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ide_uevent\">ide_uevent</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_ide_probe\">generic_ide_probe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_ide_remove\">generic_ide_remove</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_ide_shutdown\">generic_ide_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_attrs\">dev_attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ide_dev_attrs\">ide_dev_attrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_ide_suspend\">generic_ide_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_ide_resume\">generic_ide_resume</a>,", 
"};", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ide_bus_type\">ide_bus_type</a>);", 
"", 
"int <a class=\"id\" href=\"#ide_vlb_clk\">ide_vlb_clk</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ide_vlb_clk\">ide_vlb_clk</a>);", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#vlb_clock\">vlb_clock</a>, <a class=\"id\" href=\"#ide_vlb_clk\">ide_vlb_clk</a>, int, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#vlb_clock\">vlb_clock</a>, \"VLB clock frequency (in MHz)\");", 
"", 
"int <a class=\"id\" href=\"#ide_pci_clk\">ide_pci_clk</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ide_pci_clk\">ide_pci_clk</a>);", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#pci_clock\">pci_clock</a>, <a class=\"id\" href=\"#ide_pci_clk\">ide_pci_clk</a>, int, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#pci_clock\">pci_clock</a>, \"PCI bus clock frequency (in MHz)\");", 
"", 
"static int <a class=\"id\" href=\"#ide_set_dev_param_mask\">ide_set_dev_param_mask</a>(const char *<a class=\"id\" href=\"#s\">s</a>, const struct <a class=\"id\" href=\"#kernel_param\">kernel_param</a> *<a class=\"id\" href=\"#kp\">kp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a> = 1;", 
"<span class=\"ts\"/>unsigned int *<a class=\"id\" href=\"#dev_param_mask\">dev_param_mask</a> = (unsigned int *)<a class=\"id\" href=\"#kp\">kp</a>-><a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* controller . device (0 or 1) [ : 1 (set) | 0 (clear) ] */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%d.%d:%d\", &amp;<a class=\"id\" href=\"#a\">a</a>, &amp;<a class=\"id\" href=\"#b\">b</a>, &amp;<a class=\"id\" href=\"#j\">j</a>) != 3 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%d.%d\", &amp;<a class=\"id\" href=\"#a\">a</a>, &amp;<a class=\"id\" href=\"#b\">b</a>) != 2)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#a\">a</a> * <a class=\"id\" href=\"#MAX_DRIVES\">MAX_DRIVES</a> + <a class=\"id\" href=\"#b\">b</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#MAX_HWIFS\">MAX_HWIFS</a> * <a class=\"id\" href=\"#MAX_DRIVES\">MAX_DRIVES</a> || <a class=\"id\" href=\"#j\">j</a> &lt; 0 || <a class=\"id\" href=\"#j\">j</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dev_param_mask\">dev_param_mask</a> |= (1 << <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dev_param_mask\">dev_param_mask</a> &= ~(1 << <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kernel_param_ops\">kernel_param_ops</a> <a class=\"id\" href=\"#param_ops_ide_dev_mask\">param_ops_ide_dev_mask</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set\">set</a> = <a class=\"id\" href=\"#ide_set_dev_param_mask\">ide_set_dev_param_mask</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#param_check_ide_dev_mask\">param_check_ide_dev_mask</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#p\">p</a>) <a class=\"id\" href=\"#param_check_uint\">param_check_uint</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#p\">p</a>)", 
"", 
"static unsigned int <a class=\"id\" href=\"#ide_nodma\">ide_nodma</a>;", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#nodma\">nodma</a>, <a class=\"id\" href=\"#ide_nodma\">ide_nodma</a>, <a class=\"id\" href=\"#ide_dev_mask\">ide_dev_mask</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#nodma\">nodma</a>, \"disallow DMA for a device\");", 
"", 
"static unsigned int <a class=\"id\" href=\"#ide_noflush\">ide_noflush</a>;", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#noflush\">noflush</a>, <a class=\"id\" href=\"#ide_noflush\">ide_noflush</a>, <a class=\"id\" href=\"#ide_dev_mask\">ide_dev_mask</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#noflush\">noflush</a>, \"disable flush requests for a device\");", 
"", 
"static unsigned int <a class=\"id\" href=\"#ide_nohpa\">ide_nohpa</a>;", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#nohpa\">nohpa</a>, <a class=\"id\" href=\"#ide_nohpa\">ide_nohpa</a>, <a class=\"id\" href=\"#ide_dev_mask\">ide_dev_mask</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#nohpa\">nohpa</a>, \"disable Host Protected Area for a device\");", 
"", 
"static unsigned int <a class=\"id\" href=\"#ide_noprobe\">ide_noprobe</a>;", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#noprobe\">noprobe</a>, <a class=\"id\" href=\"#ide_noprobe\">ide_noprobe</a>, <a class=\"id\" href=\"#ide_dev_mask\">ide_dev_mask</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#noprobe\">noprobe</a>, \"skip probing for a device\");", 
"", 
"static unsigned int <a class=\"id\" href=\"#ide_nowerr\">ide_nowerr</a>;", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#nowerr\">nowerr</a>, <a class=\"id\" href=\"#ide_nowerr\">ide_nowerr</a>, <a class=\"id\" href=\"#ide_dev_mask\">ide_dev_mask</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#nowerr\">nowerr</a>, \"ignore the ATA_DF bit for a device\");", 
"", 
"static unsigned int <a class=\"id\" href=\"#ide_cdroms\">ide_cdroms</a>;", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#cdrom\">cdrom</a>, <a class=\"id\" href=\"#ide_cdroms\">ide_cdroms</a>, <a class=\"id\" href=\"#ide_dev_mask\">ide_dev_mask</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#cdrom\">cdrom</a>, \"force device as a CD-ROM\");", 
"", 
"struct <a class=\"id\" href=\"#chs_geom\">chs_geom</a> {", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#cyl\">cyl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sect\">sect</a>;", 
"};", 
"", 
"static unsigned int <a class=\"id\" href=\"#ide_disks\">ide_disks</a>;", 
"static struct <a class=\"id\" href=\"#chs_geom\">chs_geom</a> <a class=\"id\" href=\"#ide_disks_chs\">ide_disks_chs</a>[<a class=\"id\" href=\"#MAX_HWIFS\">MAX_HWIFS</a> * <a class=\"id\" href=\"#MAX_DRIVES\">MAX_DRIVES</a>];", 
"", 
"static int <a class=\"id\" href=\"#ide_set_disk_chs\">ide_set_disk_chs</a>(const char *<a class=\"id\" href=\"#str\">str</a>, struct <a class=\"id\" href=\"#kernel_param\">kernel_param</a> *<a class=\"id\" href=\"#kp\">kp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a> = 0, <a class=\"id\" href=\"#h\">h</a> = 0, <a class=\"id\" href=\"#s\">s</a> = 0, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* controller . device (0 or 1) : Cylinders , Heads , Sectors */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* controller . device (0 or 1) : 1 (use CHS) | 0 (ignore CHS) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#str\">str</a>, \"%d.%d:%d,%d,%d\", &amp;<a class=\"id\" href=\"#a\">a</a>, &amp;<a class=\"id\" href=\"#b\">b</a>, &amp;<a class=\"id\" href=\"#c\">c</a>, &amp;<a class=\"id\" href=\"#h\">h</a>, &amp;<a class=\"id\" href=\"#s\">s</a>) != 5 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#str\">str</a>, \"%d.%d:%d\", &amp;<a class=\"id\" href=\"#a\">a</a>, &amp;<a class=\"id\" href=\"#b\">b</a>, &amp;<a class=\"id\" href=\"#j\">j</a>) != 3)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#a\">a</a> * <a class=\"id\" href=\"#MAX_DRIVES\">MAX_DRIVES</a> + <a class=\"id\" href=\"#b\">b</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#MAX_HWIFS\">MAX_HWIFS</a> * <a class=\"id\" href=\"#MAX_DRIVES\">MAX_DRIVES</a> || <a class=\"id\" href=\"#j\">j</a> &lt; 0 || <a class=\"id\" href=\"#j\">j</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> &gt; <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a> || <a class=\"id\" href=\"#h\">h</a> &gt; 255 || <a class=\"id\" href=\"#s\">s</a> &gt; 255)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_disks\">ide_disks</a> |= (1 << <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_disks\">ide_disks</a> &= ~(1 << <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_disks_chs\">ide_disks_chs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#cyl\">cyl</a>  = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_disks_chs\">ide_disks_chs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_disks_chs\">ide_disks_chs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#sect\">sect</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#module_param_call\">module_param_call</a>(<a class=\"id\" href=\"#chs\">chs</a>, <a class=\"id\" href=\"#ide_set_disk_chs\">ide_set_disk_chs</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#chs\">chs</a>, \"force device as a disk (using CHS)\");", 
"", 
"static void <a class=\"id\" href=\"#ide_dev_apply_params\">ide_dev_apply_params</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#unit\">unit</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#index\">index</a> * <a class=\"id\" href=\"#MAX_DRIVES\">MAX_DRIVES</a> + <a class=\"id\" href=\"#unit\">unit</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ide_nodma\">ide_nodma</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ide: disallowing DMA for %s\\n\", <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_NODMA\">IDE_DFLAG_NODMA</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ide_noflush\">ide_noflush</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ide: disabling flush requests for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_NOFLUSH\">IDE_DFLAG_NOFLUSH</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ide_nohpa\">ide_nohpa</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ide: disabling Host Protected Area for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_NOHPA\">IDE_DFLAG_NOHPA</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ide_noprobe\">ide_noprobe</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ide: skipping probe for %s\\n\", <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_NOPROBE\">IDE_DFLAG_NOPROBE</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ide_nowerr\">ide_nowerr</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ide: ignoring the ATA_DF bit for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#bad_wstat\">bad_wstat</a> = <a class=\"id\" href=\"#BAD_R_STAT\">BAD_R_STAT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ide_cdroms\">ide_cdroms</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ide: forcing %s as a CD-ROM\\n\", <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_PRESENT\">IDE_DFLAG_PRESENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#media\">media</a> = <a class=\"id\" href=\"#ide_cdrom\">ide_cdrom</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* an ATAPI device ignores DRDY */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#ready_stat\">ready_stat</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ide_disks\">ide_disks</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#cyl\">cyl</a>  = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#bios_cyl\">bios_cyl</a>  = <a class=\"id\" href=\"#ide_disks_chs\">ide_disks_chs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#cyl\">cyl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#bios_head\">bios_head</a> = <a class=\"id\" href=\"#ide_disks_chs\">ide_disks_chs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#sect\">sect</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#bios_sect\">bios_sect</a> = <a class=\"id\" href=\"#ide_disks_chs\">ide_disks_chs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#sect\">sect</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ide: forcing %s as a disk (%d/%d/%d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#cyl\">cyl</a>, <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#sect\">sect</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_FORCED_GEOM\">IDE_DFLAG_FORCED_GEOM</a> | <a class=\"id\" href=\"#IDE_DFLAG_PRESENT\">IDE_DFLAG_PRESENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#media\">media</a> = <a class=\"id\" href=\"#ide_disk\">ide_disk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#ready_stat\">ready_stat</a> = <a class=\"id\" href=\"#ATA_DRDY\">ATA_DRDY</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#ide_ignore_cable\">ide_ignore_cable</a>;", 
"", 
"static int <a class=\"id\" href=\"#ide_set_ignore_cable\">ide_set_ignore_cable</a>(const char *<a class=\"id\" href=\"#s\">s</a>, struct <a class=\"id\" href=\"#kernel_param\">kernel_param</a> *<a class=\"id\" href=\"#kp\">kp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* controller (ignore) */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* controller : 1 (ignore) | 0 (use) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%d:%d\", &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#j\">j</a>) != 2 && <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%d\", &amp;<a class=\"id\" href=\"#i\">i</a>) != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#MAX_HWIFS\">MAX_HWIFS</a> || <a class=\"id\" href=\"#j\">j</a> &lt; 0 || <a class=\"id\" href=\"#j\">j</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_ignore_cable\">ide_ignore_cable</a> |= (1 << <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_ignore_cable\">ide_ignore_cable</a> &= ~(1 << <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#module_param_call\">module_param_call</a>(<a class=\"id\" href=\"#ignore_cable\">ignore_cable</a>, <a class=\"id\" href=\"#ide_set_ignore_cable\">ide_set_ignore_cable</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#ignore_cable\">ignore_cable</a>, \"ignore cable detection\");", 
"", 
"void <a class=\"id\" href=\"#ide_port_apply_params\">ide_port_apply_params</a>(<a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ide_ignore_cable\">ide_ignore_cable</a> &amp; (1 << <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#index\">index</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ide: ignoring cable detection for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#cbl\">cbl</a> = <a class=\"id\" href=\"#ATA_CBL_PATA40_SHORT\">ATA_CBL_PATA40_SHORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_port_for_each_dev\">ide_port_for_each_dev</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#hwif\">hwif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_dev_apply_params\">ide_dev_apply_params</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is gets invoked once during initialization, to set *everything* up</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ide_init\">ide_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Uniform Multi-Platform E-IDE driver\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bus_register\">bus_register</a>(&amp;<a class=\"id\" href=\"#ide_bus_type\">ide_bus_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"IDE: bus_register error: %d\\n\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_port_class\">ide_port_class</a> = <a class=\"id\" href=\"#class_create\">class_create</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>, \"ide_port\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ide_port_class\">ide_port_class</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ide_port_class\">ide_port_class</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_port_class\">out_port_class</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_acpi_init\">ide_acpi_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_ide_create\">proc_ide_create</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_port_class\">out_port_class</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_unregister\">bus_unregister</a>(&amp;<a class=\"id\" href=\"#ide_bus_type\">ide_bus_type</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#ide_exit\">ide_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_ide_destroy\">proc_ide_destroy</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_destroy\">class_destroy</a>(<a class=\"id\" href=\"#ide_port_class\">ide_port_class</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_unregister\">bus_unregister</a>(&amp;<a class=\"id\" href=\"#ide_bus_type\">ide_bus_type</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#ide_init\">ide_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#ide_exit\">ide_exit</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/c1/380471f5191fdc87d467657f2f42500f18e9a5.xr', __xr_tmp);
