var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *      IP Virtual Server</span>", 
"<span class=\"comment\"> *      data structure and functionality definitions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_NET_IP_VS_H\">_NET_IP_VS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_NET_IP_VS_H\">_NET_IP_VS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ip_vs\">ip_vs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;                <span class=\"comment\">/* definitions shared with userland */</span>", 
"", 
"<span class=\"comment\">/* old ipvsadm versions still include this file directly */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;                  <span class=\"comment\">/* for __uXX types */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;               <span class=\"comment\">/* for ctl_path */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;                 <span class=\"comment\">/* for struct list_head */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;             <span class=\"comment\">/* for struct rwlock_t */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;                 <span class=\"comment\">/* for struct atomic_t */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#checksum\">checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter\">netfilter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for union nf_inet_addr */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for struct ipv6hdr */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for ipv6_addr_copy */</span>", 
"", 
"", 
"<span class=\"comment\">/* Connections' size value needed by ip_vs_ctl.c */</span>", 
"extern int <a class=\"id\" href=\"#ip_vs_conn_tab_size\">ip_vs_conn_tab_size</a>;", 
"", 
"", 
"struct <a class=\"id\" href=\"#ip_vs_iphdr\">ip_vs_iphdr</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#nf_inet_addr\">nf_inet_addr</a> <a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#nf_inet_addr\">nf_inet_addr</a> <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#ip_vs_fill_iphdr\">ip_vs_fill_iphdr</a>(int <a class=\"id\" href=\"#af\">af</a>, const void *<a class=\"id\" href=\"#nh\">nh</a>, struct <a class=\"id\" href=\"#ip_vs_iphdr\">ip_vs_iphdr</a> *<a class=\"id\" href=\"#iphdr\">iphdr</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_VS_IPV6\">CONFIG_IP_VS_IPV6</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#af\">af</a> == <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#nh\">nh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iphdr\">iphdr</a>-><a class=\"id\" href=\"#len\">len</a> = sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iphdr\">iphdr</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#iphdr\">iphdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>.<a class=\"id\" href=\"#in6\">in6</a>, &amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#iphdr\">iphdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>.<a class=\"id\" href=\"#in6\">in6</a>, &amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/>} else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#nh\">nh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iphdr\">iphdr</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> * 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iphdr\">iphdr</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iphdr\">iphdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>.<a class=\"id\" href=\"#ip\">ip</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iphdr\">iphdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>.<a class=\"id\" href=\"#ip\">ip</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ip_vs_addr_copy\">ip_vs_addr_copy</a>(int <a class=\"id\" href=\"#af\">af</a>, union <a class=\"id\" href=\"#nf_inet_addr\">nf_inet_addr</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const union <a class=\"id\" href=\"#nf_inet_addr\">nf_inet_addr</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_VS_IPV6\">CONFIG_IP_VS_IPV6</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#af\">af</a> == <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#in6\">in6</a>, &amp;<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#in6\">in6</a>);", 
"<span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ip\">ip</a> = <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#ip\">ip</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_vs_addr_equal\">ip_vs_addr_equal</a>(int <a class=\"id\" href=\"#af\">af</a>, const union <a class=\"id\" href=\"#nf_inet_addr\">nf_inet_addr</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const union <a class=\"id\" href=\"#nf_inet_addr\">nf_inet_addr</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_VS_IPV6\">CONFIG_IP_VS_IPV6</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#af\">af</a> == <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#in6\">in6</a>, &amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#in6\">in6</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#ip\">ip</a> == <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#ip\">ip</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_VS_DEBUG\">CONFIG_IP_VS_DEBUG</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern int <a class=\"id\" href=\"#ip_vs_get_debug_level\">ip_vs_get_debug_level</a>(void);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#ip_vs_dbg_addr\">ip_vs_dbg_addr</a>(int <a class=\"id\" href=\"#af\">af</a>, char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buf_len\">buf_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const union <a class=\"id\" href=\"#nf_inet_addr\">nf_inet_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int *<a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_VS_IPV6\">CONFIG_IP_VS_IPV6</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#af\">af</a> == <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[*<a class=\"id\" href=\"#idx\">idx</a>], <a class=\"id\" href=\"#buf_len\">buf_len</a> - *<a class=\"id\" href=\"#idx\">idx</a>, \"[%pI6]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#in6\">in6</a>) + 1;", 
"<span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[*<a class=\"id\" href=\"#idx\">idx</a>], <a class=\"id\" href=\"#buf_len\">buf_len</a> - *<a class=\"id\" href=\"#idx\">idx</a>, \"%pI4\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#ip\">ip</a>) + 1;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#idx\">idx</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(*<a class=\"id\" href=\"#idx\">idx</a> &gt; <a class=\"id\" href=\"#buf_len\">buf_len</a> + 1);", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#buf\">buf</a>[*<a class=\"id\" href=\"#idx\">idx</a> - <a class=\"id\" href=\"#len\">len</a>];", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP_VS_DBG_BUF\">IP_VS_DBG_BUF</a>(<a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#msg\">msg</a>, ...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#ip_vs_dbg_buf\">ip_vs_dbg_buf</a>[160];<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ip_vs_dbg_idx\">ip_vs_dbg_idx</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> <= <a class=\"id\" href=\"#ip_vs_get_debug_level\">ip_vs_get_debug_level</a>())<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#pr_fmt\">pr_fmt</a>(<a class=\"id\" href=\"#msg\">msg</a>), ##<a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP_VS_ERR_BUF\">IP_VS_ERR_BUF</a>(<a class=\"id\" href=\"#msg\">msg</a>...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#ip_vs_dbg_buf\">ip_vs_dbg_buf</a>[160];<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ip_vs_dbg_idx\">ip_vs_dbg_idx</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(<a class=\"id\" href=\"#msg\">msg</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"<span class=\"comment\">/* Only use from within IP_VS_DBG_BUF() or IP_VS_ERR_BUF macros */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP_VS_DBG_ADDR\">IP_VS_DBG_ADDR</a>(<a class=\"id\" href=\"#af\">af</a>, <a class=\"id\" href=\"#addr\">addr</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_vs_dbg_addr\">ip_vs_dbg_addr</a>(<a class=\"id\" href=\"#af\">af</a>, <a class=\"id\" href=\"#ip_vs_dbg_buf\">ip_vs_dbg_buf</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#ip_vs_dbg_buf\">ip_vs_dbg_buf</a>), <a class=\"id\" href=\"#addr\">addr</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#ip_vs_dbg_idx\">ip_vs_dbg_idx</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP_VS_DBG\">IP_VS_DBG</a>(<a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#msg\">msg</a>, ...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> <= <a class=\"id\" href=\"#ip_vs_get_debug_level\">ip_vs_get_debug_level</a>())<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#pr_fmt\">pr_fmt</a>(<a class=\"id\" href=\"#msg\">msg</a>), ##<a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP_VS_DBG_RL\">IP_VS_DBG_RL</a>(<a class=\"id\" href=\"#msg\">msg</a>, ...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
];
xr_frag_insert('l/c1/bcca88645fc36090d2be6d1a0b88bb7575acee.xr', __xr_tmp);
