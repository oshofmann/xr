var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  drivers/cpufreq/cpufreq_conservative.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C)  2001 Russell King</span>", 
"<span class=\"comment\"> *            (C)  2003 Venkatesh Pallipadi &lt;venkatesh.pallipadi@intel.com&gt;.</span>", 
"<span class=\"comment\"> *                      Jun Nakajima &lt;jun.nakajima@intel.com&gt;</span>", 
"<span class=\"comment\"> *            (C)  2009 Alexander Clouter &lt;alex@digriz.org.uk&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License version 2 as</span>", 
"<span class=\"comment\"> * published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpufreq\">cpufreq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hrtimer\">hrtimer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tick\">tick</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ktime\">ktime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * dbs is used in this file as a shortform for demandbased switching</span>", 
"<span class=\"comment\"> * It helps to keep variable names smaller, simpler</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEF_FREQUENCY_UP_THRESHOLD\">DEF_FREQUENCY_UP_THRESHOLD</a><span class=\"ts\"/><span class=\"ts\"/>(80)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEF_FREQUENCY_DOWN_THRESHOLD\">DEF_FREQUENCY_DOWN_THRESHOLD</a><span class=\"ts\"/><span class=\"ts\"/>(20)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The polling frequency of this governor depends on the capability of</span>", 
"<span class=\"comment\"> * the processor. Default polling frequency is 1000 times the transition</span>", 
"<span class=\"comment\"> * latency of the processor. The governor will work on any processor with</span>", 
"<span class=\"comment\"> * transition latency &lt;= 10mS, using appropriate sampling</span>", 
"<span class=\"comment\"> * rate.</span>", 
"<span class=\"comment\"> * For CPUs with transition latency &gt; 10mS (mostly drivers with CPUFREQ_ETERNAL)</span>", 
"<span class=\"comment\"> * this governor will not work.</span>", 
"<span class=\"comment\"> * All times here are in uS.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_SAMPLING_RATE_RATIO\">MIN_SAMPLING_RATE_RATIO</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(2)", 
"", 
"static unsigned int <a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LATENCY_MULTIPLIER\">LATENCY_MULTIPLIER</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(1000)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_LATENCY_MULTIPLIER\">MIN_LATENCY_MULTIPLIER</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(100)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEF_SAMPLING_DOWN_FACTOR\">DEF_SAMPLING_DOWN_FACTOR</a><span class=\"ts\"/><span class=\"ts\"/>(1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_SAMPLING_DOWN_FACTOR\">MAX_SAMPLING_DOWN_FACTOR</a><span class=\"ts\"/><span class=\"ts\"/>(10)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRANSITION_LATENCY_LIMIT\">TRANSITION_LATENCY_LIMIT</a><span class=\"ts\"/><span class=\"ts\"/>(10 * 1000 * 1000)", 
"", 
"static void <a class=\"id\" href=\"#do_dbs_timer\">do_dbs_timer</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>);", 
"", 
"struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#cur_policy\">cur_policy</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a> <a class=\"id\" href=\"#work\">work</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#down_skip\">down_skip</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#requested_freq\">requested_freq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#enable\">enable</a>:1;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * percpu mutex that serializes governor limit change with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * do_dbs_timer invocation. We do not want do_dbs_timer to run</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when user is changing the governor or limits.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>;", 
"};", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a>, <a class=\"id\" href=\"#cs_cpu_dbs_info\">cs_cpu_dbs_info</a>);", 
"", 
"static unsigned int <a class=\"id\" href=\"#dbs_enable\">dbs_enable</a>;<span class=\"ts\"/><span class=\"comment\">/* number of CPUs using this policy */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * dbs_mutex protects data in dbs_tuners_ins from concurrent changes on</span>", 
"<span class=\"comment\"> * different CPUs. It protects dbs_enable in governor start/stop.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"static struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#kconservative_wq\">kconservative_wq</a>;", 
"", 
"static struct <a class=\"id\" href=\"#dbs_tuners\">dbs_tuners</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#up_threshold\">up_threshold</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#down_threshold\">down_threshold</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq_step\">freq_step</a>;", 
"} <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a> = <a class=\"id\" href=\"#DEF_FREQUENCY_UP_THRESHOLD\">DEF_FREQUENCY_UP_THRESHOLD</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#down_threshold\">down_threshold</a> = <a class=\"id\" href=\"#DEF_FREQUENCY_DOWN_THRESHOLD\">DEF_FREQUENCY_DOWN_THRESHOLD</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a> = <a class=\"id\" href=\"#DEF_SAMPLING_DOWN_FACTOR\">DEF_SAMPLING_DOWN_FACTOR</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freq_step\">freq_step</a> = 5,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#get_cpu_idle_time_jiffy\">get_cpu_idle_time_jiffy</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> *<a class=\"id\" href=\"#wall\">wall</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#idle_time\">idle_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#busy_time\">busy_time</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a> = <a class=\"id\" href=\"#jiffies64_to_cputime64\">jiffies64_to_cputime64</a>(<a class=\"id\" href=\"#get_jiffies_64\">get_jiffies_64</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#user\">user</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#system\">system</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#busy_time\">busy_time</a>, <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#busy_time\">busy_time</a>, <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#softirq\">softirq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#busy_time\">busy_time</a>, <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#steal\">steal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#busy_time\">busy_time</a>, <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idle_time\">idle_time</a> = <a class=\"id\" href=\"#cputime64_sub\">cputime64_sub</a>(<a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>, <a class=\"id\" href=\"#busy_time\">busy_time</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wall\">wall</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#wall\">wall</a> = (<a class=\"id\" href=\"#cputime64_t\">cputime64_t</a>)<a class=\"id\" href=\"#jiffies_to_usecs\">jiffies_to_usecs</a>(<a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#cputime64_t\">cputime64_t</a>)<a class=\"id\" href=\"#jiffies_to_usecs\">jiffies_to_usecs</a>(<a class=\"id\" href=\"#idle_time\">idle_time</a>);;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#get_cpu_idle_time\">get_cpu_idle_time</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> *<a class=\"id\" href=\"#wall\">wall</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#idle_time\">idle_time</a> = <a class=\"id\" href=\"#get_cpu_idle_time_us\">get_cpu_idle_time_us</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#wall\">wall</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idle_time\">idle_time</a> == -1ULL)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#get_cpu_idle_time_jiffy\">get_cpu_idle_time_jiffy</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#wall\">wall</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#idle_time\">idle_time</a>;", 
"}", 
"", 
"<span class=\"comment\">/* keep track of frequency transitions */</span>", 
"static int", 
"<a class=\"id\" href=\"#dbs_cpufreq_notifier\">dbs_cpufreq_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>, unsigned long <a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_freqs\">cpufreq_freqs</a> *<a class=\"id\" href=\"#freq\">freq</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cs_cpu_dbs_info\">cs_cpu_dbs_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq\">freq</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#enable\">enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we only care if our internally tracked freq moves outside</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the 'valid' ranges of freqency available to us otherwise</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we do not change it</span>", 
"<span class=\"comment\"><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> &gt; <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>|| <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> &lt; <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> = <a class=\"id\" href=\"#freq\">freq</a>-><a class=\"id\" href=\"#new\">new</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#dbs_cpufreq_notifier_block\">dbs_cpufreq_notifier_block</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#dbs_cpufreq_notifier\">dbs_cpufreq_notifier</a>", 
"};", 
"", 
"<span class=\"comment\">/************************** sysfs interface ************************/</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_sampling_rate_max\">show_sampling_rate_max</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPUFREQ: conservative sampling_rate_max \"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"sysfs file is deprecated - used by: %s\\n\", <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", -1U);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_sampling_rate_min\">show_sampling_rate_min</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#define_one_global_ro\">define_one_global_ro</a>(<a class=\"id\" href=\"#sampling_rate_max\">sampling_rate_max</a>);", 
"<a class=\"id\" href=\"#define_one_global_ro\">define_one_global_ro</a>(<a class=\"id\" href=\"#sampling_rate_min\">sampling_rate_min</a>);", 
"", 
"<span class=\"comment\">/* cpufreq_conservative Governor Tunables */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#file_name\">file_name</a>, <a class=\"id\" href=\"#object\">object</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_\">show_</a>##<a class=\"id\" href=\"#file_name\">file_name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#object\">object</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>, <a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a>, <a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>, <a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#down_threshold\">down_threshold</a>, <a class=\"id\" href=\"#down_threshold\">down_threshold</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>, <a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#freq_step\">freq_step</a>, <a class=\"id\" href=\"#freq_step\">freq_step</a>);", 
"", 
"<span class=\"comment\">/*** delete after deprecation time ***/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEPRECATION_MSG\">DEPRECATION_MSG</a>(<a class=\"id\" href=\"#file_name\">file_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPUFREQ: Per core conservative sysfs \"<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>\"interface is deprecated - \" #<a class=\"id\" href=\"#file_name\">file_name</a> \"\\n\");", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#file_name\">file_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_\">show_</a>##<a class=\"id\" href=\"#file_name\">file_name</a>##<a class=\"id\" href=\"#_old\">_old</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#unused\">unused</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPUFREQ: Per core conservative sysfs \"<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>\"interface is deprecated - \" #<a class=\"id\" href=\"#file_name\">file_name</a> \"\\n\");<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#show_\">show_</a>##<a class=\"id\" href=\"#file_name\">file_name</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#buf\">buf</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#down_threshold\">down_threshold</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#freq_step\">freq_step</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#sampling_rate_min\">sampling_rate_min</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#sampling_rate_max\">sampling_rate_max</a>);", 
"", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro_old\">cpufreq_freq_attr_ro_old</a>(<a class=\"id\" href=\"#sampling_rate_min\">sampling_rate_min</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro_old\">cpufreq_freq_attr_ro_old</a>(<a class=\"id\" href=\"#sampling_rate_max\">sampling_rate_max</a>);", 
"", 
"<span class=\"comment\">/*** delete after deprecation time ***/</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_sampling_down_factor\">store_sampling_down_factor</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1 || <a class=\"id\" href=\"#input\">input</a> &gt; <a class=\"id\" href=\"#MAX_SAMPLING_DOWN_FACTOR\">MAX_SAMPLING_DOWN_FACTOR</a> || <a class=\"id\" href=\"#input\">input</a> &lt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a> = <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_sampling_rate\">store_sampling_rate</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#input\">input</a>, <a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_up_threshold\">store_up_threshold</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1 || <a class=\"id\" href=\"#input\">input</a> &gt; 100 ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a> <= <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#down_threshold\">down_threshold</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a> = <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_down_threshold\">store_down_threshold</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* cannot be lower than 11 otherwise freq will not fall */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1 || <a class=\"id\" href=\"#input\">input</a> &lt; 11 || <a class=\"id\" href=\"#input\">input</a> &gt; 100 ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a> >= <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#down_threshold\">down_threshold</a> = <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_ignore_nice_load\">store_ignore_nice_load</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input\">input</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input\">input</a> == <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>) { <span class=\"comment\">/* nothing to do */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a> = <a class=\"id\" href=\"#input\">input</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we need to re-evaluate prev_cpu_idle */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cs_cpu_dbs_info\">cs_cpu_dbs_info</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a> = <a class=\"id\" href=\"#get_cpu_idle_time\">get_cpu_idle_time</a>(<a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a> = <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#j\">j</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_freq_step\">store_freq_step</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input\">input</a> &gt; 100)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a> = 100;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* no need to test here if freq_step is zero as the user might actually</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * want this, they would be crazy though :) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#freq_step\">freq_step</a> = <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a>);", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#down_threshold\">down_threshold</a>);", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>);", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#freq_step\">freq_step</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#dbs_attributes\">dbs_attributes</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_rate_max\">sampling_rate_max</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_rate_min\">sampling_rate_min</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#up_threshold\">up_threshold</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#down_threshold\">down_threshold</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#freq_step\">freq_step</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> <a class=\"id\" href=\"#dbs_attr_group\">dbs_attr_group</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attrs\">attrs</a> = <a class=\"id\" href=\"#dbs_attributes\">dbs_attributes</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"conservative\",", 
"};", 
"", 
"<span class=\"comment\">/*** delete after deprecation time ***/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#file_name\">file_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_\">store_</a>##<a class=\"id\" href=\"#file_name\">file_name</a>##<a class=\"id\" href=\"#_old\">_old</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#unused\">unused</a>, const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPUFREQ: Per core conservative sysfs \"<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>\"interface is deprecated - \" #<a class=\"id\" href=\"#file_name\">file_name</a> \"\\n\");<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#store_\">store_</a>##<a class=\"id\" href=\"#file_name\">file_name</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a>);", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#down_threshold\">down_threshold</a>);", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>);", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#freq_step\">freq_step</a>);", 
"", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#sampling_down_factor\">sampling_down_factor</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#down_threshold\">down_threshold</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#freq_step\">freq_step</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#dbs_attributes_old\">dbs_attributes_old</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_rate_max_old\">sampling_rate_max_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_rate_min_old\">sampling_rate_min_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_rate_old\">sampling_rate_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_down_factor_old\">sampling_down_factor_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#up_threshold_old\">up_threshold_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#down_threshold_old\">down_threshold_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ignore_nice_load_old\">ignore_nice_load_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#freq_step_old\">freq_step_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> <a class=\"id\" href=\"#dbs_attr_group_old\">dbs_attr_group_old</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attrs\">attrs</a> = <a class=\"id\" href=\"#dbs_attributes_old\">dbs_attributes_old</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"conservative\",", 
"};", 
"", 
"<span class=\"comment\">/*** delete after deprecation time ***/</span>", 
"", 
"<span class=\"comment\">/************************** sysfs end ************************/</span>", 
"", 
"static void <a class=\"id\" href=\"#dbs_check_cpu\">dbs_check_cpu</a>(struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#load\">load</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_load\">max_load</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq_target\">freq_target</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Every sampling_rate, we check, if current idle time is less</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * than 20% (default), then we try to increase frequency</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Every sampling_rate*sampling_down_factor, we check, if current</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * idle time is more than 80%, then we try to decrease frequency</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Any frequency increase takes it to the maximum frequency.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Frequency reduction happens at minimum steps of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 5% (default) of maximum frequency</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get Absolute Load */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>, <a class=\"id\" href=\"#cur_idle_time\">cur_idle_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#idle_time\">idle_time</a>, <a class=\"id\" href=\"#wall_time\">wall_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cs_cpu_dbs_info\">cs_cpu_dbs_info</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_idle_time\">cur_idle_time</a> = <a class=\"id\" href=\"#get_cpu_idle_time\">get_cpu_idle_time</a>(<a class=\"id\" href=\"#j\">j</a>, &amp;<a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wall_time\">wall_time</a> = (unsigned int) <a class=\"id\" href=\"#cputime64_sub\">cputime64_sub</a>(<a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a> = <a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle_time\">idle_time</a> = (unsigned int) <a class=\"id\" href=\"#cputime64_sub\">cputime64_sub</a>(<a class=\"id\" href=\"#cur_idle_time\">cur_idle_time</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a> = <a class=\"id\" href=\"#cur_idle_time\">cur_idle_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#cur_nice\">cur_nice</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cur_nice_jiffies\">cur_nice_jiffies</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_nice\">cur_nice</a> = <a class=\"id\" href=\"#cputime64_sub\">cputime64_sub</a>(<a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#j\">j</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Assumption: nice time between sampling periods will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * be less than 2^32 jiffies for 32 bit sys</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_nice_jiffies\">cur_nice_jiffies</a> = (unsigned long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime64_to_jiffies64\">cputime64_to_jiffies64</a>(<a class=\"id\" href=\"#cur_nice\">cur_nice</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a> = <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#j\">j</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle_time\">idle_time</a> += <a class=\"id\" href=\"#jiffies_to_usecs\">jiffies_to_usecs</a>(<a class=\"id\" href=\"#cur_nice_jiffies\">cur_nice_jiffies</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#wall_time\">wall_time</a> || <a class=\"id\" href=\"#wall_time\">wall_time</a> &lt; <a class=\"id\" href=\"#idle_time\">idle_time</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#load\">load</a> = 100 * (<a class=\"id\" href=\"#wall_time\">wall_time</a> - <a class=\"id\" href=\"#idle_time\">idle_time</a>) / <a class=\"id\" href=\"#wall_time\">wall_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#load\">load</a> &gt; <a class=\"id\" href=\"#max_load\">max_load</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_load\">max_load</a> = <a class=\"id\" href=\"#load\">load</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * break out if we 'cannot' reduce the speed as the user might</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * want freq_step to be zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#freq_step\">freq_step</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for frequency increase */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_load\">max_load</a> &gt; <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#down_skip\">down_skip</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if we are already at full speed then break out early */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> == <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq_target\">freq_target</a> = (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#freq_step\">freq_step</a> * <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>) / 100;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* max freq cannot be less than 100. But who knows.... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#freq_target\">freq_target</a> == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq_target\">freq_target</a> = 5;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> += <a class=\"id\" href=\"#freq_target\">freq_target</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> &gt; <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_RELATION_H\">CPUFREQ_RELATION_H</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The optimal frequency is the frequency that is the lowest that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can support the current CPU usage without triggering the up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * policy. To be safe, we focus 10 points under the threshold.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_load\">max_load</a> &lt; (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#down_threshold\">down_threshold</a> - 10)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq_target\">freq_target</a> = (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#freq_step\">freq_step</a> * <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>) / 100;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> -= <a class=\"id\" href=\"#freq_target\">freq_target</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> &lt; <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if we cannot reduce the frequency anymore, break out early</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a> == <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_RELATION_H\">CPUFREQ_RELATION_H</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#do_dbs_timer\">do_dbs_timer</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a>, <a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We want all CPUs to do sampling nearly on same jiffy */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#usecs_to_jiffies\">usecs_to_jiffies</a>(<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> -= <a class=\"id\" href=\"#jiffies\">jiffies</a> % <a class=\"id\" href=\"#delay\">delay</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_check_cpu\">dbs_check_cpu</a>(<a class=\"id\" href=\"#dbs_info\">dbs_info</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_delayed_work_on\">queue_delayed_work_on</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#kconservative_wq\">kconservative_wq</a>, &amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#delay\">delay</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dbs_timer_init\">dbs_timer_init</a>(struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* We want all CPUs to do sampling nearly on same jiffy */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#usecs_to_jiffies\">usecs_to_jiffies</a>(<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> -= <a class=\"id\" href=\"#jiffies\">jiffies</a> % <a class=\"id\" href=\"#delay\">delay</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#enable\">enable</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_DELAYED_WORK_DEFERRABLE\">INIT_DELAYED_WORK_DEFERRABLE</a>(&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#do_dbs_timer\">do_dbs_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_delayed_work_on\">queue_delayed_work_on</a>(<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#kconservative_wq\">kconservative_wq</a>, &amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#work\">work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dbs_timer_exit\">dbs_timer_exit</a>(struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#enable\">enable</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#work\">work</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cpufreq_governor_dbs\">cpufreq_governor_dbs</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cs_cpu_dbs_info\">cs_cpu_dbs_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_GOV_START\">CPUFREQ_GOV_START</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)) || (!<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sysfs_create_group\">sysfs_create_group</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dbs_attr_group_old\">dbs_attr_group_old</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cs_cpu_dbs_info\">cs_cpu_dbs_info</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a> = <a class=\"id\" href=\"#policy\">policy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a> = <a class=\"id\" href=\"#get_cpu_idle_time\">get_cpu_idle_time</a>(<a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#j\">j</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#down_skip\">down_skip</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#requested_freq\">requested_freq</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_enable\">dbs_enable</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Start the timerschedule work, when this governor</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is used for first time</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_enable\">dbs_enable</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#latency\">latency</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* policy latency is in nS. Convert it to uS first */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#latency\">latency</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>.<a class=\"id\" href=\"#transition_latency\">transition_latency</a> / 1000;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#latency\">latency</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#latency\">latency</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sysfs_create_group\">sysfs_create_group</a>(<a class=\"id\" href=\"#cpufreq_global_kobject\">cpufreq_global_kobject</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dbs_attr_group\">dbs_attr_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * conservative does not implement micro like ondemand</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * governor, thus we are bound to jiffes/HZ</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MIN_SAMPLING_RATE_RATIO\">MIN_SAMPLING_RATE_RATIO</a> * <a class=\"id\" href=\"#jiffies_to_usecs\">jiffies_to_usecs</a>(10);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Bring kernel and HW constraints together */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MIN_LATENCY_MULTIPLIER\">MIN_LATENCY_MULTIPLIER</a> * <a class=\"id\" href=\"#latency\">latency</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#latency\">latency</a> * <a class=\"id\" href=\"#LATENCY_MULTIPLIER\">LATENCY_MULTIPLIER</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_register_notifier\">cpufreq_register_notifier</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dbs_cpufreq_notifier_block\">dbs_cpufreq_notifier_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_TRANSITION_NOTIFIER\">CPUFREQ_TRANSITION_NOTIFIER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_timer_init\">dbs_timer_init</a>(<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_GOV_STOP\">CPUFREQ_GOV_STOP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_timer_exit\">dbs_timer_exit</a>(<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dbs_attr_group_old\">dbs_attr_group_old</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_enable\">dbs_enable</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_destroy\">mutex_destroy</a>(&amp;<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Stop the timerschedule work, when this governor</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is used for first time</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_enable\">dbs_enable</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_unregister_notifier\">cpufreq_unregister_notifier</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dbs_cpufreq_notifier_block\">dbs_cpufreq_notifier_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_TRANSITION_NOTIFIER\">CPUFREQ_TRANSITION_NOTIFIER</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dbs_enable\">dbs_enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(<a class=\"id\" href=\"#cpufreq_global_kobject\">cpufreq_global_kobject</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#dbs_attr_group\">dbs_attr_group</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_GOV_LIMITS\">CPUFREQ_GOV_LIMITS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a> &lt; <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>-><a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>, <a class=\"id\" href=\"#CPUFREQ_RELATION_H\">CPUFREQ_RELATION_H</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a> &gt; <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>-><a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>, <a class=\"id\" href=\"#CPUFREQ_RELATION_L\">CPUFREQ_RELATION_L</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE\">CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE</a>", 
"static", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> <a class=\"id\" href=\"#cpufreq_gov_conservative\">cpufreq_gov_conservative</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= \"conservative\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#governor\">governor</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpufreq_governor_dbs\">cpufreq_governor_dbs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#max_transition_latency\">max_transition_latency</a><span class=\"ts\"/>= <a class=\"id\" href=\"#TRANSITION_LATENCY_LIMIT\">TRANSITION_LATENCY_LIMIT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#cpufreq_gov_dbs_init\">cpufreq_gov_dbs_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kconservative_wq\">kconservative_wq</a> = <a class=\"id\" href=\"#create_workqueue\">create_workqueue</a>(\"kconservative\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kconservative_wq\">kconservative_wq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Creation of kconservative failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#cpufreq_register_governor\">cpufreq_register_governor</a>(&amp;<a class=\"id\" href=\"#cpufreq_gov_conservative\">cpufreq_gov_conservative</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#kconservative_wq\">kconservative_wq</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#cpufreq_gov_dbs_exit\">cpufreq_gov_dbs_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_unregister_governor\">cpufreq_unregister_governor</a>(&amp;<a class=\"id\" href=\"#cpufreq_gov_conservative\">cpufreq_gov_conservative</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#kconservative_wq\">kconservative_wq</a>);", 
"}", 
"", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Alexander Clouter <alex@digriz.org.uk>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"'cpufreq_conservative' - A dynamic cpufreq governor for \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"Low Latency Frequency Transition capable processors \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"optimised for use in a battery environment\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE\">CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE</a>", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#cpufreq_gov_dbs_init\">cpufreq_gov_dbs_init</a>);", 
"#else", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#cpufreq_gov_dbs_init\">cpufreq_gov_dbs_init</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#cpufreq_gov_dbs_exit\">cpufreq_gov_dbs_exit</a>);", 
];
xr_frag_insert('l/c2/6037ec011c47d12490bb3c3fc3694e47f9749d.xr', __xr_tmp);
