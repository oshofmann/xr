var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NTP state machine interfaces and logic.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This code was mainly moved from kernel/timer.c and kernel/time.c</span>", 
"<span class=\"comment\"> * Please see those files for relevant copyright info and historical</span>", 
"<span class=\"comment\"> * changelogs.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#clocksource\">clocksource</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hrtimer\">hrtimer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#math64\">math64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timex\">timex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NTP timekeeping variables:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* USER_HZ period (usecs): */</span>", 
"unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_usec\">tick_usec</a> = <a class=\"id\" href=\"#TICK_USEC\">TICK_USEC</a>;", 
"", 
"<span class=\"comment\">/* ACTHZ period (nsecs): */</span>", 
"unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_nsec\">tick_nsec</a>;", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_length\">tick_length</a>;", 
"static <a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_length_base\">tick_length_base</a>;", 
"", 
"static struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#leap_timer\">leap_timer</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_TICKADJ\">MAX_TICKADJ</a><span class=\"ts\"/><span class=\"ts\"/>500LL<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* usecs */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_TICKADJ_SCALED\">MAX_TICKADJ_SCALED</a> \\", 
"<span class=\"ts\"/>(((<a class=\"id\" href=\"#MAX_TICKADJ\">MAX_TICKADJ</a> * <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a>) << <a class=\"id\" href=\"#NTP_SCALE_SHIFT\">NTP_SCALE_SHIFT</a>) / <a class=\"id\" href=\"#NTP_INTERVAL_FREQ\">NTP_INTERVAL_FREQ</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * phase-lock loop variables</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * clock synchronization status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (TIME_ERROR prevents overwriting the CMOS clock)</span>", 
"<span class=\"comment\"> */</span>", 
"static int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_state\">time_state</a> = <a class=\"id\" href=\"#TIME_OK\">TIME_OK</a>;", 
"", 
"<span class=\"comment\">/* clock status bits:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_status\">time_status</a> = <a class=\"id\" href=\"#STA_UNSYNC\">STA_UNSYNC</a>;", 
"", 
"<span class=\"comment\">/* TAI offset (secs):<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"static long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_tai\">time_tai</a>;", 
"", 
"<span class=\"comment\">/* time adjustment (nsecs):<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"static <a class=\"id\" href=\"#s64\">s64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_offset\">time_offset</a>;", 
"", 
"<span class=\"comment\">/* pll time constant:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"static long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_constant\">time_constant</a> = 2;", 
"", 
"<span class=\"comment\">/* maximum error (usecs):<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"static long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_maxerror\">time_maxerror</a> = <a class=\"id\" href=\"#NTP_PHASE_LIMIT\">NTP_PHASE_LIMIT</a>;", 
"", 
"<span class=\"comment\">/* estimated error (usecs):<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"static long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_esterror\">time_esterror</a> = <a class=\"id\" href=\"#NTP_PHASE_LIMIT\">NTP_PHASE_LIMIT</a>;", 
"", 
"<span class=\"comment\">/* frequency offset (scaled nsecs/secs):<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"static <a class=\"id\" href=\"#s64\">s64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_freq\">time_freq</a>;", 
"", 
"<span class=\"comment\">/* time at last adjustment (secs):<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"static long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_reftime\">time_reftime</a>;", 
"", 
"static long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_adjust\">time_adjust</a>;", 
"", 
"<span class=\"comment\">/* constant (boot-param configurable) NTP tick adjustment (upscaled)<span class=\"ts\"/>*/</span>", 
"static <a class=\"id\" href=\"#s64\">s64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ntp_tick_adj\">ntp_tick_adj</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NTP methods:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Update (tick_length, tick_length_base, tick_nsec), based</span>", 
"<span class=\"comment\"> * on (tick_usec, ntp_tick_adj, time_freq):</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ntp_update_frequency\">ntp_update_frequency</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#second_length\">second_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#new_base\">new_base</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#second_length\">second_length</a><span class=\"ts\"/><span class=\"ts\"/> = (<a class=\"id\" href=\"#u64\">u64</a>)(<a class=\"id\" href=\"#tick_usec\">tick_usec</a> * <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a> * <a class=\"id\" href=\"#USER_HZ\">USER_HZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><< <a class=\"id\" href=\"#NTP_SCALE_SHIFT\">NTP_SCALE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#second_length\">second_length</a><span class=\"ts\"/><span class=\"ts\"/>+= <a class=\"id\" href=\"#ntp_tick_adj\">ntp_tick_adj</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#second_length\">second_length</a><span class=\"ts\"/><span class=\"ts\"/>+= <a class=\"id\" href=\"#time_freq\">time_freq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_nsec\">tick_nsec</a><span class=\"ts\"/><span class=\"ts\"/> = <a class=\"id\" href=\"#div_u64\">div_u64</a>(<a class=\"id\" href=\"#second_length\">second_length</a>, <a class=\"id\" href=\"#HZ\">HZ</a>) >> <a class=\"id\" href=\"#NTP_SCALE_SHIFT\">NTP_SCALE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_base\">new_base</a><span class=\"ts\"/><span class=\"ts\"/> = <a class=\"id\" href=\"#div_u64\">div_u64</a>(<a class=\"id\" href=\"#second_length\">second_length</a>, <a class=\"id\" href=\"#NTP_INTERVAL_FREQ\">NTP_INTERVAL_FREQ</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't wait for the next second_overflow, apply</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the change to the tick length immediately:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_length\">tick_length</a><span class=\"ts\"/><span class=\"ts\"/>+= <a class=\"id\" href=\"#new_base\">new_base</a> - <a class=\"id\" href=\"#tick_length_base\">tick_length_base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_length_base\">tick_length_base</a><span class=\"ts\"/> = <a class=\"id\" href=\"#new_base\">new_base</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#ntp_update_offset_fll\">ntp_update_offset_fll</a>(<a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#offset64\">offset64</a>, long <a class=\"id\" href=\"#secs\">secs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_status\">time_status</a> &= ~<a class=\"id\" href=\"#STA_MODE\">STA_MODE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secs\">secs</a> &lt; <a class=\"id\" href=\"#MINSEC\">MINSEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#time_status\">time_status</a> &amp; <a class=\"id\" href=\"#STA_FLL\">STA_FLL</a>) && (<a class=\"id\" href=\"#secs\">secs</a> <= <a class=\"id\" href=\"#MAXSEC\">MAXSEC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_status\">time_status</a> |= <a class=\"id\" href=\"#STA_MODE\">STA_MODE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#div_s64\">div_s64</a>(<a class=\"id\" href=\"#offset64\">offset64</a> << (<a class=\"id\" href=\"#NTP_SCALE_SHIFT\">NTP_SCALE_SHIFT</a> - <a class=\"id\" href=\"#SHIFT_FLL\">SHIFT_FLL</a>), <a class=\"id\" href=\"#secs\">secs</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ntp_update_offset\">ntp_update_offset</a>(long <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#freq_adj\">freq_adj</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#offset64\">offset64</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#secs\">secs</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#time_status\">time_status</a> &amp; <a class=\"id\" href=\"#STA_PLL\">STA_PLL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#time_status\">time_status</a> &amp; <a class=\"id\" href=\"#STA_NANO\">STA_NANO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> *= <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Scale the phase adjustment and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * clamp to the operating range.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#MAXPHASE\">MAXPHASE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#offset\">offset</a>, -<a class=\"id\" href=\"#MAXPHASE\">MAXPHASE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Select how the frequency is to be controlled</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and in which mode (PLL or FLL).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secs\">secs</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>() - <a class=\"id\" href=\"#time_reftime\">time_reftime</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#time_status\">time_status</a> &amp; <a class=\"id\" href=\"#STA_FREQHOLD\">STA_FREQHOLD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secs\">secs</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_reftime\">time_reftime</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset64\">offset64</a>    = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freq_adj\">freq_adj</a>    = (<a class=\"id\" href=\"#offset64\">offset64</a> * <a class=\"id\" href=\"#secs\">secs</a>) <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NTP_SCALE_SHIFT\">NTP_SCALE_SHIFT</a> - 2 * (<a class=\"id\" href=\"#SHIFT_PLL\">SHIFT_PLL</a> + 2 + <a class=\"id\" href=\"#time_constant\">time_constant</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freq_adj\">freq_adj</a>    += <a class=\"id\" href=\"#ntp_update_offset_fll\">ntp_update_offset_fll</a>(<a class=\"id\" href=\"#offset64\">offset64</a>, <a class=\"id\" href=\"#secs\">secs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freq_adj\">freq_adj</a>    = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#freq_adj\">freq_adj</a> + <a class=\"id\" href=\"#time_freq\">time_freq</a>, <a class=\"id\" href=\"#MAXFREQ_SCALED\">MAXFREQ_SCALED</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_freq\">time_freq</a>   = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#freq_adj\">freq_adj</a>, -<a class=\"id\" href=\"#MAXFREQ_SCALED\">MAXFREQ_SCALED</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_offset\">time_offset</a> = <a class=\"id\" href=\"#div_s64\">div_s64</a>(<a class=\"id\" href=\"#offset64\">offset64</a> << <a class=\"id\" href=\"#NTP_SCALE_SHIFT\">NTP_SCALE_SHIFT</a>, <a class=\"id\" href=\"#NTP_INTERVAL_FREQ\">NTP_INTERVAL_FREQ</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ntp_clear - Clears the NTP state variables</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Must be called while holding a write on the xtime_lock</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ntp_clear\">ntp_clear</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_adjust\">time_adjust</a><span class=\"ts\"/>= 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* stop active adjtime() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_status\">time_status</a><span class=\"ts\"/>|= <a class=\"id\" href=\"#STA_UNSYNC\">STA_UNSYNC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_maxerror\">time_maxerror</a><span class=\"ts\"/>= <a class=\"id\" href=\"#NTP_PHASE_LIMIT\">NTP_PHASE_LIMIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_esterror\">time_esterror</a><span class=\"ts\"/>= <a class=\"id\" href=\"#NTP_PHASE_LIMIT\">NTP_PHASE_LIMIT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ntp_update_frequency\">ntp_update_frequency</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_length\">tick_length</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tick_length_base\">tick_length_base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_offset\">time_offset</a><span class=\"ts\"/>= 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Leap second processing. If in leap-insert state at the end of the</span>", 
"<span class=\"comment\"> * day, the system clock is set back one second; if in leap-delete</span>", 
"<span class=\"comment\"> * state, the system clock is set ahead one second.</span>", 
"<span class=\"comment\"> */</span>", 
"static enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> <a class=\"id\" href=\"#ntp_leap_second\">ntp_leap_second</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#HRTIMER_NORESTART\">HRTIMER_NORESTART</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_seqlock\">write_seqlock</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#time_state\">time_state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIME_OK\">TIME_OK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIME_INS\">TIME_INS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timekeeping_leap_insert\">timekeeping_leap_insert</a>(-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_state\">time_state</a> = <a class=\"id\" href=\"#TIME_OOP\">TIME_OOP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Clock: inserting leap second 23:59:60 UTC\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_add_expires_ns\">hrtimer_add_expires_ns</a>(&amp;<a class=\"id\" href=\"#leap_timer\">leap_timer</a>, <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#HRTIMER_RESTART\">HRTIMER_RESTART</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIME_DEL\">TIME_DEL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timekeeping_leap_insert\">timekeeping_leap_insert</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_tai\">time_tai</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_state\">time_state</a> = <a class=\"id\" href=\"#TIME_WAIT\">TIME_WAIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Clock: deleting leap second 23:59:59 UTC\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIME_OOP\">TIME_OOP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_tai\">time_tai</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_state\">time_state</a> = <a class=\"id\" href=\"#TIME_WAIT\">TIME_WAIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIME_WAIT\">TIME_WAIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#time_status\">time_status</a> &amp; (<a class=\"id\" href=\"#STA_INS\">STA_INS</a> | <a class=\"id\" href=\"#STA_DEL\">STA_DEL</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_state\">time_state</a> = <a class=\"id\" href=\"#TIME_OK\">TIME_OK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_sequnlock\">write_sequnlock</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * this routine handles the overflow of the microsecond field</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The tricky bits of code to handle the accurate clock support</span>", 
"<span class=\"comment\"> * were provided by Dave Mills (Mills@UDEL.EDU) of NTP fame.</span>", 
"<span class=\"comment\"> * They were originally developed for SUN and DEC kernels.</span>", 
"<span class=\"comment\"> * All the kudos should go to Dave for this stuff.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#second_overflow\">second_overflow</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Bump the maxerror field */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_maxerror\">time_maxerror</a> += <a class=\"id\" href=\"#MAXFREQ\">MAXFREQ</a> / <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_maxerror\">time_maxerror</a> &gt; <a class=\"id\" href=\"#NTP_PHASE_LIMIT\">NTP_PHASE_LIMIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_maxerror\">time_maxerror</a> = <a class=\"id\" href=\"#NTP_PHASE_LIMIT\">NTP_PHASE_LIMIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_status\">time_status</a> |= <a class=\"id\" href=\"#STA_UNSYNC\">STA_UNSYNC</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Compute the phase adjustment for the next second. The offset is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reduced by a fixed factor times the time constant.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_length\">tick_length</a><span class=\"ts\"/> = <a class=\"id\" href=\"#tick_length_base\">tick_length_base</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a><span class=\"ts\"/><span class=\"ts\"/> = <a class=\"id\" href=\"#shift_right\">shift_right</a>(<a class=\"id\" href=\"#time_offset\">time_offset</a>, <a class=\"id\" href=\"#SHIFT_PLL\">SHIFT_PLL</a> + <a class=\"id\" href=\"#time_constant\">time_constant</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_offset\">time_offset</a><span class=\"ts\"/>-= <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_length\">tick_length</a><span class=\"ts\"/>+= <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#time_adjust\">time_adjust</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_adjust\">time_adjust</a> &gt; <a class=\"id\" href=\"#MAX_TICKADJ\">MAX_TICKADJ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_adjust\">time_adjust</a> -= <a class=\"id\" href=\"#MAX_TICKADJ\">MAX_TICKADJ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_length\">tick_length</a> += <a class=\"id\" href=\"#MAX_TICKADJ_SCALED\">MAX_TICKADJ_SCALED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_adjust\">time_adjust</a> &lt; -<a class=\"id\" href=\"#MAX_TICKADJ\">MAX_TICKADJ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_adjust\">time_adjust</a> += <a class=\"id\" href=\"#MAX_TICKADJ\">MAX_TICKADJ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_length\">tick_length</a> -= <a class=\"id\" href=\"#MAX_TICKADJ_SCALED\">MAX_TICKADJ_SCALED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_length\">tick_length</a> += (<a class=\"id\" href=\"#s64\">s64</a>)(<a class=\"id\" href=\"#time_adjust\">time_adjust</a> * <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a> / <a class=\"id\" href=\"#NTP_INTERVAL_FREQ\">NTP_INTERVAL_FREQ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> << <a class=\"id\" href=\"#NTP_SCALE_SHIFT\">NTP_SCALE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_adjust\">time_adjust</a> = 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_GENERIC_CMOS_UPDATE\">CONFIG_GENERIC_CMOS_UPDATE</a>", 
"", 
"<span class=\"comment\">/* Disable the cmos update - used by virtualization and embedded */</span>", 
"int <a class=\"id\" href=\"#no_sync_cmos_clock\">no_sync_cmos_clock</a>  <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"static void <a class=\"id\" href=\"#sync_cmos_clock\">sync_cmos_clock</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>);", 
"", 
"static <a class=\"id\" href=\"#DECLARE_DELAYED_WORK\">DECLARE_DELAYED_WORK</a>(<a class=\"id\" href=\"#sync_cmos_work\">sync_cmos_work</a>, <a class=\"id\" href=\"#sync_cmos_clock\">sync_cmos_clock</a>);", 
"", 
"static void <a class=\"id\" href=\"#sync_cmos_clock\">sync_cmos_clock</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fail\">fail</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we have an externally synchronized Linux clock, then update</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * CMOS clock accordingly every ~11 minutes. Set_rtc_mmss() has to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * called as close as possible to 500 ms before the new second starts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This code is run on a timer.  If the clock is set, that timer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may not expire at the correct time.  Thus, we adjust...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ntp_synced\">ntp_synced</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Not synced, exit, do not restart a timer (if one is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * running, let it run out).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#getnstimeofday\">getnstimeofday</a>(&amp;<a class=\"id\" href=\"#now\">now</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#abs\">abs</a>(<a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> - (<a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a> / 2)) <= <a class=\"id\" href=\"#tick_nsec\">tick_nsec</a> / 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fail\">fail</a> = <a class=\"id\" href=\"#update_persistent_clock\">update_persistent_clock</a>(<a class=\"id\" href=\"#now\">now</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = (<a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a> / 2) - <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> - (<a class=\"id\" href=\"#TICK_NSEC\">TICK_NSEC</a> / 2);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#next\">next</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> += <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fail\">fail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = 659;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#next\">next</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> >= <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> -= <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#sync_cmos_work\">sync_cmos_work</a>, <a class=\"id\" href=\"#timespec_to_jiffies\">timespec_to_jiffies</a>(&amp;<a class=\"id\" href=\"#next\">next</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#notify_cmos_timer\">notify_cmos_timer</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#no_sync_cmos_clock\">no_sync_cmos_clock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#sync_cmos_work\">sync_cmos_work</a>, 0);", 
"}", 
"", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#notify_cmos_timer\">notify_cmos_timer</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Start the leap seconds timer:</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ntp_start_leap_timer\">ntp_start_leap_timer</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_status\">time_status</a> &amp; <a class=\"id\" href=\"#STA_INS\">STA_INS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_state\">time_state</a> = <a class=\"id\" href=\"#TIME_INS\">TIME_INS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> += 86400 - <a class=\"id\" href=\"#now\">now</a> % 86400;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_start\">hrtimer_start</a>(&amp;<a class=\"id\" href=\"#leap_timer\">leap_timer</a>, <a class=\"id\" href=\"#ktime_set\">ktime_set</a>(<a class=\"id\" href=\"#now\">now</a>, 0), <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_status\">time_status</a> &amp; <a class=\"id\" href=\"#STA_DEL\">STA_DEL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_state\">time_state</a> = <a class=\"id\" href=\"#TIME_DEL\">TIME_DEL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> += 86400 - (<a class=\"id\" href=\"#now\">now</a> + 1) % 86400;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_start\">hrtimer_start</a>(&amp;<a class=\"id\" href=\"#leap_timer\">leap_timer</a>, <a class=\"id\" href=\"#ktime_set\">ktime_set</a>(<a class=\"id\" href=\"#now\">now</a>, 0), <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Propagate a new txc-&gt;status value into the NTP state:</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#process_adj_status\">process_adj_status</a>(struct <a class=\"id\" href=\"#timex\">timex</a> *<a class=\"id\" href=\"#txc\">txc</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#time_status\">time_status</a> &amp; <a class=\"id\" href=\"#STA_PLL\">STA_PLL</a>) && !(<a class=\"id\" href=\"#txc\">txc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#STA_PLL\">STA_PLL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_state\">time_state</a> = <a class=\"id\" href=\"#TIME_OK\">TIME_OK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_status\">time_status</a> = <a class=\"id\" href=\"#STA_UNSYNC\">STA_UNSYNC</a>;", 
];
xr_frag_insert('l/c2/fe071839cfb896cb73e0c791fc848861560cec.xr', __xr_tmp);
