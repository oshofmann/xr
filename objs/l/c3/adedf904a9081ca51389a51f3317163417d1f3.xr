var __xr_tmp = [
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_groups\">nl_groups</a> && (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || !(<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a>[0]))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_grab\">netlink_table_grab</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_update_subscriptions\">netlink_update_subscriptions</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#subscriptions\">subscriptions</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#hweight32\">hweight32</a>(<a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_groups\">nl_groups</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#hweight32\">hweight32</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a>[0]));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a>[0] = (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a>[0] &amp; ~0xffffffffUL) | <a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_groups\">nl_groups</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_update_listeners\">netlink_update_listeners</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#netlink_connect\">netlink_connect</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#alen\">alen</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_nl\">sockaddr_nl</a> *<a class=\"id\" href=\"#nladdr\">nladdr</a> = (struct <a class=\"id\" href=\"#sockaddr_nl\">sockaddr_nl</a> *)<a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alen\">alen</a> &lt; sizeof(<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a> == <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a><span class=\"ts\"/>= <a class=\"id\" href=\"#NETLINK_UNCONNECTED\">NETLINK_UNCONNECTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#dst_pid\">dst_pid</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#dst_group\">dst_group</a>  = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#AF_NETLINK\">AF_NETLINK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only superuser is allowed to send multicasts */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_groups\">nl_groups</a> && !<a class=\"id\" href=\"#netlink_capable\">netlink_capable</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#NL_NONROOT_SEND\">NL_NONROOT_SEND</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#pid\">pid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#netlink_autobind\">netlink_autobind</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a><span class=\"ts\"/>= <a class=\"id\" href=\"#NETLINK_CONNECTED\">NETLINK_CONNECTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#dst_pid\">dst_pid</a> <span class=\"ts\"/>= <a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_pid\">nl_pid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#dst_group\">dst_group</a>  = <a class=\"id\" href=\"#ffs\">ffs</a>(<a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_groups\">nl_groups</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#netlink_getname\">netlink_getname</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int *<a class=\"id\" href=\"#addr_len\">addr_len</a>, int <a class=\"id\" href=\"#peer\">peer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_SOCKADDR\">DECLARE_SOCKADDR</a>(struct <a class=\"id\" href=\"#sockaddr_nl\">sockaddr_nl</a> *, <a class=\"id\" href=\"#nladdr\">nladdr</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_family\">nl_family</a> = <a class=\"id\" href=\"#AF_NETLINK\">AF_NETLINK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_pad\">nl_pad</a> = 0;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#addr_len\">addr_len</a> = sizeof(*<a class=\"id\" href=\"#nladdr\">nladdr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peer\">peer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_pid\">nl_pid</a> = <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#dst_pid\">dst_pid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_groups\">nl_groups</a> = <a class=\"id\" href=\"#netlink_group_mask\">netlink_group_mask</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#dst_group\">dst_group</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_pid\">nl_pid</a> = <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_groups\">nl_groups</a> = <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a> ? <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a>[0] : 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#netlink_overrun\">netlink_overrun</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NETLINK_RECV_NO_ENOBUFS\">NETLINK_RECV_NO_ENOBUFS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(0, &amp;<a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> = <a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_error_report\">sk_error_report</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#netlink_getsockbypid\">netlink_getsockbypid</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#ssk\">ssk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#netlink_lookup\">netlink_lookup</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#ssk\">ssk</a>), <a class=\"id\" href=\"#ssk\">ssk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock\">sock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ECONNREFUSED\">ECONNREFUSED</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't bother queuing skb if kernel socket has no input function */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#NETLINK_CONNECTED\">NETLINK_CONNECTED</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#dst_pid\">dst_pid</a> != <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#ssk\">ssk</a>)-><a class=\"id\" href=\"#pid\">pid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ECONNREFUSED\">ECONNREFUSED</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock\">sock</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#netlink_getsockbyfilp\">netlink_getsockbyfilp</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISSOCK\">S_ISSOCK</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOTSOCK\">ENOTSOCK</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#SOCKET_I\">SOCKET_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> != <a class=\"id\" href=\"#AF_NETLINK\">AF_NETLINK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock\">sock</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Attach a skb to a netlink socket.</span>", 
"<span class=\"comment\"> * The caller must hold a reference to the destination socket. On error, the</span>", 
"<span class=\"comment\"> * reference is dropped. The skb is not send to the destination, just all</span>", 
"<span class=\"comment\"> * all error checks are performed and memory in the queue is reserved.</span>", 
"<span class=\"comment\"> * Return values:</span>", 
"<span class=\"comment\"> * &lt; 0: error. skb freed, reference to sock dropped.</span>", 
"<span class=\"comment\"> * 0: continue</span>", 
"<span class=\"comment\"> * 1: repeat lookup - reference dropped while waiting for socket memory.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netlink_attachskb\">netlink_attachskb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      long *<a class=\"id\" href=\"#timeo\">timeo</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#ssk\">ssk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#test_bit\">test_bit</a>(0, &amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_WAITQUEUE\">DECLARE_WAITQUEUE</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#timeo\">timeo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ssk\">ssk</a> || <a class=\"id\" href=\"#netlink_is_kernel\">netlink_is_kernel</a>(<a class=\"id\" href=\"#ssk\">ssk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_overrun\">netlink_overrun</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_wait_queue\">add_wait_queue</a>(&amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#wait\">wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#test_bit\">test_bit</a>(0, &amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#state\">state</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#timeo\">timeo</a> = <a class=\"id\" href=\"#schedule_timeout\">schedule_timeout</a>(*<a class=\"id\" href=\"#timeo\">timeo</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_wait_queue\">remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#wait\">wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sock_intr_errno\">sock_intr_errno</a>(*<a class=\"id\" href=\"#timeo\">timeo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_r\">skb_set_owner_r</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#netlink_sendskb\">netlink_sendskb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_tail\">skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#netlink_detachskb\">netlink_detachskb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#netlink_trim\">netlink_trim</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#allocation\">allocation</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_orphan\">skb_orphan</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#delta\">delta</a> * 2 &lt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_shared\">skb_shared</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#nskb\">nskb</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#allocation\">allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#nskb\">nskb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#nskb\">nskb</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_expand_head\">pskb_expand_head</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, -<a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#allocation\">allocation</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> -= <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netlink_rcv_wake\">netlink_rcv_wake</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(0, &amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(0, &amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#netlink_unicast_kernel\">netlink_unicast_kernel</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ECONNREFUSED\">ECONNREFUSED</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#netlink_rcv\">netlink_rcv</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_r\">skb_set_owner_r</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#netlink_rcv\">netlink_rcv</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#netlink_unicast\">netlink_unicast</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#ssk\">ssk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>, int <a class=\"id\" href=\"#nonblock\">nonblock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#timeo\">timeo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#netlink_trim\">netlink_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#gfp_any\">gfp_any</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timeo\">timeo</a> = <a class=\"id\" href=\"#sock_sndtimeo\">sock_sndtimeo</a>(<a class=\"id\" href=\"#ssk\">ssk</a>, <a class=\"id\" href=\"#nonblock\">nonblock</a>);", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#netlink_getsockbypid\">netlink_getsockbypid</a>(<a class=\"id\" href=\"#ssk\">ssk</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#netlink_is_kernel\">netlink_is_kernel</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#netlink_unicast_kernel\">netlink_unicast_kernel</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_filter\">sk_filter</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#netlink_attachskb\">netlink_attachskb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#timeo\">timeo</a>, <a class=\"id\" href=\"#ssk\">ssk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netlink_sendskb\">netlink_sendskb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#netlink_unicast\">netlink_unicast</a>);", 
"", 
"int <a class=\"id\" href=\"#netlink_has_listeners\">netlink_has_listeners</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned int <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#listeners\">listeners</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#netlink_is_kernel\">netlink_is_kernel</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#listeners\">listeners</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#listeners\">listeners</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group\">group</a> - 1 &lt; <a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#groups\">groups</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#group\">group</a> - 1, <a class=\"id\" href=\"#listeners\">listeners</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#netlink_has_listeners\">netlink_has_listeners</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#netlink_broadcast_deliver\">netlink_broadcast_deliver</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) <= <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#test_bit\">test_bit</a>(0, &amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_r\">skb_set_owner_r</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_tail\">skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#netlink_broadcast_data\">netlink_broadcast_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#exclude_sk\">exclude_sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#failure\">failure</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#delivery_failure\">delivery_failure</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#congested\">congested</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#delivered\">delivered</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#allocation\">allocation</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, *<a class=\"id\" href=\"#skb2\">skb2</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#tx_filter\">tx_filter</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#dsk\">dsk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, void *<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#tx_data\">tx_data</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#do_one_broadcast\">do_one_broadcast</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#netlink_broadcast_data\">netlink_broadcast_data</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exclude_sk\">exclude_sk</a> == <a class=\"id\" href=\"#sk\">sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#pid\">pid</a> == <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pid\">pid</a> || <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#group\">group</a> - 1 >= <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a> ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#group\">group</a> - 1, <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#failure\">failure</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_overrun\">netlink_overrun</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_shared\">skb_shared</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#allocation\">allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_get\">skb_get</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * skb ownership may have been set when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * delivered to a previous socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_orphan\">skb_orphan</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_overrun\">netlink_overrun</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clone failed. Notify ALL listeners. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#failure\">failure</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NETLINK_BROADCAST_SEND_ERROR\">NETLINK_BROADCAST_SEND_ERROR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#delivery_failure\">delivery_failure</a> = 1;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#tx_filter\">tx_filter</a> && <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#tx_filter\">tx_filter</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#tx_data\">tx_data</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sk_filter\">sk_filter</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#netlink_broadcast_deliver\">netlink_broadcast_deliver</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a>)) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_overrun\">netlink_overrun</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NETLINK_BROADCAST_SEND_ERROR\">NETLINK_BROADCAST_SEND_ERROR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#delivery_failure\">delivery_failure</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#congested\">congested</a> |= <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#delivered\">delivered</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#netlink_broadcast_filtered\">netlink_broadcast_filtered</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#ssk\">ssk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#allocation\">allocation</a>,", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#filter\">filter</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#dsk\">dsk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, void *<a class=\"id\" href=\"#data\">data</a>),", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#filter_data\">filter_data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#ssk\">ssk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_broadcast_data\">netlink_broadcast_data</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#netlink_trim\">netlink_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#allocation\">allocation</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#exclude_sk\">exclude_sk</a> = <a class=\"id\" href=\"#ssk\">ssk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#net\">net</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#failure\">failure</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#delivery_failure\">delivery_failure</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#congested\">congested</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#delivered\">delivered</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#allocation\">allocation</a> = <a class=\"id\" href=\"#allocation\">allocation</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#tx_filter\">tx_filter</a> = <a class=\"id\" href=\"#filter\">filter</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#tx_data\">tx_data</a> = <a class=\"id\" href=\"#filter_data\">filter_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* While we sleep in clone, do not allow to change socket list */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_lock_table\">netlink_lock_table</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each_bound\">sk_for_each_bound</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#ssk\">ssk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#mc_list\">mc_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_one_broadcast\">do_one_broadcast</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#consume_skb\">consume_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_unlock_table\">netlink_unlock_table</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#delivery_failure\">delivery_failure</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#consume_skb\">consume_skb</a>(<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#skb2\">skb2</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#delivered\">delivered</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#congested\">congested</a> && (<a class=\"id\" href=\"#allocation\">allocation</a> &amp; <a class=\"id\" href=\"#__GFP_WAIT\">__GFP_WAIT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#yield\">yield</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#netlink_broadcast_filtered\">netlink_broadcast_filtered</a>);", 
"", 
"int <a class=\"id\" href=\"#netlink_broadcast\">netlink_broadcast</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#ssk\">ssk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#allocation\">allocation</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netlink_broadcast_filtered\">netlink_broadcast_filtered</a>(<a class=\"id\" href=\"#ssk\">ssk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#allocation\">allocation</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#netlink_broadcast\">netlink_broadcast</a>);", 
"", 
"struct <a class=\"id\" href=\"#netlink_set_err_data\">netlink_set_err_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#exclude_sk\">exclude_sk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#code\">code</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#do_one_set_err\">do_one_set_err</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#netlink_set_err_data\">netlink_set_err_data</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exclude_sk\">exclude_sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exclude_sk\">exclude_sk</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
];
xr_frag_insert('l/c3/adedf904a9081ca51389a51f3317163417d1f3.xr', __xr_tmp);
