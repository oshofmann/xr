var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_BITOPS_H\">_LINUX_BITOPS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_BITOPS_H\">_LINUX_BITOPS_H</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIT\">BIT</a>(<a class=\"id\" href=\"#nr\">nr</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(1UL << (<a class=\"id\" href=\"#nr\">nr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIT_MASK\">BIT_MASK</a>(<a class=\"id\" href=\"#nr\">nr</a>)<span class=\"ts\"/><span class=\"ts\"/>(1UL << ((<a class=\"id\" href=\"#nr\">nr</a>) % <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIT_WORD\">BIT_WORD</a>(<a class=\"id\" href=\"#nr\">nr</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#nr\">nr</a>) / <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BITS_PER_BYTE\">BITS_PER_BYTE</a><span class=\"ts\"/><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BITS_TO_LONGS\">BITS_TO_LONGS</a>(<a class=\"id\" href=\"#nr\">nr</a>)<span class=\"ts\"/><a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#BITS_PER_BYTE\">BITS_PER_BYTE</a> * sizeof(long))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern unsigned int <a class=\"id\" href=\"#__sw_hweight8\">__sw_hweight8</a>(unsigned int <a class=\"id\" href=\"#w\">w</a>);", 
"extern unsigned int <a class=\"id\" href=\"#__sw_hweight16\">__sw_hweight16</a>(unsigned int <a class=\"id\" href=\"#w\">w</a>);", 
"extern unsigned int <a class=\"id\" href=\"#__sw_hweight32\">__sw_hweight32</a>(unsigned int <a class=\"id\" href=\"#w\">w</a>);", 
"extern unsigned long <a class=\"id\" href=\"#__sw_hweight64\">__sw_hweight64</a>(<a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#w\">w</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Include this here because some architectures need generic_ffs/fls in</span>", 
"<span class=\"comment\"> * scope</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_set_bit\">for_each_set_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>) \\", 
"<span class=\"ts\"/>for ((<a class=\"id\" href=\"#bit\">bit</a>) = <a class=\"id\" href=\"#find_first_bit\">find_first_bit</a>((<a class=\"id\" href=\"#addr\">addr</a>), (<a class=\"id\" href=\"#size\">size</a>)); \\", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#bit\">bit</a>) &lt; (<a class=\"id\" href=\"#size\">size</a>); \\", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#bit\">bit</a>) = <a class=\"id\" href=\"#find_next_bit\">find_next_bit</a>((<a class=\"id\" href=\"#addr\">addr</a>), (<a class=\"id\" href=\"#size\">size</a>), (<a class=\"id\" href=\"#bit\">bit</a>) + 1))", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#get_bitmask_order\">get_bitmask_order</a>(unsigned int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#order\">order</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#order\">order</a>;<span class=\"ts\"/><span class=\"comment\">/* We could be slightly more clever with -1 here... */</span>", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#get_count_order\">get_count_order</a>(unsigned int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#order\">order</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#count\">count</a>) - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &amp; (<a class=\"id\" href=\"#count\">count</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a>++;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#order\">order</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#hweight_long\">hweight_long</a>(unsigned long <a class=\"id\" href=\"#w\">w</a>)", 
"{", 
"<span class=\"ts\"/>return sizeof(<a class=\"id\" href=\"#w\">w</a>) == 4 ? <a class=\"id\" href=\"#hweight32\">hweight32</a>(<a class=\"id\" href=\"#w\">w</a>) : <a class=\"id\" href=\"#hweight64\">hweight64</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"}", 
];
xr_frag_insert('l/c3/eee1c16b7d6868000fb357836548b0dfe45f68.xr', __xr_tmp);
