var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_GENERIC_BITOPS_SCHED_H_\">_ASM_GENERIC_BITOPS_SCHED_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_GENERIC_BITOPS_SCHED_H_\">_ASM_GENERIC_BITOPS_SCHED_H_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* unlikely() */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Every architecture must define this function. It's the fastest</span>", 
"<span class=\"comment\"> * way of searching a 100-bit bitmap.  It's guaranteed that at least</span>", 
"<span class=\"comment\"> * one of the 100 bits is cleared.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sched_find_first_bit\">sched_find_first_bit</a>(const unsigned long *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> == 64", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b\">b</a>[0])", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__ffs\">__ffs</a>(<a class=\"id\" href=\"#b\">b</a>[0]);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ffs\">__ffs</a>(<a class=\"id\" href=\"#b\">b</a>[1]) + 64;", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> == 32", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b\">b</a>[0])", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__ffs\">__ffs</a>(<a class=\"id\" href=\"#b\">b</a>[0]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b\">b</a>[1])", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__ffs\">__ffs</a>(<a class=\"id\" href=\"#b\">b</a>[1]) + 32;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b\">b</a>[2])", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__ffs\">__ffs</a>(<a class=\"id\" href=\"#b\">b</a>[2]) + 64;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ffs\">__ffs</a>(<a class=\"id\" href=\"#b\">b</a>[3]) + 96;", 
"#else", 
"#<a class=\"id\" href=\"#error\">error</a> <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> <a class=\"id\" href=\"#not\">not</a> <a class=\"id\" href=\"#defined\">defined</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_GENERIC_BITOPS_SCHED_H_ */</span>", 
];
xr_frag_insert('l/c4/4287c509aaaa3995c12fd832fba4af68a62c29.xr', __xr_tmp);
