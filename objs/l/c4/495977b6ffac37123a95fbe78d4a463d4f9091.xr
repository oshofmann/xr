var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82875_HB\">PCI_DEVICE_ID_INTEL_82875_HB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x12bf: <span class=\"comment\">/* HP xw4100 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"       } else if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_SAMSUNG\">PCI_VENDOR_ID_SAMSUNG</a>)) {", 
"               if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a> ==  <a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82855PM_HB\">PCI_DEVICE_ID_INTEL_82855PM_HB</a>)", 
"                       switch(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>) {", 
"                       case 0xC00C: <span class=\"comment\">/* Samsung P35 notebook */</span>", 
"                               <a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a> = 1;", 
"                       }", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_COMPAQ\">PCI_VENDOR_ID_COMPAQ</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82855PM_HB\">PCI_DEVICE_ID_INTEL_82855PM_HB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x0058: <span class=\"comment\">/* Compaq Evo N620c */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82810_IG3\">PCI_DEVICE_ID_INTEL_82810_IG3</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0xB16C: <span class=\"comment\">/* Compaq Deskpro EP 401963-001 (PCA# 010174) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Motherboard doesn't have Host bridge</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * subvendor/subdevice IDs, therefore checking</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * its on-board VGA controller */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801DB_2\">PCI_DEVICE_ID_INTEL_82801DB_2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x00b8: <span class=\"comment\">/* Compaq Evo D510 CMT */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x00b9: <span class=\"comment\">/* Compaq Evo D510 SFF */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x00ba: <span class=\"comment\">/* Compaq Evo D510 USDT */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Motherboard doesn't have Host bridge</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * subvendor/subdevice IDs and on-board VGA</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * controller is disabled if an AGP card is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * inserted, therefore checking USB UHCI</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Controller #1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82815_CGC\">PCI_DEVICE_ID_INTEL_82815_CGC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x001A: <span class=\"comment\">/* Compaq Deskpro EN SSF P667 815E */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Motherboard doesn't have host bridge</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * subvendor/subdevice IDs, therefore checking</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * its on-board VGA controller */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82845_HB\">PCI_DEVICE_ID_INTEL_82845_HB</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82845G_HB\">PCI_DEVICE_ID_INTEL_82845G_HB</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82850_HB\">PCI_DEVICE_ID_INTEL_82850_HB</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82865_HB\">PCI_DEVICE_ID_INTEL_82865_HB</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82875_HB\">PCI_DEVICE_ID_INTEL_82875_HB</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_7205_0\">PCI_DEVICE_ID_INTEL_7205_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_E7501_MCH\">PCI_DEVICE_ID_INTEL_E7501_MCH</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82855PM_HB\">PCI_DEVICE_ID_INTEL_82855PM_HB</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82855GM_HB\">PCI_DEVICE_ID_INTEL_82855GM_HB</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82915GM_HB\">PCI_DEVICE_ID_INTEL_82915GM_HB</a>, <a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82810_IG3\">PCI_DEVICE_ID_INTEL_82810_IG3</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801DB_2\">PCI_DEVICE_ID_INTEL_82801DB_2</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82815_CGC\">PCI_DEVICE_ID_INTEL_82815_CGC</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_hostbridge\">asus_hides_smbus_hostbridge</a>);", 
"", 
"static void <a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0xF2, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; 0x8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0xF2, <a class=\"id\" href=\"#val\">val</a> &amp; (~0x8));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0xF2, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; 0x8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"i801 SMBus device continues to play 'hide and seek'! 0x%x\\n\", <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Enabled i801 SMBus device\\n\");", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801AA_0\">PCI_DEVICE_ID_INTEL_82801AA_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801DB_0\">PCI_DEVICE_ID_INTEL_82801DB_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801BA_0\">PCI_DEVICE_ID_INTEL_82801BA_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801CA_0\">PCI_DEVICE_ID_INTEL_82801CA_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801CA_12\">PCI_DEVICE_ID_INTEL_82801CA_12</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801DB_12\">PCI_DEVICE_ID_INTEL_82801DB_12</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801EB_0\">PCI_DEVICE_ID_INTEL_82801EB_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801AA_0\">PCI_DEVICE_ID_INTEL_82801AA_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801DB_0\">PCI_DEVICE_ID_INTEL_82801DB_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801BA_0\">PCI_DEVICE_ID_INTEL_82801BA_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801CA_0\">PCI_DEVICE_ID_INTEL_82801CA_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801CA_12\">PCI_DEVICE_ID_INTEL_82801CA_12</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801DB_12\">PCI_DEVICE_ID_INTEL_82801DB_12</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82801EB_0\">PCI_DEVICE_ID_INTEL_82801EB_0</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc\">asus_hides_smbus_lpc</a>);", 
"", 
"<span class=\"comment\">/* It appears we just have one such device. If not, we have a warning */</span>", 
"static void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a>;", 
"static void <a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6_suspend\">asus_hides_smbus_lpc_ich6_suspend</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rcba\">rcba</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0xF0, &amp;<a class=\"id\" href=\"#rcba\">rcba</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* use bits 31:14, 16 kB aligned */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a> = <a class=\"id\" href=\"#ioremap_nocache\">ioremap_nocache</a>(<a class=\"id\" href=\"#rcba\">rcba</a> &amp; 0xFFFFC000, 0x4000);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6_resume_early\">asus_hides_smbus_lpc_ich6_resume_early</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a> || !<a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/* read the Function Disable register, dword mode only */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a> + 0x3418);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#val\">val</a> &amp; 0xFFFFFFF7, <a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a> + 0x3418); <span class=\"comment\">/* enable the SMBus device */</span>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6_resume\">asus_hides_smbus_lpc_ich6_resume</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#asus_hides_smbus\">asus_hides_smbus</a> || !<a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asus_rcba_base\">asus_rcba_base</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Enabled ICH6/i801 SMBus device\\n\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6\">asus_hides_smbus_lpc_ich6</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6_suspend\">asus_hides_smbus_lpc_ich6_suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6_resume_early\">asus_hides_smbus_lpc_ich6_resume_early</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6_resume\">asus_hides_smbus_lpc_ich6_resume</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_ICH6_1\">PCI_DEVICE_ID_INTEL_ICH6_1</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6\">asus_hides_smbus_lpc_ich6</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_SUSPEND\">DECLARE_PCI_FIXUP_SUSPEND</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_ICH6_1\">PCI_DEVICE_ID_INTEL_ICH6_1</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6_suspend\">asus_hides_smbus_lpc_ich6_suspend</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME\">DECLARE_PCI_FIXUP_RESUME</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_ICH6_1\">PCI_DEVICE_ID_INTEL_ICH6_1</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6_resume\">asus_hides_smbus_lpc_ich6_resume</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_ICH6_1\">PCI_DEVICE_ID_INTEL_ICH6_1</a>,<span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_smbus_lpc_ich6_resume_early\">asus_hides_smbus_lpc_ich6_resume_early</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * SiS 96x south bridge: BIOS typically hides SMBus device...</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#val\">val</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x77, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; 0x10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Enabling SiS 96x SMBus\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x77, <a class=\"id\" href=\"#val\">val</a> &amp; ~0x10);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_961\">PCI_DEVICE_ID_SI_961</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_962\">PCI_DEVICE_ID_SI_962</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_963\">PCI_DEVICE_ID_SI_963</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_LPC\">PCI_DEVICE_ID_SI_LPC</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_961\">PCI_DEVICE_ID_SI_961</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_962\">PCI_DEVICE_ID_SI_962</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_963\">PCI_DEVICE_ID_SI_963</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_LPC\">PCI_DEVICE_ID_SI_LPC</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ... This is further complicated by the fact that some SiS96x south</span>", 
"<span class=\"comment\"> * bridges pretend to be 85C503/5513 instead.  In that case see if we</span>", 
"<span class=\"comment\"> * spotted a compatible north bridge to make sure.</span>", 
"<span class=\"comment\"> * (pci_find_device doesn't work yet)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We can also enable the sis96x bit in the discovery register..</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIS_DETECT_REGISTER\">SIS_DETECT_REGISTER</a> 0x40", 
"", 
"static void <a class=\"id\" href=\"#quirk_sis_503\">quirk_sis_503</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#reg\">reg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#SIS_DETECT_REGISTER\">SIS_DETECT_REGISTER</a>, &amp;<a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#SIS_DETECT_REGISTER\">SIS_DETECT_REGISTER</a>, <a class=\"id\" href=\"#reg\">reg</a> | (1 << 6));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID\">PCI_DEVICE_ID</a>, &amp;<a class=\"id\" href=\"#devid\">devid</a>);", 
"<span class=\"ts\"/>if (((<a class=\"id\" href=\"#devid\">devid</a> &amp; 0xfff0) != 0x0960) && (<a class=\"id\" href=\"#devid\">devid</a> != 0x0018)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#SIS_DETECT_REGISTER\">SIS_DETECT_REGISTER</a>, <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ok, it now shows up as a 96x.. run the 96x quirk by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hand in case it has already been processed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (depends on link order, which is apparently not guaranteed)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_96x_smbus\">quirk_sis_96x_smbus</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_503\">PCI_DEVICE_ID_SI_503</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_503\">quirk_sis_503</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_SI\">PCI_VENDOR_ID_SI</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_SI_503\">PCI_DEVICE_ID_SI_503</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_sis_503\">quirk_sis_503</a>);", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * On ASUS A8V and A8V Deluxe boards, the onboard AC97 audio controller</span>", 
"<span class=\"comment\"> * and MC97 modem controller are disabled when a second PCI soundcard is</span>", 
"<span class=\"comment\"> * present. This patch, tweaking the VT8237 ISA bridge, enables them.</span>", 
"<span class=\"comment\"> * -- bjd</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#asus_hides_ac97_lpc\">asus_hides_ac97_lpc</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#asus_hides_ac97\">asus_hides_ac97</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_ASUSTEK\">PCI_VENDOR_ID_ASUSTEK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#PCI_DEVICE_ID_VIA_8237\">PCI_DEVICE_ID_VIA_8237</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asus_hides_ac97\">asus_hides_ac97</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#asus_hides_ac97\">asus_hides_ac97</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x50, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; 0xc0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x50, <a class=\"id\" href=\"#val\">val</a> &amp; (~0xc0));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x50, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; 0xc0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Onboard AC97/MC97 devices continue to play 'hide and seek'! 0x%x\\n\", <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Enabled onboard AC97/MC97 devices\\n\");", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_VIA\">PCI_VENDOR_ID_VIA</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_VIA_8237\">PCI_DEVICE_ID_VIA_8237</a>, <a class=\"id\" href=\"#asus_hides_ac97_lpc\">asus_hides_ac97_lpc</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_VIA\">PCI_VENDOR_ID_VIA</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_VIA_8237\">PCI_DEVICE_ID_VIA_8237</a>, <a class=\"id\" href=\"#asus_hides_ac97_lpc\">asus_hides_ac97_lpc</a>);", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_ATA\">CONFIG_ATA</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_ATA_MODULE\">CONFIG_ATA_MODULE</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If we are using libata we can drive this chip properly but must</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>do this early on to make the additional device appear during</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the PCI scanning.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#conf1\">conf1</a>, <a class=\"id\" href=\"#conf5\">conf5</a>, <a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#hdr\">hdr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only poke fn 0 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0x40, &amp;<a class=\"id\" href=\"#conf1\">conf1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0x80, &amp;<a class=\"id\" href=\"#conf5\">conf5</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#conf1\">conf1</a> &= ~0x00CFF302; <span class=\"comment\">/* Clear bit 1, 8, 9, 12-19, 22, 23 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#conf5\">conf5</a> &= ~(1 << 24);  <span class=\"comment\">/* Clear bit 24 */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB360\">PCI_DEVICE_ID_JMICRON_JMB360</a>: <span class=\"comment\">/* SATA single port */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB362\">PCI_DEVICE_ID_JMICRON_JMB362</a>: <span class=\"comment\">/* SATA dual ports */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB364\">PCI_DEVICE_ID_JMICRON_JMB364</a>: <span class=\"comment\">/* SATA dual ports */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The controller should be in single function ahci mode */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#conf1\">conf1</a> |= 0x0002A100; <span class=\"comment\">/* Set 8, 13, 15, 17 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB365\">PCI_DEVICE_ID_JMICRON_JMB365</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB366\">PCI_DEVICE_ID_JMICRON_JMB366</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Redirect IDE second PATA port to the right spot */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#conf5\">conf5</a> |= (1 << 24);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fall through */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB361\">PCI_DEVICE_ID_JMICRON_JMB361</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB363\">PCI_DEVICE_ID_JMICRON_JMB363</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB369\">PCI_DEVICE_ID_JMICRON_JMB369</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enable dual function mode, AHCI on fn 0, IDE fn1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set the class codes correctly and then direct IDE 0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#conf1\">conf1</a> |= 0x00C2A1B3; <span class=\"comment\">/* Set 0, 1, 4, 5, 7, 8, 13, 15, 17, 22, 23 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB368\">PCI_DEVICE_ID_JMICRON_JMB368</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The controller should be in single function IDE mode */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#conf1\">conf1</a> |= 0x00C00000; <span class=\"comment\">/* Set 22, 23 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0x40, <a class=\"id\" href=\"#conf1\">conf1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0x80, <a class=\"id\" href=\"#conf5\">conf5</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update pdev accordingly */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PCI_HEADER_TYPE\">PCI_HEADER_TYPE</a>, &amp;<a class=\"id\" href=\"#hdr\">hdr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> = <a class=\"id\" href=\"#hdr\">hdr</a> &amp; 0x7f;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#multifunction\">multifunction</a> = !!(<a class=\"id\" href=\"#hdr\">hdr</a> &amp; 0x80);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PCI_CLASS_REVISION\">PCI_CLASS_REVISION</a>, &amp;<a class=\"id\" href=\"#class\">class</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#class\">class</a> >> 8;", 
"}", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_EARLY\">DECLARE_PCI_FIXUP_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB360\">PCI_DEVICE_ID_JMICRON_JMB360</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_EARLY\">DECLARE_PCI_FIXUP_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB361\">PCI_DEVICE_ID_JMICRON_JMB361</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_EARLY\">DECLARE_PCI_FIXUP_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB362\">PCI_DEVICE_ID_JMICRON_JMB362</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_EARLY\">DECLARE_PCI_FIXUP_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB363\">PCI_DEVICE_ID_JMICRON_JMB363</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_EARLY\">DECLARE_PCI_FIXUP_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB364\">PCI_DEVICE_ID_JMICRON_JMB364</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_EARLY\">DECLARE_PCI_FIXUP_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB365\">PCI_DEVICE_ID_JMICRON_JMB365</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_EARLY\">DECLARE_PCI_FIXUP_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB366\">PCI_DEVICE_ID_JMICRON_JMB366</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_EARLY\">DECLARE_PCI_FIXUP_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB368\">PCI_DEVICE_ID_JMICRON_JMB368</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_EARLY\">DECLARE_PCI_FIXUP_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB369\">PCI_DEVICE_ID_JMICRON_JMB369</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB360\">PCI_DEVICE_ID_JMICRON_JMB360</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB361\">PCI_DEVICE_ID_JMICRON_JMB361</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB362\">PCI_DEVICE_ID_JMICRON_JMB362</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB363\">PCI_DEVICE_ID_JMICRON_JMB363</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB364\">PCI_DEVICE_ID_JMICRON_JMB364</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB365\">PCI_DEVICE_ID_JMICRON_JMB365</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB366\">PCI_DEVICE_ID_JMICRON_JMB366</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB368\">PCI_DEVICE_ID_JMICRON_JMB368</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_RESUME_EARLY\">DECLARE_PCI_FIXUP_RESUME_EARLY</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_JMICRON_JMB369\">PCI_DEVICE_ID_JMICRON_JMB369</a>, <a class=\"id\" href=\"#quirk_jmicron_ata\">quirk_jmicron_ata</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#quirk_alder_ioapic\">quirk_alder_ioapic</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#class\">class</a> >> 8) != 0xff00)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the first BAR is the location of the IO APIC...we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not touch this (and it's already covered by the fixmap), so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * forcibly insert it into the resource tree */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_resource_start\">pci_resource_start</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0) && <a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#insert_resource\">insert_resource</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a>[0]);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The next five BARs all seem to be rubbish, so just clean</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * them out */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=1; <a class=\"id\" href=\"#i\">i</a> &lt; 6; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>], 0, sizeof(<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>]));", 
"<span class=\"ts\"/>}", 
"", 
"}", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_HEADER\">DECLARE_PCI_FIXUP_HEADER</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_EESSC\">PCI_DEVICE_ID_INTEL_EESSC</a>,<span class=\"ts\"/><a class=\"id\" href=\"#quirk_alder_ioapic\">quirk_alder_ioapic</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#quirk_pcie_mch\">quirk_pcie_mch</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_msi_off\">pci_msi_off</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#no_msi\">no_msi</a> = 1;", 
"}", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_FINAL\">DECLARE_PCI_FIXUP_FINAL</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_E7520_MCH\">PCI_DEVICE_ID_INTEL_E7520_MCH</a>,<span class=\"ts\"/><a class=\"id\" href=\"#quirk_pcie_mch\">quirk_pcie_mch</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_FINAL\">DECLARE_PCI_FIXUP_FINAL</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_E7320_MCH\">PCI_DEVICE_ID_INTEL_E7320_MCH</a>,<span class=\"ts\"/><a class=\"id\" href=\"#quirk_pcie_mch\">quirk_pcie_mch</a>);", 
"<a class=\"id\" href=\"#DECLARE_PCI_FIXUP_FINAL\">DECLARE_PCI_FIXUP_FINAL</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_E7525_MCH\">PCI_DEVICE_ID_INTEL_E7525_MCH</a>,<span class=\"ts\"/><a class=\"id\" href=\"#quirk_pcie_mch\">quirk_pcie_mch</a>);", 
];
xr_frag_insert('l/c4/495977b6ffac37123a95fbe78d4a463d4f9091.xr', __xr_tmp);
