var __xr_tmp = [
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ata_id_u64\">ata_id_u64</a>(<a class=\"id\" href=\"#id\">id</a>,<a class=\"id\" href=\"#n\">n</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>( ((<a class=\"id\" href=\"#u64\">u64</a>) (<a class=\"id\" href=\"#id\">id</a>)[(<a class=\"id\" href=\"#n\">n</a>) + 3] << 48) |<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>  ((<a class=\"id\" href=\"#u64\">u64</a>) (<a class=\"id\" href=\"#id\">id</a>)[(<a class=\"id\" href=\"#n\">n</a>) + 2] << 32) |<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>  ((<a class=\"id\" href=\"#u64\">u64</a>) (<a class=\"id\" href=\"#id\">id</a>)[(<a class=\"id\" href=\"#n\">n</a>) + 1] << 16) |<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>  ((<a class=\"id\" href=\"#u64\">u64</a>) (<a class=\"id\" href=\"#id\">id</a>)[(<a class=\"id\" href=\"#n\">n</a>) + 0]) )", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ata_id_cdb_intr\">ata_id_cdb_intr</a>(<a class=\"id\" href=\"#id\">id</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#id\">id</a>)[<a class=\"id\" href=\"#ATA_ID_CONFIG\">ATA_ID_CONFIG</a>] &amp; 0x60) == 0x20)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ata_id_has_hipm\">ata_id_has_hipm</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#id\">id</a>[76];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> == 0 || <a class=\"id\" href=\"#val\">val</a> == 0xffff)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#val\">val</a> &amp; (1 << 9);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ata_id_has_dipm\">ata_id_has_dipm</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#id\">id</a>[78];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> == 0 || <a class=\"id\" href=\"#val\">val</a> == 0xffff)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#val\">val</a> &amp; (1 << 3);", 
"}", 
"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_has_fua\">ata_id_has_fua</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFSSE\">ATA_ID_CFSSE</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFSSE\">ATA_ID_CFSSE</a>] &amp; (1 << 6);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_has_flush\">ata_id_has_flush</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_2\">ATA_ID_COMMAND_SET_2</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_2\">ATA_ID_COMMAND_SET_2</a>] &amp; (1 << 12);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_flush_enabled\">ata_id_flush_enabled</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_has_flush\">ata_id_has_flush</a>(<a class=\"id\" href=\"#id\">id</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CSF_DEFAULT\">ATA_ID_CSF_DEFAULT</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFS_ENABLE_2\">ATA_ID_CFS_ENABLE_2</a>] &amp; (1 << 12);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_has_flush_ext\">ata_id_has_flush_ext</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_2\">ATA_ID_COMMAND_SET_2</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_2\">ATA_ID_COMMAND_SET_2</a>] &amp; (1 << 13);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_flush_ext_enabled\">ata_id_flush_ext_enabled</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_has_flush_ext\">ata_id_has_flush_ext</a>(<a class=\"id\" href=\"#id\">id</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CSF_DEFAULT\">ATA_ID_CSF_DEFAULT</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * some Maxtor disks have bit 13 defined incorrectly</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so check bit 10 too</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFS_ENABLE_2\">ATA_ID_CFS_ENABLE_2</a>] &amp; 0x2400) == 0x2400;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_has_large_logical_sectors\">ata_id_has_large_logical_sectors</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_SECTOR_SIZE\">ATA_ID_SECTOR_SIZE</a>] &amp; 0xc000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_SECTOR_SIZE\">ATA_ID_SECTOR_SIZE</a>] &amp; (1 << 13);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#ata_id_logical_per_physical_sectors\">ata_id_logical_per_physical_sectors</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>return 1 << (<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_SECTOR_SIZE\">ATA_ID_SECTOR_SIZE</a>] &amp; 0xf);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_has_lba48\">ata_id_has_lba48</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_2\">ATA_ID_COMMAND_SET_2</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ata_id_u64\">ata_id_u64</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#ATA_ID_LBA_CAPACITY_2\">ATA_ID_LBA_CAPACITY_2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_2\">ATA_ID_COMMAND_SET_2</a>] &amp; (1 << 10);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_lba48_enabled\">ata_id_lba48_enabled</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_has_lba48\">ata_id_has_lba48</a>(<a class=\"id\" href=\"#id\">id</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CSF_DEFAULT\">ATA_ID_CSF_DEFAULT</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFS_ENABLE_2\">ATA_ID_CFS_ENABLE_2</a>] &amp; (1 << 10);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_hpa_enabled\">ata_id_hpa_enabled</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Yes children, word 83 valid bits cover word 82 data */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_2\">ATA_ID_COMMAND_SET_2</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* And 87 covers 85-87 */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CSF_DEFAULT\">ATA_ID_CSF_DEFAULT</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* Check command sets enabled as well as supported */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFS_ENABLE_1\">ATA_ID_CFS_ENABLE_1</a>] &amp; (1 << 10)) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_1\">ATA_ID_COMMAND_SET_1</a>] &amp; (1 << 10);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_has_wcache\">ata_id_has_wcache</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Yes children, word 83 valid bits cover word 82 data */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_2\">ATA_ID_COMMAND_SET_2</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_1\">ATA_ID_COMMAND_SET_1</a>] &amp; (1 << 5);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_has_pm\">ata_id_has_pm</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_2\">ATA_ID_COMMAND_SET_2</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_COMMAND_SET_1\">ATA_ID_COMMAND_SET_1</a>] &amp; (1 << 3);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_rahead_enabled\">ata_id_rahead_enabled</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CSF_DEFAULT\">ATA_ID_CSF_DEFAULT</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFS_ENABLE_1\">ATA_ID_CFS_ENABLE_1</a>] &amp; (1 << 6);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_wcache_enabled\">ata_id_wcache_enabled</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CSF_DEFAULT\">ATA_ID_CSF_DEFAULT</a>] &amp; 0xC000) != 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFS_ENABLE_1\">ATA_ID_CFS_ENABLE_1</a>] &amp; (1 << 5);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_id_major_version<span class=\"ts\"/>-<span class=\"ts\"/>get ATA level of drive</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@id: Identify data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Caveats:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>ATA-1 considers identify optional</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>ATA-2 introduces mandatory identify</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>ATA-3 introduces word 80 and accurate reporting</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The practical impact of this is that ata_id_major_version cannot</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reliably report on drives below ATA3.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_id_major_version\">ata_id_major_version</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mver\">mver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_MAJOR_VER\">ATA_ID_MAJOR_VER</a>] == 0xFFFF)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#mver\">mver</a> = 14; <a class=\"id\" href=\"#mver\">mver</a> >= 1; <a class=\"id\" href=\"#mver\">mver</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_MAJOR_VER\">ATA_ID_MAJOR_VER</a>] &amp; (1 << <a class=\"id\" href=\"#mver\">mver</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mver\">mver</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_id_is_sata\">ata_id_is_sata</a>(const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * See if word 93 is 0 AND drive is at least ATA-5 compatible</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * verifying that word 80 by casting it to a signed type --</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this trick allows us to filter out the reserved values of</span>", 
];
xr_frag_insert('l/c4/a2366d5d1a5347926df051d12d1070a65a27a1.xr', __xr_tmp);
