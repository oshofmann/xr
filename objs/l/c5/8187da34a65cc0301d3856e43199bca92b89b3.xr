var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Implementation of the Transmission Control Protocol(TCP).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Mark Evans, &lt;evansmp@uhura.aston.ac.uk&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Corey Minyard &lt;wf-rch!minyard@relay.EU.net&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Florian La Roche, &lt;flla@stud.uni-sb.de&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Charles Hedrick, &lt;hedrick@klinzhai.rutgers.edu&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Linus Torvalds, &lt;torvalds@cs.helsinki.fi&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox, &lt;gw4pts@gw4pts.ampr.org&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Matthew Dillon, &lt;dillon@apollo.west.oic.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Arnt Gulbrandsen, &lt;agulbra@nvg.unit.no&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Jorge Cwik, &lt;jorge@laser.satlink.net&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Changes:<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/>:<span class=\"ts\"/>Retransmit queue handled by TCP.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Fragmentation on mtu decrease</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Segment collapse on retransmit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>AF independence</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Linus Torvalds<span class=\"ts\"/>:<span class=\"ts\"/>send_delayed_ack</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>David S. Miller<span class=\"ts\"/>:<span class=\"ts\"/>Charge memory using the right skb</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>during syn/ack processing.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>David S. Miller :<span class=\"ts\"/>Output engine completely rewritten.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andrea Arcangeli:<span class=\"ts\"/>SYNACK carry ts_recent in tsecr.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Cacophonix Gaul :<span class=\"ts\"/>draft-minshall-nagle-01</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>J Hadi Salim<span class=\"ts\"/>:<span class=\"ts\"/>ECN support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* People can turn this off for buggy TCP's found in printers etc. */</span>", 
"int <a class=\"id\" href=\"#sysctl_tcp_retrans_collapse\">sysctl_tcp_retrans_collapse</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 1;", 
"", 
"<span class=\"comment\">/* People can turn this on to work with those rare, broken TCPs that</span>", 
"<span class=\"comment\"> * interpret the window field as a signed quantity.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sysctl_tcp_workaround_signed_windows\">sysctl_tcp_workaround_signed_windows</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 0;", 
"", 
"<span class=\"comment\">/* This limits the percentage of the congestion window which we</span>", 
"<span class=\"comment\"> * will allow a single TSO frame to consume.  Building TSO frames</span>", 
"<span class=\"comment\"> * which are too large can cause TCP streams to be bursty.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sysctl_tcp_tso_win_divisor\">sysctl_tcp_tso_win_divisor</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 3;", 
"", 
"int <a class=\"id\" href=\"#sysctl_tcp_mtu_probing\">sysctl_tcp_mtu_probing</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 0;", 
"int <a class=\"id\" href=\"#sysctl_tcp_base_mss\">sysctl_tcp_base_mss</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 512;", 
"", 
"<span class=\"comment\">/* By default, RFC2861 behavior.  */</span>", 
"int <a class=\"id\" href=\"#sysctl_tcp_slow_start_after_idle\">sysctl_tcp_slow_start_after_idle</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 1;", 
"", 
"int <a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 0; <span class=\"comment\">/* TCP_COOKIE_MAX */</span>", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a>);", 
"", 
"", 
"<span class=\"comment\">/* Account for new data that has been sent to the network. */</span>", 
"static void <a class=\"id\" href=\"#tcp_event_new_data_sent\">tcp_event_new_data_sent</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#prior_packets\">prior_packets</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_advance_send_head\">tcp_advance_send_head</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't override Nagle indefinately with F-RTO */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> == 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> = 3;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> += <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#prior_packets\">prior_packets</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reset_xmit_timer\">inet_csk_reset_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_RETRANS\">ICSK_TIME_RETRANS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>, <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>);", 
"}", 
"", 
"<span class=\"comment\">/* SND.NXT, if window was not shrunk.</span>", 
"<span class=\"comment\"> * If window has been shrunk, what should we make? It is not clear at all.</span>", 
"<span class=\"comment\"> * Using SND.UNA we will fail to open window, SND.NXT is out of window. :-(</span>", 
"<span class=\"comment\"> * Anything in between SND.UNA...SND.UNA+SND.WND also can be already</span>", 
"<span class=\"comment\"> * invalid. OK, let's make this for now:</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#tcp_acceptable_seq\">tcp_acceptable_seq</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#tcp_wnd_end\">tcp_wnd_end</a>(<a class=\"id\" href=\"#tp\">tp</a>), <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_wnd_end\">tcp_wnd_end</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Calculate mss to advertise in SYN segment.</span>", 
"<span class=\"comment\"> * RFC1122, RFC1063, draft-ietf-tcpimpl-pmtud-01 state that:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 1. It is independent of path mtu.</span>", 
"<span class=\"comment\"> * 2. Ideally, it is maximal possible segment size i.e. 65535-40.</span>", 
"<span class=\"comment\"> * 3. For IPv4 it is reasonable to calculate it from maximal MTU of</span>", 
"<span class=\"comment\"> *    attached devices, because some buggy hosts are confused by</span>", 
"<span class=\"comment\"> *    large MSS.</span>", 
"<span class=\"comment\"> * 4. We do not make 3, we advertise MSS, calculated from first</span>", 
"<span class=\"comment\"> *    hop device mtu, but allow to raise it to ip_rt_min_advmss.</span>", 
"<span class=\"comment\"> *    This may be overridden via information stored in routing table.</span>", 
"<span class=\"comment\"> * 5. Value 65535 for MSS is valid in IPv6 and means \"as large as possible,</span>", 
"<span class=\"comment\"> *    probably even Jumbo\".</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#tcp_advertise_mss\">tcp_advertise_mss</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#__sk_dst_get\">__sk_dst_get</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mss\">mss</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#advmss\">advmss</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a> && <a class=\"id\" href=\"#dst_metric\">dst_metric</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_ADVMSS\">RTAX_ADVMSS</a>) &lt; <a class=\"id\" href=\"#mss\">mss</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a> = <a class=\"id\" href=\"#dst_metric\">dst_metric</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_ADVMSS\">RTAX_ADVMSS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#advmss\">advmss</a> = <a class=\"id\" href=\"#mss\">mss</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#__u16\">__u16</a>)<a class=\"id\" href=\"#mss\">mss</a>;", 
"}", 
"", 
"<span class=\"comment\">/* RFC2861. Reset CWND after idle period longer RTO to \"restart window\".</span>", 
"<span class=\"comment\"> * This is the first part of cwnd validation mechanism. */</span>", 
"static void <a class=\"id\" href=\"#tcp_cwnd_restart\">tcp_cwnd_restart</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lsndtime\">lsndtime</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#restart_cwnd\">restart_cwnd</a> = <a class=\"id\" href=\"#tcp_init_cwnd\">tcp_init_cwnd</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cwnd\">cwnd</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_ca_event\">tcp_ca_event</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#CA_EVENT_CWND_RESTART\">CA_EVENT_CWND_RESTART</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> = <a class=\"id\" href=\"#tcp_current_ssthresh\">tcp_current_ssthresh</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#restart_cwnd\">restart_cwnd</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#restart_cwnd\">restart_cwnd</a>, <a class=\"id\" href=\"#cwnd\">cwnd</a>);", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#delta\">delta</a> -= <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>) &gt; 0 && <a class=\"id\" href=\"#cwnd\">cwnd</a> &gt; <a class=\"id\" href=\"#restart_cwnd\">restart_cwnd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cwnd\">cwnd</a> >>= 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#cwnd\">cwnd</a>, <a class=\"id\" href=\"#restart_cwnd\">restart_cwnd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_stamp\">snd_cwnd_stamp</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_used\">snd_cwnd_used</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/* Congestion state accounting after a packet has been sent. */</span>", 
"static void <a class=\"id\" href=\"#tcp_event_data_sent\">tcp_event_data_sent</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_slow_start_after_idle\">sysctl_tcp_slow_start_after_idle</a> &&", 
"<span class=\"ts\"/>    (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> && (<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#now\">now</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lsndtime\">lsndtime</a>) &gt; <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_cwnd_restart\">tcp_cwnd_restart</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#__sk_dst_get\">__sk_dst_get</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lsndtime\">lsndtime</a> = <a class=\"id\" href=\"#now\">now</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If it is a reply for ato after last received</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * packet, enter pingpong mode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#now\">now</a> - <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#lrcvtime\">lrcvtime</a>) &lt; <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#ato\">ato</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pingpong\">pingpong</a> = 1;", 
"}", 
"", 
"<span class=\"comment\">/* Account for an ACK we sent. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_event_ack_sent\">tcp_event_ack_sent</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned int <a class=\"id\" href=\"#pkts\">pkts</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_dec_quickack_mode\">tcp_dec_quickack_mode</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#pkts\">pkts</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_clear_xmit_timer\">inet_csk_clear_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_DACK\">ICSK_TIME_DACK</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Determine a window scaling and initial window to offer.</span>", 
"<span class=\"comment\"> * Based on the assumption that the given amount of space</span>", 
"<span class=\"comment\"> * will be offered. Store the results in the tp structure.</span>", 
"<span class=\"comment\"> * NOTE: for smooth operation initial space offering should</span>", 
"<span class=\"comment\"> * be a multiple of mss if possible. We assume here that mss &gt;= 1.</span>", 
"<span class=\"comment\"> * This MUST be enforced by all callers.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tcp_select_initial_window\">tcp_select_initial_window</a>(int <a class=\"id\" href=\"#__space\">__space</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mss\">mss</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>, <a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#window_clamp\">window_clamp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#wscale_ok\">wscale_ok</a>, <a class=\"id\" href=\"#__u8\">__u8</a> *<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#init_rcv_wnd\">init_rcv_wnd</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#space\">space</a> = (<a class=\"id\" href=\"#__space\">__space</a> &lt; 0 ? 0 : <a class=\"id\" href=\"#__space\">__space</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If no clamp set the clamp to the max possible scaled window */</span>", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#window_clamp\">window_clamp</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#window_clamp\">window_clamp</a>) = (65535 << 14);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> = <a class=\"id\" href=\"#min\">min</a>(*<a class=\"id\" href=\"#window_clamp\">window_clamp</a>, <a class=\"id\" href=\"#space\">space</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Quantize space offering to a multiple of mss if possible. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#space\">space</a> &gt; <a class=\"id\" href=\"#mss\">mss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> = (<a class=\"id\" href=\"#space\">space</a> / <a class=\"id\" href=\"#mss\">mss</a>) * <a class=\"id\" href=\"#mss\">mss</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE: offering an initial window larger than 32767</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will break some buggy TCP stacks. If the admin tells us</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it is likely we could be speaking with such a buggy stack</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we will truncate our initial window offering to 32K-1</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unless the remote has sent us a window scaling option,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which we interpret as a sign the remote TCP is not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * misinterpreting the window field as a signed quantity.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_workaround_signed_windows\">sysctl_tcp_workaround_signed_windows</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>) = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#space\">space</a>, <a class=\"id\" href=\"#MAX_TCP_WINDOW\">MAX_TCP_WINDOW</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>) = <a class=\"id\" href=\"#space\">space</a>;", 
"", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>) = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wscale_ok\">wscale_ok</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set window scaling on max possible window</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * See RFC1323 for an explanation of the limit to 14</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#sysctl_tcp_rmem\">sysctl_tcp_rmem</a>[2], <a class=\"id\" href=\"#sysctl_rmem_max\">sysctl_rmem_max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#space\">space</a>, *<a class=\"id\" href=\"#window_clamp\">window_clamp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#space\">space</a> &gt; 65535 && (*<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>) &lt; 14) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> >>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>)++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set initial window to value enough for senders,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * following RFC2414. Senders, not following this RFC,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will be satisfied with 2.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mss\">mss</a> &gt; (1 << *<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#init_cwnd\">init_cwnd</a> = 4;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mss\">mss</a> &gt; 1460 * 3)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_cwnd\">init_cwnd</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#mss\">mss</a> &gt; 1460)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_cwnd\">init_cwnd</a> = 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* when initializing use the value from init_rcv_wnd</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * rather than the default from above</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#init_rcv_wnd\">init_rcv_wnd</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (*<a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a> &gt; <a class=\"id\" href=\"#init_rcv_wnd\">init_rcv_wnd</a> * <a class=\"id\" href=\"#mss\">mss</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a> = <a class=\"id\" href=\"#init_rcv_wnd\">init_rcv_wnd</a> * <a class=\"id\" href=\"#mss\">mss</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (*<a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a> &gt; <a class=\"id\" href=\"#init_cwnd\">init_cwnd</a> * <a class=\"id\" href=\"#mss\">mss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a> = <a class=\"id\" href=\"#init_cwnd\">init_cwnd</a> * <a class=\"id\" href=\"#mss\">mss</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the clamp no higher than max representable value */</span>", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#window_clamp\">window_clamp</a>) = <a class=\"id\" href=\"#min\">min</a>(65535U << (*<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>), *<a class=\"id\" href=\"#window_clamp\">window_clamp</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_select_initial_window\">tcp_select_initial_window</a>);", 
"", 
"<span class=\"comment\">/* Chose a new window to advertise, update state in tcp_sock for the</span>", 
"<span class=\"comment\"> * socket, and return result with RFC1323 scaling applied.  The return</span>", 
"<span class=\"comment\"> * value can be stuffed directly into th-&gt;window for an outgoing</span>", 
"<span class=\"comment\"> * frame.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tcp_select_window\">tcp_select_window</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cur_win\">cur_win</a> = <a class=\"id\" href=\"#tcp_receive_window\">tcp_receive_window</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#new_win\">new_win</a> = <a class=\"id\" href=\"#__tcp_select_window\">__tcp_select_window</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Never shrink the offered window */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_win\">new_win</a> &lt; <a class=\"id\" href=\"#cur_win\">cur_win</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Danger Will Robinson!</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Don't update rcv_wup/rcv_wnd here or else</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we will not be able to advertise a zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * window in time.  --DaveM</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Relax Will Robinson.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_win\">new_win</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#cur_win\">cur_win</a>, 1 << <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a> = <a class=\"id\" href=\"#new_win\">new_win</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wup\">rcv_wup</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure we do not exceed the maximum possible</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * scaled window.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a> && <a class=\"id\" href=\"#sysctl_tcp_workaround_signed_windows\">sysctl_tcp_workaround_signed_windows</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_win\">new_win</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#new_win\">new_win</a>, <a class=\"id\" href=\"#MAX_TCP_WINDOW\">MAX_TCP_WINDOW</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_win\">new_win</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#new_win\">new_win</a>, (65535U << <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RFC1323 scaling applied */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_win\">new_win</a> >>= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we advertise zero window, disable fast path. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_win\">new_win</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#pred_flags\">pred_flags</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#new_win\">new_win</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Packet ECN state for a SYN-ACK */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#TCP_ECN_send_synack\">TCP_ECN_send_synack</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TCPHDR_CWR\">TCPHDR_CWR</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ecn_flags\">ecn_flags</a> &amp; <a class=\"id\" href=\"#TCP_ECN_OK\">TCP_ECN_OK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TCPHDR_ECE\">TCPHDR_ECE</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Packet ECN state for a SYN.  */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#TCP_ECN_send_syn\">TCP_ECN_send_syn</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ecn_flags\">ecn_flags</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_ecn\">sysctl_tcp_ecn</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TCPHDR_ECE\">TCPHDR_ECE</a> | <a class=\"id\" href=\"#TCPHDR_CWR\">TCPHDR_CWR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ecn_flags\">ecn_flags</a> = <a class=\"id\" href=\"#TCP_ECN_OK\">TCP_ECN_OK</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void", 
"<a class=\"id\" href=\"#TCP_ECN_make_synack\">TCP_ECN_make_synack</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>, struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#ecn_ok\">ecn_ok</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ece\">ece</a> = 1;", 
"}", 
"", 
"<span class=\"comment\">/* Set up ECN state for a packet on a ESTABLISHED socket that is about to</span>", 
"<span class=\"comment\"> * be sent.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#TCP_ECN_send\">TCP_ECN_send</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ecn_flags\">ecn_flags</a> &amp; <a class=\"id\" href=\"#TCP_ECN_OK\">TCP_ECN_OK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Not-retransmitted data segment: set ECT and inject CWR. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> != <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INET_ECN_xmit\">INET_ECN_xmit</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ecn_flags\">ecn_flags</a> &amp; <a class=\"id\" href=\"#TCP_ECN_QUEUE_CWR\">TCP_ECN_QUEUE_CWR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ecn_flags\">ecn_flags</a> &= ~<a class=\"id\" href=\"#TCP_ECN_QUEUE_CWR\">TCP_ECN_QUEUE_CWR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#cwr\">cwr</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> |= <a class=\"id\" href=\"#SKB_GSO_TCP_ECN\">SKB_GSO_TCP_ECN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ACK or retransmitted segment: clear ECT|CE */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INET_ECN_dontxmit\">INET_ECN_dontxmit</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ecn_flags\">ecn_flags</a> &amp; <a class=\"id\" href=\"#TCP_ECN_DEMAND_CWR\">TCP_ECN_DEMAND_CWR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ece\">ece</a> = 1;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Constructs common control bits of non-data skb. If SYN/FIN is present,</span>", 
"<span class=\"comment\"> * auto increment end seqno.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_init_nondata_skb\">tcp_init_nondata_skb</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_segs\">gso_segs</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#TCPHDR_SYN\">TCPHDR_SYN</a> | <a class=\"id\" href=\"#TCPHDR_FIN\">TCPHDR_FIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#seq\">seq</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_urg_mode\">tcp_urg_mode</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a> != <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_up\">snd_up</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OPTION_SACK_ADVERTISE\">OPTION_SACK_ADVERTISE</a><span class=\"ts\"/>(1 << 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OPTION_TS\">OPTION_TS</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OPTION_MD5\">OPTION_MD5</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OPTION_WSCALE\">OPTION_WSCALE</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OPTION_COOKIE_EXTENSION\">OPTION_COOKIE_EXTENSION</a><span class=\"ts\"/>(1 << 4)", 
"", 
"struct <a class=\"id\" href=\"#tcp_out_options\">tcp_out_options</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#options\">options</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bit field of OPTION_* */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ws\">ws</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* window scale, 0 to disable */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#num_sack_blocks\">num_sack_blocks</a>;<span class=\"ts\"/><span class=\"comment\">/* number of SACK blocks to include */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#hash_size\">hash_size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes in hash_location */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mss\">mss</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0 to disable */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#tsval\">tsval</a>, <a class=\"id\" href=\"#tsecr\">tsecr</a>;<span class=\"ts\"/><span class=\"comment\">/* need to include OPTION_TS */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> *<a class=\"id\" href=\"#hash_location\">hash_location</a>;<span class=\"ts\"/><span class=\"comment\">/* temporary pointer, overloaded */</span>", 
"};", 
"", 
"<span class=\"comment\">/* The sysctl int routines are generic, so check consistency here.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tcp_cookie_size_check\">tcp_cookie_size_check</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#desired\">desired</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desired\">desired</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* previously specified */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#desired\">desired</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no default specified */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a> <= <a class=\"id\" href=\"#TCP_COOKIE_MIN\">TCP_COOKIE_MIN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* value too small, specify minimum */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_COOKIE_MIN\">TCP_COOKIE_MIN</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a> >= <a class=\"id\" href=\"#TCP_COOKIE_MAX\">TCP_COOKIE_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* value too large, specify maximum */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_COOKIE_MAX\">TCP_COOKIE_MAX</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (0x1 &amp; <a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 8-bit multiple, illegal, fix it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#u8\">u8</a>)(<a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a> + 0x1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#u8\">u8</a>)<a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Write previously computed TCP options to the packet.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Beware: Something in the Internet is very sensitive to the ordering of</span>", 
"<span class=\"comment\"> * TCP options, we learned this through the hard way, so be careful here.</span>", 
"<span class=\"comment\"> * Luckily we can at least blame others for their non-compliance but from</span>", 
"<span class=\"comment\"> * inter-operatibility perspective it seems that we're somewhat stuck with</span>", 
"<span class=\"comment\"> * the ordering which we have been using if we want to keep working with</span>", 
"<span class=\"comment\"> * those broken things (not that it currently hurts anybody as there isn't</span>", 
"<span class=\"comment\"> * particular reason why the ordering would need to be changed).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * At least SACK_PERM as the first option is known to lead to a disaster</span>", 
"<span class=\"comment\"> * (but it may well be that other scenarios fail similarly).</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_options_write\">tcp_options_write</a>(<a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#ptr\">ptr</a>, struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#tcp_out_options\">tcp_out_options</a> *<a class=\"id\" href=\"#opts\">opts</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#options\">options</a> = <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a>;<span class=\"ts\"/><span class=\"comment\">/* mungable copy */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Having both authentication and cookies for security is redundant,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and there's certainly not enough room.  Instead, the cookie-less</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * extension variant is proposed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Consider the pessimal case with authentication.  The options</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * could look like:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   COOKIE|MD5(20) + MSS(4) + SACK|TS(12) + WSCALE(4) == 40</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#OPTION_MD5\">OPTION_MD5</a> &amp; <a class=\"id\" href=\"#options\">options</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#OPTION_COOKIE_EXTENSION\">OPTION_COOKIE_EXTENSION</a> &amp; <a class=\"id\" href=\"#options\">options</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_COOKIE\">TCPOPT_COOKIE</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_MD5SIG\">TCPOPT_MD5SIG</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#TCPOLEN_MD5SIG\">TCPOLEN_MD5SIG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_MD5SIG\">TCPOPT_MD5SIG</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#TCPOLEN_MD5SIG\">TCPOLEN_MD5SIG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a> &= ~<a class=\"id\" href=\"#OPTION_COOKIE_EXTENSION\">OPTION_COOKIE_EXTENSION</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* overload cookie hash location */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#hash_location\">hash_location</a> = (<a class=\"id\" href=\"#__u8\">__u8</a> *)<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> += 4;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mss\">mss</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_MSS\">TCPOPT_MSS</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOLEN_MSS\">TCPOLEN_MSS</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mss\">mss</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#OPTION_TS\">OPTION_TS</a> &amp; <a class=\"id\" href=\"#options\">options</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#OPTION_SACK_ADVERTISE\">OPTION_SACK_ADVERTISE</a> &amp; <a class=\"id\" href=\"#options\">options</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_SACK_PERM\">TCPOPT_SACK_PERM</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOLEN_SACK_PERM\">TCPOLEN_SACK_PERM</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_TIMESTAMP\">TCPOPT_TIMESTAMP</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#TCPOLEN_TIMESTAMP\">TCPOLEN_TIMESTAMP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a> &= ~<a class=\"id\" href=\"#OPTION_SACK_ADVERTISE\">OPTION_SACK_ADVERTISE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_TIMESTAMP\">TCPOPT_TIMESTAMP</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#TCPOLEN_TIMESTAMP\">TCPOLEN_TIMESTAMP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#tsval\">tsval</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#tsecr\">tsecr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Specification requires after timestamp, so do it now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Consider the pessimal case without authentication.  The options</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * could look like:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   MSS(4) + SACK|TS(12) + COOKIE(20) + WSCALE(4) == 40</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#OPTION_COOKIE_EXTENSION\">OPTION_COOKIE_EXTENSION</a> &amp; <a class=\"id\" href=\"#options\">options</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> *<a class=\"id\" href=\"#cookie_copy\">cookie_copy</a> = <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#hash_location\">hash_location</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cookie_size\">cookie_size</a> = <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#hash_size\">hash_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 8-bit multiple handled in tcp_cookie_size_check() above,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and elsewhere.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (0x2 &amp; <a class=\"id\" href=\"#cookie_size\">cookie_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> *<a class=\"id\" href=\"#p\">p</a> = (<a class=\"id\" href=\"#__u8\">__u8</a> *)<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 16-bit multiple */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = <a class=\"id\" href=\"#TCPOPT_COOKIE\">TCPOPT_COOKIE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = <a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a> + <a class=\"id\" href=\"#cookie_size\">cookie_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = *<a class=\"id\" href=\"#cookie_copy\">cookie_copy</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = *<a class=\"id\" href=\"#cookie_copy\">cookie_copy</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cookie_size\">cookie_size</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 32-bit multiple */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>(((<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#TCPOPT_COOKIE\">TCPOPT_COOKIE</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#cookie_size\">cookie_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cookie_size\">cookie_size</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#cookie_copy\">cookie_copy</a>, <a class=\"id\" href=\"#cookie_size\">cookie_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> += (<a class=\"id\" href=\"#cookie_size\">cookie_size</a> / 4);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#OPTION_SACK_ADVERTISE\">OPTION_SACK_ADVERTISE</a> &amp; <a class=\"id\" href=\"#options\">options</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_SACK_PERM\">TCPOPT_SACK_PERM</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#TCPOLEN_SACK_PERM\">TCPOLEN_SACK_PERM</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#OPTION_WSCALE\">OPTION_WSCALE</a> &amp; <a class=\"id\" href=\"#options\">options</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_WINDOW\">TCPOPT_WINDOW</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOLEN_WINDOW\">TCPOLEN_WINDOW</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#ws\">ws</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_sack_blocks\">num_sack_blocks</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sack_block\">tcp_sack_block</a> *<a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#dsack\">dsack</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#duplicate_sack\">duplicate_sack</a> : <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#selective_acks\">selective_acks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#this_sack\">this_sack</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a>  << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a>  << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOPT_SACK\">TCPOPT_SACK</a> <<  8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPOLEN_SACK_BASE\">TCPOLEN_SACK_BASE</a> + (<a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_sack_blocks\">num_sack_blocks</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#TCPOLEN_SACK_PERBLOCK\">TCPOLEN_SACK_PERBLOCK</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#this_sack\">this_sack</a> = 0; <a class=\"id\" href=\"#this_sack\">this_sack</a> &lt; <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_sack_blocks\">num_sack_blocks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>     ++<a class=\"id\" href=\"#this_sack\">this_sack</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#sp\">sp</a>[<a class=\"id\" href=\"#this_sack\">this_sack</a>].<a class=\"id\" href=\"#start_seq\">start_seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a>++ = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#sp\">sp</a>[<a class=\"id\" href=\"#this_sack\">this_sack</a>].<a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#dsack\">dsack</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Compute TCP options for SYN packets. This is not the final</span>", 
"<span class=\"comment\"> * network wire format yet.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned <a class=\"id\" href=\"#tcp_syn_options\">tcp_syn_options</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_out_options\">tcp_out_options</a> *<a class=\"id\" href=\"#opts\">opts</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> **<a class=\"id\" href=\"#md5\">md5</a>) {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_cookie_values\">tcp_cookie_values</a> *<a class=\"id\" href=\"#cvp\">cvp</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#remaining\">remaining</a> = <a class=\"id\" href=\"#MAX_TCP_OPTION_SPACE\">MAX_TCP_OPTION_SPACE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cookie_size\">cookie_size</a> = (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#cookie_out_never\">cookie_out_never</a> && <a class=\"id\" href=\"#cvp\">cvp</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tcp_cookie_size_check\">tcp_cookie_size_check</a>(<a class=\"id\" href=\"#cvp\">cvp</a>-><a class=\"id\" href=\"#cookie_desired\">cookie_desired</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#md5\">md5</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#af_specific\">af_specific</a>-><a class=\"id\" href=\"#md5_lookup\">md5_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#md5\">md5</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_MD5\">OPTION_MD5</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_MD5SIG_ALIGNED\">TCPOLEN_MD5SIG_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#md5\">md5</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We always get an MSS option.  The option bytes which will be seen in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * normal data packets should timestamps be used, must be in the MSS</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * advertised.  But we subtract them from tp-&gt;mss_cache so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * calculations in tcp_sendmsg are simpler etc.  So account for this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fact here if necessary.  If we don't do this correctly, as a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * receiver we won't recognize data packets as being full sized when we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * should, and thus we won't abide by the delayed ACK rules correctly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * SACKs don't matter, we never delay an ACK when we have any of those</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * going out.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mss\">mss</a> = <a class=\"id\" href=\"#tcp_advertise_mss\">tcp_advertise_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_MSS_ALIGNED\">TCPOLEN_MSS_ALIGNED</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#sysctl_tcp_timestamps\">sysctl_tcp_timestamps</a> && *<a class=\"id\" href=\"#md5\">md5</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_TS\">OPTION_TS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#tsval\">tsval</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#when\">when</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#tsecr\">tsecr</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#sysctl_tcp_window_scaling\">sysctl_tcp_window_scaling</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#ws\">ws</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_WSCALE\">OPTION_WSCALE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_WSCALE_ALIGNED\">TCPOLEN_WSCALE_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#sysctl_tcp_sack\">sysctl_tcp_sack</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_SACK_ADVERTISE\">OPTION_SACK_ADVERTISE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!(<a class=\"id\" href=\"#OPTION_TS\">OPTION_TS</a> &amp; <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_SACKPERM_ALIGNED\">TCPOLEN_SACKPERM_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Note that timestamps are required by the specification.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Odd numbers of bytes are prohibited by the specification, ensuring</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that the cookie is 16-bit aligned, and the resulting cookie pair is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 32-bit aligned.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#md5\">md5</a> == <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#OPTION_TS\">OPTION_TS</a> &amp; <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#cookie_size\">cookie_size</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#need\">need</a> = <a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a> + <a class=\"id\" href=\"#cookie_size\">cookie_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (0x2 &amp; <a class=\"id\" href=\"#need\">need</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 32-bit multiple */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need\">need</a> += 2; <span class=\"comment\">/* NOPs */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need\">need</a> &gt; <a class=\"id\" href=\"#remaining\">remaining</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* try shrinking cookie to fit */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cookie_size\">cookie_size</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need\">need</a> -= 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#need\">need</a> &gt; <a class=\"id\" href=\"#remaining\">remaining</a> && <a class=\"id\" href=\"#TCP_COOKIE_MIN\">TCP_COOKIE_MIN</a> <= <a class=\"id\" href=\"#cookie_size\">cookie_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cookie_size\">cookie_size</a> -= 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need\">need</a> -= 4;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_COOKIE_MIN\">TCP_COOKIE_MIN</a> <= <a class=\"id\" href=\"#cookie_size\">cookie_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_COOKIE_EXTENSION\">OPTION_COOKIE_EXTENSION</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#hash_location\">hash_location</a> = (<a class=\"id\" href=\"#__u8\">__u8</a> *)&amp;<a class=\"id\" href=\"#cvp\">cvp</a>-><a class=\"id\" href=\"#cookie_pair\">cookie_pair</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#hash_size\">hash_size</a> = <a class=\"id\" href=\"#cookie_size\">cookie_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Remember for future incarnations. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cvp\">cvp</a>-><a class=\"id\" href=\"#cookie_desired\">cookie_desired</a> = <a class=\"id\" href=\"#cookie_size\">cookie_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cvp\">cvp</a>-><a class=\"id\" href=\"#cookie_desired\">cookie_desired</a> != <a class=\"id\" href=\"#cvp\">cvp</a>-><a class=\"id\" href=\"#cookie_pair_size\">cookie_pair_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Currently use random bytes as a nonce,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * assuming these are completely unpredictable</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * by hostile users of the same system.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#cvp\">cvp</a>-><a class=\"id\" href=\"#cookie_pair\">cookie_pair</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#cookie_size\">cookie_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cvp\">cvp</a>-><a class=\"id\" href=\"#cookie_pair_size\">cookie_pair_size</a> = <a class=\"id\" href=\"#cookie_size\">cookie_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#need\">need</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#MAX_TCP_OPTION_SPACE\">MAX_TCP_OPTION_SPACE</a> - <a class=\"id\" href=\"#remaining\">remaining</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Set up TCP options for SYN-ACKs. */</span>", 
"static unsigned <a class=\"id\" href=\"#tcp_synack_options\">tcp_synack_options</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned <a class=\"id\" href=\"#mss\">mss</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#tcp_out_options\">tcp_out_options</a> *<a class=\"id\" href=\"#opts\">opts</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> **<a class=\"id\" href=\"#md5\">md5</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#tcp_extend_values\">tcp_extend_values</a> *<a class=\"id\" href=\"#xvp\">xvp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#ireq\">ireq</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#remaining\">remaining</a> = <a class=\"id\" href=\"#MAX_TCP_OPTION_SPACE\">MAX_TCP_OPTION_SPACE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cookie_plus\">cookie_plus</a> = (<a class=\"id\" href=\"#xvp\">xvp</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && !<a class=\"id\" href=\"#xvp\">xvp</a>-><a class=\"id\" href=\"#cookie_out_never\">cookie_out_never</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#xvp\">xvp</a>-><a class=\"id\" href=\"#cookie_plus\">cookie_plus</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#md5\">md5</a> = <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#af_specific\">af_specific</a>-><a class=\"id\" href=\"#md5_lookup\">md5_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#md5\">md5</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_MD5\">OPTION_MD5</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_MD5SIG_ALIGNED\">TCPOLEN_MD5SIG_ALIGNED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We can't fit any SACK blocks in a packet with MD5 + TS</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * options. There was discussion about disabling SACK</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * rather than TS in order to fit in better with old,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * buggy kernels, but that was deemed to be unnecessary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a> &= !<a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#sack_ok\">sack_ok</a>;", 
"<span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#md5\">md5</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We always send an MSS option. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mss\">mss</a> = <a class=\"id\" href=\"#mss\">mss</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_MSS_ALIGNED\">TCPOLEN_MSS_ALIGNED</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#wscale_ok\">wscale_ok</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#ws\">ws</a> = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_WSCALE\">OPTION_WSCALE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_WSCALE_ALIGNED\">TCPOLEN_WSCALE_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_TS\">OPTION_TS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#tsval\">tsval</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#when\">when</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#tsecr\">tsecr</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#ts_recent\">ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#sack_ok\">sack_ok</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_SACK_ADVERTISE\">OPTION_SACK_ADVERTISE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#TCPOLEN_SACKPERM_ALIGNED\">TCPOLEN_SACKPERM_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Similar rationale to tcp_syn_options() applies here, too.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the &lt;SYN&gt; options fit, the same options should fit now!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#md5\">md5</a> == <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#cookie_plus\">cookie_plus</a> &gt; <a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#need\">need</a> = <a class=\"id\" href=\"#cookie_plus\">cookie_plus</a>; <span class=\"comment\">/* has TCPOLEN_COOKIE_BASE */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (0x2 &amp; <a class=\"id\" href=\"#need\">need</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 32-bit multiple */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need\">need</a> += 2; <span class=\"comment\">/* NOPs */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need\">need</a> <= <a class=\"id\" href=\"#remaining\">remaining</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_COOKIE_EXTENSION\">OPTION_COOKIE_EXTENSION</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#hash_size\">hash_size</a> = <a class=\"id\" href=\"#cookie_plus\">cookie_plus</a> - <a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#need\">need</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* There's no error return, so flag it. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xvp\">xvp</a>-><a class=\"id\" href=\"#cookie_out_never\">cookie_out_never</a> = 1; <span class=\"comment\">/* true */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#hash_size\">hash_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#MAX_TCP_OPTION_SPACE\">MAX_TCP_OPTION_SPACE</a> - <a class=\"id\" href=\"#remaining\">remaining</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Compute TCP options for ESTABLISHED sockets. This is not the</span>", 
"<span class=\"comment\"> * final wire format yet.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned <a class=\"id\" href=\"#tcp_established_options\">tcp_established_options</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_out_options\">tcp_out_options</a> *<a class=\"id\" href=\"#opts\">opts</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> **<a class=\"id\" href=\"#md5\">md5</a>) {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_skb_cb\">tcp_skb_cb</a> *<a class=\"id\" href=\"#tcb\">tcb</a> = <a class=\"id\" href=\"#skb\">skb</a> ? <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#size\">size</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#eff_sacks\">eff_sacks</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#md5\">md5</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#af_specific\">af_specific</a>-><a class=\"id\" href=\"#md5_lookup\">md5_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(*<a class=\"id\" href=\"#md5\">md5</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_MD5\">OPTION_MD5</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#TCPOLEN_MD5SIG_ALIGNED\">TCPOLEN_MD5SIG_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#md5\">md5</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#OPTION_TS\">OPTION_TS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#tsval\">tsval</a> = <a class=\"id\" href=\"#tcb\">tcb</a> ? <a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#when\">when</a> : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#tsecr\">tsecr</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eff_sacks\">eff_sacks</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#num_sacks\">num_sacks</a> + <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#dsack\">dsack</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#eff_sacks\">eff_sacks</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const unsigned <a class=\"id\" href=\"#remaining\">remaining</a> = <a class=\"id\" href=\"#MAX_TCP_OPTION_SPACE\">MAX_TCP_OPTION_SPACE</a> - <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_sack_blocks\">num_sack_blocks</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_t\">min_t</a>(unsigned, <a class=\"id\" href=\"#eff_sacks\">eff_sacks</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#remaining\">remaining</a> - <a class=\"id\" href=\"#TCPOLEN_SACK_BASE_ALIGNED\">TCPOLEN_SACK_BASE_ALIGNED</a>) /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#TCPOLEN_SACK_PERBLOCK\">TCPOLEN_SACK_PERBLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#TCPOLEN_SACK_BASE_ALIGNED\">TCPOLEN_SACK_BASE_ALIGNED</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_sack_blocks\">num_sack_blocks</a> * <a class=\"id\" href=\"#TCPOLEN_SACK_PERBLOCK\">TCPOLEN_SACK_PERBLOCK</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This routine actually transmits TCP packets queued in by</span>", 
"<span class=\"comment\"> * tcp_do_sendmsg().  This is used by both the initial</span>", 
"<span class=\"comment\"> * transmission and possible later retransmissions.</span>", 
"<span class=\"comment\"> * All SKB's seen here are completely headerless.  It is our</span>", 
"<span class=\"comment\"> * job to build the TCP header, and pass the packet down to</span>", 
"<span class=\"comment\"> * IP so it can do the same plus pass the packet off to the</span>", 
"<span class=\"comment\"> * device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We are working here with either a clone of the original</span>", 
"<span class=\"comment\"> * SKB, or a fresh unique copy made by the retransmit engine.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_transmit_skb\">tcp_transmit_skb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#clone_it\">clone_it</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_skb_cb\">tcp_skb_cb</a> *<a class=\"id\" href=\"#tcb\">tcb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_out_options\">tcp_out_options</a> <a class=\"id\" href=\"#opts\">opts</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#tcp_options_size\">tcp_options_size</a>, <a class=\"id\" href=\"#tcp_header_size\">tcp_header_size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#md5\">md5</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#skb\">skb</a> || !<a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If congestion control is doing timestamping, we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * take such a timestamp before we potentially clone/copy.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCP_CONG_RTT_STAMP\">TCP_CONG_RTT_STAMP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__net_timestamp\">__net_timestamp</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#clone_it\">clone_it</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb_cloned\">skb_cloned</a>(<a class=\"id\" href=\"#skb\">skb</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#pskb_copy\">pskb_copy</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcb\">tcb</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#opts\">opts</a>, 0, sizeof(<a class=\"id\" href=\"#opts\">opts</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCPHDR_SYN\">TCPHDR_SYN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_options_size\">tcp_options_size</a> = <a class=\"id\" href=\"#tcp_syn_options\">tcp_syn_options</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#opts\">opts</a>, &amp;<a class=\"id\" href=\"#md5\">md5</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_options_size\">tcp_options_size</a> = <a class=\"id\" href=\"#tcp_established_options\">tcp_established_options</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#opts\">opts</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#md5\">md5</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_header_size\">tcp_header_size</a> = <a class=\"id\" href=\"#tcp_options_size\">tcp_options_size</a> + sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_packets_in_flight\">tcp_packets_in_flight</a>(<a class=\"id\" href=\"#tp\">tp</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ca_event\">tcp_ca_event</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#CA_EVENT_TX_START\">CA_EVENT_TX_START</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_header_size\">tcp_header_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_w\">skb_set_owner_w</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Build TCP header and checksum it. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#seq\">seq</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ack_seq\">ack_seq</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>);", 
"<span class=\"ts\"/>*(((<a class=\"id\" href=\"#__be16\">__be16</a> *)<a class=\"id\" href=\"#th\">th</a>) + 6)<span class=\"ts\"/>= <a class=\"id\" href=\"#htons\">htons</a>(((<a class=\"id\" href=\"#tcp_header_size\">tcp_header_size</a> >> 2) << 12) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCPHDR_SYN\">TCPHDR_SYN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RFC1323: The window in SYN &amp; SYN/ACK segments</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is never scaled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#window\">window</a><span class=\"ts\"/>= <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>, 65535U));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#window\">window</a><span class=\"ts\"/>= <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#tcp_select_window\">tcp_select_window</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#check\">check</a><span class=\"ts\"/><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#urg_ptr\">urg_ptr</a><span class=\"ts\"/><span class=\"ts\"/>= 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The urg_mode check is necessary during a below snd_una win probe */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#tcp_urg_mode\">tcp_urg_mode</a>(<a class=\"id\" href=\"#tp\">tp</a>) && <a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_up\">snd_up</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_up\">snd_up</a>, <a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#seq\">seq</a> + 0x10000)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#urg_ptr\">urg_ptr</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_up\">snd_up</a> - <a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#urg\">urg</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#seq\">seq</a> + 0xFFFF, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#urg_ptr\">urg_ptr</a> = <a class=\"id\" href=\"#htons\">htons</a>(0xFFFF);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#urg\">urg</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_options_write\">tcp_options_write</a>((<a class=\"id\" href=\"#__be32\">__be32</a> *)(<a class=\"id\" href=\"#th\">th</a> + 1), <a class=\"id\" href=\"#tp\">tp</a>, &amp;<a class=\"id\" href=\"#opts\">opts</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>((<a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCPHDR_SYN\">TCPHDR_SYN</a>) == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_send\">TCP_ECN_send</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_header_size\">tcp_header_size</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate the MD5 hash, as we have all we need now */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md5\">md5</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_nocaps_add\">sk_nocaps_add</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#NETIF_F_GSO_MASK\">NETIF_F_GSO_MASK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#af_specific\">af_specific</a>-><a class=\"id\" href=\"#calc_md5_hash\">calc_md5_hash</a>(<a class=\"id\" href=\"#opts\">opts</a>.<a class=\"id\" href=\"#hash_location\">hash_location</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#md5\">md5</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_af_ops\">icsk_af_ops</a>-><a class=\"id\" href=\"#send_check\">send_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCPHDR_ACK\">TCPHDR_ACK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_event_ack_sent\">tcp_event_ack_sent</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> != <a class=\"id\" href=\"#tcp_header_size\">tcp_header_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_event_data_sent\">tcp_event_data_sent</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>) || <a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#tcb\">tcb</a>-><a class=\"id\" href=\"#end_seq\">end_seq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_ADD_STATS\">TCP_ADD_STATS</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#TCP_MIB_OUTSEGS\">TCP_MIB_OUTSEGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_af_ops\">icsk_af_ops</a>-><a class=\"id\" href=\"#queue_xmit\">queue_xmit</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#err\">err</a> <= 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_enter_cwr\">tcp_enter_cwr</a>(<a class=\"id\" href=\"#sk\">sk</a>, 1);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#net_xmit_eval\">net_xmit_eval</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"<span class=\"comment\">/* This routine just queues the buffer for sending.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: probe0 timer is not checked, do not forget tcp_push_pending_frames,</span>", 
"<span class=\"comment\"> * otherwise socket can stall.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_queue_skb\">tcp_queue_skb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Advance write_seq and place onto the write_queue. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_header_release\">skb_header_release</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_add_write_queue_tail\">tcp_add_write_queue_tail</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_charge\">sk_mem_charge</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Initialize TSO segments for a packet. */</span>", 
"static void <a class=\"id\" href=\"#tcp_set_skb_tso_segs\">tcp_set_skb_tso_segs</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#mss_now\">mss_now</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#mss_now\">mss_now</a> || !<a class=\"id\" href=\"#sk_can_gso\">sk_can_gso</a>(<a class=\"id\" href=\"#sk\">sk</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Avoid the costly divide in the normal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * non-TSO case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_segs\">gso_segs</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_segs\">gso_segs</a> = <a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#mss_now\">mss_now</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a> = <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_gso_type\">sk_gso_type</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* When a modification to fackets out becomes necessary, we need to check</span>", 
"<span class=\"comment\"> * skb is counted to fackets_out or not.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_adjust_fackets_out\">tcp_adjust_fackets_out</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#decr\">decr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> || <a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#tcp_highest_sack_seq\">tcp_highest_sack_seq</a>(<a class=\"id\" href=\"#tp\">tp</a>), <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a> -= <a class=\"id\" href=\"#decr\">decr</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Pcount in the middle of the write queue got changed, we need to do various</span>", 
"<span class=\"comment\"> * tweaks to fix counters</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_adjust_pcount\">tcp_adjust_pcount</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#decr\">decr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> -= <a class=\"id\" href=\"#decr\">decr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_SACKED_ACKED\">TCPCB_SACKED_ACKED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> -= <a class=\"id\" href=\"#decr\">decr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_SACKED_RETRANS\">TCPCB_SACKED_RETRANS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a> -= <a class=\"id\" href=\"#decr\">decr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_LOST\">TCPCB_LOST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_out\">lost_out</a> -= <a class=\"id\" href=\"#decr\">decr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reno case is special. Sigh... */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>) && <a class=\"id\" href=\"#decr\">decr</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> -= <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a>, <a class=\"id\" href=\"#decr\">decr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_adjust_fackets_out\">tcp_adjust_fackets_out</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#decr\">decr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_skb_hint\">lost_skb_hint</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_skb_hint\">lost_skb_hint</a>)-><a class=\"id\" href=\"#seq\">seq</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#tcp_is_fack\">tcp_is_fack</a>(<a class=\"id\" href=\"#tp\">tp</a>) || (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_SACKED_ACKED\">TCPCB_SACKED_ACKED</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_cnt_hint\">lost_cnt_hint</a> -= <a class=\"id\" href=\"#decr\">decr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_verify_left_out\">tcp_verify_left_out</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Function to create two new TCP segments.  Shrinks the given segment</span>", 
"<span class=\"comment\"> * to the specified size and appends a new segment with the rest of the</span>", 
"<span class=\"comment\"> * packet to the list.  This won't be called frequently, I hope.</span>", 
"<span class=\"comment\"> * Remember, these are still headerless SKBs at this point.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tcp_fragment\">tcp_fragment</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#mss_now\">mss_now</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#buff\">buff</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nsize\">nsize</a>, <a class=\"id\" href=\"#old_factor\">old_factor</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nlen\">nlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsize\">nsize</a> = <a class=\"id\" href=\"#skb_headlen\">skb_headlen</a>(<a class=\"id\" href=\"#skb\">skb</a>) - <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nsize\">nsize</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsize\">nsize</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_cloned\">skb_cloned</a>(<a class=\"id\" href=\"#skb\">skb</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#skb_is_nonlinear\">skb_is_nonlinear</a>(<a class=\"id\" href=\"#skb\">skb</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pskb_expand_head\">pskb_expand_head</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, 0, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get a new skb... force flag on. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a> = <a class=\"id\" href=\"#sk_stream_alloc_skb\">sk_stream_alloc_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#nsize\">nsize</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buff\">buff</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>; <span class=\"comment\">/* We'll just try again later. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a> += <a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_charge\">sk_mem_charge</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#truesize\">truesize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlen\">nlen</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#nsize\">nsize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#nlen\">nlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> -= <a class=\"id\" href=\"#nlen\">nlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Correct the sequence numbers. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> + <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PSH and FIN should only be set in the second packet. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a> &amp; ~(<a class=\"id\" href=\"#TCPHDR_FIN\">TCPHDR_FIN</a> | <a class=\"id\" href=\"#TCPHDR_PSH\">TCPHDR_PSH</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a> && <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> != <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Copy and checksum data tail into the new buffer. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_partial_copy_nocheck\">csum_partial_copy_nocheck</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#nsize\">nsize</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#nsize\">nsize</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_trim\">skb_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_block_sub\">csum_block_sub</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_split\">skb_split</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Looks stupid, but our code really uses when of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * skbs, which it never sent before. --ANK</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#when\">when</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#when\">when</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_factor\">old_factor</a> = <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fix up tso_factor for both original and new SKB.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_skb_tso_segs\">tcp_set_skb_tso_segs</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#mss_now\">mss_now</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_skb_tso_segs\">tcp_set_skb_tso_segs</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#mss_now\">mss_now</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If this packet has been sent out already, we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * adjust the various packet counters.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#diff\">diff</a> = <a class=\"id\" href=\"#old_factor\">old_factor</a> - <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#buff\">buff</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#diff\">diff</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_adjust_pcount\">tcp_adjust_pcount</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#diff\">diff</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Link BUFF into the send queue. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_header_release\">skb_header_release</a>(<a class=\"id\" href=\"#buff\">buff</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_insert_write_queue_after\">tcp_insert_write_queue_after</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* This is similar to __pskb_pull_head() (it will go to core/skbuff.c</span>", 
"<span class=\"comment\"> * eventually). The difference is that pulled data not copied, but</span>", 
"<span class=\"comment\"> * immediately discarded.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__pskb_trim_head\">__pskb_trim_head</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#eat\">eat</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eat\">eat</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size\">size</a> <= <a class=\"id\" href=\"#eat\">eat</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_page\">put_page</a>(<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eat\">eat</a> -= <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#k\">k</a>] = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#eat\">eat</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#page_offset\">page_offset</a> += <a class=\"id\" href=\"#eat\">eat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frags\">frags</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#size\">size</a> -= <a class=\"id\" href=\"#eat\">eat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eat\">eat</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_tail_pointer\">skb_reset_tail_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Remove acked data from a packet in the transmit queue. */</span>", 
"int <a class=\"id\" href=\"#tcp_trim_head\">tcp_trim_head</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_cloned\">skb_cloned</a>(<a class=\"id\" href=\"#skb\">skb</a>) && <a class=\"id\" href=\"#pskb_expand_head\">pskb_expand_head</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, 0, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If len == headlen, we avoid __skb_pull to preserve alignment. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#skb_headlen\">skb_headlen</a>(<a class=\"id\" href=\"#skb\">skb</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pskb_trim_head\">__pskb_trim_head</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#skb_headlen\">skb_headlen</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a><span class=\"ts\"/>     -= <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a>   -= <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_uncharge\">sk_mem_uncharge</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_set_flag\">sock_set_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_QUEUE_SHRUNK\">SOCK_QUEUE_SHRUNK</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Any change of skb-&gt;len requires recalculation of tso</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * factor and mss.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>) &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_skb_tso_segs\">tcp_set_skb_tso_segs</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_current_mss\">tcp_current_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Calculate MSS. Not accounting for SACKs here.  */</span>", 
"int <a class=\"id\" href=\"#tcp_mtu_to_mss\">tcp_mtu_to_mss</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#pmtu\">pmtu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate base mss without TCP options:</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   It is MMS_S - sizeof(tcphdr) of rfc1122</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> = <a class=\"id\" href=\"#pmtu\">pmtu</a> - <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_af_ops\">icsk_af_ops</a>-><a class=\"id\" href=\"#net_header_len\">net_header_len</a> - sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clamp it (mss_clamp does not include tcp options) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mss_now\">mss_now</a> &gt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#mss_clamp\">mss_clamp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#mss_clamp\">mss_clamp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now subtract optional transport overhead */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> -= <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ext_hdr_len\">icsk_ext_hdr_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Then reserve room for full set of TCP options and 8 bytes of data */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mss_now\">mss_now</a> &lt; 48)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> = 48;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now subtract TCP options size, not including SACKs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> -= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> - sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Inverse of above */</span>", 
"int <a class=\"id\" href=\"#tcp_mss_to_mtu\">tcp_mss_to_mtu</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#mss\">mss</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#mss\">mss</a> +", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> +", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ext_hdr_len\">icsk_ext_hdr_len</a> +", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_af_ops\">icsk_af_ops</a>-><a class=\"id\" href=\"#net_header_len\">net_header_len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mtu\">mtu</a>;", 
"}", 
"", 
"<span class=\"comment\">/* MTU probing init per socket */</span>", 
"void <a class=\"id\" href=\"#tcp_mtup_init\">tcp_mtup_init</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#enabled\">enabled</a> = <a class=\"id\" href=\"#sysctl_tcp_mtu_probing\">sysctl_tcp_mtu_probing</a> &gt; 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#search_high\">search_high</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#mss_clamp\">mss_clamp</a> + sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_af_ops\">icsk_af_ops</a>-><a class=\"id\" href=\"#net_header_len\">net_header_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#search_low\">search_low</a> = <a class=\"id\" href=\"#tcp_mss_to_mtu\">tcp_mss_to_mtu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#sysctl_tcp_base_mss\">sysctl_tcp_base_mss</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#probe_size\">probe_size</a> = 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_mtup_init\">tcp_mtup_init</a>);", 
"", 
"<span class=\"comment\">/* This function synchronize snd mss to current pmtu/exthdr set.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   tp-&gt;rx_opt.user_mss is mss set by user by TCP_MAXSEG. It does NOT counts</span>", 
"<span class=\"comment\">   for TCP options, but includes only bare TCP header.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   tp-&gt;rx_opt.mss_clamp is mss negotiated at connection setup.</span>", 
"<span class=\"comment\">   It is minimum of user_mss and mss received with SYN.</span>", 
"<span class=\"comment\">   It also does not include TCP options.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   inet_csk(sk)-&gt;icsk_pmtu_cookie is last pmtu, seen by this function.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   tp-&gt;mss_cache is current effective sending mss, including</span>", 
"<span class=\"comment\">   all tcp options except for SACKs. It is evaluated,</span>", 
"<span class=\"comment\">   taking into account current pmtu, but never exceeds</span>", 
"<span class=\"comment\">   tp-&gt;rx_opt.mss_clamp.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   NOTE1. rfc1122 clearly states that advertised MSS</span>", 
"<span class=\"comment\">   DOES NOT include either tcp or ip options.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   NOTE2. inet_csk(sk)-&gt;icsk_pmtu_cookie and tp-&gt;mss_cache</span>", 
"<span class=\"comment\">   are READ ONLY outside this function.<span class=\"ts\"/><span class=\"ts\"/>--ANK (980731)</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#tcp_sync_mss\">tcp_sync_mss</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pmtu\">pmtu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#search_high\">search_high</a> &gt; <a class=\"id\" href=\"#pmtu\">pmtu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#search_high\">search_high</a> = <a class=\"id\" href=\"#pmtu\">pmtu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> = <a class=\"id\" href=\"#tcp_mtu_to_mss\">tcp_mtu_to_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#pmtu\">pmtu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> = <a class=\"id\" href=\"#tcp_bound_to_half_wnd\">tcp_bound_to_half_wnd</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#mss_now\">mss_now</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* And store cached results */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_pmtu_cookie\">icsk_pmtu_cookie</a> = <a class=\"id\" href=\"#pmtu\">pmtu</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#enabled\">enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#mss_now\">mss_now</a>, <a class=\"id\" href=\"#tcp_mtu_to_mss\">tcp_mtu_to_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#search_low\">search_low</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a> = <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_sync_mss\">tcp_sync_mss</a>);", 
"", 
"<span class=\"comment\">/* Compute the current effective MSS, taking SACKs and IP options,</span>", 
"<span class=\"comment\"> * and even PMTU discovery events into account.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#tcp_current_mss\">tcp_current_mss</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#__sk_dst_get\">__sk_dst_get</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#header_len\">header_len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_out_options\">tcp_out_options</a> <a class=\"id\" href=\"#opts\">opts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#md5\">md5</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mtu\">mtu</a> != <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_pmtu_cookie\">icsk_pmtu_cookie</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> = <a class=\"id\" href=\"#tcp_sync_mss\">tcp_sync_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header_len\">header_len</a> = <a class=\"id\" href=\"#tcp_established_options\">tcp_established_options</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#opts\">opts</a>, &amp;<a class=\"id\" href=\"#md5\">md5</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* The mss_cache is sized based on tp-&gt;tcp_header_len, which assumes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * some common options. If this is an odd packet (because we have SACK</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * blocks etc) then our calculated header_len will be different, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we have to adjust mss_now correspondingly */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#header_len\">header_len</a> != <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#delta\">delta</a> = (int) <a class=\"id\" href=\"#header_len\">header_len</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> -= <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Congestion window validation. (RFC2861) */</span>", 
"static void <a class=\"id\" href=\"#tcp_cwnd_validate\">tcp_cwnd_validate</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> >= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Network is feed fully. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_used\">snd_cwnd_used</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_stamp\">snd_cwnd_stamp</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Network starves. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> &gt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_used\">snd_cwnd_used</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_used\">snd_cwnd_used</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_slow_start_after_idle\">sysctl_tcp_slow_start_after_idle</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_stamp\">snd_cwnd_stamp</a>) >= <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_cwnd_application_limited\">tcp_cwnd_application_limited</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Returns the portion of skb which can be sent right away without</span>", 
"<span class=\"comment\"> * introducing MSS oddities to segment boundaries. In rare cases where</span>", 
"<span class=\"comment\"> * mss_now != mss_cache, we will request caller to create a small skb</span>", 
"<span class=\"comment\"> * per input skb which could be mostly avoided here (if desired).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We explicitly want to create a request for splitting write queue tail</span>", 
"<span class=\"comment\"> * to a small skb for Nagle purposes while avoiding unnecessary modulos,</span>", 
"<span class=\"comment\"> * thus all the complexity (cwnd_len is always MSS multiple which we</span>", 
"<span class=\"comment\"> * return whenever allowed by the other factors). Basically we need the</span>", 
"<span class=\"comment\"> * modulo only when the receiver window alone is the limiting factor or</span>", 
"<span class=\"comment\"> * when we would be allowed to send the split-due-to-Nagle skb fully.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned int <a class=\"id\" href=\"#tcp_mss_split_point\">tcp_mss_split_point</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mss_now\">mss_now</a>, unsigned int <a class=\"id\" href=\"#cwnd\">cwnd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#needed\">needed</a>, <a class=\"id\" href=\"#window\">window</a>, <a class=\"id\" href=\"#cwnd_len\">cwnd_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#window\">window</a> = <a class=\"id\" href=\"#tcp_wnd_end\">tcp_wnd_end</a>(<a class=\"id\" href=\"#tp\">tp</a>) - <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cwnd_len\">cwnd_len</a> = <a class=\"id\" href=\"#mss_now\">mss_now</a> * <a class=\"id\" href=\"#cwnd\">cwnd</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#cwnd_len\">cwnd_len</a> <= <a class=\"id\" href=\"#window\">window</a> && <a class=\"id\" href=\"#skb\">skb</a> != <a class=\"id\" href=\"#tcp_write_queue_tail\">tcp_write_queue_tail</a>(<a class=\"id\" href=\"#sk\">sk</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cwnd_len\">cwnd_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#needed\">needed</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#window\">window</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cwnd_len\">cwnd_len</a> <= <a class=\"id\" href=\"#needed\">needed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cwnd_len\">cwnd_len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#needed\">needed</a> - <a class=\"id\" href=\"#needed\">needed</a> % <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Can at least one segment of SKB be sent right now, according to the</span>", 
"<span class=\"comment\"> * congestion window rules?  If so, return how many segments are allowed.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#tcp_cwnd_test\">tcp_cwnd_test</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#in_flight\">in_flight</a>, <a class=\"id\" href=\"#cwnd\">cwnd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't be strict about the congestion window for the final FIN.  */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCPHDR_FIN\">TCPHDR_FIN</a>) && <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>) == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_flight\">in_flight</a> = <a class=\"id\" href=\"#tcp_packets_in_flight\">tcp_packets_in_flight</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cwnd\">cwnd</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_flight\">in_flight</a> &lt; <a class=\"id\" href=\"#cwnd\">cwnd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#cwnd\">cwnd</a> - <a class=\"id\" href=\"#in_flight\">in_flight</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Intialize TSO state of a skb.</span>", 
"<span class=\"comment\"> * This must be invoked the first time we consider transmitting</span>", 
"<span class=\"comment\"> * SKB onto the wire.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_init_tso_segs\">tcp_init_tso_segs</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#mss_now\">mss_now</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tso_segs\">tso_segs</a> = <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tso_segs\">tso_segs</a> || (<a class=\"id\" href=\"#tso_segs\">tso_segs</a> &gt; 1 && <a class=\"id\" href=\"#tcp_skb_mss\">tcp_skb_mss</a>(<a class=\"id\" href=\"#skb\">skb</a>) != <a class=\"id\" href=\"#mss_now\">mss_now</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_skb_tso_segs\">tcp_set_skb_tso_segs</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#mss_now\">mss_now</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tso_segs\">tso_segs</a> = <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tso_segs\">tso_segs</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Minshall's variant of the Nagle send check. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_minshall_check\">tcp_minshall_check</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_sml\">snd_sml</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_sml\">snd_sml</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Return 0, if packet can be sent now without violation Nagle's rules:</span>", 
"<span class=\"comment\"> * 1. It is full sized.</span>", 
"<span class=\"comment\"> * 2. Or it contains FIN. (already checked by caller)</span>", 
"<span class=\"comment\"> * 3. Or TCP_NODELAY was set.</span>", 
"<span class=\"comment\"> * 4. Or TCP_CORK is not set, and all sent packets are ACKed.</span>", 
"<span class=\"comment\"> *    With Minshall's modification: all sent small packets are ACKed.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_nagle_check\">tcp_nagle_check</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned <a class=\"id\" href=\"#mss_now\">mss_now</a>, int <a class=\"id\" href=\"#nonagle\">nonagle</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#mss_now\">mss_now</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#nonagle\">nonagle</a> &amp; <a class=\"id\" href=\"#TCP_NAGLE_CORK\">TCP_NAGLE_CORK</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/> (!<a class=\"id\" href=\"#nonagle\">nonagle</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> && <a class=\"id\" href=\"#tcp_minshall_check\">tcp_minshall_check</a>(<a class=\"id\" href=\"#tp\">tp</a>))));", 
"}", 
"", 
"<span class=\"comment\">/* Return non-zero if the Nagle test allows this packet to be</span>", 
"<span class=\"comment\"> * sent now.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_nagle_test\">tcp_nagle_test</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#cur_mss\">cur_mss</a>, int <a class=\"id\" href=\"#nonagle\">nonagle</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Nagle rule does not apply to frames, which sit in the middle of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * write_queue (they have no chances to get new data).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is implemented in the callers, where they modify the 'nonagle'</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * argument based upon the location of SKB in the send queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nonagle\">nonagle</a> &amp; <a class=\"id\" href=\"#TCP_NAGLE_PUSH\">TCP_NAGLE_PUSH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't use the nagle rule for urgent data (or for the final FIN).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Nagle can be ignored during F-RTO too (see RFC4138).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_urg_mode\">tcp_urg_mode</a>(<a class=\"id\" href=\"#tp\">tp</a>) || (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> == 2) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCPHDR_FIN\">TCPHDR_FIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_nagle_check\">tcp_nagle_check</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cur_mss\">cur_mss</a>, <a class=\"id\" href=\"#nonagle\">nonagle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Does at least the first segment of SKB fit into the send window? */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_snd_wnd_test\">tcp_snd_wnd_test</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#cur_mss\">cur_mss</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#cur_mss\">cur_mss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> + <a class=\"id\" href=\"#cur_mss\">cur_mss</a>;", 
"", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#tcp_wnd_end\">tcp_wnd_end</a>(<a class=\"id\" href=\"#tp\">tp</a>));", 
"}", 
"", 
"<span class=\"comment\">/* This checks if the data bearing packet SKB (usually tcp_send_head(sk))</span>", 
"<span class=\"comment\"> * should be put on the wire right now.  If so, it returns the number of</span>", 
"<span class=\"comment\"> * packets allowed by the congestion window.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned int <a class=\"id\" href=\"#tcp_snd_test\">tcp_snd_test</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#cur_mss\">cur_mss</a>, int <a class=\"id\" href=\"#nonagle\">nonagle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cwnd_quota\">cwnd_quota</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_init_tso_segs\">tcp_init_tso_segs</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cur_mss\">cur_mss</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_nagle_test\">tcp_nagle_test</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cur_mss\">cur_mss</a>, <a class=\"id\" href=\"#nonagle\">nonagle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cwnd_quota\">cwnd_quota</a> = <a class=\"id\" href=\"#tcp_cwnd_test\">tcp_cwnd_test</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cwnd_quota\">cwnd_quota</a> && !<a class=\"id\" href=\"#tcp_snd_wnd_test\">tcp_snd_wnd_test</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cur_mss\">cur_mss</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cwnd_quota\">cwnd_quota</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cwnd_quota\">cwnd_quota</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Test if sending is allowed right now. */</span>", 
"int <a class=\"id\" href=\"#tcp_may_send_now\">tcp_may_send_now</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tcp_send_head\">tcp_send_head</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#skb\">skb</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_snd_test\">tcp_snd_test</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_current_mss\">tcp_current_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#tcp_skb_is_last\">tcp_skb_is_last</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#nonagle\">nonagle</a> : <a class=\"id\" href=\"#TCP_NAGLE_PUSH\">TCP_NAGLE_PUSH</a>)));", 
"}", 
"", 
"<span class=\"comment\">/* Trim TSO SKB to LEN bytes, put the remaining data into a new packet</span>", 
"<span class=\"comment\"> * which is put after SKB on the list.  It is very much like</span>", 
"<span class=\"comment\"> * tcp_fragment() except that it may make several kinds of assumptions</span>", 
"<span class=\"comment\"> * in order to speed up the splitting operation.  In particular, we</span>", 
"<span class=\"comment\"> * know that all the data is in scatter-gather pages, and that the</span>", 
"<span class=\"comment\"> * packet has never been sent out before (and thus is not cloned).</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tso_fragment\">tso_fragment</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mss_now\">mss_now</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#buff\">buff</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nlen\">nlen</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* All of a TSO frame must be composed of paged data.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> != <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data_len\">data_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_fragment\">tcp_fragment</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#mss_now\">mss_now</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a> = <a class=\"id\" href=\"#sk_stream_alloc_skb\">sk_stream_alloc_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#buff\">buff</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a> += <a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_charge\">sk_mem_charge</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#truesize\">truesize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#truesize\">truesize</a> += <a class=\"id\" href=\"#nlen\">nlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> -= <a class=\"id\" href=\"#nlen\">nlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Correct the sequence numbers. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> + <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PSH and FIN should only be set in the second packet. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a> &amp; ~(<a class=\"id\" href=\"#TCPHDR_FIN\">TCPHDR_FIN</a> | <a class=\"id\" href=\"#TCPHDR_PSH\">TCPHDR_PSH</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This packet was never sent out yet, so no SACK bits. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#buff\">buff</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_split\">skb_split</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fix up tso_factor for both original and new SKB.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_skb_tso_segs\">tcp_set_skb_tso_segs</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#mss_now\">mss_now</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_skb_tso_segs\">tcp_set_skb_tso_segs</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#mss_now\">mss_now</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Link BUFF into the send queue. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_header_release\">skb_header_release</a>(<a class=\"id\" href=\"#buff\">buff</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_insert_write_queue_after\">tcp_insert_write_queue_after</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Try to defer sending, if possible, in order to minimize the amount</span>", 
"<span class=\"comment\"> * of TSO splitting we do.  View it as a kind of TSO Nagle test.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This algorithm is from John Heffner.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_tso_should_defer\">tcp_tso_should_defer</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#send_win\">send_win</a>, <a class=\"id\" href=\"#cong_win\">cong_win</a>, <a class=\"id\" href=\"#limit\">limit</a>, <a class=\"id\" href=\"#in_flight\">in_flight</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCPHDR_FIN\">TCPHDR_FIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send_now\">send_now</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> != <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send_now\">send_now</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Defer for less than two clock ticks. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tso_deferred\">tso_deferred</a> &&", 
"<span class=\"ts\"/>    (((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#jiffies\">jiffies</a> << 1) >> 1) - (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tso_deferred\">tso_deferred</a> >> 1) &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send_now\">send_now</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_flight\">in_flight</a> = <a class=\"id\" href=\"#tcp_packets_in_flight\">tcp_packets_in_flight</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>) <= 1 || (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> <= <a class=\"id\" href=\"#in_flight\">in_flight</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#send_win\">send_win</a> = <a class=\"id\" href=\"#tcp_wnd_end\">tcp_wnd_end</a>(<a class=\"id\" href=\"#tp\">tp</a>) - <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* From in_flight test above, we know that cwnd &gt; in_flight.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cong_win\">cong_win</a> = (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> - <a class=\"id\" href=\"#in_flight\">in_flight</a>) * <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#send_win\">send_win</a>, <a class=\"id\" href=\"#cong_win\">cong_win</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If a full-sized TSO skb can be sent, do it. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#limit\">limit</a> >= <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_gso_max_size\">sk_gso_max_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send_now\">send_now</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Middle in queue won't get any more data, full sendable already? */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> != <a class=\"id\" href=\"#tcp_write_queue_tail\">tcp_write_queue_tail</a>(<a class=\"id\" href=\"#sk\">sk</a>)) && (<a class=\"id\" href=\"#limit\">limit</a> >= <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send_now\">send_now</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_tso_win_divisor\">sysctl_tcp_tso_win_divisor</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#chunk\">chunk</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> * <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If at least some fraction of a window is available,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * just use it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chunk\">chunk</a> /= <a class=\"id\" href=\"#sysctl_tcp_tso_win_divisor\">sysctl_tcp_tso_win_divisor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#limit\">limit</a> >= <a class=\"id\" href=\"#chunk\">chunk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send_now\">send_now</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Different approach, try not to defer past a single</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ACK.  Receiver should ACK every other full sized</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * frame, so if we have space for more than 3 frames</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * then send now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#limit\">limit</a> &gt; <a class=\"id\" href=\"#tcp_max_burst\">tcp_max_burst</a>(<a class=\"id\" href=\"#tp\">tp</a>) * <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send_now\">send_now</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ok, it looks like it is advisable to defer.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tso_deferred\">tso_deferred</a> = 1 | (<a class=\"id\" href=\"#jiffies\">jiffies</a> << 1);", 
"", 
"<span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#send_now\">send_now</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tso_deferred\">tso_deferred</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Create a new MTU probe if we are ready.</span>", 
"<span class=\"comment\"> * MTU probe is regularly attempting to increase the path MTU by</span>", 
"<span class=\"comment\"> * deliberately sending larger packets.  This discovers routing</span>", 
"<span class=\"comment\"> * changes resulting in larger path MTUs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if we should wait to probe (no cwnd available),</span>", 
"<span class=\"comment\"> *         1 if a probe was sent,</span>", 
"<span class=\"comment\"> *         -1 otherwise</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_mtu_probe\">tcp_mtu_probe</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, *<a class=\"id\" href=\"#nskb\">nskb</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#probe_size\">probe_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#size_needed\">size_needed</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mss_now\">mss_now</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Not currently probing/verifying,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not in recovery,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have enough cwnd, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not SACKing (the variable headers throw things off) */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#enabled\">enabled</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#probe_size\">probe_size</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> != <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> &lt; 11 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#num_sacks\">num_sacks</a> || <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#dsack\">dsack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Very simple search strategy: just double the MSS. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss_now\">mss_now</a> = <a class=\"id\" href=\"#tcp_current_mss\">tcp_current_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#probe_size\">probe_size</a> = 2 * <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_needed\">size_needed</a> = <a class=\"id\" href=\"#probe_size\">probe_size</a> + (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#reordering\">reordering</a> + 1) * <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#probe_size\">probe_size</a> &gt; <a class=\"id\" href=\"#tcp_mtu_to_mss\">tcp_mtu_to_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#search_high\">search_high</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TODO: set timer for probe_converge_event */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Have enough data in the send queue to probe? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a> &lt; <a class=\"id\" href=\"#size_needed\">size_needed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a> &lt; <a class=\"id\" href=\"#size_needed\">size_needed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a> + <a class=\"id\" href=\"#size_needed\">size_needed</a>, <a class=\"id\" href=\"#tcp_wnd_end\">tcp_wnd_end</a>(<a class=\"id\" href=\"#tp\">tp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do we need to wait to drain cwnd? With none in flight, don't stall */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_packets_in_flight\">tcp_packets_in_flight</a>(<a class=\"id\" href=\"#tp\">tp</a>) + 2 &gt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_packets_in_flight\">tcp_packets_in_flight</a>(<a class=\"id\" href=\"#tp\">tp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We're allowed to probe.  Build it now. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#nskb\">nskb</a> = <a class=\"id\" href=\"#sk_stream_alloc_skb\">sk_stream_alloc_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#probe_size\">probe_size</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a> += <a class=\"id\" href=\"#nskb\">nskb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_charge\">sk_mem_charge</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#nskb\">nskb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tcp_send_head\">tcp_send_head</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#nskb\">nskb</a>)-><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#nskb\">nskb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> + <a class=\"id\" href=\"#probe_size\">probe_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#nskb\">nskb</a>)-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#TCPHDR_ACK\">TCPHDR_ACK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#nskb\">nskb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nskb\">nskb</a>-><a class=\"id\" href=\"#csum\">csum</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nskb\">nskb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_insert_write_queue_before\">tcp_insert_write_queue_before</a>(<a class=\"id\" href=\"#nskb\">nskb</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_for_write_queue_from_safe\">tcp_for_write_queue_from_safe</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#probe_size\">probe_size</a> - <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nskb\">nskb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_copy_bits\">skb_copy_bits</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#nskb\">nskb</a>, <a class=\"id\" href=\"#copy\">copy</a>), <a class=\"id\" href=\"#copy\">copy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nskb\">nskb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#skb_copy_and_csum_bits\">skb_copy_and_csum_bits</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#nskb\">nskb</a>, <a class=\"id\" href=\"#copy\">copy</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#nskb\">nskb</a>-><a class=\"id\" href=\"#csum\">csum</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#copy\">copy</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We've eaten all the data from this skb.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Throw it away. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#nskb\">nskb</a>)-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_unlink_write_queue\">tcp_unlink_write_queue</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_wmem_free_skb\">sk_wmem_free_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#nskb\">nskb</a>)-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   ~(<a class=\"id\" href=\"#TCPHDR_FIN\">TCPHDR_FIN</a>|<a class=\"id\" href=\"#TCPHDR_PSH\">TCPHDR_PSH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nr_frags\">nr_frags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_pull\">skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#copy\">copy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> != <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pskb_trim_head\">__pskb_trim_head</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#copy\">copy</a>);", 
];
xr_frag_insert('l/c5/8187da34a65cc0301d3856e43199bca92b89b3.xr', __xr_tmp);
