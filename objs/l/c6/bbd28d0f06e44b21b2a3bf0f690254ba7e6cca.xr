var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IPv6 Address [auto]configuration</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/>&lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Changes:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Janos Farkas<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>delete timer on ifdown</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>&lt;chexum@bankinf.banki.hu&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>kill double kfree on module</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unload.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Maciej W. Rozycki<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>FDDI support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sekiya@USAGI<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Don't send too many RS</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>packets.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>yoshfuji@USAGI<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:       Fixed interval between DAD</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>packets.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI<span class=\"ts\"/>:<span class=\"ts\"/>improved accuracy of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>address validation timer.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI<span class=\"ts\"/>:<span class=\"ts\"/>Privacy Extensions (RFC3041)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Yuji SEKIYA @USAGI<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Don't assign a same IPv6</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>address on a same interface.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI<span class=\"ts\"/>:<span class=\"ts\"/>ARCnet support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI<span class=\"ts\"/>:<span class=\"ts\"/>convert /proc/net/if_inet6 to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>seq_file.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI<span class=\"ts\"/>:<span class=\"ts\"/>improved source address</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>selection; consider scope,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>status etc.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_addr\">if_addr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arcnet\">if_arcnet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_infiniband\">if_infiniband</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#pkt_sched\">pkt_sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_tunnel\">if_tunnel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#unaligned\">unaligned</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Set to 3 to get tracing... */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACONF_DEBUG\">ACONF_DEBUG</a> 2", 
"", 
"#if <a class=\"id\" href=\"#ACONF_DEBUG\">ACONF_DEBUG</a> >= 3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADBG\">ADBG</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#printk\">printk</a> <a class=\"id\" href=\"#x\">x</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADBG\">ADBG</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#INFINITY_LIFE_TIME\">INFINITY_LIFE_TIME</a><span class=\"ts\"/>0xFFFFFFFF", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TIME_DELTA\">TIME_DELTA</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>) ((unsigned long)((long)(<a class=\"id\" href=\"#a\">a</a>) - (long)(<a class=\"id\" href=\"#b\">b</a>)))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADDRCONF_TIMER_FUZZ_MINUS\">ADDRCONF_TIMER_FUZZ_MINUS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#HZ\">HZ</a> &gt; 50 ? <a class=\"id\" href=\"#HZ\">HZ</a>/50 : 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADDRCONF_TIMER_FUZZ\">ADDRCONF_TIMER_FUZZ</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#HZ\">HZ</a> / 4)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADDRCONF_TIMER_FUZZ_MAX\">ADDRCONF_TIMER_FUZZ_MAX</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"static void <a class=\"id\" href=\"#addrconf_sysctl_register\">addrconf_sysctl_register</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"static void <a class=\"id\" href=\"#addrconf_sysctl_unregister\">addrconf_sysctl_unregister</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#addrconf_sysctl_register\">addrconf_sysctl_register</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#addrconf_sysctl_unregister\">addrconf_sysctl_unregister</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"static int <a class=\"id\" href=\"#__ipv6_regen_rndid\">__ipv6_regen_rndid</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"static int <a class=\"id\" href=\"#__ipv6_try_regen_rndid\">__ipv6_try_regen_rndid</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#tmpaddr\">tmpaddr</a>);", 
"static void <a class=\"id\" href=\"#ipv6_regen_rndid\">ipv6_regen_rndid</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#ipv6_generate_eui64\">ipv6_generate_eui64</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#eui\">eui</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"static int <a class=\"id\" href=\"#ipv6_count_addresses\">ipv6_count_addresses</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Configured unicast address hash table</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> <a class=\"id\" href=\"#inet6_addr_lst\">inet6_addr_lst</a>[<a class=\"id\" href=\"#IN6_ADDR_HSIZE\">IN6_ADDR_HSIZE</a>];", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#addrconf_hash_lock\">addrconf_hash_lock</a>);", 
"", 
"static void <a class=\"id\" href=\"#addrconf_verify\">addrconf_verify</a>(unsigned long);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_TIMER\">DEFINE_TIMER</a>(<a class=\"id\" href=\"#addr_chk_timer\">addr_chk_timer</a>, <a class=\"id\" href=\"#addrconf_verify\">addrconf_verify</a>, 0, 0);", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#addrconf_verify_lock\">addrconf_verify_lock</a>);", 
"", 
"static void <a class=\"id\" href=\"#addrconf_join_anycast\">addrconf_join_anycast</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"static void <a class=\"id\" href=\"#addrconf_leave_anycast\">addrconf_leave_anycast</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"", 
"static void <a class=\"id\" href=\"#addrconf_type_change\">addrconf_type_change</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#event\">event</a>);", 
"static int <a class=\"id\" href=\"#addrconf_ifdown\">addrconf_ifdown</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#how\">how</a>);", 
"", 
"static void <a class=\"id\" href=\"#addrconf_dad_start\">addrconf_dad_start</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>);", 
"static void <a class=\"id\" href=\"#addrconf_dad_timer\">addrconf_dad_timer</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>);", 
"static void <a class=\"id\" href=\"#addrconf_dad_completed\">addrconf_dad_completed</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"static void <a class=\"id\" href=\"#addrconf_dad_run\">addrconf_dad_run</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"static void <a class=\"id\" href=\"#addrconf_rs_timer\">addrconf_rs_timer</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>);", 
"static void <a class=\"id\" href=\"#__ipv6_ifa_notify\">__ipv6_ifa_notify</a>(int <a class=\"id\" href=\"#event\">event</a>, struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"static void <a class=\"id\" href=\"#ipv6_ifa_notify\">ipv6_ifa_notify</a>(int <a class=\"id\" href=\"#event\">event</a>, struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"", 
"static void <a class=\"id\" href=\"#inet6_prefix_notify\">inet6_prefix_notify</a>(int <a class=\"id\" href=\"#event\">event</a>, struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#prefix_info\">prefix_info</a> *<a class=\"id\" href=\"#pinfo\">pinfo</a>);", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ipv6_chk_same_addr\">ipv6_chk_same_addr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"static <a class=\"id\" href=\"#ATOMIC_NOTIFIER_HEAD\">ATOMIC_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#inet6addr_chain\">inet6addr_chain</a>);", 
"", 
"static struct <a class=\"id\" href=\"#ipv6_devconf\">ipv6_devconf</a> <a class=\"id\" href=\"#ipv6_devconf\">ipv6_devconf</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#forwarding\">forwarding</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hop_limit\">hop_limit</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_DEFAULT_HOPLIMIT\">IPV6_DEFAULT_HOPLIMIT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mtu6\">mtu6</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra\">accept_ra</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_redirects\">accept_redirects</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#autoconf\">autoconf</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#force_mld_version\">force_mld_version</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dad_transmits\">dad_transmits</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rtr_solicits\">rtr_solicits</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#MAX_RTR_SOLICITATIONS\">MAX_RTR_SOLICITATIONS</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rtr_solicit_interval\">rtr_solicit_interval</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RTR_SOLICITATION_INTERVAL\">RTR_SOLICITATION_INTERVAL</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rtr_solicit_delay\">rtr_solicit_delay</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MAX_RTR_SOLICITATION_DELAY\">MAX_RTR_SOLICITATION_DELAY</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#use_tempaddr\">use_tempaddr</a> <span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#temp_valid_lft\">temp_valid_lft</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#TEMP_VALID_LIFETIME\">TEMP_VALID_LIFETIME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#temp_prefered_lft\">temp_prefered_lft</a><span class=\"ts\"/>= <a class=\"id\" href=\"#TEMP_PREFERRED_LIFETIME\">TEMP_PREFERRED_LIFETIME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#regen_max_retry\">regen_max_retry</a><span class=\"ts\"/>= <a class=\"id\" href=\"#REGEN_MAX_RETRY\">REGEN_MAX_RETRY</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#max_desync_factor\">max_desync_factor</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MAX_DESYNC_FACTOR\">MAX_DESYNC_FACTOR</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#max_addresses\">max_addresses</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_MAX_ADDRESSES\">IPV6_MAX_ADDRESSES</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra_defrtr\">accept_ra_defrtr</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra_pinfo\">accept_ra_pinfo</a><span class=\"ts\"/>= 1,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_ROUTER_PREF\">CONFIG_IPV6_ROUTER_PREF</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra_rtr_pref\">accept_ra_rtr_pref</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rtr_probe_interval\">rtr_probe_interval</a><span class=\"ts\"/>= 60 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_ROUTE_INFO\">CONFIG_IPV6_ROUTE_INFO</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra_rt_info_max_plen\">accept_ra_rt_info_max_plen</a> = 0,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#proxy_ndp\">proxy_ndp</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_source_route\">accept_source_route</a><span class=\"ts\"/>= 0,<span class=\"ts\"/><span class=\"comment\">/* we do not accept RH0 by default. */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_dad\">accept_dad</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ipv6_devconf\">ipv6_devconf</a> <a class=\"id\" href=\"#ipv6_devconf_dflt\">ipv6_devconf_dflt</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#forwarding\">forwarding</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hop_limit\">hop_limit</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_DEFAULT_HOPLIMIT\">IPV6_DEFAULT_HOPLIMIT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mtu6\">mtu6</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra\">accept_ra</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_redirects\">accept_redirects</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#autoconf\">autoconf</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dad_transmits\">dad_transmits</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rtr_solicits\">rtr_solicits</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#MAX_RTR_SOLICITATIONS\">MAX_RTR_SOLICITATIONS</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rtr_solicit_interval\">rtr_solicit_interval</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RTR_SOLICITATION_INTERVAL\">RTR_SOLICITATION_INTERVAL</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rtr_solicit_delay\">rtr_solicit_delay</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MAX_RTR_SOLICITATION_DELAY\">MAX_RTR_SOLICITATION_DELAY</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#use_tempaddr\">use_tempaddr</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#temp_valid_lft\">temp_valid_lft</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#TEMP_VALID_LIFETIME\">TEMP_VALID_LIFETIME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#temp_prefered_lft\">temp_prefered_lft</a><span class=\"ts\"/>= <a class=\"id\" href=\"#TEMP_PREFERRED_LIFETIME\">TEMP_PREFERRED_LIFETIME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#regen_max_retry\">regen_max_retry</a><span class=\"ts\"/>= <a class=\"id\" href=\"#REGEN_MAX_RETRY\">REGEN_MAX_RETRY</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#max_desync_factor\">max_desync_factor</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MAX_DESYNC_FACTOR\">MAX_DESYNC_FACTOR</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#max_addresses\">max_addresses</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_MAX_ADDRESSES\">IPV6_MAX_ADDRESSES</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra_defrtr\">accept_ra_defrtr</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra_pinfo\">accept_ra_pinfo</a><span class=\"ts\"/>= 1,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_ROUTER_PREF\">CONFIG_IPV6_ROUTER_PREF</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra_rtr_pref\">accept_ra_rtr_pref</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rtr_probe_interval\">rtr_probe_interval</a><span class=\"ts\"/>= 60 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_ROUTE_INFO\">CONFIG_IPV6_ROUTE_INFO</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_ra_rt_info_max_plen\">accept_ra_rt_info_max_plen</a> = 0,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#proxy_ndp\">proxy_ndp</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_source_route\">accept_source_route</a><span class=\"ts\"/>= 0,<span class=\"ts\"/><span class=\"comment\">/* we do not accept RH0 by default. */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept_dad\">accept_dad</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"};", 
"", 
"<span class=\"comment\">/* IPv6 Wildcard Address and Loopback Address defined by RFC2553 */</span>", 
"const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#in6addr_any\">in6addr_any</a> = <a class=\"id\" href=\"#IN6ADDR_ANY_INIT\">IN6ADDR_ANY_INIT</a>;", 
"const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#in6addr_loopback\">in6addr_loopback</a> = <a class=\"id\" href=\"#IN6ADDR_LOOPBACK_INIT\">IN6ADDR_LOOPBACK_INIT</a>;", 
"const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#in6addr_linklocal_allnodes\">in6addr_linklocal_allnodes</a> = <a class=\"id\" href=\"#IN6ADDR_LINKLOCAL_ALLNODES_INIT\">IN6ADDR_LINKLOCAL_ALLNODES_INIT</a>;", 
"const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#in6addr_linklocal_allrouters\">in6addr_linklocal_allrouters</a> = <a class=\"id\" href=\"#IN6ADDR_LINKLOCAL_ALLROUTERS_INIT\">IN6ADDR_LINKLOCAL_ALLROUTERS_INIT</a>;", 
"", 
"<span class=\"comment\">/* Check if a valid qdisc is available */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#addrconf_qdisc_ok\">addrconf_qdisc_ok</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#qdisc_tx_is_noop\">qdisc_tx_is_noop</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Check if a route is valid prefix route */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#addrconf_is_prefix_route\">addrconf_is_prefix_route</a>(const struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &amp; (<a class=\"id\" href=\"#RTF_GATEWAY\">RTF_GATEWAY</a> | <a class=\"id\" href=\"#RTF_DEFAULT\">RTF_DEFAULT</a>)) == 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#addrconf_del_timer\">addrconf_del_timer</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#timer\">timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__in6_ifa_put\">__in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"}", 
"", 
"enum <a class=\"id\" href=\"#addrconf_timer_t\">addrconf_timer_t</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AC_NONE\">AC_NONE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AC_DAD\">AC_DAD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AC_RS\">AC_RS</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#addrconf_mod_timer\">addrconf_mod_timer</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       enum <a class=\"id\" href=\"#addrconf_timer_t\">addrconf_timer_t</a> <a class=\"id\" href=\"#what\">what</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#when\">when</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#timer\">timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_hold\">in6_ifa_hold</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#what\">what</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AC_DAD\">AC_DAD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#addrconf_dad_timer\">addrconf_dad_timer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AC_RS\">AC_RS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#addrconf_rs_timer\">addrconf_rs_timer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#when\">when</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_timer\">add_timer</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#snmp6_alloc_dev\">snmp6_alloc_dev</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#ipv6\">ipv6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#ipstats_mib\">ipstats_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#ipstats_mib\">ipstats_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_ip\">err_ip</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#icmpv6\">icmpv6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#icmpv6_mib\">icmpv6_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#icmpv6_mib\">icmpv6_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_icmp\">err_icmp</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#icmpv6msg\">icmpv6msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#icmpv6msg_mib\">icmpv6msg_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#icmpv6msg_mib\">icmpv6msg_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_icmpmsg\">err_icmpmsg</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_icmpmsg\">err_icmpmsg</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#icmpv6\">icmpv6</a>);", 
"<a class=\"id\" href=\"#err_icmp\">err_icmp</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#ipv6\">ipv6</a>);", 
"<a class=\"id\" href=\"#err_ip\">err_ip</a>:", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#snmp6_free_dev\">snmp6_free_dev</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#icmpv6msg\">icmpv6msg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#icmpv6\">icmpv6</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#ipv6\">ipv6</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Nobody refers to this device, we may destroy it. */</span>", 
"", 
"static void <a class=\"id\" href=\"#in6_dev_finish_destroy_rcu\">in6_dev_finish_destroy_rcu</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#head\">head</a>, struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a>, <a class=\"id\" href=\"#rcu\">rcu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#in6_dev_finish_destroy\">in6_dev_finish_destroy</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#NET_REFCNT_DEBUG\">NET_REFCNT_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"in6_dev_finish_destroy: %s\\n\", <a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a> : \"NIL\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dead\">dead</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Freeing alive inet6 device %p\\n\", <a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp6_free_dev\">snmp6_free_dev</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rcu\">rcu</a>, <a class=\"id\" href=\"#in6_dev_finish_destroy_rcu\">in6_dev_finish_destroy_rcu</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#in6_dev_finish_destroy\">in6_dev_finish_destroy</a>);", 
"", 
"static struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> * <a class=\"id\" href=\"#ipv6_add_dev\">ipv6_add_dev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#ndev\">ndev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> &lt; <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ndev\">ndev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_init\">rwlock_init</a>(&amp;<a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>, <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_dflt\">devconf_dflt</a>, sizeof(<a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#mtu6\">mtu6</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#nd_parms\">nd_parms</a> = <a class=\"id\" href=\"#neigh_parms_alloc\">neigh_parms_alloc</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#nd_parms\">nd_parms</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ndev\">ndev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_disable_lro\">dev_disable_lro</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* We refer to the device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp6_alloc_dev\">snmp6_alloc_dev</a>(<a class=\"id\" href=\"#ndev\">ndev</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ADBG\">ADBG</a>((<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s(): cannot allocate memory for statistics; dev=%s.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_parms_release\">neigh_parms_release</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>, <a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#nd_parms\">nd_parms</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#dead\">dead</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_finish_destroy\">in6_dev_finish_destroy</a>(<a class=\"id\" href=\"#ndev\">ndev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp6_register_dev\">snmp6_register_dev</a>(<a class=\"id\" href=\"#ndev\">ndev</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ADBG\">ADBG</a>((<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s(): cannot create /proc/net/dev_snmp6/%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_parms_release\">neigh_parms_release</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>, <a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#nd_parms\">nd_parms</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#dead\">dead</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_finish_destroy\">in6_dev_finish_destroy</a>(<a class=\"id\" href=\"#ndev\">ndev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* One reference from device.  We must do this before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we invoke __ipv6_regen_rndid().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_hold\">in6_dev_hold</a>(<a class=\"id\" href=\"#ndev\">ndev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a> | <a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#accept_dad\">accept_dad</a> = -1;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT\">CONFIG_IPV6_SIT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT_MODULE\">CONFIG_IPV6_SIT_MODULE</a>)", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ARPHRD_SIT\">ARPHRD_SIT</a> && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#priv_flags\">priv_flags</a> &amp; <a class=\"id\" href=\"#IFF_ISATAP\">IFF_ISATAP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s: Disabled Multicast RS\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#rtr_solicits\">rtr_solicits</a> = 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#tempaddr_list\">tempaddr_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#regen_timer\">regen_timer</a>, <a class=\"id\" href=\"#ipv6_regen_rndid\">ipv6_regen_rndid</a>, (unsigned long)<a class=\"id\" href=\"#ndev\">ndev</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ARPHRD_TUNNEL\">ARPHRD_TUNNEL</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ARPHRD_TUNNEL6\">ARPHRD_TUNNEL6</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ARPHRD_SIT\">ARPHRD_SIT</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ARPHRD_NONE\">ARPHRD_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s: Disabled Privacy Extensions\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#use_tempaddr\">use_tempaddr</a> = -1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_hold\">in6_dev_hold</a>(<a class=\"id\" href=\"#ndev\">ndev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_regen_rndid\">ipv6_regen_rndid</a>((unsigned long) <a class=\"id\" href=\"#ndev\">ndev</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_running\">netif_running</a>(<a class=\"id\" href=\"#dev\">dev</a>) && <a class=\"id\" href=\"#addrconf_qdisc_ok\">addrconf_qdisc_ok</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#if_flags\">if_flags</a> |= <a class=\"id\" href=\"#IF_READY\">IF_READY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_mc_init_dev\">ipv6_mc_init_dev</a>(<a class=\"id\" href=\"#ndev\">ndev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndev\">ndev</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_sysctl_register\">addrconf_sysctl_register</a>(<a class=\"id\" href=\"#ndev\">ndev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* protected by rtnl_lock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ip6_ptr\">ip6_ptr</a>, <a class=\"id\" href=\"#ndev\">ndev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Join all-node multicast group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_dev_mc_inc\">ipv6_dev_mc_inc</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#in6addr_linklocal_allnodes\">in6addr_linklocal_allnodes</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ndev\">ndev</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> * <a class=\"id\" href=\"#ipv6_find_idev\">ipv6_find_idev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ipv6_add_dev\">ipv6_add_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_mc_up\">ipv6_mc_up</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#idev\">idev</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"static void <a class=\"id\" href=\"#dev_forward_change\">dev_forward_change</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_disable_lro\">dev_disable_lro</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_MULTICAST\">IFF_MULTICAST</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_dev_mc_inc\">ipv6_dev_mc_inc</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#in6addr_linklocal_allrouters\">in6addr_linklocal_allrouters</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_dev_mc_dec\">ipv6_dev_mc_dec</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#in6addr_linklocal_allrouters\">in6addr_linklocal_allrouters</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ifa\">ifa</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>, <a class=\"id\" href=\"#if_list\">if_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_join_anycast\">addrconf_join_anycast</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_leave_anycast\">addrconf_leave_anycast</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#addrconf_forward_change\">addrconf_forward_change</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#__s32\">__s32</a> <a class=\"id\" href=\"#newf\">newf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev_rcu\">for_each_netdev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#changed\">changed</a> = (!<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a>) ^ (!<a class=\"id\" href=\"#newf\">newf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a> = <a class=\"id\" href=\"#newf\">newf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#changed\">changed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_forward_change\">dev_forward_change</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#addrconf_fixup_forwarding\">addrconf_fixup_forwarding</a>(struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#table\">table</a>, int *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a> = (struct <a class=\"id\" href=\"#net\">net</a> *)<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#extra2\">extra2</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> == &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_dflt\">devconf_dflt</a>-><a class=\"id\" href=\"#forwarding\">forwarding</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtnl_trylock\">rtnl_trylock</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Restore the original values before restarting */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#restart_syscall\">restart_syscall</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> == &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#forwarding\">forwarding</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a> <a class=\"id\" href=\"#newf\">newf</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#forwarding\">forwarding</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_dflt\">devconf_dflt</a>-><a class=\"id\" href=\"#forwarding\">forwarding</a> = <a class=\"id\" href=\"#newf\">newf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_forward_change\">addrconf_forward_change</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#newf\">newf</a>);", 
"<span class=\"ts\"/>} else if ((!*<a class=\"id\" href=\"#p\">p</a>) ^ (!<a class=\"id\" href=\"#old\">old</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_forward_change\">dev_forward_change</a>((struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *)<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#extra1\">extra1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt6_purge_dflt_routers\">rt6_purge_dflt_routers</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#inet6_ifa_finish_destroy_rcu\">inet6_ifa_finish_destroy_rcu</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#head\">head</a>, struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a>, <a class=\"id\" href=\"#rcu\">rcu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Nobody refers to this ifaddr, destroy it */</span>", 
"void <a class=\"id\" href=\"#inet6_ifa_finish_destroy\">inet6_ifa_finish_destroy</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#hlist_unhashed\">hlist_unhashed</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr_lst\">addr_lst</a>));", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#NET_REFCNT_DEBUG\">NET_REFCNT_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"inet6_ifa_finish_destroy\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#timer\">timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_notice\">pr_notice</a>(\"Timer is still running, when freeing ifa=%p\\n\", <a class=\"id\" href=\"#ifp\">ifp</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#INET6_IFADDR_STATE_DEAD\">INET6_IFADDR_STATE_DEAD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Freeing alive inet6 address %p\\n\", <a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#rcu\">rcu</a>, <a class=\"id\" href=\"#inet6_ifa_finish_destroy_rcu\">inet6_ifa_finish_destroy_rcu</a>);", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#ipv6_link_dev_addr\">ipv6_link_dev_addr</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ifp_scope\">ifp_scope</a> = <a class=\"id\" href=\"#ipv6_addr_src_scope\">ipv6_addr_src_scope</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Each device address list is sorted in order of scope -</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * global before linklocal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a>, <a class=\"id\" href=\"#if_list\">if_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp_scope\">ifp_scope</a> >= <a class=\"id\" href=\"#ipv6_addr_src_scope\">ipv6_addr_src_scope</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#if_list\">if_list</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ipv6_addr_hash\">ipv6_addr_hash</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We perform the hash function over the last 64 bits of the address</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This will include the IEEE address token on links that support it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jhash_2words\">jhash_2words</a>((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3], 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>&amp; (<a class=\"id\" href=\"#IN6_ADDR_HSIZE\">IN6_ADDR_HSIZE</a> - 1);", 
"}", 
"", 
"<span class=\"comment\">/* On success it returns ifp with increased reference count */</span>", 
"", 
"static struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *", 
"<a class=\"id\" href=\"#ipv6_add_addr\">ipv6_add_addr</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#pfxlen\">pfxlen</a>,", 
"<span class=\"ts\"/>      int <a class=\"id\" href=\"#scope\">scope</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a> ||", 
"<span class=\"ts\"/>    (!(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>) &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_LOOPBACK\">IPV6_ADDR_LOOPBACK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock_bh\">rcu_read_lock_bh</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dead\">dead</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*XXX*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#addrconf_hash_lock\">addrconf_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ignore adding duplicate addresses on an interface */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_chk_same_addr\">ipv6_chk_same_addr</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ADBG\">ADBG</a>((\"ipv6_add_addr: already assigned\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ADBG\">ADBG</a>((\"ipv6_add_addr: malloc failed\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#addrconf_dst_alloc\">addrconf_dst_alloc</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#addr\">addr</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#rt\">rt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#state_lock\">state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_timer\">init_timer</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_HLIST_NODE\">INIT_HLIST_NODE</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr_lst\">addr_lst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#data\">data</a> = (unsigned long) <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#scope\">scope</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a> = <a class=\"id\" href=\"#pfxlen\">pfxlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a> | <a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#cstamp\">cstamp</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#rt\">rt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * part one of RFC 4429, section 3.3</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We should not configure an address as</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * optimistic if we do not yet know the link</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * layer address of our nexhop router</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_nexthop\">rt6i_nexthop</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_hold\">in6_dev_hold</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* For caller */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_hold\">in6_ifa_hold</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add to big hash table */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#ipv6_addr_hash\">ipv6_addr_hash</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head_rcu\">hlist_add_head_rcu</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr_lst\">addr_lst</a>, &amp;<a class=\"id\" href=\"#inet6_addr_lst\">inet6_addr_lst</a>[<a class=\"id\" href=\"#hash\">hash</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#addrconf_hash_lock\">addrconf_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Add to inet6_dev unicast addr list. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_link_dev_addr\">ipv6_link_dev_addr</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ifa\">ifa</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFA_F_TEMPORARY\">IFA_F_TEMPORARY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#tmp_list\">tmp_list</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#tempaddr_list\">tempaddr_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_hold\">in6_ifa_hold</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_hold\">in6_ifa_hold</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<a class=\"id\" href=\"#out2\">out2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock_bh\">rcu_read_unlock_bh</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#err\">err</a> == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_call_chain\">atomic_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#inet6addr_chain\">inet6addr_chain</a>, <a class=\"id\" href=\"#NETDEV_UP\">NETDEV_UP</a>, <a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#addrconf_hash_lock\">addrconf_hash_lock</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This function wants to get referenced ifp and releases it before return */</span>", 
"", 
"static void <a class=\"id\" href=\"#ipv6_del_addr\">ipv6_del_addr</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>, *<a class=\"id\" href=\"#ifn\">ifn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#deleted\">deleted</a> = 0, <a class=\"id\" href=\"#onlink\">onlink</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#ipv6_addr_hash\">ipv6_addr_hash</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#state_lock\">state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#INET6_IFADDR_STATE_DEAD\">INET6_IFADDR_STATE_DEAD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#state_lock\">state_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#INET6_IFADDR_STATE_DEAD\">INET6_IFADDR_STATE_DEAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#addrconf_hash_lock\">addrconf_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_del_init_rcu\">hlist_del_init_rcu</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr_lst\">addr_lst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#addrconf_hash_lock\">addrconf_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFA_F_TEMPORARY\">IFA_F_TEMPORARY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#tmp_list\">tmp_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#ifpub\">ifpub</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#ifpub\">ifpub</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#ifpub\">ifpub</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__in6_ifa_put\">__in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#ifa\">ifa</a>, <a class=\"id\" href=\"#ifn\">ifn</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>, <a class=\"id\" href=\"#if_list\">if_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a> == <a class=\"id\" href=\"#ifp\">ifp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#if_list\">if_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__in6_ifa_put\">__in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>) || <a class=\"id\" href=\"#onlink\">onlink</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deleted\">deleted</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_prefix_equal\">ipv6_prefix_equal</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#onlink\">onlink</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#deleted\">deleted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#lifetime\">lifetime</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#onlink\">onlink</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#onlink\">onlink</a> = -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lifetime\">lifetime</a> = <a class=\"id\" href=\"#addrconf_timeout_fixup\">addrconf_timeout_fixup</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a>, <a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note: Because this address is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * not permanent, lifetime &lt;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * LONG_MAX / HZ here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#expires\">expires</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a> + <a class=\"id\" href=\"#lifetime\">lifetime</a> * <a class=\"id\" href=\"#HZ\">HZ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a> + <a class=\"id\" href=\"#lifetime\">lifetime</a> * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_del_timer\">addrconf_del_timer</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_ifa_notify\">ipv6_ifa_notify</a>(<a class=\"id\" href=\"#RTM_DELADDR\">RTM_DELADDR</a>, <a class=\"id\" href=\"#ifp\">ifp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_call_chain\">atomic_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#inet6addr_chain\">inet6addr_chain</a>, <a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a>, <a class=\"id\" href=\"#ifp\">ifp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Purge or update corresponding prefix</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1) we don't purge prefix here if address was not permanent.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    prefix is managed by its own lifetime.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 2) if there're no addresses, delete prefix.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 3) if there're still other permanent address(es),</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    corresponding prefix is still permanent.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 4) otherwise, update prefix lifetime to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    longest valid lifetime among the corresponding</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    addresses on the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    Note: subsequent RA will update lifetime.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * --yoshfuji</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>) && <a class=\"id\" href=\"#onlink\">onlink</a> &lt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#prefix\">prefix</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_prefix\">ipv6_addr_prefix</a>(&amp;<a class=\"id\" href=\"#prefix\">prefix</a>, &amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#rt6_lookup\">rt6_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a> && <a class=\"id\" href=\"#addrconf_is_prefix_route\">addrconf_is_prefix_route</a>(<a class=\"id\" href=\"#rt\">rt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#onlink\">onlink</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_del_rt\">ip6_del_rt</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (!(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &amp; <a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_expires\">rt6i_expires</a> = <a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> |= <a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"static int <a class=\"id\" href=\"#ipv6_create_tempaddr\">ipv6_create_tempaddr</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>, struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ift\">ift</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>, *<a class=\"id\" href=\"#tmpaddr\">tmpaddr</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#tmp_prefered_lft\">tmp_prefered_lft</a>, <a class=\"id\" href=\"#tmp_valid_lft\">tmp_valid_lft</a>, <a class=\"id\" href=\"#tmp_cstamp\">tmp_cstamp</a>, <a class=\"id\" href=\"#tmp_tstamp\">tmp_tstamp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#regen_advance\">regen_advance</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tmp_plen\">tmp_plen</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#max_addresses\">max_addresses</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#addr_flags\">addr_flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ift\">ift</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a>[8], &amp;<a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a>[8], 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmpaddr\">tmpaddr</a> = &amp;<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmpaddr\">tmpaddr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_hold\">in6_dev_hold</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#use_tempaddr\">use_tempaddr</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ipv6_create_tempaddr(): use_tempaddr is disabled.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#regen_count\">regen_count</a>++ >= <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#regen_max_retry\">regen_max_retry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#use_tempaddr\">use_tempaddr</a> = -1;<span class=\"ts\"/><span class=\"comment\">/*XXX*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ipv6_create_tempaddr(): regeneration time exceeded. disabled temporary address support.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_hold\">in6_ifa_hold</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a>, <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a>, 8);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__ipv6_try_regen_rndid\">__ipv6_try_regen_rndid</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#tmpaddr\">tmpaddr</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ipv6_create_tempaddr(): regeneration of randomized interface id failed.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a>[8], <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>, 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_valid_lft\">tmp_valid_lft</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#__u32\">__u32</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#temp_valid_lft\">temp_valid_lft</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_prefered_lft\">tmp_prefered_lft</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#__u32\">__u32</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#temp_prefered_lft\">temp_prefered_lft</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#max_desync_factor\">max_desync_factor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_plen\">tmp_plen</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_addresses\">max_addresses</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#max_addresses\">max_addresses</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_cstamp\">tmp_cstamp</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#cstamp\">cstamp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_tstamp\">tmp_tstamp</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regen_advance\">regen_advance</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#regen_max_retry\">regen_max_retry</a> *", 
"<span class=\"ts\"/>                <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#dad_transmits\">dad_transmits</a> *", 
"<span class=\"ts\"/>                <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#nd_parms\">nd_parms</a>-><a class=\"id\" href=\"#retrans_time\">retrans_time</a> / <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* A temporary address is created only if this calculated Preferred</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Lifetime is greater than REGEN_ADVANCE time units.  In particular,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * an implementation must not create a temporary address with a zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Preferred Lifetime.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_prefered_lft\">tmp_prefered_lft</a> <= <a class=\"id\" href=\"#regen_advance\">regen_advance</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr_flags\">addr_flags</a> = <a class=\"id\" href=\"#IFA_F_TEMPORARY\">IFA_F_TEMPORARY</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* set in addrconf_prefix_rcv() */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_flags\">addr_flags</a> |= <a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ift\">ift</a> = !<a class=\"id\" href=\"#max_addresses\">max_addresses</a> ||", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#ipv6_count_addresses\">ipv6_count_addresses</a>(<a class=\"id\" href=\"#idev\">idev</a>) &lt; <a class=\"id\" href=\"#max_addresses\">max_addresses</a> ?", 
];
xr_frag_insert('l/c6/bbd28d0f06e44b21b2a3bf0f690254ba7e6cca.xr', __xr_tmp);
