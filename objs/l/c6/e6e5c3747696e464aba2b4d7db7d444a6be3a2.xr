var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/ext2/namei.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Rewrite to pagecache. Almost all code had been changed, so blame me</span>", 
"<span class=\"comment\"> * if the things go wrong. Please, send bug reports to</span>", 
"<span class=\"comment\"> * viro@parcelfarce.linux.theplanet.co.uk</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Stuff here is basically a glue between the VFS and generic UNIXish</span>", 
"<span class=\"comment\"> * filesystem that keeps everything in pagecache. All knowledge of the</span>", 
"<span class=\"comment\"> * directory layout is in fs/ext2/dir.c - it turned out to be easily separatable</span>", 
"<span class=\"comment\"> * and it's easier to debug that way. In principle we might want to</span>", 
"<span class=\"comment\"> * generalize that a bit and turn it into a library. Or not.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The only non-static object here is ext2_dir_inode_operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * TODO: get rid of kmap() use, add readahead.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1993, 1994, 1995</span>", 
"<span class=\"comment\"> * Remy Card (card@masi.ibp.fr)</span>", 
"<span class=\"comment\"> * Laboratoire MASI - Institut Blaise Pascal</span>", 
"<span class=\"comment\"> * Universite Pierre et Marie Curie (Paris VI)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  from</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  linux/fs/minix/namei.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Big-endian to little-endian byte-swapping/bitmaps by</span>", 
"<span class=\"comment\"> *        David S. Miller (davem@caip.rutgers.edu), 1995</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quotaops\">quotaops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext2.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xattr.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acl.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xip.h\"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext2_add_nondir\">ext2_add_nondir</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_add_link\">ext2_add_link</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_instantiate\">d_instantiate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_new_inode\">unlock_new_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_dec_link_count\">inode_dec_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_new_inode\">unlock_new_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Methods themselves.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext2_lookup\">ext2_lookup</a>(struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ino_t\">ino_t</a> <a class=\"id\" href=\"#ino\">ino</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#EXT2_NAME_LEN\">EXT2_NAME_LEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENAMETOOLONG\">ENAMETOOLONG</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#ext2_inode_by_name\">ext2_inode_by_name</a>(<a class=\"id\" href=\"#dir\">dir</a>, &amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext2_iget\">ext2_iget</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>) == -<a class=\"id\" href=\"#ESTALE\">ESTALE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"deleted inode referenced: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long) <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#d_splice_alias\">d_splice_alias</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext2_get_parent\">ext2_get_parent</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qstr\">qstr</a> <a class=\"id\" href=\"#dotdot\">dotdot</a> = {.<a class=\"id\" href=\"#name\">name</a> = \"..\", .<a class=\"id\" href=\"#len\">len</a> = 2};", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#ext2_inode_by_name\">ext2_inode_by_name</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, &amp;<a class=\"id\" href=\"#dotdot\">dotdot</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ino\">ino</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#d_obtain_alias\">d_obtain_alias</a>(<a class=\"id\" href=\"#ext2_iget\">ext2_iget</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#ino\">ino</a>));", 
"} ", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * By the time this is called, we already have created</span>", 
"<span class=\"comment\"> * the directory cache entry for the new file, but it</span>", 
"<span class=\"comment\"> * is so far negative - it has no inode.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the create succeeds, we fill in the inode information</span>", 
"<span class=\"comment\"> * with d_instantiate(). </span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext2_create\">ext2_create</a> (struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext2_new_inode\">ext2_new_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#ext2_file_inode_operations\">ext2_file_inode_operations</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext2_use_xip\">ext2_use_xip</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#ext2_aops_xip\">ext2_aops_xip</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#ext2_xip_file_operations\">ext2_xip_file_operations</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#NOBH\">NOBH</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#ext2_nobh_aops\">ext2_nobh_aops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#ext2_file_operations\">ext2_file_operations</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#ext2_aops\">ext2_aops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#ext2_file_operations\">ext2_file_operations</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext2_add_nondir\">ext2_add_nondir</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_mknod\">ext2_mknod</a> (struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#rdev\">rdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_valid_dev\">new_valid_dev</a>(<a class=\"id\" href=\"#rdev\">rdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext2_new_inode\">ext2_new_inode</a> (<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_special_inode\">init_special_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>, <a class=\"id\" href=\"#rdev\">rdev</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_XATTR\">CONFIG_EXT2_FS_XATTR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#ext2_special_inode_operations\">ext2_special_inode_operations</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_add_nondir\">ext2_add_nondir</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_symlink\">ext2_symlink</a> (struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#symname\">symname</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENAMETOOLONG\">ENAMETOOLONG</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#symname\">symname</a>)+1;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> &gt; <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext2_new_inode\">ext2_new_inode</a> (<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#S_IFLNK\">S_IFLNK</a> | <a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> &gt; sizeof (<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data\">i_data</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* slow symlink */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#ext2_symlink_inode_operations\">ext2_symlink_inode_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#NOBH\">NOBH</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#ext2_nobh_aops\">ext2_nobh_aops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#ext2_aops\">ext2_aops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#page_symlink\">page_symlink</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#symname\">symname</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fail\">out_fail</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fast symlink */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#ext2_fast_symlink_inode_operations\">ext2_fast_symlink_inode_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>((char*)(<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data\">i_data</a>),<a class=\"id\" href=\"#symname\">symname</a>,<a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#l\">l</a>-1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_add_nondir\">ext2_add_nondir</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#out_fail\">out_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_dec_link_count\">inode_dec_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_new_inode\">unlock_new_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a> (<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_link\">ext2_link</a> (struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#old_dentry\">old_dentry</a>, struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> >= <a class=\"id\" href=\"#EXT2_LINK_MAX\">EXT2_LINK_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMLINK\">EMLINK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME_SEC\">CURRENT_TIME_SEC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_inc_link_count\">inode_inc_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_count\">i_count</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_add_link\">ext2_add_link</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_instantiate\">d_instantiate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_dec_link_count\">inode_dec_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_mkdir\">ext2_mkdir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EMLINK\">EMLINK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> >= <a class=\"id\" href=\"#EXT2_LINK_MAX\">EXT2_LINK_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_inc_link_count\">inode_inc_link_count</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext2_new_inode\">ext2_new_inode</a> (<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a> | <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dir\">out_dir</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#ext2_dir_inode_operations\">ext2_dir_inode_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#ext2_dir_operations\">ext2_dir_operations</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#NOBH\">NOBH</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#ext2_nobh_aops\">ext2_nobh_aops</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#ext2_aops\">ext2_aops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_inc_link_count\">inode_inc_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_make_empty\">ext2_make_empty</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fail\">out_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_add_link\">ext2_add_link</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fail\">out_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_instantiate\">d_instantiate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_new_inode\">unlock_new_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#out_fail\">out_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_dec_link_count\">inode_dec_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_dec_link_count\">inode_dec_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_new_inode\">unlock_new_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<a class=\"id\" href=\"#out_dir\">out_dir</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_dec_link_count\">inode_dec_link_count</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_unlink\">ext2_unlink</a>(struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_dir_entry_2\">ext2_dir_entry_2</a> * <a class=\"id\" href=\"#de\">de</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> * <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a> = <a class=\"id\" href=\"#ext2_find_entry\">ext2_find_entry</a> (<a class=\"id\" href=\"#dir\">dir</a>, &amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>, &amp;<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#de\">de</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_delete_entry\">ext2_delete_entry</a> (<a class=\"id\" href=\"#de\">de</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_dec_link_count\">inode_dec_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_rmdir\">ext2_rmdir</a> (struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOTEMPTY\">ENOTEMPTY</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext2_empty_dir\">ext2_empty_dir</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_unlink\">ext2_unlink</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_dec_link_count\">inode_dec_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_dec_link_count\">inode_dec_link_count</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_rename\">ext2_rename</a> (struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#old_dir\">old_dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#old_dentry\">old_dentry</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#new_dir\">new_dir</a>,<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#new_dentry\">new_dentry</a> )", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#old_inode\">old_inode</a> = <a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#new_inode\">new_inode</a> = <a class=\"id\" href=\"#new_dentry\">new_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> * <a class=\"id\" href=\"#dir_page\">dir_page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_dir_entry_2\">ext2_dir_entry_2</a> * <a class=\"id\" href=\"#dir_de\">dir_de</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> * <a class=\"id\" href=\"#old_page\">old_page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_dir_entry_2\">ext2_dir_entry_2</a> * <a class=\"id\" href=\"#old_de\">old_de</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>);", 
];
xr_frag_insert('l/c6/e6e5c3747696e464aba2b4d7db7d444a6be3a2.xr', __xr_tmp);
