var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/ext3/xattr.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2001-2003 Andreas Gruenbacher, &lt;agruen@suse.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fix by Harrison Xing &lt;harrison@mountainviewdata.com&gt;.</span>", 
"<span class=\"comment\"> * Ext3 code with a lot of help from Eric Jarman &lt;ejarman@acm.org&gt;.</span>", 
"<span class=\"comment\"> * Extended attributes for symlinks and special files added per</span>", 
"<span class=\"comment\"> *  suggestion of Luka Renko &lt;luka.renko@hermes.si&gt;.</span>", 
"<span class=\"comment\"> * xattr consolidation Copyright (c) 2004 James Morris &lt;jmorris@redhat.com&gt;,</span>", 
"<span class=\"comment\"> *  Red Hat Inc.</span>", 
"<span class=\"comment\"> * ea-in-inode support by Alex Tomas &lt;alex@clusterfs.com&gt; aka bzzz</span>", 
"<span class=\"comment\"> *  and Andreas Gruenbacher &lt;agruen@suse.de&gt;.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Extended attributes are stored directly in inodes (on file systems with</span>", 
"<span class=\"comment\"> * inodes bigger than 128 bytes) and on additional disk blocks. The i_file_acl</span>", 
"<span class=\"comment\"> * field contains the block number if an inode uses an additional block. All</span>", 
"<span class=\"comment\"> * attributes must fit in the inode and one additional block. Blocks that</span>", 
"<span class=\"comment\"> * contain the identical set of attributes may be shared among several inodes.</span>", 
"<span class=\"comment\"> * Identical blocks are detected by keeping a cache of blocks that have</span>", 
"<span class=\"comment\"> * recently been accessed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The attributes in inodes and on blocks have a different header; the entries</span>", 
"<span class=\"comment\"> * are stored in the same format:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   +------------------+</span>", 
"<span class=\"comment\"> *   | header           |</span>", 
"<span class=\"comment\"> *   | entry 1          | |</span>", 
"<span class=\"comment\"> *   | entry 2          | | growing downwards</span>", 
"<span class=\"comment\"> *   | entry 3          | v</span>", 
"<span class=\"comment\"> *   | four null bytes  |</span>", 
"<span class=\"comment\"> *   | . . .            |</span>", 
"<span class=\"comment\"> *   | value 1          | ^</span>", 
"<span class=\"comment\"> *   | value 3          | | growing upwards</span>", 
"<span class=\"comment\"> *   | value 2          | |</span>", 
"<span class=\"comment\"> *   +------------------+</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The header is followed by multiple entry descriptors. In disk blocks, the</span>", 
"<span class=\"comment\"> * entry descriptors are kept sorted. In inodes, they are unsorted. The</span>", 
"<span class=\"comment\"> * attribute values are aligned to the end of the block in no specific order.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Locking strategy</span>", 
"<span class=\"comment\"> * ----------------</span>", 
"<span class=\"comment\"> * EXT3_I(inode)-&gt;i_file_acl is protected by EXT3_I(inode)-&gt;xattr_sem.</span>", 
"<span class=\"comment\"> * EA blocks are only changed if they are exclusive to an inode, so</span>", 
"<span class=\"comment\"> * holding xattr_sem also means that nothing but the EA block's reference</span>", 
"<span class=\"comment\"> * count can change. Multiple writers to the same block are synchronized</span>", 
"<span class=\"comment\"> * by the buffer lock.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ext3_jbd\">ext3_jbd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ext3_fs\">ext3_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mbcache\">mbcache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quotaops\">quotaops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rwsem\">rwsem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"xattr.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acl.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>) ((struct <a class=\"id\" href=\"#ext3_xattr_header\">ext3_xattr_header</a> *)((<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_data\">b_data</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#ptr\">ptr</a>) ((struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *)(<a class=\"id\" href=\"#ptr\">ptr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BFIRST\">BFIRST</a>(<a class=\"id\" href=\"#bh\">bh</a>) <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)+1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>) (*(<a class=\"id\" href=\"#__u32\">__u32</a> *)(<a class=\"id\" href=\"#entry\">entry</a>) == 0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IHDR\">IHDR</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>) \\", 
"<span class=\"ts\"/>((struct <a class=\"id\" href=\"#ext3_xattr_ibody_header\">ext3_xattr_ibody_header</a> *) \\", 
"<span class=\"ts\"/><span class=\"ts\"/>((void *)<a class=\"id\" href=\"#raw_inode\">raw_inode</a> + \\", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT3_GOOD_OLD_INODE_SIZE\">EXT3_GOOD_OLD_INODE_SIZE</a> + \\", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#hdr\">hdr</a>) ((struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *)((<a class=\"id\" href=\"#hdr\">hdr</a>)+1))", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXT3_XATTR_DEBUG\">EXT3_XATTR_DEBUG</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#f\">f</a>...) do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"inode %s:%lu: \", \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#f\">f</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\"); \\", 
"<span class=\"ts\"/>} while (0)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#f\">f</a>...) do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#b\">b</a>[<a class=\"id\" href=\"#BDEVNAME_SIZE\">BDEVNAME_SIZE</a>]; \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"block %s:%lu: \", \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bdevname\">bdevname</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>, <a class=\"id\" href=\"#b\">b</a>), \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long) <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#f\">f</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\"); \\", 
"<span class=\"ts\"/>} while (0)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#f\">f</a>...)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#f\">f</a>...)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#ext3_xattr_cache_insert\">ext3_xattr_cache_insert</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"static struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#ext3_xattr_cache_find\">ext3_xattr_cache_find</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext3_xattr_header\">ext3_xattr_header</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> **);", 
"static void <a class=\"id\" href=\"#ext3_xattr_rehash\">ext3_xattr_rehash</a>(struct <a class=\"id\" href=\"#ext3_xattr_header\">ext3_xattr_header</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *);", 
"static int <a class=\"id\" href=\"#ext3_xattr_list\">ext3_xattr_list</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"", 
"static struct <a class=\"id\" href=\"#mb_cache\">mb_cache</a> *<a class=\"id\" href=\"#ext3_xattr_cache\">ext3_xattr_cache</a>;", 
"", 
"static const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#ext3_xattr_handler_map\">ext3_xattr_handler_map</a>[] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT3_XATTR_INDEX_USER\">EXT3_XATTR_INDEX_USER</a>]<span class=\"ts\"/><span class=\"ts\"/>     = &amp;<a class=\"id\" href=\"#ext3_xattr_user_handler\">ext3_xattr_user_handler</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_POSIX_ACL\">CONFIG_EXT3_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT3_XATTR_INDEX_POSIX_ACL_ACCESS\">EXT3_XATTR_INDEX_POSIX_ACL_ACCESS</a>]  = &amp;<a class=\"id\" href=\"#ext3_xattr_acl_access_handler\">ext3_xattr_acl_access_handler</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT3_XATTR_INDEX_POSIX_ACL_DEFAULT\">EXT3_XATTR_INDEX_POSIX_ACL_DEFAULT</a>] = &amp;<a class=\"id\" href=\"#ext3_xattr_acl_default_handler\">ext3_xattr_acl_default_handler</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT3_XATTR_INDEX_TRUSTED\">EXT3_XATTR_INDEX_TRUSTED</a>]<span class=\"ts\"/>     = &amp;<a class=\"id\" href=\"#ext3_xattr_trusted_handler\">ext3_xattr_trusted_handler</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_SECURITY\">CONFIG_EXT3_FS_SECURITY</a>", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT3_XATTR_INDEX_SECURITY\">EXT3_XATTR_INDEX_SECURITY</a>]<span class=\"ts\"/>     = &amp;<a class=\"id\" href=\"#ext3_xattr_security_handler\">ext3_xattr_security_handler</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#ext3_xattr_handlers\">ext3_xattr_handlers</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext3_xattr_user_handler\">ext3_xattr_user_handler</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext3_xattr_trusted_handler\">ext3_xattr_trusted_handler</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_POSIX_ACL\">CONFIG_EXT3_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext3_xattr_acl_access_handler\">ext3_xattr_acl_access_handler</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext3_xattr_acl_default_handler\">ext3_xattr_acl_default_handler</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_SECURITY\">CONFIG_EXT3_FS_SECURITY</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext3_xattr_security_handler\">ext3_xattr_security_handler</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *", 
"<a class=\"id\" href=\"#ext3_xattr_handler\">ext3_xattr_handler</a>(int <a class=\"id\" href=\"#name_index\">name_index</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name_index\">name_index</a> &gt; 0 && <a class=\"id\" href=\"#name_index\">name_index</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#ext3_xattr_handler_map\">ext3_xattr_handler_map</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#ext3_xattr_handler_map\">ext3_xattr_handler_map</a>[<a class=\"id\" href=\"#name_index\">name_index</a>];", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#handler\">handler</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Inode operation listxattr()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * dentry-&gt;d_inode-&gt;i_mutex: don't care</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#ext3_listxattr\">ext3_listxattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext3_xattr_list\">ext3_xattr_list</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext3_xattr_check_names\">ext3_xattr_check_names</a>(struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>, void *<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#EXT3_XATTR_NEXT\">EXT3_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((void *)<a class=\"id\" href=\"#next\">next</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#ext3_xattr_check_block\">ext3_xattr_check_block</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_magic\">h_magic</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT3_XATTR_MAGIC\">EXT3_XATTR_MAGIC</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_blocks\">h_blocks</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_check_names\">ext3_xattr_check_names</a>(<a class=\"id\" href=\"#BFIRST\">BFIRST</a>(<a class=\"id\" href=\"#bh\">bh</a>), <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#ext3_xattr_check_entry\">ext3_xattr_check_entry</a>(struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#value_size\">value_size</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> != 0 || <a class=\"id\" href=\"#value_size\">value_size</a> &gt; <a class=\"id\" href=\"#size\">size</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>) + <a class=\"id\" href=\"#value_size\">value_size</a> &gt; <a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext3_xattr_find_entry\">ext3_xattr_find_entry</a>(struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> **<a class=\"id\" href=\"#pentry\">pentry</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#sorted\">sorted</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#name_len\">name_len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cmp\">cmp</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = *<a class=\"id\" href=\"#pentry\">pentry</a>;", 
"<span class=\"ts\"/>for (; !<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>); <a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#EXT3_XATTR_NEXT\">EXT3_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmp\">cmp</a> = <a class=\"id\" href=\"#name_index\">name_index</a> - <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cmp\">cmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmp\">cmp</a> = <a class=\"id\" href=\"#name_len\">name_len</a> - <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cmp\">cmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmp\">cmp</a> = <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmp\">cmp</a> <= 0 && (<a class=\"id\" href=\"#sorted\">sorted</a> || <a class=\"id\" href=\"#cmp\">cmp</a> == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pentry\">pentry</a> = <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cmp\">cmp</a> && <a class=\"id\" href=\"#ext3_xattr_check_entry\">ext3_xattr_check_entry</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmp\">cmp</a> ? -<a class=\"id\" href=\"#ENODATA\">ENODATA</a> : 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext3_xattr_block_get\">ext3_xattr_block_get</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"name=%d.%s, buffer=%p, buffer_size=%ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, (long)<a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"reading block %u\", <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"b_count=%d, refcount=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>)), <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_xattr_check_block\">ext3_xattr_check_block</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<a class=\"id\" href=\"#bad_block\">bad_block</a>:<span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"inode %lu: bad block \"<a class=\"id\" href=\"#E3FSBLK\">E3FSBLK</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_xattr_cache_insert\">ext3_xattr_cache_insert</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#BFIRST\">BFIRST</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_find_entry\">ext3_xattr_find_entry</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EIO\">EIO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext3_xattr_ibody_get\">ext3_xattr_ibody_get</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_ibody_header\">ext3_xattr_ibody_header</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_inode\">ext3_inode</a> *<a class=\"id\" href=\"#raw_inode\">raw_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_iloc\">ext3_iloc</a> <a class=\"id\" href=\"#iloc\">iloc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext3_test_inode_state\">ext3_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_STATE_XATTR\">EXT3_STATE_XATTR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_get_inode_loc\">ext3_get_inode_loc</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a> = <a class=\"id\" href=\"#ext3_raw_inode\">ext3_raw_inode</a>(&amp;<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#IHDR\">IHDR</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (void *)<a class=\"id\" href=\"#raw_inode\">raw_inode</a> + <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_check_names\">ext3_xattr_check_names</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_find_entry\">ext3_xattr_find_entry</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#end\">end</a> - (void *)<a class=\"id\" href=\"#entry\">entry</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, (void *)<a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>), <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_get()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copy an extended attribute into the buffer</span>", 
"<span class=\"comment\"> * provided, or compute the buffer size required.</span>", 
"<span class=\"comment\"> * Buffer is NULL to compute the size of the buffer required.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns a negative error number on failure, or the number of bytes</span>", 
"<span class=\"comment\"> * used / required on success.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext3_xattr_get\">ext3_xattr_get</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/>       void *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_ibody_get\">ext3_xattr_ibody_get</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_block_get\">ext3_xattr_block_get</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext3_xattr_list_entries\">ext3_xattr_list_entries</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#rest\">rest</a> = <a class=\"id\" href=\"#buffer_size\">buffer_size</a>;", 
"", 
"<span class=\"ts\"/>for (; !<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>); <a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#EXT3_XATTR_NEXT\">EXT3_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#handler\">handler</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_xattr_handler\">ext3_xattr_handler</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#handler\">handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#list\">list</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#rest\">rest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name\">e_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#rest\">rest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rest\">rest</a> -= <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#buffer_size\">buffer_size</a> - <a class=\"id\" href=\"#rest\">rest</a>;", 
"}", 
];
xr_frag_insert('l/c7/2c4b7000419b389bf4c7143591e0eb272be4c0.xr', __xr_tmp);
