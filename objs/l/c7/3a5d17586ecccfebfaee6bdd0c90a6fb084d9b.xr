var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NET4:<span class=\"ts\"/>Implementation of BSD Unix domain sockets.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Alan Cox, &lt;alan@lxorguk.ukuu.org.uk&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Linus Torvalds<span class=\"ts\"/>:<span class=\"ts\"/>Assorted bug cures.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Niibe Yutaka<span class=\"ts\"/>:<span class=\"ts\"/>async I/O support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Carsten Paeth<span class=\"ts\"/>:<span class=\"ts\"/>PF_UNIX check, address fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Limit size of allocated blocks.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Fixed the stupid socketpair bug.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>BSD compatibility fine tuning.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Fixed a bug in connect when interrupted.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Sorted out a proper draft version of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>file descriptor passing hacked up from</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Mike Shaver's work.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Marty Leisner<span class=\"ts\"/>:<span class=\"ts\"/>Fixes to fd passing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Nick Nevin<span class=\"ts\"/>:<span class=\"ts\"/>recvmsg bugfix.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Started proper garbage collector</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Heiko EiBfeldt<span class=\"ts\"/>:<span class=\"ts\"/>Missing verify_area check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Started POSIXisms</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andreas Schwab<span class=\"ts\"/>:<span class=\"ts\"/>Replace inode by dentry for proper</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>reference counting</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Kirk Petersen<span class=\"ts\"/>:<span class=\"ts\"/>Made this a module</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    Christoph Rohland<span class=\"ts\"/>:<span class=\"ts\"/>Elegant non-blocking accept/connect algorithm.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Lots of bug fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     Alexey Kuznetosv<span class=\"ts\"/>:<span class=\"ts\"/>Repaired (I hope) bugs introduces</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>by above two patches.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     Andrea Arcangeli<span class=\"ts\"/>:<span class=\"ts\"/>If possible we block in connect(2)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if the max backlog of the listen socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>is been reached. This won't break</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>old apps and it will avoid huge amount</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>of socks hashed (this for unix_gc()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>performances reasons).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Security fix that limits the max</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>number of socks to 2*max_files and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>the number of skb queueable in the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>dgram receiver.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Artur Skawina   :<span class=\"ts\"/>Hash function optimizations</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     Alexey Kuznetsov   :<span class=\"ts\"/>Full scale SMP. Lot of bugs are introduced 8)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>      Malcolm Beattie   :<span class=\"ts\"/>Set peercred for socketpair</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     Michal Ostrowski   :       Module initialization cleanup.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     Arnaldo C. Melo<span class=\"ts\"/>:<span class=\"ts\"/>Remove MOD_{INC,DEC}_USE_COUNT,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>the core infrastructure is doing that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for all net proto families now (2.5.69+)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Known differences from reference BSD that was tested:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>[TO FIX]</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ECONNREFUSED is not returned from one end of a connected() socket to the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>other the moment one end closes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>fstat() doesn't return st_dev=0, and give the blksize as high water mark</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>and a fake inode identifier (nor the BSD first socket fstat twice bug).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>[NOT TO FIX]</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>accept() returns a path name even if the connecting socket has closed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>in the meantime (BSD loses the path and gives up).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>accept() returns 0 length path for an unbound connector. BSD returns 16</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>and a null first byte in the path (but not for gethost/peername - BSD bug ??)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>socketpair(...SOCK_RAW..) doesn't panic the kernel.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>BSD af_unix apparently has connect forgetting to block properly.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>(need to check this with the POSIX spec in detail)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Differences from 2.0.0-11-... (ANK)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Bug fixes and improvements.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- client shutdown killed server socket.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- removed all useless cli/sti pairs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Semantic changes/extensions.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- generic control message passing.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- SCM_CREDENTIALS control message.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- \"Abstract\" (not FS based) socket bindings.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  Abstract names are sequences of bytes (not zero terminated)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  started by 0, so that this name space does not intersect</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  with BSD names.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dcache\">dcache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#un\">un</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp_states\">tcp_states</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#af_unix\">af_unix</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#scm\">scm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#checksum\">checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> <a class=\"id\" href=\"#unix_socket_table\">unix_socket_table</a>[<a class=\"id\" href=\"#UNIX_HASH_SIZE\">UNIX_HASH_SIZE</a> + 1];", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#unix_table_lock\">unix_table_lock</a>);", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#unix_nr_socks\">unix_nr_socks</a> = <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(0);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#unix_sockets_unbound\">unix_sockets_unbound</a><span class=\"ts\"/>(&amp;<a class=\"id\" href=\"#unix_socket_table\">unix_socket_table</a>[<a class=\"id\" href=\"#UNIX_HASH_SIZE\">UNIX_HASH_SIZE</a>])", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UNIX_ABSTRACT\">UNIX_ABSTRACT</a>(<a class=\"id\" href=\"#sk\">sk</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#unix_sk\">unix_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#hash\">hash</a> != <a class=\"id\" href=\"#UNIX_HASH_SIZE\">UNIX_HASH_SIZE</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SECURITY_NETWORK\">CONFIG_SECURITY_NETWORK</a>", 
"static void <a class=\"id\" href=\"#unix_get_secdata\">unix_get_secdata</a>(struct <a class=\"id\" href=\"#scm_cookie\">scm_cookie</a> *<a class=\"id\" href=\"#scm\">scm</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#UNIXSID\">UNIXSID</a>(<a class=\"id\" href=\"#skb\">skb</a>), &amp;<a class=\"id\" href=\"#scm\">scm</a>-><a class=\"id\" href=\"#secid\">secid</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unix_set_secdata\">unix_set_secdata</a>(struct <a class=\"id\" href=\"#scm_cookie\">scm_cookie</a> *<a class=\"id\" href=\"#scm\">scm</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scm\">scm</a>-><a class=\"id\" href=\"#secid\">secid</a> = *<a class=\"id\" href=\"#UNIXSID\">UNIXSID</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unix_get_secdata\">unix_get_secdata</a>(struct <a class=\"id\" href=\"#scm_cookie\">scm_cookie</a> *<a class=\"id\" href=\"#scm\">scm</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{ }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unix_set_secdata\">unix_set_secdata</a>(struct <a class=\"id\" href=\"#scm_cookie\">scm_cookie</a> *<a class=\"id\" href=\"#scm\">scm</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{ }", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SECURITY_NETWORK */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  SMP locking strategy:</span>", 
"<span class=\"comment\"> *    hash table is protected with spinlock unix_table_lock</span>", 
"<span class=\"comment\"> *    each socket state is protected by separate spin lock.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned <a class=\"id\" href=\"#unix_hash_fold\">unix_hash_fold</a>(<a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#hash\">hash</a> = (<a class=\"id\" href=\"#__force\">__force</a> unsigned)<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> ^= <a class=\"id\" href=\"#hash\">hash</a>>>16;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> ^= <a class=\"id\" href=\"#hash\">hash</a>>>8;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hash\">hash</a>&amp;(<a class=\"id\" href=\"#UNIX_HASH_SIZE\">UNIX_HASH_SIZE</a>-1);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#unix_peer\">unix_peer</a>(<a class=\"id\" href=\"#sk\">sk</a>) (<a class=\"id\" href=\"#unix_sk\">unix_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#peer\">peer</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#unix_our_peer\">unix_our_peer</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#osk\">osk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#unix_peer\">unix_peer</a>(<a class=\"id\" href=\"#osk\">osk</a>) == <a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#unix_may_send\">unix_may_send</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#osk\">osk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#unix_peer\">unix_peer</a>(<a class=\"id\" href=\"#osk\">osk</a>) == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#unix_our_peer\">unix_our_peer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#osk\">osk</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#unix_recvq_full\">unix_recvq_full</a>(struct <a class=\"id\" href=\"#sock\">sock</a> const *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb_queue_len\">skb_queue_len</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>) &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_max_ack_backlog\">sk_max_ack_backlog</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#unix_peer_get\">unix_peer_get</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#peer\">peer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unix_state_lock\">unix_state_lock</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#peer\">peer</a> = <a class=\"id\" href=\"#unix_peer\">unix_peer</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peer\">peer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#peer\">peer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unix_state_unlock\">unix_state_unlock</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#peer\">peer</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unix_release_addr\">unix_release_addr</a>(struct <a class=\"id\" href=\"#unix_address\">unix_address</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Check unix socket name:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- should be not zero length.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>        - if started by not zero, should be NULL terminated (FS object)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- if started by zero, it is abstract name.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#unix_mkname\">unix_mkname</a>(struct <a class=\"id\" href=\"#sockaddr_un\">sockaddr_un</a> *<a class=\"id\" href=\"#sunaddr\">sunaddr</a>, int <a class=\"id\" href=\"#len\">len</a>, unsigned *<a class=\"id\" href=\"#hashp\">hashp</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> <= sizeof(short) || <a class=\"id\" href=\"#len\">len</a> &gt; sizeof(*<a class=\"id\" href=\"#sunaddr\">sunaddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sunaddr\">sunaddr</a> || <a class=\"id\" href=\"#sunaddr\">sunaddr</a>-><a class=\"id\" href=\"#sun_family\">sun_family</a> != <a class=\"id\" href=\"#AF_UNIX\">AF_UNIX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sunaddr\">sunaddr</a>-><a class=\"id\" href=\"#sun_path\">sun_path</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This may look like an off by one error but it is a bit more</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * subtle. 108 is the longest valid AF_UNIX path for a binding.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * sun_path[108] doesnt as such exist.  However in kernel space</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we are guaranteed that it is a valid memory location in our</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * kernel address buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>((char *)<a class=\"id\" href=\"#sunaddr\">sunaddr</a>)[<a class=\"id\" href=\"#len\">len</a>] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#sunaddr\">sunaddr</a>-><a class=\"id\" href=\"#sun_path\">sun_path</a>)+1+sizeof(short);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#hashp\">hashp</a> = <a class=\"id\" href=\"#unix_hash_fold\">unix_hash_fold</a>(<a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#sunaddr\">sunaddr</a>, <a class=\"id\" href=\"#len\">len</a>, 0));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__unix_remove_socket\">__unix_remove_socket</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_del_node_init\">sk_del_node_init</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__unix_insert_socket\">__unix_insert_socket</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#list\">list</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#sk_unhashed\">sk_unhashed</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_add_node\">sk_add_node</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unix_remove_socket\">unix_remove_socket</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#unix_table_lock\">unix_table_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__unix_remove_socket\">__unix_remove_socket</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#unix_table_lock\">unix_table_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unix_insert_socket\">unix_insert_socket</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#list\">list</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#unix_table_lock\">unix_table_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__unix_insert_socket\">__unix_insert_socket</a>(<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#unix_table_lock\">unix_table_lock</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#__unix_find_socket_byname\">__unix_find_socket_byname</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sockaddr_un\">sockaddr_un</a> *<a class=\"id\" href=\"#sunname\">sunname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#type\">type</a>, unsigned <a class=\"id\" href=\"#hash\">hash</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each\">sk_for_each</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#unix_socket_table\">unix_socket_table</a>[<a class=\"id\" href=\"#hash\">hash</a> ^ <a class=\"id\" href=\"#type\">type</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#unix_sock\">unix_sock</a> *<a class=\"id\" href=\"#u\">u</a> = <a class=\"id\" href=\"#unix_sk\">unix_sk</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#s\">s</a>), <a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#len\">len</a> == <a class=\"id\" href=\"#len\">len</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#sunname\">sunname</a>, <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#s\">s</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#unix_find_socket_byname\">unix_find_socket_byname</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#sockaddr_un\">sockaddr_un</a> *<a class=\"id\" href=\"#sunname\">sunname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned <a class=\"id\" href=\"#hash\">hash</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#unix_table_lock\">unix_table_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#__unix_find_socket_byname\">__unix_find_socket_byname</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sunname\">sunname</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#unix_table_lock\">unix_table_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#s\">s</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#unix_find_socket_byinode\">unix_find_socket_byinode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#unix_table_lock\">unix_table_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each\">sk_for_each</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#unix_socket_table\">unix_socket_table</a>[<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a> &amp; (<a class=\"id\" href=\"#UNIX_HASH_SIZE\">UNIX_HASH_SIZE</a> - 1)]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#unix_sk\">unix_sk</a>(<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#dentry\">dentry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dentry\">dentry</a> && <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a> == <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#unix_table_lock\">unix_table_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#s\">s</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#unix_writable\">unix_writable</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>) << 2) <= <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unix_write_space\">unix_write_space</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket_wq\">socket_wq</a> *<a class=\"id\" href=\"#wq\">wq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unix_writable\">unix_writable</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wq\">wq</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wq\">sk_wq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wq_has_sleeper\">wq_has_sleeper</a>(<a class=\"id\" href=\"#wq\">wq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_sync\">wake_up_interruptible_sync</a>(&amp;<a class=\"id\" href=\"#wq\">wq</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_wake_async\">sk_wake_async</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_WAKE_SPACE\">SOCK_WAKE_SPACE</a>, <a class=\"id\" href=\"#POLL_OUT\">POLL_OUT</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"<span class=\"comment\">/* When dgram socket disconnects (or changes its peer), we clear its receive</span>", 
"<span class=\"comment\"> * queue of packets arrived from previous peer. First, it allows to do</span>", 
"<span class=\"comment\"> * flow control based only on wmem_alloc; second, sk connected to peer</span>", 
"<span class=\"comment\"> * may receive messages only from that peer. */</span>", 
"static void <a class=\"id\" href=\"#unix_dgram_disconnected\">unix_dgram_disconnected</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#other\">other</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_purge\">skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_all\">wake_up_interruptible_all</a>(&amp;<a class=\"id\" href=\"#unix_sk\">unix_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#peer_wait\">peer_wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If one link of bidirectional dgram pipe is disconnected,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we signal error. Messages are lost. Do not make this,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * when peer was not connected to us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#other\">other</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>) && <a class=\"id\" href=\"#unix_peer\">unix_peer</a>(<a class=\"id\" href=\"#other\">other</a>) == <a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> = <a class=\"id\" href=\"#ECONNRESET\">ECONNRESET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#sk_error_report\">sk_error_report</a>(<a class=\"id\" href=\"#other\">other</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unix_sock_destructor\">unix_sock_destructor</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#unix_sock\">unix_sock</a> *<a class=\"id\" href=\"#u\">u</a> = <a class=\"id\" href=\"#unix_sk\">unix_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_purge\">skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#sk_unhashed\">sk_unhashed</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Attempt to release alive unix socket: %p\\n\", <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_release_addr\">unix_release_addr</a>(<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#unix_nr_socks\">unix_nr_socks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_prot_inuse_add\">sock_prot_inuse_add</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>, -1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#UNIX_REFCNT_DEBUG\">UNIX_REFCNT_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"UNIX %p is destroyed, %d are still alive.\\n\", <a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#unix_nr_socks\">unix_nr_socks</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#unix_release_sock\">unix_release_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#embrion\">embrion</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#unix_sock\">unix_sock</a> *<a class=\"id\" href=\"#u\">u</a> = <a class=\"id\" href=\"#unix_sk\">unix_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#skpair\">skpair</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unix_remove_socket\">unix_remove_socket</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clear state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unix_state_lock\">unix_state_lock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_orphan\">sock_orphan</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a> = <a class=\"id\" href=\"#SHUTDOWN_MASK\">SHUTDOWN_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a><span class=\"ts\"/>     = <a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#dentry\">dentry</a>    = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt\">mnt</a><span class=\"ts\"/>     = <a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#mnt\">mnt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#mnt\">mnt</a><span class=\"ts\"/>     = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> = <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unix_state_unlock\">unix_state_unlock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_all\">wake_up_interruptible_all</a>(&amp;<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#peer_wait\">peer_wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skpair\">skpair</a> = <a class=\"id\" href=\"#unix_peer\">unix_peer</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skpair\">skpair</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_type\">sk_type</a> == <a class=\"id\" href=\"#SOCK_STREAM\">SOCK_STREAM</a> || <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_type\">sk_type</a> == <a class=\"id\" href=\"#SOCK_SEQPACKET\">SOCK_SEQPACKET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_state_lock\">unix_state_lock</a>(<a class=\"id\" href=\"#skpair\">skpair</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No more writes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skpair\">skpair</a>-><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a> = <a class=\"id\" href=\"#SHUTDOWN_MASK\">SHUTDOWN_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>) || <a class=\"id\" href=\"#embrion\">embrion</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skpair\">skpair</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> = <a class=\"id\" href=\"#ECONNRESET\">ECONNRESET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_state_unlock\">unix_state_unlock</a>(<a class=\"id\" href=\"#skpair\">skpair</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skpair\">skpair</a>-><a class=\"id\" href=\"#sk_state_change\">sk_state_change</a>(<a class=\"id\" href=\"#skpair\">skpair</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_wake_async\">sk_wake_async</a>(<a class=\"id\" href=\"#skpair\">skpair</a>, <a class=\"id\" href=\"#SOCK_WAKE_WAITD\">SOCK_WAKE_WAITD</a>, <a class=\"id\" href=\"#POLL_HUP\">POLL_HUP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#skpair\">skpair</a>); <span class=\"comment\">/* It may now die */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_peer\">unix_peer</a>(<a class=\"id\" href=\"#sk\">sk</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try to flush out this socket. Throw out buffers at least */</span>", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_dequeue\">skb_dequeue</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_release_sock\">unix_release_sock</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* passed fds are erased in the kfree_skb hook<span class=\"ts\"/>      */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dentry\">dentry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mntput\">mntput</a>(<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ---- Socket is dead now and most probably destroyed ---- */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fixme: BSD difference: In BSD all sockets connected to use get</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>  ECONNRESET and we die on the spot. In Linux we behave</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>  like files and pipes do and wait for the last</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>  dereference.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Can't we simply set sock-&gt;err?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>  What the above comment does talk about? --ANK(980817)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unix_tot_inflight\">unix_tot_inflight</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_gc\">unix_gc</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Garbage collect fds */</span>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_peercred\">init_peercred</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_pid\">sk_peer_pid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_cred\">sk_peer_cred</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_cred\">sk_peer_cred</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_pid\">sk_peer_pid</a>  = <a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#task_tgid\">task_tgid</a>(<a class=\"id\" href=\"#current\">current</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_cred\">sk_peer_cred</a> = <a class=\"id\" href=\"#get_current_cred\">get_current_cred</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#copy_peercred\">copy_peercred</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#peersk\">peersk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_pid\">sk_peer_pid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_cred\">sk_peer_cred</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_cred\">sk_peer_cred</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_pid\">sk_peer_pid</a>  = <a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#peersk\">peersk</a>-><a class=\"id\" href=\"#sk_peer_pid\">sk_peer_pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_peer_cred\">sk_peer_cred</a> = <a class=\"id\" href=\"#get_cred\">get_cred</a>(<a class=\"id\" href=\"#peersk\">peersk</a>-><a class=\"id\" href=\"#sk_peer_cred\">sk_peer_cred</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#unix_listen\">unix_listen</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#backlog\">backlog</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#unix_sock\">unix_sock</a> *<a class=\"id\" href=\"#u\">u</a> = <a class=\"id\" href=\"#unix_sk\">unix_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#old_pid\">old_pid</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#old_cred\">old_cred</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#SOCK_STREAM\">SOCK_STREAM</a> && <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#SOCK_SEQPACKET\">SOCK_SEQPACKET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;<span class=\"ts\"/><span class=\"comment\">/* Only stream/seqpacket sockets accept */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;<span class=\"ts\"/><span class=\"comment\">/* No listens on an unbound socket */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unix_state_lock\">unix_state_lock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a> && <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#backlog\">backlog</a> &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_max_ack_backlog\">sk_max_ack_backlog</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_all\">wake_up_interruptible_all</a>(&amp;<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#peer_wait\">peer_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_max_ack_backlog\">sk_max_ack_backlog</a><span class=\"ts\"/>= <a class=\"id\" href=\"#backlog\">backlog</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* set credentials so connect can copy them */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_peercred\">init_peercred</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unix_state_unlock\">unix_state_unlock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#old_pid\">old_pid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_cred\">old_cred</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#old_cred\">old_cred</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#unix_release\">unix_release</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *);", 
"static int <a class=\"id\" href=\"#unix_bind\">unix_bind</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *, int);", 
"static int <a class=\"id\" href=\"#unix_stream_connect\">unix_stream_connect</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#addr_len\">addr_len</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"static int <a class=\"id\" href=\"#unix_socketpair\">unix_socketpair</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *, struct <a class=\"id\" href=\"#socket\">socket</a> *);", 
"static int <a class=\"id\" href=\"#unix_accept\">unix_accept</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *, struct <a class=\"id\" href=\"#socket\">socket</a> *, int);", 
"static int <a class=\"id\" href=\"#unix_getname\">unix_getname</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *, int *, int);", 
"static unsigned int <a class=\"id\" href=\"#unix_poll\">unix_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#socket\">socket</a> *, <a class=\"id\" href=\"#poll_table\">poll_table</a> *);", 
"static unsigned int <a class=\"id\" href=\"#unix_dgram_poll\">unix_dgram_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#socket\">socket</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#poll_table\">poll_table</a> *);", 
"static int <a class=\"id\" href=\"#unix_ioctl\">unix_ioctl</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *, unsigned int, unsigned long);", 
"static int <a class=\"id\" href=\"#unix_shutdown\">unix_shutdown</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *, int);", 
"static int <a class=\"id\" href=\"#unix_stream_sendmsg\">unix_stream_sendmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *, struct <a class=\"id\" href=\"#socket\">socket</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"static int <a class=\"id\" href=\"#unix_stream_recvmsg\">unix_stream_recvmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *, struct <a class=\"id\" href=\"#socket\">socket</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>, int);", 
"static int <a class=\"id\" href=\"#unix_dgram_sendmsg\">unix_dgram_sendmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *, struct <a class=\"id\" href=\"#socket\">socket</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"static int <a class=\"id\" href=\"#unix_dgram_recvmsg\">unix_dgram_recvmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *, struct <a class=\"id\" href=\"#socket\">socket</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>, int);", 
"static int <a class=\"id\" href=\"#unix_dgram_connect\">unix_dgram_connect</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int, int);", 
"static int <a class=\"id\" href=\"#unix_seqpacket_sendmsg\">unix_seqpacket_sendmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *, struct <a class=\"id\" href=\"#socket\">socket</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#unix_stream_ops\">unix_stream_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><a class=\"id\" href=\"#PF_UNIX\">PF_UNIX</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> =<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_release\">unix_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bind\">bind</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_bind\">unix_bind</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_stream_connect\">unix_stream_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#socketpair\">socketpair</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_socketpair\">unix_socketpair</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept\">accept</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_accept\">unix_accept</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getname\">getname</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_getname\">unix_getname</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_poll\">unix_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_ioctl\">unix_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listen\">listen</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_listen\">unix_listen</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_shutdown\">unix_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a> =<span class=\"ts\"/><a class=\"id\" href=\"#sock_no_setsockopt\">sock_no_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a> =<span class=\"ts\"/><a class=\"id\" href=\"#sock_no_getsockopt\">sock_no_getsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_stream_sendmsg\">unix_stream_sendmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_stream_recvmsg\">unix_stream_recvmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_no_mmap\">sock_no_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendpage\">sendpage</a> =<span class=\"ts\"/><a class=\"id\" href=\"#sock_no_sendpage\">sock_no_sendpage</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#unix_dgram_ops\">unix_dgram_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><a class=\"id\" href=\"#PF_UNIX\">PF_UNIX</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> =<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_release\">unix_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bind\">bind</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_bind\">unix_bind</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_dgram_connect\">unix_dgram_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#socketpair\">socketpair</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_socketpair\">unix_socketpair</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept\">accept</a> =<span class=\"ts\"/><a class=\"id\" href=\"#sock_no_accept\">sock_no_accept</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getname\">getname</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_getname\">unix_getname</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_dgram_poll\">unix_dgram_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_ioctl\">unix_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listen\">listen</a> =<span class=\"ts\"/><a class=\"id\" href=\"#sock_no_listen\">sock_no_listen</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_shutdown\">unix_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a> =<span class=\"ts\"/><a class=\"id\" href=\"#sock_no_setsockopt\">sock_no_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a> =<span class=\"ts\"/><a class=\"id\" href=\"#sock_no_getsockopt\">sock_no_getsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_dgram_sendmsg\">unix_dgram_sendmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_dgram_recvmsg\">unix_dgram_recvmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_no_mmap\">sock_no_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendpage\">sendpage</a> =<span class=\"ts\"/><a class=\"id\" href=\"#sock_no_sendpage\">sock_no_sendpage</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#unix_seqpacket_ops\">unix_seqpacket_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><a class=\"id\" href=\"#PF_UNIX\">PF_UNIX</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> =<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_release\">unix_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bind\">bind</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_bind\">unix_bind</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_stream_connect\">unix_stream_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#socketpair\">socketpair</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_socketpair\">unix_socketpair</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept\">accept</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_accept\">unix_accept</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getname\">getname</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_getname\">unix_getname</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_dgram_poll\">unix_dgram_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_ioctl\">unix_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listen\">listen</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_listen\">unix_listen</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a> =<span class=\"ts\"/><a class=\"id\" href=\"#unix_shutdown\">unix_shutdown</a>,", 
];
xr_frag_insert('l/c7/3a5d17586ecccfebfaee6bdd0c90a6fb084d9b.xr', __xr_tmp);
