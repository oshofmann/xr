var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Linux network device link state notification</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author:</span>", 
"<span class=\"comment\"> *     Stefan Rompf &lt;sux@loplof.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/if.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#pkt_sched\">pkt_sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"enum <a class=\"id\" href=\"#lw_bits\">lw_bits</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LW_URGENT\">LW_URGENT</a> = 0,", 
"};", 
"", 
"static unsigned long <a class=\"id\" href=\"#linkwatch_flags\">linkwatch_flags</a>;", 
"static unsigned long <a class=\"id\" href=\"#linkwatch_nextevent\">linkwatch_nextevent</a>;", 
"", 
"static void <a class=\"id\" href=\"#linkwatch_event\">linkwatch_event</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#dummy\">dummy</a>);", 
"static <a class=\"id\" href=\"#DECLARE_DELAYED_WORK\">DECLARE_DELAYED_WORK</a>(<a class=\"id\" href=\"#linkwatch_work\">linkwatch_work</a>, <a class=\"id\" href=\"#linkwatch_event\">linkwatch_event</a>);", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#lweventlist\">lweventlist</a>);", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#lweventlist_lock\">lweventlist_lock</a>);", 
"", 
"static unsigned char <a class=\"id\" href=\"#default_operstate\">default_operstate</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_carrier_ok\">netif_carrier_ok</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#iflink\">iflink</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_OPER_LOWERLAYERDOWN\">IF_OPER_LOWERLAYERDOWN</a> : <a class=\"id\" href=\"#IF_OPER_DOWN\">IF_OPER_DOWN</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_dormant\">netif_dormant</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IF_OPER_DORMANT\">IF_OPER_DORMANT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IF_OPER_UP\">IF_OPER_UP</a>;", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#rfc2863_policy\">rfc2863_policy</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#operstate\">operstate</a> = <a class=\"id\" href=\"#default_operstate\">default_operstate</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#operstate\">operstate</a> == <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#operstate\">operstate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#dev_base_lock\">dev_base_lock</a>);", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link_mode\">link_mode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IF_LINK_MODE_DORMANT\">IF_LINK_MODE_DORMANT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#operstate\">operstate</a> == <a class=\"id\" href=\"#IF_OPER_UP\">IF_OPER_UP</a>)", 
];
xr_frag_insert('l/c7/59ee7365f805607296111570525cd081c98287.xr', __xr_tmp);
