var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/include/linux/ext2_fs_sb.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1993, 1994, 1995</span>", 
"<span class=\"comment\"> * Remy Card (card@masi.ibp.fr)</span>", 
"<span class=\"comment\"> * Laboratoire MASI - Institut Blaise Pascal</span>", 
"<span class=\"comment\"> * Universite Pierre et Marie Curie (Paris VI)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  from</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  linux/include/linux/minix_fs_sb.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_EXT2_FS_SB\">_LINUX_EXT2_FS_SB</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_EXT2_FS_SB\">_LINUX_EXT2_FS_SB</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu_counter\">percpu_counter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rbtree\">rbtree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* XXX Here for now... not interested in restructing headers JUST now */</span>", 
"", 
"<span class=\"comment\">/* data type for block offset of block group */</span>", 
"typedef int <a class=\"id\" href=\"#ext2_grpblk_t\">ext2_grpblk_t</a>;", 
"", 
"<span class=\"comment\">/* data type for filesystem-wide blocks number */</span>", 
"typedef unsigned long <a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E2FSBLK\">E2FSBLK</a> \"%lu\"", 
"", 
"struct <a class=\"id\" href=\"#ext2_reserve_window\">ext2_reserve_window</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_rsv_start\">_rsv_start</a>;<span class=\"ts\"/><span class=\"comment\">/* First byte reserved */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_rsv_end\">_rsv_end</a>;<span class=\"ts\"/><span class=\"comment\">/* Last byte reserved or 0 */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ext2_reserve_window_node\">ext2_reserve_window_node</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/> <span class=\"ts\"/><a class=\"id\" href=\"#rsv_node\">rsv_node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsv_goal_size\">rsv_goal_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsv_alloc_hit\">rsv_alloc_hit</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_reserve_window\">ext2_reserve_window</a><span class=\"ts\"/><a class=\"id\" href=\"#rsv_window\">rsv_window</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ext2_block_alloc_info\">ext2_block_alloc_info</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* information about reservation window */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_reserve_window_node\">ext2_reserve_window_node</a><span class=\"ts\"/><a class=\"id\" href=\"#rsv_window_node\">rsv_window_node</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * was i_next_alloc_block in ext2_inode_info</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is the logical (file-relative) number of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * most-recently-allocated block in this file.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We use this for detecting linearly ascending allocation requests.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_alloc_logical_block\">last_alloc_logical_block</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Was i_next_alloc_goal in ext2_inode_info</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is the *physical* companion to i_next_alloc_block.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it the the physical block number of the block which was most-recentl</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocated to this file.  This give us the goal (target) for the next</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocation when we detect linearly ascending requests.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_alloc_physical_block\">last_alloc_physical_block</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rsv_start\">rsv_start</a> <a class=\"id\" href=\"#rsv_window\">rsv_window</a>.<a class=\"id\" href=\"#_rsv_start\">_rsv_start</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rsv_end\">rsv_end</a> <a class=\"id\" href=\"#rsv_window\">rsv_window</a>.<a class=\"id\" href=\"#_rsv_end\">_rsv_end</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * second extended-fs super-block data in memory</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_frag_size\">s_frag_size</a>;<span class=\"ts\"/><span class=\"comment\">/* Size of a fragment in bytes */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_frags_per_block\">s_frags_per_block</a>;<span class=\"comment\">/* Number of fragments per block */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a>;<span class=\"comment\">/* Number of inodes per block */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a>;<span class=\"comment\">/* Number of fragments in a group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>;<span class=\"comment\">/* Number of blocks in a group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>;<span class=\"comment\">/* Number of inodes in a group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of inode table blocks per group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of group descriptor blocks */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of group descriptors per block */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of groups in the fs */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a>;  <span class=\"comment\">/* Last calculated overhead */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_blocks_last\">s_blocks_last</a>;    <span class=\"comment\">/* Last seen block count */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#s_sbh\">s_sbh</a>;<span class=\"ts\"/><span class=\"comment\">/* Buffer containing the super block */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> * <a class=\"id\" href=\"#s_es\">s_es</a>;<span class=\"ts\"/><span class=\"comment\">/* Pointer to the super block in the buffer */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> ** <a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>;", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_sb_block\">s_sb_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#s_mount_state\">s_mount_state</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#s_pad\">s_pad</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_addr_per_block_bits\">s_addr_per_block_bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_desc_per_block_bits\">s_desc_per_block_bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_first_ino\">s_first_ino</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_next_gen_lock\">s_next_gen_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s_next_generation\">s_next_generation</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_dir_count\">s_dir_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#s_debts\">s_debts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a> *<a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* root of the per fs reservation window tree */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_rsv_window_lock\">s_rsv_window_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_root\">rb_root</a> <a class=\"id\" href=\"#s_rsv_window_root\">s_rsv_window_root</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_reserve_window_node\">ext2_reserve_window_node</a> <a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * s_lock protects against concurrent modifications of s_mount_state,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * s_blocks_last, s_overhead_last and the content of superblock's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * buffer pointed to by sbi-&gt;s_es.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: It is used in ext2_show_options() to provide a consistent view</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of the mount options.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_lock\">s_lock</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *", 
"<a class=\"id\" href=\"#sb_bgl_lock\">sb_bgl_lock</a>(struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, unsigned int <a class=\"id\" href=\"#block_group\">block_group</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bgl_lock_ptr\">bgl_lock_ptr</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _LINUX_EXT2_FS_SB */</span>", 
];
xr_frag_insert('l/c7/cc4959a7cb01730cd75a83f7351129fbcc4c47.xr', __xr_tmp);
