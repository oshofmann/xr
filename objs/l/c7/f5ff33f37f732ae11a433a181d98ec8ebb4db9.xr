var __xr_tmp = [
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_create_slot\">pci_create_slot</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_renumber_slot - update %struct pci_slot -&gt; number</span>", 
"<span class=\"comment\"> * @slot: &amp;struct pci_slot to update</span>", 
"<span class=\"comment\"> * @slot_nr: new number for slot</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The primary purpose of this interface is to allow callers who earlier</span>", 
"<span class=\"comment\"> * created a placeholder slot in pci_create_slot() by passing a -1 as</span>", 
"<span class=\"comment\"> * slot_nr, to update their %struct pci_slot with the correct @slot_nr.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_renumber_slot\">pci_renumber_slot</a>(struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>, int <a class=\"id\" href=\"#slot_nr\">slot_nr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#slots\">slots</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#number\">number</a> == <a class=\"id\" href=\"#slot_nr\">slot_nr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#number\">number</a> = <a class=\"id\" href=\"#slot_nr\">slot_nr</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_renumber_slot\">pci_renumber_slot</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_destroy_slot - decrement refcount for physical PCI slot</span>", 
"<span class=\"comment\"> * @slot: struct pci_slot to decrement</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * %struct pci_slot is refcounted, so destroying them is really easy; we</span>", 
"<span class=\"comment\"> * just call kobject_put on its kobj and let our release methods do the</span>", 
"<span class=\"comment\"> * rest.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_destroy_slot\">pci_destroy_slot</a>(struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"dev %02x, dec refcount to %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#kref\">kref</a>.<a class=\"id\" href=\"#refcount\">refcount</a>) - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_destroy_slot\">pci_destroy_slot</a>);", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_HOTPLUG_PCI\">CONFIG_HOTPLUG_PCI</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_HOTPLUG_PCI_MODULE\">CONFIG_HOTPLUG_PCI_MODULE</a>)", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci_hotplug\">pci_hotplug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_hp_create_link - create symbolic link to the hotplug driver module.</span>", 
"<span class=\"comment\"> * @pci_slot: struct pci_slot</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Helper function for pci_hotplug_core.c to create symbolic link to</span>", 
"<span class=\"comment\"> * the hotplug driver module.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_hp_create_module_link\">pci_hp_create_module_link</a>(struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#pci_slot\">pci_slot</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hotplug_slot\">hotplug_slot</a> *<a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#pci_slot\">pci_slot</a>-><a class=\"id\" href=\"#hotplug\">hotplug</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#no_warn\">no_warn</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#slot\">slot</a> || !<a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#kset_find_obj\">kset_find_obj</a>(<a class=\"id\" href=\"#module_kset\">module_kset</a>, <a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#mod_name\">mod_name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#no_warn\">no_warn</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#pci_slot\">pci_slot</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#kobj\">kobj</a>, \"module\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_hp_create_module_link\">pci_hp_create_module_link</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_hp_remove_link - remove symbolic link to the hotplug driver module.</span>", 
"<span class=\"comment\"> * @pci_slot: struct pci_slot</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Helper function for pci_hotplug_core.c to remove symbolic link to</span>", 
"<span class=\"comment\"> * the hotplug driver module.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_hp_remove_module_link\">pci_hp_remove_module_link</a>(struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#pci_slot\">pci_slot</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#pci_slot\">pci_slot</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"module\");", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_hp_remove_module_link\">pci_hp_remove_module_link</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#pci_slot_init\">pci_slot_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#pci_bus_kset\">pci_bus_kset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_kset\">pci_bus_kset</a> = <a class=\"id\" href=\"#bus_get_kset\">bus_get_kset</a>(&amp;<a class=\"id\" href=\"#pci_bus_type\">pci_bus_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_slots_kset\">pci_slots_kset</a> = <a class=\"id\" href=\"#kset_create_and_add\">kset_create_and_add</a>(\"slots\", <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#pci_bus_kset\">pci_bus_kset</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_slots_kset\">pci_slots_kset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PCI: Slot initialization failure\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#pci_slot_init\">pci_slot_init</a>);", 
];
xr_frag_insert('l/c7/f5ff33f37f732ae11a433a181d98ec8ebb4db9.xr', __xr_tmp);
