var __xr_tmp = [
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#IW_EVENT_IDX\">IW_EVENT_IDX</a>(<a class=\"id\" href=\"#IWEVMICHAELMICFAILURE\">IWEVMICHAELMICFAILURE</a>)] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#header_type\">header_type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IW_HEADER_TYPE_POINT\">IW_HEADER_TYPE_POINT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#token_size\">token_size</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#max_tokens\">max_tokens</a><span class=\"ts\"/>= sizeof(struct <a class=\"id\" href=\"#iw_michaelmicfailure\">iw_michaelmicfailure</a>),", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#IW_EVENT_IDX\">IW_EVENT_IDX</a>(<a class=\"id\" href=\"#IWEVASSOCREQIE\">IWEVASSOCREQIE</a>)] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#header_type\">header_type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IW_HEADER_TYPE_POINT\">IW_HEADER_TYPE_POINT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#token_size\">token_size</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#max_tokens\">max_tokens</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IW_GENERIC_IE_MAX\">IW_GENERIC_IE_MAX</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#IW_EVENT_IDX\">IW_EVENT_IDX</a>(<a class=\"id\" href=\"#IWEVASSOCRESPIE\">IWEVASSOCRESPIE</a>)] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#header_type\">header_type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IW_HEADER_TYPE_POINT\">IW_HEADER_TYPE_POINT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#token_size\">token_size</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#max_tokens\">max_tokens</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IW_GENERIC_IE_MAX\">IW_GENERIC_IE_MAX</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#IW_EVENT_IDX\">IW_EVENT_IDX</a>(<a class=\"id\" href=\"#IWEVPMKIDCAND\">IWEVPMKIDCAND</a>)] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#header_type\">header_type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IW_HEADER_TYPE_POINT\">IW_HEADER_TYPE_POINT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#token_size\">token_size</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#max_tokens\">max_tokens</a><span class=\"ts\"/>= sizeof(struct <a class=\"id\" href=\"#iw_pmkid_cand\">iw_pmkid_cand</a>),", 
"<span class=\"ts\"/>},", 
"};", 
"static const unsigned <a class=\"id\" href=\"#standard_event_num\">standard_event_num</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#standard_event\">standard_event</a>);", 
"", 
"<span class=\"comment\">/* Size (in bytes) of various events */</span>", 
"static const int <a class=\"id\" href=\"#event_type_size\">event_type_size</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_NULL */</span>", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_CHAR_LEN\">IW_EV_CHAR_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_CHAR */</span>", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_UINT_LEN\">IW_EV_UINT_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_UINT */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_FREQ_LEN\">IW_EV_FREQ_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_FREQ */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_ADDR_LEN\">IW_EV_ADDR_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_ADDR */</span>", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_POINT_LEN\">IW_EV_POINT_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Without variable payload */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_PARAM_LEN\">IW_EV_PARAM_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_PARAM */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_QUAL_LEN\">IW_EV_QUAL_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_QUAL */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static const int <a class=\"id\" href=\"#compat_event_type_size\">compat_event_type_size</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_NULL */</span>", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_COMPAT_CHAR_LEN\">IW_EV_COMPAT_CHAR_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_CHAR */</span>", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_COMPAT_UINT_LEN\">IW_EV_COMPAT_UINT_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_UINT */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_COMPAT_FREQ_LEN\">IW_EV_COMPAT_FREQ_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_FREQ */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_COMPAT_ADDR_LEN\">IW_EV_COMPAT_ADDR_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_ADDR */</span>", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_COMPAT_POINT_LEN\">IW_EV_COMPAT_POINT_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Without variable payload */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_COMPAT_PARAM_LEN\">IW_EV_COMPAT_PARAM_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_PARAM */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IW_EV_COMPAT_QUAL_LEN\">IW_EV_COMPAT_QUAL_LEN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IW_HEADER_TYPE_QUAL */</span>", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<span class=\"comment\">/* IW event code */</span>", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#wext_pernet_init\">wext_pernet_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_head_init\">skb_queue_head_init</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#wext_nlevents\">wext_nlevents</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#wext_pernet_exit\">wext_pernet_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_purge\">skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#wext_nlevents\">wext_nlevents</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#wext_pernet_ops\">wext_pernet_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#wext_pernet_init\">wext_pernet_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#wext_pernet_exit\">wext_pernet_exit</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#wireless_nlevent_init\">wireless_nlevent_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#wext_pernet_ops\">wext_pernet_ops</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#wireless_nlevent_init\">wireless_nlevent_init</a>);", 
"", 
"<span class=\"comment\">/* Process events generated by the wireless layer or the driver. */</span>", 
"static void <a class=\"id\" href=\"#wireless_nlevent_process\">wireless_nlevent_process</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_net\">for_each_net</a>(<a class=\"id\" href=\"#net\">net</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_dequeue\">skb_dequeue</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#wext_nlevents\">wext_nlevents</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_notify\">rtnl_notify</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#net\">net</a>, 0, <a class=\"id\" href=\"#RTNLGRP_LINK\">RTNLGRP_LINK</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#DECLARE_WORK\">DECLARE_WORK</a>(<a class=\"id\" href=\"#wireless_nlevent_work\">wireless_nlevent_work</a>, <a class=\"id\" href=\"#wireless_nlevent_process\">wireless_nlevent_process</a>);", 
"", 
"static struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#rtnetlink_ifinfo_prep\">rtnetlink_ifinfo_prep</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifinfomsg\">ifinfomsg</a> *<a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a>  *<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = <a class=\"id\" href=\"#nlmsg_put\">nlmsg_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, 0, <a class=\"id\" href=\"#RTM_NEWLINK\">RTM_NEWLINK</a>, sizeof(*<a class=\"id\" href=\"#r\">r</a>), 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#ifi_family\">ifi_family</a> = <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#__ifi_pad\">__ifi_pad</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#ifi_type\">ifi_type</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#ifi_index\">ifi_index</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#ifi_flags\">ifi_flags</a> = <a class=\"id\" href=\"#dev_get_flags\">dev_get_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#ifi_change\">ifi_change</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* Wireless changes don't affect those flags */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_STRING\">NLA_PUT_STRING</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFLA_IFNAME\">IFLA_IFNAME</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlh\">nlh</a>;", 
" <a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_cancel\">nlmsg_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Main event dispatcher. Called from other parts and drivers.</span>", 
"<span class=\"comment\"> * Send the event on the appropriate channels.</span>", 
"<span class=\"comment\"> * May be called from interrupt context.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#wireless_send_event\">wireless_send_event</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> union <a class=\"id\" href=\"#iwreq_data\">iwreq_data</a> *<span class=\"ts\"/><a class=\"id\" href=\"#wrqu\">wrqu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra\">extra</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iw_ioctl_description\">iw_ioctl_description</a> *<span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#extra_len\">extra_len</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_event\">iw_event</a>  *<a class=\"id\" href=\"#event\">event</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Mallocated whole event */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#event_len\">event_len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Its size */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hdr_len\">hdr_len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Size of the event header */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#wrqu_off\">wrqu_off</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Offset in wrqu */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't \"optimise\" the following variable, it will crash */</span>", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#cmd_index\">cmd_index</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* *MUST* be unsigned */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#__compat_iw_event\">__compat_iw_event</a> *<a class=\"id\" href=\"#compat_event\">compat_event</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_iw_point\">compat_iw_point</a> <a class=\"id\" href=\"#compat_wrqu\">compat_wrqu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#compskb\">compskb</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Nothing in the kernel sends scan events with data, be safe.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is necessary because we cannot fix up scan event data</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for compat, due to being contained in 'extra', but normally</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * applications are required to retrieve the scan data anyway</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and no data is included in the event, this codifies that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * practice.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGIWSCAN\">SIOCGIWSCAN</a> && <a class=\"id\" href=\"#extra\">extra</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra\">extra</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the description of the Event */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> <= <a class=\"id\" href=\"#SIOCIWLAST\">SIOCIWLAST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd_index\">cmd_index</a> = <a class=\"id\" href=\"#IW_IOCTL_IDX\">IW_IOCTL_IDX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd_index\">cmd_index</a> &lt; <a class=\"id\" href=\"#standard_ioctl_num\">standard_ioctl_num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a> = &amp;(<a class=\"id\" href=\"#standard_ioctl\">standard_ioctl</a>[<a class=\"id\" href=\"#cmd_index\">cmd_index</a>]);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd_index\">cmd_index</a> = <a class=\"id\" href=\"#IW_EVENT_IDX\">IW_EVENT_IDX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd_index\">cmd_index</a> &lt; <a class=\"id\" href=\"#standard_event_num\">standard_event_num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a> = &amp;(<a class=\"id\" href=\"#standard_event\">standard_event</a>[<a class=\"id\" href=\"#cmd_index\">cmd_index</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't accept unknown events */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#descr\">descr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note : we don't return an error to the driver, because</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the driver would not know what to do about it. It can't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * return an error to the user, because the event is not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * initiated by a user request.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The best the driver could do is to log an error message.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We will do it ourselves instead...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s (WE) : Invalid/Unknown Wireless Event (0x%04X)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check extra parameters and set extra_len */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#header_type\">header_type</a> == <a class=\"id\" href=\"#IW_HEADER_TYPE_POINT\">IW_HEADER_TYPE_POINT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if number of token fits within bounds */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wrqu\">wrqu</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#max_tokens\">max_tokens</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s (WE) : Wireless Event too big (%d)\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#wrqu\">wrqu</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wrqu\">wrqu</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#length\">length</a> &lt; <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#min_tokens\">min_tokens</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s (WE) : Wireless Event too small (%d)\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#wrqu\">wrqu</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Calculate extra_len - extra is NULL for restricted events */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#extra\">extra</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra_len\">extra_len</a> = <a class=\"id\" href=\"#wrqu\">wrqu</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#length\">length</a> * <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#token_size\">token_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Always at an offset in wrqu */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrqu_off\">wrqu_off</a> = <a class=\"id\" href=\"#IW_EV_POINT_OFF\">IW_EV_POINT_OFF</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Total length of the event */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr_len\">hdr_len</a> = <a class=\"id\" href=\"#event_type_size\">event_type_size</a>[<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#header_type\">header_type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event_len\">event_len</a> = <a class=\"id\" href=\"#hdr_len\">hdr_len</a> + <a class=\"id\" href=\"#extra_len\">extra_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The problem for 64/32 bit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On 64-bit, a regular event is laid out as follows:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      | event.len | event.cmd |     p a d d i n g     |</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      | wrqu data ... (with the correct size)         |</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This padding exists because we manipulate event-&gt;u,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and 'event' is not packed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * An iw_point event is laid out like this instead:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      | event.len | event.cmd |     p a d d i n g     |</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      | iwpnt.len | iwpnt.flg |     p a d d i n g     |</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      | extra data  ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The second padding exists because struct iw_point is extended,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but this depends on the platform...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On 32-bit, all the padding shouldn't be there.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#nlmsg_new\">nlmsg_new</a>(<a class=\"id\" href=\"#NLMSG_DEFAULT_SIZE\">NLMSG_DEFAULT_SIZE</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Send via the RtNetlink event channel */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = <a class=\"id\" href=\"#rtnetlink_ifinfo_prep\">rtnetlink_ifinfo_prep</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#nlh\">nlh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the wireless events in the netlink packet */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla\">nla</a> = <a class=\"id\" href=\"#nla_reserve\">nla_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFLA_WIRELESS\">IFLA_WIRELESS</a>, <a class=\"id\" href=\"#event_len\">event_len</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nla\">nla</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fill event - first clear to avoid data leaking */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#event\">event</a>, 0, <a class=\"id\" href=\"#hdr_len\">hdr_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#event_len\">event_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#u\">u</a>, ((char *) <a class=\"id\" href=\"#wrqu\">wrqu</a>) + <a class=\"id\" href=\"#wrqu_off\">wrqu_off</a>, <a class=\"id\" href=\"#hdr_len\">hdr_len</a> - <a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#extra_len\">extra_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(((char *) <a class=\"id\" href=\"#event\">event</a>) + <a class=\"id\" href=\"#hdr_len\">hdr_len</a>, <a class=\"id\" href=\"#extra\">extra</a>, <a class=\"id\" href=\"#extra_len\">extra_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_end\">nlmsg_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr_len\">hdr_len</a> = <a class=\"id\" href=\"#compat_event_type_size\">compat_event_type_size</a>[<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#header_type\">header_type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event_len\">event_len</a> = <a class=\"id\" href=\"#hdr_len\">hdr_len</a> + <a class=\"id\" href=\"#extra_len\">extra_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compskb\">compskb</a> = <a class=\"id\" href=\"#nlmsg_new\">nlmsg_new</a>(<a class=\"id\" href=\"#NLMSG_DEFAULT_SIZE\">NLMSG_DEFAULT_SIZE</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#compskb\">compskb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Send via the RtNetlink event channel */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = <a class=\"id\" href=\"#rtnetlink_ifinfo_prep\">rtnetlink_ifinfo_prep</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#compskb\">compskb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#nlh\">nlh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#compskb\">compskb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the wireless events in the netlink packet */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla\">nla</a> = <a class=\"id\" href=\"#nla_reserve\">nla_reserve</a>(<a class=\"id\" href=\"#compskb\">compskb</a>, <a class=\"id\" href=\"#IFLA_WIRELESS\">IFLA_WIRELESS</a>, <a class=\"id\" href=\"#event_len\">event_len</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nla\">nla</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#compskb\">compskb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_event\">compat_event</a> = <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_event\">compat_event</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#event_len\">event_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_event\">compat_event</a>-><a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#header_type\">header_type</a> == <a class=\"id\" href=\"#IW_HEADER_TYPE_POINT\">IW_HEADER_TYPE_POINT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_wrqu\">compat_wrqu</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#wrqu\">wrqu</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_wrqu\">compat_wrqu</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#wrqu\">wrqu</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#compat_event\">compat_event</a>-><a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((char *) &amp;<a class=\"id\" href=\"#compat_wrqu\">compat_wrqu</a>) + <a class=\"id\" href=\"#IW_EV_COMPAT_POINT_OFF\">IW_EV_COMPAT_POINT_OFF</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr_len\">hdr_len</a> - <a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#extra_len\">extra_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(((char *) <a class=\"id\" href=\"#compat_event\">compat_event</a>) + <a class=\"id\" href=\"#hdr_len\">hdr_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra\">extra</a>, <a class=\"id\" href=\"#extra_len\">extra_len</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* extra_len must be zero, so no if (extra) needed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#compat_event\">compat_event</a>-><a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#wrqu\">wrqu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr_len\">hdr_len</a> - <a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_end\">nlmsg_end</a>(<a class=\"id\" href=\"#compskb\">compskb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frag_list\">frag_list</a> = <a class=\"id\" href=\"#compskb\">compskb</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_tail\">skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#wext_nlevents\">wext_nlevents</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#wireless_nlevent_work\">wireless_nlevent_work</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#wireless_send_event\">wireless_send_event</a>);", 
"", 
"", 
"", 
"<span class=\"comment\">/* IW handlers */</span>", 
"", 
"struct <a class=\"id\" href=\"#iw_statistics\">iw_statistics</a> *<a class=\"id\" href=\"#get_wireless_stats\">get_wireless_stats</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_WIRELESS_EXT\">CONFIG_WIRELESS_EXT</a>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wireless_handlers\">wireless_handlers</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) &&", 
"<span class=\"ts\"/>   (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wireless_handlers\">wireless_handlers</a>-><a class=\"id\" href=\"#get_wireless_stats\">get_wireless_stats</a> != <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wireless_handlers\">wireless_handlers</a>-><a class=\"id\" href=\"#get_wireless_stats\">get_wireless_stats</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CFG80211_WEXT\">CONFIG_CFG80211_WEXT</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ieee80211_ptr\">ieee80211_ptr</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ieee80211_ptr\">ieee80211_ptr</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ieee80211_ptr\">ieee80211_ptr</a>-><a class=\"id\" href=\"#wiphy\">wiphy</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ieee80211_ptr\">ieee80211_ptr</a>-><a class=\"id\" href=\"#wiphy\">wiphy</a>-><a class=\"id\" href=\"#wext\">wext</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ieee80211_ptr\">ieee80211_ptr</a>-><a class=\"id\" href=\"#wiphy\">wiphy</a>-><a class=\"id\" href=\"#wext\">wext</a>-><a class=\"id\" href=\"#get_wireless_stats\">get_wireless_stats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ieee80211_ptr\">ieee80211_ptr</a>-><a class=\"id\" href=\"#wiphy\">wiphy</a>-><a class=\"id\" href=\"#wext\">wext</a>-><a class=\"id\" href=\"#get_wireless_stats\">get_wireless_stats</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* not found */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#iw_handler_get_iwstats\">iw_handler_get_iwstats</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#iw_request_info\">iw_request_info</a> *<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  union <a class=\"id\" href=\"#iwreq_data\">iwreq_data</a> *<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrqu\">wrqu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra\">extra</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Get stats from the driver */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_statistics\">iw_statistics</a> *<a class=\"id\" href=\"#stats\">stats</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#get_wireless_stats\">get_wireless_stats</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#stats\">stats</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Copy statistics to extra */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#extra\">extra</a>, <a class=\"id\" href=\"#stats\">stats</a>, sizeof(struct <a class=\"id\" href=\"#iw_statistics\">iw_statistics</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrqu\">wrqu</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#length\">length</a> = sizeof(struct <a class=\"id\" href=\"#iw_statistics\">iw_statistics</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if we need to clear the updated flag */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wrqu\">wrqu</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#flags\">flags</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#qual\">qual</a>.<a class=\"id\" href=\"#updated\">updated</a> &= ~<a class=\"id\" href=\"#IW_QUAL_ALL_UPDATED\">IW_QUAL_ALL_UPDATED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#iw_handler\">iw_handler</a> <a class=\"id\" href=\"#get_handler\">get_handler</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't \"optimise\" the following variable, it will crash */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* *MUST* be unsigned */</span>", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iw_handler_def\">iw_handler_def</a> *<a class=\"id\" href=\"#handlers\">handlers</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CFG80211_WEXT\">CONFIG_CFG80211_WEXT</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ieee80211_ptr\">ieee80211_ptr</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ieee80211_ptr\">ieee80211_ptr</a>-><a class=\"id\" href=\"#wiphy\">wiphy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handlers\">handlers</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ieee80211_ptr\">ieee80211_ptr</a>-><a class=\"id\" href=\"#wiphy\">wiphy</a>-><a class=\"id\" href=\"#wext\">wext</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_WIRELESS_EXT\">CONFIG_WIRELESS_EXT</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wireless_handlers\">wireless_handlers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handlers\">handlers</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wireless_handlers\">wireless_handlers</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handlers\">handlers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try as a standard command */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#IW_IOCTL_IDX\">IW_IOCTL_IDX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#handlers\">handlers</a>-><a class=\"id\" href=\"#num_standard\">num_standard</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#handlers\">handlers</a>-><a class=\"id\" href=\"#standard\">standard</a>[<a class=\"id\" href=\"#index\">index</a>];", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_WEXT_PRIV\">CONFIG_WEXT_PRIV</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Try as a private command */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#cmd\">cmd</a> - <a class=\"id\" href=\"#SIOCIWFIRSTPRIV\">SIOCIWFIRSTPRIV</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#handlers\">handlers</a>-><a class=\"id\" href=\"#num_private\">num_private</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#handlers\">handlers</a>-><a class=\"id\" href=\"#private\">private</a>[<a class=\"id\" href=\"#index\">index</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Not found */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ioctl_standard_iw_point\">ioctl_standard_iw_point</a>(struct <a class=\"id\" href=\"#iw_point\">iw_point</a> *<a class=\"id\" href=\"#iwp\">iwp</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#iw_ioctl_description\">iw_ioctl_description</a> *<a class=\"id\" href=\"#descr\">descr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#iw_handler\">iw_handler</a> <a class=\"id\" href=\"#handler\">handler</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#iw_request_info\">iw_request_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#extra_size\">extra_size</a>, <a class=\"id\" href=\"#user_length\">user_length</a> = 0, <a class=\"id\" href=\"#essid_compat\">essid_compat</a> = 0;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#extra\">extra</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate space needed by arguments. Always allocate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for max space.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#extra_size\">extra_size</a> = <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#max_tokens\">max_tokens</a> * <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#token_size\">token_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check need for ESSID compatibility for WE &lt; 21 */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIWESSID\">SIOCSIWESSID</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIWESSID\">SIOCGIWESSID</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIWNICKN\">SIOCSIWNICKN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIWNICKN\">SIOCGIWNICKN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> == <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#max_tokens\">max_tokens</a> + 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#essid_compat\">essid_compat</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#IW_IS_SET\">IW_IS_SET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) && (<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> != 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#essid\">essid</a>[<a class=\"id\" href=\"#IW_ESSID_MAX_SIZE\">IW_ESSID_MAX_SIZE</a> + 1];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> * <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#token_size\">token_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#IW_ESSID_MAX_SIZE\">IW_ESSID_MAX_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#essid\">essid</a>, <a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#essid\">essid</a>[<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> - 1] == '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#essid_compat\">essid_compat</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> -= <a class=\"id\" href=\"#essid_compat\">essid_compat</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check what user space is giving us */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IW_IS_SET\">IW_IS_SET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check NULL pointer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#pointer\">pointer</a> && <a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if number of token fits within bounds */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#max_tokens\">max_tokens</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#E2BIG\">E2BIG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> &lt; <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#min_tokens\">min_tokens</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check NULL pointer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#pointer\">pointer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Save user space buffer size for checking */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user_length\">user_length</a> = <a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't check if user_length &gt; max to allow forward</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * compatibility. The test user_length &lt; min is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * implied by the test at the end.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Support for very large requests */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IW_DESCR_FLAG_NOMAX\">IW_DESCR_FLAG_NOMAX</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#user_length\">user_length</a> &gt; <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#max_tokens\">max_tokens</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Allow userspace to GET more than max so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we can support any size GET requests.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * There is still a limit : -ENOMEM.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra_size\">extra_size</a> = <a class=\"id\" href=\"#user_length\">user_length</a> * <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#token_size\">token_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note : user_length is originally a __u16,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and token_size is controlled by us,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * so extra_size won't get negative and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * won't overflow...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* kzalloc() ensures NULL-termination for essid_compat. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#extra\">extra</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#extra_size\">extra_size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#extra\">extra</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If it is a SET, get all the extra data in here */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IW_IS_SET\">IW_IS_SET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) && (<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> != 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#extra\">extra</a>, <a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#token_size\">token_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCSIWENCODEEXT\">SIOCSIWENCODEEXT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_encode_ext\">iw_encode_ext</a> *<a class=\"id\" href=\"#ee\">ee</a> = (void *) <a class=\"id\" href=\"#extra\">extra</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> &lt; sizeof(*<a class=\"id\" href=\"#ee\">ee</a>) + <a class=\"id\" href=\"#ee\">ee</a>-><a class=\"id\" href=\"#key_len\">key_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IW_IS_GET\">IW_IS_GET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) && !(<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IW_DESCR_FLAG_NOMAX\">IW_DESCR_FLAG_NOMAX</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If this is a GET, but not NOMAX, it means that the extra</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * data is not bounded by userspace, but by max_tokens. Thus</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * set the length to max_tokens. This matches the extra data</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * allocation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The driver should fill it with the number of tokens it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * provided, and it may check iwp-&gt;length rather than having</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * knowledge of max_tokens. If the driver doesn't change the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * iwp-&gt;length, this ioctl just copies back max_token tokens</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * filled with zeroes. Hopefully the driver isn't claiming</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * them to be valid data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#max_tokens\">max_tokens</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#handler\">handler</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#info\">info</a>, (union <a class=\"id\" href=\"#iwreq_data\">iwreq_data</a> *) <a class=\"id\" href=\"#iwp\">iwp</a>, <a class=\"id\" href=\"#extra\">extra</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#essid_compat\">essid_compat</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we have something to return to the user */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#IW_IS_GET\">IW_IS_GET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if there is enough buffer up there */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#user_length\">user_length</a> &lt; <a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#E2BIG\">E2BIG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#extra\">extra</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#iwp\">iwp</a>-><a class=\"id\" href=\"#length\">length</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#token_size\">token_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Generate an event to notify listeners of the change */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IW_DESCR_FLAG_EVENT\">IW_DESCR_FLAG_EVENT</a>) &&", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#err\">err</a> == 0) || (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EIWCOMMIT\">EIWCOMMIT</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#iwreq_data\">iwreq_data</a> *<a class=\"id\" href=\"#data\">data</a> = (union <a class=\"id\" href=\"#iwreq_data\">iwreq_data</a> *) <a class=\"id\" href=\"#iwp\">iwp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IW_DESCR_FLAG_RESTRICT\">IW_DESCR_FLAG_RESTRICT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the event is restricted, don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * export the payload.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wireless_send_event\">wireless_send_event</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wireless_send_event\">wireless_send_event</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#extra\">extra</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#extra\">extra</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Call the commit handler in the driver</span>", 
"<span class=\"comment\"> * (if exist and if conditions are right)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note : our current commit strategy is currently pretty dumb,</span>", 
"<span class=\"comment\"> * but we will be able to improve on that...</span>", 
"<span class=\"comment\"> * The goal is to try to agreagate as many changes as possible</span>", 
"<span class=\"comment\"> * before doing the commit. Drivers that will define a commit handler</span>", 
"<span class=\"comment\"> * are usually those that need a reset after changing parameters, so</span>", 
"<span class=\"comment\"> * we want to minimise the number of reset.</span>", 
"<span class=\"comment\"> * A cool idea is to use a timer : at each \"set\" command, we re-set the</span>", 
"<span class=\"comment\"> * timer, when the timer eventually fires, we call the driver.</span>", 
"<span class=\"comment\"> * Hopefully, more on that later.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Also, I'm waiting to see how many people will complain about the</span>", 
"<span class=\"comment\"> * netif_running(dev) test. I'm open on that one...</span>", 
"<span class=\"comment\"> * Hopefully, the driver will remember to do a commit in \"open()\" ;-)</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#call_commit_handler\">call_commit_handler</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_WIRELESS_EXT\">CONFIG_WIRELESS_EXT</a>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#netif_running\">netif_running</a>(<a class=\"id\" href=\"#dev\">dev</a>)) &&", 
"<span class=\"ts\"/>   (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wireless_handlers\">wireless_handlers</a>-><a class=\"id\" href=\"#standard\">standard</a>[0] != <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Call the commit handler on the driver */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wireless_handlers\">wireless_handlers</a>-><a class=\"id\" href=\"#standard\">standard</a>[0](<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Command completed successfully */</span>", 
"#else", 
"<span class=\"ts\"/><span class=\"comment\">/* cfg80211 has no commit */</span>", 
"<span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Main IOCTl dispatcher.</span>", 
"<span class=\"comment\"> * Check the type of IOCTL and call the appropriate wrapper...</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#wireless_process_ioctl\">wireless_process_ioctl</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#ifreq\">ifreq</a> *<a class=\"id\" href=\"#ifr\">ifr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#iw_request_info\">iw_request_info</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#wext_ioctl_func\">wext_ioctl_func</a> <a class=\"id\" href=\"#standard\">standard</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#wext_ioctl_func\">wext_ioctl_func</a> <a class=\"id\" href=\"#private\">private</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iwreq\">iwreq</a> *<a class=\"id\" href=\"#iwr\">iwr</a> = (struct <a class=\"id\" href=\"#iwreq\">iwreq</a> *) <a class=\"id\" href=\"#ifr\">ifr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iw_handler\">iw_handler</a><span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Permissions are already checked in dev_ioctl() before calling us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The copy_to/from_user() of ifr is also dealt with in there */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure the device exist */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_name\">__dev_get_by_name</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_name\">ifr_name</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* A bunch of special cases, then the generic case...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that 'cmd' is already filtered in dev_ioctl() with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (cmd &gt;= SIOCIWFIRST &amp;&amp; cmd &lt;= SIOCIWLAST) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGIWSTATS\">SIOCGIWSTATS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#standard\">standard</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#iwr\">iwr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#iw_handler_get_iwstats\">iw_handler_get_iwstats</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_WEXT_PRIV\">CONFIG_WEXT_PRIV</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGIWPRIV\">SIOCGIWPRIV</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wireless_handlers\">wireless_handlers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#standard\">standard</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#iwr\">iwr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iw_handler_get_private\">iw_handler_get_private</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Basic check */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_device_present\">netif_device_present</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* New driver API : try to find the handler */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#get_handler\">get_handler</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handler\">handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Standard and private are not the same */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> &lt; <a class=\"id\" href=\"#SIOCIWFIRSTPRIV\">SIOCIWFIRSTPRIV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#standard\">standard</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#iwr\">iwr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#handler\">handler</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#private\">private</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#private\">private</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#iwr\">iwr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#handler\">handler</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Old driver API : call driver ioctl handler */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"}", 
"", 
"<span class=\"comment\">/* If command is `set a parameter', or `get the encoding parameters',</span>", 
"<span class=\"comment\"> * check if the user has the right to do it.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#wext_permission_check\">wext_permission_check</a>(unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#IW_IS_SET\">IW_IS_SET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) || <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGIWENCODE\">SIOCGIWENCODE</a> ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGIWENCODEEXT\">SIOCGIWENCODEEXT</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* entry point from dev ioctl */</span>", 
"static int <a class=\"id\" href=\"#wext_ioctl_dispatch\">wext_ioctl_dispatch</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#ifreq\">ifreq</a> *<a class=\"id\" href=\"#ifr\">ifr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, struct <a class=\"id\" href=\"#iw_request_info\">iw_request_info</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#wext_ioctl_func\">wext_ioctl_func</a> <a class=\"id\" href=\"#standard\">standard</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#wext_ioctl_func\">wext_ioctl_func</a> <a class=\"id\" href=\"#private\">private</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wext_permission_check\">wext_permission_check</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_load\">dev_load</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_name\">ifr_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wireless_process_ioctl\">wireless_process_ioctl</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#standard\">standard</a>, <a class=\"id\" href=\"#private\">private</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wrapper to call a standard Wireless Extension handler.</span>", 
"<span class=\"comment\"> * We do various checks and also take care of moving data between</span>", 
"<span class=\"comment\"> * user space and kernel space.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ioctl_standard_call\">ioctl_standard_call</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#iwreq\">iwreq</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#iwr\">iwr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#iw_request_info\">iw_request_info</a><span class=\"ts\"/>*<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#iw_handler\">iw_handler</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iw_ioctl_description\">iw_ioctl_description</a> *<span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the description of the IOCTL */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IW_IOCTL_IDX\">IW_IOCTL_IDX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) >= <a class=\"id\" href=\"#standard_ioctl_num\">standard_ioctl_num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a> = &amp;(<a class=\"id\" href=\"#standard_ioctl\">standard_ioctl</a>[<a class=\"id\" href=\"#IW_IOCTL_IDX\">IW_IOCTL_IDX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)]);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if we have a pointer to user space data or not */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#header_type\">header_type</a> != <a class=\"id\" href=\"#IW_HEADER_TYPE_POINT\">IW_HEADER_TYPE_POINT</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No extra arguments. Trivial to handle */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#handler\">handler</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#info\">info</a>, &amp;(<a class=\"id\" href=\"#iwr\">iwr</a>-><a class=\"id\" href=\"#u\">u</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Generate an event to notify listeners of the change */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IW_DESCR_FLAG_EVENT\">IW_DESCR_FLAG_EVENT</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>   ((<a class=\"id\" href=\"#ret\">ret</a> == 0) || (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EIWCOMMIT\">EIWCOMMIT</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wireless_send_event\">wireless_send_event</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, &amp;(<a class=\"id\" href=\"#iwr\">iwr</a>-><a class=\"id\" href=\"#u\">u</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ioctl_standard_iw_point\">ioctl_standard_iw_point</a>(&amp;<a class=\"id\" href=\"#iwr\">iwr</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#descr\">descr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Call commit handler if needed and defined */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EIWCOMMIT\">EIWCOMMIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#call_commit_handler\">call_commit_handler</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Here, we will generate the appropriate event if needed */</span>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#wext_handle_ioctl\">wext_handle_ioctl</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#ifreq\">ifreq</a> *<a class=\"id\" href=\"#ifr\">ifr</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_request_info\">iw_request_info</a> <a class=\"id\" href=\"#info\">info</a> = { .<a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#cmd\">cmd</a>, .<a class=\"id\" href=\"#flags\">flags</a> = 0 };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wext_ioctl_dispatch\">wext_ioctl_dispatch</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, &amp;<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ioctl_standard_call\">ioctl_standard_call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ioctl_private_call\">ioctl_private_call</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#IW_IS_GET\">IW_IS_GET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#ifr\">ifr</a>, sizeof(struct <a class=\"id\" href=\"#iwreq\">iwreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static int <a class=\"id\" href=\"#compat_standard_call\">compat_standard_call</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a><span class=\"ts\"/>*<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iwreq\">iwreq</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#iwr\">iwr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_request_info\">iw_request_info</a><span class=\"ts\"/>*<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iw_handler\">iw_handler</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iw_ioctl_description\">iw_ioctl_description</a> *<a class=\"id\" href=\"#descr\">descr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_iw_point\">compat_iw_point</a> *<a class=\"id\" href=\"#iwp_compat\">iwp_compat</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_point\">iw_point</a> <a class=\"id\" href=\"#iwp\">iwp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a> = <a class=\"id\" href=\"#standard_ioctl\">standard_ioctl</a> + <a class=\"id\" href=\"#IW_IOCTL_IDX\">IW_IOCTL_IDX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#descr\">descr</a>-><a class=\"id\" href=\"#header_type\">header_type</a> != <a class=\"id\" href=\"#IW_HEADER_TYPE_POINT\">IW_HEADER_TYPE_POINT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ioctl_standard_call\">ioctl_standard_call</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#iwr\">iwr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#handler\">handler</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwp_compat\">iwp_compat</a> = (struct <a class=\"id\" href=\"#compat_iw_point\">compat_iw_point</a> *) &amp;<a class=\"id\" href=\"#iwr\">iwr</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwp\">iwp</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#iwp_compat\">iwp_compat</a>-><a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwp\">iwp</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#iwp_compat\">iwp_compat</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwp\">iwp</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#iwp_compat\">iwp_compat</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ioctl_standard_iw_point\">ioctl_standard_iw_point</a>(&amp;<a class=\"id\" href=\"#iwp\">iwp</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#descr\">descr</a>, <a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwp_compat\">iwp_compat</a>-><a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#ptr_to_compat\">ptr_to_compat</a>(<a class=\"id\" href=\"#iwp\">iwp</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwp_compat\">iwp_compat</a>-><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#iwp\">iwp</a>.<a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwp_compat\">iwp_compat</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#iwp\">iwp</a>.<a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#compat_wext_handle_ioctl\">compat_wext_handle_ioctl</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#argp\">argp</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_request_info\">iw_request_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iwreq\">iwreq</a> <a class=\"id\" href=\"#iwr\">iwr</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#colon\">colon</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#iwr\">iwr</a>, <a class=\"id\" href=\"#argp\">argp</a>, sizeof(struct <a class=\"id\" href=\"#iwreq\">iwreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iwr\">iwr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>-1] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#colon\">colon</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#iwr\">iwr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>, ':');", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#colon\">colon</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#colon\">colon</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IW_REQUEST_FLAG_COMPAT\">IW_REQUEST_FLAG_COMPAT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wext_ioctl_dispatch\">wext_ioctl_dispatch</a>(<a class=\"id\" href=\"#net\">net</a>, (struct <a class=\"id\" href=\"#ifreq\">ifreq</a> *) &amp;<a class=\"id\" href=\"#iwr\">iwr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, &amp;<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#compat_standard_call\">compat_standard_call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#compat_private_call\">compat_private_call</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#IW_IS_GET\">IW_IS_GET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#argp\">argp</a>, &amp;<a class=\"id\" href=\"#iwr\">iwr</a>, sizeof(struct <a class=\"id\" href=\"#iwreq\">iwreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/c9/0a322aa8a1e5ddced009ffcef83510bdf71a09.xr', __xr_tmp);
