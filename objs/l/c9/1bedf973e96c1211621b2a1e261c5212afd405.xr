var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (2004) Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Zwane Mwaikambo &lt;zwane@fsmlabs.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (2004, 2005) Ingo Molnar</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file contains the spinlock/rwlock implementations for the</span>", 
"<span class=\"comment\"> * SMP and the DEBUG_SPINLOCK cases. (UP-nondebug inlines them)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that some architectures have special knowledge about the</span>", 
"<span class=\"comment\"> * stack frames of these functions in their profile_pc. If you</span>", 
"<span class=\"comment\"> * change anything significant here that could change the stack</span>", 
"<span class=\"comment\"> * frame contact the architecture maintainers.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#linkage\">linkage</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#preempt\">preempt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debug_locks\">debug_locks</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If lockdep is enabled then we use the non-preemption spin-ops</span>", 
"<span class=\"comment\"> * even on CONFIG_PREEMPT, because lockdep assumes that interrupts are</span>", 
"<span class=\"comment\"> * not re-enabled during lock-acquire (which the preempt-spin-ops do):</span>", 
"<span class=\"comment\"> */</span>", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_GENERIC_LOCKBREAK\">CONFIG_GENERIC_LOCKBREAK</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_DEBUG_LOCK_ALLOC\">CONFIG_DEBUG_LOCK_ALLOC</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The __lock_function inlines are taken from</span>", 
"<span class=\"comment\"> * include/linux/spinlock_api_smp.h</span>", 
"<span class=\"comment\"> */</span>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#raw_read_can_lock\">raw_read_can_lock</a>(<a class=\"id\" href=\"#l\">l</a>)<span class=\"ts\"/><a class=\"id\" href=\"#read_can_lock\">read_can_lock</a>(<a class=\"id\" href=\"#l\">l</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#raw_write_can_lock\">raw_write_can_lock</a>(<a class=\"id\" href=\"#l\">l</a>)<span class=\"ts\"/><a class=\"id\" href=\"#write_can_lock\">write_can_lock</a>(<a class=\"id\" href=\"#l\">l</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We build the __lock_function inlines here. They are too large for</span>", 
"<span class=\"comment\"> * inlining all over the place, but here is only one user per function</span>", 
"<span class=\"comment\"> * which embedds them into the calling _lock_function below.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This could be a long-held lock. We both prepare to spin for a long</span>", 
"<span class=\"comment\"> * time (making _this_ CPU preemptable if possible), and we also signal</span>", 
"<span class=\"comment\"> * towards that other CPU that it should break the lock ASAP.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUILD_LOCK_OPS\">BUILD_LOCK_OPS</a>(<a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#locktype\">locktype</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#__raw_\">__raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_lock\">_lock</a>(<a class=\"id\" href=\"#locktype\">locktype</a>##<a class=\"id\" href=\"#_t\">_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>for (;;) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#do_raw_\">do_raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_trylock\">_trylock</a>(<a class=\"id\" href=\"#lock\">lock</a>)))<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#lock\">lock</a>)-><a class=\"id\" href=\"#break_lock\">break_lock</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#lock\">lock</a>)-><a class=\"id\" href=\"#break_lock\">break_lock</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#raw_\">raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_can_lock\">_can_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>) && (<a class=\"id\" href=\"#lock\">lock</a>)-><a class=\"id\" href=\"#break_lock\">break_lock</a>)\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch_\">arch_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_relax\">_relax</a>(&amp;<a class=\"id\" href=\"#lock\">lock</a>-><a class=\"id\" href=\"#raw_lock\">raw_lock</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#lock\">lock</a>)-><a class=\"id\" href=\"#break_lock\">break_lock</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"unsigned long <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#__raw_\">__raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_lock_irqsave\">_lock_irqsave</a>(<a class=\"id\" href=\"#locktype\">locktype</a>##<a class=\"id\" href=\"#_t\">_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>for (;;) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#do_raw_\">do_raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_trylock\">_trylock</a>(<a class=\"id\" href=\"#lock\">lock</a>)))<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#lock\">lock</a>)-><a class=\"id\" href=\"#break_lock\">break_lock</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#lock\">lock</a>)-><a class=\"id\" href=\"#break_lock\">break_lock</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#raw_\">raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_can_lock\">_can_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>) && (<a class=\"id\" href=\"#lock\">lock</a>)-><a class=\"id\" href=\"#break_lock\">break_lock</a>)\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch_\">arch_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_relax\">_relax</a>(&amp;<a class=\"id\" href=\"#lock\">lock</a>-><a class=\"id\" href=\"#raw_lock\">raw_lock</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#lock\">lock</a>)-><a class=\"id\" href=\"#break_lock\">break_lock</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#__raw_\">__raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_lock_irq\">_lock_irq</a>(<a class=\"id\" href=\"#locktype\">locktype</a>##<a class=\"id\" href=\"#_t\">_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_raw_\">_raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_lock_irqsave\">_lock_irqsave</a>(<a class=\"id\" href=\"#lock\">lock</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#__raw_\">__raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_lock_bh\">_lock_bh</a>(<a class=\"id\" href=\"#locktype\">locktype</a>##<a class=\"id\" href=\"#_t\">_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"comment\">/*<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"comment\">/* Careful: we must exclude softirqs too, hence the<span class=\"ts\"/>*/</span><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"comment\">/* irq-disabling. We use the generic preemption-aware<span class=\"ts\"/>*/</span><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"comment\">/* function:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"comment\">/**/</span><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#_raw_\">_raw_</a>##<a class=\"id\" href=\"#op\">op</a>##<a class=\"id\" href=\"#_lock_irqsave\">_lock_irqsave</a>(<a class=\"id\" href=\"#lock\">lock</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Build preemption-friendly versions of the following</span>", 
"<span class=\"comment\"> * lock-spinning functions:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *         __[spin|read|write]_lock()</span>", 
"<span class=\"comment\"> *         __[spin|read|write]_lock_irq()</span>", 
"<span class=\"comment\"> *         __[spin|read|write]_lock_irqsave()</span>", 
"<span class=\"comment\"> *         __[spin|read|write]_lock_bh()</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#BUILD_LOCK_OPS\">BUILD_LOCK_OPS</a>(<a class=\"id\" href=\"#spin\">spin</a>, <a class=\"id\" href=\"#raw_spinlock\">raw_spinlock</a>);", 
"<a class=\"id\" href=\"#BUILD_LOCK_OPS\">BUILD_LOCK_OPS</a>(<a class=\"id\" href=\"#read\">read</a>, <a class=\"id\" href=\"#rwlock\">rwlock</a>);", 
"<a class=\"id\" href=\"#BUILD_LOCK_OPS\">BUILD_LOCK_OPS</a>(<a class=\"id\" href=\"#write\">write</a>, <a class=\"id\" href=\"#rwlock\">rwlock</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_TRYLOCK\">CONFIG_INLINE_SPIN_TRYLOCK</a>", 
"int <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_trylock\">_raw_spin_trylock</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__raw_spin_trylock\">__raw_spin_trylock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_trylock\">_raw_spin_trylock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_TRYLOCK_BH\">CONFIG_INLINE_SPIN_TRYLOCK_BH</a>", 
"int <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_trylock_bh\">_raw_spin_trylock_bh</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__raw_spin_trylock_bh\">__raw_spin_trylock_bh</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_trylock_bh\">_raw_spin_trylock_bh</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_LOCK\">CONFIG_INLINE_SPIN_LOCK</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_lock\">_raw_spin_lock</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_spin_lock\">__raw_spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_lock\">_raw_spin_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_LOCK_IRQSAVE\">CONFIG_INLINE_SPIN_LOCK_IRQSAVE</a>", 
"unsigned long <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_lock_irqsave\">_raw_spin_lock_irqsave</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__raw_spin_lock_irqsave\">__raw_spin_lock_irqsave</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_lock_irqsave\">_raw_spin_lock_irqsave</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_LOCK_IRQ\">CONFIG_INLINE_SPIN_LOCK_IRQ</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_lock_irq\">_raw_spin_lock_irq</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_spin_lock_irq\">__raw_spin_lock_irq</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_lock_irq\">_raw_spin_lock_irq</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_LOCK_BH\">CONFIG_INLINE_SPIN_LOCK_BH</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_lock_bh\">_raw_spin_lock_bh</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_spin_lock_bh\">__raw_spin_lock_bh</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_lock_bh\">_raw_spin_lock_bh</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_UNLOCK\">CONFIG_INLINE_SPIN_UNLOCK</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_unlock\">_raw_spin_unlock</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_spin_unlock\">__raw_spin_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_unlock\">_raw_spin_unlock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE\">CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_unlock_irqrestore\">_raw_spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_spin_unlock_irqrestore\">__raw_spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_unlock_irqrestore\">_raw_spin_unlock_irqrestore</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_UNLOCK_IRQ\">CONFIG_INLINE_SPIN_UNLOCK_IRQ</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_unlock_irq\">_raw_spin_unlock_irq</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_spin_unlock_irq\">__raw_spin_unlock_irq</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_unlock_irq\">_raw_spin_unlock_irq</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_SPIN_UNLOCK_BH\">CONFIG_INLINE_SPIN_UNLOCK_BH</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_unlock_bh\">_raw_spin_unlock_bh</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_spin_unlock_bh\">__raw_spin_unlock_bh</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_unlock_bh\">_raw_spin_unlock_bh</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_READ_TRYLOCK\">CONFIG_INLINE_READ_TRYLOCK</a>", 
"int <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_read_trylock\">_raw_read_trylock</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__raw_read_trylock\">__raw_read_trylock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_read_trylock\">_raw_read_trylock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_READ_LOCK\">CONFIG_INLINE_READ_LOCK</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_read_lock\">_raw_read_lock</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_read_lock\">__raw_read_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_read_lock\">_raw_read_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_READ_LOCK_IRQSAVE\">CONFIG_INLINE_READ_LOCK_IRQSAVE</a>", 
"unsigned long <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_read_lock_irqsave\">_raw_read_lock_irqsave</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__raw_read_lock_irqsave\">__raw_read_lock_irqsave</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_read_lock_irqsave\">_raw_read_lock_irqsave</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_READ_LOCK_IRQ\">CONFIG_INLINE_READ_LOCK_IRQ</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_read_lock_irq\">_raw_read_lock_irq</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_read_lock_irq\">__raw_read_lock_irq</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_read_lock_irq\">_raw_read_lock_irq</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_READ_LOCK_BH\">CONFIG_INLINE_READ_LOCK_BH</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_read_lock_bh\">_raw_read_lock_bh</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_read_lock_bh\">__raw_read_lock_bh</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_read_lock_bh\">_raw_read_lock_bh</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_READ_UNLOCK\">CONFIG_INLINE_READ_UNLOCK</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_read_unlock\">_raw_read_unlock</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_read_unlock\">__raw_read_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_read_unlock\">_raw_read_unlock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_READ_UNLOCK_IRQRESTORE\">CONFIG_INLINE_READ_UNLOCK_IRQRESTORE</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_read_unlock_irqrestore\">_raw_read_unlock_irqrestore</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_read_unlock_irqrestore\">__raw_read_unlock_irqrestore</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_read_unlock_irqrestore\">_raw_read_unlock_irqrestore</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_READ_UNLOCK_IRQ\">CONFIG_INLINE_READ_UNLOCK_IRQ</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_read_unlock_irq\">_raw_read_unlock_irq</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_read_unlock_irq\">__raw_read_unlock_irq</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_read_unlock_irq\">_raw_read_unlock_irq</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_READ_UNLOCK_BH\">CONFIG_INLINE_READ_UNLOCK_BH</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_read_unlock_bh\">_raw_read_unlock_bh</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_read_unlock_bh\">__raw_read_unlock_bh</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_read_unlock_bh\">_raw_read_unlock_bh</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_WRITE_TRYLOCK\">CONFIG_INLINE_WRITE_TRYLOCK</a>", 
"int <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_write_trylock\">_raw_write_trylock</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__raw_write_trylock\">__raw_write_trylock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_write_trylock\">_raw_write_trylock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_WRITE_LOCK\">CONFIG_INLINE_WRITE_LOCK</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_write_lock\">_raw_write_lock</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_write_lock\">__raw_write_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_write_lock\">_raw_write_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_WRITE_LOCK_IRQSAVE\">CONFIG_INLINE_WRITE_LOCK_IRQSAVE</a>", 
"unsigned long <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_write_lock_irqsave\">_raw_write_lock_irqsave</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__raw_write_lock_irqsave\">__raw_write_lock_irqsave</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_write_lock_irqsave\">_raw_write_lock_irqsave</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_WRITE_LOCK_IRQ\">CONFIG_INLINE_WRITE_LOCK_IRQ</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_write_lock_irq\">_raw_write_lock_irq</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_write_lock_irq\">__raw_write_lock_irq</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_write_lock_irq\">_raw_write_lock_irq</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_WRITE_LOCK_BH\">CONFIG_INLINE_WRITE_LOCK_BH</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_write_lock_bh\">_raw_write_lock_bh</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_write_lock_bh\">__raw_write_lock_bh</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_write_lock_bh\">_raw_write_lock_bh</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_WRITE_UNLOCK\">CONFIG_INLINE_WRITE_UNLOCK</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_write_unlock\">_raw_write_unlock</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_write_unlock\">__raw_write_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_write_unlock\">_raw_write_unlock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE\">CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_write_unlock_irqrestore\">_raw_write_unlock_irqrestore</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_write_unlock_irqrestore\">__raw_write_unlock_irqrestore</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_write_unlock_irqrestore\">_raw_write_unlock_irqrestore</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_WRITE_UNLOCK_IRQ\">CONFIG_INLINE_WRITE_UNLOCK_IRQ</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_write_unlock_irq\">_raw_write_unlock_irq</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_write_unlock_irq\">__raw_write_unlock_irq</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_write_unlock_irq\">_raw_write_unlock_irq</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_INLINE_WRITE_UNLOCK_BH\">CONFIG_INLINE_WRITE_UNLOCK_BH</a>", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_write_unlock_bh\">_raw_write_unlock_bh</a>(<a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raw_write_unlock_bh\">__raw_write_unlock_bh</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_write_unlock_bh\">_raw_write_unlock_bh</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_LOCK_ALLOC\">CONFIG_DEBUG_LOCK_ALLOC</a>", 
"", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_lock_nested\">_raw_spin_lock_nested</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>, int <a class=\"id\" href=\"#subclass\">subclass</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_acquire\">spin_acquire</a>(&amp;<a class=\"id\" href=\"#lock\">lock</a>-><a class=\"id\" href=\"#dep_map\">dep_map</a>, <a class=\"id\" href=\"#subclass\">subclass</a>, 0, <a class=\"id\" href=\"#_RET_IP_\">_RET_IP_</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LOCK_CONTENDED\">LOCK_CONTENDED</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#do_raw_spin_trylock\">do_raw_spin_trylock</a>, <a class=\"id\" href=\"#do_raw_spin_lock\">do_raw_spin_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_lock_nested\">_raw_spin_lock_nested</a>);", 
"", 
"unsigned long <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_lock_irqsave_nested\">_raw_spin_lock_irqsave_nested</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#subclass\">subclass</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_acquire\">spin_acquire</a>(&amp;<a class=\"id\" href=\"#lock\">lock</a>-><a class=\"id\" href=\"#dep_map\">dep_map</a>, <a class=\"id\" href=\"#subclass\">subclass</a>, 0, <a class=\"id\" href=\"#_RET_IP_\">_RET_IP_</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LOCK_CONTENDED_FLAGS\">LOCK_CONTENDED_FLAGS</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#do_raw_spin_trylock\">do_raw_spin_trylock</a>, <a class=\"id\" href=\"#do_raw_spin_lock\">do_raw_spin_lock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_raw_spin_lock_flags\">do_raw_spin_lock_flags</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_lock_irqsave_nested\">_raw_spin_lock_irqsave_nested</a>);", 
"", 
"void <a class=\"id\" href=\"#__lockfunc\">__lockfunc</a> <a class=\"id\" href=\"#_raw_spin_lock_nest_lock\">_raw_spin_lock_nest_lock</a>(<a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#lockdep_map\">lockdep_map</a> *<a class=\"id\" href=\"#nest_lock\">nest_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_acquire_nest\">spin_acquire_nest</a>(&amp;<a class=\"id\" href=\"#lock\">lock</a>-><a class=\"id\" href=\"#dep_map\">dep_map</a>, 0, 0, <a class=\"id\" href=\"#nest_lock\">nest_lock</a>, <a class=\"id\" href=\"#_RET_IP_\">_RET_IP_</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LOCK_CONTENDED\">LOCK_CONTENDED</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#do_raw_spin_trylock\">do_raw_spin_trylock</a>, <a class=\"id\" href=\"#do_raw_spin_lock\">do_raw_spin_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#_raw_spin_lock_nest_lock\">_raw_spin_lock_nest_lock</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#notrace\">notrace</a> int <a class=\"id\" href=\"#in_lock_functions\">in_lock_functions</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Linker adds these: start and end of __lockfunc functions */</span>", 
"<span class=\"ts\"/>extern char <a class=\"id\" href=\"#__lock_text_start\">__lock_text_start</a>[], <a class=\"id\" href=\"#__lock_text_end\">__lock_text_end</a>[];", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a> >= (unsigned long)<a class=\"id\" href=\"#__lock_text_start\">__lock_text_start</a>", 
"<span class=\"ts\"/>&& <a class=\"id\" href=\"#addr\">addr</a> &lt; (unsigned long)<a class=\"id\" href=\"#__lock_text_end\">__lock_text_end</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#in_lock_functions\">in_lock_functions</a>);", 
];
xr_frag_insert('l/c9/1bedf973e96c1211621b2a1e261c5212afd405.xr', __xr_tmp);
