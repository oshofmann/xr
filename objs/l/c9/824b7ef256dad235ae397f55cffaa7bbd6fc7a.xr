var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mtrr\">mtrr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#msr\">msr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"cpu.h\"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_OOSTORE\">CONFIG_X86_OOSTORE</a>", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#power2\">power2</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#x\">x</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s\">s</a> = 1;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#s\">s</a> <= <a class=\"id\" href=\"#x\">x</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> <<= 1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#s\">s</a> >>= 1;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up an actual MCR</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#centaur_mcr_insert\">centaur_mcr_insert</a>(int <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hi\">hi</a> = <a class=\"id\" href=\"#base\">base</a> &amp; ~0xFFF;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> = ~(<a class=\"id\" href=\"#size\">size</a>-1);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Size is a power of 2 so this makes a mask */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> &= ~0xFFF;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Remove the ctrl value bits */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= <a class=\"id\" href=\"#key\">key</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Attribute we wish to set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#reg\">reg</a>+<a class=\"id\" href=\"#MSR_IDT_MCR0\">MSR_IDT_MCR0</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_centaur_report_mcr\">mtrr_centaur_report_mcr</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);<span class=\"ts\"/><span class=\"comment\">/* Tell the mtrr driver */</span>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Figure what we can cover with MCR's</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Shortcut: We know you can't put 4Gig of RAM on a winchip</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#ramtop\">ramtop</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#clip\">clip</a> = 0xFFFFFFFFUL;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#top\">top</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a> &gt; 0xFFFFFFFFUL)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Don't MCR over reserved space. Ignore the ISA hole</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we frob around that catastrophe already</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a> >= 0x100000UL &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#clip\">clip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clip\">clip</a> = <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> &gt; <a class=\"id\" href=\"#top\">top</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top\">top</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Everything below 'top' should be RAM except for the ISA hole.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Because of the limited MCR's we want to map NV/ACPI into our</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * MCR range for gunk in RAM</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Clip might cause us to MCR insufficient RAM but that is an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * acceptable failure mode and should only bite obscure boxes with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a VESA hole at 15Mb</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The second case Clip sometimes kicks in is when the EBDA is marked</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as reserved. Again we fail safe with reasonable results</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#top\">top</a> &gt; <a class=\"id\" href=\"#clip\">clip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top\">top</a> = <a class=\"id\" href=\"#clip\">clip</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#top\">top</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Compute a set of MCR's to give maximum coverage</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#centaur_mcr_compute\">centaur_mcr_compute</a>(int <a class=\"id\" href=\"#nr\">nr</a>, int <a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mem\">mem</a> = <a class=\"id\" href=\"#ramtop\">ramtop</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#power2\">power2</a>(<a class=\"id\" href=\"#mem\">mem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#top\">top</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#floor\">floor</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ct\">ct</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ct\">ct</a> &lt; <a class=\"id\" href=\"#nr\">nr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fspace\">fspace</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#high\">high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Find the largest block we will fill going upwards</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#high\">high</a> = <a class=\"id\" href=\"#power2\">power2</a>(<a class=\"id\" href=\"#mem\">mem</a>-<a class=\"id\" href=\"#top\">top</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Find the largest block we will fill going downwards</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#low\">low</a> = <a class=\"id\" href=\"#base\">base</a>/2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Don't fill below 1Mb going downwards as there</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is an ISA hole in the way.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a> <= 1024*1024)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#low\">low</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * See how much space we could cover by filling below</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the ISA hole</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#floor\">floor</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fspace\">fspace</a> = 512*1024;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#floor\">floor</a> == 512*1024)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fspace\">fspace</a> = 128*1024;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* And forget ROM space */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Now install the largest coverage we get</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fspace\">fspace</a> &gt; <a class=\"id\" href=\"#high\">high</a> && <a class=\"id\" href=\"#fspace\">fspace</a> &gt; <a class=\"id\" href=\"#low\">low</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#centaur_mcr_insert\">centaur_mcr_insert</a>(<a class=\"id\" href=\"#ct\">ct</a>, <a class=\"id\" href=\"#floor\">floor</a>, <a class=\"id\" href=\"#fspace\">fspace</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#floor\">floor</a> += <a class=\"id\" href=\"#fspace\">fspace</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#high\">high</a> &gt; <a class=\"id\" href=\"#low\">low</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#centaur_mcr_insert\">centaur_mcr_insert</a>(<a class=\"id\" href=\"#ct\">ct</a>, <a class=\"id\" href=\"#top\">top</a>, <a class=\"id\" href=\"#high\">high</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top\">top</a> += <a class=\"id\" href=\"#high\">high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#low\">low</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> -= <a class=\"id\" href=\"#low\">low</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#centaur_mcr_insert\">centaur_mcr_insert</a>(<a class=\"id\" href=\"#ct\">ct</a>, <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ct\">ct</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We loaded ct values. We now need to set the mask. The caller</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must do this bit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ct\">ct</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#centaur_create_optimal_mcr\">centaur_create_optimal_mcr</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate up to 6 mcrs to mark as much of ram as possible</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as write combining and weak write ordered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To experiment with: Linux never uses stack operations for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mmio spaces so we could globally enable stack operation wc</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Load the registers with type 31 - full write combining, all</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * writes weakly ordered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#used\">used</a> = <a class=\"id\" href=\"#centaur_mcr_compute\">centaur_mcr_compute</a>(6, 31);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wipe unused MCRs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#used\">used</a>; <a class=\"id\" href=\"#i\">i</a> &lt; 8; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR0\">MSR_IDT_MCR0</a>+<a class=\"id\" href=\"#i\">i</a>, 0, 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#winchip2_create_optimal_mcr\">winchip2_create_optimal_mcr</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate up to 6 mcrs to mark as much of ram as possible</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as write combining, weak store ordered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Load the registers with type 25</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>8<span class=\"ts\"/>-<span class=\"ts\"/>weak write ordering</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>16<span class=\"ts\"/>-<span class=\"ts\"/>weak read ordering</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>1<span class=\"ts\"/>-<span class=\"ts\"/>write combining</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#used\">used</a> = <a class=\"id\" href=\"#centaur_mcr_compute\">centaur_mcr_compute</a>(6, 25);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Mark the registers we are using.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#used\">used</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= 1<<(9+<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wipe unused MCRs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#used\">used</a>; <a class=\"id\" href=\"#i\">i</a> &lt; 8; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR0\">MSR_IDT_MCR0</a>+<a class=\"id\" href=\"#i\">i</a>, 0, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Handle the MCR key on the Winchip 2.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#winchip2_unprotect_mcr\">winchip2_unprotect_mcr</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> &= ~0x1C0;<span class=\"ts\"/><span class=\"comment\">/* blank bits 8-6 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = (<a class=\"id\" href=\"#lo\">lo</a>>>17) &amp; 7;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= <a class=\"id\" href=\"#key\">key</a><<6;<span class=\"ts\"/><span class=\"comment\">/* replace with unlock key */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#winchip2_protect_mcr\">winchip2_protect_mcr</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> &= ~0x1C0;<span class=\"ts\"/><span class=\"comment\">/* blank bits 8-6 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_OOSTORE */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACE_PRESENT\">ACE_PRESENT</a><span class=\"ts\"/>(1 << 6)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACE_ENABLED\">ACE_ENABLED</a><span class=\"ts\"/>(1 << 7)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACE_FCR\">ACE_FCR</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 28)<span class=\"ts\"/><span class=\"comment\">/* MSR_VIA_FCR */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RNG_PRESENT\">RNG_PRESENT</a><span class=\"ts\"/>(1 << 2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RNG_ENABLED\">RNG_ENABLED</a><span class=\"ts\"/>(1 << 3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RNG_ENABLE\">RNG_ENABLE</a><span class=\"ts\"/>(1 << 6)<span class=\"ts\"/><span class=\"comment\">/* MSR_VIA_RNG */</span>", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#init_c3\">init_c3</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>  <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Test for Centaur Extended Feature Flags presence */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpuid_eax\">cpuid_eax</a>(0xC0000000) >= 0xC0000001) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#cpuid_edx\">cpuid_edx</a>(0xC0000001);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* enable ACE unit, if present and disabled */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#tmp\">tmp</a> &amp; (<a class=\"id\" href=\"#ACE_PRESENT\">ACE_PRESENT</a> | <a class=\"id\" href=\"#ACE_ENABLED\">ACE_ENABLED</a>)) == <a class=\"id\" href=\"#ACE_PRESENT\">ACE_PRESENT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_VIA_FCR\">MSR_VIA_FCR</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= <a class=\"id\" href=\"#ACE_FCR\">ACE_FCR</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* enable ACE unit */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_VIA_FCR\">MSR_VIA_FCR</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPU: Enabled ACE h/w crypto\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* enable RNG unit, if present and disabled */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#tmp\">tmp</a> &amp; (<a class=\"id\" href=\"#RNG_PRESENT\">RNG_PRESENT</a> | <a class=\"id\" href=\"#RNG_ENABLED\">RNG_ENABLED</a>)) == <a class=\"id\" href=\"#RNG_PRESENT\">RNG_PRESENT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_VIA_RNG\">MSR_VIA_RNG</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= <a class=\"id\" href=\"#RNG_ENABLE\">RNG_ENABLE</a>;<span class=\"ts\"/><span class=\"comment\">/* enable RNG unit */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_VIA_RNG\">MSR_VIA_RNG</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPU: Enabled h/w RNG\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* store Centaur Extended Feature Flags as</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * word 5 of the CPU capability bit array</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_capability\">x86_capability</a>[5] = <a class=\"id\" href=\"#cpuid_edx\">cpuid_edx</a>(0xC0000001);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Cyrix III family needs CX8 &amp; PGE explicitly enabled. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> >= 6 && <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> <= 9) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_VIA_FCR\">MSR_VIA_FCR</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= (1<<1 | 1<<7);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_VIA_FCR\">MSR_VIA_FCR</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_CX8\">X86_FEATURE_CX8</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Before Nehemiah, the C3's had 3dNOW! */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> >= 6 && <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> &lt; 9)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_3DNOW\">X86_FEATURE_3DNOW</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86\">x86</a> == 0x6 && <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> >= 0xf) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_cache_alignment\">x86_cache_alignment</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_clflush_size\">x86_clflush_size</a> * 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_REP_GOOD\">X86_FEATURE_REP_GOOD</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_detect_cache_sizes\">cpu_detect_cache_sizes</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"}", 
"", 
"enum {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ECX8\">ECX8</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EIERRINT\">EIERRINT</a><span class=\"ts\"/>= 1<<2,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPM\">DPM</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<3,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMCE\">DMCE</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<4,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DSTPCLK\">DSTPCLK</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<5,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ELINEAR\">ELINEAR</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<6,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DSMC\">DSMC</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<7,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DTLOCK\">DTLOCK</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<8,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EDCTLB\">EDCTLB</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<8,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EMMX\">EMMX</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<9,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPDC\">DPDC</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<11,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EBRPRED\">EBRPRED</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<12,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DIC\">DIC</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<13,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DDC\">DDC</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<14,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DNA\">DNA</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<15,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ERETSTK\">ERETSTK</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<16,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#E2MMX\">E2MMX</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<19,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EAMD3D\">EAMD3D</a><span class=\"ts\"/><span class=\"ts\"/>= 1<<20,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#early_init_centaur\">early_init_centaur</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86\">x86</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>case 5:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Emulate MTRRs using Centaur's MCR. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_CENTAUR_MCR\">X86_FEATURE_CENTAUR_MCR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> >= 0xf)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_CONSTANT_TSC\">X86_FEATURE_CONSTANT_TSC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_SYSENTER32\">X86_FEATURE_SYSENTER32</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#init_centaur\">init_centaur</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>  <a class=\"id\" href=\"#fcr_set\">fcr_set</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>  <a class=\"id\" href=\"#fcr_clr\">fcr_clr</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>  <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>, <a class=\"id\" href=\"#newlo\">newlo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>  <a class=\"id\" href=\"#aa\">aa</a>, <a class=\"id\" href=\"#bb\">bb</a>, <a class=\"id\" href=\"#cc\">cc</a>, <a class=\"id\" href=\"#dd\">dd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Bit 31 in normal CPUID used for nonstandard 3DNow ID;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 3DNow is IDd by bit 31 in extended CPUID (1*32+31) anyway</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_cpu_cap\">clear_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, 0*32+31);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_init_centaur\">early_init_centaur</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86\">x86</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>case 5:", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = \"C6\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcr_set\">fcr_set</a> = <a class=\"id\" href=\"#ECX8\">ECX8</a>|<a class=\"id\" href=\"#DSMC\">DSMC</a>|<a class=\"id\" href=\"#EDCTLB\">EDCTLB</a>|<a class=\"id\" href=\"#EMMX\">EMMX</a>|<a class=\"id\" href=\"#ERETSTK\">ERETSTK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcr_clr\">fcr_clr</a> = <a class=\"id\" href=\"#DPDC\">DPDC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"Disabling bugged TSC.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_cpu_cap\">clear_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_TSC\">X86_FEATURE_TSC</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_OOSTORE\">CONFIG_X86_OOSTORE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#centaur_create_optimal_mcr\">centaur_create_optimal_mcr</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Enable:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>write combining on non-stack, non-string</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>write combining on string, all types</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>weak write ordering</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The C6 original lacks weak read order</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note 0x120 is write only on Winchip 1</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, 0x01F0001F, 0);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 8:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_mask\">x86_mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = \"2\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 7 ... 9:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = \"2A\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 10 ... 15:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = \"2B\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcr_set\">fcr_set</a> = <a class=\"id\" href=\"#ECX8\">ECX8</a>|<a class=\"id\" href=\"#DSMC\">DSMC</a>|<a class=\"id\" href=\"#DTLOCK\">DTLOCK</a>|<a class=\"id\" href=\"#EMMX\">EMMX</a>|<a class=\"id\" href=\"#EBRPRED\">EBRPRED</a>|<a class=\"id\" href=\"#ERETSTK\">ERETSTK</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#E2MMX\">E2MMX</a>|<a class=\"id\" href=\"#EAMD3D\">EAMD3D</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcr_clr\">fcr_clr</a> = <a class=\"id\" href=\"#DPDC\">DPDC</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_OOSTORE\">CONFIG_X86_OOSTORE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#winchip2_unprotect_mcr\">winchip2_unprotect_mcr</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#winchip2_create_optimal_mcr\">winchip2_create_optimal_mcr</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Enable:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>write combining on non-stack, non-string</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>write combining on string, all types</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>weak write ordering</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= 31;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#winchip2_protect_mcr\">winchip2_protect_mcr</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 9:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = \"3\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcr_set\">fcr_set</a> = <a class=\"id\" href=\"#ECX8\">ECX8</a>|<a class=\"id\" href=\"#DSMC\">DSMC</a>|<a class=\"id\" href=\"#DTLOCK\">DTLOCK</a>|<a class=\"id\" href=\"#EMMX\">EMMX</a>|<a class=\"id\" href=\"#EBRPRED\">EBRPRED</a>|<a class=\"id\" href=\"#ERETSTK\">ERETSTK</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#E2MMX\">E2MMX</a>|<a class=\"id\" href=\"#EAMD3D\">EAMD3D</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcr_clr\">fcr_clr</a> = <a class=\"id\" href=\"#DPDC\">DPDC</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_OOSTORE\">CONFIG_X86_OOSTORE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#winchip2_unprotect_mcr\">winchip2_unprotect_mcr</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#winchip2_create_optimal_mcr\">winchip2_create_optimal_mcr</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Enable:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>write combining on non-stack, non-string</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>write combining on string, all types</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>weak write ordering</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= 31;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IDT_MCR_CTRL\">MSR_IDT_MCR_CTRL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#winchip2_protect_mcr\">winchip2_protect_mcr</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = \"??\";", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IDT_FCR1\">MSR_IDT_FCR1</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newlo\">newlo</a> = (<a class=\"id\" href=\"#lo\">lo</a>|<a class=\"id\" href=\"#fcr_set\">fcr_set</a>) &amp; (~<a class=\"id\" href=\"#fcr_clr\">fcr_clr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newlo\">newlo</a> != <a class=\"id\" href=\"#lo\">lo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Centaur FCR was 0x%X now 0x%X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#newlo\">newlo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IDT_FCR1\">MSR_IDT_FCR1</a>, <a class=\"id\" href=\"#newlo\">newlo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Centaur FCR is 0x%X\\n\", <a class=\"id\" href=\"#lo\">lo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Emulate MTRRs using Centaur's MCR. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_CENTAUR_MCR\">X86_FEATURE_CENTAUR_MCR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Report CX8 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_CX8\">X86_FEATURE_CX8</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set 3DNow! on Winchip 2 and above. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> >= 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_3DNOW\">X86_FEATURE_3DNOW</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* See if we can find out some more. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpuid_eax\">cpuid_eax</a>(0x80000000) >= 0x80000005) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Yes, we can. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(0x80000005, &amp;<a class=\"id\" href=\"#aa\">aa</a>, &amp;<a class=\"id\" href=\"#bb\">bb</a>, &amp;<a class=\"id\" href=\"#cc\">cc</a>, &amp;<a class=\"id\" href=\"#dd\">dd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Add L1 data and code cache sizes. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_cache_size\">x86_cache_size</a> = (<a class=\"id\" href=\"#cc\">cc</a>>>24)+(<a class=\"id\" href=\"#dd\">dd</a>>>24);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model_id\">x86_model_id</a>, \"WinChip %s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_c3\">init_c3</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_cap\">set_cpu_cap</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_LFENCE_RDTSC\">X86_FEATURE_LFENCE_RDTSC</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a>", 
"<a class=\"id\" href=\"#centaur_size_cache\">centaur_size_cache</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* VIA C3 CPUs (670-68F) need further shifting. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86\">x86</a> == 6) && ((<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> == 7) || (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> == 8)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> >>= 8;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * There's also an erratum in Nehemiah stepping 1, which</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * returns '65KB' instead of '64KB'</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  - Note, it seems this may only be in engineering samples.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86\">x86</a> == 6) && (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> == 9) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_mask\">x86_mask</a> == 1) && (<a class=\"id\" href=\"#size\">size</a> == 65))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> -= 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#cpu_dev\">cpu_dev</a> <a class=\"id\" href=\"#__cpuinitconst\">__cpuinitconst</a> <a class=\"id\" href=\"#centaur_cpu_dev\">centaur_cpu_dev</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_vendor\">c_vendor</a><span class=\"ts\"/>= \"Centaur\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_ident\">c_ident</a><span class=\"ts\"/>= { \"CentaurHauls\" },", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_early_init\">c_early_init</a><span class=\"ts\"/>= <a class=\"id\" href=\"#early_init_centaur\">early_init_centaur</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_init\">c_init</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#init_centaur\">init_centaur</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_size_cache\">c_size_cache</a><span class=\"ts\"/>= <a class=\"id\" href=\"#centaur_size_cache\">centaur_size_cache</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_x86_vendor\">c_x86_vendor</a><span class=\"ts\"/>= <a class=\"id\" href=\"#X86_VENDOR_CENTAUR\">X86_VENDOR_CENTAUR</a>,", 
"};", 
"", 
"<a class=\"id\" href=\"#cpu_dev_register\">cpu_dev_register</a>(<a class=\"id\" href=\"#centaur_cpu_dev\">centaur_cpu_dev</a>);", 
];
xr_frag_insert('l/c9/824b7ef256dad235ae397f55cffaa7bbd6fc7a.xr', __xr_tmp);
