var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NetLabel System</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The NetLabel system manages static and dynamic label mappings for network</span>", 
"<span class=\"comment\"> * protocols such as CIPSO and RIPSO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Paul Moore &lt;paul.moore@hp.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * (c) Copyright Hewlett-Packard Development Company, L.P., 2006, 2008</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software;  you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY;  without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See</span>", 
"<span class=\"comment\"> * the GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program;  if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_NETLABEL_H\">_NETLABEL_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_NETLABEL_H\">_NETLABEL_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#request_sock\">request_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#cipso_v4_doi\">cipso_v4_doi</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NetLabel - A management interface for maintaining network packet label</span>", 
"<span class=\"comment\"> *            mapping tables for explicit packet labling protocols.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Network protocols such as CIPSO and RIPSO require a label translation layer</span>", 
"<span class=\"comment\"> * to convert the label on the packet into something meaningful on the host</span>", 
"<span class=\"comment\"> * machine.  In the current Linux implementation these mapping tables live</span>", 
"<span class=\"comment\"> * inside the kernel; NetLabel provides a mechanism for user space applications</span>", 
"<span class=\"comment\"> * to manage these mapping tables.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NetLabel makes use of the Generic NETLINK mechanism as a transport layer to</span>", 
"<span class=\"comment\"> * send messages between kernel and user space.  The general format of a</span>", 
"<span class=\"comment\"> * NetLabel message is shown below:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  +-----------------+-------------------+--------- --- -- -</span>", 
"<span class=\"comment\"> *  | struct nlmsghdr | struct genlmsghdr | payload</span>", 
"<span class=\"comment\"> *  +-----------------+-------------------+--------- --- -- -</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The 'nlmsghdr' and 'genlmsghdr' structs should be dealt with like normal.</span>", 
"<span class=\"comment\"> * The payload is dependent on the subsystem specified in the</span>", 
"<span class=\"comment\"> * 'nlmsghdr-&gt;nlmsg_type' and should be defined below, supporting functions</span>", 
"<span class=\"comment\"> * should be defined in the corresponding net/netlabel/netlabel_&lt;subsys&gt;.h|c</span>", 
"<span class=\"comment\"> * file.  All of the fields in the NetLabel payload are NETLINK attributes, see</span>", 
"<span class=\"comment\"> * the include/net/netlink.h file for more information on NETLINK attributes.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NetLabel NETLINK protocol</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* NetLabel NETLINK protocol version</span>", 
"<span class=\"comment\"> *  1: initial version</span>", 
"<span class=\"comment\"> *  2: added static labels for unlabeled connections</span>", 
"<span class=\"comment\"> *  3: network selectors added to the NetLabel/LSM domain mapping and the</span>", 
"<span class=\"comment\"> *     CIPSO_V4_MAP_LOCAL CIPSO mapping was added</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_PROTO_VERSION\">NETLBL_PROTO_VERSION</a>            3", 
"", 
"<span class=\"comment\">/* NetLabel NETLINK types/families */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_NONE\">NETLBL_NLTYPE_NONE</a>              0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_MGMT\">NETLBL_NLTYPE_MGMT</a>              1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_MGMT_NAME\">NETLBL_NLTYPE_MGMT_NAME</a>         \"NLBL_MGMT\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_RIPSO\">NETLBL_NLTYPE_RIPSO</a>             2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_RIPSO_NAME\">NETLBL_NLTYPE_RIPSO_NAME</a>        \"NLBL_RIPSO\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV4\">NETLBL_NLTYPE_CIPSOV4</a>           3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV4_NAME\">NETLBL_NLTYPE_CIPSOV4_NAME</a>      \"NLBL_CIPSOv4\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV6\">NETLBL_NLTYPE_CIPSOV6</a>           4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_CIPSOV6_NAME\">NETLBL_NLTYPE_CIPSOV6_NAME</a>      \"NLBL_CIPSOv6\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED\">NETLBL_NLTYPE_UNLABELED</a>         5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_UNLABELED_NAME\">NETLBL_NLTYPE_UNLABELED_NAME</a>    \"NLBL_UNLBL\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_ADDRSELECT\">NETLBL_NLTYPE_ADDRSELECT</a>        6", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_NLTYPE_ADDRSELECT_NAME\">NETLBL_NLTYPE_ADDRSELECT_NAME</a>   \"NLBL_ADRSEL\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NetLabel - Kernel API for accessing the network packet label mappings.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The following functions are provided for use by other kernel modules,</span>", 
"<span class=\"comment\"> * specifically kernel LSM modules, to provide a consistent, transparent API</span>", 
"<span class=\"comment\"> * for dealing with explicit packet labeling protocols such as CIPSO and</span>", 
"<span class=\"comment\"> * RIPSO.  The functions defined here are implemented in the</span>", 
"<span class=\"comment\"> * net/netlabel/netlabel_kapi.c file.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* NetLabel audit information */</span>", 
"struct <a class=\"id\" href=\"#netlbl_audit\">netlbl_audit</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#secid\">secid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#loginuid\">loginuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sessionid\">sessionid</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * LSM security attributes</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct netlbl_lsm_cache - NetLabel LSM security attribute cache</span>", 
"<span class=\"comment\"> * @refcount: atomic reference counter</span>", 
"<span class=\"comment\"> * @free: LSM supplied function to free the cache data</span>", 
"<span class=\"comment\"> * @data: LSM supplied cache data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * This structure is provided for LSMs which wish to make use of the NetLabel</span>", 
"<span class=\"comment\"> * caching mechanism to store LSM specific data/attributes in the NetLabel</span>", 
"<span class=\"comment\"> * cache.  If the LSM has to perform a lot of translation from the NetLabel</span>", 
"<span class=\"comment\"> * security attributes into it's own internal representation then the cache</span>", 
"<span class=\"comment\"> * mechanism can provide a way to eliminate some or all of that translation</span>", 
"<span class=\"comment\"> * overhead on a cache hit.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#netlbl_lsm_cache\">netlbl_lsm_cache</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#refcount\">refcount</a>;", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#free\">free</a>) (const void *<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct netlbl_lsm_secattr_catmap - NetLabel LSM secattr category bitmap</span>", 
"<span class=\"comment\"> * @startbit: the value of the lowest order bit in the bitmap</span>", 
"<span class=\"comment\"> * @bitmap: the category bitmap</span>", 
"<span class=\"comment\"> * @next: pointer to the next bitmap \"node\" or NULL</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * This structure is used to represent category bitmaps.  Due to the large</span>", 
"<span class=\"comment\"> * number of categories supported by most labeling protocols it is not</span>", 
"<span class=\"comment\"> * practical to transfer a full bitmap internally so NetLabel adopts a sparse</span>", 
"<span class=\"comment\"> * bitmap structure modeled after SELinux's ebitmap structure.</span>", 
"<span class=\"comment\"> * The catmap bitmap field MUST be a power of two in length and large</span>", 
"<span class=\"comment\"> * enough to hold at least 240 bits.  Special care (i.e. check the code!)</span>", 
"<span class=\"comment\"> * should be used when changing these values as the LSM implementation</span>", 
"<span class=\"comment\"> * probably has functions which rely on the sizes of these types to speed</span>", 
"<span class=\"comment\"> * processing.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_CATMAP_MAPTYPE\">NETLBL_CATMAP_MAPTYPE</a>           <a class=\"id\" href=\"#u64\">u64</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_CATMAP_MAPCNT\">NETLBL_CATMAP_MAPCNT</a>            4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a>           (sizeof(<a class=\"id\" href=\"#NETLBL_CATMAP_MAPTYPE\">NETLBL_CATMAP_MAPTYPE</a>) * 8)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a>              (<a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a> * \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#NETLBL_CATMAP_MAPCNT\">NETLBL_CATMAP_MAPCNT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_CATMAP_BIT\">NETLBL_CATMAP_BIT</a>               (<a class=\"id\" href=\"#NETLBL_CATMAP_MAPTYPE\">NETLBL_CATMAP_MAPTYPE</a>)0x01", 
"struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#startbit\">startbit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETLBL_CATMAP_MAPTYPE\">NETLBL_CATMAP_MAPTYPE</a> <a class=\"id\" href=\"#bitmap\">bitmap</a>[<a class=\"id\" href=\"#NETLBL_CATMAP_MAPCNT\">NETLBL_CATMAP_MAPCNT</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct netlbl_lsm_secattr - NetLabel LSM security attributes</span>", 
"<span class=\"comment\"> * @flags: indicate structure attributes, see NETLBL_SECATTR_*</span>", 
"<span class=\"comment\"> * @type: indicate the NLTYPE of the attributes</span>", 
"<span class=\"comment\"> * @domain: the NetLabel LSM domain</span>", 
"<span class=\"comment\"> * @cache: NetLabel LSM specific cache</span>", 
"<span class=\"comment\"> * @attr.mls: MLS sensitivity label</span>", 
"<span class=\"comment\"> * @attr.mls.cat: MLS category bitmap</span>", 
"<span class=\"comment\"> * @attr.mls.lvl: MLS sensitivity level</span>", 
"<span class=\"comment\"> * @attr.secid: LSM specific secid token</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * This structure is used to pass security attributes between NetLabel and the</span>", 
"<span class=\"comment\"> * LSM modules.  The flags field is used to specify which fields within the</span>", 
"<span class=\"comment\"> * struct are valid and valid values can be created by bitwise OR'ing the</span>", 
"<span class=\"comment\"> * NETLBL_SECATTR_* defines.  The domain field is typically set by the LSM to</span>", 
"<span class=\"comment\"> * specify domain specific configuration settings and is not usually used by</span>", 
"<span class=\"comment\"> * NetLabel itself when returning security attributes to the LSM.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* bitmap values for 'flags' */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_SECATTR_NONE\">NETLBL_SECATTR_NONE</a>             0x00000000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_SECATTR_DOMAIN\">NETLBL_SECATTR_DOMAIN</a>           0x00000001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_SECATTR_DOMAIN_CPY\">NETLBL_SECATTR_DOMAIN_CPY</a>       (<a class=\"id\" href=\"#NETLBL_SECATTR_DOMAIN\">NETLBL_SECATTR_DOMAIN</a> | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#NETLBL_SECATTR_FREE_DOMAIN\">NETLBL_SECATTR_FREE_DOMAIN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_SECATTR_CACHE\">NETLBL_SECATTR_CACHE</a>            0x00000002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_SECATTR_MLS_LVL\">NETLBL_SECATTR_MLS_LVL</a>          0x00000004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_SECATTR_MLS_CAT\">NETLBL_SECATTR_MLS_CAT</a>          0x00000008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_SECATTR_SECID\">NETLBL_SECATTR_SECID</a>            0x00000010", 
"<span class=\"ts\"/><span class=\"comment\">/* bitmap meta-values for 'flags' */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_SECATTR_FREE_DOMAIN\">NETLBL_SECATTR_FREE_DOMAIN</a>      0x01000000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLBL_SECATTR_CACHEABLE\">NETLBL_SECATTR_CACHEABLE</a>        (<a class=\"id\" href=\"#NETLBL_SECATTR_MLS_LVL\">NETLBL_SECATTR_MLS_LVL</a> | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#NETLBL_SECATTR_MLS_CAT\">NETLBL_SECATTR_MLS_CAT</a> | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#NETLBL_SECATTR_SECID\">NETLBL_SECATTR_SECID</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#domain\">domain</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_cache\">netlbl_lsm_cache</a> *<a class=\"id\" href=\"#cache\">cache</a>;", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#cat\">cat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lvl\">lvl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#mls\">mls</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#secid\">secid</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#attr\">attr</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * LSM security attribute operations (inline)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_secattr_cache_alloc - Allocate and initialize a secattr cache</span>", 
"<span class=\"comment\"> * @flags: the memory allocation flags</span>", 
];
xr_frag_insert('l/ca/64d8aa3e12209f3116fec1823694131b72f319.xr', __xr_tmp);
