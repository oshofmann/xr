var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set or unset the suspension state of a device.</span>", 
"<span class=\"comment\"> * If the device already is in the requested state we just return its status.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dev_suspend\">dev_suspend</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_SUSPEND_FLAG\">DM_SUSPEND_FLAG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#do_suspend\">do_suspend</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_resume\">do_resume</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copies device info back to user space, used by</span>", 
"<span class=\"comment\"> * the create and info ioctls.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dev_status\">dev_status</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#find_device\">find_device</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Build up the status struct for each target</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#retrieve_status\">retrieve_status</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#num_targets\">num_targets</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a> *<a class=\"id\" href=\"#spec\">spec</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#outbuf\">outbuf</a>, *<a class=\"id\" href=\"#outptr\">outptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status_type_t\">status_type_t</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#remaining\">remaining</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#used\">used</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outptr\">outptr</a> = <a class=\"id\" href=\"#outbuf\">outbuf</a> = <a class=\"id\" href=\"#get_result_buffer\">get_result_buffer</a>(<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param_size\">param_size</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_STATUS_TABLE_FLAG\">DM_STATUS_TABLE_FLAG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#STATUSTYPE_TABLE\">STATUSTYPE_TABLE</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#STATUSTYPE_INFO\">STATUSTYPE_INFO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get all the target info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_targets\">num_targets</a> = <a class=\"id\" href=\"#dm_table_get_num_targets\">dm_table_get_num_targets</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_targets\">num_targets</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#ti\">ti</a> = <a class=\"id\" href=\"#dm_table_get_target\">dm_table_get_target</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> = <a class=\"id\" href=\"#len\">len</a> - (<a class=\"id\" href=\"#outptr\">outptr</a> - <a class=\"id\" href=\"#outbuf\">outbuf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#remaining\">remaining</a> <= sizeof(struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_BUFFER_FULL_FLAG\">DM_BUFFER_FULL_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spec\">spec</a> = (struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a> *) <a class=\"id\" href=\"#outptr\">outptr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#sector_start\">sector_start</a> = <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#target_type\">target_type</a>, <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#target_type\">target_type</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outptr\">outptr</a> += sizeof(struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> = <a class=\"id\" href=\"#len\">len</a> - (<a class=\"id\" href=\"#outptr\">outptr</a> - <a class=\"id\" href=\"#outbuf\">outbuf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#remaining\">remaining</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_BUFFER_FULL_FLAG\">DM_BUFFER_FULL_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the status/table string from the target driver */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#status\">status</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#status\">status</a>(<a class=\"id\" href=\"#ti\">ti</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#outptr\">outptr</a>, <a class=\"id\" href=\"#remaining\">remaining</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_BUFFER_FULL_FLAG\">DM_BUFFER_FULL_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outptr\">outptr</a>[0] = '\\0';", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outptr\">outptr</a> += <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#outptr\">outptr</a>) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#used\">used</a> = <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a> + (<a class=\"id\" href=\"#outptr\">outptr</a> - <a class=\"id\" href=\"#outbuf\">outbuf</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outptr\">outptr</a> = <a class=\"id\" href=\"#align_ptr\">align_ptr</a>(<a class=\"id\" href=\"#outptr\">outptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#outptr\">outptr</a> - <a class=\"id\" href=\"#outbuf\">outbuf</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#used\">used</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a> = <a class=\"id\" href=\"#used\">used</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#target_count\">target_count</a> = <a class=\"id\" href=\"#num_targets\">num_targets</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wait for a device to report an event</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dev_wait\">dev_wait</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#find_device\">find_device</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wait for a notification event</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_wait_event\">dm_wait_event</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#event_nr\">event_nr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The userland program is going to want to know what</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * changed to trigger the event, so we may as well tell</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * him and save an ioctl.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#dm_get_live_or_inactive_table\">dm_get_live_or_inactive_table</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retrieve_status\">retrieve_status</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param_size\">param_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#get_mode\">get_mode</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a> | <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_READONLY_FLAG\">DM_READONLY_FLAG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mode\">mode</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#next_target\">next_target</a>(struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a> *<a class=\"id\" href=\"#last\">last</a>, <a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#next\">next</a>, void *<a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a> **<a class=\"id\" href=\"#spec\">spec</a>, char **<a class=\"id\" href=\"#target_params\">target_params</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#spec\">spec</a> = (struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a> *) ((unsigned char *) <a class=\"id\" href=\"#last\">last</a> + <a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#target_params\">target_params</a> = (char *) (*<a class=\"id\" href=\"#spec\">spec</a> + 1);", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#spec\">spec</a> &lt; (<a class=\"id\" href=\"#last\">last</a> + 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#invalid_str\">invalid_str</a>(*<a class=\"id\" href=\"#target_params\">target_params</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#populate_table\">populate_table</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a> *<a class=\"id\" href=\"#spec\">spec</a> = (struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a> *) <a class=\"id\" href=\"#param\">param</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#end\">end</a> = (void *) <a class=\"id\" href=\"#param\">param</a> + <a class=\"id\" href=\"#param_size\">param_size</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#target_params\">target_params</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#target_count\">target_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"populate_table: no targets specified\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#target_count\">target_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#next_target\">next_target</a>(<a class=\"id\" href=\"#spec\">spec</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#end\">end</a>, &amp;<a class=\"id\" href=\"#spec\">spec</a>, &amp;<a class=\"id\" href=\"#target_params\">target_params</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"unable to find target\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_table_add_target\">dm_table_add_target</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#target_type\">target_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#sector_t\">sector_t</a>) <a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#sector_start\">sector_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#sector_t\">sector_t</a>) <a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#length\">length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_params\">target_params</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"error adding target to table\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#spec\">spec</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dm_table_complete\">dm_table_complete</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#table_load\">table_load</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#find_device\">find_device</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_table_create\">dm_table_create</a>(&amp;<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#get_mode\">get_mode</a>(<a class=\"id\" href=\"#param\">param</a>), <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#target_count\">target_count</a>, <a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#populate_table\">populate_table</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param_size\">param_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Protect md-&gt;type and md-&gt;queue against concurrent table loads. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_lock_md_type\">dm_lock_md_type</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_get_md_type\">dm_get_md_type</a>(<a class=\"id\" href=\"#md\">md</a>) == <a class=\"id\" href=\"#DM_TYPE_NONE\">DM_TYPE_NONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Initial table load: acquire type of table. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_set_md_type\">dm_set_md_type</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#dm_table_get_type\">dm_table_get_type</a>(<a class=\"id\" href=\"#t\">t</a>));", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dm_get_md_type\">dm_get_md_type</a>(<a class=\"id\" href=\"#md\">md</a>) != <a class=\"id\" href=\"#dm_table_get_type\">dm_table_get_type</a>(<a class=\"id\" href=\"#t\">t</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"can't change device type after initial table load.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_unlock_md_type\">dm_unlock_md_type</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* setup md-&gt;queue to reflect md's type (may block) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_setup_md_queue\">dm_setup_md_queue</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"unable to set up device queue for new table.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_unlock_md_type\">dm_unlock_md_type</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_unlock_md_type\">dm_unlock_md_type</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* stage inactive table */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#dm_get_mdptr\">dm_get_mdptr</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a> || <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a> != <a class=\"id\" href=\"#md\">md</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"device has been removed from the dev hash table.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_INACTIVE_PRESENT_FLAG\">DM_INACTIVE_PRESENT_FLAG</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#table_clear\">table_clear</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#__find_device_hash_cell\">__find_device_hash_cell</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"device doesn't appear to be in the dev hash table.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#DM_INACTIVE_PRESENT_FLAG\">DM_INACTIVE_PRESENT_FLAG</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Retrieves a list of devices used by a particular dm device.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#retrieve_deps\">retrieve_deps</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#needed\">needed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_dev_internal\">dm_dev_internal</a> *<a class=\"id\" href=\"#dd\">dd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target_deps\">dm_target_deps</a> *<a class=\"id\" href=\"#deps\">deps</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#deps\">deps</a> = <a class=\"id\" href=\"#get_result_buffer\">get_result_buffer</a>(<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param_size\">param_size</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Count the devices.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a> (<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#dm_table_get_devices\">dm_table_get_devices</a>(<a class=\"id\" href=\"#table\">table</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check we have enough space.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#needed\">needed</a> = sizeof(*<a class=\"id\" href=\"#deps\">deps</a>) + (sizeof(*<a class=\"id\" href=\"#deps\">deps</a>-><a class=\"id\" href=\"#dev\">dev</a>) * <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#needed\">needed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_BUFFER_FULL_FLAG\">DM_BUFFER_FULL_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fill in the devices.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#deps\">deps</a>-><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a> (<a class=\"id\" href=\"#dd\">dd</a>, <a class=\"id\" href=\"#dm_table_get_devices\">dm_table_get_devices</a>(<a class=\"id\" href=\"#table\">table</a>), <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deps\">deps</a>-><a class=\"id\" href=\"#dev\">dev</a>[<a class=\"id\" href=\"#count\">count</a>++] = <a class=\"id\" href=\"#huge_encode_dev\">huge_encode_dev</a>(<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#dm_dev\">dm_dev</a>.<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_dev\">bd_dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a> = <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a> + <a class=\"id\" href=\"#needed\">needed</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#table_deps\">table_deps</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#find_device\">find_device</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#dm_get_live_or_inactive_table\">dm_get_live_or_inactive_table</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retrieve_deps\">retrieve_deps</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param_size\">param_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return the status of a device as a text string for each</span>", 
"<span class=\"comment\"> * target.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#table_status\">table_status</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#find_device\">find_device</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#dm_get_live_or_inactive_table\">dm_get_live_or_inactive_table</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retrieve_status\">retrieve_status</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param_size\">param_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Pass a message to the target that's at the supplied device offset.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#target_message\">target_message</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#argc\">argc</a>;", 
"<span class=\"ts\"/>char **<a class=\"id\" href=\"#argv\">argv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#ti\">ti</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target_msg\">dm_target_msg</a> *<a class=\"id\" href=\"#tmsg\">tmsg</a> = (void *) <a class=\"id\" href=\"#param\">param</a> + <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#find_device\">find_device</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmsg\">tmsg</a> &lt; (struct <a class=\"id\" href=\"#dm_target_msg\">dm_target_msg</a> *) <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data\">data</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#invalid_str\">invalid_str</a>(<a class=\"id\" href=\"#tmsg\">tmsg</a>-><a class=\"id\" href=\"#message\">message</a>, (void *) <a class=\"id\" href=\"#param\">param</a> + <a class=\"id\" href=\"#param_size\">param_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"Invalid target message parameters.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_split_args\">dm_split_args</a>(&amp;<a class=\"id\" href=\"#argc\">argc</a>, &amp;<a class=\"id\" href=\"#argv\">argv</a>, <a class=\"id\" href=\"#tmsg\">tmsg</a>-><a class=\"id\" href=\"#message\">message</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"Failed to split target message parameters\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_argv\">out_argv</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_deleting_md\">dm_deleting_md</a>(<a class=\"id\" href=\"#md\">md</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_table\">out_table</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ti\">ti</a> = <a class=\"id\" href=\"#dm_table_find_target\">dm_table_find_target</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#tmsg\">tmsg</a>-><a class=\"id\" href=\"#sector\">sector</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dm_target_is_valid\">dm_target_is_valid</a>(<a class=\"id\" href=\"#ti\">ti</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"Target message sector outside device.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#message\">message</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#message\">message</a>(<a class=\"id\" href=\"#ti\">ti</a>, <a class=\"id\" href=\"#argc\">argc</a>, <a class=\"id\" href=\"#argv\">argv</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"Target type does not support messages\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#out_table\">out_table</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#table\">table</a>);", 
" <a class=\"id\" href=\"#out_argv\">out_argv</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#argv\">argv</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * Implementation of open/close/ioctl on the special char</span>", 
"<span class=\"comment\"> * device.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"static <a class=\"id\" href=\"#ioctl_fn\">ioctl_fn</a> <a class=\"id\" href=\"#lookup_ioctl\">lookup_ioctl</a>(unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>static struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioctl_fn\">ioctl_fn</a> <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#_ioctls\">_ioctls</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_VERSION_CMD\">DM_VERSION_CMD</a>, <a class=\"id\" href=\"#NULL\">NULL</a>},<span class=\"ts\"/><span class=\"comment\">/* version is dealt with elsewhere */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_REMOVE_ALL_CMD\">DM_REMOVE_ALL_CMD</a>, <a class=\"id\" href=\"#remove_all\">remove_all</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_LIST_DEVICES_CMD\">DM_LIST_DEVICES_CMD</a>, <a class=\"id\" href=\"#list_devices\">list_devices</a>},", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_DEV_CREATE_CMD\">DM_DEV_CREATE_CMD</a>, <a class=\"id\" href=\"#dev_create\">dev_create</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_DEV_REMOVE_CMD\">DM_DEV_REMOVE_CMD</a>, <a class=\"id\" href=\"#dev_remove\">dev_remove</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_DEV_RENAME_CMD\">DM_DEV_RENAME_CMD</a>, <a class=\"id\" href=\"#dev_rename\">dev_rename</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_DEV_SUSPEND_CMD\">DM_DEV_SUSPEND_CMD</a>, <a class=\"id\" href=\"#dev_suspend\">dev_suspend</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_DEV_STATUS_CMD\">DM_DEV_STATUS_CMD</a>, <a class=\"id\" href=\"#dev_status\">dev_status</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_DEV_WAIT_CMD\">DM_DEV_WAIT_CMD</a>, <a class=\"id\" href=\"#dev_wait\">dev_wait</a>},", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_TABLE_LOAD_CMD\">DM_TABLE_LOAD_CMD</a>, <a class=\"id\" href=\"#table_load\">table_load</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_TABLE_CLEAR_CMD\">DM_TABLE_CLEAR_CMD</a>, <a class=\"id\" href=\"#table_clear\">table_clear</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_TABLE_DEPS_CMD\">DM_TABLE_DEPS_CMD</a>, <a class=\"id\" href=\"#table_deps\">table_deps</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_TABLE_STATUS_CMD\">DM_TABLE_STATUS_CMD</a>, <a class=\"id\" href=\"#table_status\">table_status</a>},", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_LIST_VERSIONS_CMD\">DM_LIST_VERSIONS_CMD</a>, <a class=\"id\" href=\"#list_versions\">list_versions</a>},", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_TARGET_MSG_CMD\">DM_TARGET_MSG_CMD</a>, <a class=\"id\" href=\"#target_message\">target_message</a>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{<a class=\"id\" href=\"#DM_DEV_SET_GEOMETRY_CMD\">DM_DEV_SET_GEOMETRY_CMD</a>, <a class=\"id\" href=\"#dev_set_geometry\">dev_set_geometry</a>}", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#cmd\">cmd</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#_ioctls\">_ioctls</a>)) ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#_ioctls\">_ioctls</a>[<a class=\"id\" href=\"#cmd\">cmd</a>].<a class=\"id\" href=\"#fn\">fn</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * As well as checking the version compatibility this always</span>", 
"<span class=\"comment\"> * copies the kernel interface version out.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#check_version\">check_version</a>(unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#user\">user</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#version\">version</a>[3];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#version\">version</a>, <a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#version\">version</a>, sizeof(<a class=\"id\" href=\"#version\">version</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#DM_VERSION_MAJOR\">DM_VERSION_MAJOR</a> != <a class=\"id\" href=\"#version\">version</a>[0]) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#DM_VERSION_MINOR\">DM_VERSION_MINOR</a> &lt; <a class=\"id\" href=\"#version\">version</a>[1])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"ioctl interface mismatch: \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"kernel(%u.%u.%u), user(%u.%u.%u), cmd(%d)\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#DM_VERSION_MAJOR\">DM_VERSION_MAJOR</a>, <a class=\"id\" href=\"#DM_VERSION_MINOR\">DM_VERSION_MINOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#DM_VERSION_PATCHLEVEL\">DM_VERSION_PATCHLEVEL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#version\">version</a>[0], <a class=\"id\" href=\"#version\">version</a>[1], <a class=\"id\" href=\"#version\">version</a>[2], <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fill in the kernel version.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#version\">version</a>[0] = <a class=\"id\" href=\"#DM_VERSION_MAJOR\">DM_VERSION_MAJOR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#version\">version</a>[1] = <a class=\"id\" href=\"#DM_VERSION_MINOR\">DM_VERSION_MINOR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#version\">version</a>[2] = <a class=\"id\" href=\"#DM_VERSION_PATCHLEVEL\">DM_VERSION_PATCHLEVEL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#version\">version</a>, <a class=\"id\" href=\"#version\">version</a>, sizeof(<a class=\"id\" href=\"#version\">version</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#free_params\">free_params</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#copy_params\">copy_params</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#user\">user</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> **<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> <a class=\"id\" href=\"#tmp\">tmp</a>, *<a class=\"id\" href=\"#dmi\">dmi</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#user\">user</a>, sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>) - sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#data\">data</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#data_size\">data_size</a> &lt; (sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>) - sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#data\">data</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi\">dmi</a> = <a class=\"id\" href=\"#vmalloc\">vmalloc</a>(<a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#data_size\">data_size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dmi\">dmi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#dmi\">dmi</a>, <a class=\"id\" href=\"#user\">user</a>, <a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#data_size\">data_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#dmi\">dmi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#param\">param</a> = <a class=\"id\" href=\"#dmi\">dmi</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#validate_params\">validate_params</a>(<a class=\"id\" href=\"#uint\">uint</a> <a class=\"id\" href=\"#cmd\">cmd</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Always clear this flag */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#DM_BUFFER_FULL_FLAG\">DM_BUFFER_FULL_FLAG</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#DM_UEVENT_GENERATED_FLAG\">DM_UEVENT_GENERATED_FLAG</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ignores parameters */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#DM_REMOVE_ALL_CMD\">DM_REMOVE_ALL_CMD</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#DM_LIST_DEVICES_CMD\">DM_LIST_DEVICES_CMD</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#DM_LIST_VERSIONS_CMD\">DM_LIST_VERSIONS_CMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#DM_DEV_CREATE_CMD\">DM_DEV_CREATE_CMD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"name not supplied when creating device\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if ((*<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#uuid\">uuid</a> && *<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"only supply one of name or uuid, cmd(%u)\", <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ensure strings are terminated */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#DM_NAME_LEN\">DM_NAME_LEN</a> - 1] = '\\0';", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#uuid\">uuid</a>[<a class=\"id\" href=\"#DM_UUID_LEN\">DM_UUID_LEN</a> - 1] = '\\0';", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ctl_ioctl\">ctl_ioctl</a>(<a class=\"id\" href=\"#uint\">uint</a> <a class=\"id\" href=\"#command\">command</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#user\">user</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#uninitialized_var\">uninitialized_var</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioctl_fn\">ioctl_fn</a> <a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* only root can play with this */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_IOC_TYPE\">_IOC_TYPE</a>(<a class=\"id\" href=\"#command\">command</a>) != <a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#command\">command</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check the interface version passed in.  This also</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * writes out the kernel's interface version.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#check_version\">check_version</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#user\">user</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Nothing more to do for the version command.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#DM_VERSION_CMD\">DM_VERSION_CMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#lookup_ioctl\">lookup_ioctl</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"dm_ctl_ioctl: unknown command 0x%x\", <a class=\"id\" href=\"#command\">command</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Trying to avoid low memory issues when a device is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * suspended.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PF_MEMALLOC\">PF_MEMALLOC</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Copy the parameters into kernel space.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#copy_params\">copy_params</a>(<a class=\"id\" href=\"#user\">user</a>, &amp;<a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#PF_MEMALLOC\">PF_MEMALLOC</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#validate_params\">validate_params</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param_size\">param_size</a> = <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a> = sizeof(*<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param_size\">param_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Copy the results back to userland.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#r\">r</a> && <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#user\">user</a>, <a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_params\">free_params</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static long <a class=\"id\" href=\"#dm_ctl_ioctl\">dm_ctl_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#uint\">uint</a> <a class=\"id\" href=\"#command\">command</a>, <a class=\"id\" href=\"#ulong\">ulong</a> <a class=\"id\" href=\"#u\">u</a>)", 
"{", 
"<span class=\"ts\"/>return (long)<a class=\"id\" href=\"#ctl_ioctl\">ctl_ioctl</a>(<a class=\"id\" href=\"#command\">command</a>, (struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#u\">u</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static long <a class=\"id\" href=\"#dm_compat_ctl_ioctl\">dm_compat_ctl_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#uint\">uint</a> <a class=\"id\" href=\"#command\">command</a>, <a class=\"id\" href=\"#ulong\">ulong</a> <a class=\"id\" href=\"#u\">u</a>)", 
"{", 
"<span class=\"ts\"/>return (long)<a class=\"id\" href=\"#dm_ctl_ioctl\">dm_ctl_ioctl</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#command\">command</a>, (<a class=\"id\" href=\"#ulong\">ulong</a>) <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#u\">u</a>));", 
"}", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dm_compat_ctl_ioctl\">dm_compat_ctl_ioctl</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#_ctl_fops\">_ctl_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#nonseekable_open\">nonseekable_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/> = <a class=\"id\" href=\"#dm_ctl_ioctl\">dm_ctl_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a> = <a class=\"id\" href=\"#dm_compat_ctl_ioctl\">dm_compat_ctl_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#miscdevice\">miscdevice</a> <a class=\"id\" href=\"#_dm_misc\">_dm_misc</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#minor\">minor</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#MAPPER_CTRL_MINOR\">MAPPER_CTRL_MINOR</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a>  <span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#DM_NAME\">DM_NAME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#nodename\">nodename</a><span class=\"ts\"/>= <a class=\"id\" href=\"#DM_DIR\">DM_DIR</a> \"/\" <a class=\"id\" href=\"#DM_CONTROL_NODE\">DM_CONTROL_NODE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fops\">fops</a>  <span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#_ctl_fops\">_ctl_fops</a>", 
"};", 
"", 
"<a class=\"id\" href=\"#MODULE_ALIAS_MISCDEV\">MODULE_ALIAS_MISCDEV</a>(<a class=\"id\" href=\"#MAPPER_CTRL_MINOR\">MAPPER_CTRL_MINOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"devname:\" <a class=\"id\" href=\"#DM_DIR\">DM_DIR</a> \"/\" <a class=\"id\" href=\"#DM_CONTROL_NODE\">DM_CONTROL_NODE</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Create misc character device and link to DM_DIR/control.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dm_interface_init\">dm_interface_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_hash_init\">dm_hash_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#misc_register\">misc_register</a>(&amp;<a class=\"id\" href=\"#_dm_misc\">_dm_misc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMERR\">DMERR</a>(\"misc_register failed for control device\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_hash_exit\">dm_hash_exit</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMINFO\">DMINFO</a>(\"%d.%d.%d%s initialised: %s\", <a class=\"id\" href=\"#DM_VERSION_MAJOR\">DM_VERSION_MAJOR</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#DM_VERSION_MINOR\">DM_VERSION_MINOR</a>, <a class=\"id\" href=\"#DM_VERSION_PATCHLEVEL\">DM_VERSION_PATCHLEVEL</a>, <a class=\"id\" href=\"#DM_VERSION_EXTRA\">DM_VERSION_EXTRA</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#DM_DRIVER_EMAIL\">DM_DRIVER_EMAIL</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_interface_exit\">dm_interface_exit</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#misc_deregister\">misc_deregister</a>(&amp;<a class=\"id\" href=\"#_dm_misc\">_dm_misc</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMERR\">DMERR</a>(\"misc_deregister failed for control device\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_hash_exit\">dm_hash_exit</a>();", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dm_copy_name_and_uuid - Copy mapped device name &amp; uuid into supplied buffers</span>", 
"<span class=\"comment\"> * @md: Pointer to mapped_device</span>", 
"<span class=\"comment\"> * @name: Buffer (size DM_NAME_LEN) for name</span>", 
"<span class=\"comment\"> * @uuid: Buffer (size DM_UUID_LEN) for uuid or empty string if uuid not defined</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_copy_name_and_uuid\">dm_copy_name_and_uuid</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, char *<a class=\"id\" href=\"#name\">name</a>, char *<a class=\"id\" href=\"#uuid\">uuid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dm_hash_cells_mutex\">dm_hash_cells_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#dm_get_mdptr\">dm_get_mdptr</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a> || <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a> != <a class=\"id\" href=\"#md\">md</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uuid\">uuid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#uuid\">uuid</a>, <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid\">uuid</a> ? : \"\");", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dm_hash_cells_mutex\">dm_hash_cells_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
];
xr_frag_insert('l/ca/c816eac2f5b097f001c2c50787b70404e483a9.xr', __xr_tmp);
