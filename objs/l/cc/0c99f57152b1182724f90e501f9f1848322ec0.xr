var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Copyright (c) 1991,1992,1995  Linus Torvalds</span>", 
"<span class=\"comment\"> *  Copyright (c) 1994  Alan Modra</span>", 
"<span class=\"comment\"> *  Copyright (c) 1995  Markus Kuhn</span>", 
"<span class=\"comment\"> *  Copyright (c) 1996  Ingo Molnar</span>", 
"<span class=\"comment\"> *  Copyright (c) 1998  Andrea Arcangeli</span>", 
"<span class=\"comment\"> *  Copyright (c) 2002,2006  Vojtech Pavlik</span>", 
"<span class=\"comment\"> *  Copyright (c) 2003  Andi Kleen</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#clockchips\">clockchips</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mca\">mca</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#vsyscall\">vsyscall</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i8259\">i8259</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i8253\">i8253</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>)", 
"int <a class=\"id\" href=\"#timer_ack\">timer_ack</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"volatile unsigned long <a class=\"id\" href=\"#__jiffies\">__jiffies</a> <a class=\"id\" href=\"#__section_jiffies\">__section_jiffies</a> = <a class=\"id\" href=\"#INITIAL_JIFFIES\">INITIAL_JIFFIES</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"unsigned long <a class=\"id\" href=\"#profile_pc\">profile_pc</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pc\">pc</a> = <a class=\"id\" href=\"#instruction_pointer\">instruction_pointer</a>(<a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#user_mode_vm\">user_mode_vm</a>(<a class=\"id\" href=\"#regs\">regs</a>) && <a class=\"id\" href=\"#in_lock_functions\">in_lock_functions</a>(<a class=\"id\" href=\"#pc\">pc</a>)) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FRAME_POINTER\">CONFIG_FRAME_POINTER</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>return *(unsigned long *)(<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bp\">bp</a> + sizeof(long));", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#sp\">sp</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long *)<a class=\"id\" href=\"#kernel_stack_pointer\">kernel_stack_pointer</a>(<a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Return address is either directly at stack pointer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or above a saved flags. Eflags has bits 22-31 zero,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * kernel addresses don't.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sp\">sp</a>[0] >> 22)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sp\">sp</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sp\">sp</a>[1] >> 22)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sp\">sp</a>[1];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pc\">pc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#profile_pc\">profile_pc</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Default timer interrupt handler for PIT/HPET</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#timer_interrupt\">timer_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Keep nmi watchdog up to date */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_irq_stat\">inc_irq_stat</a>(<a class=\"id\" href=\"#irq0_irqs\">irq0_irqs</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Optimized out for !IO_APIC and x86_64 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timer_ack\">timer_ack</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Subtle, when I/O APICs are used we have to ack timer IRQ</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * manually to deassert NMI lines for the watchdog if run</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * on an 82489DX-based system.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#i8259A_lock\">i8259A_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(0x0c, <a class=\"id\" href=\"#PIC_MASTER_OCW3\">PIC_MASTER_OCW3</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ack the IRQ; AEOI will end it automatically. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inb\">inb</a>(<a class=\"id\" href=\"#PIC_MASTER_POLL\">PIC_MASTER_POLL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#i8259A_lock\">i8259A_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#global_clock_event\">global_clock_event</a>-><a class=\"id\" href=\"#event_handler\">event_handler</a>(<a class=\"id\" href=\"#global_clock_event\">global_clock_event</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* MCA bus quirk: Acknowledge irq0 by setting bit 7 in port 0x61 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MCA_bus\">MCA_bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#inb_p\">inb_p</a>(0x61)| 0x80, 0x61);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#irqaction\">irqaction</a> <a class=\"id\" href=\"#irq0\">irq0</a>  = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#timer_interrupt\">timer_interrupt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IRQF_DISABLED\">IRQF_DISABLED</a> | <a class=\"id\" href=\"#IRQF_NOBALANCING\">IRQF_NOBALANCING</a> | <a class=\"id\" href=\"#IRQF_IRQPOLL\">IRQF_IRQPOLL</a> | <a class=\"id\" href=\"#IRQF_TIMER\">IRQF_TIMER</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"timer\"", 
"};", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_default_timer_irq\">setup_default_timer_irq</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_irq\">setup_irq</a>(0, &amp;<a class=\"id\" href=\"#irq0\">irq0</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Default timer init function */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#hpet_time_init\">hpet_time_init</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_enable\">hpet_enable</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_pit_timer\">setup_pit_timer</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_default_timer_irq\">setup_default_timer_irq</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#x86_late_time_init\">x86_late_time_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#timers\">timers</a>.<a class=\"id\" href=\"#timer_init\">timer_init</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsc_init\">tsc_init</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialize TSC and delay the periodic timer init to</span>", 
"<span class=\"comment\"> * late x86_late_time_init() so ioremap works.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#time_init\">time_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#late_time_init\">late_time_init</a> = <a class=\"id\" href=\"#x86_late_time_init\">x86_late_time_init</a>;", 
"}", 
];
xr_frag_insert('l/cc/0c99f57152b1182724f90e501f9f1848322ec0.xr', __xr_tmp);
