var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_OF_PLATFORM_H\">_LINUX_OF_PLATFORM_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_OF_PLATFORM_H\">_LINUX_OF_PLATFORM_H</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *    Copyright (C) 2006 Benjamin Herrenschmidt, IBM Corp.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &lt;benh@kernel.crashing.org&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *  modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *  as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *  2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_OF_DEVICE\">CONFIG_OF_DEVICE</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mod_devicetable\">mod_devicetable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#of_device\">of_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#platform_device\">platform_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * of_platform_driver - Legacy of-aware driver for platform devices.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * An of_platform_driver driver is attached to a basic platform_device on</span>", 
"<span class=\"comment\"> * ether the \"platform bus\" (platform_bus_type), or the ibm ebus</span>", 
"<span class=\"comment\"> * (ibmebus_bus_type).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * of_platform_driver is being phased out when used with the platform_bus_type,</span>", 
"<span class=\"comment\"> * and regular platform_drivers should be used instead.  When the transition</span>", 
"<span class=\"comment\"> * is complete, only ibmebus will be using this structure, and the</span>", 
"<span class=\"comment\"> * platform_driver member of this structure will be removed.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#of_platform_driver\">of_platform_driver</a>", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#probe\">probe</a>)(struct <a class=\"id\" href=\"#platform_device\">platform_device</a>* <a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#of_device_id\">of_device_id</a> *<a class=\"id\" href=\"#match\">match</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#remove\">remove</a>)(struct <a class=\"id\" href=\"#platform_device\">platform_device</a>* <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#suspend\">suspend</a>)(struct <a class=\"id\" href=\"#platform_device\">platform_device</a>* <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#resume\">resume</a>)(struct <a class=\"id\" href=\"#platform_device\">platform_device</a>* <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#shutdown\">shutdown</a>)(struct <a class=\"id\" href=\"#platform_device\">platform_device</a>* <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#platform_driver\">platform_driver</a><span class=\"ts\"/><a class=\"id\" href=\"#platform_driver\">platform_driver</a>;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#to_of_platform_driver\">to_of_platform_driver</a>(<a class=\"id\" href=\"#drv\">drv</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#drv\">drv</a>,struct <a class=\"id\" href=\"#of_platform_driver\">of_platform_driver</a>, <a class=\"id\" href=\"#driver\">driver</a>)", 
"", 
"extern int <a class=\"id\" href=\"#of_register_driver\">of_register_driver</a>(struct <a class=\"id\" href=\"#of_platform_driver\">of_platform_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"extern void <a class=\"id\" href=\"#of_unregister_driver\">of_unregister_driver</a>(struct <a class=\"id\" href=\"#of_platform_driver\">of_platform_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>);", 
"", 
"<span class=\"comment\">/* Platform drivers register/unregister */</span>", 
"extern int <a class=\"id\" href=\"#of_register_platform_driver\">of_register_platform_driver</a>(struct <a class=\"id\" href=\"#of_platform_driver\">of_platform_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>);", 
"extern void <a class=\"id\" href=\"#of_unregister_platform_driver\">of_unregister_platform_driver</a>(struct <a class=\"id\" href=\"#of_platform_driver\">of_platform_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#of_device_alloc\">of_device_alloc</a>(struct <a class=\"id\" href=\"#device_node\">device_node</a> *<a class=\"id\" href=\"#np\">np</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#bus_id\">bus_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>);", 
"extern struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#of_find_device_by_node\">of_find_device_by_node</a>(struct <a class=\"id\" href=\"#device_node\">device_node</a> *<a class=\"id\" href=\"#np\">np</a>);", 
"", 
"extern int <a class=\"id\" href=\"#of_bus_type_init\">of_bus_type_init</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, const char *<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SPARC\">CONFIG_SPARC</a>) <span class=\"comment\">/* SPARC has its own device registration method */</span>", 
"<span class=\"comment\">/* Platform devices and busses creation */</span>", 
"extern struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#of_platform_device_create\">of_platform_device_create</a>(struct <a class=\"id\" href=\"#device_node\">device_node</a> *<a class=\"id\" href=\"#np\">np</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#bus_id\">bus_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"comment\">/* pseudo \"matches\" value to not do deep probe */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OF_NO_DEEP_PROBE\">OF_NO_DEEP_PROBE</a> ((struct <a class=\"id\" href=\"#of_device_id\">of_device_id</a> *)-1)", 
"", 
"extern int <a class=\"id\" href=\"#of_platform_bus_probe\">of_platform_bus_probe</a>(struct <a class=\"id\" href=\"#device_node\">device_node</a> *<a class=\"id\" href=\"#root\">root</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#of_device_id\">of_device_id</a> *<a class=\"id\" href=\"#matches\">matches</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_SPARC */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_OF_DEVICE */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _LINUX_OF_PLATFORM_H */</span>", 
];
xr_frag_insert('l/cc/27d9f113d0892af0161566ead7fd2b1462db73.xr', __xr_tmp);
