var __xr_tmp = [
"<span class=\"comment\">/* </span>", 
"<span class=\"comment\"> * ASCII values for a number of symbolic constants, printing functions,</span>", 
"<span class=\"comment\"> * etc.</span>", 
"<span class=\"comment\"> * Additions for SCSI 2 and Linux 2.2.x by D. Gilbert (990422)</span>", 
"<span class=\"comment\"> * Additions for SCSI 3+ (SPC-3 T10/1416-D Rev 07 3 May 2002)</span>", 
"<span class=\"comment\"> *   by D. Gilbert and aeb (20020609)</span>", 
"<span class=\"comment\"> * Update to SPC-4 T10/1713-D Rev 20, 22 May 2009, D. Gilbert 20090624</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi\">scsi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_device\">scsi_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_eh\">scsi_eh</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_dbg\">scsi_dbg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"", 
"<span class=\"comment\">/* Commands with service actions that change the command name */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAINTENANCE_IN\">MAINTENANCE_IN</a> 0xa3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAINTENANCE_OUT\">MAINTENANCE_OUT</a> 0xa4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERVICE_ACTION_IN_12\">SERVICE_ACTION_IN_12</a> 0xab", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERVICE_ACTION_OUT_12\">SERVICE_ACTION_OUT_12</a> 0xa9", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERVICE_ACTION_IN_16\">SERVICE_ACTION_IN_16</a> 0x9e", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERVICE_ACTION_OUT_16\">SERVICE_ACTION_OUT_16</a> 0x9f", 
"", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_CONSTANTS\">CONFIG_SCSI_CONSTANTS</a>", 
"static const char * <a class=\"id\" href=\"#cdb_byte0_names\">cdb_byte0_names</a>[] = {", 
"<span class=\"comment\">/* 00-03 */</span> \"Test Unit Ready\", \"Rezero Unit/Rewind\", <a class=\"id\" href=\"#NULL\">NULL</a>, \"Request Sense\",", 
"<span class=\"comment\">/* 04-07 */</span> \"Format Unit/Medium\", \"Read Block Limits\", <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/>    \"Reasssign Blocks\",", 
"<span class=\"comment\">/* 08-0d */</span> \"Read(6)\", <a class=\"id\" href=\"#NULL\">NULL</a>, \"Write(6)\", \"Seek(6)\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"comment\">/* 0e-12 */</span> <a class=\"id\" href=\"#NULL\">NULL</a>, \"Read Reverse\", \"Write Filemarks\", \"Space\", \"Inquiry\",  ", 
"<span class=\"comment\">/* 13-16 */</span> \"Verify(6)\", \"Recover Buffered Data\", \"Mode Select(6)\",", 
"<span class=\"ts\"/>    \"Reserve(6)\",", 
"<span class=\"comment\">/* 17-1a */</span> \"Release(6)\", \"Copy\", \"Erase\", \"Mode Sense(6)\",", 
"<span class=\"comment\">/* 1b-1d */</span> \"Start/Stop Unit\", \"Receive Diagnostic\", \"Send Diagnostic\", ", 
"<span class=\"comment\">/* 1e-1f */</span> \"Prevent/Allow Medium Removal\", <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"comment\">/* 20-22 */</span>  <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"comment\">/* 23-28 */</span> \"Read Format Capacities\", \"Set Window\",", 
"<span class=\"ts\"/>    \"Read Capacity(10)\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, \"Read(10)\",", 
"<span class=\"comment\">/* 29-2d */</span> \"Read Generation\", \"Write(10)\", \"Seek(10)\", \"Erase(10)\",", 
"            \"Read updated block\",", 
"<span class=\"comment\">/* 2e-31 */</span> \"Write Verify(10)\", \"Verify(10)\", \"Search High\", \"Search Equal\",", 
"<span class=\"comment\">/* 32-34 */</span> \"Search Low\", \"Set Limits\", \"Prefetch/Read Position\", ", 
"<span class=\"comment\">/* 35-37 */</span> \"Synchronize Cache(10)\", \"Lock/Unlock Cache(10)\",", 
"<span class=\"ts\"/>    \"Read Defect Data(10)\", ", 
"<span class=\"comment\">/* 38-3c */</span> \"Medium Scan\", \"Compare\", \"Copy Verify\", \"Write Buffer\", ", 
"            \"Read Buffer\", ", 
"<span class=\"comment\">/* 3d-3f */</span> \"Update Block\", \"Read Long(10)\",  \"Write Long(10)\",", 
"<span class=\"comment\">/* 40-41 */</span> \"Change Definition\", \"Write Same(10)\",", 
"<span class=\"comment\">/* 42-48 */</span> \"Unmap/Read sub-channel\", \"Read TOC/PMA/ATIP\",", 
"<span class=\"ts\"/>    \"Read density support\", \"Play audio(10)\", \"Get configuration\",", 
"<span class=\"ts\"/>    \"Play audio msf\", \"Play audio track/index\",", 
"<span class=\"comment\">/* 49-4f */</span> \"Play track relative(10)\", \"Get event status notification\",", 
"            \"Pause/resume\", \"Log Select\", \"Log Sense\", \"Stop play/scan\",", 
"            <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"comment\">/* 50-55 */</span> \"Xdwrite\", \"Xpwrite, Read disk info\", \"Xdread, Read track info\",", 
"            \"Reserve track\", \"Send OPC info\", \"Mode Select(10)\",", 
"<span class=\"comment\">/* 56-5b */</span> \"Reserve(10)\", \"Release(10)\", \"Repair track\", \"Read master cue\",", 
"            \"Mode Sense(10)\", \"Close track/session\",", 
"<span class=\"comment\">/* 5c-5f */</span> \"Read buffer capacity\", \"Send cue sheet\", \"Persistent reserve in\",", 
"            \"Persistent reserve out\",", 
"<span class=\"comment\">/* 60-67 */</span> <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"comment\">/* 68-6f */</span> <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"comment\">/* 70-77 */</span> <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"comment\">/* 78-7f */</span> <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, \"Extended CDB\",", 
"<span class=\"ts\"/>    \"Variable length\",", 
"<span class=\"comment\">/* 80-84 */</span> \"Xdwrite(16)\", \"Rebuild(16)\", \"Regenerate(16)\", \"Extended copy\",", 
"            \"Receive copy results\",", 
"<span class=\"comment\">/* 85-89 */</span> \"ATA command pass through(16)\", \"Access control in\",", 
"<span class=\"ts\"/>    \"Access control out\", \"Read(16)\", \"Memory Export Out(16)\",", 
"<span class=\"comment\">/* 8a-8f */</span> \"Write(16)\", \"ORWrite\", \"Read attributes\", \"Write attributes\",", 
"            \"Write and verify(16)\", \"Verify(16)\",", 
"<span class=\"comment\">/* 90-94 */</span> \"Pre-fetch(16)\", \"Synchronize cache(16)\",", 
"            \"Lock/unlock cache(16)\", \"Write same(16)\", <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"comment\">/* 95-99 */</span> <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"comment\">/* 9a-9f */</span> <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, \"Service action in(16)\",", 
"            \"Service action out(16)\",", 
"<span class=\"comment\">/* a0-a5 */</span> \"Report luns\", \"ATA command pass through(12)/Blank\",", 
"            \"Security protocol in\", \"Maintenance in\", \"Maintenance out\",", 
"<span class=\"ts\"/>    \"Move medium/play audio(12)\",", 
"<span class=\"comment\">/* a6-a9 */</span> \"Exchange medium\", \"Move medium attached\", \"Read(12)\",", 
"            \"Play track relative(12)\",", 
"<span class=\"comment\">/* aa-ae */</span> \"Write(12)\", <a class=\"id\" href=\"#NULL\">NULL</a>, \"Erase(12), Get Performance\",", 
"            \"Read DVD structure\", \"Write and verify(12)\",", 
"<span class=\"comment\">/* af-b1 */</span> \"Verify(12)\", \"Search data high(12)\", \"Search data equal(12)\",", 
"<span class=\"comment\">/* b2-b4 */</span> \"Search data low(12)\", \"Set limits(12)\",", 
"            \"Read element status attached\",", 
"<span class=\"comment\">/* b5-b6 */</span> \"Security protocol out\", \"Send volume tag, set streaming\",", 
"<span class=\"comment\">/* b7-b9 */</span> \"Read defect data(12)\", \"Read element status\", \"Read CD msf\",", 
"<span class=\"comment\">/* ba-bc */</span> \"Redundancy group (in), Scan\",", 
"            \"Redundancy group (out), Set cd-rom speed\", \"Spare (in), Play cd\",", 
"<span class=\"comment\">/* bd-bf */</span> \"Spare (out), Mechanism status\", \"Volume set (in), Read cd\",", 
"            \"Volume set (out), Send DVD structure\",", 
"};", 
"", 
"struct <a class=\"id\" href=\"#value_name_pair\">value_name_pair</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#name\">name</a>;", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#value_name_pair\">value_name_pair</a> <a class=\"id\" href=\"#maint_in_arr\">maint_in_arr</a>[] = {", 
"<span class=\"ts\"/>{0x5, \"Report identifying information\"},", 
"<span class=\"ts\"/>{0xa, \"Report target port groups\"},", 
"<span class=\"ts\"/>{0xb, \"Report aliases\"},", 
"<span class=\"ts\"/>{0xc, \"Report supported operation codes\"},", 
"<span class=\"ts\"/>{0xd, \"Report supported task management functions\"},", 
"<span class=\"ts\"/>{0xe, \"Report priority\"},", 
"<span class=\"ts\"/>{0xf, \"Report timestamp\"},", 
"<span class=\"ts\"/>{0x10, \"Management protocol in\"},", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAINT_IN_SZ\">MAINT_IN_SZ</a> <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#maint_in_arr\">maint_in_arr</a>)", 
"", 
"static const struct <a class=\"id\" href=\"#value_name_pair\">value_name_pair</a> <a class=\"id\" href=\"#maint_out_arr\">maint_out_arr</a>[] = {", 
"<span class=\"ts\"/>{0x6, \"Set identifying information\"},", 
"<span class=\"ts\"/>{0xa, \"Set target port groups\"},", 
"<span class=\"ts\"/>{0xb, \"Change aliases\"},", 
"<span class=\"ts\"/>{0xe, \"Set priority\"},", 
"<span class=\"ts\"/>{0xf, \"Set timestamp\"},", 
"<span class=\"ts\"/>{0x10, \"Management protocol out\"},", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAINT_OUT_SZ\">MAINT_OUT_SZ</a> <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#maint_out_arr\">maint_out_arr</a>)", 
"", 
"static const struct <a class=\"id\" href=\"#value_name_pair\">value_name_pair</a> <a class=\"id\" href=\"#serv_in12_arr\">serv_in12_arr</a>[] = {", 
"<span class=\"ts\"/>{0x1, \"Read media serial number\"},", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERV_IN12_SZ\">SERV_IN12_SZ</a> <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#serv_in12_arr\">serv_in12_arr</a>)", 
"", 
"static const struct <a class=\"id\" href=\"#value_name_pair\">value_name_pair</a> <a class=\"id\" href=\"#serv_out12_arr\">serv_out12_arr</a>[] = {", 
"<span class=\"ts\"/>{-1, \"dummy entry\"},", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERV_OUT12_SZ\">SERV_OUT12_SZ</a> <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#serv_out12_arr\">serv_out12_arr</a>)", 
"", 
"static const struct <a class=\"id\" href=\"#value_name_pair\">value_name_pair</a> <a class=\"id\" href=\"#serv_in16_arr\">serv_in16_arr</a>[] = {", 
"<span class=\"ts\"/>{0x10, \"Read capacity(16)\"},", 
"<span class=\"ts\"/>{0x11, \"Read long(16)\"},", 
"<span class=\"ts\"/>{0x12, \"Get LBA status\"},", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERV_IN16_SZ\">SERV_IN16_SZ</a> <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#serv_in16_arr\">serv_in16_arr</a>)", 
"", 
"static const struct <a class=\"id\" href=\"#value_name_pair\">value_name_pair</a> <a class=\"id\" href=\"#serv_out16_arr\">serv_out16_arr</a>[] = {", 
"<span class=\"ts\"/>{0x11, \"Write long(16)\"},", 
"<span class=\"ts\"/>{0x1f, \"Notify data transfer device(16)\"},", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERV_OUT16_SZ\">SERV_OUT16_SZ</a> <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#serv_out16_arr\">serv_out16_arr</a>)", 
"", 
"static const struct <a class=\"id\" href=\"#value_name_pair\">value_name_pair</a> <a class=\"id\" href=\"#variable_length_arr\">variable_length_arr</a>[] = {", 
"<span class=\"ts\"/>{0x1, \"Rebuild(32)\"},", 
"<span class=\"ts\"/>{0x2, \"Regenerate(32)\"},", 
"<span class=\"ts\"/>{0x3, \"Xdread(32)\"},", 
"<span class=\"ts\"/>{0x4, \"Xdwrite(32)\"},", 
"<span class=\"ts\"/>{0x5, \"Xdwrite extended(32)\"},", 
"<span class=\"ts\"/>{0x6, \"Xpwrite(32)\"},", 
"<span class=\"ts\"/>{0x7, \"Xdwriteread(32)\"},", 
"<span class=\"ts\"/>{0x8, \"Xdwrite extended(64)\"},", 
"<span class=\"ts\"/>{0x9, \"Read(32)\"},", 
"<span class=\"ts\"/>{0xa, \"Verify(32)\"},", 
"<span class=\"ts\"/>{0xb, \"Write(32)\"},", 
"<span class=\"ts\"/>{0xc, \"Write an verify(32)\"},", 
"<span class=\"ts\"/>{0xd, \"Write same(32)\"},", 
"<span class=\"ts\"/>{0x8801, \"Format OSD\"},", 
"<span class=\"ts\"/>{0x8802, \"Create (osd)\"},", 
"<span class=\"ts\"/>{0x8803, \"List (osd)\"},", 
"<span class=\"ts\"/>{0x8805, \"Read (osd)\"},", 
"<span class=\"ts\"/>{0x8806, \"Write (osd)\"},", 
"<span class=\"ts\"/>{0x8807, \"Append (osd)\"},", 
"<span class=\"ts\"/>{0x8808, \"Flush (osd)\"},", 
"<span class=\"ts\"/>{0x880a, \"Remove (osd)\"},", 
"<span class=\"ts\"/>{0x880b, \"Create partition (osd)\"},", 
"<span class=\"ts\"/>{0x880c, \"Remove partition (osd)\"},", 
"<span class=\"ts\"/>{0x880e, \"Get attributes (osd)\"},", 
"<span class=\"ts\"/>{0x880f, \"Set attributes (osd)\"},", 
"<span class=\"ts\"/>{0x8812, \"Create and write (osd)\"},", 
"<span class=\"ts\"/>{0x8815, \"Create collection (osd)\"},", 
"<span class=\"ts\"/>{0x8816, \"Remove collection (osd)\"},", 
"<span class=\"ts\"/>{0x8817, \"List collection (osd)\"},", 
"<span class=\"ts\"/>{0x8818, \"Set key (osd)\"},", 
"<span class=\"ts\"/>{0x8819, \"Set master key (osd)\"},", 
"<span class=\"ts\"/>{0x881a, \"Flush collection (osd)\"},", 
"<span class=\"ts\"/>{0x881b, \"Flush partition (osd)\"},", 
"<span class=\"ts\"/>{0x881c, \"Flush OSD\"},", 
"<span class=\"ts\"/>{0x8f7e, \"Perform SCSI command (osd)\"},", 
"<span class=\"ts\"/>{0x8f7f, \"Perform task management function (osd)\"},", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VARIABLE_LENGTH_SZ\">VARIABLE_LENGTH_SZ</a> <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#variable_length_arr\">variable_length_arr</a>)", 
"", 
"static const char * <a class=\"id\" href=\"#get_sa_name\">get_sa_name</a>(const struct <a class=\"id\" href=\"#value_name_pair\">value_name_pair</a> * <a class=\"id\" href=\"#arr\">arr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>        int <a class=\"id\" href=\"#arr_sz\">arr_sz</a>, int <a class=\"id\" href=\"#service_action\">service_action</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#arr_sz\">arr_sz</a>; ++<a class=\"id\" href=\"#k\">k</a>, ++<a class=\"id\" href=\"#arr\">arr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#service_action\">service_action</a> == <a class=\"id\" href=\"#arr\">arr</a>-><a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#arr_sz\">arr_sz</a>) ? <a class=\"id\" href=\"#arr\">arr</a>-><a class=\"id\" href=\"#name\">name</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* attempt to guess cdb length if cdb_len==0 . No trailing linefeed. */</span>", 
"static void <a class=\"id\" href=\"#print_opcode_name\">print_opcode_name</a>(unsigned char * <a class=\"id\" href=\"#cdbp\">cdbp</a>, int <a class=\"id\" href=\"#cdb_len\">cdb_len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sa\">sa</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#cdb0\">cdb0</a>;", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#name\">name</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdb0\">cdb0</a> = <a class=\"id\" href=\"#cdbp\">cdbp</a>[0];", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#cdb0\">cdb0</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VARIABLE_LENGTH_CMD\">VARIABLE_LENGTH_CMD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#scsi_varlen_cdb_length\">scsi_varlen_cdb_length</a>(<a class=\"id\" href=\"#cdbp\">cdbp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"short variable length command, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"len=%d ext_len=%d\", <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#cdb_len\">cdb_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = (<a class=\"id\" href=\"#cdbp\">cdbp</a>[8] << 8) + <a class=\"id\" href=\"#cdbp\">cdbp</a>[9];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#get_sa_name\">get_sa_name</a>(<a class=\"id\" href=\"#variable_length_arr\">variable_length_arr</a>, <a class=\"id\" href=\"#VARIABLE_LENGTH_SZ\">VARIABLE_LENGTH_SZ</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x, sa=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#cdb_len\">cdb_len</a> &gt; 0) && (<a class=\"id\" href=\"#len\">len</a> != <a class=\"id\" href=\"#cdb_len\">cdb_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\", in_cdb_len=%d, ext_len=%d\", <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#cdb_len\">cdb_len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MAINTENANCE_IN\">MAINTENANCE_IN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = <a class=\"id\" href=\"#cdbp\">cdbp</a>[1] &amp; 0x1f;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#get_sa_name\">get_sa_name</a>(<a class=\"id\" href=\"#maint_in_arr\">maint_in_arr</a>, <a class=\"id\" href=\"#MAINT_IN_SZ\">MAINT_IN_SZ</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x, sa=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MAINTENANCE_OUT\">MAINTENANCE_OUT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = <a class=\"id\" href=\"#cdbp\">cdbp</a>[1] &amp; 0x1f;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#get_sa_name\">get_sa_name</a>(<a class=\"id\" href=\"#maint_out_arr\">maint_out_arr</a>, <a class=\"id\" href=\"#MAINT_OUT_SZ\">MAINT_OUT_SZ</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x, sa=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SERVICE_ACTION_IN_12\">SERVICE_ACTION_IN_12</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = <a class=\"id\" href=\"#cdbp\">cdbp</a>[1] &amp; 0x1f;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#get_sa_name\">get_sa_name</a>(<a class=\"id\" href=\"#serv_in12_arr\">serv_in12_arr</a>, <a class=\"id\" href=\"#SERV_IN12_SZ\">SERV_IN12_SZ</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x, sa=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SERVICE_ACTION_OUT_12\">SERVICE_ACTION_OUT_12</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = <a class=\"id\" href=\"#cdbp\">cdbp</a>[1] &amp; 0x1f;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#get_sa_name\">get_sa_name</a>(<a class=\"id\" href=\"#serv_out12_arr\">serv_out12_arr</a>, <a class=\"id\" href=\"#SERV_OUT12_SZ\">SERV_OUT12_SZ</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x, sa=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SERVICE_ACTION_IN_16\">SERVICE_ACTION_IN_16</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = <a class=\"id\" href=\"#cdbp\">cdbp</a>[1] &amp; 0x1f;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#get_sa_name\">get_sa_name</a>(<a class=\"id\" href=\"#serv_in16_arr\">serv_in16_arr</a>, <a class=\"id\" href=\"#SERV_IN16_SZ\">SERV_IN16_SZ</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x, sa=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SERVICE_ACTION_OUT_16\">SERVICE_ACTION_OUT_16</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = <a class=\"id\" href=\"#cdbp\">cdbp</a>[1] &amp; 0x1f;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#get_sa_name\">get_sa_name</a>(<a class=\"id\" href=\"#serv_out16_arr\">serv_out16_arr</a>, <a class=\"id\" href=\"#SERV_OUT16_SZ\">SERV_OUT16_SZ</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x, sa=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cdb0\">cdb0</a> &lt; 0xc0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#cdb_byte0_names\">cdb_byte0_names</a>[<a class=\"id\" href=\"#cdb0\">cdb0</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x (reserved)\", <a class=\"id\" href=\"#cdb0\">cdb0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x (vendor)\", <a class=\"id\" href=\"#cdb0\">cdb0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#else <span class=\"comment\">/* ifndef CONFIG_SCSI_CONSTANTS */</span>", 
"", 
"static void <a class=\"id\" href=\"#print_opcode_name\">print_opcode_name</a>(unsigned char * <a class=\"id\" href=\"#cdbp\">cdbp</a>, int <a class=\"id\" href=\"#cdb_len\">cdb_len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sa\">sa</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#cdb0\">cdb0</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdb0\">cdb0</a> = <a class=\"id\" href=\"#cdbp\">cdbp</a>[0];", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#cdb0\">cdb0</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VARIABLE_LENGTH_CMD\">VARIABLE_LENGTH_CMD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#scsi_varlen_cdb_length\">scsi_varlen_cdb_length</a>(<a class=\"id\" href=\"#cdbp\">cdbp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"short opcode=0x%x command, len=%d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"ext_len=%d\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#cdb_len\">cdb_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = (<a class=\"id\" href=\"#cdbp\">cdbp</a>[8] << 8) + <a class=\"id\" href=\"#cdbp\">cdbp</a>[9];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x, sa=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> != <a class=\"id\" href=\"#cdb_len\">cdb_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\", in_cdb_len=%d, ext_len=%d\", <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#cdb_len\">cdb_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MAINTENANCE_IN\">MAINTENANCE_IN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MAINTENANCE_OUT\">MAINTENANCE_OUT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SERVICE_ACTION_IN_12\">SERVICE_ACTION_IN_12</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SERVICE_ACTION_OUT_12\">SERVICE_ACTION_OUT_12</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SERVICE_ACTION_IN_16\">SERVICE_ACTION_IN_16</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SERVICE_ACTION_OUT_16\">SERVICE_ACTION_OUT_16</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = <a class=\"id\" href=\"#cdbp\">cdbp</a>[1] &amp; 0x1f;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x, sa=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cdb0\">cdb0</a> &lt; 0xc0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x\", <a class=\"id\" href=\"#cdb0\">cdb0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cdb[0]=0x%x (vendor)\", <a class=\"id\" href=\"#cdb0\">cdb0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>  ", 
"", 
"void <a class=\"id\" href=\"#__scsi_print_command\">__scsi_print_command</a>(unsigned char *<a class=\"id\" href=\"#cdb\">cdb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_opcode_name\">print_opcode_name</a>(<a class=\"id\" href=\"#cdb\">cdb</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#scsi_command_size\">scsi_command_size</a>(<a class=\"id\" href=\"#cdb\">cdb</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* print out all bytes in cdb */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#len\">len</a>; ++<a class=\"id\" href=\"#k\">k</a>) ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" %02x\", <a class=\"id\" href=\"#cdb\">cdb</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__scsi_print_command\">__scsi_print_command</a>);", 
"", 
"void <a class=\"id\" href=\"#scsi_print_command\">scsi_print_command</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, \"CDB: \");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_opcode_name\">print_opcode_name</a>(<a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>, <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* print out all bytes in cdb */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\":\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>; ++<a class=\"id\" href=\"#k\">k</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" %02x\", <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_print_command\">scsi_print_command</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>scsi_print_status - print scsi status description</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@scsi_status: scsi status value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If the status is recognized, the description is printed.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Otherwise \"Unknown status\" is output. No trailing space.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If CONFIG_SCSI_CONSTANTS is not set, then print status in hex</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(e.g. \"0x2\" for Check Condition).</span>", 
"<span class=\"comment\"> **/</span>", 
"void", 
"<a class=\"id\" href=\"#scsi_print_status\">scsi_print_status</a>(unsigned char <a class=\"id\" href=\"#scsi_status\">scsi_status</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_CONSTANTS\">CONFIG_SCSI_CONSTANTS</a>", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#ccp\">ccp</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#scsi_status\">scsi_status</a>) {", 
"<span class=\"ts\"/>case 0:    <a class=\"id\" href=\"#ccp\">ccp</a> = \"Good\"; break;", 
"<span class=\"ts\"/>case 0x2:  <a class=\"id\" href=\"#ccp\">ccp</a> = \"Check Condition\"; break;", 
"<span class=\"ts\"/>case 0x4:  <a class=\"id\" href=\"#ccp\">ccp</a> = \"Condition Met\"; break;", 
"<span class=\"ts\"/>case 0x8:  <a class=\"id\" href=\"#ccp\">ccp</a> = \"Busy\"; break;", 
"<span class=\"ts\"/>case 0x10: <a class=\"id\" href=\"#ccp\">ccp</a> = \"Intermediate\"; break;", 
"<span class=\"ts\"/>case 0x14: <a class=\"id\" href=\"#ccp\">ccp</a> = \"Intermediate-Condition Met\"; break;", 
"<span class=\"ts\"/>case 0x18: <a class=\"id\" href=\"#ccp\">ccp</a> = \"Reservation Conflict\"; break;", 
"<span class=\"ts\"/>case 0x22: <a class=\"id\" href=\"#ccp\">ccp</a> = \"Command Terminated\"; break;<span class=\"ts\"/><span class=\"comment\">/* obsolete */</span>", 
"<span class=\"ts\"/>case 0x28: <a class=\"id\" href=\"#ccp\">ccp</a> = \"Task set Full\"; break;<span class=\"ts\"/><span class=\"comment\">/* was: Queue Full */</span>", 
"<span class=\"ts\"/>case 0x30: <a class=\"id\" href=\"#ccp\">ccp</a> = \"ACA Active\"; break;", 
"<span class=\"ts\"/>case 0x40: <a class=\"id\" href=\"#ccp\">ccp</a> = \"Task Aborted\"; break;", 
"<span class=\"ts\"/>default:   <a class=\"id\" href=\"#ccp\">ccp</a> = \"Unknown status\";", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s\", <a class=\"id\" href=\"#ccp\">ccp</a>);", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"0x%0x\", <a class=\"id\" href=\"#scsi_status\">scsi_status</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_print_status\">scsi_print_status</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_CONSTANTS\">CONFIG_SCSI_CONSTANTS</a>", 
"", 
"struct <a class=\"id\" href=\"#error_info\">error_info</a> {", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#code12\">code12</a>;<span class=\"ts\"/><span class=\"comment\">/* 0x0302 looks better than 0x03,0x02 */</span>", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#text\">text</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The canonical list of T10 Additional Sense Codes is available at:</span>", 
"<span class=\"comment\"> * http://www.t10.org/lists/asc-num.txt</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#error_info\">error_info</a> <a class=\"id\" href=\"#additional\">additional</a>[] =", 
"{", 
"<span class=\"ts\"/>{0x0000, \"No additional sense information\"},", 
"<span class=\"ts\"/>{0x0001, \"Filemark detected\"},", 
"<span class=\"ts\"/>{0x0002, \"End-of-partition/medium detected\"},", 
"<span class=\"ts\"/>{0x0003, \"Setmark detected\"},", 
"<span class=\"ts\"/>{0x0004, \"Beginning-of-partition/medium detected\"},", 
"<span class=\"ts\"/>{0x0005, \"End-of-data detected\"},", 
"<span class=\"ts\"/>{0x0006, \"I/O process terminated\"},", 
"<span class=\"ts\"/>{0x0007, \"Programmable early warning detected\"},", 
"<span class=\"ts\"/>{0x0011, \"Audio play operation in progress\"},", 
"<span class=\"ts\"/>{0x0012, \"Audio play operation paused\"},", 
"<span class=\"ts\"/>{0x0013, \"Audio play operation successfully completed\"},", 
"<span class=\"ts\"/>{0x0014, \"Audio play operation stopped due to error\"},", 
"<span class=\"ts\"/>{0x0015, \"No current audio status to return\"},", 
"<span class=\"ts\"/>{0x0016, \"Operation in progress\"},", 
"<span class=\"ts\"/>{0x0017, \"Cleaning requested\"},", 
"<span class=\"ts\"/>{0x0018, \"Erase operation in progress\"},", 
"<span class=\"ts\"/>{0x0019, \"Locate operation in progress\"},", 
"<span class=\"ts\"/>{0x001A, \"Rewind operation in progress\"},", 
"<span class=\"ts\"/>{0x001B, \"Set capacity operation in progress\"},", 
"<span class=\"ts\"/>{0x001C, \"Verify operation in progress\"},", 
"<span class=\"ts\"/>{0x001D, \"ATA pass through information available\"},", 
"<span class=\"ts\"/>{0x001E, \"Conflicting SA creation request\"},", 
"", 
"<span class=\"ts\"/>{0x0100, \"No index/sector signal\"},", 
"", 
"<span class=\"ts\"/>{0x0200, \"No seek complete\"},", 
"", 
"<span class=\"ts\"/>{0x0300, \"Peripheral device write fault\"},", 
"<span class=\"ts\"/>{0x0301, \"No write current\"},", 
"<span class=\"ts\"/>{0x0302, \"Excessive write errors\"},", 
"", 
"<span class=\"ts\"/>{0x0400, \"Logical unit not ready, cause not reportable\"},", 
"<span class=\"ts\"/>{0x0401, \"Logical unit is in process of becoming ready\"},", 
"<span class=\"ts\"/>{0x0402, \"Logical unit not ready, initializing command required\"},", 
"<span class=\"ts\"/>{0x0403, \"Logical unit not ready, manual intervention required\"},", 
"<span class=\"ts\"/>{0x0404, \"Logical unit not ready, format in progress\"},", 
"<span class=\"ts\"/>{0x0405, \"Logical unit not ready, rebuild in progress\"},", 
"<span class=\"ts\"/>{0x0406, \"Logical unit not ready, recalculation in progress\"},", 
"<span class=\"ts\"/>{0x0407, \"Logical unit not ready, operation in progress\"},", 
"<span class=\"ts\"/>{0x0408, \"Logical unit not ready, long write in progress\"},", 
"<span class=\"ts\"/>{0x0409, \"Logical unit not ready, self-test in progress\"},", 
"<span class=\"ts\"/>{0x040A, \"Logical unit not accessible, asymmetric access state \"", 
"<span class=\"ts\"/> \"transition\"},", 
"<span class=\"ts\"/>{0x040B, \"Logical unit not accessible, target port in standby state\"},", 
"<span class=\"ts\"/>{0x040C, \"Logical unit not accessible, target port in unavailable \"", 
"<span class=\"ts\"/> \"state\"},", 
"<span class=\"ts\"/>{0x040D, \"Logical unit not ready, structure check required\"},", 
"<span class=\"ts\"/>{0x0410, \"Logical unit not ready, auxiliary memory not accessible\"},", 
"<span class=\"ts\"/>{0x0411, \"Logical unit not ready, notify (enable spinup) required\"},", 
"<span class=\"ts\"/>{0x0412, \"Logical unit not ready, offline\"},", 
"<span class=\"ts\"/>{0x0413, \"Logical unit not ready, SA creation in progress\"},", 
"<span class=\"ts\"/>{0x0414, \"Logical unit not ready, space allocation in progress\"},", 
"", 
"<span class=\"ts\"/>{0x0500, \"Logical unit does not respond to selection\"},", 
"", 
"<span class=\"ts\"/>{0x0600, \"No reference position found\"},", 
"", 
"<span class=\"ts\"/>{0x0700, \"Multiple peripheral devices selected\"},", 
"", 
"<span class=\"ts\"/>{0x0800, \"Logical unit communication failure\"},", 
"<span class=\"ts\"/>{0x0801, \"Logical unit communication time-out\"},", 
"<span class=\"ts\"/>{0x0802, \"Logical unit communication parity error\"},", 
"<span class=\"ts\"/>{0x0803, \"Logical unit communication CRC error (Ultra-DMA/32)\"},", 
"<span class=\"ts\"/>{0x0804, \"Unreachable copy target\"},", 
"", 
"<span class=\"ts\"/>{0x0900, \"Track following error\"},", 
"<span class=\"ts\"/>{0x0901, \"Tracking servo failure\"},", 
"<span class=\"ts\"/>{0x0902, \"Focus servo failure\"},", 
"<span class=\"ts\"/>{0x0903, \"Spindle servo failure\"},", 
"<span class=\"ts\"/>{0x0904, \"Head select fault\"},", 
"", 
"<span class=\"ts\"/>{0x0A00, \"Error log overflow\"},", 
"", 
"<span class=\"ts\"/>{0x0B00, \"Warning\"},", 
"<span class=\"ts\"/>{0x0B01, \"Warning - specified temperature exceeded\"},", 
"<span class=\"ts\"/>{0x0B02, \"Warning - enclosure degraded\"},", 
"<span class=\"ts\"/>{0x0B03, \"Warning - background self-test failed\"},", 
"<span class=\"ts\"/>{0x0B04, \"Warning - background pre-scan detected medium error\"},", 
"<span class=\"ts\"/>{0x0B05, \"Warning - background medium scan detected medium error\"},", 
"<span class=\"ts\"/>{0x0B06, \"Warning - non-volatile cache now volatile\"},", 
"<span class=\"ts\"/>{0x0B07, \"Warning - degraded power to non-volatile cache\"},", 
"<span class=\"ts\"/>{0x0B08, \"Warning - power loss expected\"},", 
"", 
"<span class=\"ts\"/>{0x0C00, \"Write error\"},", 
"<span class=\"ts\"/>{0x0C01, \"Write error - recovered with auto reallocation\"},", 
"<span class=\"ts\"/>{0x0C02, \"Write error - auto reallocation failed\"},", 
"<span class=\"ts\"/>{0x0C03, \"Write error - recommend reassignment\"},", 
"<span class=\"ts\"/>{0x0C04, \"Compression check miscompare error\"},", 
"<span class=\"ts\"/>{0x0C05, \"Data expansion occurred during compression\"},", 
"<span class=\"ts\"/>{0x0C06, \"Block not compressible\"},", 
"<span class=\"ts\"/>{0x0C07, \"Write error - recovery needed\"},", 
"<span class=\"ts\"/>{0x0C08, \"Write error - recovery failed\"},", 
"<span class=\"ts\"/>{0x0C09, \"Write error - loss of streaming\"},", 
"<span class=\"ts\"/>{0x0C0A, \"Write error - padding blocks added\"},", 
"<span class=\"ts\"/>{0x0C0B, \"Auxiliary memory write error\"},", 
"<span class=\"ts\"/>{0x0C0C, \"Write error - unexpected unsolicited data\"},", 
"<span class=\"ts\"/>{0x0C0D, \"Write error - not enough unsolicited data\"},", 
"<span class=\"ts\"/>{0x0C0F, \"Defects in error window\"},", 
"", 
"<span class=\"ts\"/>{0x0D00, \"Error detected by third party temporary initiator\"},", 
"<span class=\"ts\"/>{0x0D01, \"Third party device failure\"},", 
"<span class=\"ts\"/>{0x0D02, \"Copy target device not reachable\"},", 
"<span class=\"ts\"/>{0x0D03, \"Incorrect copy target device type\"},", 
"<span class=\"ts\"/>{0x0D04, \"Copy target device data underrun\"},", 
"<span class=\"ts\"/>{0x0D05, \"Copy target device data overrun\"},", 
"", 
"<span class=\"ts\"/>{0x0E00, \"Invalid information unit\"},", 
"<span class=\"ts\"/>{0x0E01, \"Information unit too short\"},", 
"<span class=\"ts\"/>{0x0E02, \"Information unit too long\"},", 
"<span class=\"ts\"/>{0x0E03, \"Invalid field in command information unit\"},", 
"", 
"<span class=\"ts\"/>{0x1000, \"Id CRC or ECC error\"},", 
"<span class=\"ts\"/>{0x1001, \"Logical block guard check failed\"},", 
"<span class=\"ts\"/>{0x1002, \"Logical block application tag check failed\"},", 
"<span class=\"ts\"/>{0x1003, \"Logical block reference tag check failed\"},", 
"", 
"<span class=\"ts\"/>{0x1100, \"Unrecovered read error\"},", 
"<span class=\"ts\"/>{0x1101, \"Read retries exhausted\"},", 
"<span class=\"ts\"/>{0x1102, \"Error too long to correct\"},", 
"<span class=\"ts\"/>{0x1103, \"Multiple read errors\"},", 
"<span class=\"ts\"/>{0x1104, \"Unrecovered read error - auto reallocate failed\"},", 
"<span class=\"ts\"/>{0x1105, \"L-EC uncorrectable error\"},", 
"<span class=\"ts\"/>{0x1106, \"CIRC unrecovered error\"},", 
"<span class=\"ts\"/>{0x1107, \"Data re-synchronization error\"},", 
"<span class=\"ts\"/>{0x1108, \"Incomplete block read\"},", 
"<span class=\"ts\"/>{0x1109, \"No gap found\"},", 
"<span class=\"ts\"/>{0x110A, \"Miscorrected error\"},", 
"<span class=\"ts\"/>{0x110B, \"Unrecovered read error - recommend reassignment\"},", 
"<span class=\"ts\"/>{0x110C, \"Unrecovered read error - recommend rewrite the data\"},", 
"<span class=\"ts\"/>{0x110D, \"De-compression CRC error\"},", 
"<span class=\"ts\"/>{0x110E, \"Cannot decompress using declared algorithm\"},", 
"<span class=\"ts\"/>{0x110F, \"Error reading UPC/EAN number\"},", 
"<span class=\"ts\"/>{0x1110, \"Error reading ISRC number\"},", 
"<span class=\"ts\"/>{0x1111, \"Read error - loss of streaming\"},", 
"<span class=\"ts\"/>{0x1112, \"Auxiliary memory read error\"},", 
"<span class=\"ts\"/>{0x1113, \"Read error - failed retransmission request\"},", 
"<span class=\"ts\"/>{0x1114, \"Read error - lba marked bad by application client\"},", 
"", 
"<span class=\"ts\"/>{0x1200, \"Address mark not found for id field\"},", 
"", 
"<span class=\"ts\"/>{0x1300, \"Address mark not found for data field\"},", 
"", 
"<span class=\"ts\"/>{0x1400, \"Recorded entity not found\"},", 
"<span class=\"ts\"/>{0x1401, \"Record not found\"},", 
"<span class=\"ts\"/>{0x1402, \"Filemark or setmark not found\"},", 
"<span class=\"ts\"/>{0x1403, \"End-of-data not found\"},", 
"<span class=\"ts\"/>{0x1404, \"Block sequence error\"},", 
"<span class=\"ts\"/>{0x1405, \"Record not found - recommend reassignment\"},", 
"<span class=\"ts\"/>{0x1406, \"Record not found - data auto-reallocated\"},", 
"<span class=\"ts\"/>{0x1407, \"Locate operation failure\"},", 
"", 
"<span class=\"ts\"/>{0x1500, \"Random positioning error\"},", 
"<span class=\"ts\"/>{0x1501, \"Mechanical positioning error\"},", 
"<span class=\"ts\"/>{0x1502, \"Positioning error detected by read of medium\"},", 
"", 
"<span class=\"ts\"/>{0x1600, \"Data synchronization mark error\"},", 
"<span class=\"ts\"/>{0x1601, \"Data sync error - data rewritten\"},", 
"<span class=\"ts\"/>{0x1602, \"Data sync error - recommend rewrite\"},", 
"<span class=\"ts\"/>{0x1603, \"Data sync error - data auto-reallocated\"},", 
"<span class=\"ts\"/>{0x1604, \"Data sync error - recommend reassignment\"},", 
"", 
"<span class=\"ts\"/>{0x1700, \"Recovered data with no error correction applied\"},", 
"<span class=\"ts\"/>{0x1701, \"Recovered data with retries\"},", 
"<span class=\"ts\"/>{0x1702, \"Recovered data with positive head offset\"},", 
"<span class=\"ts\"/>{0x1703, \"Recovered data with negative head offset\"},", 
"<span class=\"ts\"/>{0x1704, \"Recovered data with retries and/or circ applied\"},", 
"<span class=\"ts\"/>{0x1705, \"Recovered data using previous sector id\"},", 
"<span class=\"ts\"/>{0x1706, \"Recovered data without ECC - data auto-reallocated\"},", 
"<span class=\"ts\"/>{0x1707, \"Recovered data without ECC - recommend reassignment\"},", 
"<span class=\"ts\"/>{0x1708, \"Recovered data without ECC - recommend rewrite\"},", 
"<span class=\"ts\"/>{0x1709, \"Recovered data without ECC - data rewritten\"},", 
"", 
"<span class=\"ts\"/>{0x1800, \"Recovered data with error correction applied\"},", 
"<span class=\"ts\"/>{0x1801, \"Recovered data with error corr. & retries applied\"},", 
"<span class=\"ts\"/>{0x1802, \"Recovered data - data auto-reallocated\"},", 
"<span class=\"ts\"/>{0x1803, \"Recovered data with CIRC\"},", 
"<span class=\"ts\"/>{0x1804, \"Recovered data with L-EC\"},", 
"<span class=\"ts\"/>{0x1805, \"Recovered data - recommend reassignment\"},", 
"<span class=\"ts\"/>{0x1806, \"Recovered data - recommend rewrite\"},", 
"<span class=\"ts\"/>{0x1807, \"Recovered data with ECC - data rewritten\"},", 
"<span class=\"ts\"/>{0x1808, \"Recovered data with linking\"},", 
"", 
"<span class=\"ts\"/>{0x1900, \"Defect list error\"},", 
"<span class=\"ts\"/>{0x1901, \"Defect list not available\"},", 
"<span class=\"ts\"/>{0x1902, \"Defect list error in primary list\"},", 
"<span class=\"ts\"/>{0x1903, \"Defect list error in grown list\"},", 
"", 
"<span class=\"ts\"/>{0x1A00, \"Parameter list length error\"},", 
"", 
"<span class=\"ts\"/>{0x1B00, \"Synchronous data transfer error\"},", 
"", 
"<span class=\"ts\"/>{0x1C00, \"Defect list not found\"},", 
"<span class=\"ts\"/>{0x1C01, \"Primary defect list not found\"},", 
"<span class=\"ts\"/>{0x1C02, \"Grown defect list not found\"},", 
"", 
"<span class=\"ts\"/>{0x1D00, \"Miscompare during verify operation\"},", 
"<span class=\"ts\"/>{0x1D01, \"Miscompare verify of unmapped LBA\"},", 
"", 
"<span class=\"ts\"/>{0x1E00, \"Recovered id with ECC correction\"},", 
"", 
"<span class=\"ts\"/>{0x1F00, \"Partial defect list transfer\"},", 
"", 
"<span class=\"ts\"/>{0x2000, \"Invalid command operation code\"},", 
"<span class=\"ts\"/>{0x2001, \"Access denied - initiator pending-enrolled\"},", 
"<span class=\"ts\"/>{0x2002, \"Access denied - no access rights\"},", 
"<span class=\"ts\"/>{0x2003, \"Access denied - invalid mgmt id key\"},", 
"<span class=\"ts\"/>{0x2004, \"Illegal command while in write capable state\"},", 
"<span class=\"ts\"/>{0x2005, \"Obsolete\"},", 
"<span class=\"ts\"/>{0x2006, \"Illegal command while in explicit address mode\"},", 
"<span class=\"ts\"/>{0x2007, \"Illegal command while in implicit address mode\"},", 
"<span class=\"ts\"/>{0x2008, \"Access denied - enrollment conflict\"},", 
"<span class=\"ts\"/>{0x2009, \"Access denied - invalid LU identifier\"},", 
"<span class=\"ts\"/>{0x200A, \"Access denied - invalid proxy token\"},", 
"<span class=\"ts\"/>{0x200B, \"Access denied - ACL LUN conflict\"},", 
"", 
"<span class=\"ts\"/>{0x2100, \"Logical block address out of range\"},", 
"<span class=\"ts\"/>{0x2101, \"Invalid element address\"},", 
"<span class=\"ts\"/>{0x2102, \"Invalid address for write\"},", 
"<span class=\"ts\"/>{0x2103, \"Invalid write crossing layer jump\"},", 
"", 
"<span class=\"ts\"/>{0x2200, \"Illegal function (use 20 00, 24 00, or 26 00)\"},", 
"", 
"<span class=\"ts\"/>{0x2400, \"Invalid field in cdb\"},", 
"<span class=\"ts\"/>{0x2401, \"CDB decryption error\"},", 
"<span class=\"ts\"/>{0x2402, \"Obsolete\"},", 
"<span class=\"ts\"/>{0x2403, \"Obsolete\"},", 
"<span class=\"ts\"/>{0x2404, \"Security audit value frozen\"},", 
"<span class=\"ts\"/>{0x2405, \"Security working key frozen\"},", 
"<span class=\"ts\"/>{0x2406, \"Nonce not unique\"},", 
"<span class=\"ts\"/>{0x2407, \"Nonce timestamp out of range\"},", 
"<span class=\"ts\"/>{0x2408, \"Invalid XCDB\"},", 
"", 
"<span class=\"ts\"/>{0x2500, \"Logical unit not supported\"},", 
"", 
"<span class=\"ts\"/>{0x2600, \"Invalid field in parameter list\"},", 
"<span class=\"ts\"/>{0x2601, \"Parameter not supported\"},", 
"<span class=\"ts\"/>{0x2602, \"Parameter value invalid\"},", 
"<span class=\"ts\"/>{0x2603, \"Threshold parameters not supported\"},", 
"<span class=\"ts\"/>{0x2604, \"Invalid release of persistent reservation\"},", 
"<span class=\"ts\"/>{0x2605, \"Data decryption error\"},", 
"<span class=\"ts\"/>{0x2606, \"Too many target descriptors\"},", 
"<span class=\"ts\"/>{0x2607, \"Unsupported target descriptor type code\"},", 
"<span class=\"ts\"/>{0x2608, \"Too many segment descriptors\"},", 
"<span class=\"ts\"/>{0x2609, \"Unsupported segment descriptor type code\"},", 
"<span class=\"ts\"/>{0x260A, \"Unexpected inexact segment\"},", 
"<span class=\"ts\"/>{0x260B, \"Inline data length exceeded\"},", 
"<span class=\"ts\"/>{0x260C, \"Invalid operation for copy source or destination\"},", 
"<span class=\"ts\"/>{0x260D, \"Copy segment granularity violation\"},", 
"<span class=\"ts\"/>{0x260E, \"Invalid parameter while port is enabled\"},", 
"<span class=\"ts\"/>{0x260F, \"Invalid data-out buffer integrity check value\"},", 
"<span class=\"ts\"/>{0x2610, \"Data decryption key fail limit reached\"},", 
"<span class=\"ts\"/>{0x2611, \"Incomplete key-associated data set\"},", 
"<span class=\"ts\"/>{0x2612, \"Vendor specific key reference not found\"},", 
"", 
"<span class=\"ts\"/>{0x2700, \"Write protected\"},", 
"<span class=\"ts\"/>{0x2701, \"Hardware write protected\"},", 
"<span class=\"ts\"/>{0x2702, \"Logical unit software write protected\"},", 
"<span class=\"ts\"/>{0x2703, \"Associated write protect\"},", 
"<span class=\"ts\"/>{0x2704, \"Persistent write protect\"},", 
"<span class=\"ts\"/>{0x2705, \"Permanent write protect\"},", 
"<span class=\"ts\"/>{0x2706, \"Conditional write protect\"},", 
"<span class=\"ts\"/>{0x2707, \"Space allocation failed write protect\"},", 
"", 
"<span class=\"ts\"/>{0x2800, \"Not ready to ready change, medium may have changed\"},", 
"<span class=\"ts\"/>{0x2801, \"Import or export element accessed\"},", 
"<span class=\"ts\"/>{0x2802, \"Format-layer may have changed\"},", 
"<span class=\"ts\"/>{0x2803, \"Import/export element accessed, medium changed\"},", 
"", 
"<span class=\"ts\"/>{0x2900, \"Power on, reset, or bus device reset occurred\"},", 
"<span class=\"ts\"/>{0x2901, \"Power on occurred\"},", 
"<span class=\"ts\"/>{0x2902, \"Scsi bus reset occurred\"},", 
"<span class=\"ts\"/>{0x2903, \"Bus device reset function occurred\"},", 
"<span class=\"ts\"/>{0x2904, \"Device internal reset\"},", 
"<span class=\"ts\"/>{0x2905, \"Transceiver mode changed to single-ended\"},", 
"<span class=\"ts\"/>{0x2906, \"Transceiver mode changed to lvd\"},", 
"<span class=\"ts\"/>{0x2907, \"I_T nexus loss occurred\"},", 
"", 
"<span class=\"ts\"/>{0x2A00, \"Parameters changed\"},", 
"<span class=\"ts\"/>{0x2A01, \"Mode parameters changed\"},", 
"<span class=\"ts\"/>{0x2A02, \"Log parameters changed\"},", 
"<span class=\"ts\"/>{0x2A03, \"Reservations preempted\"},", 
"<span class=\"ts\"/>{0x2A04, \"Reservations released\"},", 
"<span class=\"ts\"/>{0x2A05, \"Registrations preempted\"},", 
"<span class=\"ts\"/>{0x2A06, \"Asymmetric access state changed\"},", 
"<span class=\"ts\"/>{0x2A07, \"Implicit asymmetric access state transition failed\"},", 
"<span class=\"ts\"/>{0x2A08, \"Priority changed\"},", 
"<span class=\"ts\"/>{0x2A09, \"Capacity data has changed\"},", 
"<span class=\"ts\"/>{0x2A0A, \"Error history I_T nexus cleared\"},", 
"<span class=\"ts\"/>{0x2A0B, \"Error history snapshot released\"},", 
"<span class=\"ts\"/>{0x2A0C, \"Error recovery attributes have changed\"},", 
"<span class=\"ts\"/>{0x2A0D, \"Data encryption capabilities changed\"},", 
"<span class=\"ts\"/>{0x2A10, \"Timestamp changed\"},", 
"<span class=\"ts\"/>{0x2A11, \"Data encryption parameters changed by another i_t nexus\"},", 
"<span class=\"ts\"/>{0x2A12, \"Data encryption parameters changed by vendor specific \"", 
"<span class=\"ts\"/><span class=\"ts\"/> \"event\"},", 
"<span class=\"ts\"/>{0x2A13, \"Data encryption key instance counter has changed\"},", 
"<span class=\"ts\"/>{0x2A14, \"SA creation capabilities data has changed\"},", 
"", 
"<span class=\"ts\"/>{0x2B00, \"Copy cannot execute since host cannot disconnect\"},", 
"", 
"<span class=\"ts\"/>{0x2C00, \"Command sequence error\"},", 
"<span class=\"ts\"/>{0x2C01, \"Too many windows specified\"},", 
"<span class=\"ts\"/>{0x2C02, \"Invalid combination of windows specified\"},", 
"<span class=\"ts\"/>{0x2C03, \"Current program area is not empty\"},", 
"<span class=\"ts\"/>{0x2C04, \"Current program area is empty\"},", 
"<span class=\"ts\"/>{0x2C05, \"Illegal power condition request\"},", 
"<span class=\"ts\"/>{0x2C06, \"Persistent prevent conflict\"},", 
"<span class=\"ts\"/>{0x2C07, \"Previous busy status\"},", 
"<span class=\"ts\"/>{0x2C08, \"Previous task set full status\"},", 
"<span class=\"ts\"/>{0x2C09, \"Previous reservation conflict status\"},", 
"<span class=\"ts\"/>{0x2C0A, \"Partition or collection contains user objects\"},", 
"<span class=\"ts\"/>{0x2C0B, \"Not reserved\"},", 
"", 
"<span class=\"ts\"/>{0x2D00, \"Overwrite error on update in place\"},", 
"", 
"<span class=\"ts\"/>{0x2E00, \"Insufficient time for operation\"},", 
"", 
"<span class=\"ts\"/>{0x2F00, \"Commands cleared by another initiator\"},", 
"<span class=\"ts\"/>{0x2F01, \"Commands cleared by power loss notification\"},", 
"<span class=\"ts\"/>{0x2F02, \"Commands cleared by device server\"},", 
"", 
"<span class=\"ts\"/>{0x3000, \"Incompatible medium installed\"},", 
"<span class=\"ts\"/>{0x3001, \"Cannot read medium - unknown format\"},", 
"<span class=\"ts\"/>{0x3002, \"Cannot read medium - incompatible format\"},", 
"<span class=\"ts\"/>{0x3003, \"Cleaning cartridge installed\"},", 
"<span class=\"ts\"/>{0x3004, \"Cannot write medium - unknown format\"},", 
"<span class=\"ts\"/>{0x3005, \"Cannot write medium - incompatible format\"},", 
"<span class=\"ts\"/>{0x3006, \"Cannot format medium - incompatible medium\"},", 
"<span class=\"ts\"/>{0x3007, \"Cleaning failure\"},", 
"<span class=\"ts\"/>{0x3008, \"Cannot write - application code mismatch\"},", 
"<span class=\"ts\"/>{0x3009, \"Current session not fixated for append\"},", 
"<span class=\"ts\"/>{0x300A, \"Cleaning request rejected\"},", 
"<span class=\"ts\"/>{0x300C, \"WORM medium - overwrite attempted\"},", 
"<span class=\"ts\"/>{0x300D, \"WORM medium - integrity check\"},", 
"<span class=\"ts\"/>{0x3010, \"Medium not formatted\"},", 
"<span class=\"ts\"/>{0x3011, \"Incompatible volume type\"},", 
"<span class=\"ts\"/>{0x3012, \"Incompatible volume qualifier\"},", 
"", 
"<span class=\"ts\"/>{0x3100, \"Medium format corrupted\"},", 
"<span class=\"ts\"/>{0x3101, \"Format command failed\"},", 
"<span class=\"ts\"/>{0x3102, \"Zoned formatting failed due to spare linking\"},", 
"", 
"<span class=\"ts\"/>{0x3200, \"No defect spare location available\"},", 
"<span class=\"ts\"/>{0x3201, \"Defect list update failure\"},", 
"", 
"<span class=\"ts\"/>{0x3300, \"Tape length error\"},", 
"", 
"<span class=\"ts\"/>{0x3400, \"Enclosure failure\"},", 
"", 
"<span class=\"ts\"/>{0x3500, \"Enclosure services failure\"},", 
"<span class=\"ts\"/>{0x3501, \"Unsupported enclosure function\"},", 
"<span class=\"ts\"/>{0x3502, \"Enclosure services unavailable\"},", 
"<span class=\"ts\"/>{0x3503, \"Enclosure services transfer failure\"},", 
"<span class=\"ts\"/>{0x3504, \"Enclosure services transfer refused\"},", 
"<span class=\"ts\"/>{0x3505, \"Enclosure services checksum error\"},", 
"", 
"<span class=\"ts\"/>{0x3600, \"Ribbon, ink, or toner failure\"},", 
"", 
"<span class=\"ts\"/>{0x3700, \"Rounded parameter\"},", 
"", 
"<span class=\"ts\"/>{0x3800, \"Event status notification\"},", 
"<span class=\"ts\"/>{0x3802, \"Esn - power management class event\"},", 
"<span class=\"ts\"/>{0x3804, \"Esn - media class event\"},", 
"<span class=\"ts\"/>{0x3806, \"Esn - device busy class event\"},", 
"", 
"<span class=\"ts\"/>{0x3900, \"Saving parameters not supported\"},", 
"", 
"<span class=\"ts\"/>{0x3A00, \"Medium not present\"},", 
"<span class=\"ts\"/>{0x3A01, \"Medium not present - tray closed\"},", 
"<span class=\"ts\"/>{0x3A02, \"Medium not present - tray open\"},", 
"<span class=\"ts\"/>{0x3A03, \"Medium not present - loadable\"},", 
"<span class=\"ts\"/>{0x3A04, \"Medium not present - medium auxiliary memory accessible\"},", 
"", 
"<span class=\"ts\"/>{0x3B00, \"Sequential positioning error\"},", 
"<span class=\"ts\"/>{0x3B01, \"Tape position error at beginning-of-medium\"},", 
"<span class=\"ts\"/>{0x3B02, \"Tape position error at end-of-medium\"},", 
"<span class=\"ts\"/>{0x3B03, \"Tape or electronic vertical forms unit not ready\"},", 
"<span class=\"ts\"/>{0x3B04, \"Slew failure\"},", 
"<span class=\"ts\"/>{0x3B05, \"Paper jam\"},", 
"<span class=\"ts\"/>{0x3B06, \"Failed to sense top-of-form\"},", 
"<span class=\"ts\"/>{0x3B07, \"Failed to sense bottom-of-form\"},", 
"<span class=\"ts\"/>{0x3B08, \"Reposition error\"},", 
"<span class=\"ts\"/>{0x3B09, \"Read past end of medium\"},", 
"<span class=\"ts\"/>{0x3B0A, \"Read past beginning of medium\"},", 
"<span class=\"ts\"/>{0x3B0B, \"Position past end of medium\"},", 
"<span class=\"ts\"/>{0x3B0C, \"Position past beginning of medium\"},", 
"<span class=\"ts\"/>{0x3B0D, \"Medium destination element full\"},", 
"<span class=\"ts\"/>{0x3B0E, \"Medium source element empty\"},", 
"<span class=\"ts\"/>{0x3B0F, \"End of medium reached\"},", 
"<span class=\"ts\"/>{0x3B11, \"Medium magazine not accessible\"},", 
"<span class=\"ts\"/>{0x3B12, \"Medium magazine removed\"},", 
"<span class=\"ts\"/>{0x3B13, \"Medium magazine inserted\"},", 
"<span class=\"ts\"/>{0x3B14, \"Medium magazine locked\"},", 
"<span class=\"ts\"/>{0x3B15, \"Medium magazine unlocked\"},", 
"<span class=\"ts\"/>{0x3B16, \"Mechanical positioning or changer error\"},", 
"<span class=\"ts\"/>{0x3B17, \"Read past end of user object\"},", 
"<span class=\"ts\"/>{0x3B18, \"Element disabled\"},", 
"<span class=\"ts\"/>{0x3B19, \"Element enabled\"},", 
"<span class=\"ts\"/>{0x3B1A, \"Data transfer device removed\"},", 
"<span class=\"ts\"/>{0x3B1B, \"Data transfer device inserted\"},", 
"", 
"<span class=\"ts\"/>{0x3D00, \"Invalid bits in identify message\"},", 
"", 
"<span class=\"ts\"/>{0x3E00, \"Logical unit has not self-configured yet\"},", 
"<span class=\"ts\"/>{0x3E01, \"Logical unit failure\"},", 
"<span class=\"ts\"/>{0x3E02, \"Timeout on logical unit\"},", 
"<span class=\"ts\"/>{0x3E03, \"Logical unit failed self-test\"},", 
"<span class=\"ts\"/>{0x3E04, \"Logical unit unable to update self-test log\"},", 
"", 
"<span class=\"ts\"/>{0x3F00, \"Target operating conditions have changed\"},", 
"<span class=\"ts\"/>{0x3F01, \"Microcode has been changed\"},", 
"<span class=\"ts\"/>{0x3F02, \"Changed operating definition\"},", 
"<span class=\"ts\"/>{0x3F03, \"Inquiry data has changed\"},", 
"<span class=\"ts\"/>{0x3F04, \"Component device attached\"},", 
"<span class=\"ts\"/>{0x3F05, \"Device identifier changed\"},", 
"<span class=\"ts\"/>{0x3F06, \"Redundancy group created or modified\"},", 
"<span class=\"ts\"/>{0x3F07, \"Redundancy group deleted\"},", 
"<span class=\"ts\"/>{0x3F08, \"Spare created or modified\"},", 
"<span class=\"ts\"/>{0x3F09, \"Spare deleted\"},", 
"<span class=\"ts\"/>{0x3F0A, \"Volume set created or modified\"},", 
"<span class=\"ts\"/>{0x3F0B, \"Volume set deleted\"},", 
"<span class=\"ts\"/>{0x3F0C, \"Volume set deassigned\"},", 
"<span class=\"ts\"/>{0x3F0D, \"Volume set reassigned\"},", 
"<span class=\"ts\"/>{0x3F0E, \"Reported luns data has changed\"},", 
"<span class=\"ts\"/>{0x3F0F, \"Echo buffer overwritten\"},", 
"<span class=\"ts\"/>{0x3F10, \"Medium loadable\"},", 
"<span class=\"ts\"/>{0x3F11, \"Medium auxiliary memory accessible\"},", 
"<span class=\"ts\"/>{0x3F12, \"iSCSI IP address added\"},", 
"<span class=\"ts\"/>{0x3F13, \"iSCSI IP address removed\"},", 
"<span class=\"ts\"/>{0x3F14, \"iSCSI IP address changed\"},", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>{0x40NN, \"Ram failure\"},</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>{0x40NN, \"Diagnostic failure on component nn\"},</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>{0x41NN, \"Data path failure\"},</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>{0x42NN, \"Power-on or self-test failure\"},</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/>{0x4300, \"Message error\"},", 
"", 
"<span class=\"ts\"/>{0x4400, \"Internal target failure\"},", 
"<span class=\"ts\"/>{0x4471, \"ATA device failed set features\"},", 
"", 
"<span class=\"ts\"/>{0x4500, \"Select or reselect failure\"},", 
"", 
"<span class=\"ts\"/>{0x4600, \"Unsuccessful soft reset\"},", 
"", 
"<span class=\"ts\"/>{0x4700, \"Scsi parity error\"},", 
"<span class=\"ts\"/>{0x4701, \"Data phase CRC error detected\"},", 
"<span class=\"ts\"/>{0x4702, \"Scsi parity error detected during st data phase\"},", 
"<span class=\"ts\"/>{0x4703, \"Information unit iuCRC error detected\"},", 
"<span class=\"ts\"/>{0x4704, \"Asynchronous information protection error detected\"},", 
"<span class=\"ts\"/>{0x4705, \"Protocol service CRC error\"},", 
"<span class=\"ts\"/>{0x4706, \"Phy test function in progress\"},", 
"<span class=\"ts\"/>{0x477f, \"Some commands cleared by iSCSI Protocol event\"},", 
"", 
"<span class=\"ts\"/>{0x4800, \"Initiator detected error message received\"},", 
"", 
"<span class=\"ts\"/>{0x4900, \"Invalid message error\"},", 
"", 
"<span class=\"ts\"/>{0x4A00, \"Command phase error\"},", 
"", 
"<span class=\"ts\"/>{0x4B00, \"Data phase error\"},", 
"<span class=\"ts\"/>{0x4B01, \"Invalid target port transfer tag received\"},", 
"<span class=\"ts\"/>{0x4B02, \"Too much write data\"},", 
"<span class=\"ts\"/>{0x4B03, \"Ack/nak timeout\"},", 
"<span class=\"ts\"/>{0x4B04, \"Nak received\"},", 
"<span class=\"ts\"/>{0x4B05, \"Data offset error\"},", 
"<span class=\"ts\"/>{0x4B06, \"Initiator response timeout\"},", 
"", 
"<span class=\"ts\"/>{0x4C00, \"Logical unit failed self-configuration\"},", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>{0x4DNN, \"Tagged overlapped commands (nn = queue tag)\"},</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/>{0x4E00, \"Overlapped commands attempted\"},", 
"", 
"<span class=\"ts\"/>{0x5000, \"Write append error\"},", 
"<span class=\"ts\"/>{0x5001, \"Write append position error\"},", 
"<span class=\"ts\"/>{0x5002, \"Position error related to timing\"},", 
"", 
"<span class=\"ts\"/>{0x5100, \"Erase failure\"},", 
"<span class=\"ts\"/>{0x5101, \"Erase failure - incomplete erase operation detected\"},", 
"", 
"<span class=\"ts\"/>{0x5200, \"Cartridge fault\"},", 
"", 
"<span class=\"ts\"/>{0x5300, \"Media load or eject failed\"},", 
"<span class=\"ts\"/>{0x5301, \"Unload tape failure\"},", 
"<span class=\"ts\"/>{0x5302, \"Medium removal prevented\"},", 
"<span class=\"ts\"/>{0x5303, \"Medium removal prevented by data transfer element\"},", 
"<span class=\"ts\"/>{0x5304, \"Medium thread or unthread failure\"},", 
"", 
"<span class=\"ts\"/>{0x5400, \"Scsi to host system interface failure\"},", 
"", 
"<span class=\"ts\"/>{0x5500, \"System resource failure\"},", 
"<span class=\"ts\"/>{0x5501, \"System buffer full\"},", 
"<span class=\"ts\"/>{0x5502, \"Insufficient reservation resources\"},", 
"<span class=\"ts\"/>{0x5503, \"Insufficient resources\"},", 
"<span class=\"ts\"/>{0x5504, \"Insufficient registration resources\"},", 
"<span class=\"ts\"/>{0x5505, \"Insufficient access control resources\"},", 
"<span class=\"ts\"/>{0x5506, \"Auxiliary memory out of space\"},", 
"<span class=\"ts\"/>{0x5507, \"Quota error\"},", 
"<span class=\"ts\"/>{0x5508, \"Maximum number of supplemental decryption keys exceeded\"},", 
"<span class=\"ts\"/>{0x5509, \"Medium auxiliary memory not accessible\"},", 
"<span class=\"ts\"/>{0x550A, \"Data currently unavailable\"},", 
"", 
"<span class=\"ts\"/>{0x5700, \"Unable to recover table-of-contents\"},", 
"", 
"<span class=\"ts\"/>{0x5800, \"Generation does not exist\"},", 
"", 
"<span class=\"ts\"/>{0x5900, \"Updated block read\"},", 
"", 
"<span class=\"ts\"/>{0x5A00, \"Operator request or state change input\"},", 
"<span class=\"ts\"/>{0x5A01, \"Operator medium removal request\"},", 
"<span class=\"ts\"/>{0x5A02, \"Operator selected write protect\"},", 
"<span class=\"ts\"/>{0x5A03, \"Operator selected write permit\"},", 
"", 
"<span class=\"ts\"/>{0x5B00, \"Log exception\"},", 
"<span class=\"ts\"/>{0x5B01, \"Threshold condition met\"},", 
"<span class=\"ts\"/>{0x5B02, \"Log counter at maximum\"},", 
"<span class=\"ts\"/>{0x5B03, \"Log list codes exhausted\"},", 
"", 
"<span class=\"ts\"/>{0x5C00, \"Rpl status change\"},", 
"<span class=\"ts\"/>{0x5C01, \"Spindles synchronized\"},", 
"<span class=\"ts\"/>{0x5C02, \"Spindles not synchronized\"},", 
"", 
"<span class=\"ts\"/>{0x5D00, \"Failure prediction threshold exceeded\"},", 
"<span class=\"ts\"/>{0x5D01, \"Media failure prediction threshold exceeded\"},", 
"<span class=\"ts\"/>{0x5D02, \"Logical unit failure prediction threshold exceeded\"},", 
"<span class=\"ts\"/>{0x5D03, \"Spare area exhaustion prediction threshold exceeded\"},", 
"<span class=\"ts\"/>{0x5D10, \"Hardware impending failure general hard drive failure\"},", 
"<span class=\"ts\"/>{0x5D11, \"Hardware impending failure drive error rate too high\"},", 
"<span class=\"ts\"/>{0x5D12, \"Hardware impending failure data error rate too high\"},", 
"<span class=\"ts\"/>{0x5D13, \"Hardware impending failure seek error rate too high\"},", 
"<span class=\"ts\"/>{0x5D14, \"Hardware impending failure too many block reassigns\"},", 
"<span class=\"ts\"/>{0x5D15, \"Hardware impending failure access times too high\"},", 
"<span class=\"ts\"/>{0x5D16, \"Hardware impending failure start unit times too high\"},", 
"<span class=\"ts\"/>{0x5D17, \"Hardware impending failure channel parametrics\"},", 
"<span class=\"ts\"/>{0x5D18, \"Hardware impending failure controller detected\"},", 
"<span class=\"ts\"/>{0x5D19, \"Hardware impending failure throughput performance\"},", 
"<span class=\"ts\"/>{0x5D1A, \"Hardware impending failure seek time performance\"},", 
"<span class=\"ts\"/>{0x5D1B, \"Hardware impending failure spin-up retry count\"},", 
"<span class=\"ts\"/>{0x5D1C, \"Hardware impending failure drive calibration retry count\"},", 
"<span class=\"ts\"/>{0x5D20, \"Controller impending failure general hard drive failure\"},", 
"<span class=\"ts\"/>{0x5D21, \"Controller impending failure drive error rate too high\"},", 
"<span class=\"ts\"/>{0x5D22, \"Controller impending failure data error rate too high\"},", 
"<span class=\"ts\"/>{0x5D23, \"Controller impending failure seek error rate too high\"},", 
"<span class=\"ts\"/>{0x5D24, \"Controller impending failure too many block reassigns\"},", 
"<span class=\"ts\"/>{0x5D25, \"Controller impending failure access times too high\"},", 
"<span class=\"ts\"/>{0x5D26, \"Controller impending failure start unit times too high\"},", 
"<span class=\"ts\"/>{0x5D27, \"Controller impending failure channel parametrics\"},", 
"<span class=\"ts\"/>{0x5D28, \"Controller impending failure controller detected\"},", 
"<span class=\"ts\"/>{0x5D29, \"Controller impending failure throughput performance\"},", 
"<span class=\"ts\"/>{0x5D2A, \"Controller impending failure seek time performance\"},", 
"<span class=\"ts\"/>{0x5D2B, \"Controller impending failure spin-up retry count\"},", 
"<span class=\"ts\"/>{0x5D2C, \"Controller impending failure drive calibration retry count\"},", 
"<span class=\"ts\"/>{0x5D30, \"Data channel impending failure general hard drive failure\"},", 
"<span class=\"ts\"/>{0x5D31, \"Data channel impending failure drive error rate too high\"},", 
"<span class=\"ts\"/>{0x5D32, \"Data channel impending failure data error rate too high\"},", 
"<span class=\"ts\"/>{0x5D33, \"Data channel impending failure seek error rate too high\"},", 
"<span class=\"ts\"/>{0x5D34, \"Data channel impending failure too many block reassigns\"},", 
"<span class=\"ts\"/>{0x5D35, \"Data channel impending failure access times too high\"},", 
"<span class=\"ts\"/>{0x5D36, \"Data channel impending failure start unit times too high\"},", 
"<span class=\"ts\"/>{0x5D37, \"Data channel impending failure channel parametrics\"},", 
"<span class=\"ts\"/>{0x5D38, \"Data channel impending failure controller detected\"},", 
"<span class=\"ts\"/>{0x5D39, \"Data channel impending failure throughput performance\"},", 
"<span class=\"ts\"/>{0x5D3A, \"Data channel impending failure seek time performance\"},", 
"<span class=\"ts\"/>{0x5D3B, \"Data channel impending failure spin-up retry count\"},", 
"<span class=\"ts\"/>{0x5D3C, \"Data channel impending failure drive calibration retry \"", 
"<span class=\"ts\"/> \"count\"},", 
"<span class=\"ts\"/>{0x5D40, \"Servo impending failure general hard drive failure\"},", 
"<span class=\"ts\"/>{0x5D41, \"Servo impending failure drive error rate too high\"},", 
"<span class=\"ts\"/>{0x5D42, \"Servo impending failure data error rate too high\"},", 
"<span class=\"ts\"/>{0x5D43, \"Servo impending failure seek error rate too high\"},", 
"<span class=\"ts\"/>{0x5D44, \"Servo impending failure too many block reassigns\"},", 
"<span class=\"ts\"/>{0x5D45, \"Servo impending failure access times too high\"},", 
"<span class=\"ts\"/>{0x5D46, \"Servo impending failure start unit times too high\"},", 
"<span class=\"ts\"/>{0x5D47, \"Servo impending failure channel parametrics\"},", 
"<span class=\"ts\"/>{0x5D48, \"Servo impending failure controller detected\"},", 
"<span class=\"ts\"/>{0x5D49, \"Servo impending failure throughput performance\"},", 
"<span class=\"ts\"/>{0x5D4A, \"Servo impending failure seek time performance\"},", 
"<span class=\"ts\"/>{0x5D4B, \"Servo impending failure spin-up retry count\"},", 
"<span class=\"ts\"/>{0x5D4C, \"Servo impending failure drive calibration retry count\"},", 
"<span class=\"ts\"/>{0x5D50, \"Spindle impending failure general hard drive failure\"},", 
"<span class=\"ts\"/>{0x5D51, \"Spindle impending failure drive error rate too high\"},", 
"<span class=\"ts\"/>{0x5D52, \"Spindle impending failure data error rate too high\"},", 
"<span class=\"ts\"/>{0x5D53, \"Spindle impending failure seek error rate too high\"},", 
"<span class=\"ts\"/>{0x5D54, \"Spindle impending failure too many block reassigns\"},", 
"<span class=\"ts\"/>{0x5D55, \"Spindle impending failure access times too high\"},", 
"<span class=\"ts\"/>{0x5D56, \"Spindle impending failure start unit times too high\"},", 
"<span class=\"ts\"/>{0x5D57, \"Spindle impending failure channel parametrics\"},", 
"<span class=\"ts\"/>{0x5D58, \"Spindle impending failure controller detected\"},", 
"<span class=\"ts\"/>{0x5D59, \"Spindle impending failure throughput performance\"},", 
"<span class=\"ts\"/>{0x5D5A, \"Spindle impending failure seek time performance\"},", 
"<span class=\"ts\"/>{0x5D5B, \"Spindle impending failure spin-up retry count\"},", 
"<span class=\"ts\"/>{0x5D5C, \"Spindle impending failure drive calibration retry count\"},", 
"<span class=\"ts\"/>{0x5D60, \"Firmware impending failure general hard drive failure\"},", 
"<span class=\"ts\"/>{0x5D61, \"Firmware impending failure drive error rate too high\"},", 
"<span class=\"ts\"/>{0x5D62, \"Firmware impending failure data error rate too high\"},", 
"<span class=\"ts\"/>{0x5D63, \"Firmware impending failure seek error rate too high\"},", 
"<span class=\"ts\"/>{0x5D64, \"Firmware impending failure too many block reassigns\"},", 
"<span class=\"ts\"/>{0x5D65, \"Firmware impending failure access times too high\"},", 
"<span class=\"ts\"/>{0x5D66, \"Firmware impending failure start unit times too high\"},", 
"<span class=\"ts\"/>{0x5D67, \"Firmware impending failure channel parametrics\"},", 
"<span class=\"ts\"/>{0x5D68, \"Firmware impending failure controller detected\"},", 
"<span class=\"ts\"/>{0x5D69, \"Firmware impending failure throughput performance\"},", 
"<span class=\"ts\"/>{0x5D6A, \"Firmware impending failure seek time performance\"},", 
"<span class=\"ts\"/>{0x5D6B, \"Firmware impending failure spin-up retry count\"},", 
"<span class=\"ts\"/>{0x5D6C, \"Firmware impending failure drive calibration retry count\"},", 
"<span class=\"ts\"/>{0x5DFF, \"Failure prediction threshold exceeded (false)\"},", 
"", 
"<span class=\"ts\"/>{0x5E00, \"Low power condition on\"},", 
"<span class=\"ts\"/>{0x5E01, \"Idle condition activated by timer\"},", 
"<span class=\"ts\"/>{0x5E02, \"Standby condition activated by timer\"},", 
"<span class=\"ts\"/>{0x5E03, \"Idle condition activated by command\"},", 
"<span class=\"ts\"/>{0x5E04, \"Standby condition activated by command\"},", 
"<span class=\"ts\"/>{0x5E05, \"Idle_b condition activated by timer\"},", 
"<span class=\"ts\"/>{0x5E06, \"Idle_b condition activated by command\"},", 
"<span class=\"ts\"/>{0x5E07, \"Idle_c condition activated by timer\"},", 
"<span class=\"ts\"/>{0x5E08, \"Idle_c condition activated by command\"},", 
"<span class=\"ts\"/>{0x5E09, \"Standby_y condition activated by timer\"},", 
"<span class=\"ts\"/>{0x5E0A, \"Standby_y condition activated by command\"},", 
"<span class=\"ts\"/>{0x5E41, \"Power state change to active\"},", 
"<span class=\"ts\"/>{0x5E42, \"Power state change to idle\"},", 
"<span class=\"ts\"/>{0x5E43, \"Power state change to standby\"},", 
"<span class=\"ts\"/>{0x5E45, \"Power state change to sleep\"},", 
"<span class=\"ts\"/>{0x5E47, \"Power state change to device control\"},", 
"", 
"<span class=\"ts\"/>{0x6000, \"Lamp failure\"},", 
"", 
"<span class=\"ts\"/>{0x6100, \"Video acquisition error\"},", 
"<span class=\"ts\"/>{0x6101, \"Unable to acquire video\"},", 
"<span class=\"ts\"/>{0x6102, \"Out of focus\"},", 
"", 
"<span class=\"ts\"/>{0x6200, \"Scan head positioning error\"},", 
"", 
"<span class=\"ts\"/>{0x6300, \"End of user area encountered on this track\"},", 
"<span class=\"ts\"/>{0x6301, \"Packet does not fit in available space\"},", 
"", 
"<span class=\"ts\"/>{0x6400, \"Illegal mode for this track\"},", 
"<span class=\"ts\"/>{0x6401, \"Invalid packet size\"},", 
"", 
"<span class=\"ts\"/>{0x6500, \"Voltage fault\"},", 
"", 
"<span class=\"ts\"/>{0x6600, \"Automatic document feeder cover up\"},", 
"<span class=\"ts\"/>{0x6601, \"Automatic document feeder lift up\"},", 
"<span class=\"ts\"/>{0x6602, \"Document jam in automatic document feeder\"},", 
"<span class=\"ts\"/>{0x6603, \"Document miss feed automatic in document feeder\"},", 
"", 
"<span class=\"ts\"/>{0x6700, \"Configuration failure\"},", 
"<span class=\"ts\"/>{0x6701, \"Configuration of incapable logical units failed\"},", 
"<span class=\"ts\"/>{0x6702, \"Add logical unit failed\"},", 
"<span class=\"ts\"/>{0x6703, \"Modification of logical unit failed\"},", 
"<span class=\"ts\"/>{0x6704, \"Exchange of logical unit failed\"},", 
"<span class=\"ts\"/>{0x6705, \"Remove of logical unit failed\"},", 
"<span class=\"ts\"/>{0x6706, \"Attachment of logical unit failed\"},", 
"<span class=\"ts\"/>{0x6707, \"Creation of logical unit failed\"},", 
"<span class=\"ts\"/>{0x6708, \"Assign failure occurred\"},", 
"<span class=\"ts\"/>{0x6709, \"Multiply assigned logical unit\"},", 
"<span class=\"ts\"/>{0x670A, \"Set target port groups command failed\"},", 
"<span class=\"ts\"/>{0x670B, \"ATA device feature not enabled\"},", 
"", 
"<span class=\"ts\"/>{0x6800, \"Logical unit not configured\"},", 
"", 
"<span class=\"ts\"/>{0x6900, \"Data loss on logical unit\"},", 
"<span class=\"ts\"/>{0x6901, \"Multiple logical unit failures\"},", 
"<span class=\"ts\"/>{0x6902, \"Parity/data mismatch\"},", 
"", 
"<span class=\"ts\"/>{0x6A00, \"Informational, refer to log\"},", 
"", 
"<span class=\"ts\"/>{0x6B00, \"State change has occurred\"},", 
"<span class=\"ts\"/>{0x6B01, \"Redundancy level got better\"},", 
"<span class=\"ts\"/>{0x6B02, \"Redundancy level got worse\"},", 
"", 
"<span class=\"ts\"/>{0x6C00, \"Rebuild failure occurred\"},", 
"", 
"<span class=\"ts\"/>{0x6D00, \"Recalculate failure occurred\"},", 
"", 
"<span class=\"ts\"/>{0x6E00, \"Command to logical unit failed\"},", 
"", 
"<span class=\"ts\"/>{0x6F00, \"Copy protection key exchange failure - authentication \"", 
"<span class=\"ts\"/> \"failure\"},", 
"<span class=\"ts\"/>{0x6F01, \"Copy protection key exchange failure - key not present\"},", 
"<span class=\"ts\"/>{0x6F02, \"Copy protection key exchange failure - key not established\"},", 
"<span class=\"ts\"/>{0x6F03, \"Read of scrambled sector without authentication\"},", 
"<span class=\"ts\"/>{0x6F04, \"Media region code is mismatched to logical unit region\"},", 
"<span class=\"ts\"/>{0x6F05, \"Drive region must be permanent/region reset count error\"},", 
"<span class=\"ts\"/>{0x6F06, \"Insufficient block count for binding nonce recording\"},", 
"<span class=\"ts\"/>{0x6F07, \"Conflict in binding nonce recording\"},", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>{0x70NN, \"Decompression exception short algorithm id of nn\"},</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/>{0x7100, \"Decompression exception long algorithm id\"},", 
"", 
"<span class=\"ts\"/>{0x7200, \"Session fixation error\"},", 
"<span class=\"ts\"/>{0x7201, \"Session fixation error writing lead-in\"},", 
"<span class=\"ts\"/>{0x7202, \"Session fixation error writing lead-out\"},", 
"<span class=\"ts\"/>{0x7203, \"Session fixation error - incomplete track in session\"},", 
"<span class=\"ts\"/>{0x7204, \"Empty or partially written reserved track\"},", 
"<span class=\"ts\"/>{0x7205, \"No more track reservations allowed\"},", 
"<span class=\"ts\"/>{0x7206, \"RMZ extension is not allowed\"},", 
"<span class=\"ts\"/>{0x7207, \"No more test zone extensions are allowed\"},", 
"", 
"<span class=\"ts\"/>{0x7300, \"Cd control error\"},", 
"<span class=\"ts\"/>{0x7301, \"Power calibration area almost full\"},", 
"<span class=\"ts\"/>{0x7302, \"Power calibration area is full\"},", 
"<span class=\"ts\"/>{0x7303, \"Power calibration area error\"},", 
"<span class=\"ts\"/>{0x7304, \"Program memory area update failure\"},", 
"<span class=\"ts\"/>{0x7305, \"Program memory area is full\"},", 
"<span class=\"ts\"/>{0x7306, \"RMA/PMA is almost full\"},", 
"<span class=\"ts\"/>{0x7310, \"Current power calibration area almost full\"},", 
"<span class=\"ts\"/>{0x7311, \"Current power calibration area is full\"},", 
"<span class=\"ts\"/>{0x7317, \"RDZ is full\"},", 
"", 
"<span class=\"ts\"/>{0x7400, \"Security error\"},", 
"<span class=\"ts\"/>{0x7401, \"Unable to decrypt data\"},", 
"<span class=\"ts\"/>{0x7402, \"Unencrypted data encountered while decrypting\"},", 
"<span class=\"ts\"/>{0x7403, \"Incorrect data encryption key\"},", 
"<span class=\"ts\"/>{0x7404, \"Cryptographic integrity validation failed\"},", 
"<span class=\"ts\"/>{0x7405, \"Error decrypting data\"},", 
"<span class=\"ts\"/>{0x7406, \"Unknown signature verification key\"},", 
"<span class=\"ts\"/>{0x7407, \"Encryption parameters not useable\"},", 
"<span class=\"ts\"/>{0x7408, \"Digital signature validation failure\"},", 
"<span class=\"ts\"/>{0x7409, \"Encryption mode mismatch on read\"},", 
"<span class=\"ts\"/>{0x740A, \"Encrypted block not raw read enabled\"},", 
"<span class=\"ts\"/>{0x740B, \"Incorrect Encryption parameters\"},", 
"<span class=\"ts\"/>{0x740C, \"Unable to decrypt parameter list\"},", 
"<span class=\"ts\"/>{0x740D, \"Encryption algorithm disabled\"},", 
"<span class=\"ts\"/>{0x7410, \"SA creation parameter value invalid\"},", 
"<span class=\"ts\"/>{0x7411, \"SA creation parameter value rejected\"},", 
"<span class=\"ts\"/>{0x7412, \"Invalid SA usage\"},", 
"<span class=\"ts\"/>{0x7421, \"Data Encryption configuration prevented\"},", 
"<span class=\"ts\"/>{0x7430, \"SA creation parameter not supported\"},", 
"<span class=\"ts\"/>{0x7440, \"Authentication failed\"},", 
"<span class=\"ts\"/>{0x7461, \"External data encryption key manager access error\"},", 
"<span class=\"ts\"/>{0x7462, \"External data encryption key manager error\"},", 
"<span class=\"ts\"/>{0x7463, \"External data encryption key not found\"},", 
"<span class=\"ts\"/>{0x7464, \"External data encryption request not authorized\"},", 
"<span class=\"ts\"/>{0x746E, \"External data encryption control timeout\"},", 
"<span class=\"ts\"/>{0x746F, \"External data encryption control error\"},", 
"<span class=\"ts\"/>{0x7471, \"Logical unit access not authorized\"},", 
"<span class=\"ts\"/>{0x7479, \"Security conflict in translated device\"},", 
"", 
"<span class=\"ts\"/>{0, <a class=\"id\" href=\"#NULL\">NULL</a>}", 
"};", 
"", 
"struct <a class=\"id\" href=\"#error_info2\">error_info2</a> {", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#code1\">code1</a>, <a class=\"id\" href=\"#code2_min\">code2_min</a>, <a class=\"id\" href=\"#code2_max\">code2_max</a>;", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#fmt\">fmt</a>;", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#error_info2\">error_info2</a> <a class=\"id\" href=\"#additional2\">additional2</a>[] =", 
"{", 
"<span class=\"ts\"/>{0x40, 0x00, 0x7f, \"Ram failure (%x)\"},", 
"<span class=\"ts\"/>{0x40, 0x80, 0xff, \"Diagnostic failure on component (%x)\"},", 
"<span class=\"ts\"/>{0x41, 0x00, 0xff, \"Data path failure (%x)\"},", 
"<span class=\"ts\"/>{0x42, 0x00, 0xff, \"Power-on or self-test failure (%x)\"},", 
"<span class=\"ts\"/>{0x4D, 0x00, 0xff, \"Tagged overlapped commands (task tag %x)\"},", 
"<span class=\"ts\"/>{0x70, 0x00, 0xff, \"Decompression exception short algorithm id of %x\"},", 
"<span class=\"ts\"/>{0, 0, 0, <a class=\"id\" href=\"#NULL\">NULL</a>}", 
"};", 
"", 
"<span class=\"comment\">/* description of the sense key values */</span>", 
"static const char * const <a class=\"id\" href=\"#snstext\">snstext</a>[] = {", 
"<span class=\"ts\"/>\"No Sense\",<span class=\"ts\"/>    <span class=\"comment\">/* 0: There is no sense information */</span>", 
"<span class=\"ts\"/>\"Recovered Error\",  <span class=\"comment\">/* 1: The last command completed successfully</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  but used error correction */</span>", 
"<span class=\"ts\"/>\"Not Ready\",<span class=\"ts\"/>    <span class=\"comment\">/* 2: The addressed target is not ready */</span>", 
"<span class=\"ts\"/>\"Medium Error\",<span class=\"ts\"/>    <span class=\"comment\">/* 3: Data error detected on the medium */</span>", 
"<span class=\"ts\"/>\"Hardware Error\",   <span class=\"comment\">/* 4: Controller or device failure */</span>", 
"<span class=\"ts\"/>\"Illegal Request\",  <span class=\"comment\">/* 5: Error in request */</span>", 
"<span class=\"ts\"/>\"Unit Attention\",   <span class=\"comment\">/* 6: Removable medium was changed, or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  the target has been reset, or ... */</span>", 
"<span class=\"ts\"/>\"Data Protect\",<span class=\"ts\"/>    <span class=\"comment\">/* 7: Access to the data is blocked */</span>", 
"<span class=\"ts\"/>\"Blank Check\",<span class=\"ts\"/>    <span class=\"comment\">/* 8: Reached unexpected written or unwritten</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  region of the medium */</span>", 
"<span class=\"ts\"/>\"Vendor Specific(9)\",", 
"<span class=\"ts\"/>\"Copy Aborted\",<span class=\"ts\"/>    <span class=\"comment\">/* A: COPY or COMPARE was aborted */</span>", 
"<span class=\"ts\"/>\"Aborted Command\",  <span class=\"comment\">/* B: The target aborted the command */</span>", 
"<span class=\"ts\"/>\"Equal\",<span class=\"ts\"/>    <span class=\"comment\">/* C: A SEARCH DATA command found data equal */</span>", 
"<span class=\"ts\"/>\"Volume Overflow\",  <span class=\"comment\">/* D: Medium full with still data to be written */</span>", 
"<span class=\"ts\"/>\"Miscompare\",<span class=\"ts\"/>    <span class=\"comment\">/* E: Source data and data on the medium</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  do not agree */</span>", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Get sense key string or NULL if not available */</span>", 
"const char *", 
"<a class=\"id\" href=\"#scsi_sense_key_string\">scsi_sense_key_string</a>(unsigned char <a class=\"id\" href=\"#key\">key</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_CONSTANTS\">CONFIG_SCSI_CONSTANTS</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a> <= 0xE)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#snstext\">snstext</a>[<a class=\"id\" href=\"#key\">key</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_sense_key_string\">scsi_sense_key_string</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get additional sense code string or NULL if not available.</span>", 
"<span class=\"comment\"> * This string may contain a \"%x\" and should be printed with ascq as arg.</span>", 
"<span class=\"comment\"> */</span>", 
"const char *", 
"<a class=\"id\" href=\"#scsi_extd_sense_format\">scsi_extd_sense_format</a>(unsigned char <a class=\"id\" href=\"#asc\">asc</a>, unsigned char <a class=\"id\" href=\"#ascq\">ascq</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_CONSTANTS\">CONFIG_SCSI_CONSTANTS</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#code\">code</a> = ((<a class=\"id\" href=\"#asc\">asc</a> << 8) | <a class=\"id\" href=\"#ascq\">ascq</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#additional\">additional</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#text\">text</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#additional\">additional</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#code12\">code12</a> == <a class=\"id\" href=\"#code\">code</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#additional\">additional</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#text\">text</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#additional2\">additional2</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#fmt\">fmt</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#additional2\">additional2</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#code1\">code1</a> == <a class=\"id\" href=\"#asc\">asc</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ascq\">ascq</a> >= <a class=\"id\" href=\"#additional2\">additional2</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#code2_min\">code2_min</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ascq\">ascq</a> <= <a class=\"id\" href=\"#additional2\">additional2</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#code2_max\">code2_max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#additional2\">additional2</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#fmt\">fmt</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_extd_sense_format\">scsi_extd_sense_format</a>);", 
"", 
"void", 
"<a class=\"id\" href=\"#scsi_show_extd_sense\">scsi_show_extd_sense</a>(unsigned char <a class=\"id\" href=\"#asc\">asc</a>, unsigned char <a class=\"id\" href=\"#ascq\">ascq</a>)", 
"{", 
"        const char *<a class=\"id\" href=\"#extd_sense_fmt\">extd_sense_fmt</a> = <a class=\"id\" href=\"#scsi_extd_sense_format\">scsi_extd_sense_format</a>(<a class=\"id\" href=\"#asc\">asc</a>, <a class=\"id\" href=\"#ascq\">ascq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#extd_sense_fmt\">extd_sense_fmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strstr\">strstr</a>(<a class=\"id\" href=\"#extd_sense_fmt\">extd_sense_fmt</a>, \"%x\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Add. Sense: \");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#extd_sense_fmt\">extd_sense_fmt</a>, <a class=\"id\" href=\"#ascq\">ascq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Add. Sense: %s\", <a class=\"id\" href=\"#extd_sense_fmt\">extd_sense_fmt</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#asc\">asc</a> >= 0x80)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"<<vendor>> ASC=0x%x ASCQ=0x%x\", <a class=\"id\" href=\"#asc\">asc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ascq\">ascq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ascq\">ascq</a> >= 0x80)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"ASC=0x%x <<vendor>> ASCQ=0x%x\", <a class=\"id\" href=\"#asc\">asc</a>,", 
];
xr_frag_insert('l/cd/c6dc19def20fbabf3621bbfd36ebe87baaec94.xr', __xr_tmp);
