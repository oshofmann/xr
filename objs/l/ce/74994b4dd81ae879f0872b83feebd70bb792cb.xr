var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * include/linux/node.h - generic node definition</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is mainly for topological representation. We define the </span>", 
"<span class=\"comment\"> * basic 'struct node' here, which can be embedded in per-arch </span>", 
"<span class=\"comment\"> * definitions of processors.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Basic handling of the devices is done in drivers/base/node.c</span>", 
"<span class=\"comment\"> * and system devices are handled in drivers/base/sys.c. </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Nodes are exported via driverfs in the class/node/devices/</span>", 
"<span class=\"comment\"> * directory. </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Per-node interfaces can be implemented using a struct device_interface. </span>", 
"<span class=\"comment\"> * See the following for how to do this: </span>", 
"<span class=\"comment\"> * - drivers/base/intf.c </span>", 
"<span class=\"comment\"> * - Documentation/driver-model/interface.txt</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_NODE_H_\">_LINUX_NODE_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_NODE_H_\">_LINUX_NODE_H_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#node\">node</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a><span class=\"ts\"/><a class=\"id\" href=\"#sysdev\">sysdev</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_MEMORY_HOTPLUG_SPARSE\">CONFIG_MEMORY_HOTPLUG_SPARSE</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_HUGETLBFS\">CONFIG_HUGETLBFS</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#node_work\">node_work</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#memory_block\">memory_block</a>;", 
"extern struct <a class=\"id\" href=\"#node\">node</a> <a class=\"id\" href=\"#node_devices\">node_devices</a>[];", 
"typedef  void (*<a class=\"id\" href=\"#node_registration_func_t\">node_registration_func_t</a>)(struct <a class=\"id\" href=\"#node\">node</a> *);", 
"", 
"extern int <a class=\"id\" href=\"#register_node\">register_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *, int, struct <a class=\"id\" href=\"#node\">node</a> *);", 
"extern void <a class=\"id\" href=\"#unregister_node\">unregister_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"extern int <a class=\"id\" href=\"#register_one_node\">register_one_node</a>(int <a class=\"id\" href=\"#nid\">nid</a>);", 
"extern void <a class=\"id\" href=\"#unregister_one_node\">unregister_one_node</a>(int <a class=\"id\" href=\"#nid\">nid</a>);", 
"extern int <a class=\"id\" href=\"#register_cpu_under_node\">register_cpu_under_node</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, unsigned int <a class=\"id\" href=\"#nid\">nid</a>);", 
"extern int <a class=\"id\" href=\"#unregister_cpu_under_node\">unregister_cpu_under_node</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, unsigned int <a class=\"id\" href=\"#nid\">nid</a>);", 
"extern int <a class=\"id\" href=\"#register_mem_sect_under_node\">register_mem_sect_under_node</a>(struct <a class=\"id\" href=\"#memory_block\">memory_block</a> *<a class=\"id\" href=\"#mem_blk\">mem_blk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a>);", 
"extern int <a class=\"id\" href=\"#unregister_mem_sect_under_nodes\">unregister_mem_sect_under_nodes</a>(struct <a class=\"id\" href=\"#memory_block\">memory_block</a> *<a class=\"id\" href=\"#mem_blk\">mem_blk</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HUGETLBFS\">CONFIG_HUGETLBFS</a>", 
"extern void <a class=\"id\" href=\"#register_hugetlbfs_with_node\">register_hugetlbfs_with_node</a>(<a class=\"id\" href=\"#node_registration_func_t\">node_registration_func_t</a> <a class=\"id\" href=\"#doregister\">doregister</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#node_registration_func_t\">node_registration_func_t</a> <a class=\"id\" href=\"#unregister\">unregister</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_one_node\">register_one_node</a>(int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#unregister_one_node\">unregister_one_node</a>(int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_cpu_under_node\">register_cpu_under_node</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, unsigned int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#unregister_cpu_under_node\">unregister_cpu_under_node</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, unsigned int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_mem_sect_under_node\">register_mem_sect_under_node</a>(struct <a class=\"id\" href=\"#memory_block\">memory_block</a> *<a class=\"id\" href=\"#mem_blk\">mem_blk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#unregister_mem_sect_under_nodes\">unregister_mem_sect_under_nodes</a>(struct <a class=\"id\" href=\"#memory_block\">memory_block</a> *<a class=\"id\" href=\"#mem_blk\">mem_blk</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#register_hugetlbfs_with_node\">register_hugetlbfs_with_node</a>(<a class=\"id\" href=\"#node_registration_func_t\">node_registration_func_t</a> <a class=\"id\" href=\"#reg\">reg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_registration_func_t\">node_registration_func_t</a> <a class=\"id\" href=\"#unreg\">unreg</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_node\">to_node</a>(<a class=\"id\" href=\"#sys_device\">sys_device</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#sys_device\">sys_device</a>, struct <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#sysdev\">sysdev</a>)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_NODE_H_ */</span>", 
];
xr_frag_insert('l/ce/74994b4dd81ae879f0872b83feebd70bb792cb.xr', __xr_tmp);
