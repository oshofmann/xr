var __xr_tmp = [
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_clock_data\">sched_clock_data</a> *<a class=\"id\" href=\"#scd\">scd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#clock\">clock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sched_clock_stable\">sched_clock_stable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sched_clock\">sched_clock</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#sched_clock_running\">sched_clock_running</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0ull;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scd\">scd</a> = <a class=\"id\" href=\"#cpu_sdc\">cpu_sdc</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a> != <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#sched_clock_remote\">sched_clock_remote</a>(<a class=\"id\" href=\"#scd\">scd</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#sched_clock_local\">sched_clock_local</a>(<a class=\"id\" href=\"#scd\">scd</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#clock\">clock</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#sched_clock_tick\">sched_clock_tick</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_clock_data\">sched_clock_data</a> *<a class=\"id\" href=\"#scd\">scd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#now_gtod\">now_gtod</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sched_clock_stable\">sched_clock_stable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#sched_clock_running\">sched_clock_running</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scd\">scd</a> = <a class=\"id\" href=\"#this_scd\">this_scd</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#now_gtod\">now_gtod</a> = <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#ktime_get\">ktime_get</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#sched_clock\">sched_clock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scd\">scd</a>-><a class=\"id\" href=\"#tick_raw\">tick_raw</a> = <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scd\">scd</a>-><a class=\"id\" href=\"#tick_gtod\">tick_gtod</a> = <a class=\"id\" href=\"#now_gtod\">now_gtod</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sched_clock_local\">sched_clock_local</a>(<a class=\"id\" href=\"#scd\">scd</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We are going deep-idle (irqs are disabled):</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#sched_clock_idle_sleep_event\">sched_clock_idle_sleep_event</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sched_clock_cpu\">sched_clock_cpu</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sched_clock_idle_sleep_event\">sched_clock_idle_sleep_event</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We just idled delta nanoseconds (called with irqs disabled):</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#sched_clock_idle_wakeup_event\">sched_clock_idle_wakeup_event</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#delta_ns\">delta_ns</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timekeeping_suspended\">timekeeping_suspended</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sched_clock_tick\">sched_clock_tick</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#touch_softlockup_watchdog\">touch_softlockup_watchdog</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sched_clock_idle_wakeup_event\">sched_clock_idle_wakeup_event</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * As outlined at the top, provides a fast, high resolution, nanosecond</span>", 
"<span class=\"comment\"> * time source that is monotonic per cpu argument and has bounded drift</span>", 
"<span class=\"comment\"> * between cpus.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ######################### BIG FAT WARNING ##########################</span>", 
"<span class=\"comment\"> * # when comparing cpu_clock(i) to cpu_clock(j) for i != j, time can #</span>", 
"<span class=\"comment\"> * # go backwards !!                                                  #</span>", 
"<span class=\"comment\"> * ####################################################################</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#cpu_clock\">cpu_clock</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#sched_clock_cpu\">sched_clock_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#clock\">clock</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Similar to cpu_clock() for the current cpu. Time will only be observed</span>", 
"<span class=\"comment\"> * to be monotonic if care is taken to only compare timestampt taken on the</span>", 
"<span class=\"comment\"> * same CPU.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See cpu_clock().</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#local_clock\">local_clock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#sched_clock_cpu\">sched_clock_cpu</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#clock\">clock</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_HAVE_UNSTABLE_SCHED_CLOCK */</span>", 
"", 
"void <a class=\"id\" href=\"#sched_clock_init\">sched_clock_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sched_clock_running\">sched_clock_running</a> = 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sched_clock_cpu\">sched_clock_cpu</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#sched_clock_running\">sched_clock_running</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sched_clock\">sched_clock</a>();", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#cpu_clock\">cpu_clock</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sched_clock_cpu\">sched_clock_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#local_clock\">local_clock</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sched_clock_cpu\">sched_clock_cpu</a>(0);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HAVE_UNSTABLE_SCHED_CLOCK */</span>", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cpu_clock\">cpu_clock</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#local_clock\">local_clock</a>);", 
];
xr_frag_insert('l/ce/7d35d32f1aa80c5c32fbac661fb79dc190b7c8.xr', __xr_tmp);
