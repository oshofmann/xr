var __xr_tmp = [
"", 
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: exstorob - AML Interpreter object store support, store to object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acinterp.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_EXECUTER\">ACPI_EXECUTER</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"exstorob\")", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_store_buffer_to_buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  source_desc         - Source object to copy</span>", 
"<span class=\"comment\"> *              target_desc         - Destination object of the copy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Copy a buffer object to another buffer object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_store_buffer_to_buffer\">acpi_ex_store_buffer_to_buffer</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#target_desc\">target_desc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ex_store_buffer_to_buffer\">ex_store_buffer_to_buffer</a>, <a class=\"id\" href=\"#source_desc\">source_desc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If Source and Target are the same, just return */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#source_desc\">source_desc</a> == <a class=\"id\" href=\"#target_desc\">target_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We know that source_desc is a buffer by now */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If target is a buffer of length zero or is a static buffer,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocate a new buffer of the proper length</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> == 0) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AOPOBJ_STATIC_POINTER\">AOPOBJ_STATIC_POINTER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE\">ACPI_ALLOCATE</a>(<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy source buffer to target buffer */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> <= <a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clear existing buffer and copy in the new one */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMSET\">ACPI_MEMSET</a>(<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_OBSOLETE_BEHAVIOR\">ACPI_OBSOLETE_BEHAVIOR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * NOTE: ACPI versions up to 3.0 specified that the buffer must be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * truncated if the string is smaller than the buffer.  However, \"other\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * implementations of ACPI never did this and thus became the defacto</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * standard. ACPI 3.0_a changes this behavior such that the buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is no longer truncated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * OBSOLETE BEHAVIOR:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the original source was a string, we must truncate the buffer,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * according to the ACPI spec.  Integer-to-Buffer and Buffer-to-Buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * copy must not truncate the original buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#original_src_type\">original_src_type</a> == <a class=\"id\" href=\"#ACPI_TYPE_STRING\">ACPI_TYPE_STRING</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set the new length of the target */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Truncate the source, copy only what will fit */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Truncating source buffer from %X to %X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy flags */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#AOPOBJ_STATIC_POINTER\">AOPOBJ_STATIC_POINTER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_store_string_to_string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  source_desc         - Source object to copy</span>", 
"<span class=\"comment\"> *              target_desc         - Destination object of the copy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Copy a String object to another String object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_store_string_to_string\">acpi_ex_store_string_to_string</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#target_desc\">target_desc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ex_store_string_to_string\">ex_store_string_to_string</a>, <a class=\"id\" href=\"#source_desc\">source_desc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If Source and Target are the same, just return */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#source_desc\">source_desc</a> == <a class=\"id\" href=\"#target_desc\">target_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We know that source_desc is a string by now */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Replace existing string value if it will fit and the string</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pointer is not a static pointer (part of an ACPI table)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#length\">length</a> &lt; <a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a>) &&", 
"<span class=\"ts\"/>    (!(<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AOPOBJ_STATIC_POINTER\">AOPOBJ_STATIC_POINTER</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * String will fit in existing non-static buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Clear old string and copy in the new one</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMSET\">ACPI_MEMSET</a>(<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#acpi_size\">acpi_size</a>) <a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Free the current buffer, then allocate a new buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * large enough to hold the value</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!(<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AOPOBJ_STATIC_POINTER\">AOPOBJ_STATIC_POINTER</a>))) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only free if not a pointer into the DSDT */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_ZEROED\">ACPI_ALLOCATE_ZEROED</a>((<a class=\"id\" href=\"#acpi_size\">acpi_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#length\">length</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#AOPOBJ_STATIC_POINTER\">AOPOBJ_STATIC_POINTER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the new target length */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target_desc\">target_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
];
xr_frag_insert('l/ce/c5ca151afb5a686c0495960a81d7aab78515a3.xr', __xr_tmp);
