var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  acpi_osl.c - OS-dependent functions ($Revision: 83 $)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2000       Andrew Henroid</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Andy Grover &lt;andrew.grover@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Paul Diefenbaugh &lt;paul.s.diefenbaugh@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (c) 2008 Intel Corporation</span>", 
"<span class=\"comment\"> *   Author: Matthew Wilcox &lt;willy@linux.intel.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> *  (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> *  along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nmi\">nmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#semaphore\">semaphore</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_bus\">acpi_bus</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_OS_SERVICES\">ACPI_OS_SERVICES</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"osl\");", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a><span class=\"ts\"/><span class=\"ts\"/>\"ACPI: \"", 
"struct <a class=\"id\" href=\"#acpi_os_dpc\">acpi_os_dpc</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_osd_exec_callback\">acpi_osd_exec_callback</a> <a class=\"id\" href=\"#function\">function</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a> <a class=\"id\" href=\"#work\">work</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#wait\">wait</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI_CUSTOM_DSDT\">CONFIG_ACPI_CUSTOM_DSDT</a>", 
"#<a class=\"id\" href=\"#include\">include</a> <a class=\"id\" href=\"#CONFIG_ACPI_CUSTOM_DSDT_FILE\">CONFIG_ACPI_CUSTOM_DSDT_FILE</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ENABLE_DEBUGGER\">ENABLE_DEBUGGER</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kdb\">kdb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* stuff for debugger support */</span>", 
"int <a class=\"id\" href=\"#acpi_in_debugger\">acpi_in_debugger</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_in_debugger\">acpi_in_debugger</a>);", 
"", 
"extern char <a class=\"id\" href=\"#line_buf\">line_buf</a>[80];", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*ENABLE_DEBUGGER */</span>", 
"", 
"static unsigned int <a class=\"id\" href=\"#acpi_irq_irq\">acpi_irq_irq</a>;", 
"static <a class=\"id\" href=\"#acpi_osd_handler\">acpi_osd_handler</a> <a class=\"id\" href=\"#acpi_irq_handler\">acpi_irq_handler</a>;", 
"static void *<a class=\"id\" href=\"#acpi_irq_context\">acpi_irq_context</a>;", 
"static struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#kacpid_wq\">kacpid_wq</a>;", 
"static struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#kacpi_notify_wq\">kacpi_notify_wq</a>;", 
"static struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#kacpi_hotplug_wq\">kacpi_hotplug_wq</a>;", 
"", 
"struct <a class=\"id\" href=\"#acpi_res_list\">acpi_res_list</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_adr_space_type\">acpi_adr_space_type</a> <a class=\"id\" href=\"#resource_type\">resource_type</a>; <span class=\"comment\">/* IO port, System memory, ...*/</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[5];   <span class=\"comment\">/* only can have a length of 4 chars, make use of this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   one instead of res-&gt;name, no need to kalloc then */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#resource_list\">resource_list</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#resource_list_head\">resource_list_head</a>);", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#acpi_res_lock\">acpi_res_lock</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#OSI_STRING_LENGTH_MAX\">OSI_STRING_LENGTH_MAX</a> 64<span class=\"ts\"/><span class=\"comment\">/* arbitrary */</span>", 
"static char <a class=\"id\" href=\"#osi_additional_string\">osi_additional_string</a>[<a class=\"id\" href=\"#OSI_STRING_LENGTH_MAX\">OSI_STRING_LENGTH_MAX</a>];", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The story of _OSI(Linux)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * From pre-history through Linux-2.6.22,</span>", 
"<span class=\"comment\"> * Linux responded TRUE upon a BIOS OSI(Linux) query.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unfortunately, reference BIOS writers got wind of this</span>", 
"<span class=\"comment\"> * and put OSI(Linux) in their example code, quickly exposing</span>", 
"<span class=\"comment\"> * this string as ill-conceived and opening the door to</span>", 
"<span class=\"comment\"> * an un-bounded number of BIOS incompatibilities.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For example, OSI(Linux) was used on resume to re-POST a</span>", 
"<span class=\"comment\"> * video card on one system, because Linux at that time</span>", 
"<span class=\"comment\"> * could not do a speedy restore in its native driver.</span>", 
"<span class=\"comment\"> * But then upon gaining quick native restore capability,</span>", 
"<span class=\"comment\"> * Linux has no way to tell the BIOS to skip the time-consuming</span>", 
"<span class=\"comment\"> * POST -- putting Linux at a permanent performance disadvantage.</span>", 
"<span class=\"comment\"> * On another system, the BIOS writer used OSI(Linux)</span>", 
"<span class=\"comment\"> * to infer native OS support for IPMI!  On other systems,</span>", 
"<span class=\"comment\"> * OSI(Linux) simply got in the way of Linux claiming to</span>", 
"<span class=\"comment\"> * be compatible with other operating systems, exposing</span>", 
"<span class=\"comment\"> * BIOS issues such as skipped device initialization.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * So \"Linux\" turned out to be a really poor chose of</span>", 
"<span class=\"comment\"> * OSI string, and from Linux-2.6.23 onward we respond FALSE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * BIOS writers should NOT query _OSI(Linux) on future systems.</span>", 
"<span class=\"comment\"> * Linux will complain on the console when it sees it, and return FALSE.</span>", 
"<span class=\"comment\"> * To get Linux to return TRUE for your system  will require</span>", 
"<span class=\"comment\"> * a kernel source update to add a DMI entry,</span>", 
"<span class=\"comment\"> * or boot with \"acpi_osi=Linux\"</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#osi_linux\">osi_linux</a> {", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#enable\">enable</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#dmi\">dmi</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#cmdline\">cmdline</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#known\">known</a>:1;", 
"} <a class=\"id\" href=\"#osi_linux\">osi_linux</a> = { 0, 0, 0, 0};", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_request_region\">acpi_request_region</a> (struct <a class=\"id\" href=\"#acpi_generic_address\">acpi_generic_address</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#length\">length</a>, char *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#address\">address</a> || !<a class=\"id\" href=\"#length\">length</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Resources are never freed */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#space_id\">space_id</a> == <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_IO\">ACPI_ADR_SPACE_SYSTEM_IO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_region\">request_region</a>(<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#space_id\">space_id</a> == <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_MEMORY\">ACPI_ADR_SPACE_SYSTEM_MEMORY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_mem_region\">request_mem_region</a>(<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_reserve_resources\">acpi_reserve_resources</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_request_region\">acpi_request_region</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xpm1a_event_block\">xpm1a_event_block</a>, <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pm1_event_length\">pm1_event_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"ACPI PM1a_EVT_BLK\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_request_region\">acpi_request_region</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xpm1b_event_block\">xpm1b_event_block</a>, <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pm1_event_length\">pm1_event_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"ACPI PM1b_EVT_BLK\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_request_region\">acpi_request_region</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xpm1a_control_block\">xpm1a_control_block</a>, <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pm1_control_length\">pm1_control_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"ACPI PM1a_CNT_BLK\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_request_region\">acpi_request_region</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xpm1b_control_block\">xpm1b_control_block</a>, <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pm1_control_length\">pm1_control_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"ACPI PM1b_CNT_BLK\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pm_timer_length\">pm_timer_length</a> == 4)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_request_region\">acpi_request_region</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xpm_timer_block\">xpm_timer_block</a>, 4, \"ACPI PM_TMR\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_request_region\">acpi_request_region</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xpm2_control_block\">xpm2_control_block</a>, <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pm2_control_length\">pm2_control_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"ACPI PM2_CNT_BLK\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Length of GPE blocks must be a non-negative multiple of 2 */</span>", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#gpe0_block_length\">gpe0_block_length</a> &amp; 0x1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_request_region\">acpi_request_region</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xgpe0_block\">xgpe0_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#gpe0_block_length\">gpe0_block_length</a>, \"ACPI GPE0_BLK\");", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#gpe1_block_length\">gpe1_block_length</a> &amp; 0x1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_request_region\">acpi_request_region</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#xgpe1_block\">xgpe1_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#gpe1_block_length\">gpe1_block_length</a>, \"ACPI GPE1_BLK\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#acpi_reserve_resources\">acpi_reserve_resources</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_os_initialize\">acpi_os_initialize</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_initialize1\">acpi_os_initialize1</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kacpid_wq\">kacpid_wq</a> = <a class=\"id\" href=\"#create_workqueue\">create_workqueue</a>(\"kacpid\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kacpi_notify_wq\">kacpi_notify_wq</a> = <a class=\"id\" href=\"#create_workqueue\">create_workqueue</a>(\"kacpi_notify\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kacpi_hotplug_wq\">kacpi_hotplug_wq</a> = <a class=\"id\" href=\"#create_workqueue\">create_workqueue</a>(\"kacpi_hotplug\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#kacpid_wq\">kacpid_wq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#kacpi_notify_wq\">kacpi_notify_wq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#kacpi_hotplug_wq\">kacpi_hotplug_wq</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_terminate\">acpi_os_terminate</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_irq_handler\">acpi_irq_handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_remove_interrupt_handler\">acpi_os_remove_interrupt_handler</a>(<a class=\"id\" href=\"#acpi_irq_irq\">acpi_irq_irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#acpi_irq_handler\">acpi_irq_handler</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#kacpid_wq\">kacpid_wq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#kacpi_notify_wq\">kacpi_notify_wq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#kacpi_hotplug_wq\">kacpi_hotplug_wq</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#acpi_os_printf\">acpi_os_printf</a>(const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_vprintf\">acpi_os_vprintf</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#acpi_os_vprintf\">acpi_os_vprintf</a>(const char *<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>static char <a class=\"id\" href=\"#buffer\">buffer</a>[512];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vsprintf\">vsprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ENABLE_DEBUGGER\">ENABLE_DEBUGGER</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_in_debugger\">acpi_in_debugger</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdb_printf\">kdb_printf</a>(\"%s\", <a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"%s\", <a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"%s\", <a class=\"id\" href=\"#buffer\">buffer</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_os_get_root_pointer\">acpi_os_get_root_pointer</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#efi_enabled\">efi_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#acpi20\">acpi20</a> != <a class=\"id\" href=\"#EFI_INVALID_TABLE_ADDR\">EFI_INVALID_TABLE_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#acpi20\">acpi20</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#acpi\">acpi</a> != <a class=\"id\" href=\"#EFI_INVALID_TABLE_ADDR\">EFI_INVALID_TABLE_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#acpi\">acpi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"System description tables not found\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#pa\">pa</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_find_root_pointer\">acpi_find_root_pointer</a>(&amp;<a class=\"id\" href=\"#pa\">pa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pa\">pa</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#__init_refok\">__init_refok</a>", 
"<a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#phys\">phys</a> &gt; <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Cannot map memory that high\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_permanent_mmap\">acpi_gbl_permanent_mmap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>* ioremap checks to ensure this is in reserved space</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ioremap\">ioremap</a>((unsigned long)<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__acpi_map_table\">__acpi_map_table</a>((unsigned long)<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>);", 
"", 
"void <a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#virt\">virt</a>, <a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_permanent_mmap\">acpi_gbl_permanent_mmap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#virt\">virt</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__acpi_unmap_table\">__acpi_unmap_table</a>(<a class=\"id\" href=\"#virt\">virt</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>);", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_acpi_os_unmap_memory\">early_acpi_os_unmap_memory</a>(void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#virt\">virt</a>, <a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_gbl_permanent_mmap\">acpi_gbl_permanent_mmap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__acpi_unmap_table\">__acpi_unmap_table</a>(<a class=\"id\" href=\"#virt\">virt</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_FUTURE_USAGE\">ACPI_FUTURE_USAGE</a>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_get_physical_address\">acpi_os_get_physical_address</a>(void *<a class=\"id\" href=\"#virt\">virt</a>, <a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> * <a class=\"id\" href=\"#phys\">phys</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#phys\">phys</a> || !<a class=\"id\" href=\"#virt\">virt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#phys\">phys</a> = <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#virt\">virt</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_MAX_OVERRIDE_LEN\">ACPI_MAX_OVERRIDE_LEN</a> 100", 
"", 
"static char <a class=\"id\" href=\"#acpi_os_name\">acpi_os_name</a>[<a class=\"id\" href=\"#ACPI_MAX_OVERRIDE_LEN\">ACPI_MAX_OVERRIDE_LEN</a>];", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_predefined_override\">acpi_os_predefined_override</a>(const struct <a class=\"id\" href=\"#acpi_predefined_names\">acpi_predefined_names</a> *<a class=\"id\" href=\"#init_val\">init_val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_string\">acpi_string</a> * <a class=\"id\" href=\"#new_val\">new_val</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#init_val\">init_val</a> || !<a class=\"id\" href=\"#new_val\">new_val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#new_val\">new_val</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#init_val\">init_val</a>-><a class=\"id\" href=\"#name\">name</a>, \"_OS_\", 4) && <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#acpi_os_name\">acpi_os_name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Overriding _OS definition to '%s'\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#acpi_os_name\">acpi_os_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#new_val\">new_val</a> = <a class=\"id\" href=\"#acpi_os_name\">acpi_os_name</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_table_override\">acpi_os_table_override</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> * <a class=\"id\" href=\"#existing_table\">existing_table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> ** <a class=\"id\" href=\"#new_table\">new_table</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#existing_table\">existing_table</a> || !<a class=\"id\" href=\"#new_table\">new_table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#new_table\">new_table</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI_CUSTOM_DSDT\">CONFIG_ACPI_CUSTOM_DSDT</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#existing_table\">existing_table</a>-><a class=\"id\" href=\"#signature\">signature</a>, \"DSDT\", 4) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#new_table\">new_table</a> = (struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *)<a class=\"id\" href=\"#AmlCode\">AmlCode</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#new_table\">new_table</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Override [%4.4s-%8.8s], \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"this is unsafe: tainting kernel\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#existing_table\">existing_table</a>-><a class=\"id\" href=\"#signature\">signature</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#existing_table\">existing_table</a>-><a class=\"id\" href=\"#oem_table_id\">oem_table_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_taint\">add_taint</a>(<a class=\"id\" href=\"#TAINT_OVERRIDDEN_ACPI_TABLE\">TAINT_OVERRIDDEN_ACPI_TABLE</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#acpi_irq\">acpi_irq</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#handled\">handled</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handled\">handled</a> = (*<a class=\"id\" href=\"#acpi_irq_handler\">acpi_irq_handler</a>) (<a class=\"id\" href=\"#acpi_irq_context\">acpi_irq_context</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handled\">handled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_irq_handled\">acpi_irq_handled</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_irq_not_handled\">acpi_irq_not_handled</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_NONE\">IRQ_NONE</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_install_interrupt_handler\">acpi_os_install_interrupt_handler</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>, <a class=\"id\" href=\"#acpi_osd_handler\">acpi_osd_handler</a> <a class=\"id\" href=\"#handler\">handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_irq_stats_init\">acpi_irq_stats_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ignore the GSI from the core, and use the value in our copy of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FADT. It may not be the same if an interrupt source override exists</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for the SCI.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gsi\">gsi</a> = <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#sci_interrupt\">sci_interrupt</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gsi_to_irq\">acpi_gsi_to_irq</a>(<a class=\"id\" href=\"#gsi\">gsi</a>, &amp;<a class=\"id\" href=\"#irq\">irq</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"SCI (ACPI GSI %d) not registered\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gsi\">gsi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_irq_handler\">acpi_irq_handler</a> = <a class=\"id\" href=\"#handler\">handler</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_irq_context\">acpi_irq_context</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#acpi_irq\">acpi_irq</a>, <a class=\"id\" href=\"#IRQF_SHARED\">IRQF_SHARED</a>, \"acpi\", <a class=\"id\" href=\"#acpi_irq\">acpi_irq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"SCI (IRQ%d) allocation failed\\n\", <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_NOT_ACQUIRED\">AE_NOT_ACQUIRED</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_irq_irq\">acpi_irq_irq</a> = <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_remove_interrupt_handler\">acpi_os_remove_interrupt_handler</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#acpi_osd_handler\">acpi_osd_handler</a> <a class=\"id\" href=\"#handler\">handler</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_irq\">free_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#acpi_irq\">acpi_irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_irq_handler\">acpi_irq_handler</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_irq_irq\">acpi_irq_irq</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Running in interpreter thread context, safe to sleep</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#acpi_os_sleep\">acpi_os_sleep</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ms\">ms</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_timeout_interruptible\">schedule_timeout_interruptible</a>(<a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#ms\">ms</a>));", 
"}", 
"", 
"void <a class=\"id\" href=\"#acpi_os_stall\">acpi_os_stall</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#us\">us</a>)", 
"{", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#us\">us</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#delay\">delay</a> = 1000;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#delay\">delay</a> &gt; <a class=\"id\" href=\"#us\">us</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#us\">us</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(<a class=\"id\" href=\"#delay\">delay</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#touch_nmi_watchdog\">touch_nmi_watchdog</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#us\">us</a> -= <a class=\"id\" href=\"#delay\">delay</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Support ACPI 3.0 AML Timer operand</span>", 
"<span class=\"comment\"> * Returns 64-bit free-running, monotonically increasing timer</span>", 
"<span class=\"comment\"> * with 100ns granularity</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#acpi_os_get_timer\">acpi_os_get_timer</a>(void)", 
"{", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#t\">t</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_HPET\">CONFIG_HPET</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* TBD: use HPET if available */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_X86_PM_TIMER\">CONFIG_X86_PM_TIMER</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* TBD: default to PM timer if HPET was not available */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#t\">t</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"acpi_os_get_timer() TBD\\n\");", 
"", 
"<span class=\"ts\"/>return ++<a class=\"id\" href=\"#t\">t</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_read_port\">acpi_os_read_port</a>(<a class=\"id\" href=\"#acpi_io_address\">acpi_io_address</a> <a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#u32\">u32</a> * <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> = &amp;<a class=\"id\" href=\"#dummy\">dummy</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#width\">width</a> <= 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#u8\">u8</a> *) <a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#inb\">inb</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#width\">width</a> <= 16) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#inw\">inw</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#width\">width</a> <= 32) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#u32\">u32</a> *) <a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#inl\">inl</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_os_read_port\">acpi_os_read_port</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_write_port\">acpi_os_write_port</a>(<a class=\"id\" href=\"#acpi_io_address\">acpi_io_address</a> <a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#width\">width</a> <= 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#width\">width</a> <= 16) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outw\">outw</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#width\">width</a> <= 32) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outl\">outl</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_os_write_port\">acpi_os_write_port</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_read_memory\">acpi_os_read_memory</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#phys_addr\">phys_addr</a>, <a class=\"id\" href=\"#u32\">u32</a> * <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#virt_addr\">virt_addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virt_addr\">virt_addr</a> = <a class=\"id\" href=\"#ioremap\">ioremap</a>(<a class=\"id\" href=\"#phys_addr\">phys_addr</a>, <a class=\"id\" href=\"#width\">width</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> = &amp;<a class=\"id\" href=\"#dummy\">dummy</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#width\">width</a>) {", 
"<span class=\"ts\"/>case 8:", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#u8\">u8</a> *) <a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#readb\">readb</a>(<a class=\"id\" href=\"#virt_addr\">virt_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 16:", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#readw\">readw</a>(<a class=\"id\" href=\"#virt_addr\">virt_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 32:", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#u32\">u32</a> *) <a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#virt_addr\">virt_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#virt_addr\">virt_addr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_write_memory\">acpi_os_write_memory</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#phys_addr\">phys_addr</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#virt_addr\">virt_addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virt_addr\">virt_addr</a> = <a class=\"id\" href=\"#ioremap\">ioremap</a>(<a class=\"id\" href=\"#phys_addr\">phys_addr</a>, <a class=\"id\" href=\"#width\">width</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#width\">width</a>) {", 
"<span class=\"ts\"/>case 8:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#writeb\">writeb</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#virt_addr\">virt_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 16:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#writew\">writew</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#virt_addr\">virt_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 32:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#virt_addr\">virt_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#virt_addr\">virt_addr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_read_pci_configuration\">acpi_os_read_pci_configuration</a>(struct <a class=\"id\" href=\"#acpi_pci_id\">acpi_pci_id</a> * <a class=\"id\" href=\"#pci_id\">pci_id</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#width\">width</a>) {", 
"<span class=\"ts\"/>case 8:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 16:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 32:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = 4;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_ERROR\">AE_ERROR</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#raw_pci_read\">raw_pci_read</a>(<a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#segment\">segment</a>, <a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(<a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#function\">function</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#result\">result</a> ? <a class=\"id\" href=\"#AE_ERROR\">AE_ERROR</a> : <a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_write_pci_configuration\">acpi_os_write_pci_configuration</a>(struct <a class=\"id\" href=\"#acpi_pci_id\">acpi_pci_id</a> * <a class=\"id\" href=\"#pci_id\">pci_id</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#width\">width</a>) {", 
"<span class=\"ts\"/>case 8:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 16:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 32:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = 4;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_ERROR\">AE_ERROR</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#raw_pci_write\">raw_pci_write</a>(<a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#segment\">segment</a>, <a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(<a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#function\">function</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#result\">result</a> ? <a class=\"id\" href=\"#AE_ERROR\">AE_ERROR</a> : <a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/* TODO: Change code to take advantage of driver model more */</span>", 
"static void <a class=\"id\" href=\"#acpi_os_derive_pci_id_2\">acpi_os_derive_pci_id_2</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#rhandle\">rhandle</a>,<span class=\"ts\"/><span class=\"comment\">/* upper bound  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#chandle\">chandle</a>,<span class=\"ts\"/><span class=\"comment\">/* current node */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#acpi_pci_id\">acpi_pci_id</a> **<a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int *<a class=\"id\" href=\"#is_bridge\">is_bridge</a>, <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#bus_number\">bus_number</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_pci_id\">acpi_pci_id</a> *<a class=\"id\" href=\"#pci_id\">pci_id</a> = *<a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#temp\">temp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_object_type\">acpi_object_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_get_parent\">acpi_get_parent</a>(<a class=\"id\" href=\"#chandle\">chandle</a>, &amp;<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a> != <a class=\"id\" href=\"#rhandle\">rhandle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_derive_pci_id_2\">acpi_os_derive_pci_id_2</a>(<a class=\"id\" href=\"#rhandle\">rhandle</a>, <a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#pci_id\">pci_id</a>, <a class=\"id\" href=\"#is_bridge\">is_bridge</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus_number\">bus_number</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_type\">acpi_get_type</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) || (<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_DEVICE\">ACPI_TYPE_DEVICE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_integer\">acpi_evaluate_integer</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#METHOD_NAME__ADR\">METHOD_NAME__ADR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#temp\">temp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#ACPI_HIWORD\">ACPI_HIWORD</a>(<a class=\"id\" href=\"#ACPI_LODWORD\">ACPI_LODWORD</a>(<a class=\"id\" href=\"#temp\">temp</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#ACPI_LOWORD\">ACPI_LOWORD</a>(<a class=\"id\" href=\"#ACPI_LODWORD\">ACPI_LODWORD</a>(<a class=\"id\" href=\"#temp\">temp</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#is_bridge\">is_bridge</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#bus\">bus</a> = *<a class=\"id\" href=\"#bus_number\">bus_number</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* any nicer way to get bus number of bridge ? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_os_read_pci_configuration\">acpi_os_read_pci_configuration</a>(<a class=\"id\" href=\"#pci_id\">pci_id</a>, 0x0e, &amp;<a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   8);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    && ((<a class=\"id\" href=\"#val\">val</a> &amp; 0x7f) == 1 || (<a class=\"id\" href=\"#val\">val</a> &amp; 0x7f) == 2)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_os_read_pci_configuration\">acpi_os_read_pci_configuration</a>(<a class=\"id\" href=\"#pci_id\">pci_id</a>, 0x18,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#val\">val</a>, 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Certainly broken...  FIX ME */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#is_bridge\">is_bridge</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_id\">pci_id</a>-><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_os_read_pci_configuration\">acpi_os_read_pci_configuration</a>(<a class=\"id\" href=\"#pci_id\">pci_id</a>, 0x19,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#val\">val</a>, 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bus_number\">bus_number</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#is_bridge\">is_bridge</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#acpi_os_derive_pci_id\">acpi_os_derive_pci_id</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#rhandle\">rhandle</a>,<span class=\"ts\"/><span class=\"comment\">/* upper bound  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#chandle\">chandle</a>,<span class=\"ts\"/><span class=\"comment\">/* current node */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#acpi_pci_id\">acpi_pci_id</a> **<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_bridge\">is_bridge</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bus_number\">bus_number</a> = (*<a class=\"id\" href=\"#id\">id</a>)-><a class=\"id\" href=\"#bus\">bus</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_derive_pci_id_2\">acpi_os_derive_pci_id_2</a>(<a class=\"id\" href=\"#rhandle\">rhandle</a>, <a class=\"id\" href=\"#chandle\">chandle</a>, <a class=\"id\" href=\"#id\">id</a>, &amp;<a class=\"id\" href=\"#is_bridge\">is_bridge</a>, &amp;<a class=\"id\" href=\"#bus_number\">bus_number</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#acpi_os_execute_deferred\">acpi_os_execute_deferred</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_os_dpc\">acpi_os_dpc</a> *<a class=\"id\" href=\"#dpc\">dpc</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#acpi_os_dpc\">acpi_os_dpc</a>, <a class=\"id\" href=\"#work\">work</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#wait\">wait</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_wait_events_complete\">acpi_os_wait_events_complete</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#function\">function</a>(<a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dpc\">dpc</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_os_execute</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Type               - Type of the callback</span>", 
"<span class=\"comment\"> *              Function           - Function to be executed</span>", 
"<span class=\"comment\"> *              Context            - Function parameters</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Depending on type, either queues function for deferred execution or</span>", 
"<span class=\"comment\"> *              immediately executes function on a separate thread.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#__acpi_os_execute\">__acpi_os_execute</a>(<a class=\"id\" href=\"#acpi_execute_type\">acpi_execute_type</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_osd_exec_callback\">acpi_osd_exec_callback</a> <a class=\"id\" href=\"#function\">function</a>, void *<a class=\"id\" href=\"#context\">context</a>, int <a class=\"id\" href=\"#hp\">hp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_os_dpc\">acpi_os_dpc</a> *<a class=\"id\" href=\"#dpc\">dpc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#queue\">queue</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Scheduling function [%p(%p)] for deferred execution.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#context\">context</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate/initialize DPC structure.  Note that this memory will be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * freed by the callee.  The kernel handles the work_struct list  in a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * way that allows us to also free its memory inside the callee.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Because we may want to schedule several tasks with different</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * parameters we can't use the approach some kernel code uses of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * having a static work_struct.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dpc\">dpc</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#acpi_os_dpc\">acpi_os_dpc</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dpc\">dpc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#function\">function</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We can't run hotplug code in keventd_wq/kacpid_wq/kacpid_notify_wq</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because the hotplug code may call driver .remove() functions,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which invoke flush_scheduled_work/acpi_os_wait_events_complete</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to flush these workqueues.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#hp\">hp</a> ? <a class=\"id\" href=\"#kacpi_hotplug_wq\">kacpi_hotplug_wq</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#OSL_NOTIFY_HANDLER\">OSL_NOTIFY_HANDLER</a> ? <a class=\"id\" href=\"#kacpi_notify_wq\">kacpi_notify_wq</a> : <a class=\"id\" href=\"#kacpid_wq\">kacpid_wq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#wait\">wait</a> = <a class=\"id\" href=\"#hp\">hp</a> ? 1 : 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#queue\">queue</a> == <a class=\"id\" href=\"#kacpi_hotplug_wq\">kacpi_hotplug_wq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#acpi_os_execute_deferred\">acpi_os_execute_deferred</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#queue\">queue</a> == <a class=\"id\" href=\"#kacpi_notify_wq\">kacpi_notify_wq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#acpi_os_execute_deferred\">acpi_os_execute_deferred</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#acpi_os_execute_deferred\">acpi_os_execute_deferred</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On some machines, a software-initiated SMI causes corruption unless</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the SMI runs on CPU 0.  An SMI can be initiated by any AML, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * typically it's done in GPE-related methods that are run via</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * workqueues, so we can avoid the known corruption cases by always</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queueing on CPU 0.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#queue_work_on\">queue_work_on</a>(0, <a class=\"id\" href=\"#queue\">queue</a>, &amp;<a class=\"id\" href=\"#dpc\">dpc</a>-><a class=\"id\" href=\"#work\">work</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Call to queue_work() failed.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_ERROR\">AE_ERROR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dpc\">dpc</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_execute\">acpi_os_execute</a>(<a class=\"id\" href=\"#acpi_execute_type\">acpi_execute_type</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_osd_exec_callback\">acpi_osd_exec_callback</a> <a class=\"id\" href=\"#function\">function</a>, void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__acpi_os_execute\">__acpi_os_execute</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#context\">context</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_os_execute\">acpi_os_execute</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_hotplug_execute\">acpi_os_hotplug_execute</a>(<a class=\"id\" href=\"#acpi_osd_exec_callback\">acpi_osd_exec_callback</a> <a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__acpi_os_execute\">__acpi_os_execute</a>(0, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#context\">context</a>, 1);", 
"}", 
"", 
"void <a class=\"id\" href=\"#acpi_os_wait_events_complete\">acpi_os_wait_events_complete</a>(void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_workqueue\">flush_workqueue</a>(<a class=\"id\" href=\"#kacpid_wq\">kacpid_wq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_workqueue\">flush_workqueue</a>(<a class=\"id\" href=\"#kacpi_notify_wq\">kacpi_notify_wq</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_os_wait_events_complete\">acpi_os_wait_events_complete</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allocate the memory for a spinlock and initialize it.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_create_lock\">acpi_os_create_lock</a>(<a class=\"id\" href=\"#acpi_spinlock\">acpi_spinlock</a> * <a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(*<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Deallocate the memory for a spinlock.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#acpi_os_delete_lock\">acpi_os_delete_lock</a>(<a class=\"id\" href=\"#acpi_spinlock\">acpi_spinlock</a> <a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_create_semaphore\">acpi_os_create_semaphore</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#max_units\">max_units</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#initial_units\">initial_units</a>, <a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> * <a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#semaphore\">semaphore</a> *<a class=\"id\" href=\"#sem\">sem</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sem\">sem</a> = <a class=\"id\" href=\"#acpi_os_allocate\">acpi_os_allocate</a>(sizeof(struct <a class=\"id\" href=\"#semaphore\">semaphore</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sem\">sem</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#sem\">sem</a>, 0, sizeof(struct <a class=\"id\" href=\"#semaphore\">semaphore</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sema_init\">sema_init</a>(<a class=\"id\" href=\"#sem\">sem</a>, <a class=\"id\" href=\"#initial_units\">initial_units</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#handle\">handle</a> = (<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> *) <a class=\"id\" href=\"#sem\">sem</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_MUTEX\">ACPI_DB_MUTEX</a>, \"Creating semaphore[%p|%d].\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  *<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#initial_units\">initial_units</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * TODO: A better way to delete semaphores?  Linux doesn't have a</span>", 
"<span class=\"comment\"> * 'delete_semaphore()' function -- may result in an invalid</span>", 
"<span class=\"comment\"> * pointer dereference for non-synchronized consumers.<span class=\"ts\"/>Should</span>", 
"<span class=\"comment\"> * we at least check for blocked threads and signal/cancel them?</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_delete_semaphore\">acpi_os_delete_semaphore</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#semaphore\">semaphore</a> *<a class=\"id\" href=\"#sem\">sem</a> = (struct <a class=\"id\" href=\"#semaphore\">semaphore</a> *)<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sem\">sem</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_MUTEX\">ACPI_DB_MUTEX</a>, \"Deleting semaphore[%p].\\n\", <a class=\"id\" href=\"#handle\">handle</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sem\">sem</a>-><a class=\"id\" href=\"#wait_list\">wait_list</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sem\">sem</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * TODO: Support for units &gt; 1?</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_wait_semaphore\">acpi_os_wait_semaphore</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#units\">units</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#semaphore\">semaphore</a> *<a class=\"id\" href=\"#sem\">sem</a> = (struct <a class=\"id\" href=\"#semaphore\">semaphore</a> *)<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sem\">sem</a> || (<a class=\"id\" href=\"#units\">units</a> &lt; 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#units\">units</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_SUPPORT\">AE_SUPPORT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_MUTEX\">ACPI_DB_MUTEX</a>, \"Waiting for semaphore[%p|%d|%d]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#units\">units</a>, <a class=\"id\" href=\"#timeout\">timeout</a>));", 
];
xr_frag_insert('l/ce/f28283ebbb062f8f5ea779504f133cea2d5f74.xr', __xr_tmp);
