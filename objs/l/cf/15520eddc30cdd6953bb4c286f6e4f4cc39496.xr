var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Cryptographic API.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Cipher operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2002 James Morris &lt;jmorris@intercode.com.au&gt;</span>", 
"<span class=\"comment\"> * Copyright (c) 2005 Herbert Xu &lt;herbert@gondor.apana.org.au&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation; either version 2 of the License, or (at your option)</span>", 
"<span class=\"comment\"> * any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#crypto\">crypto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"static int <a class=\"id\" href=\"#setkey_unaligned\">setkey_unaligned</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_alg\">cipher_alg</a> *<a class=\"id\" href=\"#cia\">cia</a> = &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_cipher\">cra_cipher</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, *<a class=\"id\" href=\"#alignbuffer\">alignbuffer</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#absize\">absize</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#absize\">absize</a> = <a class=\"id\" href=\"#keylen\">keylen</a> + <a class=\"id\" href=\"#alignmask\">alignmask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#absize\">absize</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alignbuffer\">alignbuffer</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#ALIGN\">ALIGN</a>((unsigned long)<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#alignmask\">alignmask</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#alignbuffer\">alignbuffer</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cia\">cia</a>-><a class=\"id\" href=\"#cia_setkey\">cia_setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#alignbuffer\">alignbuffer</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#alignbuffer\">alignbuffer</a>, 0, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#setkey\">setkey</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>, unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_alg\">cipher_alg</a> *<a class=\"id\" href=\"#cia\">cia</a> = &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_cipher\">cra_cipher</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#crt_flags\">crt_flags</a> &= ~<a class=\"id\" href=\"#CRYPTO_TFM_RES_MASK\">CRYPTO_TFM_RES_MASK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#keylen\">keylen</a> &lt; <a class=\"id\" href=\"#cia\">cia</a>-><a class=\"id\" href=\"#cia_min_keysize\">cia_min_keysize</a> || <a class=\"id\" href=\"#keylen\">keylen</a> &gt; <a class=\"id\" href=\"#cia\">cia</a>-><a class=\"id\" href=\"#cia_max_keysize\">cia_max_keysize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#crt_flags\">crt_flags</a> |= <a class=\"id\" href=\"#CRYPTO_TFM_RES_BAD_KEY_LEN\">CRYPTO_TFM_RES_BAD_KEY_LEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#key\">key</a> &amp; <a class=\"id\" href=\"#alignmask\">alignmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#setkey_unaligned\">setkey_unaligned</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cia\">cia</a>-><a class=\"id\" href=\"#cia_setkey\">cia_setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cipher_crypt_unaligned\">cipher_crypt_unaligned</a>(void (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *, <a class=\"id\" href=\"#u8\">u8</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const <a class=\"id\" href=\"#u8\">u8</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#crypto_tfm_alg_blocksize\">crypto_tfm_alg_blocksize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#size\">size</a> + <a class=\"id\" href=\"#alignmask\">alignmask</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#tmp\">tmp</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#ALIGN\">ALIGN</a>((unsigned long)<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#alignmask\">alignmask</a> + 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cipher_encrypt_unaligned\">cipher_encrypt_unaligned</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_alg\">cipher_alg</a> *<a class=\"id\" href=\"#cipher\">cipher</a> = &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_cipher\">cra_cipher</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(((unsigned long)<a class=\"id\" href=\"#dst\">dst</a> | (unsigned long)<a class=\"id\" href=\"#src\">src</a>) &amp; <a class=\"id\" href=\"#alignmask\">alignmask</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cipher_crypt_unaligned\">cipher_crypt_unaligned</a>(<a class=\"id\" href=\"#cipher\">cipher</a>-><a class=\"id\" href=\"#cia_encrypt\">cia_encrypt</a>, <a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cipher\">cipher</a>-><a class=\"id\" href=\"#cia_encrypt\">cia_encrypt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cipher_decrypt_unaligned\">cipher_decrypt_unaligned</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alignmask\">alignmask</a> = <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_alg\">cipher_alg</a> *<a class=\"id\" href=\"#cipher\">cipher</a> = &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_cipher\">cra_cipher</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(((unsigned long)<a class=\"id\" href=\"#dst\">dst</a> | (unsigned long)<a class=\"id\" href=\"#src\">src</a>) &amp; <a class=\"id\" href=\"#alignmask\">alignmask</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cipher_crypt_unaligned\">cipher_crypt_unaligned</a>(<a class=\"id\" href=\"#cipher\">cipher</a>-><a class=\"id\" href=\"#cia_decrypt\">cia_decrypt</a>, <a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cipher\">cipher</a>-><a class=\"id\" href=\"#cia_decrypt\">cia_decrypt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#crypto_init_cipher_ops\">crypto_init_cipher_ops</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_tfm\">cipher_tfm</a> *<a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#crt_cipher\">crt_cipher</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_alg\">cipher_alg</a> *<a class=\"id\" href=\"#cipher\">cipher</a> = &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_cipher\">cra_cipher</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cit_setkey\">cit_setkey</a> = <a class=\"id\" href=\"#setkey\">setkey</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cit_encrypt_one\">cit_encrypt_one</a> = <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cipher_encrypt_unaligned\">cipher_encrypt_unaligned</a> : <a class=\"id\" href=\"#cipher\">cipher</a>-><a class=\"id\" href=\"#cia_encrypt\">cia_encrypt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cit_decrypt_one\">cit_decrypt_one</a> = <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(<a class=\"id\" href=\"#tfm\">tfm</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cipher_decrypt_unaligned\">cipher_decrypt_unaligned</a> : <a class=\"id\" href=\"#cipher\">cipher</a>-><a class=\"id\" href=\"#cia_decrypt\">cia_decrypt</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#crypto_exit_cipher_ops\">crypto_exit_cipher_ops</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"}", 
];
xr_frag_insert('l/cf/15520eddc30cdd6953bb4c286f6e4f4cc39496.xr', __xr_tmp);
