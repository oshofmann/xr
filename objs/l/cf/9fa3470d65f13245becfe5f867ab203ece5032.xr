var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Support for INET connection oriented protocols.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>See the TCP sources</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or(at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jhash\">jhash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_hashtables\">inet_hashtables</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp_states\">tcp_states</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#INET_CSK_DEBUG\">INET_CSK_DEBUG</a>", 
"const char <a class=\"id\" href=\"#inet_csk_timer_bug_msg\">inet_csk_timer_bug_msg</a>[] = \"inet_csk BUG: unknown timer value\\n\";", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_csk_timer_bug_msg\">inet_csk_timer_bug_msg</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This struct holds the first and last local port number.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#local_ports\">local_ports</a> <a class=\"id\" href=\"#sysctl_local_ports\">sysctl_local_ports</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#SEQLOCK_UNLOCKED\">SEQLOCK_UNLOCKED</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#range\">range</a> = { 32768, 61000 },", 
"};", 
"", 
"unsigned long *<a class=\"id\" href=\"#sysctl_local_reserved_ports\">sysctl_local_reserved_ports</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sysctl_local_reserved_ports\">sysctl_local_reserved_ports</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_get_local_port_range\">inet_get_local_port_range</a>(int *<a class=\"id\" href=\"#low\">low</a>, int *<a class=\"id\" href=\"#high\">high</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#read_seqbegin\">read_seqbegin</a>(&amp;<a class=\"id\" href=\"#sysctl_local_ports\">sysctl_local_ports</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#low\">low</a> = <a class=\"id\" href=\"#sysctl_local_ports\">sysctl_local_ports</a>.<a class=\"id\" href=\"#range\">range</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#high\">high</a> = <a class=\"id\" href=\"#sysctl_local_ports\">sysctl_local_ports</a>.<a class=\"id\" href=\"#range\">range</a>[1];", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#read_seqretry\">read_seqretry</a>(&amp;<a class=\"id\" href=\"#sysctl_local_ports\">sysctl_local_ports</a>.<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#seq\">seq</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_get_local_port_range\">inet_get_local_port_range</a>);", 
"", 
"int <a class=\"id\" href=\"#inet_csk_bind_conflict\">inet_csk_bind_conflict</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#inet_bind_bucket\">inet_bind_bucket</a> *<a class=\"id\" href=\"#tb\">tb</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#sk_rcv_saddr\">sk_rcv_saddr</a> = <a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk2\">sk2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reuse\">reuse</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Unlike other sk lookup places we do not check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for sk_net here, since _all_ the socks listed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in tb-&gt;owners list belong to the same net - the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one this bucket belongs to.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each_bound\">sk_for_each_bound</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#owners\">owners</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> != <a class=\"id\" href=\"#sk2\">sk2</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#inet_v6_ipv6only\">inet_v6_ipv6only</a>(<a class=\"id\" href=\"#sk2\">sk2</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#sk2\">sk2</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> == <a class=\"id\" href=\"#sk2\">sk2</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#reuse\">reuse</a> || !<a class=\"id\" href=\"#sk2\">sk2</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk2\">sk2</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#sk2_rcv_saddr\">sk2_rcv_saddr</a> = <a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>(<a class=\"id\" href=\"#sk2\">sk2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk2_rcv_saddr\">sk2_rcv_saddr</a> || !<a class=\"id\" href=\"#sk_rcv_saddr\">sk_rcv_saddr</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk2_rcv_saddr\">sk2_rcv_saddr</a> == <a class=\"id\" href=\"#sk_rcv_saddr\">sk_rcv_saddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#node\">node</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_csk_bind_conflict\">inet_csk_bind_conflict</a>);", 
"", 
"<span class=\"comment\">/* Obtain a reference to a local port for the given sock,</span>", 
"<span class=\"comment\"> * if snum is zero it means select any available local port.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#inet_csk_get_port\">inet_csk_get_port</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned short <a class=\"id\" href=\"#snum\">snum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#hashinfo\">hashinfo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_hashbucket\">inet_bind_hashbucket</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_bucket\">inet_bind_bucket</a> *<a class=\"id\" href=\"#tb\">tb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#attempts\">attempts</a> = 5;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#smallest_size\">smallest_size</a> = -1, <a class=\"id\" href=\"#smallest_rover\">smallest_rover</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#snum\">snum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#remaining\">remaining</a>, <a class=\"id\" href=\"#rover\">rover</a>, <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>;", 
"", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_get_local_port_range\">inet_get_local_port_range</a>(&amp;<a class=\"id\" href=\"#low\">low</a>, &amp;<a class=\"id\" href=\"#high\">high</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> = (<a class=\"id\" href=\"#high\">high</a> - <a class=\"id\" href=\"#low\">low</a>) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smallest_rover\">smallest_rover</a> = <a class=\"id\" href=\"#rover\">rover</a> = <a class=\"id\" href=\"#net_random\">net_random</a>() % <a class=\"id\" href=\"#remaining\">remaining</a> + <a class=\"id\" href=\"#low\">low</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smallest_size\">smallest_size</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_is_reserved_local_port\">inet_is_reserved_local_port</a>(<a class=\"id\" href=\"#rover\">rover</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next_nolock\">next_nolock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash\">bhash</a>[<a class=\"id\" href=\"#inet_bhashfn\">inet_bhashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#rover\">rover</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash_size\">bhash_size</a>)];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_bind_bucket_for_each\">inet_bind_bucket_for_each</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#chain\">chain</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#ib_net\">ib_net</a>(<a class=\"id\" href=\"#tb\">tb</a>), <a class=\"id\" href=\"#net\">net</a>) && <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#port\">port</a> == <a class=\"id\" href=\"#rover\">rover</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#fastreuse\">fastreuse</a> &gt; 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#num_owners\">num_owners</a> &lt; <a class=\"id\" href=\"#smallest_size\">smallest_size</a> || <a class=\"id\" href=\"#smallest_size\">smallest_size</a> == -1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smallest_size\">smallest_size</a> = <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#num_owners\">num_owners</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smallest_rover\">smallest_rover</a> = <a class=\"id\" href=\"#rover\">rover</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bsockets\">bsockets</a>) &gt; (<a class=\"id\" href=\"#high\">high</a> - <a class=\"id\" href=\"#low\">low</a>) + 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snum\">snum</a> = <a class=\"id\" href=\"#smallest_rover\">smallest_rover</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#have_snum\">have_snum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_nolock\">next_nolock</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#rover\">rover</a> &gt; <a class=\"id\" href=\"#high\">high</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rover\">rover</a> = <a class=\"id\" href=\"#low\">low</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (--<a class=\"id\" href=\"#remaining\">remaining</a> &gt; 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Exhausted local port range during search?  It is not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * possible for us to be holding one of the bind hash</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * locks if this test triggers, because if 'remaining'</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * drops to zero, we broke out of the do/while loop at</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the top level, not from the 'break;' statement.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#remaining\">remaining</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#smallest_size\">smallest_size</a> != -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snum\">snum</a> = <a class=\"id\" href=\"#smallest_rover\">smallest_rover</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#have_snum\">have_snum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* OK, here is the one we will use.  HEAD is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * non-NULL and we hold it's mutex.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snum\">snum</a> = <a class=\"id\" href=\"#rover\">rover</a>;", 
"<span class=\"ts\"/>} else {", 
"<a class=\"id\" href=\"#have_snum\">have_snum</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash\">bhash</a>[<a class=\"id\" href=\"#inet_bhashfn\">inet_bhashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#snum\">snum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash_size\">bhash_size</a>)];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_bind_bucket_for_each\">inet_bind_bucket_for_each</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#chain\">chain</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#ib_net\">ib_net</a>(<a class=\"id\" href=\"#tb\">tb</a>), <a class=\"id\" href=\"#net\">net</a>) && <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#port\">port</a> == <a class=\"id\" href=\"#snum\">snum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#tb_found\">tb_found</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#tb_not_found\">tb_not_found</a>;", 
"<a class=\"id\" href=\"#tb_found\">tb_found</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hlist_empty\">hlist_empty</a>(&amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#owners\">owners</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#fastreuse\">fastreuse</a> &gt; 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a> && <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#smallest_size\">smallest_size</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#success\">success</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_af_ops\">icsk_af_ops</a>-><a class=\"id\" href=\"#bind_conflict\">bind_conflict</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#tb\">tb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a> && <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#smallest_size\">smallest_size</a> != -1 && --<a class=\"id\" href=\"#attempts\">attempts</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_unlock\">fail_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#tb_not_found\">tb_not_found</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tb\">tb</a> && (<a class=\"id\" href=\"#tb\">tb</a> = <a class=\"id\" href=\"#inet_bind_bucket_create\">inet_bind_bucket_create</a>(<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bind_bucket_cachep\">bind_bucket_cachep</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#snum\">snum</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_unlock\">fail_unlock</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hlist_empty\">hlist_empty</a>(&amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#owners\">owners</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a> && <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#fastreuse\">fastreuse</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#fastreuse\">fastreuse</a> = 0;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#fastreuse\">fastreuse</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>   (!<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a> || <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#fastreuse\">fastreuse</a> = 0;", 
"<a class=\"id\" href=\"#success\">success</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_bind_hash\">inet_bind_hash</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#snum\">snum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a> != <a class=\"id\" href=\"#tb\">tb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#fail_unlock\">fail_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_csk_get_port\">inet_csk_get_port</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wait for an incoming connection, avoid race conditions. This must be called</span>", 
"<span class=\"comment\"> * with the socket locked.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#inet_csk_wait_for_connect\">inet_csk_wait_for_connect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long <a class=\"id\" href=\"#timeo\">timeo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * True wake-one mechanism for incoming connections: only</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one process gets woken up, not the 'whole herd'.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Since we do not 'race &amp; poll' for established sockets</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * anymore, the common case will execute the loop only once.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Subtle issue: \"add_wait_queue_exclusive()\" will be added</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after any current non-exclusive waiters, and we know that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it will always _stay_ after any new non-exclusive waiters</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because all non-exclusive waiters are added at the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * beginning of the wait-queue. As such, it's ok to \"drop\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * our exclusiveness temporarily when we get woken up without</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * having to remove and re-insert us on the wait queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait_exclusive\">prepare_to_wait_exclusive</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reqsk_queue_empty\">reqsk_queue_empty</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeo\">timeo</a> = <a class=\"id\" href=\"#schedule_timeout\">schedule_timeout</a>(<a class=\"id\" href=\"#timeo\">timeo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#reqsk_queue_empty\">reqsk_queue_empty</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_intr_errno\">sock_intr_errno</a>(<a class=\"id\" href=\"#timeo\">timeo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#timeo\">timeo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This will accept the next outstanding connection.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#inet_csk_accept\">inet_csk_accept</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int *<a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#newsk\">newsk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We need to make sure that this socket is listening,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and that it has something pending.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find already established connection */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reqsk_queue_empty\">reqsk_queue_empty</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#timeo\">timeo</a> = <a class=\"id\" href=\"#sock_rcvtimeo\">sock_rcvtimeo</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If this is a non blocking socket don't sleep */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#timeo\">timeo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inet_csk_wait_for_connect\">inet_csk_wait_for_connect</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#timeo\">timeo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsk\">newsk</a> = <a class=\"id\" href=\"#reqsk_queue_get_child\">reqsk_queue_get_child</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#newsk\">newsk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_SYN_RECV\">TCP_SYN_RECV</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#newsk\">newsk</a>;", 
"<a class=\"id\" href=\"#out_err\">out_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsk\">newsk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_csk_accept\">inet_csk_accept</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Using different timers for retransmit, delayed acks and probes</span>", 
"<span class=\"comment\"> * We may wish use just one timer maintaining a list of expire jiffies</span>", 
"<span class=\"comment\"> * to optimize.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#inet_csk_init_xmit_timers\">inet_csk_init_xmit_timers</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       void (*<a class=\"id\" href=\"#retransmit_handler\">retransmit_handler</a>)(unsigned long),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       void (*<a class=\"id\" href=\"#delack_handler\">delack_handler</a>)(unsigned long),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       void (*<a class=\"id\" href=\"#keepalive_handler\">keepalive_handler</a>)(unsigned long))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_retransmit_timer\">icsk_retransmit_timer</a>, <a class=\"id\" href=\"#retransmit_handler\">retransmit_handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_delack_timer\">icsk_delack_timer</a>, <a class=\"id\" href=\"#delack_handler\">delack_handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_timer\">sk_timer</a>, <a class=\"id\" href=\"#keepalive_handler\">keepalive_handler</a>, (unsigned long)<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_pending\">icsk_pending</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pending\">pending</a> = 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_csk_init_xmit_timers\">inet_csk_init_xmit_timers</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_csk_clear_xmit_timers\">inet_csk_clear_xmit_timers</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_pending\">icsk_pending</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pending\">pending</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#blocked\">blocked</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_stop_timer\">sk_stop_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_retransmit_timer\">icsk_retransmit_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_stop_timer\">sk_stop_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_delack_timer\">icsk_delack_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_stop_timer\">sk_stop_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_timer\">sk_timer</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_csk_clear_xmit_timers\">inet_csk_clear_xmit_timers</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_csk_delete_keepalive_timer\">inet_csk_delete_keepalive_timer</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_stop_timer\">sk_stop_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_timer\">sk_timer</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_csk_delete_keepalive_timer\">inet_csk_delete_keepalive_timer</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_csk_reset_keepalive_timer\">inet_csk_reset_keepalive_timer</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned long <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_reset_timer\">sk_reset_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_timer\">sk_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_csk_reset_keepalive_timer\">inet_csk_reset_keepalive_timer</a>);", 
"", 
"struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#inet_csk_route_req\">inet_csk_route_req</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#ireq\">ireq</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = { .<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#nl_u\">nl_u</a> = { .<a class=\"id\" href=\"#ip4_u\">ip4_u</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      { .<a class=\"id\" href=\"#daddr\">daddr</a> = ((<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srr\">srr</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#faddr\">faddr</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#loc_addr\">loc_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#RT_CONN_FLAGS\">RT_CONN_FLAGS</a>(<a class=\"id\" href=\"#sk\">sk</a>) } },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#inet_sk_flowi_flags\">inet_sk_flowi_flags</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#uli_u\">uli_u</a> = { .<a class=\"id\" href=\"#ports\">ports</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       { .<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> .<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_port\">rmt_port</a> } } };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_req_classify_flow\">security_req_classify_flow</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_route_output_flow\">ip_route_output_flow</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#sk\">sk</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_route\">no_route</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#is_strictroute\">is_strictroute</a> && <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a> != <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_gateway\">rt_gateway</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#route_err\">route_err</a>;", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<a class=\"id\" href=\"#route_err\">route_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<a class=\"id\" href=\"#no_route\">no_route</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUTNOROUTES\">IPSTATS_MIB_OUTNOROUTES</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_csk_route_req\">inet_csk_route_req</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#inet_synq_hash\">inet_synq_hash</a>(const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#raddr\">raddr</a>, const <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#rport\">rport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rnd\">rnd</a>, const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#synq_hsize\">synq_hsize</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jhash_2words\">jhash_2words</a>((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#raddr\">raddr</a>, (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#rport\">rport</a>, <a class=\"id\" href=\"#rnd\">rnd</a>) &amp; (<a class=\"id\" href=\"#synq_hsize\">synq_hsize</a> - 1);", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AF_INET_FAMILY\">AF_INET_FAMILY</a>(<a class=\"id\" href=\"#fam\">fam</a>) ((<a class=\"id\" href=\"#fam\">fam</a>) == <a class=\"id\" href=\"#AF_INET\">AF_INET</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AF_INET_FAMILY\">AF_INET_FAMILY</a>(<a class=\"id\" href=\"#fam\">fam</a>) 1", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#inet_csk_search_req\">inet_csk_search_req</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#request_sock\">request_sock</a> ***<a class=\"id\" href=\"#prevp\">prevp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#rport\">rport</a>, const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#raddr\">raddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#laddr\">laddr</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a> *<a class=\"id\" href=\"#lopt\">lopt</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#listen_opt\">listen_opt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>, **<a class=\"id\" href=\"#prev\">prev</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#prev\">prev</a> = &amp;<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#syn_table\">syn_table</a>[<a class=\"id\" href=\"#inet_synq_hash\">inet_synq_hash</a>(<a class=\"id\" href=\"#raddr\">raddr</a>, <a class=\"id\" href=\"#rport\">rport</a>, <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>)];", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#req\">req</a> = *<a class=\"id\" href=\"#prev\">prev</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#prev\">prev</a> = &amp;<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#dl_next\">dl_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#ireq\">ireq</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_port\">rmt_port</a> == <a class=\"id\" href=\"#rport\">rport</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a> == <a class=\"id\" href=\"#raddr\">raddr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#loc_addr\">loc_addr</a> == <a class=\"id\" href=\"#laddr\">laddr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#AF_INET_FAMILY\">AF_INET_FAMILY</a>(<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#family\">family</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#prevp\">prevp</a> = <a class=\"id\" href=\"#prev\">prev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#req\">req</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_csk_search_req\">inet_csk_search_req</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_csk_reqsk_queue_hash_add\">inet_csk_reqsk_queue_hash_add</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a> *<a class=\"id\" href=\"#lopt\">lopt</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#listen_opt\">listen_opt</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#inet_synq_hash\">inet_synq_hash</a>(<a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>, <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rmt_port\">rmt_port</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>, <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reqsk_queue_hash_req\">reqsk_queue_hash_req</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>, <a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reqsk_queue_added\">inet_csk_reqsk_queue_added</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_csk_reqsk_queue_hash_add\">inet_csk_reqsk_queue_hash_add</a>);", 
"", 
"<span class=\"comment\">/* Only thing we need from tcp.h */</span>", 
"extern int <a class=\"id\" href=\"#sysctl_tcp_synack_retries\">sysctl_tcp_synack_retries</a>;", 
"", 
"", 
"<span class=\"comment\">/* Decide when to expire the request and when to resend SYN-ACK */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#syn_ack_recalc\">syn_ack_recalc</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>, const int <a class=\"id\" href=\"#thresh\">thresh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const int <a class=\"id\" href=\"#max_retries\">max_retries</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#rskq_defer_accept\">rskq_defer_accept</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int *<a class=\"id\" href=\"#expire\">expire</a>, int *<a class=\"id\" href=\"#resend\">resend</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rskq_defer_accept\">rskq_defer_accept</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#expire\">expire</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#retrans\">retrans</a> >= <a class=\"id\" href=\"#thresh\">thresh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#resend\">resend</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#expire\">expire</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#retrans\">retrans</a> >= <a class=\"id\" href=\"#thresh\">thresh</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>  (!<a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#acked\">acked</a> || <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#retrans\">retrans</a> >= <a class=\"id\" href=\"#max_retries\">max_retries</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Do not resend while waiting for data after ACK,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * start to resend on end of deferring period to give</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * last chance for data or ACK to create established socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#resend\">resend</a> = !<a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#acked\">acked</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#retrans\">retrans</a> >= <a class=\"id\" href=\"#rskq_defer_accept\">rskq_defer_accept</a> - 1;", 
"}", 
"", 
"void <a class=\"id\" href=\"#inet_csk_reqsk_queue_prune\">inet_csk_reqsk_queue_prune</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned long <a class=\"id\" href=\"#interval\">interval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned long <a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned long <a class=\"id\" href=\"#max_rto\">max_rto</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock_queue\">request_sock_queue</a> *<a class=\"id\" href=\"#queue\">queue</a> = &amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a> *<a class=\"id\" href=\"#lopt\">lopt</a> = <a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#listen_opt\">listen_opt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#max_retries\">max_retries</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_syn_retries\">icsk_syn_retries</a> ? : <a class=\"id\" href=\"#sysctl_tcp_synack_retries\">sysctl_tcp_synack_retries</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#thresh\">thresh</a> = <a class=\"id\" href=\"#max_retries\">max_retries</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> **<a class=\"id\" href=\"#reqp\">reqp</a>, *<a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#budget\">budget</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lopt\">lopt</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#qlen\">qlen</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Normally all the openreqs are young and become mature</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (i.e. converted to established socket) for first timeout.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If synack was not acknowledged for 3 seconds, it means</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one of the following things: synack was lost, ack was lost,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * rtt is high or nobody planned to ack (i.e. synflood).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When server is a bit loaded, queue is populated with old</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * open requests, reducing effective size of queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When server is well loaded, queue size reduces to zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after several minutes of work. It is not synflood,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it is normal operation. The solution is pruning</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * too old entries overriding normal timeout, when</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * situation becomes dangerous.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Essentially, we reserve half of room for young</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * embrions; and abort old ones without pity, if old</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ones are about to clog our table.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#qlen\">qlen</a>>>(<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#max_qlen_log\">max_qlen_log</a>-1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#young\">young</a> = (<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#qlen_young\">qlen_young</a><<1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#thresh\">thresh</a> &gt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#qlen\">qlen</a> &lt; <a class=\"id\" href=\"#young\">young</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thresh\">thresh</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#young\">young</a> <<= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#rskq_defer_accept\">rskq_defer_accept</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_retries\">max_retries</a> = <a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#rskq_defer_accept\">rskq_defer_accept</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#budget\">budget</a> = 2 * (<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> / (<a class=\"id\" href=\"#timeout\">timeout</a> / <a class=\"id\" href=\"#interval\">interval</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#clock_hand\">clock_hand</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqp\">reqp</a>=&amp;<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#syn_table\">syn_table</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#req\">req</a> = *<a class=\"id\" href=\"#reqp\">reqp</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after_eq\">time_after_eq</a>(<a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#expires\">expires</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#expire\">expire</a> = 0, <a class=\"id\" href=\"#resend\">resend</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#syn_ack_recalc\">syn_ack_recalc</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#thresh\">thresh</a>, <a class=\"id\" href=\"#max_retries\">max_retries</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#rskq_defer_accept\">rskq_defer_accept</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#expire\">expire</a>, &amp;<a class=\"id\" href=\"#resend\">resend</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#syn_ack_timeout\">syn_ack_timeout</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#syn_ack_timeout\">syn_ack_timeout</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#expire\">expire</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#resend\">resend</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#rtx_syn_ack\">rtx_syn_ack</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#NULL\">NULL</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#acked\">acked</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#timeo\">timeo</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#retrans\">retrans</a>++ == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#qlen_young\">qlen_young</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeo\">timeo</a> = <a class=\"id\" href=\"#min\">min</a>((<a class=\"id\" href=\"#timeout\">timeout</a> << <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#retrans\">retrans</a>), <a class=\"id\" href=\"#max_rto\">max_rto</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#now\">now</a> + <a class=\"id\" href=\"#timeo\">timeo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqp\">reqp</a> = &amp;<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#dl_next\">dl_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Drop this request */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reqsk_queue_unlink\">inet_csk_reqsk_queue_unlink</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#reqp\">reqp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqsk_queue_removed\">reqsk_queue_removed</a>(<a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqsk_free\">reqsk_free</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqp\">reqp</a> = &amp;<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#dl_next\">dl_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = (<a class=\"id\" href=\"#i\">i</a> + 1) &amp; (<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> - 1);", 
"", 
"<span class=\"ts\"/>} while (--<a class=\"id\" href=\"#budget\">budget</a> &gt; 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#clock_hand\">clock_hand</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#qlen\">qlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reset_keepalive_timer\">inet_csk_reset_keepalive_timer</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#interval\">interval</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_csk_reqsk_queue_prune\">inet_csk_reqsk_queue_prune</a>);", 
"", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#inet_csk_clone\">inet_csk_clone</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#priority\">priority</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#newsk\">newsk</a> = <a class=\"id\" href=\"#sk_clone\">sk_clone</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#priority\">priority</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newsk\">newsk</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#newicsk\">newicsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newsk\">newsk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> = <a class=\"id\" href=\"#TCP_SYN_RECV\">TCP_SYN_RECV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newicsk\">newicsk</a>-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>)-><a class=\"id\" href=\"#inet_dport\">inet_dport</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rmt_port\">rmt_port</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#loc_port\">loc_port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>)-><a class=\"id\" href=\"#inet_sport\">inet_sport</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#loc_port\">loc_port</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newsk\">newsk</a>-><a class=\"id\" href=\"#sk_write_space\">sk_write_space</a> = <a class=\"id\" href=\"#sk_stream_write_space\">sk_stream_write_space</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newicsk\">newicsk</a>-><a class=\"id\" href=\"#icsk_retransmits\">icsk_retransmits</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newicsk\">newicsk</a>-><a class=\"id\" href=\"#icsk_backoff\">icsk_backoff</a><span class=\"ts\"/>  = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newicsk\">newicsk</a>-><a class=\"id\" href=\"#icsk_probes_out\">icsk_probes_out</a>  = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Deinitialize accept_queue to trap illegal accesses. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#newicsk\">newicsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>, 0, sizeof(<a class=\"id\" href=\"#newicsk\">newicsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_inet_csk_clone\">security_inet_csk_clone</a>(<a class=\"id\" href=\"#newsk\">newsk</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#newsk\">newsk</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_csk_clone\">inet_csk_clone</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * At this point, there should be no process reference to this</span>", 
"<span class=\"comment\"> * socket, and thus no user references at all.  Therefore we</span>", 
"<span class=\"comment\"> * can assume the socket waitqueue is inactive and nobody will</span>", 
"<span class=\"comment\"> * try to jump onto it.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#inet_csk_destroy_sock\">inet_csk_destroy_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* It cannot be in hash table! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#sk_unhashed\">sk_unhashed</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If it has not 0 inet_sk(sk)-&gt;inet_num, it must be bound */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> && !<a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#destroy\">destroy</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_stream_kill_queues\">sk_stream_kill_queues</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfrm_sk_free_policy\">xfrm_sk_free_policy</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_refcnt_debug_release\">sk_refcnt_debug_release</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_dec\">percpu_counter_dec</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#orphan_count\">orphan_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_csk_destroy_sock\">inet_csk_destroy_sock</a>);", 
"", 
];
xr_frag_insert('l/cf/9fa3470d65f13245becfe5f867ab203ece5032.xr', __xr_tmp);
