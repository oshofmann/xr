var __xr_tmp = [
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_handle_lock\">t_handle_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(2, \"transaction too old, requesting commit for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"handle %p\\n\", <a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is non-blocking */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__log_start_commit\">__log_start_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Special case: JFS_SYNC synchronous updates require us</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to wait for the commit to complete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_sync\">h_sync</a> && !(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_MEMALLOC\">PF_MEMALLOC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#log_wait_commit\">log_wait_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_handle_lock\">t_handle_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_map_release\">lock_map_release</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_lockdep_map\">h_lockdep_map</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_free_handle\">jbd_free_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * int journal_force_commit() - force any uncommitted transactions</span>", 
"<span class=\"comment\"> * @journal: journal to force</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For synchronous operations: force any uncommitted transactions</span>", 
"<span class=\"comment\"> * to disk.  May seem kludgy, but it reuses all the handle batching</span>", 
"<span class=\"comment\"> * code in a very simple manner.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#journal_force_commit\">journal_force_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#journal_start\">journal_start</a>(<a class=\"id\" href=\"#journal\">journal</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_sync\">h_sync</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#journal_stop\">journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * List management code snippets: various functions for manipulating the</span>", 
"<span class=\"comment\"> * transaction buffer lists.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Append a buffer to a transaction list, given the transaction's list head</span>", 
"<span class=\"comment\"> * pointer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * j_list_lock is held.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * jbd_lock_bh_state(jh2bh(jh)) is held.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#__blist_add_buffer\">__blist_add_buffer</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> **<a class=\"id\" href=\"#list\">list</a>, struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_tnext\">b_tnext</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_tprev\">b_tprev</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Insert at the tail of the list to preserve order */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#first\">first</a> = *<a class=\"id\" href=\"#list\">list</a>, *<a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#b_tprev\">b_tprev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_tprev\">b_tprev</a> = <a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_tnext\">b_tnext</a> = <a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#b_tnext\">b_tnext</a> = <a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#b_tprev\">b_tprev</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Remove a buffer from a transaction list, given the transaction's list</span>", 
"<span class=\"comment\"> * head pointer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held, and the journal may not be locked.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * jbd_lock_bh_state(jh2bh(jh)) is held.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#__blist_del_buffer\">__blist_del_buffer</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> **<a class=\"id\" href=\"#list\">list</a>, struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#list\">list</a> == <a class=\"id\" href=\"#jh\">jh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_tnext\">b_tnext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#list\">list</a> == <a class=\"id\" href=\"#jh\">jh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_tprev\">b_tprev</a>-><a class=\"id\" href=\"#b_tnext\">b_tnext</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_tnext\">b_tnext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_tnext\">b_tnext</a>-><a class=\"id\" href=\"#b_tprev\">b_tprev</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_tprev\">b_tprev</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Remove a buffer from the appropriate transaction list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that this function can *change* the value of</span>", 
"<span class=\"comment\"> * bh-&gt;b_transaction-&gt;t_sync_datalist, t_buffers, t_forget,</span>", 
"<span class=\"comment\"> * t_iobuf_list, t_shadow_list, t_log_list or t_reserved_list.  If the caller</span>", 
"<span class=\"comment\"> * is holding onto a copy of one of thee pointers, it could go bad.</span>", 
"<span class=\"comment\"> * Generally the caller needs to re-read the pointer from the transaction_t.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called under j_list_lock.  The journal may not be locked.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__journal_temp_unlink_buffer\">__journal_temp_unlink_buffer</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> **<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#jbd_is_locked_bh_state\">jbd_is_locked_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_transaction\">b_transaction</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#assert_spin_locked\">assert_spin_locked</a>(&amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_journal\">t_journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_jlist\">b_jlist</a> &lt; <a class=\"id\" href=\"#BJ_Types\">BJ_Types</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_jlist\">b_jlist</a> != <a class=\"id\" href=\"#BJ_None\">BJ_None</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#transaction\">transaction</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_jlist\">b_jlist</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BJ_None\">BJ_None</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BJ_SyncData\">BJ_SyncData</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_sync_datalist\">t_sync_datalist</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BJ_Metadata\">BJ_Metadata</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_nr_buffers\">t_nr_buffers</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_nr_buffers\">t_nr_buffers</a> >= 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_buffers\">t_buffers</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BJ_Forget\">BJ_Forget</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_forget\">t_forget</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BJ_IO\">BJ_IO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_iobuf_list\">t_iobuf_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BJ_Shadow\">BJ_Shadow</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_shadow_list\">t_shadow_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BJ_LogCtl\">BJ_LogCtl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_log_list\">t_log_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BJ_Reserved\">BJ_Reserved</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_reserved_list\">t_reserved_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BJ_Locked\">BJ_Locked</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_locked_list\">t_locked_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__blist_del_buffer\">__blist_del_buffer</a>(<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_jlist\">b_jlist</a> = <a class=\"id\" href=\"#BJ_None\">BJ_None</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_clear_buffer_jbddirty\">test_clear_buffer_jbddirty</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);<span class=\"ts\"/><span class=\"comment\">/* Expose it to the VM */</span>", 
"}", 
"", 
"void <a class=\"id\" href=\"#__journal_unfile_buffer\">__journal_unfile_buffer</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__journal_temp_unlink_buffer\">__journal_temp_unlink_buffer</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_transaction\">b_transaction</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#journal_unfile_buffer\">journal_unfile_buffer</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_lock_bh_state\">jbd_lock_bh_state</a>(<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__journal_unfile_buffer\">__journal_unfile_buffer</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>));", 
"}", 
];
xr_frag_insert('l/cf/af9926bf813f4b37d993ab5b1d218795d7bd17.xr', __xr_tmp);
