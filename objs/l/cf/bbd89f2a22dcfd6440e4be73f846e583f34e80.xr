var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb\">rb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#left\">left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#left\">left</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a>, <a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfq_rb_first_group\">cfq_rb_first_group</a>(struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#left\">left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb\">rb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#left\">left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rb_entry_cfqg\">rb_entry_cfqg</a>(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#left\">left</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rb_erase_init\">rb_erase_init</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_erase\">rb_erase</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RB_CLEAR_NODE\">RB_CLEAR_NODE</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_rb_erase\">cfq_rb_erase</a>(struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#left\">left</a> == <a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_erase_init\">rb_erase_init</a>(<a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb\">rb</a>);", 
"<span class=\"ts\"/>--<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * would be nice to take fifo expire time into account as well</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#request\">request</a> *", 
"<a class=\"id\" href=\"#cfq_find_next_rq\">cfq_find_next_rq</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#last\">last</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rbnext\">rbnext</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(&amp;<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rbprev\">rbprev</a> = <a class=\"id\" href=\"#rb_prev\">rb_prev</a>(&amp;<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#RB_EMPTY_NODE\">RB_EMPTY_NODE</a>(&amp;<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rbprev\">rbprev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#rb_entry_rq\">rb_entry_rq</a>(<a class=\"id\" href=\"#rbprev\">rbprev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rbnext\">rbnext</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#rb_entry_rq\">rb_entry_rq</a>(<a class=\"id\" href=\"#rbnext\">rbnext</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rbnext\">rbnext</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rbnext\">rbnext</a> && <a class=\"id\" href=\"#rbnext\">rbnext</a> != &amp;<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#rb_entry_rq\">rb_entry_rq</a>(<a class=\"id\" href=\"#rbnext\">rbnext</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfq_choose_req\">cfq_choose_req</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#last\">last</a>));", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#cfq_slice_offset\">cfq_slice_offset</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * just an approximation, should be ok.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a> - 1) * (<a class=\"id\" href=\"#cfq_prio_slice\">cfq_prio_slice</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, 1, 0) -", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#cfq_prio_slice\">cfq_prio_slice</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfq_cfqq_sync\">cfq_cfqq_sync</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>), <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#ioprio\">ioprio</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a>", 
"<a class=\"id\" href=\"#cfqg_key\">cfqg_key</a>(struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#vdisktime\">vdisktime</a> - <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#min_vdisktime\">min_vdisktime</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#__cfq_group_service_tree_add\">__cfq_group_service_tree_add</a>(struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#node\">node</a> = &amp;<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#rb\">rb</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#__cfqg\">__cfqg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#cfqg_key\">cfqg_key</a>(<a class=\"id\" href=\"#st\">st</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#left\">left</a> = 1;", 
"", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#node\">node</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cfqg\">__cfqg</a> = <a class=\"id\" href=\"#rb_entry_cfqg\">rb_entry_cfqg</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a> &lt; <a class=\"id\" href=\"#cfqg_key\">cfqg_key</a>(<a class=\"id\" href=\"#st\">st</a>, <a class=\"id\" href=\"#__cfqg\">__cfqg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#left\">left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#left\">left</a> = &amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_link_node\">rb_link_node</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, &amp;<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#rb\">rb</a>);", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#cfq_group_service_tree_add\">cfq_group_service_tree_add</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a> = &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#grp_service_tree\">grp_service_tree</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#__cfqg\">__cfqg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a>++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#on_st\">on_st</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Currently put the group at the end. Later implement something</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so that groups get lesser vtime based on their weights, so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if group does not loose all if it was not continously backlogged.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#rb_last\">rb_last</a>(&amp;<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#rb\">rb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cfqg\">__cfqg</a> = <a class=\"id\" href=\"#rb_entry_cfqg\">rb_entry_cfqg</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#vdisktime\">vdisktime</a> = <a class=\"id\" href=\"#__cfqg\">__cfqg</a>-><a class=\"id\" href=\"#vdisktime\">vdisktime</a> + <a class=\"id\" href=\"#CFQ_IDLE_DELAY\">CFQ_IDLE_DELAY</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#vdisktime\">vdisktime</a> = <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#min_vdisktime\">min_vdisktime</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__cfq_group_service_tree_add\">__cfq_group_service_tree_add</a>(<a class=\"id\" href=\"#st\">st</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#on_st\">on_st</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#total_weight\">total_weight</a> += <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#weight\">weight</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#cfq_group_service_tree_del\">cfq_group_service_tree_del</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a> = &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#grp_service_tree\">grp_service_tree</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#active\">active</a> == &amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#active\">active</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a> &lt; 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a>--;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If there are other cfq queues under this group, don't delete it */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqg\">cfq_log_cfqg</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>, \"del_from_rr group\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#on_st\">on_st</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#total_weight\">total_weight</a> -= <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#weight\">weight</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#RB_EMPTY_NODE\">RB_EMPTY_NODE</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_rb_erase\">cfq_rb_erase</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, <a class=\"id\" href=\"#st\">st</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#saved_workload_slice\">saved_workload_slice</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_dequeue_stats\">cfq_blkiocg_update_dequeue_stats</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>, 1);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#cfq_cfqq_slice_usage\">cfq_cfqq_slice_usage</a>(struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#slice_used\">slice_used</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Queue got expired before even a single request completed or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * got expired immediately after first request completion.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_start\">slice_start</a> || <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_start\">slice_start</a> == <a class=\"id\" href=\"#jiffies\">jiffies</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Also charge the seek time incurred to the group, otherwise</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if there are mutiple queues in the group, each can dispatch</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a single request on seeky media and cause lots of seek time</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and group will never know it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slice_used\">slice_used</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(unsigned, (<a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#dispatch_start\">dispatch_start</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>1);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slice_used\">slice_used</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_start\">slice_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#slice_used\">slice_used</a> &gt; <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#allocated_slice\">allocated_slice</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slice_used\">slice_used</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#allocated_slice\">allocated_slice</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#slice_used\">slice_used</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_group_served\">cfq_group_served</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a> = &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#grp_service_tree\">grp_service_tree</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#used_sl\">used_sl</a>, <a class=\"id\" href=\"#charge\">charge</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_sync\">nr_sync</a> = <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a> - <a class=\"id\" href=\"#cfqg_busy_async_queues\">cfqg_busy_async_queues</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>- <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#service_tree_idle\">service_tree_idle</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#nr_sync\">nr_sync</a> &lt; 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#used_sl\">used_sl</a> = <a class=\"id\" href=\"#charge\">charge</a> = <a class=\"id\" href=\"#cfq_cfqq_slice_usage\">cfq_cfqq_slice_usage</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iops_mode\">iops_mode</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#charge\">charge</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_dispatch\">slice_dispatch</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#cfq_cfqq_sync\">cfq_cfqq_sync</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) && !<a class=\"id\" href=\"#nr_sync\">nr_sync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#charge\">charge</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#allocated_slice\">allocated_slice</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Can't update vdisktime while group is on service tree */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_rb_erase\">cfq_rb_erase</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, <a class=\"id\" href=\"#st\">st</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#vdisktime\">vdisktime</a> += <a class=\"id\" href=\"#cfq_scale_slice\">cfq_scale_slice</a>(<a class=\"id\" href=\"#charge\">charge</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__cfq_group_service_tree_add\">__cfq_group_service_tree_add</a>(<a class=\"id\" href=\"#st\">st</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This group is being expired. Save the context */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#workload_expires\">workload_expires</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#saved_workload_slice\">saved_workload_slice</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#workload_expires\">workload_expires</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>- <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#saved_workload\">saved_workload</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_type\">serving_type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#saved_serving_prio\">saved_serving_prio</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#saved_workload_slice\">saved_workload_slice</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqg\">cfq_log_cfqg</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>, \"served: vt=%llu min_vt=%llu\", <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#vdisktime\">vdisktime</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#min_vdisktime\">min_vdisktime</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"sl_used=%u disp=%u charge=%u iops=%u\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" sect=%u\", <a class=\"id\" href=\"#used_sl\">used_sl</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_dispatch\">slice_dispatch</a>, <a class=\"id\" href=\"#charge\">charge</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iops_mode\">iops_mode</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>), <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#nr_sectors\">nr_sectors</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_timeslice_used\">cfq_blkiocg_update_timeslice_used</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>, <a class=\"id\" href=\"#used_sl\">used_sl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_set_start_empty_time\">cfq_blkiocg_set_start_empty_time</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CFQ_GROUP_IOSCHED\">CONFIG_CFQ_GROUP_IOSCHED</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg_of_blkg\">cfqg_of_blkg</a>(struct <a class=\"id\" href=\"#blkio_group\">blkio_group</a> *<a class=\"id\" href=\"#blkg\">blkg</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blkg\">blkg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#blkg\">blkg</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a>, <a class=\"id\" href=\"#blkg\">blkg</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"void", 
"<a class=\"id\" href=\"#cfq_update_blkio_group_weight\">cfq_update_blkio_group_weight</a>(struct <a class=\"id\" href=\"#blkio_group\">blkio_group</a> *<a class=\"id\" href=\"#blkg\">blkg</a>, unsigned int <a class=\"id\" href=\"#weight\">weight</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg_of_blkg\">cfqg_of_blkg</a>(<a class=\"id\" href=\"#blkg\">blkg</a>)-><a class=\"id\" href=\"#weight\">weight</a> = <a class=\"id\" href=\"#weight\">weight</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *", 
"<a class=\"id\" href=\"#cfq_find_alloc_cfqg\">cfq_find_alloc_cfqg</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cgroup\">cgroup</a> *<a class=\"id\" href=\"#cgroup\">cgroup</a>, int <a class=\"id\" href=\"#create\">create</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blkio_cgroup\">blkio_cgroup</a> *<a class=\"id\" href=\"#blkcg\">blkcg</a> = <a class=\"id\" href=\"#cgroup_to_blkio_cgroup\">cgroup_to_blkio_cgroup</a>(<a class=\"id\" href=\"#cgroup\">cgroup</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a> *<a class=\"id\" href=\"#bdi\">bdi</a> = &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#minor\">minor</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#cfqg_of_blkg\">cfqg_of_blkg</a>(<a class=\"id\" href=\"#blkiocg_lookup_group\">blkiocg_lookup_group</a>(<a class=\"id\" href=\"#blkcg\">blkcg</a>, <a class=\"id\" href=\"#key\">key</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqg\">cfqg</a> && !<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>.<a class=\"id\" href=\"#dev\">dev</a> && <a class=\"id\" href=\"#bdi\">bdi</a>-><a class=\"id\" href=\"#dev\">dev</a> && <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#bdi\">bdi</a>-><a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#bdi\">bdi</a>-><a class=\"id\" href=\"#dev\">dev</a>), \"%u:%u\", &amp;<a class=\"id\" href=\"#major\">major</a>, &amp;<a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>.<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqg\">cfqg</a> || !<a class=\"id\" href=\"#create\">create</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#kzalloc_node\">kzalloc_node</a>(sizeof(*<a class=\"id\" href=\"#cfqg\">cfqg</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cfqg_st\">for_each_cfqg_st</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#st\">st</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#CFQ_RB_ROOT\">CFQ_RB_ROOT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RB_CLEAR_NODE\">RB_CLEAR_NODE</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Take the initial reference that will be released on destroy</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This can be thought of a joint reference by cgroup and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * elevator which will be dropped by either elevator exit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or cgroup deletion path depending on who is exiting first.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#ref\">ref</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Add group onto cgroup list. It might happen that bdi-&gt;dev is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not initiliazed yet. Initialize this new group without major</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and minor info and this info will be filled in once a new thread</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * comes for IO. See code above.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bdi\">bdi</a>-><a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#bdi\">bdi</a>-><a class=\"id\" href=\"#dev\">dev</a>), \"%u:%u\", &amp;<a class=\"id\" href=\"#major\">major</a>, &amp;<a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_add_blkio_group\">cfq_blkiocg_add_blkio_group</a>(<a class=\"id\" href=\"#blkcg\">blkcg</a>, &amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>, (void *)<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#minor\">minor</a>));", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_add_blkio_group\">cfq_blkiocg_add_blkio_group</a>(<a class=\"id\" href=\"#blkcg\">blkcg</a>, &amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>, (void *)<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#weight\">weight</a> = <a class=\"id\" href=\"#blkcg_get_weight\">blkcg_get_weight</a>(<a class=\"id\" href=\"#blkcg\">blkcg</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>.<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add group on cfqd list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#cfqd_node\">cfqd_node</a>, &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfqg_list\">cfqg_list</a>);", 
"", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Search for the cfq group current task belongs to. If create = 1, then also</span>", 
"<span class=\"comment\"> * create the cfq group if it does not exist. request_queue lock must be held.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfq_get_cfqg\">cfq_get_cfqg</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, int <a class=\"id\" href=\"#create\">create</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cgroup\">cgroup</a> *<a class=\"id\" href=\"#cgroup\">cgroup</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgroup\">cgroup</a> = <a class=\"id\" href=\"#task_cgroup\">task_cgroup</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#blkio_subsys_id\">blkio_subsys_id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#cfq_find_alloc_cfqg\">cfq_find_alloc_cfqg</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cgroup\">cgroup</a>, <a class=\"id\" href=\"#create\">create</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqg\">cfqg</a> && <a class=\"id\" href=\"#create\">create</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a> = &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#root_group\">root_group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfq_ref_get_cfqg\">cfq_ref_get_cfqg</a>(struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#ref\">ref</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_link_cfqq_cfqg\">cfq_link_cfqq_cfqg</a>(struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Currently, all async queues are mapped to root group */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfq_cfqq_sync\">cfq_cfqq_sync</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a> = &amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#root_group\">root_group</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* cfqq reference on cfqg */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#ref\">ref</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_put_cfqg\">cfq_put_cfqg</a>(struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#ref\">ref</a>) <= 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#ref\">ref</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cfqg_st\">for_each_cfqg_st</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#st\">st</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#rb\">rb</a>) || <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#active\">active</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_destroy_cfqg\">cfq_destroy_cfqg</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Something wrong if we are trying to remove same group twice */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#hlist_unhashed\">hlist_unhashed</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#cfqd_node\">cfqd_node</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_del_init\">hlist_del_init</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#cfqd_node\">cfqd_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Put the reference taken at the time of creation so that when all</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queues are gone, group can be destroyed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_put_cfqg\">cfq_put_cfqg</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_release_cfq_groups\">cfq_release_cfq_groups</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#pos\">pos</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_safe\">hlist_for_each_entry_safe</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfqg_list\">cfqg_list</a>, <a class=\"id\" href=\"#cfqd_node\">cfqd_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If cgroup removal path got to blk_group first and removed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * it from cgroup list, then it will take care of destroying</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * cfqg also.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfq_blkiocg_del_blkio_group\">cfq_blkiocg_del_blkio_group</a>(&amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_destroy_cfqg\">cfq_destroy_cfqg</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Blk cgroup controller notification saying that blkio_group object is being</span>", 
"<span class=\"comment\"> * delinked as associated cgroup object is going away. That also means that</span>", 
"<span class=\"comment\"> * no new IO will come in this group. So get rid of this group as soon as</span>", 
"<span class=\"comment\"> * any pending IO in the group is finished.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function is called under rcu_read_lock(). key is the rcu protected</span>", 
"<span class=\"comment\"> * pointer. That means \"key\" is a valid cfq_data pointer as long as we are rcu</span>", 
"<span class=\"comment\"> * read lock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * \"key\" was fetched from blkio_group under blkio_cgroup-&gt;lock. That means</span>", 
"<span class=\"comment\"> * it should not be NULL as even if elevator was exiting, cgroup deltion</span>", 
"<span class=\"comment\"> * path got to it first.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#cfq_unlink_blkio_group\">cfq_unlink_blkio_group</a>(void *<a class=\"id\" href=\"#key\">key</a>, struct <a class=\"id\" href=\"#blkio_group\">blkio_group</a> *<a class=\"id\" href=\"#blkg\">blkg</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_destroy_cfqg\">cfq_destroy_cfqg</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg_of_blkg\">cfqg_of_blkg</a>(<a class=\"id\" href=\"#blkg\">blkg</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"#else <span class=\"comment\">/* GROUP_IOSCHED */</span>", 
"static struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfq_get_cfqg\">cfq_get_cfqg</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, int <a class=\"id\" href=\"#create\">create</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#root_group\">root_group</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfq_ref_get_cfqg\">cfq_ref_get_cfqg</a>(struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#cfq_link_cfqq_cfqg\">cfq_link_cfqq_cfqg</a>(struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>) {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_release_cfq_groups\">cfq_release_cfq_groups</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cfq_put_cfqg\">cfq_put_cfqg</a>(struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>) {}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* GROUP_IOSCHED */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The cfqd-&gt;service_trees holds all pending cfq_queue's that have</span>", 
"<span class=\"comment\"> * requests waiting to be processed. It is sorted in the order that</span>", 
"<span class=\"comment\"> * we will service the queues.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#cfq_service_tree_add\">cfq_service_tree_add</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#add_front\">add_front</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#__cfqq\">__cfqq</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rb_key\">rb_key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#service_tree\">service_tree</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#new_cfqq\">new_cfqq</a> = 1;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#group_changed\">group_changed</a> = 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CFQ_GROUP_IOSCHED\">CONFIG_CFQ_GROUP_IOSCHED</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_group_isolation\">cfq_group_isolation</a>", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#cfqq_type\">cfqq_type</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) == <a class=\"id\" href=\"#SYNC_NOIDLE_WORKLOAD\">SYNC_NOIDLE_WORKLOAD</a>", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a> && <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a> != &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#root_group\">root_group</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Move this cfq to root group */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"moving to root group\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#RB_EMPTY_NODE\">RB_EMPTY_NODE</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_group_service_tree_del\">cfq_group_service_tree_del</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#orig_cfqg\">orig_cfqg</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a> = &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#root_group\">root_group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#root_group\">root_group</a>.<a class=\"id\" href=\"#ref\">ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_changed\">group_changed</a> = 1;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_group_isolation\">cfq_group_isolation</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>   && <a class=\"id\" href=\"#cfqq_type\">cfqq_type</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) == <a class=\"id\" href=\"#SYNC_WORKLOAD\">SYNC_WORKLOAD</a> && <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#orig_cfqg\">orig_cfqg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* cfqq is sequential now needs to go to its original group */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a> != &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#root_group\">root_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#RB_EMPTY_NODE\">RB_EMPTY_NODE</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_group_service_tree_del\">cfq_group_service_tree_del</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_put_cfqg\">cfq_put_cfqg</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#orig_cfqg\">orig_cfqg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#orig_cfqg\">orig_cfqg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_changed\">group_changed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"moved to origin group\");", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#service_tree\">service_tree</a> = <a class=\"id\" href=\"#service_tree_for\">service_tree_for</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#cfqq_prio\">cfqq_prio</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq_type\">cfqq_type</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_class_idle\">cfq_class_idle</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_key\">rb_key</a> = <a class=\"id\" href=\"#CFQ_IDLE_DELAY\">CFQ_IDLE_DELAY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_last\">rb_last</a>(&amp;<a class=\"id\" href=\"#service_tree\">service_tree</a>-><a class=\"id\" href=\"#rb\">rb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#parent\">parent</a> != &amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cfqq\">__cfqq</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a>, <a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_key\">rb_key</a> += <a class=\"id\" href=\"#__cfqq\">__cfqq</a>-><a class=\"id\" href=\"#rb_key\">rb_key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_key\">rb_key</a> += <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#add_front\">add_front</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Get our rb key offset. Subtract any residual slice</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * value carried from last service. A negative resid</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * count indicates slice overrun, and this should position</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the next service time further away in the tree.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_key\">rb_key</a> = <a class=\"id\" href=\"#cfq_slice_offset\">cfq_slice_offset</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>) + <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_key\">rb_key</a> -= <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_resid\">slice_resid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_resid\">slice_resid</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_key\">rb_key</a> = -<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cfqq\">__cfqq</a> = <a class=\"id\" href=\"#cfq_rb_first\">cfq_rb_first</a>(<a class=\"id\" href=\"#service_tree\">service_tree</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_key\">rb_key</a> += <a class=\"id\" href=\"#__cfqq\">__cfqq</a> ? <a class=\"id\" href=\"#__cfqq\">__cfqq</a>-><a class=\"id\" href=\"#rb_key\">rb_key</a> : <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#RB_EMPTY_NODE\">RB_EMPTY_NODE</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_cfqq\">new_cfqq</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * same position, nothing more to do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rb_key\">rb_key</a> == <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_key\">rb_key</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#service_tree\">service_tree</a> == <a class=\"id\" href=\"#service_tree\">service_tree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_rb_erase\">cfq_rb_erase</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#service_tree\">service_tree</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#service_tree\">service_tree</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#service_tree\">service_tree</a> = <a class=\"id\" href=\"#service_tree\">service_tree</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = &amp;<a class=\"id\" href=\"#service_tree\">service_tree</a>-><a class=\"id\" href=\"#rb\">rb</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cfqq\">__cfqq</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a>, <a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * sort by key, that represents service time.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#rb_key\">rb_key</a>, <a class=\"id\" href=\"#__cfqq\">__cfqq</a>-><a class=\"id\" href=\"#rb_key\">rb_key</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#left\">left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#service_tree\">service_tree</a>-><a class=\"id\" href=\"#left\">left</a> = &amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_key\">rb_key</a> = <a class=\"id\" href=\"#rb_key\">rb_key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_link_node\">rb_link_node</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, &amp;<a class=\"id\" href=\"#service_tree\">service_tree</a>-><a class=\"id\" href=\"#rb\">rb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#service_tree\">service_tree</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#add_front\">add_front</a> || !<a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>) && !<a class=\"id\" href=\"#group_changed\">group_changed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_group_service_tree_add\">cfq_group_service_tree_add</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *", 
"<a class=\"id\" href=\"#cfq_prio_tree_lookup\">cfq_prio_tree_lookup</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a>, struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#ret_parent\">ret_parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#rb_node\">rb_node</a> ***<a class=\"id\" href=\"#rb_link\">rb_link</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = &amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a>, <a class=\"id\" href=\"#p_node\">p_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Sort strictly based on sector.  Smallest to the left,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * largest to the right.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sector\">sector</a> &gt; <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#sector\">sector</a> &lt; <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ret_parent\">ret_parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rb_link\">rb_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rb_link\">rb_link</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_prio_tree_add\">cfq_prio_tree_add</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#__cfqq\">__cfqq</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_erase\">rb_erase</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_node\">p_node</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_class_idle\">cfq_class_idle</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a> = &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#prio_trees\">prio_trees</a>[<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#org_ioprio\">org_ioprio</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__cfqq\">__cfqq</a> = <a class=\"id\" href=\"#cfq_prio_tree_lookup\">cfq_prio_tree_lookup</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>), &amp;<a class=\"id\" href=\"#parent\">parent</a>, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#__cfqq\">__cfqq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_link_node\">rb_link_node</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_node\">p_node</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_node\">p_node</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Update cfqq's position in the service tree.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#cfq_resort_rr_list\">cfq_resort_rr_list</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Resorting requires the cfqq to be on the RR list already.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_cfqq_on_rr\">cfq_cfqq_on_rr</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_service_tree_add\">cfq_service_tree_add</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_prio_tree_add\">cfq_prio_tree_add</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * add to busy list of queues for service, trying to be fair in ordering</span>", 
"<span class=\"comment\"> * the pending list according to last request service</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#cfq_add_cfqq_rr\">cfq_add_cfqq_rr</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"add_to_rr\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#cfq_cfqq_on_rr\">cfq_cfqq_on_rr</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_mark_cfqq_on_rr\">cfq_mark_cfqq_on_rr</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#busy_queues\">busy_queues</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_resort_rr_list\">cfq_resort_rr_list</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called when the cfqq no longer has requests pending, remove it from</span>", 
"<span class=\"comment\"> * the service tree.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#cfq_del_cfqq_rr\">cfq_del_cfqq_rr</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"del_from_rr\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#cfq_cfqq_on_rr\">cfq_cfqq_on_rr</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_clear_cfqq_on_rr\">cfq_clear_cfqq_on_rr</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#RB_EMPTY_NODE\">RB_EMPTY_NODE</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_rb_erase\">cfq_rb_erase</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#service_tree\">service_tree</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#service_tree\">service_tree</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_erase\">rb_erase</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_node\">p_node</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_group_service_tree_del\">cfq_group_service_tree_del</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#busy_queues\">busy_queues</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#busy_queues\">busy_queues</a>--;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * rb tree support functions</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#cfq_del_rq_rb\">cfq_del_rq_rb</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#RQ_CFQQ\">RQ_CFQQ</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#sync\">sync</a> = <a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#queued\">queued</a>[<a class=\"id\" href=\"#sync\">sync</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#queued\">queued</a>[<a class=\"id\" href=\"#sync\">sync</a>]--;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_rb_del\">elv_rb_del</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_cfqq_on_rr\">cfq_cfqq_on_rr</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) && <a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Queue will be deleted from service tree when we actually</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * expire it later. Right now just remove it from prio tree</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * as it is empty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_erase\">rb_erase</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_node\">p_node</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#p_root\">p_root</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_add_rq_rb\">cfq_add_rq_rb</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#RQ_CFQQ\">RQ_CFQQ</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqd\">cfqd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#__alias\">__alias</a>, *<a class=\"id\" href=\"#prev\">prev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#queued\">queued</a>[<a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>)]++;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * looks a little odd, but the first insert might return an alias.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if that happens, put the alias on the dispatch list</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#__alias\">__alias</a> = <a class=\"id\" href=\"#elv_rb_add\">elv_rb_add</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>, <a class=\"id\" href=\"#rq\">rq</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_dispatch_insert\">cfq_dispatch_insert</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#__alias\">__alias</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfq_cfqq_on_rr\">cfq_cfqq_on_rr</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_add_cfqq_rr\">cfq_add_cfqq_rr</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check if this request is a better next-serve candidate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a> = <a class=\"id\" href=\"#cfq_choose_req\">cfq_choose_req</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#last_position\">last_position</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * adjust priority tree position, if -&gt;next_rq changes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a> != <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_prio_tree_add\">cfq_prio_tree_add</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_reposition_rq_rb\">cfq_reposition_rq_rb</a>(struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_rb_del\">elv_rb_del</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#queued\">queued</a>[<a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>)]--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_io_remove_stats\">cfq_blkiocg_update_io_remove_stats</a>(&amp;(<a class=\"id\" href=\"#RQ_CFQG\">RQ_CFQG</a>(<a class=\"id\" href=\"#rq\">rq</a>))-><a class=\"id\" href=\"#blkg\">blkg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>), <a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_add_rq_rb\">cfq_add_rq_rb</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_io_add_stats\">cfq_blkiocg_update_io_add_stats</a>(&amp;(<a class=\"id\" href=\"#RQ_CFQG\">RQ_CFQG</a>(<a class=\"id\" href=\"#rq\">rq</a>))-><a class=\"id\" href=\"#blkg\">blkg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_group\">serving_group</a>-><a class=\"id\" href=\"#blkg\">blkg</a>, <a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>));", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#request\">request</a> *", 
"<a class=\"id\" href=\"#cfq_find_rq_fmerge\">cfq_find_rq_fmerge</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_io_context\">cfq_io_context</a> *<a class=\"id\" href=\"#cic\">cic</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cic\">cic</a> = <a class=\"id\" href=\"#cfq_cic_lookup\">cfq_cic_lookup</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#io_context\">io_context</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cic\">cic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cic_to_cfqq\">cic_to_cfqq</a>(<a class=\"id\" href=\"#cic\">cic</a>, <a class=\"id\" href=\"#cfq_bio_sync\">cfq_bio_sync</a>(<a class=\"id\" href=\"#bio\">bio</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> + <a class=\"id\" href=\"#bio_sectors\">bio_sectors</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#elv_rb_find\">elv_rb_find</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>, <a class=\"id\" href=\"#sector\">sector</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_activate_request\">cfq_activate_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>-><a class=\"id\" href=\"#elevator_data\">elevator_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_in_driver\">rq_in_driver</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#RQ_CFQQ\">RQ_CFQQ</a>(<a class=\"id\" href=\"#rq\">rq</a>), \"activate rq, drv=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_in_driver\">rq_in_driver</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#last_position\">last_position</a> = <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) + <a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_deactivate_request\">cfq_deactivate_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>-><a class=\"id\" href=\"#elevator_data\">elevator_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_in_driver\">rq_in_driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_in_driver\">rq_in_driver</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#RQ_CFQQ\">RQ_CFQQ</a>(<a class=\"id\" href=\"#rq\">rq</a>), \"deactivate rq, drv=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_in_driver\">rq_in_driver</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_remove_request\">cfq_remove_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#RQ_CFQQ\">RQ_CFQQ</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a> == <a class=\"id\" href=\"#rq\">rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a> = <a class=\"id\" href=\"#cfq_find_next_rq\">cfq_find_next_rq</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_del_rq_rb\">cfq_del_rq_rb</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_queued\">rq_queued</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_io_remove_stats\">cfq_blkiocg_update_io_remove_stats</a>(&amp;(<a class=\"id\" href=\"#RQ_CFQG\">RQ_CFQG</a>(<a class=\"id\" href=\"#rq\">rq</a>))-><a class=\"id\" href=\"#blkg\">blkg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>), <a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_META\">REQ_META</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#meta_pending\">meta_pending</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#meta_pending\">meta_pending</a>--;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cfq_merge\">cfq_merge</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> **<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>-><a class=\"id\" href=\"#elevator_data\">elevator_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#__rq\">__rq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__rq\">__rq</a> = <a class=\"id\" href=\"#cfq_find_rq_fmerge\">cfq_find_rq_fmerge</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__rq\">__rq</a> && <a class=\"id\" href=\"#elv_rq_merge_ok\">elv_rq_merge_ok</a>(<a class=\"id\" href=\"#__rq\">__rq</a>, <a class=\"id\" href=\"#bio\">bio</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#__rq\">__rq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ELEVATOR_FRONT_MERGE\">ELEVATOR_FRONT_MERGE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ELEVATOR_NO_MERGE\">ELEVATOR_NO_MERGE</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_merged_request\">cfq_merged_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ELEVATOR_FRONT_MERGE\">ELEVATOR_FRONT_MERGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#RQ_CFQQ\">RQ_CFQQ</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_reposition_rq_rb\">cfq_reposition_rq_rb</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_bio_merged\">cfq_bio_merged</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_io_merged_stats\">cfq_blkiocg_update_io_merged_stats</a>(&amp;(<a class=\"id\" href=\"#RQ_CFQG\">RQ_CFQG</a>(<a class=\"id\" href=\"#req\">req</a>))-><a class=\"id\" href=\"#blkg\">blkg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(<a class=\"id\" href=\"#bio\">bio</a>), <a class=\"id\" href=\"#cfq_bio_sync\">cfq_bio_sync</a>(<a class=\"id\" href=\"#bio\">bio</a>));", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#cfq_merged_requests\">cfq_merged_requests</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#next\">next</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#RQ_CFQQ\">RQ_CFQQ</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reposition in fifo if next is older than rq</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>) && !<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#next\">next</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#rq_fifo_time\">rq_fifo_time</a>(<a class=\"id\" href=\"#next\">next</a>), <a class=\"id\" href=\"#rq_fifo_time\">rq_fifo_time</a>(<a class=\"id\" href=\"#rq\">rq</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_move\">list_move</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>, &amp;<a class=\"id\" href=\"#next\">next</a>-><a class=\"id\" href=\"#queuelist\">queuelist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_set_fifo_time\">rq_set_fifo_time</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#rq_fifo_time\">rq_fifo_time</a>(<a class=\"id\" href=\"#next\">next</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a> == <a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a> = <a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_remove_request\">cfq_remove_request</a>(<a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_io_merged_stats\">cfq_blkiocg_update_io_merged_stats</a>(&amp;(<a class=\"id\" href=\"#RQ_CFQG\">RQ_CFQG</a>(<a class=\"id\" href=\"#rq\">rq</a>))-><a class=\"id\" href=\"#blkg\">blkg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#next\">next</a>), <a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#next\">next</a>));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cfq_allow_merge\">cfq_allow_merge</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>-><a class=\"id\" href=\"#elevator_data\">elevator_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_io_context\">cfq_io_context</a> *<a class=\"id\" href=\"#cic\">cic</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Disallow merge of a sync bio into an async request.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_bio_sync\">cfq_bio_sync</a>(<a class=\"id\" href=\"#bio\">bio</a>) && !<a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Lookup the cfqq that this bio will be queued with. Allow</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * merge only if rq is queued there.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cic\">cic</a> = <a class=\"id\" href=\"#cfq_cic_lookup\">cfq_cic_lookup</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#io_context\">io_context</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cic\">cic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cic_to_cfqq\">cic_to_cfqq</a>(<a class=\"id\" href=\"#cic\">cic</a>, <a class=\"id\" href=\"#cfq_bio_sync\">cfq_bio_sync</a>(<a class=\"id\" href=\"#bio\">bio</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqq\">cfqq</a> == <a class=\"id\" href=\"#RQ_CFQQ\">RQ_CFQQ</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cfq_del_timer\">cfq_del_timer</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#idle_slice_timer\">idle_slice_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_idle_time_stats\">cfq_blkiocg_update_idle_time_stats</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cfq_set_active_queue\">__cfq_set_active_queue</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"set_active wl_prio:%d wl_type:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_type\">serving_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_avg_queue_size_stats\">cfq_blkiocg_update_avg_queue_size_stats</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_start\">slice_start</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#dispatch_start\">dispatch_start</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#allocated_slice\">allocated_slice</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_end\">slice_end</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_dispatch\">slice_dispatch</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#nr_sectors\">nr_sectors</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_clear_cfqq_wait_request\">cfq_clear_cfqq_wait_request</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_clear_cfqq_must_dispatch\">cfq_clear_cfqq_must_dispatch</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_clear_cfqq_must_alloc_slice\">cfq_clear_cfqq_must_alloc_slice</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_clear_cfqq_fifo_expire\">cfq_clear_cfqq_fifo_expire</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_mark_cfqq_slice_new\">cfq_mark_cfqq_slice_new</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_del_timer\">cfq_del_timer</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_queue\">active_queue</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * current cfqq expired its slice (or was too idle), select new one</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#__cfq_slice_expired\">__cfq_slice_expired</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#timed_out\">timed_out</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"slice expired t=%d\", <a class=\"id\" href=\"#timed_out\">timed_out</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_cfqq_wait_request\">cfq_cfqq_wait_request</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_del_timer\">cfq_del_timer</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_clear_cfqq_wait_request\">cfq_clear_cfqq_wait_request</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_clear_cfqq_wait_busy\">cfq_clear_cfqq_wait_busy</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this cfqq is shared between multiple processes, check to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make sure that those processes are still issuing I/Os within</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the mean seek distance.  If not, it may be time to break the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queues apart again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_cfqq_coop\">cfq_cfqq_coop</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) && <a class=\"id\" href=\"#CFQQ_SEEKY\">CFQQ_SEEKY</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_mark_cfqq_split_coop\">cfq_mark_cfqq_split_coop</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * store what was left of this slice, if the queue idled/timed out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timed_out\">timed_out</a> && !<a class=\"id\" href=\"#cfq_cfqq_slice_new\">cfq_cfqq_slice_new</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_resid\">slice_resid</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_end\">slice_end</a> - <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"resid=%ld\", <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_resid\">slice_resid</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_group_served\">cfq_group_served</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_cfqq_on_rr\">cfq_cfqq_on_rr</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) && <a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_del_cfqq_rr\">cfq_del_cfqq_rr</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_resort_rr_list\">cfq_resort_rr_list</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a> == <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_queue\">active_queue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_queue\">active_queue</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a> == <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#grp_service_tree\">grp_service_tree</a>.<a class=\"id\" href=\"#active\">active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#grp_service_tree\">grp_service_tree</a>.<a class=\"id\" href=\"#active\">active</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_cic\">active_cic</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_io_context\">put_io_context</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_cic\">active_cic</a>-><a class=\"id\" href=\"#ioc\">ioc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_cic\">active_cic</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cfq_slice_expired\">cfq_slice_expired</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#timed_out\">timed_out</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_queue\">active_queue</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cfq_slice_expired\">__cfq_slice_expired</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, <a class=\"id\" href=\"#timed_out\">timed_out</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get next queue for service. Unless we have a queue preemption,</span>", 
"<span class=\"comment\"> * we'll simply select the first cfqq in the service tree.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfq_get_next_queue\">cfq_get_next_queue</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#service_tree\">service_tree</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#service_tree_for\">service_tree_for</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_group\">serving_group</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_type\">serving_type</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_queued\">rq_queued</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* There is nothing to dispatch */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#service_tree\">service_tree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#service_tree\">service_tree</a>-><a class=\"id\" href=\"#rb\">rb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfq_rb_first\">cfq_rb_first</a>(<a class=\"id\" href=\"#service_tree\">service_tree</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfq_get_next_queue_forced\">cfq_get_next_queue_forced</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_queued\">rq_queued</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#cfq_get_next_cfqg\">cfq_get_next_cfqg</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cfqg_st\">for_each_cfqg_st</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#st\">st</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cfq_rb_first\">cfq_rb_first</a>(<a class=\"id\" href=\"#st\">st</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get and set a new active queue for service.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfq_set_active_queue\">cfq_set_active_queue</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cfq_get_next_queue\">cfq_get_next_queue</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__cfq_set_active_queue\">__cfq_set_active_queue</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#cfq_dist_from_last\">cfq_dist_from_last</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) >= <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#last_position\">last_position</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) - <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#last_position\">last_position</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#last_position\">last_position</a> - <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cfq_rq_close\">cfq_rq_close</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfq_dist_from_last\">cfq_dist_from_last</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#rq\">rq</a>) <= <a class=\"id\" href=\"#CFQQ_CLOSE_THR\">CFQQ_CLOSE_THR</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq_close\">cfqq_close</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a> = &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#prio_trees\">prio_trees</a>[<a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>-><a class=\"id\" href=\"#org_ioprio\">org_ioprio</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a>, *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#__cfqq\">__cfqq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#last_position\">last_position</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(<a class=\"id\" href=\"#root\">root</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First, if we find a request starting at the end of the last</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * request, choose it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__cfqq\">__cfqq</a> = <a class=\"id\" href=\"#cfq_prio_tree_lookup\">cfq_prio_tree_lookup</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#sector\">sector</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__cfqq\">__cfqq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__cfqq\">__cfqq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the exact sector wasn't found, the parent of the NULL leaf</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will contain the closest sector.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__cfqq\">__cfqq</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a>, <a class=\"id\" href=\"#p_node\">p_node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_rq_close\">cfq_rq_close</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>, <a class=\"id\" href=\"#__cfqq\">__cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__cfqq\">__cfqq</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#__cfqq\">__cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>) &lt; <a class=\"id\" href=\"#sector\">sector</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(&amp;<a class=\"id\" href=\"#__cfqq\">__cfqq</a>-><a class=\"id\" href=\"#p_node\">p_node</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_prev\">rb_prev</a>(&amp;<a class=\"id\" href=\"#__cfqq\">__cfqq</a>-><a class=\"id\" href=\"#p_node\">p_node</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__cfqq\">__cfqq</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a>, <a class=\"id\" href=\"#p_node\">p_node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_rq_close\">cfq_rq_close</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>, <a class=\"id\" href=\"#__cfqq\">__cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__cfqq\">__cfqq</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * cfqd - obvious</span>", 
"<span class=\"comment\"> * cur_cfqq - passed in so that we don't decide that the current queue is</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      closely cooperating with itself.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * So, basically we're assuming that that cur_cfqq has dispatched at least</span>", 
"<span class=\"comment\"> * one request, and that cfqd-&gt;last_position reflects a position on the disk</span>", 
"<span class=\"comment\"> * associated with the I/O issued by cur_cfqq.  I'm not sure this is a valid</span>", 
"<span class=\"comment\"> * assumption.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfq_close_cooperator\">cfq_close_cooperator</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_class_idle\">cfq_class_idle</a>(<a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfq_cfqq_sync\">cfq_cfqq_sync</a>(<a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CFQQ_SEEKY\">CFQQ_SEEKY</a>(<a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't search priority tree if it's the only queue in the group.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We should notice if some of the queues are cooperating, eg</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * working closely on the same area of the disk. In that case,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we can group them together and don't waste time idling.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cfqq_close\">cfqq_close</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If new queue belongs to different cfq_group, don't choose it */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a> != <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It only makes sense to merge sync queues.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfq_cfqq_sync\">cfq_cfqq_sync</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CFQQ_SEEKY\">CFQQ_SEEKY</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Do not merge queues of different priority classes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_class_rt\">cfq_class_rt</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) != <a class=\"id\" href=\"#cfq_class_rt\">cfq_class_rt</a>(<a class=\"id\" href=\"#cur_cfqq\">cur_cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Determine whether we should enforce idle window for this queue.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#cfq_should_idle\">cfq_should_idle</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#wl_prio_t\">wl_prio_t</a> <a class=\"id\" href=\"#prio\">prio</a> = <a class=\"id\" href=\"#cfqq_prio\">cfqq_prio</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#service_tree\">service_tree</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#service_tree\">service_tree</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#service_tree\">service_tree</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#service_tree\">service_tree</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_slice_idle\">cfq_slice_idle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We never do for idle class queues. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prio\">prio</a> == <a class=\"id\" href=\"#IDLE_WORKLOAD\">IDLE_WORKLOAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We do for queues that were marked with idle window flag. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_cfqq_idle_window\">cfq_cfqq_idle_window</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) &&", 
"<span class=\"ts\"/>   !(<a class=\"id\" href=\"#blk_queue_nonrot\">blk_queue_nonrot</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#queue\">queue</a>) && <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#hw_tag\">hw_tag</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Otherwise, we do only if they are the last ones</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in their service tree.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#service_tree\">service_tree</a>-><a class=\"id\" href=\"#count\">count</a> == 1 && <a class=\"id\" href=\"#cfq_cfqq_sync\">cfq_cfqq_sync</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"Not idling. st->count:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#service_tree\">service_tree</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_arm_slice_timer\">cfq_arm_slice_timer</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_queue\">active_queue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_io_context\">cfq_io_context</a> *<a class=\"id\" href=\"#cic\">cic</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sl\">sl</a>, <a class=\"id\" href=\"#group_idle\">group_idle</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * SSD device without seek penalty, disable idling. But only do so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for devices that support queuing, otherwise we still have a problem</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with sync vs async workloads.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_queue_nonrot\">blk_queue_nonrot</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#queue\">queue</a>) && <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#hw_tag\">hw_tag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#cfq_cfqq_slice_new\">cfq_cfqq_slice_new</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * idle is disabled, either manually or by past process history</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfq_should_idle\">cfq_should_idle</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no queue idling. Check for group idling */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_group_idle\">cfq_group_idle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_idle\">group_idle</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_group_idle\">cfq_group_idle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * still active requests from this queue, don't idle</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#dispatched\">dispatched</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * task has exited, don't wait</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cic\">cic</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_cic\">active_cic</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cic\">cic</a> || !<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#cic\">cic</a>-><a class=\"id\" href=\"#ioc\">ioc</a>-><a class=\"id\" href=\"#nr_tasks\">nr_tasks</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If our average think time is larger than the remaining time</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * slice, then don't idle. This avoids overrunning the allotted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * time slice.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sample_valid\">sample_valid</a>(<a class=\"id\" href=\"#cic\">cic</a>-><a class=\"id\" href=\"#ttime_samples\">ttime_samples</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_end\">slice_end</a> - <a class=\"id\" href=\"#jiffies\">jiffies</a> &lt; <a class=\"id\" href=\"#cic\">cic</a>-><a class=\"id\" href=\"#ttime_mean\">ttime_mean</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"Not idling. think_time:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cic\">cic</a>-><a class=\"id\" href=\"#ttime_mean\">ttime_mean</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* There are other queues in the group, don't do group idle */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group_idle\">group_idle</a> && <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_mark_cfqq_wait_request\">cfq_mark_cfqq_wait_request</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group_idle\">group_idle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sl\">sl</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_group_idle\">cfq_group_idle</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sl\">sl</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_slice_idle\">cfq_slice_idle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#idle_slice_timer\">idle_slice_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#sl\">sl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_set_idle_time_stats\">cfq_blkiocg_update_set_idle_time_stats</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"arm_idle: %lu group_idle: %d\", <a class=\"id\" href=\"#sl\">sl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_idle\">group_idle</a> ? 1 : 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Move request from internal lists to the request queue dispatch list.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#cfq_dispatch_insert\">cfq_dispatch_insert</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#elevator\">elevator</a>-><a class=\"id\" href=\"#elevator_data\">elevator_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#RQ_CFQQ\">RQ_CFQQ</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"dispatch_insert\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a> = <a class=\"id\" href=\"#cfq_find_next_rq\">cfq_find_next_rq</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_remove_request\">cfq_remove_request</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#dispatched\">dispatched</a>++;", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#RQ_CFQG\">RQ_CFQG</a>(<a class=\"id\" href=\"#rq\">rq</a>))-><a class=\"id\" href=\"#dispatched\">dispatched</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_dispatch_sort\">elv_dispatch_sort</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_in_flight\">rq_in_flight</a>[<a class=\"id\" href=\"#cfq_cfqq_sync\">cfq_cfqq_sync</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>)]++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#nr_sectors\">nr_sectors</a> += <a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_blkiocg_update_dispatch_stats\">cfq_blkiocg_update_dispatch_stats</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#blkg\">blkg</a>, <a class=\"id\" href=\"#blk_rq_bytes\">blk_rq_bytes</a>(<a class=\"id\" href=\"#rq\">rq</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>), <a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * return expired entry, or NULL to just start from scratch in rbtree</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#cfq_check_fifo\">cfq_check_fifo</a>(struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_cfqq_fifo_expire\">cfq_cfqq_fifo_expire</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_mark_cfqq_fifo_expire\">cfq_mark_cfqq_fifo_expire</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#fifo\">fifo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#rq_entry_fifo\">rq_entry_fifo</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#fifo\">fifo</a>.<a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#rq_fifo_time\">rq_fifo_time</a>(<a class=\"id\" href=\"#rq\">rq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log_cfqq\">cfq_log_cfqq</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, \"fifo=%p\", <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rq\">rq</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#cfq_prio_to_maxrq\">cfq_prio_to_maxrq</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#base_rq\">base_rq</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_slice_async_rq\">cfq_slice_async_rq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#ioprio\">ioprio</a> >= <a class=\"id\" href=\"#IOPRIO_BE_NR\">IOPRIO_BE_NR</a>);", 
"", 
"<span class=\"ts\"/>return 2 * (<a class=\"id\" href=\"#base_rq\">base_rq</a> + <a class=\"id\" href=\"#base_rq\">base_rq</a> * (<a class=\"id\" href=\"#CFQ_PRIO_LISTS\">CFQ_PRIO_LISTS</a> - 1 - <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#ioprio\">ioprio</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Must be called with the queue_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cfqq_process_refs\">cfqq_process_refs</a>(struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#process_refs\">process_refs</a>, <a class=\"id\" href=\"#io_refs\">io_refs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_refs\">io_refs</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#allocated\">allocated</a>[<a class=\"id\" href=\"#READ\">READ</a>] + <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#allocated\">allocated</a>[<a class=\"id\" href=\"#WRITE\">WRITE</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#process_refs\">process_refs</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#ref\">ref</a>) - <a class=\"id\" href=\"#io_refs\">io_refs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#process_refs\">process_refs</a> &lt; 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#process_refs\">process_refs</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_setup_merge\">cfq_setup_merge</a>(struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#process_refs\">process_refs</a>, <a class=\"id\" href=\"#new_process_refs\">new_process_refs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#__cfqq\">__cfqq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there are no process references on the new_cfqq, then it is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unsafe to follow the -&gt;new_cfqq chain as other cfqq's in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * chain may have dropped their last reference (not just their</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * last process reference).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqq_process_refs\">cfqq_process_refs</a>(<a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Avoid a circular list and skip interim queue merges */</span>", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#__cfqq\">__cfqq</a> = <a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>-><a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__cfqq\">__cfqq</a> == <a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_cfqq\">new_cfqq</a> = <a class=\"id\" href=\"#__cfqq\">__cfqq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#process_refs\">process_refs</a> = <a class=\"id\" href=\"#cfqq_process_refs\">cfqq_process_refs</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_process_refs\">new_process_refs</a> = <a class=\"id\" href=\"#cfqq_process_refs\">cfqq_process_refs</a>(<a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the process for the cfqq has gone away, there is no</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sense in merging the queues.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#process_refs\">process_refs</a> == 0 || <a class=\"id\" href=\"#new_process_refs\">new_process_refs</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Merge in the direction of the lesser amount of work.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_process_refs\">new_process_refs</a> >= <a class=\"id\" href=\"#process_refs\">process_refs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#new_cfqq\">new_cfqq</a> = <a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#process_refs\">process_refs</a>, &amp;<a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>-><a class=\"id\" href=\"#ref\">ref</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>-><a class=\"id\" href=\"#new_cfqq\">new_cfqq</a> = <a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#new_process_refs\">new_process_refs</a>, &amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#ref\">ref</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#wl_type_t\">wl_type_t</a> <a class=\"id\" href=\"#cfq_choose_wl\">cfq_choose_wl</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>, enum <a class=\"id\" href=\"#wl_prio_t\">wl_prio_t</a> <a class=\"id\" href=\"#prio\">prio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#key_valid\">key_valid</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#lowest_key\">lowest_key</a> = 0;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#wl_type_t\">wl_type_t</a> <a class=\"id\" href=\"#cur_best\">cur_best</a> = <a class=\"id\" href=\"#SYNC_NOIDLE_WORKLOAD\">SYNC_NOIDLE_WORKLOAD</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#SYNC_WORKLOAD\">SYNC_WORKLOAD</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* select the one with lowest rb_key */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#cfq_rb_first\">cfq_rb_first</a>(<a class=\"id\" href=\"#service_tree_for\">service_tree_for</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#prio\">prio</a>, <a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#queue\">queue</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#key_valid\">key_valid</a> || <a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#rb_key\">rb_key</a>, <a class=\"id\" href=\"#lowest_key\">lowest_key</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lowest_key\">lowest_key</a> = <a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#rb_key\">rb_key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_best\">cur_best</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_valid\">key_valid</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cur_best\">cur_best</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#choose_service_tree\">choose_service_tree</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#slice\">slice</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#group_slice\">group_slice</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqg\">cfqg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a> = <a class=\"id\" href=\"#IDLE_WORKLOAD\">IDLE_WORKLOAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#workload_expires\">workload_expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Choose next priority. RT &gt; BE &gt; IDLE */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_group_busy_queues_wl\">cfq_group_busy_queues_wl</a>(<a class=\"id\" href=\"#RT_WORKLOAD\">RT_WORKLOAD</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a> = <a class=\"id\" href=\"#RT_WORKLOAD\">RT_WORKLOAD</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#cfq_group_busy_queues_wl\">cfq_group_busy_queues_wl</a>(<a class=\"id\" href=\"#BE_WORKLOAD\">BE_WORKLOAD</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a> = <a class=\"id\" href=\"#BE_WORKLOAD\">BE_WORKLOAD</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a> = <a class=\"id\" href=\"#IDLE_WORKLOAD\">IDLE_WORKLOAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#workload_expires\">workload_expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For RT and BE, we have to choose also the type</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (SYNC, SYNC_NOIDLE, ASYNC), and to compute a workload</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * expiration time</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#service_tree_for\">service_tree_for</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_type\">serving_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check workload expiration, and that we still have other queues ready</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> && !<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#workload_expires\">workload_expires</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* otherwise select new workload type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_type\">serving_type</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_choose_wl\">cfq_choose_wl</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#service_tree_for\">service_tree_for</a>(<a class=\"id\" href=\"#cfqg\">cfqg</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_type\">serving_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the workload slice is computed as a fraction of target latency</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * proportional to the number of queues in that workload, over</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all the queues in the same priority class</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group_slice\">group_slice</a> = <a class=\"id\" href=\"#cfq_group_slice\">cfq_group_slice</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slice\">slice</a> = <a class=\"id\" href=\"#group_slice\">group_slice</a> * <a class=\"id\" href=\"#count\">count</a> /", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_t\">max_t</a>(unsigned, <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#busy_queues_avg\">busy_queues_avg</a>[<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#cfq_group_busy_queues_wl\">cfq_group_busy_queues_wl</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a>, <a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_type\">serving_type</a> == <a class=\"id\" href=\"#ASYNC_WORKLOAD\">ASYNC_WORKLOAD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Async queues are currently system wide. Just taking</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * proportion of queues with-in same group will lead to higher</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * async ratio system wide as generally root group is going</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to have higher weight. A more accurate thing would be to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * calculate system wide asnc/sync ratio.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#cfq_target_latency\">cfq_target_latency</a> * <a class=\"id\" href=\"#cfqg_busy_async_queues\">cfqg_busy_async_queues</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>/<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#busy_queues\">busy_queues</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slice\">slice</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned, <a class=\"id\" href=\"#slice\">slice</a>, <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* async workload slice is scaled down according to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the sync/async slice ratio. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slice\">slice</a> = <a class=\"id\" href=\"#slice\">slice</a> * <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_slice\">cfq_slice</a>[0] / <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_slice\">cfq_slice</a>[1];", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sync workload slice is at least 2 * cfq_slice_idle */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slice\">slice</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#slice\">slice</a>, 2 * <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_slice_idle\">cfq_slice_idle</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slice\">slice</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(unsigned, <a class=\"id\" href=\"#slice\">slice</a>, <a class=\"id\" href=\"#CFQ_MIN_TT\">CFQ_MIN_TT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log\">cfq_log</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, \"workload slice:%d\", <a class=\"id\" href=\"#slice\">slice</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#workload_expires\">workload_expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#slice\">slice</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#noidle_tree_requires_idle\">noidle_tree_requires_idle</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfq_get_next_cfqg\">cfq_get_next_cfqg</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_rb_root\">cfq_rb_root</a> *<a class=\"id\" href=\"#st\">st</a> = &amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#grp_service_tree\">grp_service_tree</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#rb\">rb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#cfq_rb_first_group\">cfq_rb_first_group</a>(<a class=\"id\" href=\"#st\">st</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#active\">active</a> = &amp;<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_min_vdisktime\">update_min_vdisktime</a>(<a class=\"id\" href=\"#st\">st</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cfq_choose_cfqg\">cfq_choose_cfqg</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_group\">cfq_group</a> *<a class=\"id\" href=\"#cfqg\">cfqg</a> = <a class=\"id\" href=\"#cfq_get_next_cfqg\">cfq_get_next_cfqg</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_group\">serving_group</a> = <a class=\"id\" href=\"#cfqg\">cfqg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Restore the workload type data */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#saved_workload_slice\">saved_workload_slice</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#workload_expires\">workload_expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#saved_workload_slice\">saved_workload_slice</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_type\">serving_type</a> = <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#saved_workload\">saved_workload</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#serving_prio\">serving_prio</a> = <a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#saved_serving_prio\">saved_serving_prio</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#workload_expires\">workload_expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> - 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#choose_service_tree\">choose_service_tree</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqg\">cfqg</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Select a queue for service. If we have a current active queue,</span>", 
"<span class=\"comment\"> * check whether to continue servicing it, or retrieve and set a new one.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfq_select_queue\">cfq_select_queue</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>, *<a class=\"id\" href=\"#new_cfqq\">new_cfqq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#active_queue\">active_queue</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#new_queue\">new_queue</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#rq_queued\">rq_queued</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We were waiting for group to get backlogged. Expire the queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_cfqq_wait_busy\">cfq_cfqq_wait_busy</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) && !<a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#expire\">expire</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The active queue has run out of time, expire it and select new.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_slice_used\">cfq_slice_used</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>) && !<a class=\"id\" href=\"#cfq_cfqq_must_dispatch\">cfq_cfqq_must_dispatch</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If slice had not expired at the completion of last request</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we might not have turned on wait_busy flag. Don't expire</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the queue yet. Allow the group to get backlogged.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The very fact that we have used the slice, that means we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * have been idling all along on this queue and it should be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ok to wait for this request to complete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a> == 1 && <a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>    && <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#dispatched\">dispatched</a> && <a class=\"id\" href=\"#cfq_should_idle\">cfq_should_idle</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#keep_queue\">keep_queue</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#check_group_idle\">check_group_idle</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The active queue has requests and isn't expired, allow it to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dispatch.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#sort_list\">sort_list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#keep_queue\">keep_queue</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If another queue has a request waiting within our mean seek</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * distance, let it run.  The expire code will check for close</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cooperators and put the close queue at the front of the service</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tree.  If possible, merge the expiring queue with the new cfqq.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_cfqq\">new_cfqq</a> = <a class=\"id\" href=\"#cfq_close_cooperator\">cfq_close_cooperator</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_setup_merge\">cfq_setup_merge</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>, <a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#expire\">expire</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No requests pending. If the active queue still has requests in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * flight or is idling for a new request, allow either of these</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * conditions to happen (or time out) before selecting a new queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timer_pending\">timer_pending</a>(&amp;<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#idle_slice_timer\">idle_slice_timer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#keep_queue\">keep_queue</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#dispatched\">dispatched</a> && <a class=\"id\" href=\"#cfq_should_idle\">cfq_should_idle</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#keep_queue\">keep_queue</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If group idle is enabled and there are requests dispatched from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this group, wait for requests to complete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<a class=\"id\" href=\"#check_group_idle\">check_group_idle</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_group_idle\">cfq_group_idle</a> && <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#nr_cfqq\">nr_cfqq</a> == 1", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqg\">cfqg</a>-><a class=\"id\" href=\"#dispatched\">dispatched</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#keep_queue\">keep_queue</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#expire\">expire</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_slice_expired\">cfq_slice_expired</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, 0);", 
"<a class=\"id\" href=\"#new_queue\">new_queue</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Current queue expired. Check if we have to switch to a new</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * service tree</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_choose_cfqg\">cfq_choose_cfqg</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cfq_set_active_queue\">cfq_set_active_queue</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#new_cfqq\">new_cfqq</a>);", 
"<a class=\"id\" href=\"#keep_queue\">keep_queue</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__cfq_forced_dispatch_cfqq\">__cfq_forced_dispatch_cfqq</a>(struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dispatched\">dispatched</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_dispatch_insert\">cfq_dispatch_insert</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dispatched\">dispatched</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#fifo\">fifo</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* By default cfqq is not expired if it is empty. Do it explicitly */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__cfq_slice_expired\">__cfq_slice_expired</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>, 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dispatched\">dispatched</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Drain our current requests. Used for barriers and when switching</span>", 
"<span class=\"comment\"> * io schedulers on-the-fly.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cfq_forced_dispatch\">cfq_forced_dispatch</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dispatched\">dispatched</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Expire the timeslice of the current active queue first */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_slice_expired\">cfq_slice_expired</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, 0);", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#cfqq\">cfqq</a> = <a class=\"id\" href=\"#cfq_get_next_queue_forced\">cfq_get_next_queue_forced</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cfq_set_active_queue\">__cfq_set_active_queue</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, <a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dispatched\">dispatched</a> += <a class=\"id\" href=\"#__cfq_forced_dispatch_cfqq\">__cfq_forced_dispatch_cfqq</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#busy_queues\">busy_queues</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfq_log\">cfq_log</a>(<a class=\"id\" href=\"#cfqd\">cfqd</a>, \"forced_dispatch=%d\", <a class=\"id\" href=\"#dispatched\">dispatched</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dispatched\">dispatched</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#cfq_slice_used_soon\">cfq_slice_used_soon</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* the queue hasn't finished any request, can't estimate */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfq_cfqq_slice_new\">cfq_cfqq_slice_new</a>(<a class=\"id\" href=\"#cfqq\">cfqq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#cfqd\">cfqd</a>-><a class=\"id\" href=\"#cfq_slice_idle\">cfq_slice_idle</a> * <a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#dispatched\">dispatched</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfqq\">cfqq</a>-><a class=\"id\" href=\"#slice_end\">slice_end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#cfq_may_dispatch\">cfq_may_dispatch</a>(struct <a class=\"id\" href=\"#cfq_data\">cfq_data</a> *<a class=\"id\" href=\"#cfqd\">cfqd</a>, struct <a class=\"id\" href=\"#cfq_queue\">cfq_queue</a> *<a class=\"id\" href=\"#cfqq\">cfqq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_dispatch\">max_dispatch</a>;", 
];
xr_frag_insert('l/cf/bbd89f2a22dcfd6440e4be73f846e583f34e80.xr', __xr_tmp);
