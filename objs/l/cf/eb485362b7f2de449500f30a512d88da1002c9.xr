var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#lookup_ioctx\">lookup_ioctx</a>(<a class=\"id\" href=\"#ctx_id\">ctx_id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ctx\">ctx</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"EINVAL: io_submit: invalid context id\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * AKPM: should this return a partial result if some of the IOs were</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * successfully submitted?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#nr\">nr</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iocb\">iocb</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#user_iocb\">user_iocb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iocb\">iocb</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#user_iocb\">user_iocb</a>, <a class=\"id\" href=\"#iocbpp\">iocbpp</a> + <a class=\"id\" href=\"#i\">i</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#user_iocb\">user_iocb</a>, sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>)))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#io_submit_one\">io_submit_one</a>(<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#user_iocb\">user_iocb</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#batch_hash\">batch_hash</a>, <a class=\"id\" href=\"#compat\">compat</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aio_batch_free\">aio_batch_free</a>(<a class=\"id\" href=\"#batch_hash\">batch_hash</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_ioctx\">put_ioctx</a>(<a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a> ? <a class=\"id\" href=\"#i\">i</a> : <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* sys_io_submit:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Queue the nr iocbs pointed to by iocbpp for processing.  Returns</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the number of iocbs queued.  May return -EINVAL if the aio_context</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>specified by ctx_id is invalid, if nr is &lt; 0, if the iocb at</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>*iocbpp[0] is not properly initialized, if the operation specified</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is invalid for the file descriptor in the iocb.  May fail with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-EFAULT if any of the data structures point to invalid data.  May</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>fail with -EBADF if the file descriptor specified in the first</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>iocb is invalid.  May fail with -EAGAIN if insufficient resources</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>are available to queue any iocbs.  Will return 0 if nr is 0.  Will</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>fail with -ENOSYS if not implemented.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#io_submit\">io_submit</a>, <a class=\"id\" href=\"#aio_context_t\">aio_context_t</a>, <a class=\"id\" href=\"#ctx_id\">ctx_id</a>, long, <a class=\"id\" href=\"#nr\">nr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iocb\">iocb</a> <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#iocbpp\">iocbpp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_io_submit\">do_io_submit</a>(<a class=\"id\" href=\"#ctx_id\">ctx_id</a>, <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#iocbpp\">iocbpp</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/* lookup_kiocb</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Finds a given iocb for cancellation.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#lookup_kiocb\">lookup_kiocb</a>(struct <a class=\"id\" href=\"#kioctx\">kioctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a>, struct <a class=\"id\" href=\"#iocb\">iocb</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#iocb\">iocb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#assert_spin_locked\">assert_spin_locked</a>(&amp;<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#ctx_lock\">ctx_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TODO: use a hash or array, this sucks. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#active_reqs\">active_reqs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#kiocb\">kiocb</a> = <a class=\"id\" href=\"#list_kiocb\">list_kiocb</a>(<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kiocb\">kiocb</a>-><a class=\"id\" href=\"#ki_obj\">ki_obj</a>.<a class=\"id\" href=\"#user\">user</a> == <a class=\"id\" href=\"#iocb\">iocb</a> && <a class=\"id\" href=\"#kiocb\">kiocb</a>-><a class=\"id\" href=\"#ki_key\">ki_key</a> == <a class=\"id\" href=\"#key\">key</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#kiocb\">kiocb</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* sys_io_cancel:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Attempts to cancel an iocb previously passed to io_submit.  If</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the operation is successfully cancelled, the resulting event is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>copied into the memory pointed to by result without being placed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>into the completion queue and 0 is returned.  May fail with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-EFAULT if any of the data structures pointed to are invalid.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>May fail with -EINVAL if aio_context specified by ctx_id is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>invalid.  May fail with -EAGAIN if the iocb specified was not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cancelled.  Will fail with -ENOSYS if not implemented.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#io_cancel\">io_cancel</a>, <a class=\"id\" href=\"#aio_context_t\">aio_context_t</a>, <a class=\"id\" href=\"#ctx_id\">ctx_id</a>, struct <a class=\"id\" href=\"#iocb\">iocb</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#iocb\">iocb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#io_event\">io_event</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#result\">result</a>)", 
"{", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#cancel\">cancel</a>)(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#io_event\">io_event</a> *<a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kioctx\">kioctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#kiocb\">kiocb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#key\">key</a>, &amp;<a class=\"id\" href=\"#iocb\">iocb</a>-><a class=\"id\" href=\"#aio_key\">aio_key</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#lookup_ioctx\">lookup_ioctx</a>(<a class=\"id\" href=\"#ctx_id\">ctx_id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ctx\">ctx</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#ctx_lock\">ctx_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
];
xr_frag_insert('l/cf/eb485362b7f2de449500f30a512d88da1002c9.xr', __xr_tmp);
