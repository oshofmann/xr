var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NET3<span class=\"ts\"/>IP device support routines.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Derived from the IP parts of dev.c 1.0.19</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Mark Evans, &lt;evansmp@uhura.aston.ac.uk&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Additional Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox, &lt;gw4pts@gw4pts.ampr.org&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alexey Kuznetsov, &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Changes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alexey Kuznetsov:<span class=\"ts\"/>pa_* fields are replaced with ifaddr</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>lists.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Cyrus Durgin:<span class=\"ts\"/><span class=\"ts\"/>updated for kmod</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Matthias Andree:<span class=\"ts\"/>in devinet_ioctl, compare label and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>address (4.4BSD alias style support),</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>fall back to comparing just the label</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if no match found.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_addr\">if_addr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_ether\">if_ether</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#etherdevice\">etherdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#igmp\">igmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#arp\">arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip_fib\">ip_fib</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#ipv4_devconf\">ipv4_devconf</a> <a class=\"id\" href=\"#ipv4_devconf\">ipv4_devconf</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#data\">data</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#IPV4_DEVCONF_ACCEPT_REDIRECTS\">IPV4_DEVCONF_ACCEPT_REDIRECTS</a> - 1] = 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#IPV4_DEVCONF_SEND_REDIRECTS\">IPV4_DEVCONF_SEND_REDIRECTS</a> - 1] = 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#IPV4_DEVCONF_SECURE_REDIRECTS\">IPV4_DEVCONF_SECURE_REDIRECTS</a> - 1] = 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#IPV4_DEVCONF_SHARED_MEDIA\">IPV4_DEVCONF_SHARED_MEDIA</a> - 1] = 1,", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ipv4_devconf\">ipv4_devconf</a> <a class=\"id\" href=\"#ipv4_devconf_dflt\">ipv4_devconf_dflt</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#data\">data</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#IPV4_DEVCONF_ACCEPT_REDIRECTS\">IPV4_DEVCONF_ACCEPT_REDIRECTS</a> - 1] = 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#IPV4_DEVCONF_SEND_REDIRECTS\">IPV4_DEVCONF_SEND_REDIRECTS</a> - 1] = 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#IPV4_DEVCONF_SECURE_REDIRECTS\">IPV4_DEVCONF_SECURE_REDIRECTS</a> - 1] = 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#IPV4_DEVCONF_SHARED_MEDIA\">IPV4_DEVCONF_SHARED_MEDIA</a> - 1] = 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#IPV4_DEVCONF_ACCEPT_SOURCE_ROUTE\">IPV4_DEVCONF_ACCEPT_SOURCE_ROUTE</a> - 1] = 1,", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IPV4_DEVCONF_DFLT\">IPV4_DEVCONF_DFLT</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#attr\">attr</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF\">IPV4_DEVCONF</a>((*<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#devconf_dflt\">devconf_dflt</a>), <a class=\"id\" href=\"#attr\">attr</a>)", 
"", 
"static const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> <a class=\"id\" href=\"#ifa_ipv4_policy\">ifa_ipv4_policy</a>[<a class=\"id\" href=\"#IFA_MAX\">IFA_MAX</a>+1] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#IFA_LOCAL\">IFA_LOCAL</a>]     <span class=\"ts\"/>= { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NLA_U32\">NLA_U32</a> },", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#IFA_ADDRESS\">IFA_ADDRESS</a>]   <span class=\"ts\"/>= { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NLA_U32\">NLA_U32</a> },", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#IFA_BROADCAST\">IFA_BROADCAST</a>] <span class=\"ts\"/>= { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NLA_U32\">NLA_U32</a> },", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#IFA_LABEL\">IFA_LABEL</a>]     <span class=\"ts\"/>= { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NLA_STRING\">NLA_STRING</a>, .<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a> - 1 },", 
"};", 
"", 
"static void <a class=\"id\" href=\"#rtmsg_ifa\">rtmsg_ifa</a>(int <a class=\"id\" href=\"#event\">event</a>, struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *, <a class=\"id\" href=\"#u32\">u32</a>);", 
"", 
"static <a class=\"id\" href=\"#BLOCKING_NOTIFIER_HEAD\">BLOCKING_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#inetaddr_chain\">inetaddr_chain</a>);", 
"static void <a class=\"id\" href=\"#inet_del_ifa\">inet_del_ifa</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>, struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> **<a class=\"id\" href=\"#ifap\">ifap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#destroy\">destroy</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"static void <a class=\"id\" href=\"#devinet_sysctl_register\">devinet_sysctl_register</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"static void <a class=\"id\" href=\"#devinet_sysctl_unregister\">devinet_sysctl_unregister</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#devinet_sysctl_register\">devinet_sysctl_register</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#devinet_sysctl_unregister\">devinet_sysctl_unregister</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Locks all the inet devices. */</span>", 
"", 
"static struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#inet_alloc_ifa\">inet_alloc_ifa</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#inet_rcu_free_ifa\">inet_rcu_free_ifa</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#head\">head</a>, struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a>, <a class=\"id\" href=\"#rcu_head\">rcu_head</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev_put\">in_dev_put</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#inet_free_ifa\">inet_free_ifa</a>(struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#rcu_head\">rcu_head</a>, <a class=\"id\" href=\"#inet_rcu_free_ifa\">inet_rcu_free_ifa</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#in_dev_finish_destroy\">in_dev_finish_destroy</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#NET_REFCNT_DEBUG\">NET_REFCNT_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"in_dev_finish_destroy: %p=%s\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a> : \"NIL\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dead\">dead</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"Freeing alive in_device %p\\n\", <a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#in_dev_finish_destroy\">in_dev_finish_destroy</a>);", 
"", 
"static struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#inetdev_init\">inetdev_init</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#in_dev\">in_dev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>, <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#devconf_dflt\">devconf_dflt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#arp_parms\">arp_parms</a> = <a class=\"id\" href=\"#neigh_parms_alloc\">neigh_parms_alloc</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#arp_parms\">arp_parms</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_kfree\">out_kfree</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IPV4_DEVCONF\">IPV4_DEVCONF</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>, <a class=\"id\" href=\"#FORWARDING\">FORWARDING</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_disable_lro\">dev_disable_lro</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Reference in_dev-&gt;dev */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Account for reference dev-&gt;ip_ptr (below) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev_hold\">in_dev_hold</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devinet_sysctl_register\">devinet_sysctl_register</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_mc_init_dev\">ip_mc_init_dev</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_mc_up\">ip_mc_up</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we can receive as soon as ip_ptr is set -- do this last */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ip_ptr\">ip_ptr</a>, <a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<a class=\"id\" href=\"#out_kfree\">out_kfree</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#in_dev_rcu_put\">in_dev_rcu_put</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#head\">head</a>, struct <a class=\"id\" href=\"#in_device\">in_device</a>, <a class=\"id\" href=\"#rcu_head\">rcu_head</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev_put\">in_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#inetdev_destroy\">inetdev_destroy</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#dead\">dead</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_mc_destroy_dev\">ip_mc_destroy_dev</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_del_ifa\">inet_del_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, &amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_free_ifa\">inet_free_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ip_ptr\">ip_ptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devinet_sysctl_unregister\">devinet_sysctl_unregister</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_parms_release\">neigh_parms_release</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#arp_parms\">arp_parms</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_ifdown\">arp_ifdown</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#rcu_head\">rcu_head</a>, <a class=\"id\" href=\"#in_dev_rcu_put\">in_dev_rcu_put</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#inet_addr_onlink\">inet_addr_onlink</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_primary_ifa\">for_primary_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#ifa\">ifa</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#b\">b</a> || <a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#ifa\">ifa</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_ifa\">endfor_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__inet_del_ifa\">__inet_del_ifa</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>, struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> **<a class=\"id\" href=\"#ifap\">ifap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#destroy\">destroy</a>, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#promote\">promote</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>, *<a class=\"id\" href=\"#ifa1\">ifa1</a> = *<a class=\"id\" href=\"#ifap\">ifap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#last_prim\">last_prim</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#prev_prom\">prev_prom</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#do_promote\">do_promote</a> = <a class=\"id\" href=\"#IN_DEV_PROMOTE_SECONDARIES\">IN_DEV_PROMOTE_SECONDARIES</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 1. Deleting primary ifaddr forces deletion all secondaries</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unless alias promotion is set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> **/</span>", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> &amp; <a class=\"id\" href=\"#IFA_F_SECONDARY\">IFA_F_SECONDARY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> **<a class=\"id\" href=\"#ifap1\">ifap1</a> = &amp;<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#ifa\">ifa</a> = *<a class=\"id\" href=\"#ifap1\">ifap1</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> &amp; <a class=\"id\" href=\"#IFA_F_SECONDARY\">IFA_F_SECONDARY</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> <= <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_prim\">last_prim</a> = <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> &amp; <a class=\"id\" href=\"#IFA_F_SECONDARY\">IFA_F_SECONDARY</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> != <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>, <a class=\"id\" href=\"#ifa\">ifa</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifap1\">ifap1</a> = &amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_prom\">prev_prom</a> = <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#do_promote\">do_promote</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ifap1\">ifap1</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_ifa\">rtmsg_ifa</a>(<a class=\"id\" href=\"#RTM_DELADDR\">RTM_DELADDR</a>, <a class=\"id\" href=\"#ifa\">ifa</a>, <a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#inetaddr_chain\">inetaddr_chain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a>, <a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_free_ifa\">inet_free_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#promote\">promote</a> = <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 2. Unlink it */</span>", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ifap\">ifap</a> = <a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 3. Announce address deletion */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Send message first, then call notifier.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   At first sight, FIB update triggered by notifier</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   will refer to already deleted ifaddr, that could confuse</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   netlink listeners. It is not true: look, gated sees</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   that route deleted and if it still thinks that ifaddr</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   is valid, it will try to restore deleted routes... Grr.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   So that, this order is correct.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_ifa\">rtmsg_ifa</a>(<a class=\"id\" href=\"#RTM_DELADDR\">RTM_DELADDR</a>, <a class=\"id\" href=\"#ifa1\">ifa1</a>, <a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#inetaddr_chain\">inetaddr_chain</a>, <a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a>, <a class=\"id\" href=\"#ifa1\">ifa1</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#promote\">promote</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev_prom\">prev_prom</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_prom\">prev_prom</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a> = <a class=\"id\" href=\"#promote\">promote</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#promote\">promote</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a> = <a class=\"id\" href=\"#last_prim\">last_prim</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_prim\">last_prim</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a> = <a class=\"id\" href=\"#promote\">promote</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#promote\">promote</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> &= ~<a class=\"id\" href=\"#IFA_F_SECONDARY\">IFA_F_SECONDARY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_ifa\">rtmsg_ifa</a>(<a class=\"id\" href=\"#RTM_NEWADDR\">RTM_NEWADDR</a>, <a class=\"id\" href=\"#promote\">promote</a>, <a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#inetaddr_chain\">inetaddr_chain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NETDEV_UP\">NETDEV_UP</a>, <a class=\"id\" href=\"#promote\">promote</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#promote\">promote</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>; <a class=\"id\" href=\"#ifa\">ifa</a>; <a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> != <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>, <a class=\"id\" href=\"#ifa\">ifa</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_add_ifaddr\">fib_add_ifaddr</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#destroy\">destroy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_free_ifa\">inet_free_ifa</a>(<a class=\"id\" href=\"#ifa1\">ifa1</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#inet_del_ifa\">inet_del_ifa</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>, struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> **<a class=\"id\" href=\"#ifap\">ifap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#destroy\">destroy</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__inet_del_ifa\">__inet_del_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#ifap\">ifap</a>, <a class=\"id\" href=\"#destroy\">destroy</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__inet_insert_ifa\">__inet_insert_ifa</a>(struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa1\">ifa1</a>, **<a class=\"id\" href=\"#ifap\">ifap</a>, **<a class=\"id\" href=\"#last_primary\">last_primary</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_free_ifa\">inet_free_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> &= ~<a class=\"id\" href=\"#IFA_F_SECONDARY\">IFA_F_SECONDARY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_primary\">last_primary</a> = &amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ifap\">ifap</a> = &amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>; (<a class=\"id\" href=\"#ifa1\">ifa1</a> = *<a class=\"id\" href=\"#ifap\">ifap</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#ifap\">ifap</a> = &amp;<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> &amp; <a class=\"id\" href=\"#IFA_F_SECONDARY\">IFA_F_SECONDARY</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> <= <a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_primary\">last_primary</a> = &amp;<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> == <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>, <a class=\"id\" href=\"#ifa\">ifa</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a> == <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_free_ifa\">inet_free_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa1\">ifa1</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> != <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_free_ifa\">inet_free_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> |= <a class=\"id\" href=\"#IFA_F_SECONDARY\">IFA_F_SECONDARY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> &amp; <a class=\"id\" href=\"#IFA_F_SECONDARY\">IFA_F_SECONDARY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net_srandom\">net_srandom</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifap\">ifap</a> = <a class=\"id\" href=\"#last_primary\">last_primary</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a> = *<a class=\"id\" href=\"#ifap\">ifap</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ifap\">ifap</a> = <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Send message first, then call notifier.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Notifier will trigger FIB update, so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   listeners of netlink will know about new ifaddr */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_ifa\">rtmsg_ifa</a>(<a class=\"id\" href=\"#RTM_NEWADDR\">RTM_NEWADDR</a>, <a class=\"id\" href=\"#ifa\">ifa</a>, <a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#inetaddr_chain\">inetaddr_chain</a>, <a class=\"id\" href=\"#NETDEV_UP\">NETDEV_UP</a>, <a class=\"id\" href=\"#ifa\">ifa</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet_insert_ifa\">inet_insert_ifa</a>(struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__inet_insert_ifa\">__inet_insert_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet_set_ifa\">inet_set_ifa</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_free_ifa\">inet_free_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv4_devconf_setall\">ipv4_devconf_setall</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a> != <a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev_hold\">in_dev_hold</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv4_is_loopback\">ipv4_is_loopback</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> = <a class=\"id\" href=\"#RT_SCOPE_HOST\">RT_SCOPE_HOST</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inet_insert_ifa\">inet_insert_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#inetdev_by_index\">inetdev_by_index</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#in_dev_get\">in_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inetdev_by_index\">inetdev_by_index</a>);", 
"", 
"<span class=\"comment\">/* Called only from RTNL semaphored context. No locks. */</span>", 
"", 
"struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#inet_ifa_byprefix\">inet_ifa_byprefix</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#prefix\">prefix</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_primary_ifa\">for_primary_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> == <a class=\"id\" href=\"#mask\">mask</a> && <a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#ifa\">ifa</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_ifa\">endfor_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet_rtm_deladdr\">inet_rtm_deladdr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_MAX\">IFA_MAX</a>+1];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifaddrmsg\">ifaddrmsg</a> *<a class=\"id\" href=\"#ifm\">ifm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>, **<a class=\"id\" href=\"#ifap\">ifap</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#nlmsg_parse\">nlmsg_parse</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, sizeof(*<a class=\"id\" href=\"#ifm\">ifm</a>), <a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#IFA_MAX\">IFA_MAX</a>, <a class=\"id\" href=\"#ifa_ipv4_policy\">ifa_ipv4_policy</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifm\">ifm</a> = <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#inetdev_by_index\">inetdev_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_index\">ifa_index</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__in_dev_put\">__in_dev_put</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ifap\">ifap</a> = &amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>; (<a class=\"id\" href=\"#ifa\">ifa</a> = *<a class=\"id\" href=\"#ifap\">ifap</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#ifap\">ifap</a> = &amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_LOCAL\">IFA_LOCAL</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a> != <a class=\"id\" href=\"#nla_get_be32\">nla_get_be32</a>(<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_LOCAL\">IFA_LOCAL</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_LABEL\">IFA_LABEL</a>] && <a class=\"id\" href=\"#nla_strcmp\">nla_strcmp</a>(<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_LABEL\">IFA_LABEL</a>], <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_ADDRESS\">IFA_ADDRESS</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> != <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#nla_get_be32\">nla_get_be32</a>(<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_ADDRESS\">IFA_ADDRESS</a>]), <a class=\"id\" href=\"#ifa\">ifa</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__inet_del_ifa\">__inet_del_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#ifap\">ifap</a>, 1, <a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#rtm_to_ifaddr\">rtm_to_ifaddr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_MAX\">IFA_MAX</a>+1];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifaddrmsg\">ifaddrmsg</a> *<a class=\"id\" href=\"#ifm\">ifm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#nlmsg_parse\">nlmsg_parse</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, sizeof(*<a class=\"id\" href=\"#ifm\">ifm</a>), <a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#IFA_MAX\">IFA_MAX</a>, <a class=\"id\" href=\"#ifa_ipv4_policy\">ifa_ipv4_policy</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifm\">ifm</a> = <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> &gt; 32 || <a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_LOCAL\">IFA_LOCAL</a>] == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_index\">__dev_get_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_index\">ifa_index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#inet_alloc_ifa\">inet_alloc_ifa</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * A potential indev allocation can be left alive, it stays</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * assigned to its device and is destroy with it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv4_devconf_setall\">ipv4_devconf_setall</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev_hold\">in_dev_hold</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_ADDRESS\">IFA_ADDRESS</a>] == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_ADDRESS\">IFA_ADDRESS</a>] = <a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_LOCAL\">IFA_LOCAL</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> = <a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> = <a class=\"id\" href=\"#inet_make_mask\">inet_make_mask</a>(<a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> = <a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> = <a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a> = <a class=\"id\" href=\"#nla_get_be32\">nla_get_be32</a>(<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_LOCAL\">IFA_LOCAL</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a> = <a class=\"id\" href=\"#nla_get_be32\">nla_get_be32</a>(<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_ADDRESS\">IFA_ADDRESS</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_BROADCAST\">IFA_BROADCAST</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a> = <a class=\"id\" href=\"#nla_get_be32\">nla_get_be32</a>(<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_BROADCAST\">IFA_BROADCAST</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_LABEL\">IFA_LABEL</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_strlcpy\">nla_strlcpy</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>, <a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#IFA_LABEL\">IFA_LABEL</a>], <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet_rtm_newaddr\">inet_rtm_newaddr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#rtm_to_ifaddr\">rtm_to_ifaddr</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ifa\">ifa</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__inet_insert_ifa\">__inet_insert_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>, <a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#pid\">pid</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Determine a default network mask, based on the IP address.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#inet_abc_len\">inet_abc_len</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = -1;<span class=\"ts\"/><span class=\"comment\">/* Something else, probably a multicast. */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv4_is_zeronet\">ipv4_is_zeronet</a>(<a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#haddr\">haddr</a> = <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IN_CLASSA\">IN_CLASSA</a>(<a class=\"id\" href=\"#haddr\">haddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#IN_CLASSB\">IN_CLASSB</a>(<a class=\"id\" href=\"#haddr\">haddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 16;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#IN_CLASSC\">IN_CLASSC</a>(<a class=\"id\" href=\"#haddr\">haddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 24;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#devinet_ioctl\">devinet_ioctl</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifreq\">ifreq</a> <a class=\"id\" href=\"#ifr\">ifr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> <a class=\"id\" href=\"#sin_orig\">sin_orig</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *<a class=\"id\" href=\"#sin\">sin</a> = (struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_addr\">ifr_addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> **<a class=\"id\" href=\"#ifap\">ifap</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#colon\">colon</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tryaddrmatch\">tryaddrmatch</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Fetch the caller's info block into kernel space</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a> - 1] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* save original address for comparison */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#sin_orig\">sin_orig</a>, <a class=\"id\" href=\"#sin\">sin</a>, sizeof(*<a class=\"id\" href=\"#sin\">sin</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#colon\">colon</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>, ':');", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#colon\">colon</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#colon\">colon</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_load\">dev_load</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFADDR\">SIOCGIFADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Get interface address */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFBRDADDR\">SIOCGIFBRDADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Get the broadcast address */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFDSTADDR\">SIOCGIFDSTADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Get the destination address */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFNETMASK\">SIOCGIFNETMASK</a>:<span class=\"ts\"/><span class=\"comment\">/* Get the netmask for the interface */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note that these ioctls will not sleep,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   so that we do not impose a lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   One day we will be forced to put shlock here (I mean SMP)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tryaddrmatch\">tryaddrmatch</a> = (<a class=\"id\" href=\"#sin_orig\">sin_orig</a>.<a class=\"id\" href=\"#sin_family\">sin_family</a> == <a class=\"id\" href=\"#AF_INET\">AF_INET</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#sin\">sin</a>, 0, sizeof(*<a class=\"id\" href=\"#sin\">sin</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_family\">sin_family</a> = <a class=\"id\" href=\"#AF_INET\">AF_INET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFFLAGS\">SIOCSIFFLAGS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFADDR\">SIOCSIFADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Set interface address (and family) */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFBRDADDR\">SIOCSIFBRDADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Set the broadcast address */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFDSTADDR\">SIOCSIFDSTADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Set the destination address */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFNETMASK\">SIOCSIFNETMASK</a>: <span class=\"ts\"/><span class=\"comment\">/* Set the netmask for the interface */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_family\">sin_family</a> != <a class=\"id\" href=\"#AF_INET\">AF_INET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_name\">__dev_get_by_name</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#colon\">colon</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#colon\">colon</a> = ':';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tryaddrmatch\">tryaddrmatch</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Matthias Andree */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* compare label and address (4.4BSD style) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* note: we only do this for a limited set of ioctls</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   and only if the original address family was AF_INET.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   This is checked above. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ifap\">ifap</a> = &amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>; (<a class=\"id\" href=\"#ifa\">ifa</a> = *<a class=\"id\" href=\"#ifap\">ifap</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ifap\">ifap</a> = &amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>, <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sin_orig\">sin_orig</a>.<a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break; <span class=\"comment\">/* found */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we didn't get a match, maybe the application is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   4.3BSD-style and passed in junk so we fall back to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   comparing just the label */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ifa\">ifa</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ifap\">ifap</a> = &amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>; (<a class=\"id\" href=\"#ifa\">ifa</a> = *<a class=\"id\" href=\"#ifap\">ifap</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ifap\">ifap</a> = &amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>, <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ifa\">ifa</a> && <a class=\"id\" href=\"#cmd\">cmd</a> != <a class=\"id\" href=\"#SIOCSIFADDR\">SIOCSIFADDR</a> && <a class=\"id\" href=\"#cmd\">cmd</a> != <a class=\"id\" href=\"#SIOCSIFFLAGS\">SIOCSIFFLAGS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFADDR\">SIOCGIFADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Get interface address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#rarok\">rarok</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFBRDADDR\">SIOCGIFBRDADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Get the broadcast address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#rarok\">rarok</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFDSTADDR\">SIOCGIFDSTADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Get the destination address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#rarok\">rarok</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFNETMASK\">SIOCGIFNETMASK</a>:<span class=\"ts\"/><span class=\"comment\">/* Get the netmask for the interface */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#rarok\">rarok</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFFLAGS\">SIOCSIFFLAGS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#colon\">colon</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ifa\">ifa</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_flags\">ifr_flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_del_ifa\">inet_del_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#ifap\">ifap</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_change_flags\">dev_change_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_flags\">ifr_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFADDR\">SIOCSIFADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Set interface address (and family) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_abc_len\">inet_abc_len</a>(<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ifa\">ifa</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#inet_alloc_ifa\">inet_alloc_ifa</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ifa\">ifa</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#colon\">colon</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>, <a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>, <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a> == <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_del_ifa\">inet_del_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#ifap\">ifap</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a> = <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> = <a class=\"id\" href=\"#inet_abc_len\">inet_abc_len</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> = <a class=\"id\" href=\"#inet_make_mask\">inet_make_mask</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_BROADCAST\">IFF_BROADCAST</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> &lt; 31)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     ~<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> = 32;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> = <a class=\"id\" href=\"#inet_make_mask\">inet_make_mask</a>(32);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inet_set_ifa\">inet_set_ifa</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFBRDADDR\">SIOCSIFBRDADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Set the broadcast address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a> != <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_del_ifa\">inet_del_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#ifap\">ifap</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a> = <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_insert_ifa\">inet_insert_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFDSTADDR\">SIOCSIFDSTADDR</a>:<span class=\"ts\"/><span class=\"comment\">/* Set the destination address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a> == <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_abc_len\">inet_abc_len</a>(<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_del_ifa\">inet_del_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#ifap\">ifap</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a> = <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_insert_ifa\">inet_insert_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFNETMASK\">SIOCSIFNETMASK</a>: <span class=\"ts\"/><span class=\"comment\">/* Set the netmask for the interface */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>The mask we set must be legal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bad_mask\">bad_mask</a>(<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> != <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#old_mask\">old_mask</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_del_ifa\">inet_del_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#ifap\">ifap</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> = <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> = <a class=\"id\" href=\"#inet_mask_len\">inet_mask_len</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* See if current broadcast address matches</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * with current netmask, then recalculate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the broadcast address. Otherwise it's a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * funny address, so don't touch it since</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the user seems to know what (s)he's doing...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_BROADCAST\">IFF_BROADCAST</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> &lt; 31) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>|~<a class=\"id\" href=\"#old_mask\">old_mask</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a> = (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      ~<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_insert_ifa\">inet_insert_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<a class=\"id\" href=\"#rarok\">rarok</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>, sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>)) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : 0;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet_gifconf\">inet_gifconf</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifreq\">ifreq</a> <a class=\"id\" href=\"#ifr\">ifr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#done\">done</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>; <a class=\"id\" href=\"#ifa\">ifa</a>; <a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a> += sizeof(<a class=\"id\" href=\"#ifr\">ifr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; (int) sizeof(<a class=\"id\" href=\"#ifr\">ifr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#ifr\">ifr</a>, 0, sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>, <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>(*(struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_addr\">ifr_addr</a>).<a class=\"id\" href=\"#sin_family\">sin_family</a> = <a class=\"id\" href=\"#AF_INET\">AF_INET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>(*(struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_addr\">ifr_addr</a>).<a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>, sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>  += sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>  -= sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a> += sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#done\">done</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#inet_select_addr\">inet_select_addr</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dst\">dst</a>, int <a class=\"id\" href=\"#scope\">scope</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_in_dev\">no_in_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_primary_ifa\">for_primary_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> &gt; <a class=\"id\" href=\"#scope\">scope</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a> || <a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#ifa\">ifa</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_ifa\">endfor_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<a class=\"id\" href=\"#no_in_dev\">no_in_dev</a>:", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Not loopback addresses on loopback should be preferred</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   in this case. It is importnat that lo is the first interface</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   in dev_base list.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev_rcu\">for_each_netdev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_primary_ifa\">for_primary_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> != <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> <= <a class=\"id\" href=\"#scope\">scope</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_ifa\">endfor_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_select_addr\">inet_select_addr</a>);", 
"", 
"static <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#confirm_addr_indev\">confirm_addr_indev</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#local\">local</a>, int <a class=\"id\" href=\"#scope\">scope</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#same\">same</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_ifa\">for_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#addr\">addr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#local\">local</a> == <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a> || !<a class=\"id\" href=\"#local\">local</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> <= <a class=\"id\" href=\"#scope\">scope</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#same\">same</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#same\">same</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#same\">same</a> = (!<a class=\"id\" href=\"#local\">local</a> || <a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#local\">local</a>, <a class=\"id\" href=\"#ifa\">ifa</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(!<a class=\"id\" href=\"#dst\">dst</a> || <a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#ifa\">ifa</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#same\">same</a> && <a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#local\">local</a> || !<a class=\"id\" href=\"#dst\">dst</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Is the selected addr into dst subnet? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_ifa_match\">inet_ifa_match</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ifa\">ifa</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No, then can we use new local src? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> <= <a class=\"id\" href=\"#scope\">scope</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* search for large dst subnet for addr */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#same\">same</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_ifa\">endfor_ifa</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#same\">same</a> ? <a class=\"id\" href=\"#addr\">addr</a> : 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Confirm that local IP address exists using wildcards:</span>", 
"<span class=\"comment\"> * - in_dev: only on this interface, 0=any interface</span>", 
"<span class=\"comment\"> * - dst: only in the same subnet as dst, 0=any dst</span>", 
"<span class=\"comment\"> * - local: address, 0=autoselect the local address</span>", 
"<span class=\"comment\"> * - scope: maximum allowed scope value for the local address</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#inet_confirm_addr\">inet_confirm_addr</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#local\">local</a>, int <a class=\"id\" href=\"#scope\">scope</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scope\">scope</a> != <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#confirm_addr_indev\">confirm_addr_indev</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#local\">local</a>, <a class=\"id\" href=\"#scope\">scope</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev_rcu\">for_each_netdev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#confirm_addr_indev\">confirm_addr_indev</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#local\">local</a>, <a class=\"id\" href=\"#scope\">scope</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Device notifier</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#register_inetaddr_notifier\">register_inetaddr_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blocking_notifier_chain_register\">blocking_notifier_chain_register</a>(&amp;<a class=\"id\" href=\"#inetaddr_chain\">inetaddr_chain</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#register_inetaddr_notifier\">register_inetaddr_notifier</a>);", 
"", 
"int <a class=\"id\" href=\"#unregister_inetaddr_notifier\">unregister_inetaddr_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blocking_notifier_chain_unregister\">blocking_notifier_chain_unregister</a>(&amp;<a class=\"id\" href=\"#inetaddr_chain\">inetaddr_chain</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#unregister_inetaddr_notifier\">unregister_inetaddr_notifier</a>);", 
"", 
"<span class=\"comment\">/* Rename ifa_labels for a device name change. Make some effort to preserve</span>", 
"<span class=\"comment\"> * existing alias numbering and to create unique labels if possible.</span>", 
"<span class=\"comment\">*/</span>", 
"static void <a class=\"id\" href=\"#inetdev_changename\">inetdev_changename</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#named\">named</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>; <a class=\"id\" href=\"#ifa\">ifa</a>; <a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#old\">old</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>], *<a class=\"id\" href=\"#dot\">dot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>, <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#named\">named</a>++ == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#skip\">skip</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dot\">dot</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#old\">old</a>, ':');", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dot\">dot</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#old\">old</a>, \":%d\", <a class=\"id\" href=\"#named\">named</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dot\">dot</a> = <a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#dot\">dot</a>) + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>) &lt; <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcat\">strcat</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>, <a class=\"id\" href=\"#dot\">dot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a> + (<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a> - <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#dot\">dot</a>) - 1), <a class=\"id\" href=\"#dot\">dot</a>);", 
"<a class=\"id\" href=\"#skip\">skip</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_ifa\">rtmsg_ifa</a>(<a class=\"id\" href=\"#RTM_NEWADDR\">RTM_NEWADDR</a>, <a class=\"id\" href=\"#ifa\">ifa</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#inetdev_valid_mtu\">inetdev_valid_mtu</a>(unsigned <a class=\"id\" href=\"#mtu\">mtu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mtu\">mtu</a> >= 68;", 
"}", 
"", 
"<span class=\"comment\">/* Called only under RTNL semaphore */</span>", 
"", 
"static int <a class=\"id\" href=\"#inetdev_event\">inetdev_event</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#this\">this</a>, unsigned long <a class=\"id\" href=\"#event\">event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#NETDEV_REGISTER\">NETDEV_REGISTER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#inetdev_init\">inetdev_init</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#notifier_from_errno\">notifier_from_errno</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IN_DEV_CONF_SET\">IN_DEV_CONF_SET</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#NOXFRM\">NOXFRM</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IN_DEV_CONF_SET\">IN_DEV_CONF_SET</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#NOPOLICY\">NOPOLICY</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#NETDEV_CHANGEMTU\">NETDEV_CHANGEMTU</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Re-enabling IP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inetdev_valid_mtu\">inetdev_valid_mtu</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#inetdev_init\">inetdev_init</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_REGISTER\">NETDEV_REGISTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"inetdev_event: bug\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ip_ptr\">ip_ptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_UP\">NETDEV_UP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inetdev_valid_mtu\">inetdev_valid_mtu</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#inet_alloc_ifa\">inet_alloc_ifa</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a> = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#INADDR_LOOPBACK\">INADDR_LOOPBACK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_mask\">ifa_mask</a> = <a class=\"id\" href=\"#inet_make_mask\">inet_make_mask</a>(8);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev_hold\">in_dev_hold</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> = <a class=\"id\" href=\"#RT_SCOPE_HOST\">RT_SCOPE_HOST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_insert_ifa\">inet_insert_ifa</a>(<a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_mc_up\">ip_mc_up</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_NOTIFY_PEERS\">NETDEV_NOTIFY_PEERS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_CHANGEADDR\">NETDEV_CHANGEADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Send gratuitous ARP to notify of link change */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IN_DEV_ARP_NOTIFY\">IN_DEV_ARP_NOTIFY</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_send\">arp_send</a>(<a class=\"id\" href=\"#ARPOP_REQUEST\">ARPOP_REQUEST</a>, <a class=\"id\" href=\"#ETH_P_ARP\">ETH_P_ARP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>, <a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_mc_down\">ip_mc_down</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_PRE_TYPE_CHANGE\">NETDEV_PRE_TYPE_CHANGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_mc_unmap\">ip_mc_unmap</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_POST_TYPE_CHANGE\">NETDEV_POST_TYPE_CHANGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_mc_remap\">ip_mc_remap</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_CHANGEMTU\">NETDEV_CHANGEMTU</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inetdev_valid_mtu\">inetdev_valid_mtu</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* disable IP when MTU is not enough */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_UNREGISTER\">NETDEV_UNREGISTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inetdev_destroy\">inetdev_destroy</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_CHANGENAME\">NETDEV_CHANGENAME</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do not notify about label change, this event is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not interesting to applications using netlink.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inetdev_changename\">inetdev_changename</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devinet_sysctl_unregister\">devinet_sysctl_unregister</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devinet_sysctl_register\">devinet_sysctl_register</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_DONE\">NOTIFY_DONE</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#ip_netdev_notifier\">ip_netdev_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#inetdev_event\">inetdev_event</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#inet_nlmsg_size\">inet_nlmsg_size</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NLMSG_ALIGN\">NLMSG_ALIGN</a>(sizeof(struct <a class=\"id\" href=\"#ifaddrmsg\">ifaddrmsg</a>))", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* IFA_ADDRESS */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* IFA_LOCAL */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* IFA_BROADCAST */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>); <span class=\"comment\">/* IFA_LABEL */</span>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet_fill_ifaddr\">inet_fill_ifaddr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>, int <a class=\"id\" href=\"#event\">event</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifaddrmsg\">ifaddrmsg</a> *<a class=\"id\" href=\"#ifm\">ifm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a>  *<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = <a class=\"id\" href=\"#nlmsg_put\">nlmsg_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#event\">event</a>, sizeof(*<a class=\"id\" href=\"#ifm\">ifm</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlh\">nlh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifm\">ifm</a> = <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_family\">ifa_family</a> = <a class=\"id\" href=\"#AF_INET\">AF_INET</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_prefixlen\">ifa_prefixlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a>|<a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_scope\">ifa_scope</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifa_index\">ifa_index</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFA_ADDRESS\">IFA_ADDRESS</a>, <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_address\">ifa_address</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFA_LOCAL\">IFA_LOCAL</a>, <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_local\">ifa_local</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFA_BROADCAST\">IFA_BROADCAST</a>, <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_broadcast\">ifa_broadcast</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>[0])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_STRING\">NLA_PUT_STRING</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFA_LABEL\">IFA_LABEL</a>, <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_label\">ifa_label</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlmsg_end\">nlmsg_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"", 
"<a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_cancel\">nlmsg_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet_dump_ifaddr\">inet_dump_ifaddr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#s_h\">s_h</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#s_idx\">s_idx</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ip_idx\">ip_idx</a>, <a class=\"id\" href=\"#s_ip_idx\">s_ip_idx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_h\">s_h</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_idx\">s_idx</a> = <a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_ip_idx\">s_ip_idx</a> = <a class=\"id\" href=\"#ip_idx\">ip_idx</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2];", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#s_h\">s_h</a>; <a class=\"id\" href=\"#h\">h</a> &lt; <a class=\"id\" href=\"#NETDEV_HASHENTRIES\">NETDEV_HASHENTRIES</a>; <a class=\"id\" href=\"#h\">h</a>++, <a class=\"id\" href=\"#s_idx\">s_idx</a> = 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#dev_index_head\">dev_index_head</a>[<a class=\"id\" href=\"#h\">h</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_rcu\">hlist_for_each_entry_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#index_hlist\">index_hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#s_idx\">s_idx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cont\">cont</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#h\">h</a> &gt; <a class=\"id\" href=\"#s_h\">s_h</a> || <a class=\"id\" href=\"#idx\">idx</a> &gt; <a class=\"id\" href=\"#s_idx\">s_idx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s_ip_idx\">s_ip_idx</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cont\">cont</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#ifa_list\">ifa_list</a>, <a class=\"id\" href=\"#ip_idx\">ip_idx</a> = 0; <a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_next\">ifa_next</a>, <a class=\"id\" href=\"#ip_idx\">ip_idx</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_idx\">ip_idx</a> &lt; <a class=\"id\" href=\"#s_ip_idx\">s_ip_idx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_fill_ifaddr\">inet_fill_ifaddr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ifa\">ifa</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#pid\">pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_seq\">nlmsg_seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#RTM_NEWADDR\">RTM_NEWADDR</a>, <a class=\"id\" href=\"#NLM_F_MULTI\">NLM_F_MULTI</a>) <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#cont\">cont</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[0] = <a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[1] = <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2] = <a class=\"id\" href=\"#ip_idx\">ip_idx</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rtmsg_ifa\">rtmsg_ifa</a>(int <a class=\"id\" href=\"#event\">event</a>, struct <a class=\"id\" href=\"#in_ifaddr\">in_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#nlh\">nlh</a> ? <a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_seq\">nlmsg_seq</a> : 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#ifa_dev\">ifa_dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#nlmsg_new\">nlmsg_new</a>(<a class=\"id\" href=\"#inet_nlmsg_size\">inet_nlmsg_size</a>(), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#inet_fill_ifaddr\">inet_fill_ifaddr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ifa\">ifa</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#event\">event</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* -EMSGSIZE implies BUG in inet_nlmsg_size() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_notify\">rtnl_notify</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#RTNLGRP_IPV4_IFADDR\">RTNLGRP_IPV4_IFADDR</a>, <a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>return;", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_set_sk_err\">rtnl_set_sk_err</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#RTNLGRP_IPV4_IFADDR\">RTNLGRP_IPV4_IFADDR</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"", 
"static void <a class=\"id\" href=\"#devinet_copy_dflt_conf\">devinet_copy_dflt_conf</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, int <a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev_rcu\">for_each_netdev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a> && !<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#devconf_dflt\">devconf_dflt</a>-><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"<span class=\"comment\">/* called with RTNL locked */</span>", 
"static void <a class=\"id\" href=\"#inet_forward_change\">inet_forward_change</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#on\">on</a> = <a class=\"id\" href=\"#IPV4_DEVCONF_ALL\">IPV4_DEVCONF_ALL</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#FORWARDING\">FORWARDING</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF_ALL\">IPV4_DEVCONF_ALL</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ACCEPT_REDIRECTS\">ACCEPT_REDIRECTS</a>) = !<a class=\"id\" href=\"#on\">on</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF_DFLT\">IPV4_DEVCONF_DFLT</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#FORWARDING\">FORWARDING</a>) = <a class=\"id\" href=\"#on\">on</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev\">for_each_netdev</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#on\">on</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_disable_lro\">dev_disable_lro</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IN_DEV_CONF_SET\">IN_DEV_CONF_SET</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#FORWARDING\">FORWARDING</a>, <a class=\"id\" href=\"#on\">on</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#devinet_conf_proc\">devinet_conf_proc</a>(<a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#ctl\">ctl</a>, int <a class=\"id\" href=\"#write\">write</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#lenp\">lenp</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#proc_dointvec\">proc_dointvec</a>(<a class=\"id\" href=\"#ctl\">ctl</a>, <a class=\"id\" href=\"#write\">write</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#lenp\">lenp</a>, <a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write\">write</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv4_devconf\">ipv4_devconf</a> *<a class=\"id\" href=\"#cnf\">cnf</a> = <a class=\"id\" href=\"#ctl\">ctl</a>-><a class=\"id\" href=\"#extra1\">extra1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#ctl\">ctl</a>-><a class=\"id\" href=\"#extra2\">extra2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = (int *)<a class=\"id\" href=\"#ctl\">ctl</a>-><a class=\"id\" href=\"#data\">data</a> - <a class=\"id\" href=\"#cnf\">cnf</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#cnf\">cnf</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cnf\">cnf</a> == <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#devconf_dflt\">devconf_dflt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devinet_copy_dflt_conf\">devinet_copy_dflt_conf</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#devinet_sysctl_forward\">devinet_sysctl_forward</a>(<a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#ctl\">ctl</a>, int <a class=\"id\" href=\"#write\">write</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#lenp\">lenp</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>int *<a class=\"id\" href=\"#valp\">valp</a> = <a class=\"id\" href=\"#ctl\">ctl</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a> = *<a class=\"id\" href=\"#valp\">valp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#proc_dointvec\">proc_dointvec</a>(<a class=\"id\" href=\"#ctl\">ctl</a>, <a class=\"id\" href=\"#write\">write</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#lenp\">lenp</a>, <a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write\">write</a> && *<a class=\"id\" href=\"#valp\">valp</a> != <a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#ctl\">ctl</a>-><a class=\"id\" href=\"#extra2\">extra2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valp\">valp</a> != &amp;<a class=\"id\" href=\"#IPV4_DEVCONF_DFLT\">IPV4_DEVCONF_DFLT</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#FORWARDING\">FORWARDING</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtnl_trylock\">rtnl_trylock</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Restore the original values before restarting */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#valp\">valp</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#restart_syscall\">restart_syscall</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valp\">valp</a> == &amp;<a class=\"id\" href=\"#IPV4_DEVCONF_ALL\">IPV4_DEVCONF_ALL</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#FORWARDING\">FORWARDING</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_forward_change\">inet_forward_change</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (*<a class=\"id\" href=\"#valp\">valp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv4_devconf\">ipv4_devconf</a> *<a class=\"id\" href=\"#cnf\">cnf</a> = <a class=\"id\" href=\"#ctl\">ctl</a>-><a class=\"id\" href=\"#extra1\">extra1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#idev\">idev</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#cnf\">cnf</a>, struct <a class=\"id\" href=\"#in_device\">in_device</a>, <a class=\"id\" href=\"#cnf\">cnf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_disable_lro\">dev_disable_lro</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_cache_flush\">rt_cache_flush</a>(<a class=\"id\" href=\"#net\">net</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ipv4_doint_and_flush\">ipv4_doint_and_flush</a>(<a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#ctl\">ctl</a>, int <a class=\"id\" href=\"#write\">write</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#lenp\">lenp</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>int *<a class=\"id\" href=\"#valp\">valp</a> = <a class=\"id\" href=\"#ctl\">ctl</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a> = *<a class=\"id\" href=\"#valp\">valp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#proc_dointvec\">proc_dointvec</a>(<a class=\"id\" href=\"#ctl\">ctl</a>, <a class=\"id\" href=\"#write\">write</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#lenp\">lenp</a>, <a class=\"id\" href=\"#ppos\">ppos</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#ctl\">ctl</a>-><a class=\"id\" href=\"#extra2\">extra2</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write\">write</a> && *<a class=\"id\" href=\"#valp\">valp</a> != <a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_cache_flush\">rt_cache_flush</a>(<a class=\"id\" href=\"#net\">net</a>, 0);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEVINET_SYSCTL_ENTRY\">DEVINET_SYSCTL_ENTRY</a>(<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mval\">mval</a>, <a class=\"id\" href=\"#proc\">proc</a>) \\", 
"<span class=\"ts\"/>{ \\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#procname\">procname</a><span class=\"ts\"/>= <a class=\"id\" href=\"#name\">name</a>, \\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#data\">data</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ipv4_devconf\">ipv4_devconf</a>.<a class=\"id\" href=\"#data\">data</a> + \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#IPV4_DEVCONF_\">IPV4_DEVCONF_</a> ## <a class=\"id\" href=\"#attr\">attr</a> - 1, \\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#maxlen\">maxlen</a><span class=\"ts\"/><span class=\"ts\"/>= sizeof(int), \\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mode\">mode</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mval\">mval</a>, \\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proc_handler\">proc_handler</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc\">proc</a>, \\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#extra1\">extra1</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ipv4_devconf\">ipv4_devconf</a>, \\", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#name\">name</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_ENTRY\">DEVINET_SYSCTL_ENTRY</a>(<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#name\">name</a>, 0644, <a class=\"id\" href=\"#devinet_conf_proc\">devinet_conf_proc</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEVINET_SYSCTL_RO_ENTRY\">DEVINET_SYSCTL_RO_ENTRY</a>(<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#name\">name</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_ENTRY\">DEVINET_SYSCTL_ENTRY</a>(<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#name\">name</a>, 0444, <a class=\"id\" href=\"#devinet_conf_proc\">devinet_conf_proc</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEVINET_SYSCTL_COMPLEX_ENTRY\">DEVINET_SYSCTL_COMPLEX_ENTRY</a>(<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#proc\">proc</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_ENTRY\">DEVINET_SYSCTL_ENTRY</a>(<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#name\">name</a>, 0644, <a class=\"id\" href=\"#proc\">proc</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEVINET_SYSCTL_FLUSHING_ENTRY\">DEVINET_SYSCTL_FLUSHING_ENTRY</a>(<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#name\">name</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_COMPLEX_ENTRY\">DEVINET_SYSCTL_COMPLEX_ENTRY</a>(<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#ipv4_doint_and_flush\">ipv4_doint_and_flush</a>)", 
"", 
"static struct <a class=\"id\" href=\"#devinet_sysctl_table\">devinet_sysctl_table</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ctl_table_header\">ctl_table_header</a> *<a class=\"id\" href=\"#sysctl_header\">sysctl_header</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> <a class=\"id\" href=\"#devinet_vars\">devinet_vars</a>[<a class=\"id\" href=\"#__IPV4_DEVCONF_MAX\">__IPV4_DEVCONF_MAX</a>];", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#dev_name\">dev_name</a>;", 
"} <a class=\"id\" href=\"#devinet_sysctl\">devinet_sysctl</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#devinet_vars\">devinet_vars</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_COMPLEX_ENTRY\">DEVINET_SYSCTL_COMPLEX_ENTRY</a>(<a class=\"id\" href=\"#FORWARDING\">FORWARDING</a>, \"forwarding\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#devinet_sysctl_forward\">devinet_sysctl_forward</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RO_ENTRY\">DEVINET_SYSCTL_RO_ENTRY</a>(<a class=\"id\" href=\"#MC_FORWARDING\">MC_FORWARDING</a>, \"mc_forwarding\"),", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#ACCEPT_REDIRECTS\">ACCEPT_REDIRECTS</a>, \"accept_redirects\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#SECURE_REDIRECTS\">SECURE_REDIRECTS</a>, \"secure_redirects\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#SHARED_MEDIA\">SHARED_MEDIA</a>, \"shared_media\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#RP_FILTER\">RP_FILTER</a>, \"rp_filter\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#SEND_REDIRECTS\">SEND_REDIRECTS</a>, \"send_redirects\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#ACCEPT_SOURCE_ROUTE\">ACCEPT_SOURCE_ROUTE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"accept_source_route\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#ACCEPT_LOCAL\">ACCEPT_LOCAL</a>, \"accept_local\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#SRC_VMARK\">SRC_VMARK</a>, \"src_valid_mark\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#PROXY_ARP\">PROXY_ARP</a>, \"proxy_arp\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#MEDIUM_ID\">MEDIUM_ID</a>, \"medium_id\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#BOOTP_RELAY\">BOOTP_RELAY</a>, \"bootp_relay\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#LOG_MARTIANS\">LOG_MARTIANS</a>, \"log_martians\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#TAG\">TAG</a>, \"tag\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#ARPFILTER\">ARPFILTER</a>, \"arp_filter\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#ARP_ANNOUNCE\">ARP_ANNOUNCE</a>, \"arp_announce\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#ARP_IGNORE\">ARP_IGNORE</a>, \"arp_ignore\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#ARP_ACCEPT\">ARP_ACCEPT</a>, \"arp_accept\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#ARP_NOTIFY\">ARP_NOTIFY</a>, \"arp_notify\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_RW_ENTRY\">DEVINET_SYSCTL_RW_ENTRY</a>(<a class=\"id\" href=\"#PROXY_ARP_PVLAN\">PROXY_ARP_PVLAN</a>, \"proxy_arp_pvlan\"),", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_FLUSHING_ENTRY\">DEVINET_SYSCTL_FLUSHING_ENTRY</a>(<a class=\"id\" href=\"#NOXFRM\">NOXFRM</a>, \"disable_xfrm\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_FLUSHING_ENTRY\">DEVINET_SYSCTL_FLUSHING_ENTRY</a>(<a class=\"id\" href=\"#NOPOLICY\">NOPOLICY</a>, \"disable_policy\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_FLUSHING_ENTRY\">DEVINET_SYSCTL_FLUSHING_ENTRY</a>(<a class=\"id\" href=\"#FORCE_IGMP_VERSION\">FORCE_IGMP_VERSION</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"force_igmp_version\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEVINET_SYSCTL_FLUSHING_ENTRY\">DEVINET_SYSCTL_FLUSHING_ENTRY</a>(<a class=\"id\" href=\"#PROMOTE_SECONDARIES\">PROMOTE_SECONDARIES</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"promote_secondaries\"),", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__devinet_sysctl_register\">__devinet_sysctl_register</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, char *<a class=\"id\" href=\"#dev_name\">dev_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv4_devconf\">ipv4_devconf</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#devinet_sysctl_table\">devinet_sysctl_table</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEVINET_CTL_PATH_DEV\">DEVINET_CTL_PATH_DEV</a><span class=\"ts\"/>3", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ctl_path\">ctl_path</a> <a class=\"id\" href=\"#devinet_ctl_path\">devinet_ctl_path</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>{ .<a class=\"id\" href=\"#procname\">procname</a> = \"net\",  },", 
"<span class=\"ts\"/><span class=\"ts\"/>{ .<a class=\"id\" href=\"#procname\">procname</a> = \"ipv4\", },", 
"<span class=\"ts\"/><span class=\"ts\"/>{ .<a class=\"id\" href=\"#procname\">procname</a> = \"conf\", },", 
"<span class=\"ts\"/><span class=\"ts\"/>{ <span class=\"comment\">/* to be set */</span> },", 
"<span class=\"ts\"/><span class=\"ts\"/>{ },", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#kmemdup\">kmemdup</a>(&amp;<a class=\"id\" href=\"#devinet_sysctl\">devinet_sysctl</a>, sizeof(*<a class=\"id\" href=\"#t\">t</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#t\">t</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#devinet_vars\">devinet_vars</a>) - 1; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#devinet_vars\">devinet_vars</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#data\">data</a> += (char *)<a class=\"id\" href=\"#p\">p</a> - (char *)&amp;<a class=\"id\" href=\"#ipv4_devconf\">ipv4_devconf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#devinet_vars\">devinet_vars</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#extra1\">extra1</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#devinet_vars\">devinet_vars</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#extra2\">extra2</a> = <a class=\"id\" href=\"#net\">net</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make a copy of dev_name, because '.procname' is regarded as const</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by sysctl and we wouldn't want anyone to change it under our feet</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (see SIOCSIFNAME).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#dev_name\">dev_name</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#dev_name\">dev_name</a>)", 
];
xr_frag_insert('l/d0/21834d4fcb1152fd645cea14fec2753ca26797.xr', __xr_tmp);
