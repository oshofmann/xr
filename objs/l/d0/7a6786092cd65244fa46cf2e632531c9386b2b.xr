var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>), <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ext4_can_extents_be_merged should have checked that either</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * both extents are uninitialized, or both aren't. Thus we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * need to check only one of them here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uninitialized\">uninitialized</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#newext\">newext</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uninitialized\">uninitialized</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nearex\">nearex</a> = <a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#merge\">merge</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#repeat\">repeat</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>) &lt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#has_space\">has_space</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* probably next leaf has space for us? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fex\">fex</a> = <a class=\"id\" href=\"#EXT_LAST_EXTENT\">EXT_LAST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#ext4_ext_next_leaf_block\">ext4_ext_next_leaf_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) &gt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#fex\">fex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"next leaf block - %d\\n\", <a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#npath\">npath</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#npath\">npath</a> = <a class=\"id\" href=\"#ext4_ext_find_extent\">ext4_ext_find_extent</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#npath\">npath</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#npath\">npath</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#npath\">npath</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a> != <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#npath\">npath</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>) &lt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"next leaf isnt full(%d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#npath\">npath</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"next leaf has no free space(%d,%d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>), <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * There is no free space in the found leaf.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We're gonna add a new leaf in the tree.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_create_new_leaf\">ext4_ext_create_new_leaf</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#newext\">newext</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"", 
"<a class=\"id\" href=\"#has_space\">has_space</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nearex\">nearex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nearex\">nearex</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* there is no extent in this leaf, create first one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"first extent in the leaf: %d:%llu:[%d]%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#newext\">newext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#newext\">newext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#newext\">newext</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> = <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &gt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#nearex\">nearex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)) {", 
"<span class=\"comment\">/*<span class=\"ts\"/><span class=\"ts\"/>BUG_ON(newext-&gt;ee_block == nearex-&gt;ee_block); */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nearex\">nearex</a> != <a class=\"id\" href=\"#EXT_LAST_EXTENT\">EXT_LAST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#EXT_MAX_EXTENT\">EXT_MAX_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>) - <a class=\"id\" href=\"#nearex\">nearex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#len\">len</a> - 1) * sizeof(struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#len\">len</a> &lt; 0 ? 0 : <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"insert %d:%llu:[%d]%d after: nearest 0x%p, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"move %d from 0x%p to 0x%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#newext\">newext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#newext\">newext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#newext\">newext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nearex\">nearex</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#nearex\">nearex</a> + 1, <a class=\"id\" href=\"#nearex\">nearex</a> + 2);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#nearex\">nearex</a> + 2, <a class=\"id\" href=\"#nearex\">nearex</a> + 1, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> = <a class=\"id\" href=\"#nearex\">nearex</a> + 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> == <a class=\"id\" href=\"#nearex\">nearex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#EXT_MAX_EXTENT\">EXT_MAX_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>) - <a class=\"id\" href=\"#nearex\">nearex</a>) * sizeof(struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#len\">len</a> &lt; 0 ? 0 : <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"insert %d:%llu:[%d]%d before: nearest 0x%p, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"move %d from 0x%p to 0x%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#newext\">newext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#newext\">newext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#newext\">newext</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nearex\">nearex</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#nearex\">nearex</a> + 1, <a class=\"id\" href=\"#nearex\">nearex</a> + 2);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#nearex\">nearex</a> + 1, <a class=\"id\" href=\"#nearex\">nearex</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> = <a class=\"id\" href=\"#nearex\">nearex</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nearex\">nearex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nearex\">nearex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#nearex\">nearex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#newext\">newext</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nearex\">nearex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#newext\">newext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"", 
"<a class=\"id\" href=\"#merge\">merge</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* try to merge extents to the right */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_PRE_IO\">EXT4_GET_BLOCKS_PRE_IO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_try_to_merge\">ext4_ext_try_to_merge</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#nearex\">nearex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* try to merge extents to the left */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* time to correct all indexes above */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_correct_indexes\">ext4_ext_correct_indexes</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#npath\">npath</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#npath\">npath</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#npath\">npath</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_invalidate_cache\">ext4_ext_invalidate_cache</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ext4_ext_walk_space\">ext4_ext_walk_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#ext_prepare_callback\">ext_prepare_callback</a> <a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#cbdata\">cbdata</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_cache\">ext4_ext_cache</a> <a class=\"id\" href=\"#cbex\">cbex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#start\">start</a> = 0, <a class=\"id\" href=\"#end\">end</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>, <a class=\"id\" href=\"#exists\">exists</a>, <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#func\">func</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#inode\">inode</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#block\">block</a> &lt; <a class=\"id\" href=\"#last\">last</a> && <a class=\"id\" href=\"#block\">block</a> != <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#last\">last</a> - <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* find extent for this block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#ext4_ext_find_extent\">ext4_ext_find_extent</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#path\">path</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"path[%d].p_hdr == NULL\", <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#ext4_ext_next_allocated_block\">ext4_ext_next_allocated_block</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exists\">exists</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ex\">ex</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* there is no extent yet, so try to allocate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * all requested space */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) &gt; <a class=\"id\" href=\"#block\">block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* need to allocate space before found extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#num\">num</a> &lt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#block\">block</a> >= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* need to allocate space after found extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> >= <a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#block\">block</a> >= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * some part of requested space is covered</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * by found extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#num\">num</a> &lt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exists\">exists</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#end\">end</a> <= <a class=\"id\" href=\"#start\">start</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#exists\">exists</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_block\">ec_block</a> = <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_len\">ec_len</a> = <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_start\">ec_start</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_type\">ec_type</a> = <a class=\"id\" href=\"#EXT4_EXT_CACHE_GAP\">EXT4_EXT_CACHE_GAP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_block\">ec_block</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_len\">ec_len</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_start\">ec_start</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_type\">ec_type</a> = <a class=\"id\" href=\"#EXT4_EXT_CACHE_EXTENT\">EXT4_EXT_CACHE_EXTENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_len\">ec_len</a> == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"cbex.ec_len == 0\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#cbex\">cbex</a>, <a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#cbdata\">cbdata</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == <a class=\"id\" href=\"#EXT_REPEAT\">EXT_REPEAT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#err\">err</a> == <a class=\"id\" href=\"#EXT_BREAK\">EXT_BREAK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>) != <a class=\"id\" href=\"#depth\">depth</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* depth was changed. we have to realloc path */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_block\">ec_block</a> + <a class=\"id\" href=\"#cbex\">cbex</a>.<a class=\"id\" href=\"#ec_len\">ec_len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#ext4_ext_put_in_cache\">ext4_ext_put_in_cache</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#start\">start</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_cache\">ext4_ext_cache</a> *<a class=\"id\" href=\"#cex\">cex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#len\">len</a> == 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cex\">cex</a> = &amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_cached_extent\">i_cached_extent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_type\">ec_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_block\">ec_block</a> = <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_len\">ec_len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_start\">ec_start</a> = <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_put_gap_in_cache:</span>", 
"<span class=\"comment\"> * calculate boundaries of the gap that the requested block fits into</span>", 
"<span class=\"comment\"> * and cache this gap</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#ext4_ext_put_gap_in_cache\">ext4_ext_put_gap_in_cache</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#block\">block</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#lblock\">lblock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ex\">ex</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* there is no extent yet, so gap is [0;-] */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lblock\">lblock</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"cache gap(whole file):\");", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#block\">block</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lblock\">lblock</a> = <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) - <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"cache gap(before): %u [%u:%u]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>));", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#block\">block</a> >= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lblock\">lblock</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#ext4_ext_next_allocated_block\">ext4_ext_next_allocated_block</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"cache gap(after): [%u:%u] %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#next\">next</a> == <a class=\"id\" href=\"#lblock\">lblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#next\">next</a> - <a class=\"id\" href=\"#lblock\">lblock</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lblock\">lblock</a> = <a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\" -> %u:%lu\\n\", <a class=\"id\" href=\"#lblock\">lblock</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_put_in_cache\">ext4_ext_put_in_cache</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#lblock\">lblock</a>, <a class=\"id\" href=\"#len\">len</a>, 0, <a class=\"id\" href=\"#EXT4_EXT_CACHE_GAP\">EXT4_EXT_CACHE_GAP</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_ext_in_cache\">ext4_ext_in_cache</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_cache\">ext4_ext_cache</a> *<a class=\"id\" href=\"#cex\">cex</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#EXT4_EXT_CACHE_NO\">EXT4_EXT_CACHE_NO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We borrow i_block_reservation_lock to protect i_cached_extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cex\">cex</a> = &amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_cached_extent\">i_cached_extent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* has cache valid data? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_type\">ec_type</a> == <a class=\"id\" href=\"#EXT4_EXT_CACHE_NO\">EXT4_EXT_CACHE_NO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_type\">ec_type</a> != <a class=\"id\" href=\"#EXT4_EXT_CACHE_GAP\">EXT4_EXT_CACHE_GAP</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_type\">ec_type</a> != <a class=\"id\" href=\"#EXT4_EXT_CACHE_EXTENT\">EXT4_EXT_CACHE_EXTENT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_block\">ec_block</a>, <a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_len\">ec_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_block\">ec_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_start\">ec_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_len\">ec_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"%u cached by %u:%u:%llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_block\">ec_block</a>, <a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_len\">ec_len</a>, <a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_start\">ec_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cex\">cex</a>-><a class=\"id\" href=\"#ec_type\">ec_type</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_rm_idx:</span>", 
"<span class=\"comment\"> * removes index from the index block.</span>", 
"<span class=\"comment\"> * It's used in truncate case only, thus all requests are for</span>", 
"<span class=\"comment\"> * last index in the block only.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_ext_rm_idx\">ext4_ext_rm_idx</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#leaf\">leaf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* free index block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"path->p_hdr->eh_entries == 0\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>, -1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"index is empty, remove it, free block %llu\\n\", <a class=\"id\" href=\"#leaf\">leaf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0, <a class=\"id\" href=\"#leaf\">leaf</a>, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a> | <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_calc_credits_for_single_extent:</span>", 
"<span class=\"comment\"> * This routine returns max. credits that needed to insert an extent</span>", 
"<span class=\"comment\"> * to the extent tree.</span>", 
"<span class=\"comment\"> * When pass the actual path, the caller should calculate credits</span>", 
"<span class=\"comment\"> * under i_data_sem.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_ext_calc_credits_for_single_extent\">ext4_ext_calc_credits_for_single_extent</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#nrblocks\">nrblocks</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* probably there is space in leaf? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&lt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  There are some space in the leaf tree, no</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  need to account for leaf block credit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  bitmaps and block group descriptor blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  and other metadat blocks still need to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  accounted.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 1 bitmap, 1 block group descriptor */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 2 + <a class=\"id\" href=\"#EXT4_META_TRANS_BLOCKS\">EXT4_META_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext4_chunk_trans_blocks\">ext4_chunk_trans_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nrblocks\">nrblocks</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * How many index/leaf blocks need to change/allocate to modify nrblocks?</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * if nrblocks are fit in a single extent (chunk flag is 1), then</span>", 
"<span class=\"comment\"> * in the worse case, each tree level index/leaf need to be changed</span>", 
"<span class=\"comment\"> * if the tree split due to insert a new extent, then the old tree</span>", 
"<span class=\"comment\"> * index/leaf need to be updated too</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the nrblocks are discontiguous, they could cause</span>", 
"<span class=\"comment\"> * the whole tree split more than once, but this is really rare.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_ext_index_trans_blocks\">ext4_ext_index_trans_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#nrblocks\">nrblocks</a>, int <a class=\"id\" href=\"#chunk\">chunk</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chunk\">chunk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#depth\">depth</a> * 2;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#depth\">depth</a> * 3;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#index\">index</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_remove_blocks\">ext4_remove_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#to\">to</a>)", 
"{", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#ee_len\">ee_len</a> =  <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) || <a class=\"id\" href=\"#S_ISLNK\">S_ISLNK</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXTENTS_STATS\">EXTENTS_STATS</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_stats_lock\">s_ext_stats_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_blocks\">s_ext_blocks</a> += <a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_extents\">s_ext_extents</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ee_len\">ee_len</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_min\">s_ext_min</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_min\">s_ext_min</a> = <a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ee_len\">ee_len</a> &gt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_max\">s_ext_max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_max\">s_ext_max</a> = <a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>) &gt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_depth_max\">s_depth_max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_depth_max\">s_depth_max</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_stats_lock\">s_ext_stats_lock</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#from\">from</a> >= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#to\">to</a> == <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#ee_len\">ee_len</a> - 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* tail removal */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#ee_len\">ee_len</a> - <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>) + <a class=\"id\" href=\"#ee_len\">ee_len</a> - <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"free last %u blocks starting %llu\\n\", <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#from\">from</a> == <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>   && <a class=\"id\" href=\"#to\">to</a> <= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#ee_len\">ee_len</a> - 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"strange request: removal %u-%u from %u:%u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>), <a class=\"id\" href=\"#ee_len\">ee_len</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"strange request: removal(2) \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%u-%u from %u:%u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>), <a class=\"id\" href=\"#ee_len\">ee_len</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_ext_rm_leaf\">ext4_ext_rm_leaf</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0, <a class=\"id\" href=\"#correct_index\">correct_index</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#credits\">credits</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#uninitialized\">uninitialized</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the header must be checked already in ext4_ext_remove_space() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"truncate since %u in leaf\\n\", <a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a> = <a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"path[%d].p_hdr == NULL\", <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* find where to start removing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#EXT_LAST_EXTENT\">EXT_LAST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ex\">ex</a> >= <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> + <a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a> &gt; <a class=\"id\" href=\"#start\">start</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uninitialized\">uninitialized</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uninitialized\">uninitialized</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"remove ext %u:[%d]%d\\n\", <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#uninitialized\">uninitialized</a>, <a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> = <a class=\"id\" href=\"#ex\">ex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> &gt; <a class=\"id\" href=\"#start\">start</a> ? <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> : <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> + <a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a> - 1 &lt; <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> + <a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a> - 1 : <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"  border %u:%u\\n\", <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#a\">a</a> != <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> && <a class=\"id\" href=\"#b\">b</a> != <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> + <a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a> - 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#a\">a</a> != <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* remove tail of the extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#a\">a</a> - <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#b\">b</a> != <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> + <a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a> - 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* remove head of the extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#a\">a</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#b\">b</a> - <a class=\"id\" href=\"#a\">a</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* there is no \"make a hole\" API yet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* remove whole extent: excellent! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#a\">a</a> != <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#b\">b</a> != <a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> + <a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 3 for leaf, sb, and inode plus 2 (bmap and group</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * descriptor) for each block group; assume two block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * groups plus ex_ee_len/blocks_per_block_group for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the worst case</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#credits\">credits</a> = 7 + 2*(<a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a>/<a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ex\">ex</a> == <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#correct_index\">correct_index</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#credits\">credits</a> += (<a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>)) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#credits\">credits</a> += <a class=\"id\" href=\"#EXT4_MAXQUOTAS_TRANS_BLOCKS\">EXT4_MAXQUOTAS_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_truncate_extend_restart\">ext4_ext_truncate_extend_restart</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#credits\">credits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_remove_blocks\">ext4_remove_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this extent is removed; mark slot entirely unused */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#num\">num</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Do not mark uninitialized if all the blocks in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * extent have been removed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uninitialized\">uninitialized</a> && <a class=\"id\" href=\"#num\">num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"new extent: %u:%u:%llu\\n\", <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#num\">num</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex_ee_block\">ex_ee_block</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex_ee_len\">ex_ee_len</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#correct_index\">correct_index</a> && <a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_correct_indexes\">ext4_ext_correct_indexes</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if this leaf is free, then we should</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * remove it from index block above */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0 && <a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> == 0 && <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_bh\">p_bh</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_rm_idx\">ext4_ext_rm_idx</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_ext_more_to_rm:</span>", 
"<span class=\"comment\"> * returns 1 if current index has to be freed (even partial)</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#ext4_ext_more_to_rm\">ext4_ext_more_to_rm</a>(struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_idx\">p_idx</a> &lt; <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if truncate on deeper level happened, it wasn't partial,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we have to consider current index for truncation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>) == <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_block\">p_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_ext_remove_space\">ext4_ext_remove_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"truncate since %u\\n\", <a class=\"id\" href=\"#start\">start</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* probably first extent we're gonna free will be last in block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#depth\">depth</a> + 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_invalidate_cache\">ext4_ext_invalidate_cache</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We start scanning from right side, freeing all the blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after i_size and walking into the tree depth-wise.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a>) * (<a class=\"id\" href=\"#depth\">depth</a> + 1), <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[0].<a class=\"id\" href=\"#p_depth\">p_depth</a> = <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[0].<a class=\"id\" href=\"#p_hdr\">p_hdr</a> = <a class=\"id\" href=\"#ext_inode_hdr\">ext_inode_hdr</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_check\">ext4_ext_check</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>[0].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>, <a class=\"id\" href=\"#depth\">depth</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#i\">i</a> >= 0 && <a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#depth\">depth</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this is leaf block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_rm_leaf\">ext4_ext_rm_leaf</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* root level has p_bh == NULL, brelse() eats this */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_bh\">p_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this is index block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"initialize header\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a> = <a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this level hasn't been touched yet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a> = <a class=\"id\" href=\"#EXT_LAST_INDEX\">EXT_LAST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_block\">p_block</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>)+1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"init index ptr: hdr 0x%p, num %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we were already here, see at next index */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"level %d - index, first 0x%p, cur 0x%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_more_to_rm\">ext4_ext_more_to_rm</a>(<a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* go to the next level */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"move to level %d (block %llu)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#i\">i</a> + 1, 0, sizeof(*<a class=\"id\" href=\"#path\">path</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* should we reset i_size? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#i\">i</a> + 1 &gt; <a class=\"id\" href=\"#depth\">depth</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_check\">ext4_ext_check</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#bh\">bh</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> - <a class=\"id\" href=\"#i\">i</a> - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a> + 1].<a class=\"id\" href=\"#p_bh\">p_bh</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* save actual number of indexes since this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * number is changed at the next iteration */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_block\">p_block</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we finished processing this index, go up */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> == 0 && <a class=\"id\" href=\"#i\">i</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* index is empty, remove it;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * handle must be already prepared by the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * truncatei_leaf() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_rm_idx\">ext4_ext_rm_idx</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* root level has p_bh == NULL, brelse() eats this */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_bh\">p_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"return to level %d\\n\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TODO: flexible tree reduction should be here */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * truncate to zero freed all the tree,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * so we need to correct eh_depth</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_inode_hdr\">ext_inode_hdr</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#eh_depth\">eh_depth</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_inode_hdr\">ext_inode_hdr</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#eh_max\">eh_max</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_space_root\">ext4_ext_space_root</a>(<a class=\"id\" href=\"#inode\">inode</a>, 0));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * called at mount time</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ext4_ext_init\">ext4_ext_init</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * possible initialization would be here</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_EXTENTS\">EXT4_FEATURE_INCOMPAT_EXTENTS</a>)) {", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#AGGRESSIVE_TEST\">AGGRESSIVE_TEST</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CHECK_BINSEARCH\">CHECK_BINSEARCH</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#EXTENTS_STATS\">EXTENTS_STATS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"EXT4-fs: file extents enabled\");", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#AGGRESSIVE_TEST\">AGGRESSIVE_TEST</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\", aggressive tests\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CHECK_BINSEARCH\">CHECK_BINSEARCH</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\", check binsearch\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXTENTS_STATS\">EXTENTS_STATS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\", stats\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXTENTS_STATS\">EXTENTS_STATS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_ext_stats_lock\">s_ext_stats_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_ext_min\">s_ext_min</a> = 1 << 30;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_ext_max\">s_ext_max</a> = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * called at umount time</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ext4_ext_release\">ext4_ext_release</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_EXTENTS\">EXT4_FEATURE_INCOMPAT_EXTENTS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXTENTS_STATS\">EXTENTS_STATS</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_ext_blocks\">s_ext_blocks</a> && <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_ext_extents\">s_ext_extents</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"EXT4-fs: %lu blocks in %lu extents (%lu ave)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_blocks\">s_ext_blocks</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_extents\">s_ext_extents</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_blocks\">s_ext_blocks</a> / <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_extents\">s_ext_extents</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"EXT4-fs: extents: %lu min, %lu max, max depth %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_min\">s_ext_min</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_ext_max\">s_ext_max</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_depth_max\">s_depth_max</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bi_complete\">bi_complete</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>((struct <a class=\"id\" href=\"#completion\">completion</a> *)<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>);", 
"}", 
"", 
"<span class=\"comment\">/* FIXME!! we need to try to merge to left or right after zero-out  */</span>", 
"static int <a class=\"id\" href=\"#ext4_ext_zeroout\">ext4_ext_zeroout</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blkbits\">blkbits</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#ee_pblock\">ee_pblock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#completion\">completion</a> <a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ee_len\">ee_len</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#done\">done</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blkbits\">blkbits</a>   = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ee_len\">ee_len</a>    = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ee_pblock\">ee_pblock</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* convert ee_pblock to 512 byte sectors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ee_pblock\">ee_pblock</a> = <a class=\"id\" href=\"#ee_pblock\">ee_pblock</a> << (<a class=\"id\" href=\"#blkbits\">blkbits</a> - 9);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ee_len\">ee_len</a> &gt; 0) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ee_len\">ee_len</a> &gt; <a class=\"id\" href=\"#BIO_MAX_PAGES\">BIO_MAX_PAGES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#BIO_MAX_PAGES\">BIO_MAX_PAGES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_alloc\">bio_alloc</a>(<a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> = <a class=\"id\" href=\"#ee_pblock\">ee_pblock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>   = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#done\">done</a> &lt; <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bio_add_page\">bio_add_page</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#ZERO_PAGE\">ZERO_PAGE</a>(0),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#blocksize\">blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We can't add any more pages because of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * hardware limitations.  Start a new bio.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a> = &amp;<a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#bi_complete\">bi_complete</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#submit_bio\">submit_bio</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(&amp;<a class=\"id\" href=\"#event\">event</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#BIO_UPTODATE\">BIO_UPTODATE</a>, &amp;<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ee_len\">ee_len</a>    -= <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ee_pblock\">ee_pblock</a> += <a class=\"id\" href=\"#done\">done</a>  << (<a class=\"id\" href=\"#blkbits\">blkbits</a> - 9);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_EXT_ZERO_LEN\">EXT4_EXT_ZERO_LEN</a> 7", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is called by ext4_ext_map_blocks() if someone tries to write</span>", 
"<span class=\"comment\"> * to an uninitialized extent. It may result in splitting the uninitialized</span>", 
"<span class=\"comment\"> * extent into multiple extents (upto three - one initialized and two</span>", 
"<span class=\"comment\"> * uninitialized).</span>", 
"<span class=\"comment\"> * There are three possibilities:</span>", 
"<span class=\"comment\"> *   a&gt; There is no split required: Entire extent should be initialized</span>", 
"<span class=\"comment\"> *   b&gt; Splits in two extents: Write is happening at either end of the extent</span>", 
"<span class=\"comment\"> *   c&gt; Splits in three extents: Somone is writing in middle of the extent</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_ext_convert_to_initialized\">ext4_ext_convert_to_initialized</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> *<a class=\"id\" href=\"#map\">map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#newex\">newex</a>, <a class=\"id\" href=\"#orig_ex\">orig_ex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex1\">ex1</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex2\">ex2</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex3\">ex3</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#ee_block\">ee_block</a>, <a class=\"id\" href=\"#eof_block\">eof_block</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#allocated\">allocated</a>, <a class=\"id\" href=\"#ee_len\">ee_len</a>, <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#newblock\">newblock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#may_zeroout\">may_zeroout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"ext4_ext_convert_to_initialized: inode %lu, logical\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"block %llu, max_blocks %u\\n\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eof_block\">eof_block</a> = (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> + <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1) >>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#eof_block\">eof_block</a> &lt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eof_block\">eof_block</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#ee_len\">ee_len</a> - (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#ee_block\">ee_block</a> + <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a> = <a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ee_len\">ee_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(&amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It is safe to convert extent to initialized via explicit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * zeroout only if extent is fully insde i_size or new_size.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#may_zeroout\">may_zeroout</a> = <a class=\"id\" href=\"#ee_block\">ee_block</a> + <a class=\"id\" href=\"#ee_len\">ee_len</a> <= <a class=\"id\" href=\"#eof_block\">eof_block</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* If extent has less than 2*EXT4_EXT_ZERO_LEN zerout directly */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ee_len\">ee_len</a> <= 2*<a class=\"id\" href=\"#EXT4_EXT_ZERO_LEN\">EXT4_EXT_ZERO_LEN</a> && <a class=\"id\" href=\"#may_zeroout\">may_zeroout</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =  <a class=\"id\" href=\"#ext4_ext_zeroout\">ext4_ext_zeroout</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fix_extent_len\">fix_extent_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update the extent length and mark as initialized */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* zeroed the full extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ex1: ee_block to map-&gt;m_lblk - 1 : uninitialized */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> &gt; <a class=\"id\" href=\"#ee_block\">ee_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex1\">ex1</a> = <a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex1\">ex1</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex1\">ex1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a> = &amp;<a class=\"id\" href=\"#newex\">newex</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for sanity, update the length of the ex2 extent before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we insert ex3, if ex1 is NULL. This is to avoid temporary</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * overlap of blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ex1\">ex1</a> && <a class=\"id\" href=\"#allocated\">allocated</a> &gt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* ex3: to ee_block + ee_len : uninitialised */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#allocated\">allocated</a> &gt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#newdepth\">newdepth</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If extent has less than EXT4_EXT_ZERO_LEN zerout directly */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#allocated\">allocated</a> <= <a class=\"id\" href=\"#EXT4_EXT_ZERO_LEN\">EXT4_EXT_ZERO_LEN</a> && <a class=\"id\" href=\"#may_zeroout\">may_zeroout</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * map-&gt;m_lblk == ee_block is handled by the zerouout</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * at the beginning.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Mark first half uninitialized.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Mark second half initialized and zero out the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * initialized extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ee_len\">ee_len</a> - <a class=\"id\" href=\"#allocated\">allocated</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex3\">ex3</a> = &amp;<a class=\"id\" href=\"#newex\">newex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex3\">ex3</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex3\">ex3</a>, <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex3\">ex3</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#allocated\">allocated</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_insert_extent\">ext4_ext_insert_extent</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex3\">ex3</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =  <a class=\"id\" href=\"#ext4_ext_zeroout\">ext4_ext_zeroout</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
];
xr_frag_insert('l/d0/7a6786092cd65244fa46cf2e632531c9386b2b.xr', __xr_tmp);
