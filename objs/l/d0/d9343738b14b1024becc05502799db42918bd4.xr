var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Task I/O accounting operations</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__TASK_IO_ACCOUNTING_OPS_INCLUDED\">__TASK_IO_ACCOUNTING_OPS_INCLUDED</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__TASK_IO_ACCOUNTING_OPS_INCLUDED\">__TASK_IO_ACCOUNTING_OPS_INCLUDED</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TASK_IO_ACCOUNTING\">CONFIG_TASK_IO_ACCOUNTING</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_io_account_read\">task_io_account_read</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#ioac\">ioac</a>.<a class=\"id\" href=\"#read_bytes\">read_bytes</a> += <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We approximate number of blocks, because we account bytes only.</span>", 
"<span class=\"comment\"> * A 'block' is 512 bytes</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#task_io_get_inblock\">task_io_get_inblock</a>(const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ioac\">ioac</a>.<a class=\"id\" href=\"#read_bytes\">read_bytes</a> >> 9;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_io_account_write\">task_io_account_write</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#ioac\">ioac</a>.<a class=\"id\" href=\"#write_bytes\">write_bytes</a> += <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We approximate number of blocks, because we account bytes only.</span>", 
"<span class=\"comment\"> * A 'block' is 512 bytes</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#task_io_get_oublock\">task_io_get_oublock</a>(const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ioac\">ioac</a>.<a class=\"id\" href=\"#write_bytes\">write_bytes</a> >> 9;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_io_account_cancelled_write\">task_io_account_cancelled_write</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#ioac\">ioac</a>.<a class=\"id\" href=\"#cancelled_write_bytes\">cancelled_write_bytes</a> += <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_io_accounting_init\">task_io_accounting_init</a>(struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#ioac\">ioac</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#ioac\">ioac</a>, 0, sizeof(*<a class=\"id\" href=\"#ioac\">ioac</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_blk_io_accounting_add\">task_blk_io_accounting_add</a>(struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#read_bytes\">read_bytes</a> += <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#read_bytes\">read_bytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#write_bytes\">write_bytes</a> += <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#write_bytes\">write_bytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#cancelled_write_bytes\">cancelled_write_bytes</a> += <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#cancelled_write_bytes\">cancelled_write_bytes</a>;", 
"}", 
"", 
"#else", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_io_account_read\">task_io_account_read</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#task_io_get_inblock\">task_io_get_inblock</a>(const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_io_account_write\">task_io_account_write</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#task_io_get_oublock\">task_io_get_oublock</a>(const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_io_account_cancelled_write\">task_io_account_cancelled_write</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_io_accounting_init\">task_io_accounting_init</a>(struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#ioac\">ioac</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_blk_io_accounting_add\">task_blk_io_accounting_add</a>(struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TASK_IO_ACCOUNTING */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TASK_XACCT\">CONFIG_TASK_XACCT</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_chr_io_accounting_add\">task_chr_io_accounting_add</a>(struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#rchar\">rchar</a> += <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#rchar\">rchar</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#wchar\">wchar</a> += <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#wchar\">wchar</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#syscr\">syscr</a> += <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#syscr\">syscr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#syscw\">syscw</a> += <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#syscw\">syscw</a>;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_chr_io_accounting_add\">task_chr_io_accounting_add</a>(struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TASK_XACCT */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_io_accounting_add\">task_io_accounting_add</a>(struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_chr_io_accounting_add\">task_chr_io_accounting_add</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_blk_io_accounting_add\">task_blk_io_accounting_add</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __TASK_IO_ACCOUNTING_OPS_INCLUDED */</span>", 
];
xr_frag_insert('l/d0/d9343738b14b1024becc05502799db42918bd4.xr', __xr_tmp);
