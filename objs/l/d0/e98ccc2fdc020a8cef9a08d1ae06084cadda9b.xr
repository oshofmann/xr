var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2006 - 2007 Ivo van Doorn</span>", 
"<span class=\"comment\"> * Copyright (C) 2007 Dmitry Torokhov</span>", 
"<span class=\"comment\"> * Copyright 2009 Johannes Berg &lt;johannes@sipsolutions.net&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the</span>", 
"<span class=\"comment\"> * Free Software Foundation, Inc.,</span>", 
"<span class=\"comment\"> * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rfkill\">rfkill</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#miscdevice\">miscdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"rfkill.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POLL_INTERVAL\">POLL_INTERVAL</a><span class=\"ts\"/><span class=\"ts\"/>(5 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BIT\">BIT</a>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BIT\">BIT</a>(1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RFKILL_BLOCK_SW_PREV\">RFKILL_BLOCK_SW_PREV</a><span class=\"ts\"/><a class=\"id\" href=\"#BIT\">BIT</a>(2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RFKILL_BLOCK_ANY\">RFKILL_BLOCK_ANY</a><span class=\"ts\"/>(<a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#RFKILL_BLOCK_SW_PREV\">RFKILL_BLOCK_SW_PREV</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RFKILL_BLOCK_SW_SETCALL\">RFKILL_BLOCK_SW_SETCALL</a><span class=\"ts\"/><a class=\"id\" href=\"#BIT\">BIT</a>(31)", 
"", 
"struct <a class=\"id\" href=\"#rfkill\">rfkill</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>;", 
"", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#rfkill_type\">rfkill_type</a><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#registered\">registered</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#persistent\">persistent</a>;", 
"", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#rfkill_ops\">rfkill_ops</a><span class=\"ts\"/>*<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RFKILL_LEDS\">CONFIG_RFKILL_LEDS</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a><span class=\"ts\"/><a class=\"id\" href=\"#led_trigger\">led_trigger</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ledtrigname\">ledtrigname</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a><span class=\"ts\"/><a class=\"id\" href=\"#poll_work\">poll_work</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#uevent_work\">uevent_work</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#sync_work\">sync_work</a>;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#d\">d</a>)<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#d\">d</a>, struct <a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#dev\">dev</a>)", 
"", 
"struct <a class=\"id\" href=\"#rfkill_int_event\">rfkill_int_event</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_event\">rfkill_event</a><span class=\"ts\"/><a class=\"id\" href=\"#ev\">ev</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rfkill_data\">rfkill_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#events\">events</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtx\">mtx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#read_wait\">read_wait</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input_handler\">input_handler</a>;", 
"};", 
"", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Ivo van Doorn <IvDoorn@gmail.com>\");", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Johannes Berg <johannes@sipsolutions.net>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"RF switch support\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The locking here should be made much smarter, we currently have</span>", 
"<span class=\"comment\"> * a bit of a stupid situation because drivers might want to register</span>", 
"<span class=\"comment\"> * the rfkill struct under their own lock, and take this lock during</span>", 
"<span class=\"comment\"> * rfkill method calls -- which will cause an AB-BA deadlock situation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * To fix that, we need to rework this code here to be mostly lock-free</span>", 
"<span class=\"comment\"> * and only use the mutex for list manipulations, not to protect the</span>", 
"<span class=\"comment\"> * various other global variables. Then we can avoid holding the mutex</span>", 
"<span class=\"comment\"> * around driver operations, and all is happy.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#rfkill_list\">rfkill_list</a>);<span class=\"ts\"/><span class=\"comment\">/* list of registered rf switches */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#rfkill_fds\">rfkill_fds</a>);<span class=\"ts\"/><span class=\"comment\">/* list of open fds of /dev/rfkill */</span>", 
"", 
"static unsigned int <a class=\"id\" href=\"#rfkill_default_state\">rfkill_default_state</a> = 1;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#default_state\">default_state</a>, <a class=\"id\" href=\"#rfkill_default_state\">rfkill_default_state</a>, <a class=\"id\" href=\"#uint\">uint</a>, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#default_state\">default_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> \"Default initial state for all radio types, 0 = radio off\");", 
"", 
"static struct {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#sav\">sav</a>;", 
"} <a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>];", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rfkill_epo_lock_active\">rfkill_epo_lock_active</a>;", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RFKILL_LEDS\">CONFIG_RFKILL_LEDS</a>", 
"static void <a class=\"id\" href=\"#rfkill_led_trigger_event\">rfkill_led_trigger_event</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#led_trigger\">led_trigger</a> *<a class=\"id\" href=\"#trigger\">trigger</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#registered\">registered</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = &amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#led_trigger\">led_trigger</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_ANY\">RFKILL_BLOCK_ANY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#led_trigger_event\">led_trigger_event</a>(<a class=\"id\" href=\"#trigger\">trigger</a>, <a class=\"id\" href=\"#LED_OFF\">LED_OFF</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#led_trigger_event\">led_trigger_event</a>(<a class=\"id\" href=\"#trigger\">trigger</a>, <a class=\"id\" href=\"#LED_FULL\">LED_FULL</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_led_trigger_activate\">rfkill_led_trigger_activate</a>(struct <a class=\"id\" href=\"#led_classdev\">led_classdev</a> *<a class=\"id\" href=\"#led\">led</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#led\">led</a>-><a class=\"id\" href=\"#trigger\">trigger</a>, struct <a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#led_trigger\">led_trigger</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_led_trigger_event\">rfkill_led_trigger_event</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"}", 
"", 
"const char *<a class=\"id\" href=\"#rfkill_get_led_trigger_name\">rfkill_get_led_trigger_name</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#led_trigger\">led_trigger</a>.<a class=\"id\" href=\"#name\">name</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_get_led_trigger_name\">rfkill_get_led_trigger_name</a>);", 
"", 
"void <a class=\"id\" href=\"#rfkill_set_led_trigger_name\">rfkill_set_led_trigger_name</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ledtrigname\">ledtrigname</a> = <a class=\"id\" href=\"#name\">name</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_set_led_trigger_name\">rfkill_set_led_trigger_name</a>);", 
"", 
"static int <a class=\"id\" href=\"#rfkill_led_trigger_register\">rfkill_led_trigger_register</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#led_trigger\">led_trigger</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ledtrigname\">ledtrigname</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>? : <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#led_trigger\">led_trigger</a>.<a class=\"id\" href=\"#activate\">activate</a> = <a class=\"id\" href=\"#rfkill_led_trigger_activate\">rfkill_led_trigger_activate</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#led_trigger_register\">led_trigger_register</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#led_trigger\">led_trigger</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_led_trigger_unregister\">rfkill_led_trigger_unregister</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#led_trigger_unregister\">led_trigger_unregister</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#led_trigger\">led_trigger</a>);", 
"}", 
"#else", 
"static void <a class=\"id\" href=\"#rfkill_led_trigger_event\">rfkill_led_trigger_event</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rfkill_led_trigger_register\">rfkill_led_trigger_register</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rfkill_led_trigger_unregister\">rfkill_led_trigger_unregister</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_RFKILL_LEDS */</span>", 
"", 
"static void <a class=\"id\" href=\"#rfkill_fill_event\">rfkill_fill_event</a>(struct <a class=\"id\" href=\"#rfkill_event\">rfkill_event</a> *<a class=\"id\" href=\"#ev\">ev</a>, struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      enum <a class=\"id\" href=\"#rfkill_operation\">rfkill_operation</a> <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#op\">op</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#hard\">hard</a> = !!(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#soft\">soft</a> = !!(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; (<a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RFKILL_BLOCK_SW_PREV\">RFKILL_BLOCK_SW_PREV</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_send_events\">rfkill_send_events</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>, enum <a class=\"id\" href=\"#rfkill_operation\">rfkill_operation</a> <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_data\">rfkill_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_int_event\">rfkill_int_event</a> *<a class=\"id\" href=\"#ev\">ev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#data\">data</a>, &amp;<a class=\"id\" href=\"#rfkill_fds\">rfkill_fds</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ev\">ev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ev\">ev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ev\">ev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_fill_event\">rfkill_fill_event</a>(&amp;<a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#ev\">ev</a>, <a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#events\">events</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_event\">rfkill_event</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#registered\">registered</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_CHANGE\">KOBJ_CHANGE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* also send event to /dev/rfkill */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_send_events\">rfkill_send_events</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#RFKILL_OP_CHANGE\">RFKILL_OP_CHANGE</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#__rfkill_set_hw_state\">__rfkill_set_hw_state</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#bool\">bool</a> *<a class=\"id\" href=\"#change\">change</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#any\">any</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = !!(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocked\">blocked</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#change\">change</a> = <a class=\"id\" href=\"#prev\">prev</a> != <a class=\"id\" href=\"#blocked\">blocked</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#any\">any</a> = <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_ANY\">RFKILL_BLOCK_ANY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_led_trigger_event\">rfkill_led_trigger_event</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#any\">any</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rfkill_set_block - wrapper for set_block method</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @rfkill: the rfkill struct to use</span>", 
"<span class=\"comment\"> * @blocked: the new software state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Calls the set_block method (when applicable) and handles notifications</span>", 
"<span class=\"comment\"> * etc. as well.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#rfkill_set_block\">rfkill_set_block</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blocked\">blocked</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#power_state\">power_state</a>.<a class=\"id\" href=\"#event\">event</a> &amp; <a class=\"id\" href=\"#PM_EVENT_SLEEP\">PM_EVENT_SLEEP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some platforms (...!) generate input events which affect the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _hard_ kill state -- whenever something tries to change the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * current software state query the hardware state too.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#query\">query</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#query\">query</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#RFKILL_BLOCK_SW_PREV\">RFKILL_BLOCK_SW_PREV</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#RFKILL_BLOCK_SW_PREV\">RFKILL_BLOCK_SW_PREV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocked\">blocked</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#RFKILL_BLOCK_SW_SETCALL\">RFKILL_BLOCK_SW_SETCALL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_block\">set_block</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#blocked\">blocked</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Failed -- reset status to _prev, this may be different</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * from what set set _PREV to earlier in this function</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if rfkill_set_sw_state was invoked.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_SW_PREV\">RFKILL_BLOCK_SW_PREV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#RFKILL_BLOCK_SW_SETCALL\">RFKILL_BLOCK_SW_SETCALL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#RFKILL_BLOCK_SW_PREV\">RFKILL_BLOCK_SW_PREV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_led_trigger_event\">rfkill_led_trigger_event</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_event\">rfkill_event</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RFKILL_INPUT\">CONFIG_RFKILL_INPUT</a>", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#rfkill_input_disabled\">rfkill_input_disabled</a> = <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(0);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __rfkill_switch_all - Toggle state of all switches of given type</span>", 
"<span class=\"comment\"> * @type: type of interfaces to be affected</span>", 
"<span class=\"comment\"> * @state: the new state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function sets the state of all switches of given type,</span>", 
"<span class=\"comment\"> * unless a specific switch is claimed by userspace (in which case,</span>", 
"<span class=\"comment\"> * that switch is left alone) or suspended.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller must have acquired rfkill_global_mutex.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__rfkill_switch_all\">__rfkill_switch_all</a>(const enum <a class=\"id\" href=\"#rfkill_type\">rfkill_type</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blocked\">blocked</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#type\">type</a>].<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#blocked\">blocked</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, &amp;<a class=\"id\" href=\"#rfkill_list\">rfkill_list</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_set_block\">rfkill_set_block</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#blocked\">blocked</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rfkill_switch_all - Toggle state of all switches of given type</span>", 
"<span class=\"comment\"> * @type: type of interfaces to be affected</span>", 
"<span class=\"comment\"> * @state: the new state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Acquires rfkill_global_mutex and calls __rfkill_switch_all(@type, @state).</span>", 
"<span class=\"comment\"> * Please refer to __rfkill_switch_all() for details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Does nothing if the EPO lock is active.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rfkill_switch_all\">rfkill_switch_all</a>(enum <a class=\"id\" href=\"#rfkill_type\">rfkill_type</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blocked\">blocked</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rfkill_input_disabled\">rfkill_input_disabled</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill_epo_lock_active\">rfkill_epo_lock_active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rfkill_switch_all\">__rfkill_switch_all</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#blocked\">blocked</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rfkill_epo - emergency power off all transmitters</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This kicks all non-suspended rfkill devices to RFKILL_STATE_SOFT_BLOCKED,</span>", 
"<span class=\"comment\"> * ignoring everything in its path but rfkill_global_mutex and rfkill-&gt;mutex.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The global state before the EPO is saved and can be restored later</span>", 
"<span class=\"comment\"> * using rfkill_restore_states().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rfkill_epo\">rfkill_epo</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rfkill_input_disabled\">rfkill_input_disabled</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_epo_lock_active\">rfkill_epo_lock_active</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, &amp;<a class=\"id\" href=\"#rfkill_list\">rfkill_list</a>, <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_set_block\">rfkill_set_block</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#sav\">sav</a> = <a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rfkill_restore_states - restore global states</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Restore (and sync switches to) the global state from the</span>", 
"<span class=\"comment\"> * states in rfkill_default_states.  This can undo the effects of</span>", 
"<span class=\"comment\"> * a call to rfkill_epo().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rfkill_restore_states\">rfkill_restore_states</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rfkill_input_disabled\">rfkill_input_disabled</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_epo_lock_active\">rfkill_epo_lock_active</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rfkill_switch_all\">__rfkill_switch_all</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#sav\">sav</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rfkill_remove_epo_lock - unlock state changes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Used by rfkill-input manually unlock state changes, when</span>", 
"<span class=\"comment\"> * the EPO switch is deactivated.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rfkill_remove_epo_lock\">rfkill_remove_epo_lock</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rfkill_input_disabled\">rfkill_input_disabled</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_epo_lock_active\">rfkill_epo_lock_active</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rfkill_is_epo_lock_active - returns true EPO is active</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 (false) if there is NOT an active EPO contidion,</span>", 
"<span class=\"comment\"> * and 1 (true) if there is an active EPO contition, which</span>", 
"<span class=\"comment\"> * locks all radios in one of the BLOCKED states.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Can be called in atomic context.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rfkill_is_epo_lock_active\">rfkill_is_epo_lock_active</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rfkill_epo_lock_active\">rfkill_epo_lock_active</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rfkill_get_global_sw_state - returns global state for a type</span>", 
"<span class=\"comment\"> * @type: the type to get the global state of</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the current global state for a given wireless</span>", 
"<span class=\"comment\"> * device type.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rfkill_get_global_sw_state\">rfkill_get_global_sw_state</a>(const enum <a class=\"id\" href=\"#rfkill_type\">rfkill_type</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#type\">type</a>].<a class=\"id\" href=\"#cur\">cur</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rfkill_set_hw_state\">rfkill_set_hw_state</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blocked\">blocked</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#change\">change</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__rfkill_set_hw_state\">__rfkill_set_hw_state</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#blocked\">blocked</a>, &amp;<a class=\"id\" href=\"#change\">change</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#registered\">registered</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#change\">change</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#uevent_work\">uevent_work</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_set_hw_state\">rfkill_set_hw_state</a>);", 
"", 
"static void <a class=\"id\" href=\"#__rfkill_set_sw_state\">__rfkill_set_sw_state</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blocked\">blocked</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if in a ops-&gt;set_block right now, use other bit */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_SW_SETCALL\">RFKILL_BLOCK_SW_SETCALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#RFKILL_BLOCK_SW_PREV\">RFKILL_BLOCK_SW_PREV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocked\">blocked</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#bit\">bit</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rfkill_set_sw_state\">rfkill_set_sw_state</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blocked\">blocked</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#hwblock\">hwblock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = !!(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__rfkill_set_sw_state\">__rfkill_set_sw_state</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#blocked\">blocked</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwblock\">hwblock</a> = !!(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocked\">blocked</a> = <a class=\"id\" href=\"#blocked\">blocked</a> || <a class=\"id\" href=\"#hwblock\">hwblock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#registered\">registered</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#blocked\">blocked</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a> != <a class=\"id\" href=\"#blocked\">blocked</a> && !<a class=\"id\" href=\"#hwblock\">hwblock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#uevent_work\">uevent_work</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_led_trigger_event\">rfkill_led_trigger_event</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blocked\">blocked</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_set_sw_state\">rfkill_set_sw_state</a>);", 
"", 
"void <a class=\"id\" href=\"#rfkill_init_sw_state\">rfkill_init_sw_state</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blocked\">blocked</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#registered\">registered</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__rfkill_set_sw_state\">__rfkill_set_sw_state</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#blocked\">blocked</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#persistent\">persistent</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_init_sw_state\">rfkill_init_sw_state</a>);", 
"", 
"void <a class=\"id\" href=\"#rfkill_set_states\">rfkill_set_states</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sw\">sw</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#hw\">hw</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#swprev\">swprev</a>, <a class=\"id\" href=\"#hwprev\">hwprev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No need to care about prev/setblock ... this is for uevent only</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and that will get triggered by rfkill_set_block anyway.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swprev\">swprev</a> = !!(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwprev\">hwprev</a> = !!(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__rfkill_set_sw_state\">__rfkill_set_sw_state</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#sw\">sw</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hw\">hw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#registered\">registered</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#persistent\">persistent</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#swprev\">swprev</a> != <a class=\"id\" href=\"#sw\">sw</a> || <a class=\"id\" href=\"#hwprev\">hwprev</a> != <a class=\"id\" href=\"#hw\">hw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#uevent_work\">uevent_work</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_led_trigger_event\">rfkill_led_trigger_event</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_set_states\">rfkill_set_states</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_name_show\">rfkill_name_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%s\\n\", <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"static const char *<a class=\"id\" href=\"#rfkill_get_type_str\">rfkill_get_type_str</a>(enum <a class=\"id\" href=\"#rfkill_type\">rfkill_type</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a> != <a class=\"id\" href=\"#RFKILL_TYPE_FM\">RFKILL_TYPE_FM</a> + 1);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_TYPE_WLAN\">RFKILL_TYPE_WLAN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"wlan\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_TYPE_BLUETOOTH\">RFKILL_TYPE_BLUETOOTH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"bluetooth\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_TYPE_UWB\">RFKILL_TYPE_UWB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"ultrawideband\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_TYPE_WIMAX\">RFKILL_TYPE_WIMAX</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"wimax\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_TYPE_WWAN\">RFKILL_TYPE_WWAN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"wwan\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_TYPE_GPS\">RFKILL_TYPE_GPS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"gps\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RFKILL_TYPE_FM\">RFKILL_TYPE_FM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"fm\";", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_type_show\">rfkill_type_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%s\\n\", <a class=\"id\" href=\"#rfkill_get_type_str\">rfkill_get_type_str</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#type\">type</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_idx_show\">rfkill_idx_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#idx\">idx</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_persistent_show\">rfkill_persistent_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#persistent\">persistent</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_hard_show\">rfkill_hard_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>) ? 1 : 0 );", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_soft_show\">rfkill_soft_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>) ? 1 : 0 );", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_soft_store\">rfkill_soft_store</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0, &amp;<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &gt; 1 )", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_set_block\">rfkill_set_block</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a> ?: <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#user_state_from_blocked\">user_state_from_blocked</a>(unsigned long <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_HW\">RFKILL_BLOCK_HW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#RFKILL_USER_STATE_HARD_BLOCKED\">RFKILL_USER_STATE_HARD_BLOCKED</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#RFKILL_USER_STATE_SOFT_BLOCKED\">RFKILL_USER_STATE_SOFT_BLOCKED</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#RFKILL_USER_STATE_UNBLOCKED\">RFKILL_USER_STATE_UNBLOCKED</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_state_show\">rfkill_state_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#user_state_from_blocked\">user_state_from_blocked</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_state_store\">rfkill_state_store</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0, &amp;<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#RFKILL_USER_STATE_SOFT_BLOCKED\">RFKILL_USER_STATE_SOFT_BLOCKED</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#RFKILL_USER_STATE_UNBLOCKED\">RFKILL_USER_STATE_UNBLOCKED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_set_block\">rfkill_set_block</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#RFKILL_USER_STATE_SOFT_BLOCKED\">RFKILL_USER_STATE_SOFT_BLOCKED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a> ?: <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_claim_show\">rfkill_claim_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_claim_store\">rfkill_claim_store</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> <a class=\"id\" href=\"#rfkill_dev_attrs\">rfkill_dev_attrs</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rfkill_name_show\">rfkill_name_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rfkill_type_show\">rfkill_type_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rfkill_idx_show\">rfkill_idx_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#persistent\">persistent</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rfkill_persistent_show\">rfkill_persistent_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#rfkill_state_show\">rfkill_state_show</a>, <a class=\"id\" href=\"#rfkill_state_store\">rfkill_state_store</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#claim\">claim</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#rfkill_claim_show\">rfkill_claim_show</a>, <a class=\"id\" href=\"#rfkill_claim_store\">rfkill_claim_store</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#soft\">soft</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#rfkill_soft_show\">rfkill_soft_show</a>, <a class=\"id\" href=\"#rfkill_soft_store\">rfkill_soft_store</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#hard\">hard</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rfkill_hard_show\">rfkill_hard_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR_NULL\">__ATTR_NULL</a>", 
"};", 
"", 
"static void <a class=\"id\" href=\"#rfkill_release\">rfkill_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rfkill_dev_uevent\">rfkill_dev_uevent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a> *<a class=\"id\" href=\"#env\">env</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"RFKILL_NAME=%s\", <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"RFKILL_TYPE=%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#rfkill_get_type_str\">rfkill_get_type_str</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#type\">type</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"RFKILL_STATE=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#user_state_from_blocked\">user_state_from_blocked</a>(<a class=\"id\" href=\"#state\">state</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#rfkill_pause_polling\">rfkill_pause_polling</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll\">poll</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#poll_work\">poll_work</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_pause_polling\">rfkill_pause_polling</a>);", 
"", 
"void <a class=\"id\" href=\"#rfkill_resume_polling\">rfkill_resume_polling</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll\">poll</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#poll_work\">poll_work</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_resume_polling\">rfkill_resume_polling</a>);", 
"", 
"static int <a class=\"id\" href=\"#rfkill_suspend\">rfkill_suspend</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_pause_polling\">rfkill_pause_polling</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rfkill_resume\">rfkill_resume</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#to_rfkill\">to_rfkill</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#persistent\">persistent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = !!(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_set_block\">rfkill_set_block</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_resume_polling\">rfkill_resume_polling</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#class\">class</a> <a class=\"id\" href=\"#rfkill_class\">rfkill_class</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"rfkill\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_release\">dev_release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_release\">rfkill_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_attrs\">dev_attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_dev_attrs\">rfkill_dev_attrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_uevent\">dev_uevent</a><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_dev_uevent\">rfkill_dev_uevent</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_suspend\">rfkill_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_resume\">rfkill_resume</a>,", 
"};", 
"", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rfkill_blocked\">rfkill_blocked</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return !!(<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_ANY\">RFKILL_BLOCK_ANY</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_blocked\">rfkill_blocked</a>);", 
"", 
"", 
"struct <a class=\"id\" href=\"#rfkill\">rfkill</a> * <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#rfkill_alloc\">rfkill_alloc</a>(const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const enum <a class=\"id\" href=\"#rfkill_type\">rfkill_type</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#rfkill_ops\">rfkill_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#ops_data\">ops_data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#ops\">ops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_block\">set_block</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#RFKILL_TYPE_ALL\">RFKILL_TYPE_ALL</a> || <a class=\"id\" href=\"#type\">type</a> >= <a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#rfkill\">rfkill</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#ops_data\">ops_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> = &amp;<a class=\"id\" href=\"#rfkill_class\">rfkill_class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_initialize\">device_initialize</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_alloc\">rfkill_alloc</a>);", 
"", 
"static void <a class=\"id\" href=\"#rfkill_poll\">rfkill_poll</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#poll_work\">poll_work</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Poll hardware state -- driver will use one of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * rfkill_set{,_hw,_sw}_state functions and use its</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * return value to update the current status.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll\">poll</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#poll_work\">poll_work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#round_jiffies_relative\">round_jiffies_relative</a>(<a class=\"id\" href=\"#POLL_INTERVAL\">POLL_INTERVAL</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_uevent_work\">rfkill_uevent_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#uevent_work\">uevent_work</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_event\">rfkill_event</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rfkill_sync_work\">rfkill_sync_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#sync_work\">sync_work</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#type\">type</a>].<a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_set_block\">rfkill_set_block</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#rfkill_register\">rfkill_register</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/>static unsigned long <a class=\"id\" href=\"#rfkill_no\">rfkill_no</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#registered\">registered</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EALREADY\">EALREADY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#rfkill_no\">rfkill_no</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"rfkill%lu\", <a class=\"id\" href=\"#rfkill_no\">rfkill_no</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_no\">rfkill_no</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#rfkill_list\">rfkill_list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add\">device_add</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#remove\">remove</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#rfkill_led_trigger_register\">rfkill_led_trigger_register</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#devdel\">devdel</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#registered\">registered</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_DELAYED_WORK\">INIT_DELAYED_WORK</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#poll_work\">poll_work</a>, <a class=\"id\" href=\"#rfkill_poll\">rfkill_poll</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#uevent_work\">uevent_work</a>, <a class=\"id\" href=\"#rfkill_uevent_work\">rfkill_uevent_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#sync_work\">sync_work</a>, <a class=\"id\" href=\"#rfkill_sync_work\">rfkill_sync_work</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll\">poll</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#poll_work\">poll_work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#round_jiffies_relative\">round_jiffies_relative</a>(<a class=\"id\" href=\"#POLL_INTERVAL\">POLL_INTERVAL</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#persistent\">persistent</a> || <a class=\"id\" href=\"#rfkill_epo_lock_active\">rfkill_epo_lock_active</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#sync_work\">sync_work</a>);", 
"<span class=\"ts\"/>} else {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RFKILL_INPUT\">CONFIG_RFKILL_INPUT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#soft_blocked\">soft_blocked</a> = !!(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#RFKILL_BLOCK_SW\">RFKILL_BLOCK_SW</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rfkill_input_disabled\">rfkill_input_disabled</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rfkill_switch_all\">__rfkill_switch_all</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#soft_blocked\">soft_blocked</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_send_events\">rfkill_send_events</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#RFKILL_OP_ADD\">RFKILL_OP_ADD</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#devdel\">devdel</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
" <a class=\"id\" href=\"#remove\">remove</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#node\">node</a>);", 
" <a class=\"id\" href=\"#unlock\">unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_register\">rfkill_register</a>);", 
"", 
"void <a class=\"id\" href=\"#rfkill_unregister\">rfkill_unregister</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll\">poll</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#poll_work\">poll_work</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_work_sync\">cancel_work_sync</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#uevent_work\">uevent_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_work_sync\">cancel_work_sync</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#sync_work\">sync_work</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#registered\">registered</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_send_events\">rfkill_send_events</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#RFKILL_OP_DEL\">RFKILL_OP_DEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_led_trigger_unregister\">rfkill_led_trigger_unregister</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_unregister\">rfkill_unregister</a>);", 
"", 
"void <a class=\"id\" href=\"#rfkill_destroy\">rfkill_destroy</a>(struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rfkill_destroy\">rfkill_destroy</a>);", 
"", 
"static int <a class=\"id\" href=\"#rfkill_fop_open\">rfkill_fop_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_data\">rfkill_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_int_event\">rfkill_int_event</a> *<a class=\"id\" href=\"#ev\">ev</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#data\">data</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#events\">events</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * start getting events from elsewhere but hold mtx to get</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * startup events added first</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#rfkill_fds\">rfkill_fds</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, &amp;<a class=\"id\" href=\"#rfkill_list\">rfkill_list</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ev\">ev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ev\">ev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ev\">ev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free\">free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_fill_event\">rfkill_fill_event</a>(&amp;<a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#ev\">ev</a>, <a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#RFKILL_OP_ADD\">RFKILL_OP_ADD</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#events\">events</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nonseekable_open\">nonseekable_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"", 
" <a class=\"id\" href=\"#free\">free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_destroy\">mutex_destroy</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#ev\">ev</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#events\">events</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ev\">ev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#rfkill_fop_poll\">rfkill_fop_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_data\">rfkill_data</a> *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> | <a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_wait\">poll_wait</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#events\">events</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rfkill_readable\">rfkill_readable</a>(struct <a class=\"id\" href=\"#rfkill_data\">rfkill_data</a> *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = !<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#events\">events</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_fop_read\">rfkill_fop_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_data\">rfkill_data</a> *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_int_event\">rfkill_int_event</a> *<a class=\"id\" href=\"#ev\">ev</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sz\">sz</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#events\">events</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_event_interruptible\">wait_event_interruptible</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#rfkill_readable\">rfkill_readable</a>(<a class=\"id\" href=\"#data\">data</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ev\">ev</a> = <a class=\"id\" href=\"#list_first_entry\">list_first_entry</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#events\">events</a>, struct <a class=\"id\" href=\"#rfkill_int_event\">rfkill_int_event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sz\">sz</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned long, sizeof(<a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#ev\">ev</a>), <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sz\">sz</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#ev\">ev</a>, <a class=\"id\" href=\"#sz\">sz</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#ev\">ev</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ev\">ev</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rfkill_fop_write\">rfkill_fop_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill\">rfkill</a> *<a class=\"id\" href=\"#rfkill\">rfkill</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_event\">rfkill_event</a> <a class=\"id\" href=\"#ev\">ev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we don't need the 'hard' variable but accept it */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#RFKILL_EVENT_SIZE_V1\">RFKILL_EVENT_SIZE_V1</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Copy as much data as we can accept into our 'ev' buffer,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but tell userspace how much we've copied so it can determine</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * our API version even in a write() call, if it cares.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#count\">count</a>, sizeof(<a class=\"id\" href=\"#ev\">ev</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ev\">ev</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#RFKILL_OP_CHANGE\">RFKILL_OP_CHANGE</a> && <a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#RFKILL_OP_CHANGE_ALL\">RFKILL_OP_CHANGE_ALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#type\">type</a> >= <a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#RFKILL_OP_CHANGE_ALL\">RFKILL_OP_CHANGE_ALL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#RFKILL_TYPE_ALL\">RFKILL_TYPE_ALL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#rfkill_type\">rfkill_type</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#soft\">soft</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#type\">type</a>].<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#soft\">soft</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, &amp;<a class=\"id\" href=\"#rfkill_list\">rfkill_list</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#idx\">idx</a> != <a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#idx\">idx</a> && <a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#RFKILL_OP_CHANGE_ALL\">RFKILL_OP_CHANGE_ALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rfkill\">rfkill</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#type\">type</a> && <a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#RFKILL_TYPE_ALL\">RFKILL_TYPE_ALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_set_block\">rfkill_set_block</a>(<a class=\"id\" href=\"#rfkill\">rfkill</a>, <a class=\"id\" href=\"#ev\">ev</a>.<a class=\"id\" href=\"#soft\">soft</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rfkill_fop_release\">rfkill_fop_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_data\">rfkill_data</a> *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_int_event\">rfkill_int_event</a> *<a class=\"id\" href=\"#ev\">ev</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rfkill_global_mutex\">rfkill_global_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_destroy\">mutex_destroy</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#ev\">ev</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#events\">events</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ev\">ev</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RFKILL_INPUT\">CONFIG_RFKILL_INPUT</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#input_handler\">input_handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_return\">atomic_dec_return</a>(&amp;<a class=\"id\" href=\"#rfkill_input_disabled\">rfkill_input_disabled</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"rfkill: input handler enabled\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RFKILL_INPUT\">CONFIG_RFKILL_INPUT</a>", 
"static long <a class=\"id\" href=\"#rfkill_fop_ioctl\">rfkill_fop_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rfkill_data\">rfkill_data</a> *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_IOC_TYPE\">_IOC_TYPE</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) != <a class=\"id\" href=\"#RFKILL_IOC_MAGIC\">RFKILL_IOC_MAGIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) != <a class=\"id\" href=\"#RFKILL_IOC_NOINPUT\">RFKILL_IOC_NOINPUT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#input_handler\">input_handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_inc_return\">atomic_inc_return</a>(&amp;<a class=\"id\" href=\"#rfkill_input_disabled\">rfkill_input_disabled</a>) == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"rfkill: input handler disabled\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#input_handler\">input_handler</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mtx\">mtx</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#rfkill_fops\">rfkill_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_fop_open\">rfkill_fop_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_fop_read\">rfkill_fop_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_fop_write\">rfkill_fop_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_fop_poll\">rfkill_fop_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_fop_release\">rfkill_fop_release</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RFKILL_INPUT\">CONFIG_RFKILL_INPUT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_fop_ioctl\">rfkill_fop_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#rfkill_fop_ioctl\">rfkill_fop_ioctl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#miscdevice\">miscdevice</a> <a class=\"id\" href=\"#rfkill_miscdev\">rfkill_miscdev</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"rfkill\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fops\">fops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#rfkill_fops\">rfkill_fops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#minor\">minor</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MISC_DYNAMIC_MINOR\">MISC_DYNAMIC_MINOR</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#rfkill_init\">rfkill_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_RFKILL_TYPES\">NUM_RFKILL_TYPES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfkill_global_states\">rfkill_global_states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#cur\">cur</a> = !<a class=\"id\" href=\"#rfkill_default_state\">rfkill_default_state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#class_register\">class_register</a>(&amp;<a class=\"id\" href=\"#rfkill_class\">rfkill_class</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#misc_register\">misc_register</a>(&amp;<a class=\"id\" href=\"#rfkill_miscdev\">rfkill_miscdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class_unregister\">class_unregister</a>(&amp;<a class=\"id\" href=\"#rfkill_class\">rfkill_class</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RFKILL_INPUT\">CONFIG_RFKILL_INPUT</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#rfkill_handler_init\">rfkill_handler_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#misc_deregister\">misc_deregister</a>(&amp;<a class=\"id\" href=\"#rfkill_miscdev\">rfkill_miscdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class_unregister\">class_unregister</a>(&amp;<a class=\"id\" href=\"#rfkill_class\">rfkill_class</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#rfkill_init\">rfkill_init</a>);", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#rfkill_exit\">rfkill_exit</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RFKILL_INPUT\">CONFIG_RFKILL_INPUT</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rfkill_handler_exit\">rfkill_handler_exit</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#misc_deregister\">misc_deregister</a>(&amp;<a class=\"id\" href=\"#rfkill_miscdev\">rfkill_miscdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_unregister\">class_unregister</a>(&amp;<a class=\"id\" href=\"#rfkill_class\">rfkill_class</a>);", 
"}", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#rfkill_exit\">rfkill_exit</a>);", 
];
xr_frag_insert('l/d0/e98ccc2fdc020a8cef9a08d1ae06084cadda9b.xr', __xr_tmp);
