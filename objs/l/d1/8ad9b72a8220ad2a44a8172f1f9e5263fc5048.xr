var __xr_tmp = [
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: evsci - System Control Interrupt configuration and</span>", 
"<span class=\"comment\"> *                      legacy to ACPI mode state transition functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acevents.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_EVENTS\">ACPI_EVENTS</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"evsci\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ACPI_SYSTEM_XFACE\">ACPI_SYSTEM_XFACE</a> <a class=\"id\" href=\"#acpi_ev_sci_xrupt_handler\">acpi_ev_sci_xrupt_handler</a>(void *<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ev_sci_xrupt_handler</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Context   - Calling Context</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status code indicates whether interrupt was handled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Interrupt handler that will figure out what function or</span>", 
"<span class=\"comment\"> *              control method to call to deal with a SCI.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ACPI_SYSTEM_XFACE\">ACPI_SYSTEM_XFACE</a> <a class=\"id\" href=\"#acpi_ev_sci_xrupt_handler\">acpi_ev_sci_xrupt_handler</a>(void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_gpe_xrupt_info\">acpi_gpe_xrupt_info</a> *<a class=\"id\" href=\"#gpe_xrupt_list\">gpe_xrupt_list</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#interrupt_handled\">interrupt_handled</a> = <a class=\"id\" href=\"#ACPI_INTERRUPT_NOT_HANDLED\">ACPI_INTERRUPT_NOT_HANDLED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ev_sci_xrupt_handler\">ev_sci_xrupt_handler</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We are guaranteed by the ACPI CA initialization/shutdown code that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if this interrupt handler is installed, ACPI is enabled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fixed Events:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check for and dispatch any Fixed Events that have occurred</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#interrupt_handled\">interrupt_handled</a> |= <a class=\"id\" href=\"#acpi_ev_fixed_event_detect\">acpi_ev_fixed_event_detect</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * General Purpose Events:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check for and dispatch any GPEs that have occurred</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#interrupt_handled\">interrupt_handled</a> |= <a class=\"id\" href=\"#acpi_ev_gpe_detect\">acpi_ev_gpe_detect</a>(<a class=\"id\" href=\"#gpe_xrupt_list\">gpe_xrupt_list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_UINT32\">return_UINT32</a>(<a class=\"id\" href=\"#interrupt_handled\">interrupt_handled</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ev_gpe_xrupt_handler</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Context   - Calling Context</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status code indicates whether interrupt was handled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Handler for GPE Block Device interrupts</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ACPI_SYSTEM_XFACE\">ACPI_SYSTEM_XFACE</a> <a class=\"id\" href=\"#acpi_ev_gpe_xrupt_handler\">acpi_ev_gpe_xrupt_handler</a>(void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_gpe_xrupt_info\">acpi_gpe_xrupt_info</a> *<a class=\"id\" href=\"#gpe_xrupt_list\">gpe_xrupt_list</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#interrupt_handled\">interrupt_handled</a> = <a class=\"id\" href=\"#ACPI_INTERRUPT_NOT_HANDLED\">ACPI_INTERRUPT_NOT_HANDLED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ev_gpe_xrupt_handler\">ev_gpe_xrupt_handler</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We are guaranteed by the ACPI CA initialization/shutdown code that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if this interrupt handler is installed, ACPI is enabled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* GPEs: Check for and dispatch any GPEs that have occurred */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#interrupt_handled\">interrupt_handled</a> |= <a class=\"id\" href=\"#acpi_ev_gpe_detect\">acpi_ev_gpe_detect</a>(<a class=\"id\" href=\"#gpe_xrupt_list\">gpe_xrupt_list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_UINT32\">return_UINT32</a>(<a class=\"id\" href=\"#interrupt_handled\">interrupt_handled</a>);", 
"}", 
"", 
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ev_install_sci_handler</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  none</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Installs SCI handler.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#acpi_ev_install_sci_handler\">acpi_ev_install_sci_handler</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ev_install_sci_handler\">ev_install_sci_handler</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_os_install_interrupt_handler\">acpi_os_install_interrupt_handler</a>((<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#sci_interrupt\">sci_interrupt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_ev_sci_xrupt_handler\">acpi_ev_sci_xrupt_handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_gbl_gpe_xrupt_list_head\">acpi_gbl_gpe_xrupt_list_head</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ev_remove_sci_handler</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  none</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      E_OK if handler uninstalled OK, E_ERROR if handler was not</span>", 
"<span class=\"comment\"> *              installed to begin with</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Remove the SCI interrupt handler. No further SCIs will be</span>", 
"<span class=\"comment\"> *              taken.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note:  It doesn't seem important to disable all events or set the event</span>", 
"<span class=\"comment\"> *        enable registers to their original values. The OS should disable</span>", 
"<span class=\"comment\"> *        the SCI interrupt level when the handler is removed, so no more</span>", 
"<span class=\"comment\"> *        events will come in.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ev_remove_sci_handler\">acpi_ev_remove_sci_handler</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ev_remove_sci_handler\">ev_remove_sci_handler</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Just let the OS remove the handler and disable the level */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_os_remove_interrupt_handler\">acpi_os_remove_interrupt_handler</a>((<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#sci_interrupt\">sci_interrupt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#acpi_ev_sci_xrupt_handler\">acpi_ev_sci_xrupt_handler</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
];
xr_frag_insert('l/d1/8ad9b72a8220ad2a44a8172f1f9e5263fc5048.xr', __xr_tmp);
