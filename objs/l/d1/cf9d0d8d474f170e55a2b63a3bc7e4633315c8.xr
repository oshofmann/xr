var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * File:<span class=\"ts\"/>pcieport_if.h</span>", 
"<span class=\"comment\"> * Purpose:<span class=\"ts\"/>PCI Express Port Bus Driver's IF Data Structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 Intel</span>", 
"<span class=\"comment\"> * Copyright (C) Tom Long Nguyen (tom.l.nguyen@intel.com)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_PCIEPORT_IF_H_\">_PCIEPORT_IF_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_PCIEPORT_IF_H_\">_PCIEPORT_IF_H_</a>", 
"", 
"<span class=\"comment\">/* Port Type */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIE_ANY_PORT\">PCIE_ANY_PORT</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(~0)", 
"", 
"<span class=\"comment\">/* Service Type */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME_SHIFT\">PCIE_PORT_SERVICE_PME_SHIFT</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* Power Management Event */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME\">PCIE_PORT_SERVICE_PME</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME_SHIFT\">PCIE_PORT_SERVICE_PME_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIE_PORT_SERVICE_AER_SHIFT\">PCIE_PORT_SERVICE_AER_SHIFT</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* Advanced Error Reporting */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIE_PORT_SERVICE_AER\">PCIE_PORT_SERVICE_AER</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#PCIE_PORT_SERVICE_AER_SHIFT\">PCIE_PORT_SERVICE_AER_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP_SHIFT\">PCIE_PORT_SERVICE_HP_SHIFT</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* Native Hotplug */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP\">PCIE_PORT_SERVICE_HP</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP_SHIFT\">PCIE_PORT_SERVICE_HP_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIE_PORT_SERVICE_VC_SHIFT\">PCIE_PORT_SERVICE_VC_SHIFT</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* Virtual Channel */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIE_PORT_SERVICE_VC\">PCIE_PORT_SERVICE_VC</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#PCIE_PORT_SERVICE_VC_SHIFT\">PCIE_PORT_SERVICE_VC_SHIFT</a>)", 
"", 
"struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> {", 
"<span class=\"ts\"/>int <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a>;<span class=\"ts\"/>    <span class=\"comment\">/* Service IRQ/MSI/MSI-X Vector */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#port\">port</a>;<span class=\"ts\"/>    <span class=\"comment\">/* Root/Upstream/Downstream Port */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#service\">service</a>;    <span class=\"comment\">/* Port service this device represents */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#priv_data\">priv_data</a>; <span class=\"comment\">/* Service Private Data */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>;     <span class=\"comment\">/* Generic Device Interface */</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_pcie_device\">to_pcie_device</a>(<a class=\"id\" href=\"#d\">d</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#d\">d</a>, struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a>, <a class=\"id\" href=\"#device\">device</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_service_data\">set_service_data</a>(struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#priv_data\">priv_data</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void* <a class=\"id\" href=\"#get_service_data\">get_service_data</a>(struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#priv_data\">priv_data</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pcie_port_service_driver\">pcie_port_service_driver</a> {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#probe\">probe</a>) (struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#remove\">remove</a>) (struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#suspend\">suspend</a>) (struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#resume\">resume</a>) (struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Service Error Recovery Handler */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_error_handlers\">pci_error_handlers</a> *<a class=\"id\" href=\"#err_handler\">err_handler</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Link Reset Capability - AER service driver specific */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a> (*<a class=\"id\" href=\"#reset_link\">reset_link</a>) (struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#port_type\">port_type</a>;  <span class=\"comment\">/* Type of the port this driver can handle */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#service\">service</a>;    <span class=\"comment\">/* Port service this device represents */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> <a class=\"id\" href=\"#driver\">driver</a>;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_service_driver\">to_service_driver</a>(<a class=\"id\" href=\"#d\">d</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#d\">d</a>, struct <a class=\"id\" href=\"#pcie_port_service_driver\">pcie_port_service_driver</a>, <a class=\"id\" href=\"#driver\">driver</a>)", 
"", 
"extern int <a class=\"id\" href=\"#pcie_port_service_register\">pcie_port_service_register</a>(struct <a class=\"id\" href=\"#pcie_port_service_driver\">pcie_port_service_driver</a> *<a class=\"id\" href=\"#new\">new</a>);", 
"extern void <a class=\"id\" href=\"#pcie_port_service_unregister\">pcie_port_service_unregister</a>(struct <a class=\"id\" href=\"#pcie_port_service_driver\">pcie_port_service_driver</a> *<a class=\"id\" href=\"#new\">new</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _PCIEPORT_IF_H_ */</span>", 
];
xr_frag_insert('l/d1/cf9d0d8d474f170e55a2b63a3bc7e4633315c8.xr', __xr_tmp);
