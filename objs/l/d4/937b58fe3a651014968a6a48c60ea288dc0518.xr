var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mutexes: blocking mutual exclusion locks</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * started by Ingo Molnar:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2004, 2005, 2006 Red Hat, Inc., Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file contains mutex debugging related internal prototypes, for the</span>", 
"<span class=\"comment\"> * !CONFIG_DEBUG_MUTEXES case. Most of them are NOPs:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#spin_lock_mutex\">spin_lock_mutex</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/>do { <a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>); (void)(<a class=\"id\" href=\"#flags\">flags</a>); } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#spin_unlock_mutex\">spin_unlock_mutex</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/>do { <a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>); (void)(<a class=\"id\" href=\"#flags\">flags</a>); } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#mutex_remove_waiter\">mutex_remove_waiter</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#waiter\">waiter</a>, <a class=\"id\" href=\"#ti\">ti</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__list_del\">__list_del</a>((<a class=\"id\" href=\"#waiter\">waiter</a>)-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#prev\">prev</a>, (<a class=\"id\" href=\"#waiter\">waiter</a>)-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mutex_set_owner\">mutex_set_owner</a>(struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>-><a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mutex_clear_owner\">mutex_clear_owner</a>(struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>-><a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mutex_set_owner\">mutex_set_owner</a>(struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mutex_clear_owner\">mutex_clear_owner</a>(struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#debug_mutex_wake_waiter\">debug_mutex_wake_waiter</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#waiter\">waiter</a>)<span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#debug_mutex_free_waiter\">debug_mutex_free_waiter</a>(<a class=\"id\" href=\"#waiter\">waiter</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#debug_mutex_add_waiter\">debug_mutex_add_waiter</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#waiter\">waiter</a>, <a class=\"id\" href=\"#ti\">ti</a>)<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#debug_mutex_unlock\">debug_mutex_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#debug_mutex_init\">debug_mutex_init</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#key\">key</a>)<span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#debug_mutex_lock_common\">debug_mutex_lock_common</a>(struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>, struct <a class=\"id\" href=\"#mutex_waiter\">mutex_waiter</a> *<a class=\"id\" href=\"#waiter\">waiter</a>)", 
"{", 
"}", 
];
xr_frag_insert('l/d4/937b58fe3a651014968a6a48c60ea288dc0518.xr', __xr_tmp);
