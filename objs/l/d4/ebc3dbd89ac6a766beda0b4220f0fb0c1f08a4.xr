var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>mm/mremap.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(C) Copyright 1996 Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Address space accounting code<span class=\"ts\"/>&lt;alan@lxorguk.ukuu.org.uk&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(C) Copyright 2002 Red Hat Inc, All Rights Reserved</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hugetlb\">hugetlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#shm\">shm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ksm\">ksm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mman\">mman</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmu_notifier\">mmu_notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cacheflush\">cacheflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"static <a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#get_old_pmd\">get_old_pmd</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset\">pgd_offset</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pgd_none_or_clear_bad\">pgd_none_or_clear_bad</a>(<a class=\"id\" href=\"#pgd\">pgd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_none_or_clear_bad\">pud_none_or_clear_bad</a>(<a class=\"id\" href=\"#pud\">pud</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_none_or_clear_bad\">pmd_none_or_clear_bad</a>(<a class=\"id\" href=\"#pmd\">pmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pmd\">pmd</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#alloc_new_pmd\">alloc_new_pmd</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset\">pgd_offset</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_alloc\">pud_alloc</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pud\">pud</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_alloc\">pmd_alloc</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmd\">pmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmd_present\">pmd_present</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>) && <a class=\"id\" href=\"#__pte_alloc\">__pte_alloc</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pmd\">pmd</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#move_ptes\">move_ptes</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#old_pmd\">old_pmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_addr\">old_addr</a>, unsigned long <a class=\"id\" href=\"#old_end\">old_end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#new_vma\">new_vma</a>, <a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#new_pmd\">new_pmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#new_addr\">new_addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#old_pte\">old_pte</a>, *<a class=\"id\" href=\"#new_pte\">new_pte</a>, <a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#old_ptl\">old_ptl</a>, *<a class=\"id\" href=\"#new_ptl\">new_ptl</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_start\">old_start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_start\">old_start</a> = <a class=\"id\" href=\"#old_addr\">old_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmu_notifier_invalidate_range_start\">mmu_notifier_invalidate_range_start</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old_start\">old_start</a>, <a class=\"id\" href=\"#old_end\">old_end</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Subtle point from Rajesh Venkatasubramanian: before</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * moving file-based ptes, we must lock truncate_pagecache</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * out, since it might clean the dst vma before the src vma,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and we propagate stale pages into the dst afterward.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#i_mmap_lock\">i_mmap_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_vma\">new_vma</a>-><a class=\"id\" href=\"#vm_truncate_count\">vm_truncate_count</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#new_vma\">new_vma</a>-><a class=\"id\" href=\"#vm_truncate_count\">vm_truncate_count</a> != <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_truncate_count\">vm_truncate_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_vma\">new_vma</a>-><a class=\"id\" href=\"#vm_truncate_count\">vm_truncate_count</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We don't have to worry about the ordering of src and dst</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pte locks because exclusive mmap_sem prevents deadlock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_pte\">old_pte</a> = <a class=\"id\" href=\"#pte_offset_map_lock\">pte_offset_map_lock</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#old_pmd\">old_pmd</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>, &amp;<a class=\"id\" href=\"#old_ptl\">old_ptl</a>);", 
" <span class=\"ts\"/><a class=\"id\" href=\"#new_pte\">new_pte</a> = <a class=\"id\" href=\"#pte_offset_map_nested\">pte_offset_map_nested</a>(<a class=\"id\" href=\"#new_pmd\">new_pmd</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_ptl\">new_ptl</a> = <a class=\"id\" href=\"#pte_lockptr\">pte_lockptr</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#new_pmd\">new_pmd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_ptl\">new_ptl</a> != <a class=\"id\" href=\"#old_ptl\">old_ptl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_nested\">spin_lock_nested</a>(<a class=\"id\" href=\"#new_ptl\">new_ptl</a>, <a class=\"id\" href=\"#SINGLE_DEPTH_NESTING\">SINGLE_DEPTH_NESTING</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_enter_lazy_mmu_mode\">arch_enter_lazy_mmu_mode</a>();", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#old_addr\">old_addr</a> &lt; <a class=\"id\" href=\"#old_end\">old_end</a>; <a class=\"id\" href=\"#old_pte\">old_pte</a>++, <a class=\"id\" href=\"#old_addr\">old_addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#new_pte\">new_pte</a>++, <a class=\"id\" href=\"#new_addr\">new_addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_none\">pte_none</a>(*<a class=\"id\" href=\"#old_pte\">old_pte</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#ptep_clear_flush\">ptep_clear_flush</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>, <a class=\"id\" href=\"#old_pte\">old_pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#move_pte\">move_pte</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#new_vma\">new_vma</a>-><a class=\"id\" href=\"#vm_page_prot\">vm_page_prot</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pte_at\">set_pte_at</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a>, <a class=\"id\" href=\"#new_pte\">new_pte</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_leave_lazy_mmu_mode\">arch_leave_lazy_mmu_mode</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_ptl\">new_ptl</a> != <a class=\"id\" href=\"#old_ptl\">old_ptl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#new_ptl\">new_ptl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_unmap_nested\">pte_unmap_nested</a>(<a class=\"id\" href=\"#new_pte\">new_pte</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_unmap_unlock\">pte_unmap_unlock</a>(<a class=\"id\" href=\"#old_pte\">old_pte</a> - 1, <a class=\"id\" href=\"#old_ptl\">old_ptl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mapping\">mapping</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#i_mmap_lock\">i_mmap_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmu_notifier_invalidate_range_end\">mmu_notifier_invalidate_range_end</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>, <a class=\"id\" href=\"#old_start\">old_start</a>, <a class=\"id\" href=\"#old_end\">old_end</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LATENCY_LIMIT\">LATENCY_LIMIT</a><span class=\"ts\"/>(64 * <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"", 
"unsigned long <a class=\"id\" href=\"#move_page_tables\">move_page_tables</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_addr\">old_addr</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#new_vma\">new_vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#new_addr\">new_addr</a>, unsigned long <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#extent\">extent</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#old_end\">old_end</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#old_pmd\">old_pmd</a>, *<a class=\"id\" href=\"#new_pmd\">new_pmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_end\">old_end</a> = <a class=\"id\" href=\"#old_addr\">old_addr</a> + <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_cache_range\">flush_cache_range</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>, <a class=\"id\" href=\"#old_end\">old_end</a>);", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#old_addr\">old_addr</a> &lt; <a class=\"id\" href=\"#old_end\">old_end</a>; <a class=\"id\" href=\"#old_addr\">old_addr</a> += <a class=\"id\" href=\"#extent\">extent</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a> += <a class=\"id\" href=\"#extent\">extent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = (<a class=\"id\" href=\"#old_addr\">old_addr</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>) &amp; <a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#next\">next</a> - 1 &gt; <a class=\"id\" href=\"#old_end\">old_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#old_end\">old_end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extent\">extent</a> = <a class=\"id\" href=\"#next\">next</a> - <a class=\"id\" href=\"#old_addr\">old_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_pmd\">old_pmd</a> = <a class=\"id\" href=\"#get_old_pmd\">get_old_pmd</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#old_pmd\">old_pmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_pmd\">new_pmd</a> = <a class=\"id\" href=\"#alloc_new_pmd\">alloc_new_pmd</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_pmd\">new_pmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = (<a class=\"id\" href=\"#new_addr\">new_addr</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>) &amp; <a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#extent\">extent</a> &gt; <a class=\"id\" href=\"#next\">next</a> - <a class=\"id\" href=\"#new_addr\">new_addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extent\">extent</a> = <a class=\"id\" href=\"#next\">next</a> - <a class=\"id\" href=\"#new_addr\">new_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#extent\">extent</a> &gt; <a class=\"id\" href=\"#LATENCY_LIMIT\">LATENCY_LIMIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extent\">extent</a> = <a class=\"id\" href=\"#LATENCY_LIMIT\">LATENCY_LIMIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#move_ptes\">move_ptes</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#old_pmd\">old_pmd</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a> + <a class=\"id\" href=\"#extent\">extent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_vma\">new_vma</a>, <a class=\"id\" href=\"#new_pmd\">new_pmd</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#old_addr\">old_addr</a> - <a class=\"id\" href=\"#old_end\">old_end</a>;<span class=\"ts\"/><span class=\"comment\">/* how much done */</span>", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#move_vma\">move_vma</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_addr\">old_addr</a>, unsigned long <a class=\"id\" href=\"#old_len\">old_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#new_len\">new_len</a>, unsigned long <a class=\"id\" href=\"#new_addr\">new_addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#new_vma\">new_vma</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vm_flags\">vm_flags</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#new_pgoff\">new_pgoff</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#moved_len\">moved_len</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#excess\">excess</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#split\">split</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We'd prefer to avoid failure later on in do_munmap:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which may split one vma into three before unmapping.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#map_count\">map_count</a> >= <a class=\"id\" href=\"#sysctl_max_map_count\">sysctl_max_map_count</a> - 3)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Advise KSM to break any KSM pages in the area to be moved:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it would be confusing if they were to turn up at the new</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * location, where they happen to coincide with different KSM</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pages recently unmapped.  But leave vma-&gt;vm_flags as it was,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so KSM can come around to merge on vma and new_vma afterwards.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ksm_madvise\">ksm_madvise</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a> + <a class=\"id\" href=\"#old_len\">old_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MADV_UNMERGEABLE\">MADV_UNMERGEABLE</a>, &amp;<a class=\"id\" href=\"#vm_flags\">vm_flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_pgoff\">new_pgoff</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a> + ((<a class=\"id\" href=\"#old_addr\">old_addr</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_vma\">new_vma</a> = <a class=\"id\" href=\"#copy_vma\">copy_vma</a>(&amp;<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a>, <a class=\"id\" href=\"#new_len\">new_len</a>, <a class=\"id\" href=\"#new_pgoff\">new_pgoff</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_vma\">new_vma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#moved_len\">moved_len</a> = <a class=\"id\" href=\"#move_page_tables\">move_page_tables</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>, <a class=\"id\" href=\"#new_vma\">new_vma</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a>, <a class=\"id\" href=\"#old_len\">old_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#moved_len\">moved_len</a> &lt; <a class=\"id\" href=\"#old_len\">old_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * On error, move entries back from new area to old,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * which will succeed since page tables still there,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and then proceed to unmap new area instead of old.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#move_page_tables\">move_page_tables</a>(<a class=\"id\" href=\"#new_vma\">new_vma</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a>, <a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>, <a class=\"id\" href=\"#moved_len\">moved_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#new_vma\">new_vma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_len\">old_len</a> = <a class=\"id\" href=\"#new_len\">new_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_addr\">old_addr</a> = <a class=\"id\" href=\"#new_addr\">new_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_addr\">new_addr</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Conceal VM_ACCOUNT so old reservation is not undone */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_ACCOUNT\">VM_ACCOUNT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &= ~<a class=\"id\" href=\"#VM_ACCOUNT\">VM_ACCOUNT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#excess\">excess</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> - <a class=\"id\" href=\"#old_len\">old_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_addr\">old_addr</a> &gt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old_addr\">old_addr</a> + <a class=\"id\" href=\"#old_len\">old_len</a> &lt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#split\">split</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we failed to move page tables we still do total_vm increment</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since do_munmap() will decrement it by old_len == new_len.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Since total_vm is about to be raised artificially high for a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * moment, we need to restore high watermark afterwards: if stats</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are taken meanwhile, total_vm and hiwater_vm appear too high.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this were a serious issue, we'd add a flag to do_munmap().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#total_vm\">total_vm</a> += <a class=\"id\" href=\"#new_len\">new_len</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vm_stat_account\">vm_stat_account</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>, <a class=\"id\" href=\"#new_len\">new_len</a>>><a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#do_munmap\">do_munmap</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#old_addr\">old_addr</a>, <a class=\"id\" href=\"#old_len\">old_len</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* OOM: unable to split vma, just get accounts right */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vm_unacct_memory\">vm_unacct_memory</a>(<a class=\"id\" href=\"#excess\">excess</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#excess\">excess</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a> = <a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Restore VM_ACCOUNT if one or two pieces of vma left */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#excess\">excess</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> |= <a class=\"id\" href=\"#VM_ACCOUNT\">VM_ACCOUNT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#split\">split</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> |= <a class=\"id\" href=\"#VM_ACCOUNT\">VM_ACCOUNT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_LOCKED\">VM_LOCKED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#locked_vm\">locked_vm</a> += <a class=\"id\" href=\"#new_len\">new_len</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_len\">new_len</a> &gt; <a class=\"id\" href=\"#old_len\">old_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mlock_vma_pages_range\">mlock_vma_pages_range</a>(<a class=\"id\" href=\"#new_vma\">new_vma</a>, <a class=\"id\" href=\"#new_addr\">new_addr</a> + <a class=\"id\" href=\"#old_len\">old_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#new_addr\">new_addr</a> + <a class=\"id\" href=\"#new_len\">new_len</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#new_addr\">new_addr</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma_to_resize\">vma_to_resize</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_len\">old_len</a>, unsigned long <a class=\"id\" href=\"#new_len\">new_len</a>, unsigned long *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma\">vma</a> || <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> &gt; <a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Efault\">Efault</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_vm_hugetlb_page\">is_vm_hugetlb_page</a>(<a class=\"id\" href=\"#vma\">vma</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Einval\">Einval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can't remap across vm area boundaries */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_len\">old_len</a> &gt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Efault\">Efault</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; (<a class=\"id\" href=\"#VM_DONTEXPAND\">VM_DONTEXPAND</a> | <a class=\"id\" href=\"#VM_PFNMAP\">VM_PFNMAP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_len\">new_len</a> &gt; <a class=\"id\" href=\"#old_len\">old_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Efault\">Efault</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_LOCKED\">VM_LOCKED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#locked\">locked</a>, <a class=\"id\" href=\"#lock_limit\">lock_limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#locked\">locked</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#locked_vm\">locked_vm</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_limit\">lock_limit</a> = <a class=\"id\" href=\"#rlimit\">rlimit</a>(<a class=\"id\" href=\"#RLIMIT_MEMLOCK\">RLIMIT_MEMLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#locked\">locked</a> += <a class=\"id\" href=\"#new_len\">new_len</a> - <a class=\"id\" href=\"#old_len\">old_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#locked\">locked</a> &gt; <a class=\"id\" href=\"#lock_limit\">lock_limit</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_IPC_LOCK\">CAP_IPC_LOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Eagain\">Eagain</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#may_expand_vm\">may_expand_vm</a>(<a class=\"id\" href=\"#mm\">mm</a>, (<a class=\"id\" href=\"#new_len\">new_len</a> - <a class=\"id\" href=\"#old_len\">old_len</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Enomem\">Enomem</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_ACCOUNT\">VM_ACCOUNT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#charged\">charged</a> = (<a class=\"id\" href=\"#new_len\">new_len</a> - <a class=\"id\" href=\"#old_len\">old_len</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#security_vm_enough_memory\">security_vm_enough_memory</a>(<a class=\"id\" href=\"#charged\">charged</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Efault\">Efault</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#charged\">charged</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<a class=\"id\" href=\"#Efault\">Efault</a>:<span class=\"ts\"/><span class=\"comment\">/* very odd choice for most of the cases, but... */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EFAULT\">EFAULT</a>);", 
"<a class=\"id\" href=\"#Einval\">Einval</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<a class=\"id\" href=\"#Enomem\">Enomem</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<a class=\"id\" href=\"#Eagain\">Eagain</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>);", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#mremap_to\">mremap_to</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_len\">old_len</a>, unsigned long <a class=\"id\" href=\"#new_addr\">new_addr</a>,", 
];
xr_frag_insert('l/d4/ebc3dbd89ac6a766beda0b4220f0fb0c1f08a4.xr', __xr_tmp);
