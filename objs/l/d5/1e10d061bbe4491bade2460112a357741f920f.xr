var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mm/thrash.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2004, Red Hat, Inc.</span>", 
"<span class=\"comment\"> * Copyright (C) 2004, Rik van Riel &lt;riel@redhat.com&gt;</span>", 
"<span class=\"comment\"> * Released under the GPL, see the file COPYING for details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Simple token based thrashing protection, using the algorithm</span>", 
"<span class=\"comment\"> * described in:  http://www.cs.wm.edu/~sjiang/token.pdf</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Sep 2006, Ashwin Chaugule &lt;ashwin.chaugule@celunite.com&gt;</span>", 
"<span class=\"comment\"> * Improved algorithm to pass token:</span>", 
"<span class=\"comment\"> * Each task has a priority which is incremented if it contended</span>", 
"<span class=\"comment\"> * for the token in an interval less than its previous attempt.</span>", 
"<span class=\"comment\"> * If the token is acquired, that task's priority is boosted to prevent</span>", 
"<span class=\"comment\"> * the token from bouncing around too often and to let the task make</span>", 
"<span class=\"comment\"> * some progress in its execution.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#swap_token_lock\">swap_token_lock</a>);", 
"struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a>;", 
"static unsigned int <a class=\"id\" href=\"#global_faults\">global_faults</a>;", 
"", 
"void <a class=\"id\" href=\"#grab_swap_token\">grab_swap_token</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#current_interval\">current_interval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#global_faults\">global_faults</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current_interval\">current_interval</a> = <a class=\"id\" href=\"#global_faults\">global_faults</a> - <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#faultstamp\">faultstamp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#spin_trylock\">spin_trylock</a>(&amp;<a class=\"id\" href=\"#swap_token_lock\">swap_token_lock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First come first served */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#token_priority\">token_priority</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#token_priority\">token_priority</a> + 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a> = <a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a> != <a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#current_interval\">current_interval</a> &lt; <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#last_interval\">last_interval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#token_priority\">token_priority</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#token_priority\">token_priority</a> &gt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#token_priority\">token_priority</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if we deserve the token */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#token_priority\">token_priority</a> &gt; <a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a>-><a class=\"id\" href=\"#token_priority\">token_priority</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#token_priority\">token_priority</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a> = <a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Token holder came in again! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#token_priority\">token_priority</a> += 2;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#faultstamp\">faultstamp</a> = <a class=\"id\" href=\"#global_faults\">global_faults</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#last_interval\">last_interval</a> = <a class=\"id\" href=\"#current_interval\">current_interval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#swap_token_lock\">swap_token_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Called on process exit. */</span>", 
"void <a class=\"id\" href=\"#__put_swap_token\">__put_swap_token</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#swap_token_lock\">swap_token_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#mm\">mm</a> == <a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#swap_token_lock\">swap_token_lock</a>);", 
"}", 
];
xr_frag_insert('l/d5/1e10d061bbe4491bade2460112a357741f920f.xr', __xr_tmp);
