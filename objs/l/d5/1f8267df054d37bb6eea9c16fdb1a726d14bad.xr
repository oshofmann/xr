var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: exconfig - Namespace reconfiguration (Load/Unload opcodes)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acinterp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acnamesp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"actables.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acdispat.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acevents.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_EXECUTER\">ACPI_EXECUTER</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"exconfig\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_add_table\">acpi_ex_add_table</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#parent_node\">parent_node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>);", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_region_read\">acpi_ex_region_read</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_add_table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Table               - Pointer to raw table</span>", 
"<span class=\"comment\"> *              parent_node         - Where to load the table (scope)</span>", 
"<span class=\"comment\"> *              ddb_handle          - Where to return the table handle.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Common function to Install and Load an ACPI table with a</span>", 
"<span class=\"comment\"> *              returned table handle.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_add_table\">acpi_ex_add_table</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#parent_node\">parent_node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_owner_id\">acpi_owner_id</a> <a class=\"id\" href=\"#owner_id\">owner_id</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_add_table\">ex_add_table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create an object to be the table handle */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = <a class=\"id\" href=\"#acpi_ut_create_internal_object\">acpi_ut_create_internal_object</a>(<a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Init the table handle */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#AOPOBJ_DATA_VALID\">AOPOBJ_DATA_VALID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#ACPI_REFCLASS_TABLE\">ACPI_REFCLASS_TABLE</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Install the new table into the local data structures */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#table_index\">table_index</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the table to the namespace */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_load_table\">acpi_ns_load_table</a>(<a class=\"id\" href=\"#table_index\">table_index</a>, <a class=\"id\" href=\"#parent_node\">parent_node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Execute any module-level code that was found in the table */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ex_exit_interpreter\">acpi_ex_exit_interpreter</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ns_exec_module_code_list\">acpi_ns_exec_module_code_list</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ex_enter_interpreter\">acpi_ex_enter_interpreter</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update GPEs for any new _Lxx/_Exx methods. Ignore errors */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_get_owner_id\">acpi_tb_get_owner_id</a>(<a class=\"id\" href=\"#table_index\">table_index</a>, &amp;<a class=\"id\" href=\"#owner_id\">owner_id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ev_update_gpes\">acpi_ev_update_gpes</a>(<a class=\"id\" href=\"#owner_id\">owner_id</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_load_table_op</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  walk_state          - Current state with operands</span>", 
"<span class=\"comment\"> *              return_desc         - Where to store the return object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Load an ACPI table from the RSDT/XSDT</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_load_table_op\">acpi_ex_load_table_op</a>(struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_desc\">return_desc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#operand\">operand</a> = &amp;<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#operands\">operands</a>[0];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#parent_node\">parent_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#start_node\">start_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#parameter_node\">parameter_node</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_load_table_op\">ex_load_table_op</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Validate lengths for the signature_string, OEMIDString, OEMtable_iD */</span>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#operand\">operand</a>[0]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#ACPI_NAME_SIZE\">ACPI_NAME_SIZE</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#operand\">operand</a>[1]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#ACPI_OEM_ID_SIZE\">ACPI_OEM_ID_SIZE</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#operand\">operand</a>[2]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#ACPI_OEM_TABLE_ID_SIZE\">ACPI_OEM_TABLE_ID_SIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find the ACPI table in the RSDT/XSDT */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_find_table\">acpi_tb_find_table</a>(<a class=\"id\" href=\"#operand\">operand</a>[0]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#operand\">operand</a>[1]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#operand\">operand</a>[2]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, &amp;<a class=\"id\" href=\"#table_index\">table_index</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Table not found, return an Integer=0 and AE_OK */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ddb_handle\">ddb_handle</a> = <a class=\"id\" href=\"#acpi_ut_create_integer_object\">acpi_ut_create_integer_object</a>((<a class=\"id\" href=\"#u64\">u64</a>) 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#return_desc\">return_desc</a> = <a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Default nodes */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_node\">start_node</a> = <a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#scope_info\">scope_info</a>-><a class=\"id\" href=\"#scope\">scope</a>.<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent_node\">parent_node</a> = <a class=\"id\" href=\"#acpi_gbl_root_node\">acpi_gbl_root_node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* root_path (optional parameter) */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#operand\">operand</a>[3]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Find the node referenced by the root_path_string. This is the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * location within the namespace where the table will be loaded.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_get_node\">acpi_ns_get_node</a>(<a class=\"id\" href=\"#start_node\">start_node</a>, <a class=\"id\" href=\"#operand\">operand</a>[3]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ACPI_NS_SEARCH_PARENT\">ACPI_NS_SEARCH_PARENT</a>, &amp;<a class=\"id\" href=\"#parent_node\">parent_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* parameter_path (optional parameter) */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#operand\">operand</a>[4]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#operand\">operand</a>[4]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>[0] != '\\\\') &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#operand\">operand</a>[4]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>[0] != '^')) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Path is not absolute, so it will be relative to the node</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * referenced by the root_path_string (or the NS root if omitted)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_node\">start_node</a> = <a class=\"id\" href=\"#parent_node\">parent_node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find the node referenced by the parameter_path_string */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_get_node\">acpi_ns_get_node</a>(<a class=\"id\" href=\"#start_node\">start_node</a>, <a class=\"id\" href=\"#operand\">operand</a>[4]-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ACPI_NS_SEARCH_PARENT\">ACPI_NS_SEARCH_PARENT</a>, &amp;<a class=\"id\" href=\"#parameter_node\">parameter_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Load the table into the namespace */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_add_table\">acpi_ex_add_table</a>(<a class=\"id\" href=\"#table_index\">table_index</a>, <a class=\"id\" href=\"#parent_node\">parent_node</a>, &amp;<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameter Data (optional) */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parameter_node\">parameter_node</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Store the parameter data into the optional parameter object */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_store\">acpi_ex_store</a>(<a class=\"id\" href=\"#operand\">operand</a>[5],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#parameter_node\">parameter_node</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ex_unload_table\">acpi_ex_unload_table</a>(<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_table_by_index\">acpi_get_table_by_index</a>(<a class=\"id\" href=\"#table_index\">table_index</a>, &amp;<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_INFO\">ACPI_INFO</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Dynamic OEM Table Load:\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_print_table_header\">acpi_tb_print_table_header</a>(0, <a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Invoke table handler if present */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_table_handler\">acpi_gbl_table_handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_gbl_table_handler\">acpi_gbl_table_handler</a>(<a class=\"id\" href=\"#ACPI_TABLE_EVENT_LOAD\">ACPI_TABLE_EVENT_LOAD</a>, <a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#acpi_gbl_table_handler_context\">acpi_gbl_table_handler_context</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#return_desc\">return_desc</a> = <a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_region_read</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  obj_desc        - Region descriptor</span>", 
"<span class=\"comment\"> *              Length          - Number of bytes to read</span>", 
"<span class=\"comment\"> *              Buffer          - Pointer to where to put the data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Read data from an operation region. The read starts from the</span>", 
"<span class=\"comment\"> *              beginning of the region.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_region_read\">acpi_ex_region_read</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#region_offset\">region_offset</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Bytewise reads */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#length\">length</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ev_address_space_dispatch\">acpi_ev_address_space_dispatch</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#ACPI_READ\">ACPI_READ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#region_offset\">region_offset</a>, 8,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buffer\">buffer</a> = (<a class=\"id\" href=\"#u8\">u8</a>)<a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#region_offset\">region_offset</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_load_op</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  obj_desc        - Region or Buffer/Field where the table will be</span>", 
"<span class=\"comment\"> *                                obtained</span>", 
"<span class=\"comment\"> *              Target          - Where a handle to the table will be stored</span>", 
"<span class=\"comment\"> *              walk_state      - Current state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Load an ACPI table from a field or operation region</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: Region Fields (Field, bank_field, index_fields) are resolved to buffer</span>", 
"<span class=\"comment\"> *       objects before this code is reached.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *       If source is an operation region, it must refer to system_memory, as</span>", 
"<span class=\"comment\"> *       per the ACPI specification.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_load_op\">acpi_ex_load_op</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a> <a class=\"id\" href=\"#table_desc\">table_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_load_op\">ex_load_op</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMSET\">ACPI_MEMSET</a>(&amp;<a class=\"id\" href=\"#table_desc\">table_desc</a>, 0, sizeof(struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Source Object can be either an op_region or a Buffer/Field */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_REGION\">ACPI_TYPE_REGION</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Load table from Region %p\\n\", <a class=\"id\" href=\"#obj_desc\">obj_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Region must be system_memory (from ACPI spec) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#region\">region</a>.<a class=\"id\" href=\"#space_id\">space_id</a> != <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_MEMORY\">ACPI_ADR_SPACE_SYSTEM_MEMORY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the Region Address and Length have not been previously evaluated,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * evaluate them now and save the results.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AOPOBJ_DATA_VALID\">AOPOBJ_DATA_VALID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_get_region_arguments\">acpi_ds_get_region_arguments</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the table header first so we can get the table length */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE\">ACPI_ALLOCATE</a>(sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_region_read\">acpi_ex_region_read</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#table\">table</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Must have at least an ACPI table header */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_INVALID_TABLE_LENGTH\">AE_INVALID_TABLE_LENGTH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The original implementation simply mapped the table, with no copy.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * However, the memory region is not guaranteed to remain stable and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we must copy the table to a local buffer. For example, the memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * region is corrupted after suspend on some machines. Dynamically</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * loaded tables are usually small, so this overhead is minimal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The latest implementation (5/2009) does not use a mapping at all.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We use the low-level operation region interface to read the table</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * instead of the obvious optimization of using a direct mapping.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This maintains a consistent use of operation regions across the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * entire subsystem. This is important if additional processing must</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be performed in the (possibly user-installed) operation region</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * handler. For example, acpi_exec and ASLTS depend on this.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Allocate a buffer for the table */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE\">ACPI_ALLOCATE</a>(<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Read the entire table */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_region_read\">acpi_ex_region_read</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#length\">length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u8\">u8</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#region\">region</a>.<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>:<span class=\"ts\"/><span class=\"comment\">/* Buffer or resolved region_field */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Load table from Buffer or Field %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Must have at least an ACPI table header */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_INVALID_TABLE_LENGTH\">AE_INVALID_TABLE_LENGTH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the actual table length from the table header */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Table cannot extend beyond the buffer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_BUFFER_LIMIT\">AE_AML_BUFFER_LIMIT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_INVALID_TABLE_LENGTH\">AE_INVALID_TABLE_LENGTH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Copy the table from the buffer because the buffer could be modified</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or even deleted in the future</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE\">ACPI_ALLOCATE</a>(<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#ACPI_TO_INTEGER\">ACPI_TO_INTEGER</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Validate table checksum (will not get validated in tb_add_table) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_verify_checksum\">acpi_tb_verify_checksum</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Complete the table descriptor */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_ALLOCATED\">ACPI_TABLE_ORIGIN_ALLOCATED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Install the new table into the local data structures */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_add_table\">acpi_tb_add_table</a>(&amp;<a class=\"id\" href=\"#table_desc\">table_desc</a>, &amp;<a class=\"id\" href=\"#table_index\">table_index</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Delete allocated table buffer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_delete_table\">acpi_tb_delete_table</a>(&amp;<a class=\"id\" href=\"#table_desc\">table_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Add the table to the namespace.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: Load the table objects relative to the root of the namespace.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This appears to go against the ACPI specification, but we do it for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * compatibility with other ACPI implementations.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_add_table\">acpi_ex_add_table</a>(<a class=\"id\" href=\"#table_index\">table_index</a>, <a class=\"id\" href=\"#acpi_gbl_root_node\">acpi_gbl_root_node</a>, &amp;<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* On error, table_ptr was deallocated above */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Store the ddb_handle into the Target operand */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_store\">acpi_ex_store</a>(<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>, <a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ex_unload_table\">acpi_ex_unload_table</a>(<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* table_ptr was deallocated above */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_INFO\">ACPI_INFO</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Dynamic OEM Table Load:\"));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_print_table_header\">acpi_tb_print_table_header</a>(0, <a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Remove the reference by added by acpi_ex_store above */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Invoke table handler if present */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_table_handler\">acpi_gbl_table_handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_gbl_table_handler\">acpi_gbl_table_handler</a>(<a class=\"id\" href=\"#ACPI_TABLE_EVENT_LOAD\">ACPI_TABLE_EVENT_LOAD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#acpi_gbl_table_handler_context\">acpi_gbl_table_handler_context</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_unload_table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  ddb_handle          - Handle to a previously loaded table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Unload an ACPI table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ex_unload_table\">acpi_ex_unload_table</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#table_desc\">table_desc</a> = <a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_unload_table\">ex_unload_table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Validate the handle</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Although the handle is partially validated in acpi_ex_reconfiguration()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when it calls acpi_ex_resolve_operands(), the handle is more completely</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * validated here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Handle must be a valid operand object of type reference. Also, the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ddb_handle must still be marked valid (table has not been previously</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unloaded)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>) != <a class=\"id\" href=\"#ACPI_DESC_TYPE_OPERAND\">ACPI_DESC_TYPE_OPERAND</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>) ||", 
"<span class=\"ts\"/>    (!(<a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AOPOBJ_DATA_VALID\">AOPOBJ_DATA_VALID</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the table index from the ddb_handle */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_index\">table_index</a> = <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ensure the table is still loaded */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_tb_is_table_loaded\">acpi_tb_is_table_loaded</a>(<a class=\"id\" href=\"#table_index\">table_index</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NOT_EXIST\">AE_NOT_EXIST</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Invoke table handler if present */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_table_handler\">acpi_gbl_table_handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_table_by_index\">acpi_get_table_by_index</a>(<a class=\"id\" href=\"#table_index\">table_index</a>, &amp;<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_gbl_table_handler\">acpi_gbl_table_handler</a>(<a class=\"id\" href=\"#ACPI_TABLE_EVENT_UNLOAD\">ACPI_TABLE_EVENT_UNLOAD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#acpi_gbl_table_handler_context\">acpi_gbl_table_handler_context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delete the portion of the namespace owned by this table */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_delete_namespace_by_owner\">acpi_tb_delete_namespace_by_owner</a>(<a class=\"id\" href=\"#table_index\">table_index</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_tb_release_owner_id\">acpi_tb_release_owner_id</a>(<a class=\"id\" href=\"#table_index\">table_index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_set_table_loaded_flag\">acpi_tb_set_table_loaded_flag</a>(<a class=\"id\" href=\"#table_index\">table_index</a>, <a class=\"id\" href=\"#FALSE\">FALSE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Invalidate the handle. We do this because the handle may be stored</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in a named object and may not be actually deleted until much later.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ddb_handle\">ddb_handle</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#AOPOBJ_DATA_VALID\">AOPOBJ_DATA_VALID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
];
xr_frag_insert('l/d5/1f8267df054d37bb6eea9c16fdb1a726d14bad.xr', __xr_tmp);
