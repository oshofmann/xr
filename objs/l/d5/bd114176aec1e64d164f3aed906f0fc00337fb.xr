var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * File:<span class=\"ts\"/>portdrv_core.c</span>", 
"<span class=\"comment\"> * Purpose:<span class=\"ts\"/>PCI Express Port Bus Driver's Core Functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 Intel</span>", 
"<span class=\"comment\"> * Copyright (C) Tom Long Nguyen (tom.l.nguyen@intel.com)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pcieport_if\">pcieport_if</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#aer\">aer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>-<a class=\"id\" href=\"#aspm\">aspm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"../pci.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"portdrv.h\"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * release_pcie_device - free PCI Express port service device structure</span>", 
"<span class=\"comment\"> * @dev: Port service device to release</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Invoked automatically when device is being removed in response to</span>", 
"<span class=\"comment\"> * device_unregister(dev).  Release all resources being claimed.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#release_pcie_device\">release_pcie_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#to_pcie_device\">to_pcie_device</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_port_msix_add_entry - add entry to given array of MSI-X entries</span>", 
"<span class=\"comment\"> * @entries: Array of MSI-X entries</span>", 
"<span class=\"comment\"> * @new_entry: Index of the entry to add to the array</span>", 
"<span class=\"comment\"> * @nr_entries: Number of entries aleady in the array</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value: Position of the added entry in the array</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pcie_port_msix_add_entry\">pcie_port_msix_add_entry</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msix_entry\">msix_entry</a> *<a class=\"id\" href=\"#entries\">entries</a>, int <a class=\"id\" href=\"#new_entry\">new_entry</a>, int <a class=\"id\" href=\"#nr_entries\">nr_entries</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#nr_entries\">nr_entries</a>; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#entry\">entry</a> == <a class=\"id\" href=\"#new_entry\">new_entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#new_entry\">new_entry</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#j\">j</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_port_enable_msix - try to set up MSI-X as interrupt mode for given port</span>", 
"<span class=\"comment\"> * @dev: PCI Express port to handle</span>", 
"<span class=\"comment\"> * @vectors: Array of interrupt vectors to populate</span>", 
"<span class=\"comment\"> * @mask: Bitmask of port capabilities returned by get_port_device_capability()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value: 0 on success, error code on failure</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pcie_port_enable_msix\">pcie_port_enable_msix</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int *<a class=\"id\" href=\"#vectors\">vectors</a>, int <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msix_entry\">msix_entry</a> *<a class=\"id\" href=\"#msix_entries\">msix_entries</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>[<a class=\"id\" href=\"#PCIE_PORT_DEVICE_MAXSERVICES\">PCIE_PORT_DEVICE_MAXSERVICES</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_entries\">nr_entries</a>, <a class=\"id\" href=\"#status\">status</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#nvec\">nvec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg32\">reg32</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_entries\">nr_entries</a> = <a class=\"id\" href=\"#pci_msix_table_size\">pci_msix_table_size</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nr_entries\">nr_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_entries\">nr_entries</a> &gt; <a class=\"id\" href=\"#PCIE_PORT_MAX_MSIX_ENTRIES\">PCIE_PORT_MAX_MSIX_ENTRIES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_entries\">nr_entries</a> = <a class=\"id\" href=\"#PCIE_PORT_MAX_MSIX_ENTRIES\">PCIE_PORT_MAX_MSIX_ENTRIES</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msix_entries\">msix_entries</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#msix_entries\">msix_entries</a>) * <a class=\"id\" href=\"#nr_entries\">nr_entries</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#msix_entries\">msix_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate as many entries as the port wants, so that we can check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which of them will be useful.  Moreover, if nr_entries is correctly</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * equal to the number of entries this port actually uses, we'll happily</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * go through without any tricks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_entries\">nr_entries</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msix_entries\">msix_entries</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#pci_enable_msix\">pci_enable_msix</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#msix_entries\">msix_entries</a>, <a class=\"id\" href=\"#nr_entries\">nr_entries</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Exit\">Exit</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PCIE_PORT_DEVICE_MAXSERVICES\">PCIE_PORT_DEVICE_MAXSERVICES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>[<a class=\"id\" href=\"#i\">i</a>] = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nvec\">nvec</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; (<a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME\">PCIE_PORT_SERVICE_PME</a> | <a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP\">PCIE_PORT_SERVICE_HP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The code below follows the PCI Express Base Specification 2.0</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * stating in Section 6.1.6 that \"PME and Hot-Plug Event</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * interrupts (when both are implemented) always share the same</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * MSI or MSI-X vector, as indicated by the Interrupt Message</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Number field in the PCI Express Capabilities register\", where</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * according to Section 7.8.2 of the specification \"For MSI-X,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the value in this field indicates which MSI-X Table entry is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * used to generate the interrupt message.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_FLAGS\">PCI_EXP_FLAGS</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = (<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_FLAGS_IRQ\">PCI_EXP_FLAGS_IRQ</a>) >> 9;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a> >= <a class=\"id\" href=\"#nr_entries\">nr_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Error\">Error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#pcie_port_msix_add_entry\">pcie_port_msix_add_entry</a>(<a class=\"id\" href=\"#msix_entries\">msix_entries</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#nvec\">nvec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#nvec\">nvec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nvec\">nvec</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>[<a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME_SHIFT\">PCIE_PORT_SERVICE_PME_SHIFT</a>] = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>[<a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP_SHIFT\">PCIE_PORT_SERVICE_HP_SHIFT</a>] = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#PCIE_PORT_SERVICE_AER\">PCIE_PORT_SERVICE_AER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The code below follows Section 7.10.10 of the PCI Express</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Base Specification 2.0 stating that bits 31-27 of the Root</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Error Status Register contain a value indicating which of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * MSI/MSI-X vectors assigned to the port is going to be used</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * for AER, where \"For MSI-X, the value in this register</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * indicates which MSI-X Table entry is used to generate the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * interrupt message.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_ext_capability\">pci_find_ext_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_EXT_CAP_ID_ERR\">PCI_EXT_CAP_ID_ERR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_ERR_ROOT_STATUS\">PCI_ERR_ROOT_STATUS</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#reg32\">reg32</a> >> 27;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a> >= <a class=\"id\" href=\"#nr_entries\">nr_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Error\">Error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#pcie_port_msix_add_entry\">pcie_port_msix_add_entry</a>(<a class=\"id\" href=\"#msix_entries\">msix_entries</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#nvec\">nvec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#nvec\">nvec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nvec\">nvec</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>[<a class=\"id\" href=\"#PCIE_PORT_SERVICE_AER_SHIFT\">PCIE_PORT_SERVICE_AER_SHIFT</a>] = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If nvec is equal to the allocated number of entries, we can just use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * what we have.  Otherwise, the port has some extra entries not for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * services we know and we need to work around that.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nvec\">nvec</a> == <a class=\"id\" href=\"#nr_entries\">nr_entries</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Drop the temporary MSI-X setup */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_msix\">pci_disable_msix</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Now allocate the MSI-X vectors for real */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#pci_enable_msix\">pci_enable_msix</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#msix_entries\">msix_entries</a>, <a class=\"id\" href=\"#nvec\">nvec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Exit\">Exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PCIE_PORT_DEVICE_MAXSERVICES\">PCIE_PORT_DEVICE_MAXSERVICES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vectors\">vectors</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#idx\">idx</a>[<a class=\"id\" href=\"#i\">i</a>] >= 0 ? <a class=\"id\" href=\"#msix_entries\">msix_entries</a>[<a class=\"id\" href=\"#idx\">idx</a>[<a class=\"id\" href=\"#i\">i</a>]].<a class=\"id\" href=\"#vector\">vector</a> : -1;", 
"", 
" <a class=\"id\" href=\"#Exit\">Exit</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#msix_entries\">msix_entries</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"", 
" <a class=\"id\" href=\"#Error\">Error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_msix\">pci_disable_msix</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#Exit\">Exit</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * init_service_irqs - initialize irqs for PCI Express port services</span>", 
"<span class=\"comment\"> * @dev: PCI Express port to handle</span>", 
"<span class=\"comment\"> * @irqs: Array of irqs to populate</span>", 
"<span class=\"comment\"> * @mask: Bitmask of port capabilities returned by get_port_device_capability()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value: Interrupt mode associated with the port</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#init_service_irqs\">init_service_irqs</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int *<a class=\"id\" href=\"#irqs\">irqs</a>, int <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#irq\">irq</a> = -1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We have to use INTx if MSI cannot be used for PCIe PME. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME\">PCIE_PORT_SERVICE_PME</a>) && <a class=\"id\" href=\"#pcie_pme_no_msi\">pcie_pme_no_msi</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pin\">pin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_msi\">no_msi</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try to use MSI-X if supported */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pcie_port_enable_msix\">pcie_port_enable_msix</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#irqs\">irqs</a>, <a class=\"id\" href=\"#mask\">mask</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We're not going to use MSI-X, so try MSI and fall back to INTx */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_enable_msi\">pci_enable_msi</a>(<a class=\"id\" href=\"#dev\">dev</a>) || <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pin\">pin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
" <a class=\"id\" href=\"#no_msi\">no_msi</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PCIE_PORT_DEVICE_MAXSERVICES\">PCIE_PORT_DEVICE_MAXSERVICES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irqs\">irqs</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irqs\">irqs</a>[<a class=\"id\" href=\"#PCIE_PORT_SERVICE_VC_SHIFT\">PCIE_PORT_SERVICE_VC_SHIFT</a>] = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cleanup_service_irqs\">cleanup_service_irqs</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#msix_enabled\">msix_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_msix\">pci_disable_msix</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#msi_enabled\">msi_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_msi\">pci_disable_msi</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * get_port_device_capability - discover capabilities of a PCI Express port</span>", 
"<span class=\"comment\"> * @dev: PCI Express port to examine</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The capabilities are read from the port's PCI Express configuration registers</span>", 
"<span class=\"comment\"> * as described in PCI Express Base Specification 1.0a sections 7.8.2, 7.8.9 and</span>", 
"<span class=\"comment\"> * 7.9 - 7.11.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value: Bitmask of discovered port capabilities</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#get_port_device_capability\">get_port_device_capability</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#services\">services</a> = 0, <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg32\">reg32</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cap_mask\">cap_mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pcie_port_platform_notify\">pcie_port_platform_notify</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#cap_mask\">cap_mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pcie_ports_auto\">pcie_ports_auto</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_no_aspm\">pcie_no_aspm</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cap_mask\">cap_mask</a> = <a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME\">PCIE_PORT_SERVICE_PME</a> | <a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP\">PCIE_PORT_SERVICE_HP</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#PCIE_PORT_SERVICE_VC\">PCIE_PORT_SERVICE_VC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_aer_available\">pci_aer_available</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cap_mask\">cap_mask</a> |= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_AER\">PCIE_PORT_SERVICE_AER</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_FLAGS\">PCI_EXP_FLAGS</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Hot-Plug Capable */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cap_mask\">cap_mask</a> &amp; <a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP\">PCIE_PORT_SERVICE_HP</a>) && (<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_FLAGS_SLOT\">PCI_EXP_FLAGS_SLOT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_SLTCAP\">PCI_EXP_SLTCAP</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#PCI_EXP_SLTCAP_HPC\">PCI_EXP_SLTCAP_HPC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#services\">services</a> |= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP\">PCIE_PORT_SERVICE_HP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Disable hot-plug interrupts in case they have been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * enabled by the BIOS and the hot-plug service driver</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * is not loaded.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> += <a class=\"id\" href=\"#PCI_EXP_SLTCTL\">PCI_EXP_SLTCTL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> &= ~(<a class=\"id\" href=\"#PCI_EXP_SLTCTL_CCIE\">PCI_EXP_SLTCTL_CCIE</a> | <a class=\"id\" href=\"#PCI_EXP_SLTCTL_HPIE\">PCI_EXP_SLTCTL_HPIE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* AER capable */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cap_mask\">cap_mask</a> &amp; <a class=\"id\" href=\"#PCIE_PORT_SERVICE_AER\">PCIE_PORT_SERVICE_AER</a>)", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#pci_find_ext_capability\">pci_find_ext_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_EXT_CAP_ID_ERR\">PCI_EXT_CAP_ID_ERR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#services\">services</a> |= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_AER\">PCIE_PORT_SERVICE_AER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Disable AER on this port in case it's been enabled by the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * BIOS (the AER service driver will enable it when necessary).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_pcie_error_reporting\">pci_disable_pcie_error_reporting</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* VC support */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_find_ext_capability\">pci_find_ext_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_EXT_CAP_ID_VC\">PCI_EXT_CAP_ID_VC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#services\">services</a> |= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_VC\">PCIE_PORT_SERVICE_VC</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Root ports are capable of generating PME too */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cap_mask\">cap_mask</a> &amp; <a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME\">PCIE_PORT_SERVICE_PME</a>)", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> == <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#services\">services</a> |= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME\">PCIE_PORT_SERVICE_PME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Disable PME interrupt on this port in case it's been enabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * by the BIOS (the PME service driver will enable it when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * necessary).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_interrupt_enable\">pcie_pme_interrupt_enable</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#services\">services</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
];
xr_frag_insert('l/d5/bd114176aec1e64d164f3aed906f0fc00337fb.xr', __xr_tmp);
