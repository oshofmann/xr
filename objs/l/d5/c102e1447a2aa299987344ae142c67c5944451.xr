var __xr_tmp = [
"<span class=\"ts\"/>return <a class=\"id\" href=\"#current_has_perm\">current_has_perm</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#PROCESS__SETSCHED\">PROCESS__SETSCHED</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_task_kill\">selinux_task_kill</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#siginfo\">siginfo</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#secid\">secid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sig\">sig</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> = <a class=\"id\" href=\"#PROCESS__SIGNULL\">PROCESS__SIGNULL</a>; <span class=\"comment\">/* null signal; existence test */</span>", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> = <a class=\"id\" href=\"#signal_to_av\">signal_to_av</a>(<a class=\"id\" href=\"#sig\">sig</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secid\">secid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#secid\">secid</a>, <a class=\"id\" href=\"#task_sid\">task_sid</a>(<a class=\"id\" href=\"#p\">p</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#SECCLASS_PROCESS\">SECCLASS_PROCESS</a>, <a class=\"id\" href=\"#perm\">perm</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#current_has_perm\">current_has_perm</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#perm\">perm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_task_wait\">selinux_task_wait</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#task_has_perm\">task_has_perm</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#PROCESS__SIGCHLD\">PROCESS__SIGCHLD</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_task_to_inode\">selinux_task_to_inode</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_security\">i_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#task_sid\">task_sid</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#initialized\">initialized</a> = 1;", 
"}", 
"", 
"<span class=\"comment\">/* Returns error only if unable to parse addresses */</span>", 
"static int <a class=\"id\" href=\"#selinux_parse_skb_ipv4\">selinux_parse_skb_ipv4</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> *<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#ihlen\">ihlen</a>, <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> <a class=\"id\" href=\"#_iph\">_iph</a>, *<a class=\"id\" href=\"#ih\">ih</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ih\">ih</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_iph\">_iph</a>), &amp;<a class=\"id\" href=\"#_iph\">_iph</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ih\">ih</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ihlen\">ihlen</a> = <a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#ihl\">ihl</a> * 4;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ihlen\">ihlen</a> &lt; sizeof(<a class=\"id\" href=\"#_iph\">_iph</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v4info\">v4info</a>.<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v4info\">v4info</a>.<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#proto\">proto</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#protocol\">protocol</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> <a class=\"id\" href=\"#_tcph\">_tcph</a>, *<a class=\"id\" href=\"#th\">th</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a>) &amp; <a class=\"id\" href=\"#IP_OFFSET\">IP_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#ihlen\">ihlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_tcph\">_tcph</a>), &amp;<a class=\"id\" href=\"#_tcph\">_tcph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#udphdr\">udphdr</a> <a class=\"id\" href=\"#_udph\">_udph</a>, *<a class=\"id\" href=\"#uh\">uh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a>) &amp; <a class=\"id\" href=\"#IP_OFFSET\">IP_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#ihlen\">ihlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uh\">uh</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_udph\">_udph</a>), &amp;<a class=\"id\" href=\"#_udph\">_udph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uh\">uh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_DCCP\">IPPROTO_DCCP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dccp_hdr\">dccp_hdr</a> <a class=\"id\" href=\"#_dccph\">_dccph</a>, *<a class=\"id\" href=\"#dh\">dh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a>) &amp; <a class=\"id\" href=\"#IP_OFFSET\">IP_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#ihlen\">ihlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dh\">dh</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_dccph\">_dccph</a>), &amp;<a class=\"id\" href=\"#_dccph\">_dccph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dh\">dh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#dh\">dh</a>-><a class=\"id\" href=\"#dccph_sport\">dccph_sport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#dh\">dh</a>-><a class=\"id\" href=\"#dccph_dport\">dccph_dport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"", 
"<span class=\"comment\">/* Returns error only if unable to parse addresses */</span>", 
"static int <a class=\"id\" href=\"#selinux_parse_skb_ipv6\">selinux_parse_skb_ipv6</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> *<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> <a class=\"id\" href=\"#_ipv6h\">_ipv6h</a>, *<a class=\"id\" href=\"#ip6\">ip6</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6\">ip6</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_ipv6h\">_ipv6h</a>), &amp;<a class=\"id\" href=\"#_ipv6h\">_ipv6h</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip6\">ip6</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v6info\">v6info</a>.<a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#ip6\">ip6</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v6info\">v6info</a>.<a class=\"id\" href=\"#daddr\">daddr</a>, &amp;<a class=\"id\" href=\"#ip6\">ip6</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#ip6\">ip6</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += sizeof(<a class=\"id\" href=\"#_ipv6h\">_ipv6h</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#ipv6_skip_exthdr\">ipv6_skip_exthdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, &amp;<a class=\"id\" href=\"#nexthdr\">nexthdr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#proto\">proto</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#nexthdr\">nexthdr</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> <a class=\"id\" href=\"#_tcph\">_tcph</a>, *<a class=\"id\" href=\"#th\">th</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_tcph\">_tcph</a>), &amp;<a class=\"id\" href=\"#_tcph\">_tcph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#udphdr\">udphdr</a> <a class=\"id\" href=\"#_udph\">_udph</a>, *<a class=\"id\" href=\"#uh\">uh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uh\">uh</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_udph\">_udph</a>), &amp;<a class=\"id\" href=\"#_udph\">_udph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uh\">uh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_DCCP\">IPPROTO_DCCP</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dccp_hdr\">dccp_hdr</a> <a class=\"id\" href=\"#_dccph\">_dccph</a>, *<a class=\"id\" href=\"#dh\">dh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dh\">dh</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_dccph\">_dccph</a>), &amp;<a class=\"id\" href=\"#_dccph\">_dccph</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dh\">dh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#dh\">dh</a>-><a class=\"id\" href=\"#dccph_sport\">dccph_sport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#dh\">dh</a>-><a class=\"id\" href=\"#dccph_dport\">dccph_dport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* includes fragments */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* IPV6 */</span>", 
"", 
"static int <a class=\"id\" href=\"#selinux_parse_skb\">selinux_parse_skb</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> *<a class=\"id\" href=\"#ad\">ad</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char **<a class=\"id\" href=\"#_addrp\">_addrp</a>, int <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#addrp\">addrp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PF_INET\">PF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#selinux_parse_skb_ipv4\">selinux_parse_skb_ipv4</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#proto\">proto</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#parse_error\">parse_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrp\">addrp</a> = (char *)(<a class=\"id\" href=\"#src\">src</a> ? &amp;<a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v4info\">v4info</a>.<a class=\"id\" href=\"#saddr\">saddr</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v4info\">v4info</a>.<a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#okay\">okay</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#selinux_parse_skb_ipv6\">selinux_parse_skb_ipv6</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#proto\">proto</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#parse_error\">parse_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrp\">addrp</a> = (char *)(<a class=\"id\" href=\"#src\">src</a> ? &amp;<a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v6info\">v6info</a>.<a class=\"id\" href=\"#saddr\">saddr</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#ad\">ad</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v6info\">v6info</a>.<a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#okay\">okay</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* IPV6 */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrp\">addrp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#okay\">okay</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#parse_error\">parse_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/>       \"SELinux: failure in selinux_parse_skb(),\"", 
"<span class=\"ts\"/>       \" unable to parse packet\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#okay\">okay</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_addrp\">_addrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#_addrp\">_addrp</a> = <a class=\"id\" href=\"#addrp\">addrp</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_skb_peerlbl_sid - Determine the peer label of a packet</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @family: protocol family</span>", 
"<span class=\"comment\"> * @sid: the packet's peer label SID</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Check the various different forms of network peer labeling and determine</span>", 
"<span class=\"comment\"> * the peer label/SID for the packet; most of the magic actually occurs in</span>", 
"<span class=\"comment\"> * the security server function security_net_peersid_cmp().  The function</span>", 
"<span class=\"comment\"> * returns zero if the value in @sid is valid (although it may be SECSID_NULL)</span>", 
"<span class=\"comment\"> * or -EACCES if @sid is invalid due to inconsistencies with the different</span>", 
"<span class=\"comment\"> * peer labels.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#selinux_skb_peerlbl_sid\">selinux_skb_peerlbl_sid</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#xfrm_sid\">xfrm_sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nlbl_type\">nlbl_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_skb_xfrm_sid\">selinux_skb_xfrm_sid</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#xfrm_sid\">xfrm_sid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_skbuff_getsid\">selinux_netlbl_skbuff_getsid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#nlbl_type\">nlbl_type</a>, &amp;<a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_net_peersid_resolve\">security_net_peersid_resolve</a>(<a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>, <a class=\"id\" href=\"#nlbl_type\">nlbl_type</a>, <a class=\"id\" href=\"#xfrm_sid\">xfrm_sid</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#err\">err</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"SELinux: failure in selinux_skb_peerlbl_sid(),\"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \" unable to determine packet's peer label\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* socket security operations */</span>", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#socket_sockcreate_sid\">socket_sockcreate_sid</a>(const struct <a class=\"id\" href=\"#task_security_struct\">task_security_struct</a> *<a class=\"id\" href=\"#tsec\">tsec</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#sockcreate_sid\">sockcreate_sid</a> ? : <a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#perms\">perms</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsid\">tsid</a> = <a class=\"id\" href=\"#task_sid\">task_sid</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a> == <a class=\"id\" href=\"#SECINITSID_KERNEL\">SECINITSID_KERNEL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#tsid\">tsid</a>, <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>, <a class=\"id\" href=\"#perms\">perms</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_create\">selinux_socket_create</a>(int <a class=\"id\" href=\"#family\">family</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#kern\">kern</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#task_security_struct\">task_security_struct</a> *<a class=\"id\" href=\"#tsec\">tsec</a> = <a class=\"id\" href=\"#current_security\">current_security</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#newsid\">newsid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#secclass\">secclass</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kern\">kern</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsid\">newsid</a> = <a class=\"id\" href=\"#socket_sockcreate_sid\">socket_sockcreate_sid</a>(<a class=\"id\" href=\"#tsec\">tsec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secclass\">secclass</a> = <a class=\"id\" href=\"#socket_type_to_security_class\">socket_type_to_security_class</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#newsid\">newsid</a>, <a class=\"id\" href=\"#secclass\">secclass</a>, <a class=\"id\" href=\"#SOCKET__CREATE\">SOCKET__CREATE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_post_create\">selinux_socket_post_create</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#kern\">kern</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#task_security_struct\">task_security_struct</a> *<a class=\"id\" href=\"#tsec\">tsec</a> = <a class=\"id\" href=\"#current_security\">current_security</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#SOCK_INODE\">SOCK_INODE</a>(<a class=\"id\" href=\"#sock\">sock</a>)-><a class=\"id\" href=\"#i_security\">i_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kern\">kern</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_KERNEL\">SECINITSID_KERNEL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#socket_sockcreate_sid\">socket_sockcreate_sid</a>(<a class=\"id\" href=\"#tsec\">tsec</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#socket_type_to_security_class\">socket_type_to_security_class</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#initialized\">initialized</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_netlbl_socket_post_create\">selinux_netlbl_socket_post_create</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Range of port numbers used to automatically bind.</span>", 
"<span class=\"comment\">   Need to determine whether we should perform a name_bind</span>", 
"<span class=\"comment\">   permission check between the socket and the port number. */</span>", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_bind\">selinux_socket_bind</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#address\">address</a>, int <a class=\"id\" href=\"#addrlen\">addrlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__BIND\">SOCKET__BIND</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If PF_INET or PF_INET6, check name_bind permission for the port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Multiple address binding for SCTP is not supported yet: we just</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check the first address now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_INET\">PF_INET</a> || <a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#addrp\">addrp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *<a class=\"id\" href=\"#addr4\">addr4</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *<a class=\"id\" href=\"#addr6\">addr6</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#snum\">snum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#node_perm\">node_perm</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_INET\">PF_INET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr4\">addr4</a> = (struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snum\">snum</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#addr4\">addr4</a>-><a class=\"id\" href=\"#sin_port\">sin_port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrp\">addrp</a> = (char *)&amp;<a class=\"id\" href=\"#addr4\">addr4</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr6\">addr6</a> = (struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snum\">snum</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#addr6\">addr6</a>-><a class=\"id\" href=\"#sin6_port\">sin6_port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrp\">addrp</a> = (char *)&amp;<a class=\"id\" href=\"#addr6\">addr6</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#snum\">snum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_get_local_port_range\">inet_get_local_port_range</a>(&amp;<a class=\"id\" href=\"#low\">low</a>, &amp;<a class=\"id\" href=\"#high\">high</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#snum\">snum</a> &lt; <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#PROT_SOCK\">PROT_SOCK</a>, <a class=\"id\" href=\"#low\">low</a>) || <a class=\"id\" href=\"#snum\">snum</a> &gt; <a class=\"id\" href=\"#high\">high</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sel_netport_sid\">sel_netport_sid</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#snum\">snum</a>, &amp;<a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#snum\">snum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#SOCKET__NAME_BIND\">SOCKET__NAME_BIND</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SECCLASS_TCP_SOCKET\">SECCLASS_TCP_SOCKET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_perm\">node_perm</a> = <a class=\"id\" href=\"#TCP_SOCKET__NODE_BIND\">TCP_SOCKET__NODE_BIND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SECCLASS_UDP_SOCKET\">SECCLASS_UDP_SOCKET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_perm\">node_perm</a> = <a class=\"id\" href=\"#UDP_SOCKET__NODE_BIND\">UDP_SOCKET__NODE_BIND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SECCLASS_DCCP_SOCKET\">SECCLASS_DCCP_SOCKET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_perm\">node_perm</a> = <a class=\"id\" href=\"#DCCP_SOCKET__NODE_BIND\">DCCP_SOCKET__NODE_BIND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_perm\">node_perm</a> = <a class=\"id\" href=\"#RAWIP_SOCKET__NODE_BIND\">RAWIP_SOCKET__NODE_BIND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sel_netnode_sid\">sel_netnode_sid</a>(<a class=\"id\" href=\"#addrp\">addrp</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#snum\">snum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#family\">family</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_INET\">PF_INET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v4info\">v4info</a>.<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#addr4\">addr4</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#v6info\">v6info</a>.<a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#addr6\">addr6</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>, <a class=\"id\" href=\"#node_perm\">node_perm</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_connect\">selinux_socket_connect</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#address\">address</a>, int <a class=\"id\" href=\"#addrlen\">addrlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__CONNECT\">SOCKET__CONNECT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If a TCP or DCCP socket, check name_connect permission for the port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> == <a class=\"id\" href=\"#SECCLASS_TCP_SOCKET\">SECCLASS_TCP_SOCKET</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> == <a class=\"id\" href=\"#SECCLASS_DCCP_SOCKET\">SECCLASS_DCCP_SOCKET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *<a class=\"id\" href=\"#addr4\">addr4</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *<a class=\"id\" href=\"#addr6\">addr6</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#snum\">snum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#perm\">perm</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#PF_INET\">PF_INET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr4\">addr4</a> = (struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrlen\">addrlen</a> &lt; sizeof(struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snum\">snum</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#addr4\">addr4</a>-><a class=\"id\" href=\"#sin_port\">sin_port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr6\">addr6</a> = (struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrlen\">addrlen</a> &lt; <a class=\"id\" href=\"#SIN6_LEN_RFC2133\">SIN6_LEN_RFC2133</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snum\">snum</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#addr6\">addr6</a>-><a class=\"id\" href=\"#sin6_port\">sin6_port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sel_netport_sid\">sel_netport_sid</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>, <a class=\"id\" href=\"#snum\">snum</a>, &amp;<a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> = (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> == <a class=\"id\" href=\"#SECCLASS_TCP_SOCKET\">SECCLASS_TCP_SOCKET</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#TCP_SOCKET__NAME_CONNECT\">TCP_SOCKET__NAME_CONNECT</a> : <a class=\"id\" href=\"#DCCP_SOCKET__NAME_CONNECT\">DCCP_SOCKET__NAME_CONNECT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#snum\">snum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>, <a class=\"id\" href=\"#perm\">perm</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_netlbl_socket_connect\">selinux_netlbl_socket_connect</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#address\">address</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_listen\">selinux_socket_listen</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#backlog\">backlog</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__LISTEN\">SOCKET__LISTEN</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_accept\">selinux_socket_accept</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#newsock\">newsock</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#newisec\">newisec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__ACCEPT\">SOCKET__ACCEPT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newisec\">newisec</a> = <a class=\"id\" href=\"#SOCK_INODE\">SOCK_INODE</a>(<a class=\"id\" href=\"#newsock\">newsock</a>)-><a class=\"id\" href=\"#i_security\">i_security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#SOCK_INODE\">SOCK_INODE</a>(<a class=\"id\" href=\"#sock\">sock</a>)-><a class=\"id\" href=\"#i_security\">i_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newisec\">newisec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newisec\">newisec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newisec\">newisec</a>-><a class=\"id\" href=\"#initialized\">initialized</a> = 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_sendmsg\">selinux_socket_sendmsg</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__WRITE\">SOCKET__WRITE</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_recvmsg\">selinux_socket_recvmsg</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__READ\">SOCKET__READ</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_getsockname\">selinux_socket_getsockname</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__GETATTR\">SOCKET__GETATTR</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_getpeername\">selinux_socket_getpeername</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__GETATTR\">SOCKET__GETATTR</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_setsockopt\">selinux_socket_setsockopt</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__SETOPT\">SOCKET__SETOPT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_netlbl_socket_setsockopt\">selinux_netlbl_socket_setsockopt</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_getsockopt\">selinux_socket_getsockopt</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#level\">level</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#optname\">optname</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__GETOPT\">SOCKET__GETOPT</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_shutdown\">selinux_socket_shutdown</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#how\">how</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCKET__SHUTDOWN\">SOCKET__SHUTDOWN</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_unix_stream_connect\">selinux_socket_unix_stream_connect</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#other\">other</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#newsk\">newsk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec_sock\">sksec_sock</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec_other\">sksec_other</a> = <a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec_new\">sksec_new</a> = <a class=\"id\" href=\"#newsk\">newsk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sksec_sock\">sksec_sock</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sksec_other\">sksec_other</a>-><a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sksec_other\">sksec_other</a>-><a class=\"id\" href=\"#sclass\">sclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#UNIX_STREAM_SOCKET__CONNECTTO\">UNIX_STREAM_SOCKET__CONNECTTO</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* server child socket */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec_new\">sksec_new</a>-><a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#sksec_sock\">sksec_sock</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_sid_mls_copy\">security_sid_mls_copy</a>(<a class=\"id\" href=\"#sksec_other\">sksec_other</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sksec_sock\">sksec_sock</a>-><a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#sksec_new\">sksec_new</a>-><a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* connecting socket */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec_sock\">sksec_sock</a>-><a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#sksec_new\">sksec_new</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_unix_may_send\">selinux_socket_unix_may_send</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#other\">other</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#ssec\">ssec</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#osec\">osec</a> = <a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#ssec\">ssec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#osec\">osec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#osec\">osec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>, <a class=\"id\" href=\"#SOCKET__SENDTO\">SOCKET__SENDTO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_inet_sys_rcv_skb\">selinux_inet_sys_rcv_skb</a>(int <a class=\"id\" href=\"#ifindex\">ifindex</a>, char *<a class=\"id\" href=\"#addrp\">addrp</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#peer_sid\">peer_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> *<a class=\"id\" href=\"#ad\">ad</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#if_sid\">if_sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#node_sid\">node_sid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sel_netif_sid\">sel_netif_sid</a>(<a class=\"id\" href=\"#ifindex\">ifindex</a>, &amp;<a class=\"id\" href=\"#if_sid\">if_sid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#peer_sid\">peer_sid</a>, <a class=\"id\" href=\"#if_sid\">if_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#SECCLASS_NETIF\">SECCLASS_NETIF</a>, <a class=\"id\" href=\"#NETIF__INGRESS\">NETIF__INGRESS</a>, <a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sel_netnode_sid\">sel_netnode_sid</a>(<a class=\"id\" href=\"#addrp\">addrp</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#node_sid\">node_sid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#peer_sid\">peer_sid</a>, <a class=\"id\" href=\"#node_sid\">node_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#SECCLASS_NODE\">SECCLASS_NODE</a>, <a class=\"id\" href=\"#NODE__RECVFROM\">NODE__RECVFROM</a>, <a class=\"id\" href=\"#ad\">ad</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_sock_rcv_skb_compat\">selinux_sock_rcv_skb_compat</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#peer_sid\">peer_sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sk_sid\">sk_sid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#addrp\">addrp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#netif\">netif</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#skb_iif\">skb_iif</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_parse_skb\">selinux_parse_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>, &amp;<a class=\"id\" href=\"#addrp\">addrp</a>, 1, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_secmark_enabled\">selinux_secmark_enabled</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sk_sid\">sk_sid</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#secmark\">secmark</a>, <a class=\"id\" href=\"#SECCLASS_PACKET\">SECCLASS_PACKET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#PACKET__RECV\">PACKET__RECV</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_policycap_netpeer\">selinux_policycap_netpeer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_skb_peerlbl_sid\">selinux_skb_peerlbl_sid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#peer_sid\">peer_sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sk_sid\">sk_sid</a>, <a class=\"id\" href=\"#peer_sid\">peer_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#SECCLASS_PEER\">SECCLASS_PEER</a>, <a class=\"id\" href=\"#PEER__RECV\">PEER__RECV</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_err\">selinux_netlbl_err</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#err\">err</a>, 0);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_netlbl_sock_rcv_skb\">selinux_netlbl_sock_rcv_skb</a>(<a class=\"id\" href=\"#sksec\">sksec</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_xfrm_sock_rcv_skb\">selinux_xfrm_sock_rcv_skb</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_sock_rcv_skb\">selinux_socket_sock_rcv_skb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sk_sid\">sk_sid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#addrp\">addrp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#secmark_active\">secmark_active</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> != <a class=\"id\" href=\"#PF_INET\">PF_INET</a> && <a class=\"id\" href=\"#family\">family</a> != <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Handle mapped IPv4 packets arriving via IPv6 sockets */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a> && <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#PF_INET\">PF_INET</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If any sort of compatibility mode is enabled then handoff processing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to the selinux_sock_rcv_skb_compat() function to deal with the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * special handling.  We do this in an attempt to keep this function</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as fast and as clean as possible. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#selinux_policycap_netpeer\">selinux_policycap_netpeer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_sock_rcv_skb_compat\">selinux_sock_rcv_skb_compat</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secmark_active\">secmark_active</a> = <a class=\"id\" href=\"#selinux_secmark_enabled\">selinux_secmark_enabled</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a> = <a class=\"id\" href=\"#netlbl_enabled\">netlbl_enabled</a>() || <a class=\"id\" href=\"#selinux_xfrm_enabled\">selinux_xfrm_enabled</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#secmark_active\">secmark_active</a> && !<a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#netif\">netif</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#skb_iif\">skb_iif</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_parse_skb\">selinux_parse_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>, &amp;<a class=\"id\" href=\"#addrp\">addrp</a>, 1, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#peer_sid\">peer_sid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_skb_peerlbl_sid\">selinux_skb_peerlbl_sid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#peer_sid\">peer_sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_inet_sys_rcv_skb\">selinux_inet_sys_rcv_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#skb_iif\">skb_iif</a>, <a class=\"id\" href=\"#addrp\">addrp</a>, <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#peer_sid\">peer_sid</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_err\">selinux_netlbl_err</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#err\">err</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sk_sid\">sk_sid</a>, <a class=\"id\" href=\"#peer_sid\">peer_sid</a>, <a class=\"id\" href=\"#SECCLASS_PEER\">SECCLASS_PEER</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#PEER__RECV\">PEER__RECV</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_err\">selinux_netlbl_err</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#err\">err</a>, 0);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secmark_active\">secmark_active</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sk_sid\">sk_sid</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#secmark\">secmark</a>, <a class=\"id\" href=\"#SECCLASS_PACKET\">SECCLASS_PACKET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#PACKET__RECV\">PACKET__RECV</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_getpeersec_stream\">selinux_socket_getpeersec_stream</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#scontext\">scontext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontext_len\">scontext_len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> == <a class=\"id\" href=\"#SECCLASS_UNIX_STREAM_SOCKET\">SECCLASS_UNIX_STREAM_SOCKET</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> == <a class=\"id\" href=\"#SECCLASS_TCP_SOCKET\">SECCLASS_TCP_SOCKET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#peer_sid\">peer_sid</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peer_sid\">peer_sid</a> == <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_sid_to_context\">security_sid_to_context</a>(<a class=\"id\" href=\"#peer_sid\">peer_sid</a>, &amp;<a class=\"id\" href=\"#scontext\">scontext</a>, &amp;<a class=\"id\" href=\"#scontext_len\">scontext_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scontext_len\">scontext_len</a> &gt; <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_len\">out_len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#scontext\">scontext</a>, <a class=\"id\" href=\"#scontext_len\">scontext_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<a class=\"id\" href=\"#out_len\">out_len</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#scontext_len\">scontext_len</a>, <a class=\"id\" href=\"#optlen\">optlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#scontext\">scontext</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_socket_getpeersec_dgram\">selinux_socket_getpeersec_dgram</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#secid\">secid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#peer_secid\">peer_secid</a> = <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> && <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#PF_INET\">PF_INET</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#skb\">skb</a> && <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IPV6\">ETH_P_IPV6</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#sock\">sock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a> && <a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_UNIX\">PF_UNIX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_inode_getsecid\">selinux_inode_getsecid</a>(<a class=\"id\" href=\"#SOCK_INODE\">SOCK_INODE</a>(<a class=\"id\" href=\"#sock\">sock</a>), &amp;<a class=\"id\" href=\"#peer_secid\">peer_secid</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_skb_peerlbl_sid\">selinux_skb_peerlbl_sid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#peer_secid\">peer_secid</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#secid\">secid</a> = <a class=\"id\" href=\"#peer_secid\">peer_secid</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peer_secid\">peer_secid</a> == <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_sk_alloc_security\">selinux_sk_alloc_security</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#priority\">priority</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sksec\">sksec</a>), <a class=\"id\" href=\"#priority\">priority</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sksec\">sksec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_sk_security_reset\">selinux_netlbl_sk_security_reset</a>(<a class=\"id\" href=\"#sksec\">sksec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a> = <a class=\"id\" href=\"#sksec\">sksec</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_sk_free_security\">selinux_sk_free_security</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_sk_security_free\">selinux_netlbl_sk_security_free</a>(<a class=\"id\" href=\"#sksec\">sksec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sksec\">sksec</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_sk_clone_security\">selinux_sk_clone_security</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#newsk\">newsk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#newsksec\">newsksec</a> = <a class=\"id\" href=\"#newsk\">newsk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsksec\">newsksec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsksec\">newsksec</a>-><a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#peer_sid\">peer_sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsksec\">newsksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_sk_security_reset\">selinux_netlbl_sk_security_reset</a>(<a class=\"id\" href=\"#newsksec\">newsksec</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_sk_getsecid\">selinux_sk_getsecid</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#secid\">secid</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#secid\">secid</a> = <a class=\"id\" href=\"#SECINITSID_ANY_SOCKET\">SECINITSID_ANY_SOCKET</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#secid\">secid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_sock_graft\">selinux_sock_graft</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#SOCK_INODE\">SOCK_INODE</a>(<a class=\"id\" href=\"#parent\">parent</a>)-><a class=\"id\" href=\"#i_security\">i_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#PF_INET\">PF_INET</a> || <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#PF_UNIX\">PF_UNIX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_inet_conn_request\">selinux_inet_conn_request</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#newsid\">newsid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#peersid\">peersid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* handle mapped IPv4 packets arriving via IPv6 sockets */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a> && <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#PF_INET\">PF_INET</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_skb_peerlbl_sid\">selinux_skb_peerlbl_sid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#peersid\">peersid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peersid\">peersid</a> == <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#secid\">secid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#peer_secid\">peer_secid</a> = <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_sid_mls_copy\">security_sid_mls_copy</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#peersid\">peersid</a>, &amp;<a class=\"id\" href=\"#newsid\">newsid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#secid\">secid</a> = <a class=\"id\" href=\"#newsid\">newsid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#peer_secid\">peer_secid</a> = <a class=\"id\" href=\"#peersid\">peersid</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_netlbl_inet_conn_request\">selinux_netlbl_inet_conn_request</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_inet_csk_clone\">selinux_inet_csk_clone</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#newsk\">newsk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#newsksec\">newsksec</a> = <a class=\"id\" href=\"#newsk\">newsk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsksec\">newsksec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#secid\">secid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsksec\">newsksec</a>-><a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#peer_secid\">peer_secid</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE: Ideally, we should also get the isec-&gt;sid for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   new socket in sync, but we don't have the isec available yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   So we will wait until sock_graft to do it, by which</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   time it will have been created and available. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We don't need to take any sort of lock here as we are the only</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * thread with access to newsksec */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_inet_csk_clone\">selinux_netlbl_inet_csk_clone</a>(<a class=\"id\" href=\"#newsk\">newsk</a>, <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#family\">family</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_inet_conn_established\">selinux_inet_conn_established</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* handle mapped IPv4 packets arriving via IPv6 sockets */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a> && <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#PF_INET\">PF_INET</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#selinux_skb_peerlbl_sid\">selinux_skb_peerlbl_sid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#peer_sid\">peer_sid</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_req_classify_flow\">selinux_req_classify_flow</a>(const struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#secid\">secid</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#secid\">secid</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_tun_dev_create\">selinux_tun_dev_create</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#current_sid\">current_sid</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we aren't taking into account the \"sockcreate\" SID since the socket</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that is being created here is not a socket in the traditional sense,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * instead it is a private sock, accessible only to the kernel, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * representing a wide range of network traffic spanning multiple</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * connections unlike traditional sockets - check the TUN driver to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * get a better understanding of why this socket is special */</span>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_TUN_SOCKET\">SECCLASS_TUN_SOCKET</a>, <a class=\"id\" href=\"#TUN_SOCKET__CREATE\">TUN_SOCKET__CREATE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_tun_dev_post_create\">selinux_tun_dev_post_create</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we don't currently perform any NetLabel based labeling here and it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * isn't clear that we would want to do so anyway; while we could apply</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * labeling without the support of the TUN user the resulting labeled</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * traffic from the other end of the connection would almost certainly</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cause confusion to the TUN user that had no idea network labeling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * protocols were being used */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* see the comments in selinux_tun_dev_create() about why we don't use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the sockcreate SID here */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#current_sid\">current_sid</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#SECCLASS_TUN_SOCKET\">SECCLASS_TUN_SOCKET</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_tun_dev_attach\">selinux_tun_dev_attach</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#current_sid\">current_sid</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_TUN_SOCKET\">SECCLASS_TUN_SOCKET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TUN_SOCKET__RELABELFROM\">TUN_SOCKET__RELABELFROM</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_TUN_SOCKET\">SECCLASS_TUN_SOCKET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TUN_SOCKET__RELABELTO\">TUN_SOCKET__RELABELTO</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_nlmsg_perm\">selinux_nlmsg_perm</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#NLMSG_SPACE\">NLMSG_SPACE</a>(0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = <a class=\"id\" href=\"#nlmsg_hdr\">nlmsg_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_nlmsg_lookup\">selinux_nlmsg_lookup</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>, <a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_type\">nlmsg_type</a>, &amp;<a class=\"id\" href=\"#perm\">perm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log\">audit_log</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_SELINUX_ERR\">AUDIT_SELINUX_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"SELinux:  unrecognized netlink message\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \" type=%hu for sclass=%hu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_type\">nlmsg_type</a>, <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#selinux_enforcing\">selinux_enforcing</a> || <a class=\"id\" href=\"#security_get_allow_unknown\">security_get_allow_unknown</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ignore */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_has_perm\">sock_has_perm</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#perm\">perm</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NETFILTER\">CONFIG_NETFILTER</a>", 
"", 
"static unsigned int <a class=\"id\" href=\"#selinux_ip_forward\">selinux_ip_forward</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#addrp\">addrp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#peer_sid\">peer_sid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#secmark_active\">secmark_active</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#netlbl_active\">netlbl_active</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#selinux_policycap_netpeer\">selinux_policycap_netpeer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secmark_active\">secmark_active</a> = <a class=\"id\" href=\"#selinux_secmark_enabled\">selinux_secmark_enabled</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_active\">netlbl_active</a> = <a class=\"id\" href=\"#netlbl_enabled\">netlbl_enabled</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a> = <a class=\"id\" href=\"#netlbl_active\">netlbl_active</a> || <a class=\"id\" href=\"#selinux_xfrm_enabled\">selinux_xfrm_enabled</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#secmark_active\">secmark_active</a> && !<a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_skb_peerlbl_sid\">selinux_skb_peerlbl_sid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#peer_sid\">peer_sid</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#netif\">netif</a> = <a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_parse_skb\">selinux_parse_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>, &amp;<a class=\"id\" href=\"#addrp\">addrp</a>, 1, <a class=\"id\" href=\"#NULL\">NULL</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#selinux_inet_sys_rcv_skb\">selinux_inet_sys_rcv_skb</a>(<a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#addrp\">addrp</a>, <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#peer_sid\">peer_sid</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_netlbl_err\">selinux_netlbl_err</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#err\">err</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secmark_active\">secmark_active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#peer_sid\">peer_sid</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#secmark\">secmark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#SECCLASS_PACKET\">SECCLASS_PACKET</a>, <a class=\"id\" href=\"#PACKET__FORWARD_IN\">PACKET__FORWARD_IN</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#netlbl_active\">netlbl_active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we do this in the FORWARD path and not the POST_ROUTING</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * path because we want to make sure we apply the necessary</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * labeling before IPsec is applied so we can leverage AH</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * protection */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_netlbl_skbuff_setsid\">selinux_netlbl_skbuff_setsid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#peer_sid\">peer_sid</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#selinux_ipv4_forward\">selinux_ipv4_forward</a>(unsigned int <a class=\"id\" href=\"#hooknum\">hooknum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#in\">in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#out\">out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int (*<a class=\"id\" href=\"#okfn\">okfn</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *))", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_ip_forward\">selinux_ip_forward</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#PF_INET\">PF_INET</a>);", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"static unsigned int <a class=\"id\" href=\"#selinux_ipv6_forward\">selinux_ipv6_forward</a>(unsigned int <a class=\"id\" href=\"#hooknum\">hooknum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#in\">in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#out\">out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int (*<a class=\"id\" href=\"#okfn\">okfn</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *))", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_ip_forward\">selinux_ip_forward</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* IPV6 */</span>", 
"", 
"static unsigned int <a class=\"id\" href=\"#selinux_ip_output\">selinux_ip_output</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netlbl_enabled\">netlbl_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we do this in the LOCAL_OUT path and not the POST_ROUTING path</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because we want to make sure we apply the necessary labeling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before IPsec is applied so we can leverage AH protection */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_KERNEL\">SECINITSID_KERNEL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_netlbl_skbuff_setsid\">selinux_netlbl_skbuff_setsid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#sid\">sid</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#selinux_ipv4_output\">selinux_ipv4_output</a>(unsigned int <a class=\"id\" href=\"#hooknum\">hooknum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#in\">in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#out\">out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#okfn\">okfn</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *))", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_ip_output\">selinux_ip_output</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#PF_INET\">PF_INET</a>);", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#selinux_ip_postroute_compat\">selinux_ip_postroute_compat</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ifindex\">ifindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#addrp\">addrp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#proto\">proto</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#netif\">netif</a> = <a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_parse_skb\">selinux_parse_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>, &amp;<a class=\"id\" href=\"#addrp\">addrp</a>, 0, &amp;<a class=\"id\" href=\"#proto\">proto</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_secmark_enabled\">selinux_secmark_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#secmark\">secmark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#SECCLASS_PACKET\">SECCLASS_PACKET</a>, <a class=\"id\" href=\"#PACKET__SEND\">PACKET__SEND</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_policycap_netpeer\">selinux_policycap_netpeer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_xfrm_postroute_last\">selinux_xfrm_postroute_last</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#proto\">proto</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#selinux_ip_postroute\">selinux_ip_postroute</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#secmark_perm\">secmark_perm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#peer_sid\">peer_sid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#addrp\">addrp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#secmark_active\">secmark_active</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If any sort of compatibility mode is enabled then handoff processing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to the selinux_ip_postroute_compat() function to deal with the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * special handling.  We do this in an attempt to keep this function</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as fast and as clean as possible. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#selinux_policycap_netpeer\">selinux_policycap_netpeer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_ip_postroute_compat\">selinux_ip_postroute_compat</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XFRM\">CONFIG_XFRM</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* If skb-&gt;dst-&gt;xfrm is non-NULL then the packet is undergoing an IPsec</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * packet transformation so allow the packet to pass without any checks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since we'll have another chance to perform access control checks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when the packet is on it's final way out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: there appear to be some IPv6 multicast cases where skb-&gt;dst</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *       is NULL, in this case go ahead and apply access control. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>) != <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#xfrm\">xfrm</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secmark_active\">secmark_active</a> = <a class=\"id\" href=\"#selinux_secmark_enabled\">selinux_secmark_enabled</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a> = <a class=\"id\" href=\"#netlbl_enabled\">netlbl_enabled</a>() || <a class=\"id\" href=\"#selinux_xfrm_enabled\">selinux_xfrm_enabled</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#secmark_active\">secmark_active</a> && !<a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if the packet is being forwarded then get the peer label from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * packet itself; otherwise check to see if it is from a local</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * application or the kernel, if from an application get the peer label</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from the sending socket, otherwise use the kernel's sid */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PF_INET\">PF_INET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPSKB_FORWARDED\">IPSKB_FORWARDED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secmark_perm\">secmark_perm</a> = <a class=\"id\" href=\"#PACKET__FORWARD_OUT\">PACKET__FORWARD_OUT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secmark_perm\">secmark_perm</a> = <a class=\"id\" href=\"#PACKET__SEND\">PACKET__SEND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IP6SKB_FORWARDED\">IP6SKB_FORWARDED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secmark_perm\">secmark_perm</a> = <a class=\"id\" href=\"#PACKET__FORWARD_OUT\">PACKET__FORWARD_OUT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secmark_perm\">secmark_perm</a> = <a class=\"id\" href=\"#PACKET__SEND\">PACKET__SEND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#secmark_perm\">secmark_perm</a> == <a class=\"id\" href=\"#PACKET__FORWARD_OUT\">PACKET__FORWARD_OUT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_skb_peerlbl_sid\">selinux_skb_peerlbl_sid</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#peer_sid\">peer_sid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#SECINITSID_KERNEL\">SECINITSID_KERNEL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer_sid\">peer_sid</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secmark_perm\">secmark_perm</a> = <a class=\"id\" href=\"#PACKET__SEND\">PACKET__SEND</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#NET\">NET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#netif\">netif</a> = <a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#selinux_parse_skb\">selinux_parse_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>, &amp;<a class=\"id\" href=\"#addrp\">addrp</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secmark_active\">secmark_active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#peer_sid\">peer_sid</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#secmark\">secmark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#SECCLASS_PACKET\">SECCLASS_PACKET</a>, <a class=\"id\" href=\"#secmark_perm\">secmark_perm</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peerlbl_active\">peerlbl_active</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#if_sid\">if_sid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#node_sid\">node_sid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sel_netif_sid\">sel_netif_sid</a>(<a class=\"id\" href=\"#ifindex\">ifindex</a>, &amp;<a class=\"id\" href=\"#if_sid\">if_sid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#peer_sid\">peer_sid</a>, <a class=\"id\" href=\"#if_sid\">if_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#SECCLASS_NETIF\">SECCLASS_NETIF</a>, <a class=\"id\" href=\"#NETIF__EGRESS\">NETIF__EGRESS</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sel_netnode_sid\">sel_netnode_sid</a>(<a class=\"id\" href=\"#addrp\">addrp</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#node_sid\">node_sid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#peer_sid\">peer_sid</a>, <a class=\"id\" href=\"#node_sid\">node_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#SECCLASS_NODE\">SECCLASS_NODE</a>, <a class=\"id\" href=\"#NODE__SENDTO\">NODE__SENDTO</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#selinux_ipv4_postroute\">selinux_ipv4_postroute</a>(unsigned int <a class=\"id\" href=\"#hooknum\">hooknum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#in\">in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#out\">out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int (*<a class=\"id\" href=\"#okfn\">okfn</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *))", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_ip_postroute\">selinux_ip_postroute</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#out\">out</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#PF_INET\">PF_INET</a>);", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"static unsigned int <a class=\"id\" href=\"#selinux_ipv6_postroute\">selinux_ipv6_postroute</a>(unsigned int <a class=\"id\" href=\"#hooknum\">hooknum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#in\">in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#out\">out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int (*<a class=\"id\" href=\"#okfn\">okfn</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *))", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_ip_postroute\">selinux_ip_postroute</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#out\">out</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* IPV6 */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_NETFILTER */</span>", 
"", 
"static int <a class=\"id\" href=\"#selinux_netlink_send\">selinux_netlink_send</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#cap_netlink_send\">cap_netlink_send</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#selinux_nlmsg_perm\">selinux_nlmsg_perm</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_netlink_recv\">selinux_netlink_recv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#capability\">capability</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#cap_netlink_recv\">cap_netlink_recv</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#capability\">capability</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#CAP\">CAP</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#capability\">capability</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#SECCLASS_CAPABILITY\">SECCLASS_CAPABILITY</a>, <a class=\"id\" href=\"#CAP_TO_MASK\">CAP_TO_MASK</a>(<a class=\"id\" href=\"#capability\">capability</a>), &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipc_alloc_security\">ipc_alloc_security</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#perm\">perm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#sclass\">sclass</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_security_struct\">ipc_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#ipc_security_struct\">ipc_security_struct</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#isec\">isec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#task_sid\">task_sid</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#sclass\">sclass</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a>-><a class=\"id\" href=\"#security\">security</a> = <a class=\"id\" href=\"#isec\">isec</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ipc_free_security\">ipc_free_security</a>(struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#perm\">perm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_security_struct\">ipc_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#perm\">perm</a>-><a class=\"id\" href=\"#security\">security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a>-><a class=\"id\" href=\"#security\">security</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#isec\">isec</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#msg_msg_alloc_security\">msg_msg_alloc_security</a>(struct <a class=\"id\" href=\"#msg_msg\">msg_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_security_struct\">msg_security_struct</a> *<a class=\"id\" href=\"#msec\">msec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msec\">msec</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#msg_security_struct\">msg_security_struct</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#msec\">msec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msec\">msec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#security\">security</a> = <a class=\"id\" href=\"#msec\">msec</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#msg_msg_free_security\">msg_msg_free_security</a>(struct <a class=\"id\" href=\"#msg_msg\">msg_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_security_struct\">msg_security_struct</a> *<a class=\"id\" href=\"#msec\">msec</a> = <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#security\">security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#security\">security</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#msec\">msec</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipc_has_perm\">ipc_has_perm</a>(struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a> *<a class=\"id\" href=\"#ipc_perms\">ipc_perms</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#perms\">perms</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_security_struct\">ipc_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#current_sid\">current_sid</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#ipc_perms\">ipc_perms</a>-><a class=\"id\" href=\"#security\">security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#IPC\">IPC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#ipc_id\">ipc_id</a> = <a class=\"id\" href=\"#ipc_perms\">ipc_perms</a>-><a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>, <a class=\"id\" href=\"#perms\">perms</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_msg_msg_alloc_security\">selinux_msg_msg_alloc_security</a>(struct <a class=\"id\" href=\"#msg_msg\">msg_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#msg_msg_alloc_security\">msg_msg_alloc_security</a>(<a class=\"id\" href=\"#msg\">msg</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_msg_msg_free_security\">selinux_msg_msg_free_security</a>(struct <a class=\"id\" href=\"#msg_msg\">msg_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg_msg_free_security\">msg_msg_free_security</a>(<a class=\"id\" href=\"#msg\">msg</a>);", 
"}", 
"", 
"<span class=\"comment\">/* message queue security operations */</span>", 
"static int <a class=\"id\" href=\"#selinux_msg_queue_alloc_security\">selinux_msg_queue_alloc_security</a>(struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_security_struct\">ipc_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#current_sid\">current_sid</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ipc_alloc_security\">ipc_alloc_security</a>(<a class=\"id\" href=\"#current\">current</a>, &amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>, <a class=\"id\" href=\"#SECCLASS_MSGQ\">SECCLASS_MSGQ</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#security\">security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#IPC\">IPC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#ipc_id\">ipc_id</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_MSGQ\">SECCLASS_MSGQ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#MSGQ__CREATE\">MSGQ__CREATE</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipc_free_security\">ipc_free_security</a>(&amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#selinux_msg_queue_free_security\">selinux_msg_queue_free_security</a>(struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipc_free_security\">ipc_free_security</a>(&amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_msg_queue_associate\">selinux_msg_queue_associate</a>(struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>, int <a class=\"id\" href=\"#msqflg\">msqflg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_security_struct\">ipc_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#current_sid\">current_sid</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#security\">security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#IPC\">IPC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#ipc_id\">ipc_id</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_MSGQ\">SECCLASS_MSGQ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#MSGQ__ASSOCIATE\">MSGQ__ASSOCIATE</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_msg_queue_msgctl\">selinux_msg_queue_msgctl</a>(struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#perms\">perms</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_INFO\">IPC_INFO</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSG_INFO\">MSG_INFO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No specific object, just general system-wide information. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#task_has_system\">task_has_system</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#SYSTEM__IPC_INFO\">SYSTEM__IPC_INFO</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_STAT\">IPC_STAT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSG_STAT\">MSG_STAT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perms\">perms</a> = <a class=\"id\" href=\"#MSGQ__GETATTR\">MSGQ__GETATTR</a> | <a class=\"id\" href=\"#MSGQ__ASSOCIATE\">MSGQ__ASSOCIATE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_SET\">IPC_SET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perms\">perms</a> = <a class=\"id\" href=\"#MSGQ__SETATTR\">MSGQ__SETATTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPC_RMID\">IPC_RMID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perms\">perms</a> = <a class=\"id\" href=\"#MSGQ__DESTROY\">MSGQ__DESTROY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipc_has_perm\">ipc_has_perm</a>(&amp;<a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>, <a class=\"id\" href=\"#perms\">perms</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_msg_queue_msgsnd\">selinux_msg_queue_msgsnd</a>(struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>, struct <a class=\"id\" href=\"#msg_msg\">msg_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>, int <a class=\"id\" href=\"#msqflg\">msqflg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_security_struct\">ipc_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_security_struct\">msg_security_struct</a> *<a class=\"id\" href=\"#msec\">msec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#current_sid\">current_sid</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#security\">security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msec\">msec</a> = <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#security\">security</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First time through, need to assign label to the message</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#msec\">msec</a>-><a class=\"id\" href=\"#sid\">sid</a> == <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Compute new sid based on current process and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * message queue this message will be stored in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_transition_sid\">security_transition_sid</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_MSG\">SECCLASS_MSG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#msec\">msec</a>-><a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#COMMON_AUDIT_DATA_INIT\">COMMON_AUDIT_DATA_INIT</a>(&amp;<a class=\"id\" href=\"#ad\">ad</a>, <a class=\"id\" href=\"#IPC\">IPC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ad\">ad</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#ipc_id\">ipc_id</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Can this process write to the queue? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_MSGQ\">SECCLASS_MSGQ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#MSGQ__WRITE\">MSGQ__WRITE</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Can this process send the message */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#msec\">msec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_MSG\">SECCLASS_MSG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#MSG__SEND\">MSG__SEND</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Can the message be put in the queue? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#msec\">msec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_MSGQ\">SECCLASS_MSGQ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#MSGQ__ENQUEUE\">MSGQ__ENQUEUE</a>, &amp;<a class=\"id\" href=\"#ad\">ad</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#selinux_msg_queue_msgrcv\">selinux_msg_queue_msgrcv</a>(struct <a class=\"id\" href=\"#msg_queue\">msg_queue</a> *<a class=\"id\" href=\"#msq\">msq</a>, struct <a class=\"id\" href=\"#msg_msg\">msg_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    long <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_security_struct\">ipc_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msg_security_struct\">msg_security_struct</a> *<a class=\"id\" href=\"#msec\">msec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#ad\">ad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#task_sid\">task_sid</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#msq\">msq</a>-><a class=\"id\" href=\"#q_perm\">q_perm</a>.<a class=\"id\" href=\"#security\">security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msec\">msec</a> = <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#security\">security</a>;", 
];
xr_frag_insert('l/d5/c102e1447a2aa299987344ae142c67c5944451.xr', __xr_tmp);
