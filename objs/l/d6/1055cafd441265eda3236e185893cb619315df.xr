var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/include/linux/ext3_jbd.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by Stephen C. Tweedie &lt;sct@redhat.com&gt;, 1999</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 1998--1999 Red Hat corp --- All Rights Reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is part of the Linux kernel and is made available under</span>", 
"<span class=\"comment\"> * the terms of the GNU General Public License, version 2, or at your</span>", 
"<span class=\"comment\"> * option, any later version, incorporated herein by reference.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Ext3-specific journaling extensions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_EXT3_JBD_H\">_LINUX_EXT3_JBD_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_EXT3_JBD_H\">_LINUX_EXT3_JBD_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd\">jbd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ext3_fs\">ext3_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_JOURNAL\">EXT3_JOURNAL</a>(<a class=\"id\" href=\"#inode\">inode</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>((<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>)", 
"", 
"<span class=\"comment\">/* Define the number of blocks we need to account to a transaction to</span>", 
"<span class=\"comment\"> * modify one block of data.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We may have to touch one inode, one bitmap buffer, up to three</span>", 
"<span class=\"comment\"> * indirection blocks, the group and superblock summaries, and the data</span>", 
"<span class=\"comment\"> * block to complete the transaction.  */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_SINGLEDATA_TRANS_BLOCKS\">EXT3_SINGLEDATA_TRANS_BLOCKS</a><span class=\"ts\"/>8U", 
"", 
"<span class=\"comment\">/* Extended attribute operations touch at most two data buffers,</span>", 
"<span class=\"comment\"> * two bitmap buffers, and two group summaries, in addition to the inode</span>", 
"<span class=\"comment\"> * and the superblock, which are already accounted for. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_XATTR_TRANS_BLOCKS\">EXT3_XATTR_TRANS_BLOCKS</a><span class=\"ts\"/><span class=\"ts\"/>6U", 
"", 
"<span class=\"comment\">/* Define the minimum size for a transaction which modifies data.  This</span>", 
"<span class=\"comment\"> * needs to take into account the fact that we may end up modifying two</span>", 
"<span class=\"comment\"> * quota files too (one for the group, one for the user quota).  The</span>", 
"<span class=\"comment\"> * superblock only gets updated once, of course, so don't bother</span>", 
"<span class=\"comment\"> * counting that again for the quota updates. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_DATA_TRANS_BLOCKS\">EXT3_DATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT3_SINGLEDATA_TRANS_BLOCKS\">EXT3_SINGLEDATA_TRANS_BLOCKS</a> + \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT3_XATTR_TRANS_BLOCKS\">EXT3_XATTR_TRANS_BLOCKS</a> - 2 + \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT3_MAXQUOTAS_TRANS_BLOCKS\">EXT3_MAXQUOTAS_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"", 
"<span class=\"comment\">/* Delete operations potentially hit one directory's namespace plus an</span>", 
"<span class=\"comment\"> * entire inode, plus arbitrary amounts of bitmap/indirection data.  Be</span>", 
"<span class=\"comment\"> * generous.  We can grow the delete transaction later if necessary. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_DELETE_TRANS_BLOCKS\">EXT3_DELETE_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>)   (<a class=\"id\" href=\"#EXT3_MAXQUOTAS_TRANS_BLOCKS\">EXT3_MAXQUOTAS_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) + 64)", 
"", 
"<span class=\"comment\">/* Define an arbitrary limit for the amount of data we will anticipate</span>", 
"<span class=\"comment\"> * writing to any given transaction.  For unbounded transactions such as</span>", 
"<span class=\"comment\"> * write(2) and truncate(2) we can write more than this, but we always</span>", 
"<span class=\"comment\"> * start off at the maximum transaction size and grow the transaction</span>", 
"<span class=\"comment\"> * optimistically as we go. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_MAX_TRANS_DATA\">EXT3_MAX_TRANS_DATA</a><span class=\"ts\"/><span class=\"ts\"/>64U", 
"", 
"<span class=\"comment\">/* We break up a large truncate or write transaction once the handle's</span>", 
"<span class=\"comment\"> * buffer credits gets this low, we need either to extend the</span>", 
"<span class=\"comment\"> * transaction or to start a new one.  Reserve enough space here for</span>", 
"<span class=\"comment\"> * inode, bitmap, superblock, group and indirection updates for at least</span>", 
"<span class=\"comment\"> * one block, plus two quota updates.  Quota allocations are not</span>", 
"<span class=\"comment\"> * needed. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_RESERVE_TRANS_BLOCKS\">EXT3_RESERVE_TRANS_BLOCKS</a><span class=\"ts\"/>12U", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_INDEX_EXTRA_TRANS_BLOCKS\">EXT3_INDEX_EXTRA_TRANS_BLOCKS</a><span class=\"ts\"/>8", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"comment\">/* Amount of blocks needed for quota update - we know that the structure was</span>", 
"<span class=\"comment\"> * allocated so we need to update only inode+data */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_QUOTA_TRANS_BLOCKS\">EXT3_QUOTA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>) ? 2 : 0)", 
"<span class=\"comment\">/* Amount of blocks needed for quota insert/delete - we do some block writes</span>", 
"<span class=\"comment\"> * but inode, sb and group updates are done only once */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_QUOTA_INIT_BLOCKS\">EXT3_QUOTA_INIT_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>) ? (<a class=\"id\" href=\"#DQUOT_INIT_ALLOC\">DQUOT_INIT_ALLOC</a>*\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT3_SINGLEDATA_TRANS_BLOCKS\">EXT3_SINGLEDATA_TRANS_BLOCKS</a>-3)+3+<a class=\"id\" href=\"#DQUOT_INIT_REWRITE\">DQUOT_INIT_REWRITE</a>) : 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_QUOTA_DEL_BLOCKS\">EXT3_QUOTA_DEL_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>) ? (<a class=\"id\" href=\"#DQUOT_DEL_ALLOC\">DQUOT_DEL_ALLOC</a>*\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT3_SINGLEDATA_TRANS_BLOCKS\">EXT3_SINGLEDATA_TRANS_BLOCKS</a>-3)+3+<a class=\"id\" href=\"#DQUOT_DEL_REWRITE\">DQUOT_DEL_REWRITE</a>) : 0)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_QUOTA_TRANS_BLOCKS\">EXT3_QUOTA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_QUOTA_INIT_BLOCKS\">EXT3_QUOTA_INIT_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_QUOTA_DEL_BLOCKS\">EXT3_QUOTA_DEL_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_MAXQUOTAS_TRANS_BLOCKS\">EXT3_MAXQUOTAS_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>*<a class=\"id\" href=\"#EXT3_QUOTA_TRANS_BLOCKS\">EXT3_QUOTA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_MAXQUOTAS_INIT_BLOCKS\">EXT3_MAXQUOTAS_INIT_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>*<a class=\"id\" href=\"#EXT3_QUOTA_INIT_BLOCKS\">EXT3_QUOTA_INIT_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_MAXQUOTAS_DEL_BLOCKS\">EXT3_MAXQUOTAS_DEL_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>*<a class=\"id\" href=\"#EXT3_QUOTA_DEL_BLOCKS\">EXT3_QUOTA_DEL_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"", 
"int", 
"<a class=\"id\" href=\"#ext3_mark_iloc_dirty\">ext3_mark_iloc_dirty</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext3_iloc\">ext3_iloc</a> *<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * On success, We end up with an outstanding reference count against</span>", 
"<span class=\"comment\"> * iloc-&gt;bh.  This _must_ be cleaned up later.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ext3_reserve_inode_write\">ext3_reserve_inode_write</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_iloc\">ext3_iloc</a> *<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"", 
"int <a class=\"id\" href=\"#ext3_mark_inode_dirty\">ext3_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wrapper functions with which ext3 calls into JBD.  The intent here is</span>", 
"<span class=\"comment\"> * to allow these to be turned into appropriate stubs so ext3 can control</span>", 
"<span class=\"comment\"> * ext2 filesystems, so ext2+ext3 systems only nee one fs.  This work hasn't</span>", 
"<span class=\"comment\"> * been done yet.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext3_journal_release_buffer\">ext3_journal_release_buffer</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_release_buffer\">journal_release_buffer</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext3_journal_abort_handle\">ext3_journal_abort_handle</a>(const char *<a class=\"id\" href=\"#caller\">caller</a>, const char *<a class=\"id\" href=\"#err_fn\">err_fn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#err\">err</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext3_journal_get_undo_access\">__ext3_journal_get_undo_access</a>(const char *<a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext3_journal_get_write_access\">__ext3_journal_get_write_access</a>(const char *<a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext3_journal_forget\">__ext3_journal_forget</a>(const char *<a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext3_journal_revoke\">__ext3_journal_revoke</a>(const char *<a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#blocknr\">blocknr</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext3_journal_get_create_access\">__ext3_journal_get_create_access</a>(const char *<a class=\"id\" href=\"#where\">where</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext3_journal_dirty_metadata\">__ext3_journal_dirty_metadata</a>(const char *<a class=\"id\" href=\"#where\">where</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext3_journal_get_undo_access\">ext3_journal_get_undo_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext3_journal_get_undo_access\">__ext3_journal_get_undo_access</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, (<a class=\"id\" href=\"#handle\">handle</a>), (<a class=\"id\" href=\"#bh\">bh</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext3_journal_get_write_access\">ext3_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext3_journal_get_write_access\">__ext3_journal_get_write_access</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, (<a class=\"id\" href=\"#handle\">handle</a>), (<a class=\"id\" href=\"#bh\">bh</a>))", 
];
xr_frag_insert('l/d6/1055cafd441265eda3236e185893cb619315df.xr', __xr_tmp);
