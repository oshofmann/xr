var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * audio.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 Ralph  Metzler &lt;ralph@convergence.de&gt;</span>", 
"<span class=\"comment\"> *                  &amp; Marcus Metzler &lt;marcus@convergence.de&gt;</span>", 
"<span class=\"comment\"> *                    for convergence integrated media GmbH</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Lesser Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version 2.1</span>", 
"<span class=\"comment\"> * of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU Lesser General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_DVBAUDIO_H_\">_DVBAUDIO_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_DVBAUDIO_H_\">_DVBAUDIO_H_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"typedef enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_SOURCE_DEMUX\">AUDIO_SOURCE_DEMUX</a>, <span class=\"comment\">/* Select the demux as the main source */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_SOURCE_MEMORY\">AUDIO_SOURCE_MEMORY</a> <span class=\"comment\">/* Select internal memory as the main source */</span>", 
"} <a class=\"id\" href=\"#audio_stream_source_t\">audio_stream_source_t</a>;", 
"", 
"", 
"typedef enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_STOPPED\">AUDIO_STOPPED</a>,      <span class=\"comment\">/* Device is stopped */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_PLAYING\">AUDIO_PLAYING</a>,      <span class=\"comment\">/* Device is currently playing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_PAUSED\">AUDIO_PAUSED</a>        <span class=\"comment\">/* Device is paused */</span>", 
"} <a class=\"id\" href=\"#audio_play_state_t\">audio_play_state_t</a>;", 
"", 
"", 
"typedef enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_STEREO\">AUDIO_STEREO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_MONO_LEFT\">AUDIO_MONO_LEFT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_MONO_RIGHT\">AUDIO_MONO_RIGHT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_MONO\">AUDIO_MONO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AUDIO_STEREO_SWAPPED\">AUDIO_STEREO_SWAPPED</a>", 
"} <a class=\"id\" href=\"#audio_channel_select_t\">audio_channel_select_t</a>;", 
"", 
"", 
"typedef struct <a class=\"id\" href=\"#audio_mixer\">audio_mixer</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#volume_left\">volume_left</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#volume_right\">volume_right</a>;", 
"  <span class=\"comment\">// what else do we need? bass, pass-through, ...</span>", 
"} <a class=\"id\" href=\"#audio_mixer_t\">audio_mixer_t</a>;", 
"", 
"", 
"typedef struct <a class=\"id\" href=\"#audio_status\">audio_status</a> {", 
"<span class=\"ts\"/>int                    <a class=\"id\" href=\"#AV_sync_state\">AV_sync_state</a>;  <span class=\"comment\">/* sync audio and video? */</span>", 
"<span class=\"ts\"/>int                    <a class=\"id\" href=\"#mute_state\">mute_state</a>;     <span class=\"comment\">/* audio is muted */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audio_play_state_t\">audio_play_state_t</a>     <a class=\"id\" href=\"#play_state\">play_state</a>;     <span class=\"comment\">/* current playback state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audio_stream_source_t\">audio_stream_source_t</a>  <a class=\"id\" href=\"#stream_source\">stream_source</a>;  <span class=\"comment\">/* current stream source */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audio_channel_select_t\">audio_channel_select_t</a> <a class=\"id\" href=\"#channel_select\">channel_select</a>; <span class=\"comment\">/* currently selected channel */</span>", 
"<span class=\"ts\"/>int                    <a class=\"id\" href=\"#bypass_mode\">bypass_mode</a>;    <span class=\"comment\">/* pass on audio data to */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audio_mixer_t\">audio_mixer_t</a><span class=\"ts\"/>       <a class=\"id\" href=\"#mixer_state\">mixer_state</a>;    <span class=\"comment\">/* current mixer state */</span>", 
"} <a class=\"id\" href=\"#audio_status_t\">audio_status_t</a>;                              <span class=\"comment\">/* separate decoder hardware */</span>", 
"", 
"", 
"typedef", 
"struct <a class=\"id\" href=\"#audio_karaoke\">audio_karaoke</a>{  <span class=\"comment\">/* if Vocal1 or Vocal2 are non-zero, they get mixed  */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#vocal1\">vocal1</a>;    <span class=\"comment\">/* into left and right t at 70% each */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#vocal2\">vocal2</a>;    <span class=\"comment\">/* if both, Vocal1 and Vocal2 are non-zero, Vocal1 gets*/</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#melody\">melody</a>;    <span class=\"comment\">/* mixed into the left channel and */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>       <span class=\"comment\">/* Vocal2 into the right channel at 100% each. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>       <span class=\"comment\">/* if Melody is non-zero, the melody channel gets mixed*/</span>", 
"} <a class=\"id\" href=\"#audio_karaoke_t\">audio_karaoke_t</a>;     <span class=\"comment\">/* into left and right  */</span>", 
"", 
"", 
"typedef <a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#audio_attributes_t\">audio_attributes_t</a>;", 
"<span class=\"comment\">/*   bits: descr. */</span>", 
"<span class=\"comment\">/*   15-13 audio coding mode (0=ac3, 2=mpeg1, 3=mpeg2ext, 4=LPCM, 6=DTS, */</span>", 
"<span class=\"comment\">/*   12    multichannel extension */</span>", 
"<span class=\"comment\">/*   11-10 audio type (0=not spec, 1=language included) */</span>", 
"<span class=\"comment\">/*    9- 8 audio application mode (0=not spec, 1=karaoke, 2=surround) */</span>", 
"<span class=\"comment\">/*    7- 6 Quantization / DRC (mpeg audio: 1=DRC exists)(lpcm: 0=16bit,  */</span>", 
"<span class=\"comment\">/*    5- 4 Sample frequency fs (0=48kHz, 1=96kHz) */</span>", 
"<span class=\"comment\">/*    2- 0 number of audio channels (n+1 channels) */</span>", 
"", 
"", 
"<span class=\"comment\">/* for GET_CAPABILITIES and SET_FORMAT, the latter should only set one bit */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CAP_DTS\">AUDIO_CAP_DTS</a>    1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CAP_LPCM\">AUDIO_CAP_LPCM</a>   2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CAP_MP1\">AUDIO_CAP_MP1</a>    4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CAP_MP2\">AUDIO_CAP_MP2</a>    8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CAP_MP3\">AUDIO_CAP_MP3</a>   16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CAP_AAC\">AUDIO_CAP_AAC</a>   32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CAP_OGG\">AUDIO_CAP_OGG</a>   64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CAP_SDDS\">AUDIO_CAP_SDDS</a> 128", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CAP_AC3\">AUDIO_CAP_AC3</a>  256", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_STOP\">AUDIO_STOP</a>                 <a class=\"id\" href=\"#_IO\">_IO</a>('o', 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_PLAY\">AUDIO_PLAY</a>                 <a class=\"id\" href=\"#_IO\">_IO</a>('o', 2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_PAUSE\">AUDIO_PAUSE</a>                <a class=\"id\" href=\"#_IO\">_IO</a>('o', 3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CONTINUE\">AUDIO_CONTINUE</a>             <a class=\"id\" href=\"#_IO\">_IO</a>('o', 4)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SELECT_SOURCE\">AUDIO_SELECT_SOURCE</a>        <a class=\"id\" href=\"#_IO\">_IO</a>('o', 5)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SET_MUTE\">AUDIO_SET_MUTE</a>             <a class=\"id\" href=\"#_IO\">_IO</a>('o', 6)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SET_AV_SYNC\">AUDIO_SET_AV_SYNC</a>          <a class=\"id\" href=\"#_IO\">_IO</a>('o', 7)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SET_BYPASS_MODE\">AUDIO_SET_BYPASS_MODE</a>      <a class=\"id\" href=\"#_IO\">_IO</a>('o', 8)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CHANNEL_SELECT\">AUDIO_CHANNEL_SELECT</a>       <a class=\"id\" href=\"#_IO\">_IO</a>('o', 9)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_GET_STATUS\">AUDIO_GET_STATUS</a>           <a class=\"id\" href=\"#_IOR\">_IOR</a>('o', 10, <a class=\"id\" href=\"#audio_status_t\">audio_status_t</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_GET_CAPABILITIES\">AUDIO_GET_CAPABILITIES</a>     <a class=\"id\" href=\"#_IOR\">_IOR</a>('o', 11, unsigned int)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_CLEAR_BUFFER\">AUDIO_CLEAR_BUFFER</a>         <a class=\"id\" href=\"#_IO\">_IO</a>('o',  12)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SET_ID\">AUDIO_SET_ID</a>               <a class=\"id\" href=\"#_IO\">_IO</a>('o', 13)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SET_MIXER\">AUDIO_SET_MIXER</a>            <a class=\"id\" href=\"#_IOW\">_IOW</a>('o', 14, <a class=\"id\" href=\"#audio_mixer_t\">audio_mixer_t</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SET_STREAMTYPE\">AUDIO_SET_STREAMTYPE</a>       <a class=\"id\" href=\"#_IO\">_IO</a>('o', 15)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SET_EXT_ID\">AUDIO_SET_EXT_ID</a>           <a class=\"id\" href=\"#_IO\">_IO</a>('o', 16)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SET_ATTRIBUTES\">AUDIO_SET_ATTRIBUTES</a>       <a class=\"id\" href=\"#_IOW\">_IOW</a>('o', 17, <a class=\"id\" href=\"#audio_attributes_t\">audio_attributes_t</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_SET_KARAOKE\">AUDIO_SET_KARAOKE</a>          <a class=\"id\" href=\"#_IOW\">_IOW</a>('o', 18, <a class=\"id\" href=\"#audio_karaoke_t\">audio_karaoke_t</a>)", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * AUDIO_GET_PTS</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Read the 33 bit presentation time stamp as defined</span>", 
"<span class=\"comment\"> * in ITU T-REC-H.222.0 / ISO/IEC 13818-1.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The PTS should belong to the currently played</span>", 
"<span class=\"comment\"> * frame if possible, but may also be a value close to it</span>", 
"<span class=\"comment\"> * like the PTS of the last decoded frame or the last PTS</span>", 
"<span class=\"comment\"> * extracted by the PES parser.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_GET_PTS\">AUDIO_GET_PTS</a>              <a class=\"id\" href=\"#_IOR\">_IOR</a>('o', 19, <a class=\"id\" href=\"#__u64\">__u64</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AUDIO_BILINGUAL_CHANNEL_SELECT\">AUDIO_BILINGUAL_CHANNEL_SELECT</a> <a class=\"id\" href=\"#_IO\">_IO</a>('o', 20)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _DVBAUDIO_H_ */</span>", 
];
xr_frag_insert('l/d6/a32a771a435f91ac3e5901cea09d5a46388643.xr', __xr_tmp);
