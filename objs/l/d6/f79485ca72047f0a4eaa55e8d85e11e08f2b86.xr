var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Copyright (C) 2000-2002<span class=\"ts\"/>Andre Hedrick &lt;andre@linux-ide.org&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2003<span class=\"ts\"/><span class=\"ts\"/>Red Hat</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#genhd\">genhd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkpg\">blkpg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ide\">ide</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nmi\">nmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#byteorder\">byteorder</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"void <a class=\"id\" href=\"#SELECT_MASK\">SELECT_MASK</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, int <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ide_port_ops\">ide_port_ops</a> *<a class=\"id\" href=\"#port_ops\">port_ops</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#port_ops\">port_ops</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port_ops\">port_ops</a> && <a class=\"id\" href=\"#port_ops\">port_ops</a>-><a class=\"id\" href=\"#maskproc\">maskproc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port_ops\">port_ops</a>-><a class=\"id\" href=\"#maskproc\">maskproc</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ide_read_error\">ide_read_error</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ide_taskfile\">ide_taskfile</a> <a class=\"id\" href=\"#tf\">tf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#tf_read\">tf_read</a>(<a class=\"id\" href=\"#drive\">drive</a>, &amp;<a class=\"id\" href=\"#tf\">tf</a>, <a class=\"id\" href=\"#IDE_VALID_ERROR\">IDE_VALID_ERROR</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ide_read_error\">ide_read_error</a>);", 
"", 
"void <a class=\"id\" href=\"#ide_fix_driveid\">ide_fix_driveid</a>(<a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LITTLE_ENDIAN\">__LITTLE_ENDIAN</a>", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__BIG_ENDIAN\">__BIG_ENDIAN</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 256; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#__le16_to_cpu\">__le16_to_cpu</a>(<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"# else", 
"#  <a class=\"id\" href=\"#error\">error</a> \"Please fix <asm/byteorder.h>\"", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ide_fixstring() cleans up and (optionally) byte-swaps a text string,</span>", 
"<span class=\"comment\"> * removing leading/trailing blanks and compressing internal blanks.</span>", 
"<span class=\"comment\"> * It is primarily used to tidy up the model name/number fields as</span>", 
"<span class=\"comment\"> * returned by the ATA_CMD_ID_ATA[PI] commands.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ide_fixstring\">ide_fixstring</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#s\">s</a>, const int <a class=\"id\" href=\"#bytecount\">bytecount</a>, const int <a class=\"id\" href=\"#byteswap\">byteswap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#end\">end</a> = &amp;<a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#bytecount\">bytecount</a> &amp; ~1]; <span class=\"comment\">/* bytecount must be even */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#byteswap\">byteswap</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* convert from big-endian to host byte order */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#s\">s</a> ; <a class=\"id\" href=\"#p\">p</a> != <a class=\"id\" href=\"#end\">end</a> ; <a class=\"id\" href=\"#p\">p</a> += 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#be16_to_cpus\">be16_to_cpus</a>((<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* strip leading blanks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#s\">s</a> != <a class=\"id\" href=\"#end\">end</a> && *<a class=\"id\" href=\"#s\">s</a> == ' ')", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* compress internal blanks and strip trailing blanks */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#s\">s</a> != <a class=\"id\" href=\"#end\">end</a> && *<a class=\"id\" href=\"#s\">s</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#s\">s</a>++ != ' ' || (<a class=\"id\" href=\"#s\">s</a> != <a class=\"id\" href=\"#end\">end</a> && *<a class=\"id\" href=\"#s\">s</a> && *<a class=\"id\" href=\"#s\">s</a> != ' '))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = *(<a class=\"id\" href=\"#s\">s</a>-1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* wipe out trailing garbage */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#p\">p</a> != <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = '\\0';", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ide_fixstring\">ide_fixstring</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This routine busy-waits for the drive status to be not \"busy\".</span>", 
"<span class=\"comment\"> * It then checks the status for all of the \"good\" bits and none</span>", 
"<span class=\"comment\"> * of the \"bad\" bits, and if all is okay it returns 0.  All other</span>", 
"<span class=\"comment\"> * cases return error -- caller may then invoke ide_error().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This routine should get fixed to not hog the cpu during extra long waits..</span>", 
"<span class=\"comment\"> * That could be done by busy-waiting for the first jiffy or two, and then</span>", 
"<span class=\"comment\"> * setting a timer to wake up at half second intervals thereafter,</span>", 
"<span class=\"comment\"> * until timeout is achieved, before timing out.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__ide_wait_stat\">__ide_wait_stat</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#good\">good</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bad\">bad</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#rstat\">rstat</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ide_tp_ops\">ide_tp_ops</a> *<a class=\"id\" href=\"#tp_ops\">tp_ops</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(1);<span class=\"ts\"/><span class=\"comment\">/* spec allows drive 400ns to assert \"BUSY\" */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_save_flags\">local_save_flags</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable_in_hardirq\">local_irq_enable_in_hardirq</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> += <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>)) &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#timeout\">timeout</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * One last read after the timeout in case</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * heavy interrupt load made us not make any</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * progress during the timeout..</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rstat\">rstat</a> = <a class=\"id\" href=\"#stat\">stat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allow status to settle, then read it again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A few rare drives vastly violate the 400ns spec here,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we'll wait up to 10usec for a \"good\" status</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * rather than expensively fail things immediately.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This fix courtesy of Matthew Faupel &amp; Niccolo Rigacci.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 10; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#OK_STAT\">OK_STAT</a>(<a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#good\">good</a>, <a class=\"id\" href=\"#bad\">bad</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rstat\">rstat</a> = <a class=\"id\" href=\"#stat\">stat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#rstat\">rstat</a> = <a class=\"id\" href=\"#stat\">stat</a>;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * In case of error returns error value after doing \"*startstop = ide_error()\".</span>", 
"<span class=\"comment\"> * The caller should return the updated value of \"startstop\" in this case,</span>", 
"<span class=\"comment\"> * \"startstop\" is unchanged when the function returns 0.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ide_wait_stat\">ide_wait_stat</a>(<a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> *<a class=\"id\" href=\"#startstop\">startstop</a>, <a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#good\">good</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bad\">bad</a>, unsigned long <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* bail early if we've exceeded max_failures */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#max_failures\">max_failures</a> && (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#failures\">failures</a> &gt; <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#max_failures\">max_failures</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#startstop\">startstop</a> = <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__ide_wait_stat\">__ide_wait_stat</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#good\">good</a>, <a class=\"id\" href=\"#bad\">bad</a>, <a class=\"id\" href=\"#timeout\">timeout</a>, &amp;<a class=\"id\" href=\"#stat\">stat</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a> = (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>) ? \"status timeout\" : \"status error\";", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#startstop\">startstop</a> = <a class=\"id\" href=\"#ide_error\">ide_error</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#stat\">stat</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ide_wait_stat\">ide_wait_stat</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ide_in_drive_list<span class=\"ts\"/>-<span class=\"ts\"/>look for drive in black/white list</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@id: drive identifier</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@table: list to inspect</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Look for a drive in the blacklist and the whitelist tables</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns 1 if the drive is found in the table.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ide_in_drive_list\">ide_in_drive_list</a>(<a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>, const struct <a class=\"id\" href=\"#drive_list_entry\">drive_list_entry</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>for ( ; <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#id_model\">id_model</a>; <a class=\"id\" href=\"#table\">table</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#id_model\">id_model</a>, (char *)&amp;<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_PROD\">ATA_ID_PROD</a>])) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#id_firmware\">id_firmware</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#strstr\">strstr</a>((char *)&amp;<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_FW_REV\">ATA_ID_FW_REV</a>], <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#id_firmware\">id_firmware</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ide_in_drive_list\">ide_in_drive_list</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Early UDMA66 devices don't set bit14 to 1, only bit13 is valid.</span>", 
"<span class=\"comment\"> * Some optical devices with the buggy firmwares have the same problem.</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#drive_list_entry\">drive_list_entry</a> <a class=\"id\" href=\"#ivb_list\">ivb_list</a>[] = {", 
"<span class=\"ts\"/>{ \"QUANTUM FIREBALLlct10 05\"<span class=\"ts\"/>, \"A03.0900\"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ \"QUANTUM FIREBALLlct20 30\"<span class=\"ts\"/>, \"APL.0900\"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ \"TSSTcorp CDDVDW SH-S202J\"<span class=\"ts\"/>, \"SB00\"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ \"TSSTcorp CDDVDW SH-S202J\"<span class=\"ts\"/>, \"SB01\"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ \"TSSTcorp CDDVDW SH-S202N\"<span class=\"ts\"/>, \"SB00\"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ \"TSSTcorp CDDVDW SH-S202N\"<span class=\"ts\"/>, \"SB01\"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ \"TSSTcorp CDDVDW SH-S202H\"<span class=\"ts\"/>, \"SB00\"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ \"TSSTcorp CDDVDW SH-S202H\"<span class=\"ts\"/>, \"SB01\"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ \"SAMSUNG SP0822N\"<span class=\"ts\"/><span class=\"ts\"/>, \"WA100-10\"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#NULL\">NULL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>, <a class=\"id\" href=\"#NULL\">NULL</a><span class=\"ts\"/><span class=\"ts\"/>}", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  All hosts that use the 80c ribbon must use!</span>", 
"<span class=\"comment\"> *  The name is derived from upper byte of word 93 and the 80c ribbon.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#eighty_ninty_three\">eighty_ninty_three</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ivb\">ivb</a> = <a class=\"id\" href=\"#ide_in_drive_list\">ide_in_drive_list</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#ivb_list\">ivb_list</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#cbl\">cbl</a> == <a class=\"id\" href=\"#ATA_CBL_SATA\">ATA_CBL_SATA</a> || <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#cbl\">cbl</a> == <a class=\"id\" href=\"#ATA_CBL_PATA40_SHORT\">ATA_CBL_PATA40_SHORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ivb\">ivb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%s: skipping word 93 validity check\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_is_sata\">ata_id_is_sata</a>(<a class=\"id\" href=\"#id\">id</a>) && !<a class=\"id\" href=\"#ivb\">ivb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#cbl\">cbl</a> != <a class=\"id\" href=\"#ATA_CBL_PATA80\">ATA_CBL_PATA80</a> && !<a class=\"id\" href=\"#ivb\">ivb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_80w\">no_80w</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FIXME:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - change master/slave IDENTIFY order</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - force bit13 (80c cable present) check also for !ivb devices</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   (unless the slave device is pre-ATA3)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_HW_CONFIG\">ATA_ID_HW_CONFIG</a>] &amp; 0x4000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ivb\">ivb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#model\">model</a> = (char *)&amp;<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_PROD\">ATA_ID_PROD</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strstr\">strstr</a>(<a class=\"id\" href=\"#model\">model</a>, \"TSSTcorp CDDVDW SH-S202\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * These ATAPI devices always report 80c cable</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * so we have to depend on the host in this case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#cbl\">cbl</a> == <a class=\"id\" href=\"#ATA_CBL_PATA80\">ATA_CBL_PATA80</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Depend on the device side cable detection. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_HW_CONFIG\">ATA_ID_HW_CONFIG</a>] &amp; 0x2000)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#no_80w\">no_80w</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_UDMA33_WARNED\">IDE_DFLAG_UDMA33_WARNED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s: %s side 80-wire cable detection failed, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"limiting max speed to UDMA33\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#cbl\">cbl</a> == <a class=\"id\" href=\"#ATA_CBL_PATA80\">ATA_CBL_PATA80</a> ? \"drive\" : \"host\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_UDMA33_WARNED\">IDE_DFLAG_UDMA33_WARNED</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const char *<a class=\"id\" href=\"#nien_quirk_list\">nien_quirk_list</a>[] = {", 
"<span class=\"ts\"/>\"QUANTUM FIREBALLlct08 08\",", 
"<span class=\"ts\"/>\"QUANTUM FIREBALLP KA6.4\",", 
"<span class=\"ts\"/>\"QUANTUM FIREBALLP KA9.1\",", 
"<span class=\"ts\"/>\"QUANTUM FIREBALLP KX13.6\",", 
"<span class=\"ts\"/>\"QUANTUM FIREBALLP KX20.5\",", 
"<span class=\"ts\"/>\"QUANTUM FIREBALLP KX27.3\",", 
"<span class=\"ts\"/>\"QUANTUM FIREBALLP LM20.4\",", 
"<span class=\"ts\"/>\"QUANTUM FIREBALLP LM20.5\",", 
"<span class=\"ts\"/>\"FUJITSU MHZ2160BH G2\",", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"void <a class=\"id\" href=\"#ide_check_nien_quirk_list\">ide_check_nien_quirk_list</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/>const char **<a class=\"id\" href=\"#list\">list</a>, *<a class=\"id\" href=\"#m\">m</a> = (char *)&amp;<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_PROD\">ATA_ID_PROD</a>];", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#nien_quirk_list\">nien_quirk_list</a>; *<a class=\"id\" href=\"#list\">list</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#list\">list</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strstr\">strstr</a>(<a class=\"id\" href=\"#m\">m</a>, *<a class=\"id\" href=\"#list\">list</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_NIEN_QUIRK\">IDE_DFLAG_NIEN_QUIRK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#ide_driveid_update\">ide_driveid_update</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#SECTOR_SIZE\">SECTOR_SIZE</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SELECT_MASK\">SELECT_MASK</a>(<a class=\"id\" href=\"#drive\">drive</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ide_dev_read_id\">ide_dev_read_id</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#ATA_CMD_ID_ATA\">ATA_CMD_ID_ATA</a>, <a class=\"id\" href=\"#id\">id</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SELECT_MASK\">SELECT_MASK</a>(<a class=\"id\" href=\"#drive\">drive</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_UDMA_MODES\">ATA_ID_UDMA_MODES</a>]  = <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_UDMA_MODES\">ATA_ID_UDMA_MODES</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_MWDMA_MODES\">ATA_ID_MWDMA_MODES</a>] = <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_MWDMA_MODES\">ATA_ID_MWDMA_MODES</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_SWDMA_MODES\">ATA_ID_SWDMA_MODES</a>] = <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_SWDMA_MODES\">ATA_ID_SWDMA_MODES</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFA_MODES\">ATA_ID_CFA_MODES</a>]   = <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFA_MODES\">ATA_ID_CFA_MODES</a>];", 
"<span class=\"ts\"/><span class=\"comment\">/* anything more ? */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"<a class=\"id\" href=\"#out_err\">out_err</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: %s: bad status\\n\", <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ide_config_drive_speed\">ide_config_drive_speed</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#speed\">speed</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ide_tp_ops\">ide_tp_ops</a> *<a class=\"id\" href=\"#tp_ops\">tp_ops</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ide_taskfile\">ide_taskfile</a> <a class=\"id\" href=\"#tf\">tf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_DEV_IDEDMA\">CONFIG_BLK_DEV_IDEDMA</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#dma_ops\">dma_ops</a>)<span class=\"ts\"/><span class=\"comment\">/* check if host supports DMA */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#dma_ops\">dma_ops</a>-><a class=\"id\" href=\"#dma_host_set\">dma_host_set</a>(<a class=\"id\" href=\"#drive\">drive</a>, 0);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Skip setting PIO flow-control modes on pre-EIDE drives */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#speed\">speed</a> &amp; 0xf8) == <a class=\"id\" href=\"#XFER_PIO_0\">XFER_PIO_0</a> && <a class=\"id\" href=\"#ata_id_has_iordy\">ata_id_has_iordy</a>(<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#id\">id</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#skip\">skip</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't use ide_wait_cmd here - it will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * attempt to set_geometry and recalibrate,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but for some reason these don't work at</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this point (lost interrupt).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#dev_select\">dev_select</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SELECT_MASK\">SELECT_MASK</a>(<a class=\"id\" href=\"#drive\">drive</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#write_devctl\">write_devctl</a>(<a class=\"id\" href=\"#hwif\">hwif</a>, <a class=\"id\" href=\"#ATA_NIEN\">ATA_NIEN</a> | <a class=\"id\" href=\"#ATA_DEVCTL_OBS\">ATA_DEVCTL_OBS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#tf\">tf</a>, 0, sizeof(<a class=\"id\" href=\"#tf\">tf</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#feature\">feature</a> = <a class=\"id\" href=\"#SETFEATURES_XFER\">SETFEATURES_XFER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#nsect\">nsect</a>   = <a class=\"id\" href=\"#speed\">speed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#tf_load\">tf_load</a>(<a class=\"id\" href=\"#drive\">drive</a>, &amp;<a class=\"id\" href=\"#tf\">tf</a>, <a class=\"id\" href=\"#IDE_VALID_FEATURE\">IDE_VALID_FEATURE</a> | <a class=\"id\" href=\"#IDE_VALID_NSECT\">IDE_VALID_NSECT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#exec_command\">exec_command</a>(<a class=\"id\" href=\"#hwif\">hwif</a>, <a class=\"id\" href=\"#ATA_CMD_SET_FEATURES\">ATA_CMD_SET_FEATURES</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_NIEN_QUIRK\">IDE_DFLAG_NIEN_QUIRK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#write_devctl\">write_devctl</a>(<a class=\"id\" href=\"#hwif\">hwif</a>, <a class=\"id\" href=\"#ATA_DEVCTL_OBS\">ATA_DEVCTL_OBS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#__ide_wait_stat\">__ide_wait_stat</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#ready_stat\">ready_stat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a> | <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a> | <a class=\"id\" href=\"#ATA_ERR\">ATA_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WAIT_CMD\">WAIT_CMD</a>, &amp;<a class=\"id\" href=\"#stat\">stat</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SELECT_MASK\">SELECT_MASK</a>(<a class=\"id\" href=\"#drive\">drive</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#ide_dump_status\">ide_dump_status</a>(<a class=\"id\" href=\"#drive\">drive</a>, \"set_drive_speed_status\", <a class=\"id\" href=\"#stat\">stat</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_SW_DMA_0\">XFER_SW_DMA_0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_UDMA_MODES\">ATA_ID_UDMA_MODES</a>]  &= ~0xFF00;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_MWDMA_MODES\">ATA_ID_MWDMA_MODES</a>] &= ~0x0700;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_SWDMA_MODES\">ATA_ID_SWDMA_MODES</a>] &= ~0x0700;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_is_cfa\">ata_id_is_cfa</a>(<a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFA_MODES\">ATA_ID_CFA_MODES</a>] &= ~0x0E00;", 
"<span class=\"ts\"/>} else<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_is_cfa\">ata_id_is_cfa</a>(<a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFA_MODES\">ATA_ID_CFA_MODES</a>] &= ~0x01C0;", 
"", 
" <a class=\"id\" href=\"#skip\">skip</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_DEV_IDEDMA\">CONFIG_BLK_DEV_IDEDMA</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_SW_DMA_0\">XFER_SW_DMA_0</a> && (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_USING_DMA\">IDE_DFLAG_USING_DMA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#dma_ops\">dma_ops</a>-><a class=\"id\" href=\"#dma_host_set\">dma_host_set</a>(<a class=\"id\" href=\"#drive\">drive</a>, 1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#dma_ops\">dma_ops</a>)<span class=\"ts\"/><span class=\"comment\">/* check if host supports DMA */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_dma_off_quietly\">ide_dma_off_quietly</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_UDMA_0\">XFER_UDMA_0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 1 << (<a class=\"id\" href=\"#speed\">speed</a> - <a class=\"id\" href=\"#XFER_UDMA_0\">XFER_UDMA_0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_UDMA_MODES\">ATA_ID_UDMA_MODES</a>] |= (<a class=\"id\" href=\"#i\">i</a> << 8 | <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ata_id_is_cfa\">ata_id_is_cfa</a>(<a class=\"id\" href=\"#id\">id</a>) && <a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_MW_DMA_3\">XFER_MW_DMA_3</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#speed\">speed</a> - <a class=\"id\" href=\"#XFER_MW_DMA_2\">XFER_MW_DMA_2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFA_MODES\">ATA_ID_CFA_MODES</a>] |= <a class=\"id\" href=\"#i\">i</a> << 9;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_MW_DMA_0\">XFER_MW_DMA_0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 1 << (<a class=\"id\" href=\"#speed\">speed</a> - <a class=\"id\" href=\"#XFER_MW_DMA_0\">XFER_MW_DMA_0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_MWDMA_MODES\">ATA_ID_MWDMA_MODES</a>] |= (<a class=\"id\" href=\"#i\">i</a> << 8 | <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_SW_DMA_0\">XFER_SW_DMA_0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 1 << (<a class=\"id\" href=\"#speed\">speed</a> - <a class=\"id\" href=\"#XFER_SW_DMA_0\">XFER_SW_DMA_0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_SWDMA_MODES\">ATA_ID_SWDMA_MODES</a>] |= (<a class=\"id\" href=\"#i\">i</a> << 8 | <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ata_id_is_cfa\">ata_id_is_cfa</a>(<a class=\"id\" href=\"#id\">id</a>) && <a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_PIO_5\">XFER_PIO_5</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#speed\">speed</a> - <a class=\"id\" href=\"#XFER_PIO_4\">XFER_PIO_4</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFA_MODES\">ATA_ID_CFA_MODES</a>] |= <a class=\"id\" href=\"#i\">i</a> << 6;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#init_speed\">init_speed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#init_speed\">init_speed</a> = <a class=\"id\" href=\"#speed\">speed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#current_speed\">current_speed</a> = <a class=\"id\" href=\"#speed\">speed</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This should get invoked any time we exit the driver to</span>", 
"<span class=\"comment\"> * wait for an interrupt response from a drive.  handler() points</span>", 
"<span class=\"comment\"> * at the appropriate code to handle the next interrupt, and a</span>", 
"<span class=\"comment\"> * timer is started to prevent us from waiting forever in case</span>", 
"<span class=\"comment\"> * something goes wrong (see the ide_timer_expiry() handler later on).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See also ide_execute_command</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__ide_set_handler\">__ide_set_handler</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#ide_handler_t\">ide_handler_t</a> *<a class=\"id\" href=\"#handler\">handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#handler\">handler</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#handler\">handler</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#handler\">handler</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#expires\">expires</a><span class=\"ts\"/>= <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#req_gen_timer\">req_gen_timer</a><span class=\"ts\"/>= <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#req_gen\">req_gen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_timer\">add_timer</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ide_set_handler\">ide_set_handler</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#ide_handler_t\">ide_handler_t</a> *<a class=\"id\" href=\"#handler\">handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ide_set_handler\">__ide_set_handler</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ide_set_handler\">ide_set_handler</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ide_execute_command<span class=\"ts\"/>-<span class=\"ts\"/>execute an IDE command</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@drive: IDE drive to issue the command against</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cmd: command</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@handler: handler for next phase</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@timeout: timeout for command</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Helper function to issue an IDE command. This handles the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>atomicity requirements, command timing and ensures that the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>handler and IRQ setup do not race. All IDE command kick off</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>should go via this function or do equivalent locking.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ide_execute_command\">ide_execute_command</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, struct <a class=\"id\" href=\"#ide_cmd\">ide_cmd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ide_handler_t\">ide_handler_t</a> *<a class=\"id\" href=\"#handler\">handler</a>, unsigned <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#protocol\">protocol</a> != <a class=\"id\" href=\"#ATAPI_PROT_DMA\">ATAPI_PROT_DMA</a> &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#protocol\">protocol</a> != <a class=\"id\" href=\"#ATAPI_PROT_PIO\">ATAPI_PROT_PIO</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#atapi_flags\">atapi_flags</a> &amp; <a class=\"id\" href=\"#IDE_AFLAG_DRQ_INTERRUPT\">IDE_AFLAG_DRQ_INTERRUPT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ide_set_handler\">__ide_set_handler</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#exec_command\">exec_command</a>(<a class=\"id\" href=\"#hwif\">hwif</a>, <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#command\">command</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Drive takes 400nS to respond, we must avoid the IRQ being</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * serviced before that.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FIXME: we could skip this delay with care on non shared devices</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndelay\">ndelay</a>(400);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ide_wait_not_busy() waits for the currently selected device on the hwif</span>", 
"<span class=\"comment\"> * to report a non-busy status, see comments in ide_probe_port().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ide_wait_not_busy\">ide_wait_not_busy</a>(<a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a>, unsigned long <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#timeout\">timeout</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Turn this into a schedule() sleep once I'm sure</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * about locking issues (2.5 work ?).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mdelay\">mdelay</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Assume a value of 0xff means nothing is connected to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the interface and it doesn't implement the pull-down</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * resistor on D7.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#stat\">stat</a> == 0xff)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#touch_softlockup_watchdog\">touch_softlockup_watchdog</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#touch_nmi_watchdog\">touch_nmi_watchdog</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"}", 
];
xr_frag_insert('l/d6/f79485ca72047f0a4eaa55e8d85e11e08f2b86.xr', __xr_tmp);
