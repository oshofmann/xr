var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * highmem.h: virtual kernel memory mappings for high memory</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Used in CONFIG_HIGHMEM systems for memory pages which</span>", 
"<span class=\"comment\"> * are not addressable by direct kernel virtual addresses.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1999 Gerhard Wichert, Siemens AG</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>      Gerhard.Wichert@pdb.siemens.de</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redesigned the x86 32-bit VM architecture to deal with</span>", 
"<span class=\"comment\"> * up to 16 Terabyte physical memory. With current x86 CPUs</span>", 
"<span class=\"comment\"> * we now support up to 64 Gigabytes physical RAM.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1999 Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_HIGHMEM_H\">_ASM_X86_HIGHMEM_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_HIGHMEM_H\">_ASM_X86_HIGHMEM_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#threads\">threads</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#kmap_types\">kmap_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#paravirt\">paravirt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#fixmap\">fixmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* declarations for highmem.c */</span>", 
"extern unsigned long <a class=\"id\" href=\"#highstart_pfn\">highstart_pfn</a>, <a class=\"id\" href=\"#highend_pfn\">highend_pfn</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Right now we initialize only a single pte table. It can be extended</span>", 
"<span class=\"comment\"> * easily, subsequent pte tables have to be allocated in one physical</span>", 
"<span class=\"comment\"> * chunk of RAM.</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Ordering is:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FIXADDR_TOP</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>fixed_addresses</span>", 
"<span class=\"comment\"> * FIXADDR_START</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>temp fixed addresses</span>", 
"<span class=\"comment\"> * FIXADDR_BOOT_START</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Persistent kmap area</span>", 
"<span class=\"comment\"> * PKMAP_BASE</span>", 
"<span class=\"comment\"> * VMALLOC_END</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Vmalloc area</span>", 
"<span class=\"comment\"> * VMALLOC_START</span>", 
"<span class=\"comment\"> * high_memory</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LAST_PKMAP_MASK\">LAST_PKMAP_MASK</a> (<a class=\"id\" href=\"#LAST_PKMAP\">LAST_PKMAP</a>-1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PKMAP_NR\">PKMAP_NR</a>(<a class=\"id\" href=\"#virt\">virt</a>)  ((<a class=\"id\" href=\"#virt\">virt</a>-<a class=\"id\" href=\"#PKMAP_BASE\">PKMAP_BASE</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PKMAP_ADDR\">PKMAP_ADDR</a>(<a class=\"id\" href=\"#nr\">nr</a>)  (<a class=\"id\" href=\"#PKMAP_BASE\">PKMAP_BASE</a> + ((<a class=\"id\" href=\"#nr\">nr</a>) << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>))", 
"", 
"extern void *<a class=\"id\" href=\"#kmap_high\">kmap_high</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern void <a class=\"id\" href=\"#kunmap_high\">kunmap_high</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"void *<a class=\"id\" href=\"#kmap\">kmap</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"void <a class=\"id\" href=\"#kunmap\">kunmap</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"void *<a class=\"id\" href=\"#kmap_atomic_prot\">kmap_atomic_prot</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#km_type\">km_type</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>);", 
"void *<a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#km_type\">km_type</a> <a class=\"id\" href=\"#type\">type</a>);", 
"void <a class=\"id\" href=\"#kunmap_atomic_notypecheck\">kunmap_atomic_notypecheck</a>(void *<a class=\"id\" href=\"#kvaddr\">kvaddr</a>, enum <a class=\"id\" href=\"#km_type\">km_type</a> <a class=\"id\" href=\"#type\">type</a>);", 
"void *<a class=\"id\" href=\"#kmap_atomic_pfn\">kmap_atomic_pfn</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>, enum <a class=\"id\" href=\"#km_type\">km_type</a> <a class=\"id\" href=\"#type\">type</a>);", 
"void *<a class=\"id\" href=\"#kmap_atomic_prot_pfn\">kmap_atomic_prot_pfn</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>, enum <a class=\"id\" href=\"#km_type\">km_type</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>);", 
"struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#kmap_atomic_to_page\">kmap_atomic_to_page</a>(void *<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#flush_cache_kmaps\">flush_cache_kmaps</a>()<span class=\"ts\"/>do { } while (0)", 
"", 
"extern void <a class=\"id\" href=\"#add_highpages_with_active_regions\">add_highpages_with_active_regions</a>(int <a class=\"id\" href=\"#nid\">nid</a>, unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_HIGHMEM_H */</span>", 
];
xr_frag_insert('l/d7/81450be9a906f64093b60fdbfac5115f229e7b.xr', __xr_tmp);
