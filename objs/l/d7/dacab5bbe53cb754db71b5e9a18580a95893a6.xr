var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>drivers/pci/setup-res.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Extruded from code written by</span>", 
"<span class=\"comment\"> *      Dave Rusling (david.rusling@reo.mts.dec.com)</span>", 
"<span class=\"comment\"> *      David Mosberger (davidm@cs.arizona.edu)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>David Miller (davem@redhat.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Support routines for initializing a PCI subsystem.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* fixed for multiple pci buses, 1999 Andrea Arcangeli &lt;andrea@suse.de&gt; */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Nov 2000, Ivan Kokshaysky &lt;ink@jurassic.park.msu.ru&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     Resource sorting</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"pci.h\"", 
"", 
"", 
"void <a class=\"id\" href=\"#pci_update_resource\">pci_update_resource</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#resno\">resno</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus_region\">pci_bus_region</a> <a class=\"id\" href=\"#region\">region</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#check\">check</a>, <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reg\">reg</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#pci_bar_type\">pci_bar_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a> + <a class=\"id\" href=\"#resno\">resno</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ignore resources for unimplemented BARs and unused resource slots</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for 64 bit BARs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ignore non-moveable resources.  This might be legacy resources for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which no functional BAR register exists or another important</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * system resource we shouldn't move around.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_PCI_FIXED\">IORESOURCE_PCI_FIXED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcibios_resource_to_bus\">pcibios_resource_to_bus</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#region\">region</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#region\">region</a>.<a class=\"id\" href=\"#start\">start</a> | (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PCI_REGION_FLAG_MASK\">PCI_REGION_FLAG_MASK</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#PCI_BASE_ADDRESS_IO_MASK\">PCI_BASE_ADDRESS_IO_MASK</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#PCI_BASE_ADDRESS_MEM_MASK\">PCI_BASE_ADDRESS_MEM_MASK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#pci_resource_bar\">pci_resource_bar</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#resno\">resno</a>, &amp;<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#reg\">reg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#pci_bar_unknown\">pci_bar_unknown</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_ROM_ENABLE\">IORESOURCE_ROM_ENABLE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> |= <a class=\"id\" href=\"#PCI_ROM_ADDRESS_ENABLE\">PCI_ROM_ADDRESS_ENABLE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#reg\">reg</a>, &amp;<a class=\"id\" href=\"#check\">check</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#new\">new</a> ^ <a class=\"id\" href=\"#check\">check</a>) &amp; <a class=\"id\" href=\"#mask\">mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"BAR %d: error updating (%#08x != %#08x)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resno\">resno</a>, <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#check\">check</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#new\">new</a> &amp; (<a class=\"id\" href=\"#PCI_BASE_ADDRESS_SPACE\">PCI_BASE_ADDRESS_SPACE</a>|<a class=\"id\" href=\"#PCI_BASE_ADDRESS_MEM_TYPE_MASK\">PCI_BASE_ADDRESS_MEM_TYPE_MASK</a>)) ==", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#PCI_BASE_ADDRESS_SPACE_MEMORY\">PCI_BASE_ADDRESS_SPACE_MEMORY</a>|<a class=\"id\" href=\"#PCI_BASE_ADDRESS_MEM_TYPE_64\">PCI_BASE_ADDRESS_MEM_TYPE_64</a>)) {", 
];
xr_frag_insert('l/d7/dacab5bbe53cb754db71b5e9a18580a95893a6.xr', __xr_tmp);
