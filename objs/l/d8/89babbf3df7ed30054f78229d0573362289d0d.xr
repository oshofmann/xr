var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#user\">user</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#regset\">regset</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ldt\">ldt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"tls.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sys_alloc_thread_area: get a yet unused TLS descriptor index.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#get_free_idx\">get_free_idx</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thread_struct\">thread_struct</a> *<a class=\"id\" href=\"#t\">t</a> = &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#thread\">thread</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#idx\">idx</a> = 0; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#GDT_ENTRY_TLS_ENTRIES\">GDT_ENTRY_TLS_ENTRIES</a>; <a class=\"id\" href=\"#idx\">idx</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc_empty\">desc_empty</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#tls_array\">tls_array</a>[<a class=\"id\" href=\"#idx\">idx</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#idx\">idx</a> + <a class=\"id\" href=\"#GDT_ENTRY_TLS_MIN\">GDT_ENTRY_TLS_MIN</a>;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#set_tls_desc\">set_tls_desc</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#user_desc\">user_desc</a> *<a class=\"id\" href=\"#info\">info</a>, int <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thread_struct\">thread_struct</a> *<a class=\"id\" href=\"#t\">t</a> = &amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#thread\">thread</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> *<a class=\"id\" href=\"#desc\">desc</a> = &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#tls_array\">tls_array</a>[<a class=\"id\" href=\"#idx\">idx</a> - <a class=\"id\" href=\"#GDT_ENTRY_TLS_MIN\">GDT_ENTRY_TLS_MIN</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We must not get preempted while modifying the TLS.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#get_cpu\">get_cpu</a>();", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>-- &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#LDT_empty\">LDT_empty</a>(<a class=\"id\" href=\"#info\">info</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#b\">b</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_ldt\">fill_ldt</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a> == &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#thread\">thread</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#load_TLS\">load_TLS</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu\">put_cpu</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set a given TLS descriptor:</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#do_set_thread_area\">do_set_thread_area</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#u_info\">u_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#can_allocate\">can_allocate</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#u_info\">u_info</a>, sizeof(<a class=\"id\" href=\"#info\">info</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#entry_number\">entry_number</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * index -1 means the kernel should try to find and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocate an empty descriptor:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> == -1 && <a class=\"id\" href=\"#can_allocate\">can_allocate</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#get_free_idx\">get_free_idx</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#idx\">idx</a>, &amp;<a class=\"id\" href=\"#u_info\">u_info</a>-><a class=\"id\" href=\"#entry_number\">entry_number</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#GDT_ENTRY_TLS_MIN\">GDT_ENTRY_TLS_MIN</a> || <a class=\"id\" href=\"#idx\">idx</a> &gt; <a class=\"id\" href=\"#GDT_ENTRY_TLS_MAX\">GDT_ENTRY_TLS_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_tls_desc\">set_tls_desc</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#idx\">idx</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, 1);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> int <a class=\"id\" href=\"#sys_set_thread_area\">sys_set_thread_area</a>(struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#u_info\">u_info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_set_thread_area\">do_set_thread_area</a>(<a class=\"id\" href=\"#current\">current</a>, -1, <a class=\"id\" href=\"#u_info\">u_info</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asmlinkage_protect\">asmlinkage_protect</a>(1, <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#u_info\">u_info</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get the current Thread-Local Storage area:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#fill_user_desc\">fill_user_desc</a>(struct <a class=\"id\" href=\"#user_desc\">user_desc</a> *<a class=\"id\" href=\"#info\">info</a>, int <a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#info\">info</a>, 0, sizeof(*<a class=\"id\" href=\"#info\">info</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#entry_number\">entry_number</a> = <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#base_addr\">base_addr</a> = <a class=\"id\" href=\"#get_desc_base\">get_desc_base</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#get_desc_limit\">get_desc_limit</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#seg_32bit\">seg_32bit</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#contents\">contents</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#type\">type</a> >> 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#read_exec_only\">read_exec_only</a> = !(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#type\">type</a> &amp; 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#limit_in_pages\">limit_in_pages</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#g\">g</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#seg_not_present\">seg_not_present</a> = !<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#useable\">useable</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#avl\">avl</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lm\">lm</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#l\">l</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"int <a class=\"id\" href=\"#do_get_thread_area\">do_get_thread_area</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#u_info\">u_info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> == -1 && <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#idx\">idx</a>, &amp;<a class=\"id\" href=\"#u_info\">u_info</a>-><a class=\"id\" href=\"#entry_number\">entry_number</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#GDT_ENTRY_TLS_MIN\">GDT_ENTRY_TLS_MIN</a> || <a class=\"id\" href=\"#idx\">idx</a> &gt; <a class=\"id\" href=\"#GDT_ENTRY_TLS_MAX\">GDT_ENTRY_TLS_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fill_user_desc\">fill_user_desc</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#tls_array\">tls_array</a>[<a class=\"id\" href=\"#idx\">idx</a> - <a class=\"id\" href=\"#GDT_ENTRY_TLS_MIN\">GDT_ENTRY_TLS_MIN</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#u_info\">u_info</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, sizeof(<a class=\"id\" href=\"#info\">info</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> int <a class=\"id\" href=\"#sys_get_thread_area\">sys_get_thread_area</a>(struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#u_info\">u_info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_get_thread_area\">do_get_thread_area</a>(<a class=\"id\" href=\"#current\">current</a>, -1, <a class=\"id\" href=\"#u_info\">u_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asmlinkage_protect\">asmlinkage_protect</a>(1, <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#u_info\">u_info</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#regset_tls_active\">regset_tls_active</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thread_struct\">thread_struct</a> *<a class=\"id\" href=\"#t\">t</a> = &amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#GDT_ENTRY_TLS_ENTRIES\">GDT_ENTRY_TLS_ENTRIES</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a> &gt; 0 && <a class=\"id\" href=\"#desc_empty\">desc_empty</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#tls_array\">tls_array</a>[<a class=\"id\" href=\"#n\">n</a> - 1]))", 
"<span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#regset_tls_get\">regset_tls_get</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#pos\">pos</a>, unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#kbuf\">kbuf</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> *<a class=\"id\" href=\"#tls\">tls</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &gt; <a class=\"id\" href=\"#GDT_ENTRY_TLS_ENTRIES\">GDT_ENTRY_TLS_ENTRIES</a> * sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#pos\">pos</a> % sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>)) != 0 ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#count\">count</a> % sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>)) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> /= sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> /= sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tls\">tls</a> = &amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#tls_array\">tls_array</a>[<a class=\"id\" href=\"#pos\">pos</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kbuf\">kbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#user_desc\">user_desc</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#kbuf\">kbuf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a>-- &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_user_desc\">fill_user_desc</a>(<a class=\"id\" href=\"#info\">info</a>++, <a class=\"id\" href=\"#GDT_ENTRY_TLS_MIN\">GDT_ENTRY_TLS_MIN</a> + <a class=\"id\" href=\"#pos\">pos</a>++,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tls\">tls</a>++);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#u_info\">u_info</a> = <a class=\"id\" href=\"#ubuf\">ubuf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a>-- &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_user_desc\">fill_user_desc</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#GDT_ENTRY_TLS_MIN\">GDT_ENTRY_TLS_MIN</a> + <a class=\"id\" href=\"#pos\">pos</a>++, <a class=\"id\" href=\"#tls\">tls</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(<a class=\"id\" href=\"#u_info\">u_info</a>++, &amp;<a class=\"id\" href=\"#info\">info</a>, sizeof(<a class=\"id\" href=\"#info\">info</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#regset_tls_set\">regset_tls_set</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#pos\">pos</a>, unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const void *<a class=\"id\" href=\"#kbuf\">kbuf</a>, const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_desc\">user_desc</a> <a class=\"id\" href=\"#infobuf\">infobuf</a>[<a class=\"id\" href=\"#GDT_ENTRY_TLS_ENTRIES\">GDT_ENTRY_TLS_ENTRIES</a>];", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#user_desc\">user_desc</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &gt; <a class=\"id\" href=\"#GDT_ENTRY_TLS_ENTRIES\">GDT_ENTRY_TLS_ENTRIES</a> * sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#pos\">pos</a> % sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>)) != 0 ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#count\">count</a> % sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>)) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kbuf\">kbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#kbuf\">kbuf</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(<a class=\"id\" href=\"#infobuf\">infobuf</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#infobuf\">infobuf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_tls_desc\">set_tls_desc</a>(<a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#GDT_ENTRY_TLS_MIN\">GDT_ENTRY_TLS_MIN</a> + (<a class=\"id\" href=\"#pos\">pos</a> / sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#count\">count</a> / sizeof(struct <a class=\"id\" href=\"#user_desc\">user_desc</a>));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/d8/89babbf3df7ed30054f78229d0573362289d0d.xr', __xr_tmp);
