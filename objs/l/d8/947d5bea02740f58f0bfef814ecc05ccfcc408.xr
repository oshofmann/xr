var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/filesystems.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  table of configured filesystems</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Handling of filesystem drivers list.</span>", 
"<span class=\"comment\"> * Rules:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inclusion to/removals from/scanning of list are protected by spinlock.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>During the unload module must call unregister_filesystem().</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>We can access the fields of list element if:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>1) spinlock is held or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2) we hold the reference to the module.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The latter can be guaranteed by call of try_module_get(); if it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>returned 0 we must skip the element, otherwise we got the reference.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Once the reference is obtained we can drop the spinlock.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#file_systems\">file_systems</a>;", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"", 
"<span class=\"comment\">/* WARNING: This can be used only if we _already_ own a reference */</span>", 
"void <a class=\"id\" href=\"#get_filesystem\">get_filesystem</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs\">fs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__module_get\">__module_get</a>(<a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#put_filesystem\">put_filesystem</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs\">fs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> **<a class=\"id\" href=\"#find_filesystem\">find_filesystem</a>(const char *<a class=\"id\" href=\"#name\">name</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> **<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a>=&amp;<a class=\"id\" href=\"#file_systems\">file_systems</a>; *<a class=\"id\" href=\"#p\">p</a>; <a class=\"id\" href=\"#p\">p</a>=&amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strlen\">strlen</a>((*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#name\">name</a>) == <a class=\"id\" href=\"#len\">len</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#strncmp\">strncmp</a>((*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>register_filesystem - register a new filesystem</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fs: the file system structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Adds the file system passed to the list of file systems the kernel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is aware of for mount and other syscalls. Returns 0 on success,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>or a negative errno code on an error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The &amp;struct file_system_type that is passed is linked into the kernel </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>structures and must not be freed until the file system has been</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>unregistered.</span>", 
"<span class=\"comment\"> */</span>", 
" ", 
"int <a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> * <a class=\"id\" href=\"#fs\">fs</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> ** <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#name\">name</a>, '.'));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#fs_supers\">fs_supers</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#find_filesystem\">find_filesystem</a>(<a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#name\">name</a>));", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#fs\">fs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>unregister_filesystem - unregister a file system</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fs: filesystem to unregister</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Remove a file system that was previously successfully registered</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with the kernel. An error is returned if the file system is not found.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Zero is returned on a success.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/></span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Once this function has returned the &amp;struct file_system_type structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>may be freed or reused.</span>", 
"<span class=\"comment\"> */</span>", 
" ", 
"int <a class=\"id\" href=\"#unregister_filesystem\">unregister_filesystem</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> * <a class=\"id\" href=\"#fs\">fs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> ** <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = &amp;<a class=\"id\" href=\"#file_systems\">file_systems</a>;", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#tmp\">tmp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fs\">fs</a> == *<a class=\"id\" href=\"#tmp\">tmp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = &amp;(*<a class=\"id\" href=\"#tmp\">tmp</a>)-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#unregister_filesystem\">unregister_filesystem</a>);", 
"", 
"static int <a class=\"id\" href=\"#fs_index\">fs_index</a>(const char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#__name\">__name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> * <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>char * <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#getname\">getname</a>(<a class=\"id\" href=\"#__name\">__name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#tmp\">tmp</a>=<a class=\"id\" href=\"#file_systems\">file_systems</a>, <a class=\"id\" href=\"#index\">index</a>=0 ; <a class=\"id\" href=\"#tmp\">tmp</a> ; <a class=\"id\" href=\"#tmp\">tmp</a>=<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#index\">index</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#name\">name</a>,<a class=\"id\" href=\"#name\">name</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fs_name\">fs_name</a>(unsigned int <a class=\"id\" href=\"#index\">index</a>, char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> * <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#file_systems\">file_systems</a>; <a class=\"id\" href=\"#tmp\">tmp</a>; <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#index\">index</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> <= 0 && <a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, we got the reference, so we can safely block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#name\">name</a>) + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_filesystem\">put_filesystem</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fs_maxindex\">fs_maxindex</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> * <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#file_systems\">file_systems</a>, <a class=\"id\" href=\"#index\">index</a> = 0 ; <a class=\"id\" href=\"#tmp\">tmp</a> ; <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#index\">index</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#index\">index</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Whee.. Weird sysv syscall. </span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#sysfs\">sysfs</a>, int, <a class=\"id\" href=\"#option\">option</a>, unsigned long, <a class=\"id\" href=\"#arg1\">arg1</a>, unsigned long, <a class=\"id\" href=\"#arg2\">arg2</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#option\">option</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#fs_index\">fs_index</a>((const char <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg1\">arg1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#fs_name\">fs_name</a>(<a class=\"id\" href=\"#arg1\">arg1</a>, (char <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg2\">arg2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#fs_maxindex\">fs_maxindex</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#get_filesystem_list\">get_filesystem_list</a>(char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> * <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#file_systems\">file_systems</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#tmp\">tmp</a> && <a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 80) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>+<a class=\"id\" href=\"#len\">len</a>, \"%s\\t%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#fs_flags\">fs_flags</a> &amp; <a class=\"id\" href=\"#FS_REQUIRES_DEV\">FS_REQUIRES_DEV</a>) ? \"\" : \"nodev\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"static int <a class=\"id\" href=\"#filesystems_proc_show\">filesystems_proc_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> * <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#file_systems\">file_systems</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#tmp\">tmp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%s\\t%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#fs_flags\">fs_flags</a> &amp; <a class=\"id\" href=\"#FS_REQUIRES_DEV\">FS_REQUIRES_DEV</a>) ? \"\" : \"nodev\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#filesystems_proc_open\">filesystems_proc_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#filesystems_proc_show\">filesystems_proc_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#filesystems_proc_fops\">filesystems_proc_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#filesystems_proc_open\">filesystems_proc_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#proc_filesystems_init\">proc_filesystems_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(\"filesystems\", 0, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#filesystems_proc_fops\">filesystems_proc_fops</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#proc_filesystems_init\">proc_filesystems_init</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#__get_fs_type\">__get_fs_type</a>(const char *<a class=\"id\" href=\"#name\">name</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs\">fs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a> = *(<a class=\"id\" href=\"#find_filesystem\">find_filesystem</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fs\">fs</a> && !<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#file_systems_lock\">file_systems_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fs\">fs</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#get_fs_type\">get_fs_type</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs\">fs</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#dot\">dot</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#name\">name</a>, '.');", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#dot\">dot</a> ? <a class=\"id\" href=\"#dot\">dot</a> - <a class=\"id\" href=\"#name\">name</a> : <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a> = <a class=\"id\" href=\"#__get_fs_type\">__get_fs_type</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fs\">fs</a> && (<a class=\"id\" href=\"#request_module\">request_module</a>(\"%.*s\", <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#name\">name</a>) == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a> = <a class=\"id\" href=\"#__get_fs_type\">__get_fs_type</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dot\">dot</a> && <a class=\"id\" href=\"#fs\">fs</a> && !(<a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#fs_flags\">fs_flags</a> &amp; <a class=\"id\" href=\"#FS_HAS_SUBTYPE\">FS_HAS_SUBTYPE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_filesystem\">put_filesystem</a>(<a class=\"id\" href=\"#fs\">fs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fs\">fs</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#get_fs_type\">get_fs_type</a>);", 
];
xr_frag_insert('l/d8/947d5bea02740f58f0bfef814ecc05ccfcc408.xr', __xr_tmp);
