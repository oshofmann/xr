var __xr_tmp = [
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_receive_skb\">netif_receive_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#frame_err\">frame_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_frame_errors\">rx_frame_errors</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_kfree_skb\">dev_kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#add_recvbuf_small\">add_recvbuf_small</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#netdev_alloc_skb_ip_align\">netdev_alloc_skb_ip_align</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#MAX_PACKET_LEN\">MAX_PACKET_LEN</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#MAX_PACKET_LEN\">MAX_PACKET_LEN</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>, &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>, sizeof <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_to_sgvec\">skb_to_sgvec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a> + 1, 0, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtqueue_add_buf_gfp\">virtqueue_add_buf_gfp</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>, <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>, 0, 2, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_kfree_skb\">dev_kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#add_recvbuf_big\">add_recvbuf_big</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#first\">first</a>, *<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* page in vi-&gt;rx_sg[MAX_SKB_FRAGS + 1] is list tail */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a> + 1; <a class=\"id\" href=\"#i\">i</a> &gt; 1; --<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#get_a_page\">get_a_page</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#first\">first</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#give_pages\">give_pages</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#first\">first</a>), <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* chain new page in list head to match sg */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#private\">private</a> = (unsigned long)<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#get_a_page\">get_a_page</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first\">first</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#give_pages\">give_pages</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#first\">first</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* vi-&gt;rx_sg[0], vi-&gt;rx_sg[1] share the same page */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* a separated vi-&gt;rx_sg[0] for virtio_net_hdr only due to QEMU bug */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>[0], <a class=\"id\" href=\"#p\">p</a>, sizeof(struct <a class=\"id\" href=\"#virtio_net_hdr\">virtio_net_hdr</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* vi-&gt;rx_sg[1] for data packet, from offset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = sizeof(struct <a class=\"id\" href=\"#padded_vnet_hdr\">padded_vnet_hdr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>[1], <a class=\"id\" href=\"#p\">p</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* chain first in list head */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#private\">private</a> = (unsigned long)<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtqueue_add_buf_gfp\">virtqueue_add_buf_gfp</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>, <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>, 0, <a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a> + 2,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#first\">first</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#give_pages\">give_pages</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#first\">first</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#add_recvbuf_mergeable\">add_recvbuf_mergeable</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#get_a_page\">get_a_page</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>, <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>), <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtqueue_add_buf_gfp\">virtqueue_add_buf_gfp</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>, <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>, 0, 1, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#give_pages\">give_pages</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Returns false if we couldn't fill entirely (OOM). */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#try_fill_recv\">try_fill_recv</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#oom\">oom</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#mergeable_rx_bufs\">mergeable_rx_bufs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#add_recvbuf_mergeable\">add_recvbuf_mergeable</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#big_packets\">big_packets</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#add_recvbuf_big\">add_recvbuf_big</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#add_recvbuf_small\">add_recvbuf_small</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oom\">oom</a> = <a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#err\">err</a> &gt; 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#num\">num</a> &gt; <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#max\">max</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virtqueue_kick\">virtqueue_kick</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>);", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#oom\">oom</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#skb_recv_done\">skb_recv_done</a>(struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#rvq\">rvq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#rvq\">rvq</a>-><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Schedule NAPI, Suppress further interrupts if successful. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#napi_schedule_prep\">napi_schedule_prep</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#virtqueue_disable_cb\">virtqueue_disable_cb</a>(<a class=\"id\" href=\"#rvq\">rvq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__napi_schedule\">__napi_schedule</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#refill_work\">refill_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#still_empty\">still_empty</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a>, <a class=\"id\" href=\"#refill\">refill</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#napi_disable\">napi_disable</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#still_empty\">still_empty</a> = !<a class=\"id\" href=\"#try_fill_recv\">try_fill_recv</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#napi_enable\">napi_enable</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* In theory, this can happen: if we don't get any buffers in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we will *never* try to fill again. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#still_empty\">still_empty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#refill\">refill</a>, <a class=\"id\" href=\"#HZ\">HZ</a>/2);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtnet_poll\">virtnet_poll</a>(struct <a class=\"id\" href=\"#napi_struct\">napi_struct</a> *<a class=\"id\" href=\"#napi\">napi</a>, int <a class=\"id\" href=\"#budget\">budget</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#napi\">napi</a>, struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a>, <a class=\"id\" href=\"#napi\">napi</a>);", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#received\">received</a> = 0;", 
"", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#received\">received</a> &lt; <a class=\"id\" href=\"#budget\">budget</a> &&", 
"<span class=\"ts\"/>       (<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#virtqueue_get_buf\">virtqueue_get_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>, &amp;<a class=\"id\" href=\"#len\">len</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#receive_buf\">receive_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#received\">received</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#num\">num</a> &lt; <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#max\">max</a> / 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_fill_recv\">try_fill_recv</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#refill\">refill</a>, 0);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Out of packets? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#received\">received</a> &lt; <a class=\"id\" href=\"#budget\">budget</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#napi_complete\">napi_complete</a>(<a class=\"id\" href=\"#napi\">napi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#virtqueue_enable_cb\">virtqueue_enable_cb</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#napi_schedule_prep\">napi_schedule_prep</a>(<a class=\"id\" href=\"#napi\">napi</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#virtqueue_disable_cb\">virtqueue_disable_cb</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__napi_schedule\">__napi_schedule</a>(<a class=\"id\" href=\"#napi\">napi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#received\">received</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#free_old_xmit_skbs\">free_old_xmit_skbs</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#tot_sgs\">tot_sgs</a> = 0;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#virtqueue_get_buf\">virtqueue_get_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#svq\">svq</a>, &amp;<a class=\"id\" href=\"#len\">len</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"Sent skb %p\\n\", <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_bytes\">tx_bytes</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_packets\">tx_packets</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tot_sgs\">tot_sgs</a> += <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#num_sg\">num_sg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_kfree_skb_any\">dev_kfree_skb_any</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tot_sgs\">tot_sgs</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xmit_skb\">xmit_skb</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#skb_vnet_hdr\">skb_vnet_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#dest\">dest</a> = ((struct <a class=\"id\" href=\"#ethhdr\">ethhdr</a> *)<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>)-><a class=\"id\" href=\"#h_dest\">h_dest</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: xmit %p %pM\\n\", <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dest\">dest</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_F_NEEDS_CSUM\">VIRTIO_NET_HDR_F_NEEDS_CSUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#csum_start\">csum_start</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_start\">csum_start</a> - <a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#csum_offset\">csum_offset</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_offset\">csum_offset</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#csum_offset\">csum_offset</a> = <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#csum_start\">csum_start</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_is_gso\">skb_is_gso</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a> = <a class=\"id\" href=\"#skb_headlen\">skb_headlen</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_size\">gso_size</a> = <a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_size\">gso_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#SKB_GSO_TCPV4\">SKB_GSO_TCPV4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_TCPV4\">VIRTIO_NET_HDR_GSO_TCPV4</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#SKB_GSO_TCPV6\">SKB_GSO_TCPV6</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_TCPV6\">VIRTIO_NET_HDR_GSO_TCPV6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_UDP\">VIRTIO_NET_HDR_GSO_UDP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp; <a class=\"id\" href=\"#SKB_GSO_TCP_ECN\">SKB_GSO_TCP_ECN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> |= <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_ECN\">VIRTIO_NET_HDR_GSO_ECN</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#VIRTIO_NET_HDR_GSO_NONE\">VIRTIO_NET_HDR_GSO_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#gso_size\">gso_size</a> = <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#hdr_len\">hdr_len</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#mhdr\">mhdr</a>.<a class=\"id\" href=\"#num_buffers\">num_buffers</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Encode metadata header at front. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#mergeable_rx_bufs\">mergeable_rx_bufs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#tx_sg\">tx_sg</a>, &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#mhdr\">mhdr</a>, sizeof <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#mhdr\">mhdr</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#tx_sg\">tx_sg</a>, &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>, sizeof <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#hdr\">hdr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#num_sg\">num_sg</a> = <a class=\"id\" href=\"#skb_to_sgvec\">skb_to_sgvec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#tx_sg\">tx_sg</a> + 1, 0, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>) + 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#virtqueue_add_buf\">virtqueue_add_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#svq\">svq</a>, <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#tx_sg\">tx_sg</a>, <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#num_sg\">num_sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#netdev_tx_t\">netdev_tx_t</a> <a class=\"id\" href=\"#start_xmit\">start_xmit</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#capacity\">capacity</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free up any pending old buffers before queueing new ones. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_old_xmit_skbs\">free_old_xmit_skbs</a>(<a class=\"id\" href=\"#vi\">vi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try to transmit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#capacity\">capacity</a> = <a class=\"id\" href=\"#xmit_skb\">xmit_skb</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This can happen with OOM and indirect buffers. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#capacity\">capacity</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#capacity\">capacity</a> == -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"TX queue failure: out of memory\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_fifo_errors\">tx_fifo_errors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Unexpected TX queue failure: %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#capacity\">capacity</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_dropped\">tx_dropped</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NETDEV_TX_OK\">NETDEV_TX_OK</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virtqueue_kick\">virtqueue_kick</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#svq\">svq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't wait up for transmitted skbs to be freed. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_orphan\">skb_orphan</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_reset\">nf_reset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Apparently nice girls don't return TX_BUSY; stop the queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before it gets out of hand.  Naturally, this wastes entries. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#capacity\">capacity</a> &lt; 2+<a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_stop_queue\">netif_stop_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#virtqueue_enable_cb\">virtqueue_enable_cb</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#svq\">svq</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* More just got used, free them then recheck. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#capacity\">capacity</a> += <a class=\"id\" href=\"#free_old_xmit_skbs\">free_old_xmit_skbs</a>(<a class=\"id\" href=\"#vi\">vi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#capacity\">capacity</a> >= 2+<a class=\"id\" href=\"#MAX_SKB_FRAGS\">MAX_SKB_FRAGS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_start_queue\">netif_start_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#virtqueue_disable_cb\">virtqueue_disable_cb</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#svq\">svq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NETDEV_TX_OK\">NETDEV_TX_OK</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtnet_set_mac_address\">virtnet_set_mac_address</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a> = <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#eth_mac_addr\">eth_mac_addr</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_MAC\">VIRTIO_NET_F_MAC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#set\">set</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_net_config\">virtio_net_config</a>, <a class=\"id\" href=\"#mac\">mac</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>                  <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_POLL_CONTROLLER\">CONFIG_NET_POLL_CONTROLLER</a>", 
"static void <a class=\"id\" href=\"#virtnet_netpoll\">virtnet_netpoll</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#napi_schedule\">napi_schedule</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#virtnet_open\">virtnet_open</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#napi_enable\">napi_enable</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If all buffers were filled by other side before we napi_enabled, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * won't get another interrupt, so process any outstanding packets</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * now.  virtnet_poll wants re-enable the queue, so we disable here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We synchronize against interrupts via NAPI_STATE_SCHED */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#napi_schedule_prep\">napi_schedule_prep</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#virtqueue_disable_cb\">virtqueue_disable_cb</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__napi_schedule\">__napi_schedule</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Send command via the control virtqueue and check status.  Commands</span>", 
"<span class=\"comment\"> * supported by the hypervisor, as indicated by feature bits, should</span>", 
"<span class=\"comment\"> * never fail unless improperly formated.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#virtnet_send_command\">virtnet_send_command</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#out\">out</a>, int <a class=\"id\" href=\"#in\">in</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#VIRTNET_SEND_COMMAND_SG_MAX\">VIRTNET_SEND_COMMAND_SG_MAX</a> + 2];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_net_ctrl_hdr\">virtio_net_ctrl_hdr</a> <a class=\"id\" href=\"#ctrl\">ctrl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virtio_net_ctrl_ack\">virtio_net_ctrl_ack</a> <a class=\"id\" href=\"#status\">status</a> = ~0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Caller should know better */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_CTRL_VQ\">VIRTIO_NET_F_CTRL_VQ</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#in\">in</a> &gt; <a class=\"id\" href=\"#VIRTNET_SEND_COMMAND_SG_MAX\">VIRTNET_SEND_COMMAND_SG_MAX</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>++; <span class=\"comment\">/* Add header */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a>++; <span class=\"comment\">/* Add return status */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctrl\">ctrl</a>.<a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctrl\">ctrl</a>.<a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_table\">sg_init_table</a>(<a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#in\">in</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[0], &amp;<a class=\"id\" href=\"#ctrl\">ctrl</a>, sizeof(<a class=\"id\" href=\"#ctrl\">ctrl</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_sg\">for_each_sg</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#in\">in</a> - 2, <a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#i\">i</a> + 1], <a class=\"id\" href=\"#sg_virt\">sg_virt</a>(<a class=\"id\" href=\"#s\">s</a>), <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#in\">in</a> - 1], &amp;<a class=\"id\" href=\"#status\">status</a>, sizeof(<a class=\"id\" href=\"#status\">status</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#virtqueue_add_buf\">virtqueue_add_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#cvq\">cvq</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#vi\">vi</a>) &lt; 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virtqueue_kick\">virtqueue_kick</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#cvq\">cvq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Spin for a response, the kick causes an ioport write, trapping</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * into the hypervisor, so the request should be handled immediately.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#virtqueue_get_buf\">virtqueue_get_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#cvq\">cvq</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_relax\">cpu_relax</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a> == <a class=\"id\" href=\"#VIRTIO_NET_OK\">VIRTIO_NET_OK</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtnet_close\">virtnet_close</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#napi_disable\">napi_disable</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#virtnet_get_drvinfo\">virtnet_get_drvinfo</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ethtool_drvinfo\">ethtool_drvinfo</a> *<a class=\"id\" href=\"#drvinfo\">drvinfo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a> = <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#drvinfo\">drvinfo</a>-><a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#KBUILD_MODNAME\">KBUILD_MODNAME</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#drvinfo\">drvinfo</a>-><a class=\"id\" href=\"#driver\">driver</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#drvinfo\">drvinfo</a>-><a class=\"id\" href=\"#version\">version</a>, \"N/A\", <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#drvinfo\">drvinfo</a>-><a class=\"id\" href=\"#version\">version</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#drvinfo\">drvinfo</a>-><a class=\"id\" href=\"#fw_version\">fw_version</a>, \"N/A\", <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#drvinfo\">drvinfo</a>-><a class=\"id\" href=\"#fw_version\">fw_version</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#drvinfo\">drvinfo</a>-><a class=\"id\" href=\"#bus_info\">bus_info</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#drvinfo\">drvinfo</a>-><a class=\"id\" href=\"#bus_info\">bus_info</a>));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtnet_set_tx_csum\">virtnet_set_tx_csum</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a> = <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a> && !<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_CSUM\">VIRTIO_NET_F_CSUM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ethtool_op_set_tx_hw_csum\">ethtool_op_set_tx_hw_csum</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#virtnet_set_rx_mode\">virtnet_set_rx_mode</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#sg\">sg</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#promisc\">promisc</a>, <a class=\"id\" href=\"#allmulti\">allmulti</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_net_ctrl_mac\">virtio_net_ctrl_mac</a> *<a class=\"id\" href=\"#mac_data\">mac_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_hw_addr\">netdev_hw_addr</a> *<a class=\"id\" href=\"#ha\">ha</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#uc_count\">uc_count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mc_count\">mc_count</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can't dynamicaly set ndo_set_rx_mode, so return gracefully */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_CTRL_RX\">VIRTIO_NET_F_CTRL_RX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#promisc\">promisc</a> = ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>) != 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#allmulti\">allmulti</a> = ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a>) != 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(<a class=\"id\" href=\"#sg\">sg</a>, &amp;<a class=\"id\" href=\"#promisc\">promisc</a>, sizeof(<a class=\"id\" href=\"#promisc\">promisc</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#virtnet_send_command\">virtnet_send_command</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX\">VIRTIO_NET_CTRL_RX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX_PROMISC\">VIRTIO_NET_CTRL_RX_PROMISC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#sg\">sg</a>, 1, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Failed to %sable promisc mode.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#promisc\">promisc</a> ? \"en\" : \"dis\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(<a class=\"id\" href=\"#sg\">sg</a>, &amp;<a class=\"id\" href=\"#allmulti\">allmulti</a>, sizeof(<a class=\"id\" href=\"#allmulti\">allmulti</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#virtnet_send_command\">virtnet_send_command</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX\">VIRTIO_NET_CTRL_RX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#VIRTIO_NET_CTRL_RX_ALLMULTI\">VIRTIO_NET_CTRL_RX_ALLMULTI</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#sg\">sg</a>, 1, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Failed to %sable allmulti mode.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#allmulti\">allmulti</a> ? \"en\" : \"dis\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uc_count\">uc_count</a> = <a class=\"id\" href=\"#netdev_uc_count\">netdev_uc_count</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mc_count\">mc_count</a> = <a class=\"id\" href=\"#netdev_mc_count\">netdev_mc_count</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* MAC filter - use one buffer for both lists */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(((<a class=\"id\" href=\"#uc_count\">uc_count</a> + <a class=\"id\" href=\"#mc_count\">mc_count</a>) * <a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>      (2 * sizeof(<a class=\"id\" href=\"#mac_data\">mac_data</a>-><a class=\"id\" href=\"#entries\">entries</a>)), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mac_data\">mac_data</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"No memory for MAC address buffer\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_table\">sg_init_table</a>(<a class=\"id\" href=\"#sg\">sg</a>, 2);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Store the unicast list and count in the front of the buffer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mac_data\">mac_data</a>-><a class=\"id\" href=\"#entries\">entries</a> = <a class=\"id\" href=\"#uc_count\">uc_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netdev_for_each_uc_addr\">netdev_for_each_uc_addr</a>(<a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#mac_data\">mac_data</a>-><a class=\"id\" href=\"#macs\">macs</a>[<a class=\"id\" href=\"#i\">i</a>++][0], <a class=\"id\" href=\"#ha\">ha</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[0], <a class=\"id\" href=\"#mac_data\">mac_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   sizeof(<a class=\"id\" href=\"#mac_data\">mac_data</a>-><a class=\"id\" href=\"#entries\">entries</a>) + (<a class=\"id\" href=\"#uc_count\">uc_count</a> * <a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* multicast list and count fill the end */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mac_data\">mac_data</a> = (void *)&amp;<a class=\"id\" href=\"#mac_data\">mac_data</a>-><a class=\"id\" href=\"#macs\">macs</a>[<a class=\"id\" href=\"#uc_count\">uc_count</a>][0];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mac_data\">mac_data</a>-><a class=\"id\" href=\"#entries\">entries</a> = <a class=\"id\" href=\"#mc_count\">mc_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netdev_for_each_mc_addr\">netdev_for_each_mc_addr</a>(<a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#mac_data\">mac_data</a>-><a class=\"id\" href=\"#macs\">macs</a>[<a class=\"id\" href=\"#i\">i</a>++][0], <a class=\"id\" href=\"#ha\">ha</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[1], <a class=\"id\" href=\"#mac_data\">mac_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   sizeof(<a class=\"id\" href=\"#mac_data\">mac_data</a>-><a class=\"id\" href=\"#entries\">entries</a>) + (<a class=\"id\" href=\"#mc_count\">mc_count</a> * <a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#virtnet_send_command\">virtnet_send_command</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#VIRTIO_NET_CTRL_MAC\">VIRTIO_NET_CTRL_MAC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#VIRTIO_NET_CTRL_MAC_TABLE_SET\">VIRTIO_NET_CTRL_MAC_TABLE_SET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#sg\">sg</a>, 2, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Failed to set MAC fitler table.\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#virtnet_vlan_rx_add_vid\">virtnet_vlan_rx_add_vid</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#vid\">vid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#sg\">sg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>, &amp;<a class=\"id\" href=\"#vid\">vid</a>, sizeof(<a class=\"id\" href=\"#vid\">vid</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#virtnet_send_command\">virtnet_send_command</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#VIRTIO_NET_CTRL_VLAN\">VIRTIO_NET_CTRL_VLAN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#VIRTIO_NET_CTRL_VLAN_ADD\">VIRTIO_NET_CTRL_VLAN_ADD</a>, &amp;<a class=\"id\" href=\"#sg\">sg</a>, 1, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Failed to add VLAN ID %d.\\n\", <a class=\"id\" href=\"#vid\">vid</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#virtnet_vlan_rx_kill_vid\">virtnet_vlan_rx_kill_vid</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#vid\">vid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#sg\">sg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>, &amp;<a class=\"id\" href=\"#vid\">vid</a>, sizeof(<a class=\"id\" href=\"#vid\">vid</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#virtnet_send_command\">virtnet_send_command</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#VIRTIO_NET_CTRL_VLAN\">VIRTIO_NET_CTRL_VLAN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#VIRTIO_NET_CTRL_VLAN_DEL\">VIRTIO_NET_CTRL_VLAN_DEL</a>, &amp;<a class=\"id\" href=\"#sg\">sg</a>, 1, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Failed to kill VLAN ID %d.\\n\", <a class=\"id\" href=\"#vid\">vid</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#ethtool_ops\">ethtool_ops</a> <a class=\"id\" href=\"#virtnet_ethtool_ops\">virtnet_ethtool_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_drvinfo\">get_drvinfo</a> = <a class=\"id\" href=\"#virtnet_get_drvinfo\">virtnet_get_drvinfo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_tx_csum\">set_tx_csum</a> = <a class=\"id\" href=\"#virtnet_set_tx_csum\">virtnet_set_tx_csum</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_sg\">set_sg</a> = <a class=\"id\" href=\"#ethtool_op_set_sg\">ethtool_op_set_sg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_tso\">set_tso</a> = <a class=\"id\" href=\"#ethtool_op_set_tso\">ethtool_op_set_tso</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_ufo\">set_ufo</a> = <a class=\"id\" href=\"#ethtool_op_set_ufo\">ethtool_op_set_ufo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_link\">get_link</a> = <a class=\"id\" href=\"#ethtool_op_get_link\">ethtool_op_get_link</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_MTU\">MIN_MTU</a> 68", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_MTU\">MAX_MTU</a> 65535", 
"", 
"static int <a class=\"id\" href=\"#virtnet_change_mtu\">virtnet_change_mtu</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#new_mtu\">new_mtu</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_mtu\">new_mtu</a> &lt; <a class=\"id\" href=\"#MIN_MTU\">MIN_MTU</a> || <a class=\"id\" href=\"#new_mtu\">new_mtu</a> &gt; <a class=\"id\" href=\"#MAX_MTU\">MAX_MTU</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#new_mtu\">new_mtu</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> <a class=\"id\" href=\"#virtnet_netdev\">virtnet_netdev</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_open\">ndo_open</a>            = <a class=\"id\" href=\"#virtnet_open\">virtnet_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_stop\">ndo_stop</a>   <span class=\"ts\"/>     = <a class=\"id\" href=\"#virtnet_close\">virtnet_close</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_start_xmit\">ndo_start_xmit</a>      = <a class=\"id\" href=\"#start_xmit\">start_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_validate_addr\">ndo_validate_addr</a>   = <a class=\"id\" href=\"#eth_validate_addr\">eth_validate_addr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_set_mac_address\">ndo_set_mac_address</a> = <a class=\"id\" href=\"#virtnet_set_mac_address\">virtnet_set_mac_address</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_set_rx_mode\">ndo_set_rx_mode</a>     = <a class=\"id\" href=\"#virtnet_set_rx_mode\">virtnet_set_rx_mode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_change_mtu\">ndo_change_mtu</a><span class=\"ts\"/>     = <a class=\"id\" href=\"#virtnet_change_mtu\">virtnet_change_mtu</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_vlan_rx_add_vid\">ndo_vlan_rx_add_vid</a> = <a class=\"id\" href=\"#virtnet_vlan_rx_add_vid\">virtnet_vlan_rx_add_vid</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_vlan_rx_kill_vid\">ndo_vlan_rx_kill_vid</a> = <a class=\"id\" href=\"#virtnet_vlan_rx_kill_vid\">virtnet_vlan_rx_kill_vid</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_POLL_CONTROLLER\">CONFIG_NET_POLL_CONTROLLER</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_poll_controller\">ndo_poll_controller</a> = <a class=\"id\" href=\"#virtnet_netpoll\">virtnet_netpoll</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static void <a class=\"id\" href=\"#virtnet_update_status\">virtnet_update_status</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_STATUS\">VIRTIO_NET_F_STATUS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_net_config\">virtio_net_config</a>, <a class=\"id\" href=\"#status\">status</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#v\">v</a>, sizeof(<a class=\"id\" href=\"#v\">v</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ignore unknown (future) status bits */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> &= <a class=\"id\" href=\"#VIRTIO_NET_S_LINK_UP\">VIRTIO_NET_S_LINK_UP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#status\">status</a> == <a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#VIRTIO_NET_S_LINK_UP\">VIRTIO_NET_S_LINK_UP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_carrier_on\">netif_carrier_on</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_wake_queue\">netif_wake_queue</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_carrier_off\">netif_carrier_off</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_stop_queue\">netif_stop_queue</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#virtnet_config_changed\">virtnet_config_changed</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virtnet_update_status\">virtnet_update_status</a>(<a class=\"id\" href=\"#vi\">vi</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtnet_probe\">virtnet_probe</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vqs\">vqs</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vq_callback_t\">vq_callback_t</a> *<a class=\"id\" href=\"#callbacks\">callbacks</a>[] = { <a class=\"id\" href=\"#skb_recv_done\">skb_recv_done</a>, <a class=\"id\" href=\"#skb_xmit_done\">skb_xmit_done</a>, <a class=\"id\" href=\"#NULL\">NULL</a>};", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#names\">names</a>[] = { \"input\", \"output\", \"control\" };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nvqs\">nvqs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate ourselves a network device with room for our info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#alloc_etherdev\">alloc_etherdev</a>(sizeof(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up network device as normal. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a> = &amp;<a class=\"id\" href=\"#virtnet_netdev\">virtnet_netdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> = <a class=\"id\" href=\"#NETIF_F_HIGHDMA\">NETIF_F_HIGHDMA</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SET_ETHTOOL_OPS\">SET_ETHTOOL_OPS</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#virtnet_ethtool_ops\">virtnet_ethtool_ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SET_NETDEV_DEV\">SET_NETDEV_DEV</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do we support \"hardware\" checksums? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#csum\">csum</a> && <a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_CSUM\">VIRTIO_NET_F_CSUM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This opens up the world of extra features. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> |= <a class=\"id\" href=\"#NETIF_F_HW_CSUM\">NETIF_F_HW_CSUM</a>|<a class=\"id\" href=\"#NETIF_F_SG\">NETIF_F_SG</a>|<a class=\"id\" href=\"#NETIF_F_FRAGLIST\">NETIF_F_FRAGLIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gso\">gso</a> && <a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_GSO\">VIRTIO_NET_F_GSO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> |= <a class=\"id\" href=\"#NETIF_F_TSO\">NETIF_F_TSO</a> | <a class=\"id\" href=\"#NETIF_F_UFO\">NETIF_F_UFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#NETIF_F_TSO_ECN\">NETIF_F_TSO_ECN</a> | <a class=\"id\" href=\"#NETIF_F_TSO6\">NETIF_F_TSO6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Individual feature bits: what can host handle? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gso\">gso</a> && <a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_HOST_TSO4\">VIRTIO_NET_F_HOST_TSO4</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> |= <a class=\"id\" href=\"#NETIF_F_TSO\">NETIF_F_TSO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gso\">gso</a> && <a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_HOST_TSO6\">VIRTIO_NET_F_HOST_TSO6</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> |= <a class=\"id\" href=\"#NETIF_F_TSO6\">NETIF_F_TSO6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gso\">gso</a> && <a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_HOST_ECN\">VIRTIO_NET_F_HOST_ECN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> |= <a class=\"id\" href=\"#NETIF_F_TSO_ECN\">NETIF_F_TSO_ECN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gso\">gso</a> && <a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_HOST_UFO\">VIRTIO_NET_F_HOST_UFO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> |= <a class=\"id\" href=\"#NETIF_F_UFO\">NETIF_F_UFO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Configuration may specify what MAC to use.  Otherwise random. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_MAC\">VIRTIO_NET_F_MAC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#vdev\">vdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_net_config\">virtio_net_config</a>, <a class=\"id\" href=\"#mac\">mac</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#random_ether_addr\">random_ether_addr</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up our device-specific information */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_napi_add\">netif_napi_add</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#napi\">napi</a>, <a class=\"id\" href=\"#virtnet_poll\">virtnet_poll</a>, <a class=\"id\" href=\"#napi_weight\">napi_weight</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a> = <a class=\"id\" href=\"#vdev\">vdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#vi\">vi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_DELAYED_WORK\">INIT_DELAYED_WORK</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#refill\">refill</a>, <a class=\"id\" href=\"#refill_work\">refill_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_table\">sg_init_table</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rx_sg\">rx_sg</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_table\">sg_init_table</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#tx_sg\">tx_sg</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#tx_sg\">tx_sg</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we can receive ANY GSO packets, we must allocate large ones. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_GUEST_TSO4\">VIRTIO_NET_F_GUEST_TSO4</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_GUEST_TSO6\">VIRTIO_NET_F_GUEST_TSO6</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_GUEST_ECN\">VIRTIO_NET_F_GUEST_ECN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#big_packets\">big_packets</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_MRG_RXBUF\">VIRTIO_NET_F_MRG_RXBUF</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#mergeable_rx_bufs\">mergeable_rx_bufs</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We expect two virtqueues, receive then send,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and optionally control. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nvqs\">nvqs</a> = <a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_CTRL_VQ\">VIRTIO_NET_F_CTRL_VQ</a>) ? 3 : 2;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#find_vqs\">find_vqs</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#nvqs\">nvqs</a>, <a class=\"id\" href=\"#vqs\">vqs</a>, <a class=\"id\" href=\"#callbacks\">callbacks</a>, <a class=\"id\" href=\"#names\">names</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free\">free</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a> = <a class=\"id\" href=\"#vqs\">vqs</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#svq\">svq</a> = <a class=\"id\" href=\"#vqs\">vqs</a>[1];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_CTRL_VQ\">VIRTIO_NET_F_CTRL_VQ</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#cvq\">cvq</a> = <a class=\"id\" href=\"#vqs\">vqs</a>[2];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_CTRL_VLAN\">VIRTIO_NET_F_CTRL_VLAN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> |= <a class=\"id\" href=\"#NETIF_F_HW_VLAN_FILTER\">NETIF_F_HW_VLAN_FILTER</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_netdev\">register_netdev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"virtio_net: registering device failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_vqs\">free_vqs</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Last of all, set up some receive buffers. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#try_fill_recv\">try_fill_recv</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we didn't even get one input buffer, we're useless. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#num\">num</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unregister\">unregister</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#VIRTIO_NET_S_LINK_UP\">VIRTIO_NET_S_LINK_UP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virtnet_update_status\">virtnet_update_status</a>(<a class=\"id\" href=\"#vi\">vi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_carrier_on\">netif_carrier_on</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"virtnet: registered device %s\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#unregister\">unregister</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdev\">unregister_netdev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#refill\">refill</a>);", 
"<a class=\"id\" href=\"#free_vqs\">free_vqs</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#del_vqs\">del_vqs</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<a class=\"id\" href=\"#free\">free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_netdev\">free_netdev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#free_unused_bufs\">free_unused_bufs</a>(struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#virtqueue_detach_unused_buf\">virtqueue_detach_unused_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#svq\">svq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_kfree_skb\">dev_kfree_skb</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#virtqueue_detach_unused_buf\">virtqueue_detach_unused_buf</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#rvq\">rvq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#mergeable_rx_bufs\">mergeable_rx_bufs</a> || <a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#big_packets\">big_packets</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#give_pages\">give_pages</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_kfree_skb\">dev_kfree_skb</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#num\">num</a> != 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__devexit\">__devexit</a> <a class=\"id\" href=\"#virtnet_remove\">virtnet_remove</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtnet_info\">virtnet_info</a> *<a class=\"id\" href=\"#vi\">vi</a> = <a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Stop all the virtqueues. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#reset\">reset</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdev\">unregister_netdev</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#refill\">refill</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free unused buffers in both send and recv, if any. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_unused_bufs\">free_unused_bufs</a>(<a class=\"id\" href=\"#vi\">vi</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#del_vqs\">del_vqs</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#vdev\">vdev</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#pages\">pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_pages\">__free_pages</a>(<a class=\"id\" href=\"#get_a_page\">get_a_page</a>(<a class=\"id\" href=\"#vi\">vi</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>), 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_netdev\">free_netdev</a>(<a class=\"id\" href=\"#vi\">vi</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#virtio_device_id\">virtio_device_id</a> <a class=\"id\" href=\"#id_table\">id_table</a>[] = {", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#VIRTIO_ID_NET\">VIRTIO_ID_NET</a>, <a class=\"id\" href=\"#VIRTIO_DEV_ANY_ID\">VIRTIO_DEV_ANY_ID</a> },", 
"<span class=\"ts\"/>{ 0 },", 
"};", 
"", 
"static unsigned int <a class=\"id\" href=\"#features\">features</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_NET_F_CSUM\">VIRTIO_NET_F_CSUM</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_GUEST_CSUM\">VIRTIO_NET_F_GUEST_CSUM</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_NET_F_GSO\">VIRTIO_NET_F_GSO</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_MAC\">VIRTIO_NET_F_MAC</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_NET_F_HOST_TSO4\">VIRTIO_NET_F_HOST_TSO4</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_HOST_UFO\">VIRTIO_NET_F_HOST_UFO</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_HOST_TSO6\">VIRTIO_NET_F_HOST_TSO6</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_NET_F_HOST_ECN\">VIRTIO_NET_F_HOST_ECN</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_GUEST_TSO4\">VIRTIO_NET_F_GUEST_TSO4</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_GUEST_TSO6\">VIRTIO_NET_F_GUEST_TSO6</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_NET_F_GUEST_ECN\">VIRTIO_NET_F_GUEST_ECN</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_GUEST_UFO\">VIRTIO_NET_F_GUEST_UFO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_NET_F_MRG_RXBUF\">VIRTIO_NET_F_MRG_RXBUF</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_STATUS\">VIRTIO_NET_F_STATUS</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_CTRL_VQ\">VIRTIO_NET_F_CTRL_VQ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_NET_F_CTRL_RX\">VIRTIO_NET_F_CTRL_RX</a>, <a class=\"id\" href=\"#VIRTIO_NET_F_CTRL_VLAN\">VIRTIO_NET_F_CTRL_VLAN</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a> <a class=\"id\" href=\"#virtio_net_driver\">virtio_net_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#feature_table\">feature_table</a> = <a class=\"id\" href=\"#features\">features</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#feature_table_size\">feature_table_size</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#features\">features</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#driver\">driver</a>.<a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/><a class=\"id\" href=\"#KBUILD_MODNAME\">KBUILD_MODNAME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#driver\">driver</a>.<a class=\"id\" href=\"#owner\">owner</a> =<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a> =<span class=\"ts\"/><a class=\"id\" href=\"#id_table\">id_table</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a> =<span class=\"ts\"/><a class=\"id\" href=\"#virtnet_probe\">virtnet_probe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a> =<span class=\"ts\"/><a class=\"id\" href=\"#__devexit_p\">__devexit_p</a>(<a class=\"id\" href=\"#virtnet_remove\">virtnet_remove</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#config_changed\">config_changed</a> = <a class=\"id\" href=\"#virtnet_config_changed\">virtnet_config_changed</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init\">init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_virtio_driver\">register_virtio_driver</a>(&amp;<a class=\"id\" href=\"#virtio_net_driver\">virtio_net_driver</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#fini\">fini</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_virtio_driver\">unregister_virtio_driver</a>(&amp;<a class=\"id\" href=\"#virtio_net_driver\">virtio_net_driver</a>);", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#init\">init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#fini\">fini</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_DEVICE_TABLE\">MODULE_DEVICE_TABLE</a>(<a class=\"id\" href=\"#virtio\">virtio</a>, <a class=\"id\" href=\"#id_table\">id_table</a>);", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Virtio network driver\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/d9/e293cb51a884764cc5e0b3c047ba509f8fe887.xr', __xr_tmp);
