var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio\">virtio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_config\">virtio_config</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Unique numbering for virtio devices. */</span>", 
"static unsigned int <a class=\"id\" href=\"#dev_index\">dev_index</a>;", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#device_show\">device_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_d\">_d</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_d\">_d</a>,struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>,<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%hu\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#device\">device</a>);", 
"}", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#vendor_show\">vendor_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_d\">_d</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_d\">_d</a>,struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>,<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%hu\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#vendor\">vendor</a>);", 
"}", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#status_show\">status_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_d\">_d</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_d\">_d</a>,struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>,<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"0x%08x\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#get_status\">get_status</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"}", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#modalias_show\">modalias_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_d\">_d</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_d\">_d</a>,struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>,<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"virtio:d%08Xv%08X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#vendor\">vendor</a>);", 
"}", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#features_show\">features_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_d\">_d</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_d\">_d</a>, struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#len\">len</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We actually represent this as a bitstring, as it could be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * arbitrary length in future. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>)*<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>+<a class=\"id\" href=\"#len\">len</a>, \"%c\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>) ? '1' : '0');", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>+<a class=\"id\" href=\"#len\">len</a>, \"\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"static struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> <a class=\"id\" href=\"#virtio_dev_attrs\">virtio_dev_attrs</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR_RO\">__ATTR_RO</a>(<a class=\"id\" href=\"#device\">device</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR_RO\">__ATTR_RO</a>(<a class=\"id\" href=\"#vendor\">vendor</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR_RO\">__ATTR_RO</a>(<a class=\"id\" href=\"#status\">status</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR_RO\">__ATTR_RO</a>(<a class=\"id\" href=\"#modalias\">modalias</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR_RO\">__ATTR_RO</a>(<a class=\"id\" href=\"#features\">features</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR_NULL\">__ATTR_NULL</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#virtio_id_match\">virtio_id_match</a>(const struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#virtio_device_id\">virtio_device_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#device\">device</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#device\">device</a> && <a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#device\">device</a> != <a class=\"id\" href=\"#VIRTIO_DEV_ANY_ID\">VIRTIO_DEV_ANY_ID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#VIRTIO_DEV_ANY_ID\">VIRTIO_DEV_ANY_ID</a> || <a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#vendor\">vendor</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This looks through all the IDs a driver claims to support.  If any of them</span>", 
"<span class=\"comment\"> * match, we return 1 and the kernel will call virtio_dev_probe(). */</span>", 
"static int <a class=\"id\" href=\"#virtio_dev_match\">virtio_dev_match</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_dv\">_dv</a>, struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#_dr\">_dr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_dv\">_dv</a>,struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>,<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#virtio_device_id\">virtio_device_id</a> *<a class=\"id\" href=\"#ids\">ids</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ids\">ids</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_dr\">_dr</a>, struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a>, <a class=\"id\" href=\"#driver\">driver</a>)-><a class=\"id\" href=\"#id_table\">id_table</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#ids\">ids</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#device\">device</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#virtio_id_match\">virtio_id_match</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ids\">ids</a>[<a class=\"id\" href=\"#i\">i</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtio_uevent\">virtio_uevent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_dv\">_dv</a>, struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a> *<a class=\"id\" href=\"#env\">env</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_dv\">_dv</a>,struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>,<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"MODALIAS=virtio:d%08Xv%08X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#vendor\">vendor</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#add_status\">add_status</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#set_status\">set_status</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#get_status\">get_status</a>(<a class=\"id\" href=\"#dev\">dev</a>) | <a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#virtio_check_driver_offered_feature\">virtio_check_driver_offered_feature</a>(const struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#fbit\">fbit</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a>, <a class=\"id\" href=\"#driver\">driver</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#feature_table_size\">feature_table_size</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#feature_table\">feature_table</a>[<a class=\"id\" href=\"#i\">i</a>] == <a class=\"id\" href=\"#fbit\">fbit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#virtio_check_driver_offered_feature\">virtio_check_driver_offered_feature</a>);", 
"", 
"static int <a class=\"id\" href=\"#virtio_dev_probe\">virtio_dev_probe</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_d\">_d</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_d\">_d</a>,struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>,<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a>, <a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#device_features\">device_features</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We have a driver! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_status\">add_status</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#VIRTIO_CONFIG_S_DRIVER\">VIRTIO_CONFIG_S_DRIVER</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Figure out what features the device supports. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_features\">device_features</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#get_features\">get_features</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Features supported by both device and driver into dev-&gt;features. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>, 0, sizeof(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#feature_table_size\">feature_table_size</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#feature_table\">feature_table</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#f\">f</a> >= 32);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#device_features\">device_features</a> &amp; (1 << <a class=\"id\" href=\"#f\">f</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Transport features always preserved to pass to finalize_features. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#VIRTIO_TRANSPORT_F_START\">VIRTIO_TRANSPORT_F_START</a>; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#VIRTIO_TRANSPORT_F_END\">VIRTIO_TRANSPORT_F_END</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#device_features\">device_features</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#finalize_features\">finalize_features</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#probe\">probe</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_status\">add_status</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#VIRTIO_CONFIG_S_FAILED\">VIRTIO_CONFIG_S_FAILED</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_status\">add_status</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#VIRTIO_CONFIG_S_DRIVER_OK\">VIRTIO_CONFIG_S_DRIVER_OK</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtio_dev_remove\">virtio_dev_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_d\">_d</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_d\">_d</a>,struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>,<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a>, <a class=\"id\" href=\"#driver\">driver</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#remove\">remove</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Driver should have reset device. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#get_status\">get_status</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Acknowledge the device's existence again. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_status\">add_status</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#VIRTIO_CONFIG_S_ACKNOWLEDGE\">VIRTIO_CONFIG_S_ACKNOWLEDGE</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#bus_type\">bus_type</a> <a class=\"id\" href=\"#virtio_bus\">virtio_bus</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a>  = \"virtio\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#match\">match</a> = <a class=\"id\" href=\"#virtio_dev_match\">virtio_dev_match</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_attrs\">dev_attrs</a> = <a class=\"id\" href=\"#virtio_dev_attrs\">virtio_dev_attrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#uevent\">uevent</a> = <a class=\"id\" href=\"#virtio_uevent\">virtio_uevent</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a> = <a class=\"id\" href=\"#virtio_dev_probe\">virtio_dev_probe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a> = <a class=\"id\" href=\"#virtio_dev_remove\">virtio_dev_remove</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#register_virtio_driver\">register_virtio_driver</a>(struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Catch this early. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#feature_table_size\">feature_table_size</a> && !<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#feature_table\">feature_table</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#driver\">driver</a>.<a class=\"id\" href=\"#bus\">bus</a> = &amp;<a class=\"id\" href=\"#virtio_bus\">virtio_bus</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#driver_register\">driver_register</a>(&amp;<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#register_virtio_driver\">register_virtio_driver</a>);", 
"", 
"void <a class=\"id\" href=\"#unregister_virtio_driver\">unregister_virtio_driver</a>(struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver_unregister\">driver_unregister</a>(&amp;<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#unregister_virtio_driver\">unregister_virtio_driver</a>);", 
"", 
"int <a class=\"id\" href=\"#register_virtio_device\">register_virtio_device</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#bus\">bus</a> = &amp;<a class=\"id\" href=\"#virtio_bus\">virtio_bus</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Assign a unique device index and hence name. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#dev_index\">dev_index</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"virtio%u\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#index\">index</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We always start by resetting the device, in case a previous</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * driver messed it up.  This also tests that code path a little. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#reset\">reset</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Acknowledge that we've seen the device. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_status\">add_status</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#VIRTIO_CONFIG_S_ACKNOWLEDGE\">VIRTIO_CONFIG_S_ACKNOWLEDGE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vqs\">vqs</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* device_register() causes the bus infrastructure to look for a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * matching driver. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#device_register\">device_register</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_status\">add_status</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#VIRTIO_CONFIG_S_FAILED\">VIRTIO_CONFIG_S_FAILED</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#register_virtio_device\">register_virtio_device</a>);", 
"", 
"void <a class=\"id\" href=\"#unregister_virtio_device\">unregister_virtio_device</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#unregister_virtio_device\">unregister_virtio_device</a>);", 
"", 
"static int <a class=\"id\" href=\"#virtio_init\">virtio_init</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus_register\">bus_register</a>(&amp;<a class=\"id\" href=\"#virtio_bus\">virtio_bus</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"virtio bus registration failed\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#virtio_exit\">virtio_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_unregister\">bus_unregister</a>(&amp;<a class=\"id\" href=\"#virtio_bus\">virtio_bus</a>);", 
"}", 
"<a class=\"id\" href=\"#core_initcall\">core_initcall</a>(<a class=\"id\" href=\"#virtio_init\">virtio_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#virtio_exit\">virtio_exit</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/da/1a4273871d0ee706d7e5d06d8bc6f7fabf23c3.xr', __xr_tmp);
