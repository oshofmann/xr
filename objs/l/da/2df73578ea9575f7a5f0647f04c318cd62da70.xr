var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *     SUCS NET3:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *     Generic stream handling routines. These are generic for most</span>", 
"<span class=\"comment\"> *     protocols. Even IP. Tonight 8-).</span>", 
"<span class=\"comment\"> *     This is used because TCP, LLC (others too) layer all have mostly</span>", 
"<span class=\"comment\"> *     identical sendmsg() and recvmsg() code.</span>", 
"<span class=\"comment\"> *     So we (will) share it here.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *     Authors:        Arnaldo Carvalho de Melo &lt;acme@conectiva.com.br&gt;</span>", 
"<span class=\"comment\"> *                     (from old tcp.c code)</span>", 
"<span class=\"comment\"> *                     Alan Cox &lt;alan@lxorguk.ukuu.org.uk&gt; (Borrowed comments 8-))</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sk_stream_write_space - stream socket write_space callback.</span>", 
"<span class=\"comment\"> * @sk: socket</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FIXME: write proper description</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#sk_stream_write_space\">sk_stream_write_space</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket_wq\">socket_wq</a> *<a class=\"id\" href=\"#wq\">wq</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_stream_wspace\">sk_stream_wspace</a>(<a class=\"id\" href=\"#sk\">sk</a>) >= <a class=\"id\" href=\"#sk_stream_min_wspace\">sk_stream_min_wspace</a>(<a class=\"id\" href=\"#sk\">sk</a>) && <a class=\"id\" href=\"#sock\">sock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#SOCK_NOSPACE\">SOCK_NOSPACE</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wq\">wq</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wq\">sk_wq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wq_has_sleeper\">wq_has_sleeper</a>(<a class=\"id\" href=\"#wq\">wq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_poll\">wake_up_interruptible_poll</a>(&amp;<a class=\"id\" href=\"#wq\">wq</a>-><a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a> | <a class=\"id\" href=\"#POLLWRBAND\">POLLWRBAND</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wq\">wq</a> && <a class=\"id\" href=\"#wq\">wq</a>-><a class=\"id\" href=\"#fasync_list\">fasync_list</a> && !(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a> &amp; <a class=\"id\" href=\"#SEND_SHUTDOWN\">SEND_SHUTDOWN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_wake_async\">sock_wake_async</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#SOCK_WAKE_SPACE\">SOCK_WAKE_SPACE</a>, <a class=\"id\" href=\"#POLL_OUT\">POLL_OUT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sk_stream_write_space\">sk_stream_write_space</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sk_stream_wait_connect - Wait for a socket to get into the connected state</span>", 
"<span class=\"comment\"> * @sk: sock to wait on</span>", 
"<span class=\"comment\"> * @timeo_p: for how long to wait</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Must be called with the socket locked.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sk_stream_wait_connect\">sk_stream_wait_connect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long *<a class=\"id\" href=\"#timeo_p\">timeo_p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_error\">sock_error</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((1 << <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) &amp; ~(<a class=\"id\" href=\"#TCPF_SYN_SENT\">TCPF_SYN_SENT</a> | <a class=\"id\" href=\"#TCPF_SYN_RECV\">TCPF_SYN_RECV</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPIPE\">EPIPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#timeo_p\">timeo_p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#tsk\">tsk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sock_intr_errno\">sock_intr_errno</a>(*<a class=\"id\" href=\"#timeo_p\">timeo_p</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_pending\">sk_write_pending</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a> = <a class=\"id\" href=\"#sk_wait_event\">sk_wait_event</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#timeo_p\">timeo_p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     !((1 << <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       ~(<a class=\"id\" href=\"#TCPF_ESTABLISHED\">TCPF_ESTABLISHED</a> | <a class=\"id\" href=\"#TCPF_CLOSE_WAIT\">TCPF_CLOSE_WAIT</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_pending\">sk_write_pending</a>--;", 
"<span class=\"ts\"/>} while (!<a class=\"id\" href=\"#done\">done</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sk_stream_wait_connect\">sk_stream_wait_connect</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sk_stream_closing - Return 1 if we still have things to send in our buffers.</span>", 
"<span class=\"comment\"> * @sk: socket to verify</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sk_stream_closing\">sk_stream_closing</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return (1 << <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) &amp;", 
"<span class=\"ts\"/>       (<a class=\"id\" href=\"#TCPF_FIN_WAIT1\">TCPF_FIN_WAIT1</a> | <a class=\"id\" href=\"#TCPF_CLOSING\">TCPF_CLOSING</a> | <a class=\"id\" href=\"#TCPF_LAST_ACK\">TCPF_LAST_ACK</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#sk_stream_wait_close\">sk_stream_wait_close</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timeout\">timeout</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_wait_event\">sk_wait_event</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#timeout\">timeout</a>, !<a class=\"id\" href=\"#sk_stream_closing\">sk_stream_closing</a>(<a class=\"id\" href=\"#sk\">sk</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (!<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>) && <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sk_stream_wait_close\">sk_stream_wait_close</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sk_stream_wait_memory - Wait for more memory for a socket</span>", 
"<span class=\"comment\"> * @sk: socket to wait for memory</span>", 
"<span class=\"comment\"> * @timeo_p: for how long</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sk_stream_wait_memory\">sk_stream_wait_memory</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long *<a class=\"id\" href=\"#timeo_p\">timeo_p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#vm_wait\">vm_wait</a> = 0;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#current_timeo\">current_timeo</a> = *<a class=\"id\" href=\"#timeo_p\">timeo_p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_stream_memory_free\">sk_stream_memory_free</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_timeo\">current_timeo</a> = <a class=\"id\" href=\"#vm_wait\">vm_wait</a> = (<a class=\"id\" href=\"#net_random\">net_random</a>() % (<a class=\"id\" href=\"#HZ\">HZ</a> / 5)) + 2;", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#SOCK_ASYNC_NOSPACE\">SOCK_ASYNC_NOSPACE</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> || (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a> &amp; <a class=\"id\" href=\"#SEND_SHUTDOWN\">SEND_SHUTDOWN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#do_error\">do_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#timeo_p\">timeo_p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#do_nonblock\">do_nonblock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#do_interrupted\">do_interrupted</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#SOCK_ASYNC_NOSPACE\">SOCK_ASYNC_NOSPACE</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_stream_memory_free\">sk_stream_memory_free</a>(<a class=\"id\" href=\"#sk\">sk</a>) && !<a class=\"id\" href=\"#vm_wait\">vm_wait</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#SOCK_NOSPACE\">SOCK_NOSPACE</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_pending\">sk_write_pending</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_wait_event\">sk_wait_event</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#current_timeo\">current_timeo</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a> &amp; <a class=\"id\" href=\"#SEND_SHUTDOWN\">SEND_SHUTDOWN</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#sk_stream_memory_free\">sk_stream_memory_free</a>(<a class=\"id\" href=\"#sk\">sk</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  !<a class=\"id\" href=\"#vm_wait\">vm_wait</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_pending\">sk_write_pending</a>--;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vm_wait\">vm_wait</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vm_wait\">vm_wait</a> -= <a class=\"id\" href=\"#current_timeo\">current_timeo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_timeo\">current_timeo</a> = *<a class=\"id\" href=\"#timeo_p\">timeo_p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#current_timeo\">current_timeo</a> != <a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#current_timeo\">current_timeo</a> -= <a class=\"id\" href=\"#vm_wait\">vm_wait</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_timeo\">current_timeo</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vm_wait\">vm_wait</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#timeo_p\">timeo_p</a> = <a class=\"id\" href=\"#current_timeo\">current_timeo</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#do_error\">do_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPIPE\">EPIPE</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<a class=\"id\" href=\"#do_nonblock\">do_nonblock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<a class=\"id\" href=\"#do_interrupted\">do_interrupted</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_intr_errno\">sock_intr_errno</a>(*<a class=\"id\" href=\"#timeo_p\">timeo_p</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sk_stream_wait_memory\">sk_stream_wait_memory</a>);", 
"", 
"int <a class=\"id\" href=\"#sk_stream_error\">sk_stream_error</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EPIPE\">EPIPE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_error\">sock_error</a>(<a class=\"id\" href=\"#sk\">sk</a>) ? : -<a class=\"id\" href=\"#EPIPE\">EPIPE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EPIPE\">EPIPE</a> && !(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_NOSIGNAL\">MSG_NOSIGNAL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_sig\">send_sig</a>(<a class=\"id\" href=\"#SIGPIPE\">SIGPIPE</a>, <a class=\"id\" href=\"#current\">current</a>, 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sk_stream_error\">sk_stream_error</a>);", 
"", 
"void <a class=\"id\" href=\"#sk_stream_kill_queues\">sk_stream_kill_queues</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* First the read buffer. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_purge\">__skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Next, the error queue. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_purge\">__skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_error_queue\">sk_error_queue</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Next, the write queue. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Account for returned memory. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_reclaim\">sk_mem_reclaim</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_forward_alloc\">sk_forward_alloc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* It is _impossible_ for the backlog to contain anything</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when we get here.  All user references to this socket</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have gone away, only the net layer knows can touch it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sk_stream_kill_queues\">sk_stream_kill_queues</a>);", 
];
xr_frag_insert('l/da/2df73578ea9575f7a5f0647f04c318cd62da70.xr', __xr_tmp);
