var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Generic INET6 transport hashtables</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Lotsa people, from code originally in tcp, generalised here</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>by Arnaldo Carvalho de Melo &lt;acme@mandriva.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_hashtables\">inet_hashtables</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet6_hashtables\">inet6_hashtables</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#__inet6_hash\">__inet6_hash</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#hashinfo\">hashinfo</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#twrefcnt\">twrefcnt</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#sk_unhashed\">sk_unhashed</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_listen_hashbucket\">inet_listen_hashbucket</a> *<a class=\"id\" href=\"#ilb\">ilb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ilb\">ilb</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#listening_hash\">listening_hash</a>[<a class=\"id\" href=\"#inet_sk_listen_hashfn\">inet_sk_listen_hashfn</a>(<a class=\"id\" href=\"#sk\">sk</a>)];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_nulls_add_node_rcu\">__sk_nulls_add_node_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_head\">hlist_nulls_head</a> *<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_hash\">sk_hash</a> = <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#inet6_sk_ehashfn\">inet6_sk_ehashfn</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a>(<a class=\"id\" href=\"#hashinfo\">hashinfo</a>, <a class=\"id\" href=\"#hash\">hash</a>)-><a class=\"id\" href=\"#chain\">chain</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#inet_ehash_lockp\">inet_ehash_lockp</a>(<a class=\"id\" href=\"#hashinfo\">hashinfo</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_nulls_add_node_rcu\">__sk_nulls_add_node_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tw\">tw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_hash\">sk_hash</a> != <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_hash\">tw_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twrefcnt\">twrefcnt</a> = <a class=\"id\" href=\"#inet_twsk_unhash\">inet_twsk_unhash</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_prot_inuse_add\">sock_prot_inuse_add</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>, 1);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#twrefcnt\">twrefcnt</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__inet6_hash\">__inet6_hash</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Sockets in TCP_CLOSE state are _always_ taken out of the hash, so</span>", 
"<span class=\"comment\"> * we need not check it for TCP lookups anymore, thanks Alexey. -DaveM</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The sockhash lock must be held as a reader here.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#__inet6_lookup_established\">__inet6_lookup_established</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#hnum\">hnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#__portpair\">__portpair</a> <a class=\"id\" href=\"#ports\">ports</a> = <a class=\"id\" href=\"#INET_COMBINED_PORTS\">INET_COMBINED_PORTS</a>(<a class=\"id\" href=\"#sport\">sport</a>, <a class=\"id\" href=\"#hnum\">hnum</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Optimize here for direct hit, only listening connections can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have wildcards anyways.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#inet6_ehashfn\">inet6_ehashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#hash\">hash</a> &amp; <a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#ehash_mask\">ehash_mask</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#ehash\">ehash</a>[<a class=\"id\" href=\"#slot\">slot</a>];", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<a class=\"id\" href=\"#begin\">begin</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each_rcu\">sk_nulls_for_each_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#chain\">chain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For IPV6 do the cheaper port and family tests first. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET6_MATCH\">INET6_MATCH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begintw\">begintw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#INET6_MATCH\">INET6_MATCH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_nulls_value\">get_nulls_value</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#slot\">slot</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"", 
"<a class=\"id\" href=\"#begintw\">begintw</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Must check for a TIME_WAIT'er before going to listener hash. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each_rcu\">sk_nulls_for_each_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#twchain\">twchain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET6_TW_MATCH\">INET6_TW_MATCH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#INET6_TW_MATCH\">INET6_TW_MATCH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begintw\">begintw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_nulls_value\">get_nulls_value</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#slot\">slot</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begintw\">begintw</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__inet6_lookup_established\">__inet6_lookup_established</a>);", 
"", 
"static int <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#compute_score\">compute_score</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned short <a class=\"id\" href=\"#hnum\">hnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#score\">score</a> = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#net\">net</a>) && <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> == <a class=\"id\" href=\"#hnum\">hnum</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> != <a class=\"id\" href=\"#dif\">dif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#score\">score</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#inet6_lookup_listener\">inet6_lookup_listener</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const unsigned short <a class=\"id\" href=\"#hnum\">hnum</a>, const int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#score\">score</a>, <a class=\"id\" href=\"#hiscore\">hiscore</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#inet_lhashfn\">inet_lhashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hnum\">hnum</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_listen_hashbucket\">inet_listen_hashbucket</a> *<a class=\"id\" href=\"#ilb\">ilb</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#listening_hash\">listening_hash</a>[<a class=\"id\" href=\"#hash\">hash</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<a class=\"id\" href=\"#begin\">begin</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiscore\">hiscore</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each\">sk_nulls_for_each</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> = <a class=\"id\" href=\"#compute_score\">compute_score</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#dif\">dif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#score\">score</a> &gt; <a class=\"id\" href=\"#hiscore\">hiscore</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hiscore\">hiscore</a> = <a class=\"id\" href=\"#score\">score</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the nulls value we got at the end of this lookup is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not the expected one, we must restart lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We probably met an item that was moved to another chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_nulls_value\">get_nulls_value</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#hash\">hash</a> + <a class=\"id\" href=\"#LISTENING_NULLS_BASE\">LISTENING_NULLS_BASE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#compute_score\">compute_score</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dif\">dif</a>) &lt; <a class=\"id\" href=\"#hiscore\">hiscore</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet6_lookup_listener\">inet6_lookup_listener</a>);", 
"", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#inet6_lookup\">inet6_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, const <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, const <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#dport\">dport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#__inet6_lookup\">__inet6_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hashinfo\">hashinfo</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#dport\">dport</a>), <a class=\"id\" href=\"#dif\">dif</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet6_lookup\">inet6_lookup</a>);", 
"", 
"static int <a class=\"id\" href=\"#__inet6_check_established\">__inet6_check_established</a>(struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#death_row\">death_row</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const <a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#lport\">lport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> **<a class=\"id\" href=\"#twp\">twp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hinfo\">hinfo</a> = <a class=\"id\" href=\"#death_row\">death_row</a>-><a class=\"id\" href=\"#hashinfo\">hashinfo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a> = &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#dif\">dif</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#__portpair\">__portpair</a> <a class=\"id\" href=\"#ports\">ports</a> = <a class=\"id\" href=\"#INET_COMBINED_PORTS\">INET_COMBINED_PORTS</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>, <a class=\"id\" href=\"#lport\">lport</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#inet6_ehashfn\">inet6_ehashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#lport\">lport</a>, <a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a> *<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a>(<a class=\"id\" href=\"#hinfo\">hinfo</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#inet_ehash_lockp\">inet_ehash_lockp</a>(<a class=\"id\" href=\"#hinfo\">hinfo</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk2\">sk2</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#twrefcnt\">twrefcnt</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check TIME-WAIT sockets first. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each\">sk_nulls_for_each</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#twchain\">twchain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk2\">sk2</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET6_TW_MATCH\">INET6_TW_MATCH</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#twsk_unique\">twsk_unique</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#twp\">twp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unique\">unique</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#not_unique\">not_unique</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* And established part... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each\">sk_nulls_for_each</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#chain\">chain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET6_MATCH\">INET6_MATCH</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#not_unique\">not_unique</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#unique\">unique</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Must record num and sport now. Otherwise we will see</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in hash table socket with a funny identity. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a> = <a class=\"id\" href=\"#lport\">lport</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#lport\">lport</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_hash\">sk_hash</a> = <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#sk_unhashed\">sk_unhashed</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__sk_nulls_add_node_rcu\">__sk_nulls_add_node_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#chain\">chain</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tw\">tw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twrefcnt\">twrefcnt</a> = <a class=\"id\" href=\"#inet_twsk_unhash\">inet_twsk_unhash</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_TIMEWAITRECYCLED\">LINUX_MIB_TIMEWAITRECYCLED</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#twrefcnt\">twrefcnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_prot_inuse_add\">sock_prot_inuse_add</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>, 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#twp\">twp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#twp\">twp</a> = <a class=\"id\" href=\"#tw\">tw</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#tw\">tw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Silly. Should hash-dance instead... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_deschedule\">inet_twsk_deschedule</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#death_row\">death_row</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#not_unique\">not_unique</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#inet6_sk_port_offset\">inet6_sk_port_offset</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#secure_ipv6_port_ephemeral\">secure_ipv6_port_ephemeral</a>(<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#inet6_hash_connect\">inet6_hash_connect</a>(struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#death_row\">death_row</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__inet_hash_connect\">__inet_hash_connect</a>(<a class=\"id\" href=\"#death_row\">death_row</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#inet6_sk_port_offset\">inet6_sk_port_offset</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__inet6_check_established\">__inet6_check_established</a>, <a class=\"id\" href=\"#__inet6_hash\">__inet6_hash</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet6_hash_connect\">inet6_hash_connect</a>);", 
];
xr_frag_insert('l/da/4f093283e2196d9707191fb89fce0de93e3e3a.xr', __xr_tmp);
