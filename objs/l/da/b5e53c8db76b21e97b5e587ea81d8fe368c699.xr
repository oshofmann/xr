var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX__AIO_H\">__LINUX__AIO_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX__AIO_H\">__LINUX__AIO_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#aio_abi\">aio_abi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uio\">uio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AIO_MAXSEGS\">AIO_MAXSEGS</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AIO_KIOGRP_NR_ATOMIC\">AIO_KIOGRP_NR_ATOMIC</a><span class=\"ts\"/>8", 
"", 
"struct <a class=\"id\" href=\"#kioctx\">kioctx</a>;", 
"", 
"<span class=\"comment\">/* Notes on cancelling a kiocb:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If a kiocb is cancelled, aio_complete may return 0 to indicate </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that cancel has not yet disposed of the kiocb.  All cancel </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>operations *must* call aio_put_req to dispose of the kiocb </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to guard against races with the completion code.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KIOCB_C_CANCELLED\">KIOCB_C_CANCELLED</a><span class=\"ts\"/>0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KIOCB_C_COMPLETE\">KIOCB_C_COMPLETE</a><span class=\"ts\"/>0x02", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KIOCB_SYNC_KEY\">KIOCB_SYNC_KEY</a><span class=\"ts\"/><span class=\"ts\"/>(~0U)", 
"", 
"<span class=\"comment\">/* ki_flags bits */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This may be used for cancel/retry serialization in the future, but</span>", 
"<span class=\"comment\"> * for now it's unused and we probably don't want modules to even</span>", 
"<span class=\"comment\"> * think they can use it.</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"comment\">/* #define KIF_LOCKED<span class=\"ts\"/><span class=\"ts\"/>0 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KIF_KICKED\">KIF_KICKED</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KIF_CANCELLED\">KIF_CANCELLED</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbTryLock\">kiocbTryLock</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#KIF_LOCKED\">KIF_LOCKED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbTryKick\">kiocbTryKick</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#KIF_KICKED\">KIF_KICKED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbSetLocked\">kiocbSetLocked</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#KIF_LOCKED\">KIF_LOCKED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbSetKicked\">kiocbSetKicked</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#KIF_KICKED\">KIF_KICKED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbSetCancelled\">kiocbSetCancelled</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#KIF_CANCELLED\">KIF_CANCELLED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbClearLocked\">kiocbClearLocked</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#KIF_LOCKED\">KIF_LOCKED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbClearKicked\">kiocbClearKicked</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#KIF_KICKED\">KIF_KICKED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbClearCancelled\">kiocbClearCancelled</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#KIF_CANCELLED\">KIF_CANCELLED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbIsLocked\">kiocbIsLocked</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KIF_LOCKED\">KIF_LOCKED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbIsKicked\">kiocbIsKicked</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KIF_KICKED\">KIF_KICKED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kiocbIsCancelled\">kiocbIsCancelled</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KIF_CANCELLED\">KIF_CANCELLED</a>, &amp;(<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a>)", 
"", 
"<span class=\"comment\">/* is there a better place to document function pointer methods? */</span>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ki_retry<span class=\"ts\"/>-<span class=\"ts\"/>iocb forward progress callback</span>", 
"<span class=\"comment\"> * @kiocb:<span class=\"ts\"/>The kiocb struct to advance by performing an operation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This callback is called when the AIO core wants a given AIO operation</span>", 
"<span class=\"comment\"> * to make forward progress.  The kiocb argument describes the operation</span>", 
"<span class=\"comment\"> * that is to be performed.  As the operation proceeds, perhaps partially,</span>", 
"<span class=\"comment\"> * ki_retry is expected to update the kiocb with progress made.  Typically</span>", 
"<span class=\"comment\"> * ki_retry is set in the AIO core and it itself calls file_operations</span>", 
"<span class=\"comment\"> * helpers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ki_retry's return value determines when the AIO operation is completed</span>", 
"<span class=\"comment\"> * and an event is generated in the AIO event ring.  Except the special</span>", 
"<span class=\"comment\"> * return values described below, the value that is returned from ki_retry</span>", 
"<span class=\"comment\"> * is transferred directly into the completion ring as the operation's</span>", 
"<span class=\"comment\"> * resulting status.  Once this has happened ki_retry *MUST NOT* reference</span>", 
"<span class=\"comment\"> * the kiocb pointer again.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If ki_retry returns -EIOCBQUEUED it has made a promise that aio_complete()</span>", 
"<span class=\"comment\"> * will be called on the kiocb pointer in the future.  The AIO core will</span>", 
"<span class=\"comment\"> * not ask the method again -- ki_retry must ensure forward progress.</span>", 
"<span class=\"comment\"> * aio_complete() must be called once and only once in the future, multiple</span>", 
"<span class=\"comment\"> * calls may result in undefined behaviour.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If ki_retry returns -EIOCBRETRY it has made a promise that kick_iocb()</span>", 
"<span class=\"comment\"> * will be called on the kiocb pointer in the future.  This may happen</span>", 
"<span class=\"comment\"> * through generic helpers that associate kiocb-&gt;ki_wait with a wait</span>", 
"<span class=\"comment\"> * queue head that ki_retry uses via current-&gt;io_wait.  It can also happen</span>", 
"<span class=\"comment\"> * with custom tracking and manual calls to kick_iocb(), though that is</span>", 
"<span class=\"comment\"> * discouraged.  In either case, kick_iocb() must be called once and only</span>", 
"<span class=\"comment\"> * once.  ki_retry must ensure forward progress, the AIO core will wait</span>", 
"<span class=\"comment\"> * indefinitely for kick_iocb() to be called.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#kiocb\">kiocb</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#ki_run_list\">ki_run_list</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_flags\">ki_flags</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_users\">ki_users</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_key\">ki_key</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* id of this request */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ki_filp\">ki_filp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kioctx\">kioctx</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ki_ctx\">ki_ctx</a>;<span class=\"ts\"/><span class=\"comment\">/* may be NULL for sync ops */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#ki_cancel\">ki_cancel</a>)(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *, struct <a class=\"id\" href=\"#io_event\">io_event</a> *);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#ki_retry\">ki_retry</a>)(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#ki_dtor\">ki_dtor</a>)(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *);", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#tsk\">tsk</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#ki_obj\">ki_obj</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_user_data\">ki_user_data</a>;<span class=\"ts\"/><span class=\"comment\">/* user's data for completion */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_pos\">ki_pos</a>;", 
"", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* State that we remember to be able to restart/retry  */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_opcode\">ki_opcode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_nbytes\">ki_nbytes</a>; <span class=\"ts\"/><span class=\"comment\">/* copy of iocb-&gt;aio_nbytes */</span>", 
"<span class=\"ts\"/>char <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ki_buf\">ki_buf</a>;<span class=\"ts\"/><span class=\"comment\">/* remaining iocb-&gt;aio_buf */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_left\">ki_left</a>; <span class=\"ts\"/><span class=\"comment\">/* remaining bytes */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_inline_vec\">ki_inline_vec</a>;<span class=\"ts\"/><span class=\"comment\">/* inline vector */</span>", 
" <span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ki_iovec\">ki_iovec</a>;", 
" <span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_nr_segs\">ki_nr_segs</a>;", 
" <span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ki_cur_seg\">ki_cur_seg</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#ki_list\">ki_list</a>;<span class=\"ts\"/><span class=\"comment\">/* the aio core uses this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * for cancellation */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the aio_resfd field of the userspace iocb is not zero,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this is the underlying eventfd context to deliver events to.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#eventfd_ctx\">eventfd_ctx</a><span class=\"ts\"/>*<a class=\"id\" href=\"#ki_eventfd\">ki_eventfd</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_sync_kiocb\">is_sync_kiocb</a>(<a class=\"id\" href=\"#iocb\">iocb</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#iocb\">iocb</a>)-><a class=\"id\" href=\"#ki_key\">ki_key</a> == <a class=\"id\" href=\"#KIOCB_SYNC_KEY\">KIOCB_SYNC_KEY</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#init_sync_kiocb\">init_sync_kiocb</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#filp\">filp</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_flags\">ki_flags</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_users\">ki_users</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_key\">ki_key</a> = <a class=\"id\" href=\"#KIOCB_SYNC_KEY\">KIOCB_SYNC_KEY</a>;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_filp\">ki_filp</a> = (<a class=\"id\" href=\"#filp\">filp</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_ctx\">ki_ctx</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_cancel\">ki_cancel</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_retry\">ki_retry</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_dtor\">ki_dtor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_obj\">ki_obj</a>.<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#tsk\">tsk</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#ki_user_data\">ki_user_data</a> = 0;                  \\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AIO_RING_MAGIC\">AIO_RING_MAGIC</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0xa10a10a1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AIO_RING_COMPAT_FEATURES\">AIO_RING_COMPAT_FEATURES</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AIO_RING_INCOMPAT_FEATURES\">AIO_RING_INCOMPAT_FEATURES</a><span class=\"ts\"/>0", 
"struct <a class=\"id\" href=\"#aio_ring\">aio_ring</a> {", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>;<span class=\"ts\"/><span class=\"comment\">/* kernel internal index number */</span>", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a>;<span class=\"ts\"/><span class=\"comment\">/* number of io_events */</span>", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a>;", 
"", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#magic\">magic</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#compat_features\">compat_features</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#incompat_features\">incompat_features</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#header_length\">header_length</a>;<span class=\"ts\"/><span class=\"comment\">/* size of aio_ring */</span>", 
"", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_event\">io_event</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_events\">io_events</a>[0];", 
"}; <span class=\"comment\">/* 128 bytes + ring size */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#aio_ring_avail\">aio_ring_avail</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#ring\">ring</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#ring\">ring</a>)-><a class=\"id\" href=\"#head\">head</a> + (<a class=\"id\" href=\"#info\">info</a>)-><a class=\"id\" href=\"#nr\">nr</a> - 1 - (<a class=\"id\" href=\"#ring\">ring</a>)-><a class=\"id\" href=\"#tail\">tail</a>) % (<a class=\"id\" href=\"#info\">info</a>)-><a class=\"id\" href=\"#nr\">nr</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AIO_RING_PAGES\">AIO_RING_PAGES</a><span class=\"ts\"/>8", 
"struct <a class=\"id\" href=\"#aio_ring_info\">aio_ring_info</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmap_base\">mmap_base</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmap_size\">mmap_size</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a><span class=\"ts\"/><span class=\"ts\"/>**<a class=\"id\" href=\"#ring_pages\">ring_pages</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ring_lock\">ring_lock</a>;", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#tail\">tail</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#internal_pages\">internal_pages</a>[<a class=\"id\" href=\"#AIO_RING_PAGES\">AIO_RING_PAGES</a>];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kioctx\">kioctx</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#users\">users</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dead\">dead</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#mm\">mm</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This needs improving */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user_id\">user_id</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx_lock\">ctx_lock</a>;", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqs_active\">reqs_active</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#active_reqs\">active_reqs</a>;<span class=\"ts\"/><span class=\"comment\">/* used for cancellation */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#run_list\">run_list</a>;<span class=\"ts\"/><span class=\"comment\">/* used for kicked reqs */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* sys_io_setup currently limits this to an unsigned int */</span>", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_reqs\">max_reqs</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aio_ring_info\">aio_ring_info</a><span class=\"ts\"/><a class=\"id\" href=\"#ring_info\">ring_info</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a><span class=\"ts\"/><a class=\"id\" href=\"#wq\">wq</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_head\">rcu_head</a>;", 
"};", 
"", 
"<span class=\"comment\">/* prototypes */</span>", 
"extern unsigned <a class=\"id\" href=\"#aio_max_size\">aio_max_size</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AIO\">CONFIG_AIO</a>", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#wait_on_sync_kiocb\">wait_on_sync_kiocb</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>);", 
"extern int <a class=\"id\" href=\"#aio_put_req\">aio_put_req</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>);", 
"extern void <a class=\"id\" href=\"#kick_iocb\">kick_iocb</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>);", 
"extern int <a class=\"id\" href=\"#aio_complete\">aio_complete</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, long <a class=\"id\" href=\"#res\">res</a>, long <a class=\"id\" href=\"#res2\">res2</a>);", 
"struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a>;", 
"extern void <a class=\"id\" href=\"#exit_aio\">exit_aio</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>);", 
"extern long <a class=\"id\" href=\"#do_io_submit\">do_io_submit</a>(<a class=\"id\" href=\"#aio_context_t\">aio_context_t</a> <a class=\"id\" href=\"#ctx_id\">ctx_id</a>, long <a class=\"id\" href=\"#nr\">nr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#iocb\">iocb</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#iocbpp\">iocbpp</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#compat\">compat</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#wait_on_sync_kiocb\">wait_on_sync_kiocb</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#aio_put_req\">aio_put_req</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#kick_iocb\">kick_iocb</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#aio_complete\">aio_complete</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, long <a class=\"id\" href=\"#res\">res</a>, long <a class=\"id\" href=\"#res2\">res2</a>) { return 0; }", 
"struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a>;", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#exit_aio\">exit_aio</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> long <a class=\"id\" href=\"#do_io_submit\">do_io_submit</a>(<a class=\"id\" href=\"#aio_context_t\">aio_context_t</a> <a class=\"id\" href=\"#ctx_id\">ctx_id</a>, long <a class=\"id\" href=\"#nr\">nr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iocb\">iocb</a> <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#iocbpp\">iocbpp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#compat\">compat</a>) { return 0; }", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_AIO */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#list_kiocb\">list_kiocb</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#kiocb\">kiocb</a>, <a class=\"id\" href=\"#ki_list\">ki_list</a>);", 
"}", 
"", 
"<span class=\"comment\">/* for sysctl: */</span>", 
"extern unsigned long <a class=\"id\" href=\"#aio_nr\">aio_nr</a>;", 
"extern unsigned long <a class=\"id\" href=\"#aio_max_nr\">aio_max_nr</a>;", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __LINUX__AIO_H */</span>", 
];
xr_frag_insert('l/da/b5e53c8db76b21e97b5e587ea81d8fe368c699.xr', __xr_tmp);
