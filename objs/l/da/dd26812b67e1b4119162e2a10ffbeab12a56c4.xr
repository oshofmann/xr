var __xr_tmp = [
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#sock_common\">sock_common</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * first fields are not copied in sock_copy()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a><span class=\"ts\"/><a class=\"id\" href=\"#skc_node\">skc_node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> <a class=\"id\" href=\"#skc_nulls_node\">skc_nulls_node</a>;", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skc_refcnt\">skc_refcnt</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skc_tx_queue_mapping\">skc_tx_queue_mapping</a>;", 
"", 
"<span class=\"ts\"/>union  {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#skc_hash\">skc_hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skc_u16hashes\">skc_u16hashes</a>[2];", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skc_family\">skc_family</a>;", 
"<span class=\"ts\"/>volatile unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#skc_state\">skc_state</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skc_reuse\">skc_reuse</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skc_bound_dev_if\">skc_bound_dev_if</a>;", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a><span class=\"ts\"/><a class=\"id\" href=\"#skc_bind_node\">skc_bind_node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> <a class=\"id\" href=\"#skc_portaddr_node\">skc_portaddr_node</a>;", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proto\">proto</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#skc_prot\">skc_prot</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_NS\">CONFIG_NET_NS</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a><span class=\"ts\"/> <span class=\"ts\"/>*<a class=\"id\" href=\"#skc_net\">skc_net</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>struct sock - network layer representation of sockets</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@__sk_common: shared layout with inet_timewait_sock</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_shutdown: mask of %SEND_SHUTDOWN and/or %RCV_SHUTDOWN</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_userlocks: %SO_SNDBUF and %SO_RCVBUF settings</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_lock:<span class=\"ts\"/>synchronizer</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_rcvbuf: size of receive buffer in bytes</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_wq: sock wait queue and async head</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_dst_cache: destination cache</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_dst_lock: destination cache lock</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_policy: flow policy</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_rmem_alloc: receive queue bytes committed</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_receive_queue: incoming packets</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_wmem_alloc: transmit queue bytes committed</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_write_queue: Packet sending queue</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_async_wait_queue: DMA copied packets</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_omem_alloc: \"o\" is \"option\" or \"other\"</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_wmem_queued: persistent queue size</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_forward_alloc: space allocated forward</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_allocation: allocation mode</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_sndbuf: size of send buffer in bytes</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_flags: %SO_LINGER (l_onoff), %SO_BROADCAST, %SO_KEEPALIVE,</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/><span class=\"ts\"/>   %SO_OOBINLINE settings, %SO_TIMESTAMPING settings</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_no_check: %SO_NO_CHECK setting, wether or not checkup packets</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_route_caps: route capabilities (e.g. %NETIF_F_TSO)</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_route_nocaps: forbidden route capabilities (e.g NETIF_F_GSO_MASK)</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_gso_type: GSO type (e.g. %SKB_GSO_TCPV4)</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_gso_max_size: Maximum GSO segment size to build</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_lingertime: %SO_LINGER l_linger setting</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_backlog: always used with the per-socket spinlock held</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_callback_lock: used with the callbacks in the end of this struct</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_error_queue: rarely used</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_prot_creator: sk_prot of original sock creator (see ipv6_setsockopt,</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  IPV6_ADDRFORM for instance)</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_err: last error</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_err_soft: errors that don't cause failure but are the cause of a</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/><span class=\"ts\"/>      persistent failure not just 'timed out'</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_drops: raw/udp drops counter</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_ack_backlog: current listen backlog</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_max_ack_backlog: listen backlog set in listen()</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_priority: %SO_PRIORITY setting</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_type: socket type (%SOCK_STREAM, etc)</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_protocol: which protocol this socket belongs in this network family</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_peer_pid: &amp;struct pid for this socket's peer</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_peer_cred: %SO_PEERCRED setting</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_rcvlowat: %SO_RCVLOWAT setting</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_rcvtimeo: %SO_RCVTIMEO setting</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_sndtimeo: %SO_SNDTIMEO setting</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_rxhash: flow hash received from netif layer</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_filter: socket filtering instructions</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_protinfo: private area, net family specific, when not using slab</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_timer: sock cleanup timer</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_stamp: time stamp of last packet received</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_socket: Identd and reporting IO signals</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_user_data: RPC layer private data</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_sndmsg_page: cached page for sendmsg</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_sndmsg_off: cached offset for sendmsg</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_send_head: front of stuff to transmit</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_security: used by security modules</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_mark: generic packet mark</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_classid: this socket's cgroup classid</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_write_pending: a write to stream socket waits to start</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_state_change: callback to indicate change in the state of the sock</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_data_ready: callback to indicate there is data to be processed</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_write_space: callback to indicate there is bf sending space available</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_error_report: callback to indicate errors (e.g. %MSG_ERRQUEUE)</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_backlog_rcv: callback to process the backlog</span>", 
"<span class=\"comment\">  *<span class=\"ts\"/>@sk_destruct: called at sock freeing time, i.e. when all refcnt == 0</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#sock\">sock</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now struct inet_timewait_sock also uses sock_common, so please just</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't add nothing before this first member (__sk_common) --acme</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock_common\">sock_common</a><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_node\">sk_node</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_node\">skc_node</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_nulls_node\">skc_nulls_node</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_refcnt\">skc_refcnt</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_tx_queue_mapping\">sk_tx_queue_mapping</a><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_tx_queue_mapping\">skc_tx_queue_mapping</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_copy_start\">sk_copy_start</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_hash\">skc_hash</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_hash\">sk_hash</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_hash\">skc_hash</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_family\">sk_family</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_family\">skc_family</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_state\">sk_state</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_state\">skc_state</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_reuse\">sk_reuse</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_reuse\">skc_reuse</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_bound_dev_if\">skc_bound_dev_if</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_bind_node\">sk_bind_node</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_bind_node\">skc_bind_node</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_prot\">sk_prot</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_prot\">skc_prot</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_net\">sk_net</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_common\">__sk_common</a>.<a class=\"id\" href=\"#skc_net\">skc_net</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmemcheck_bitfield_begin\">kmemcheck_bitfield_begin</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a>  : 2,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_no_check\">sk_no_check</a>  : 2,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_userlocks\">sk_userlocks</a> : 4,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>  : 8,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_type\">sk_type</a>      : 16;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmemcheck_bitfield_end\">kmemcheck_bitfield_end</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#socket_lock_t\">socket_lock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_lock\">sk_lock</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The backlog queue is special, it is always used with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the per-socket spinlock held and requires low latency</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * access. Therefore we special case it's implementation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#sk_backlog\">sk_backlog</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket_wq\">socket_wq</a><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_wq\">sk_wq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_dst_cache\">sk_dst_cache</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XFRM\">CONFIG_XFRM</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_policy\">xfrm_policy</a><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_policy\">sk_policy</a>[2];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_dst_lock\">sk_dst_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_omem_alloc\">sk_omem_alloc</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a><span class=\"ts\"/><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a><span class=\"ts\"/><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a><span class=\"ts\"/><a class=\"id\" href=\"#sk_async_wait_queue\">sk_async_wait_queue</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_forward_alloc\">sk_forward_alloc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_route_caps\">sk_route_caps</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_route_nocaps\">sk_route_nocaps</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_gso_type\">sk_gso_type</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_gso_max_size\">sk_gso_max_size</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_rcvlowat\">sk_rcvlowat</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RPS\">CONFIG_RPS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_rxhash\">sk_rxhash</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>unsigned long <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_flags\">sk_flags</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/>        <a class=\"id\" href=\"#sk_lingertime\">sk_lingertime</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a><span class=\"ts\"/><a class=\"id\" href=\"#sk_error_queue\">sk_error_queue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proto\">proto</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_prot_creator\">sk_prot_creator</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_t\">rwlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_callback_lock\">sk_callback_lock</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_err\">sk_err</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_err_soft\">sk_err_soft</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_drops\">sk_drops</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_ack_backlog\">sk_ack_backlog</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_max_ack_backlog\">sk_max_ack_backlog</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_priority\">sk_priority</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_peer_pid\">sk_peer_pid</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_peer_cred\">sk_peer_cred</a>;", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_rcvtimeo\">sk_rcvtimeo</a>;", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_sndtimeo\">sk_sndtimeo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_filter\">sk_filter</a>      <span class=\"ts\"/>*<a class=\"id\" href=\"#sk_filter\">sk_filter</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_protinfo\">sk_protinfo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a><span class=\"ts\"/><a class=\"id\" href=\"#sk_timer\">sk_timer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_stamp\">sk_stamp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_socket\">sk_socket</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_user_data\">sk_user_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_send_head\">sk_send_head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_sndmsg_off\">sk_sndmsg_off</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_write_pending\">sk_write_pending</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SECURITY\">CONFIG_SECURITY</a>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_mark\">sk_mark</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_classid\">sk_classid</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sk_state_change\">sk_state_change</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sk_write_space\">sk_write_space</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sk_error_report\">sk_error_report</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"  <span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sk_backlog_rcv\">sk_backlog_rcv</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);  ", 
"<span class=\"ts\"/>void                    (*<a class=\"id\" href=\"#sk_destruct\">sk_destruct</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Hashed lists helper routines</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk_entry\">sk_entry</a>(const struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hlist_entry\">hlist_entry</a>(<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#sk_node\">sk_node</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#__sk_head\">__sk_head</a>(const struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hlist_entry\">hlist_entry</a>(<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#first\">first</a>, struct <a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#sk_node\">sk_node</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk_head\">sk_head</a>(const struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hlist_empty\">hlist_empty</a>(<a class=\"id\" href=\"#head\">head</a>) ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#__sk_head\">__sk_head</a>(<a class=\"id\" href=\"#head\">head</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#__sk_nulls_head\">__sk_nulls_head</a>(const struct <a class=\"id\" href=\"#hlist_nulls_head\">hlist_nulls_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hlist_nulls_entry\">hlist_nulls_entry</a>(<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#first\">first</a>, struct <a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk_nulls_head\">sk_nulls_head</a>(const struct <a class=\"id\" href=\"#hlist_nulls_head\">hlist_nulls_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hlist_nulls_empty\">hlist_nulls_empty</a>(<a class=\"id\" href=\"#head\">head</a>) ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#__sk_nulls_head\">__sk_nulls_head</a>(<a class=\"id\" href=\"#head\">head</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk_next\">sk_next</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_node\">sk_node</a>.<a class=\"id\" href=\"#next\">next</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_entry\">hlist_entry</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_node\">sk_node</a>.<a class=\"id\" href=\"#next\">next</a>, struct <a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#sk_node\">sk_node</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk_nulls_next\">sk_nulls_next</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return (!<a class=\"id\" href=\"#is_a_nulls\">is_a_nulls</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>.<a class=\"id\" href=\"#next\">next</a>)) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_nulls_entry\">hlist_nulls_entry</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>.<a class=\"id\" href=\"#next\">next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sk_unhashed\">sk_unhashed</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hlist_unhashed\">hlist_unhashed</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_node\">sk_node</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sk_hashed\">sk_hashed</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#sk_unhashed\">sk_unhashed</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#sk_node_init\">sk_node_init</a>(struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#pprev\">pprev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#sk_nulls_node_init\">sk_nulls_node_init</a>(struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#pprev\">pprev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#__sk_del_node\">__sk_del_node</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__hlist_del\">__hlist_del</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_node\">sk_node</a>);", 
"}", 
"", 
"<span class=\"comment\">/* NB: equivalent to hlist_del_init_rcu */</span>", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#__sk_del_node_init\">__sk_del_node_init</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_hashed\">sk_hashed</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_del_node\">__sk_del_node</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_node_init\">sk_node_init</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_node\">sk_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Grab socket reference count. This operation is valid only</span>", 
"<span class=\"comment\">   when sk is ALREADY grabbed f.e. it is found in hash table</span>", 
"<span class=\"comment\">   or a list and the lookup is made under lock preventing hash table</span>", 
"<span class=\"comment\">   modifications.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sock_hold\">sock_hold</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Ungrab socket in the context, which assumes that socket refcnt</span>", 
"<span class=\"comment\">   cannot hit zero, f.e. it is true in context of any socketcall.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__sock_put\">__sock_put</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#sk_del_node_init\">sk_del_node_init</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#__sk_del_node_init\">__sk_del_node_init</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* paranoid for a while -acme */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>) == 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sock_put\">__sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_del_node_init_rcu\">sk_del_node_init_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>)<span class=\"ts\"/><a class=\"id\" href=\"#sk_del_node_init\">sk_del_node_init</a>(<a class=\"id\" href=\"#sk\">sk</a>)", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#__sk_nulls_del_node_init_rcu\">__sk_nulls_del_node_init_rcu</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_hashed\">sk_hashed</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_nulls_del_init_rcu\">hlist_nulls_del_init_rcu</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#sk_nulls_del_node_init_rcu\">sk_nulls_del_node_init_rcu</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#__sk_nulls_del_node_init_rcu\">__sk_nulls_del_node_init_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* paranoid for a while -acme */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>) == 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sock_put\">__sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#__sk_add_node\">__sk_add_node</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_node\">sk_node</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#sk_add_node\">sk_add_node</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__sk_add_node\">__sk_add_node</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#sk_add_node_rcu\">sk_add_node_rcu</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head_rcu\">hlist_add_head_rcu</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_node\">sk_node</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#__sk_nulls_add_node_rcu\">__sk_nulls_add_node_rcu</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#hlist_nulls_head\">hlist_nulls_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_nulls_add_head_rcu\">hlist_nulls_add_head_rcu</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#sk_nulls_add_node_rcu\">sk_nulls_add_node_rcu</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#hlist_nulls_head\">hlist_nulls_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__sk_nulls_add_node_rcu\">__sk_nulls_add_node_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#__sk_del_bind_node\">__sk_del_bind_node</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__hlist_del\">__hlist_del</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bind_node\">sk_bind_node</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#sk_add_bind_node\">sk_add_bind_node</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bind_node\">sk_bind_node</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_for_each\">sk_for_each</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#sk_node\">sk_node</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_for_each_rcu\">sk_for_each_rcu</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_rcu\">hlist_for_each_entry_rcu</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#sk_node\">sk_node</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_nulls_for_each\">sk_nulls_for_each</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_nulls_for_each_entry\">hlist_nulls_for_each_entry</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_nulls_for_each_rcu\">sk_nulls_for_each_rcu</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_nulls_for_each_entry_rcu\">hlist_nulls_for_each_entry_rcu</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_for_each_from\">sk_for_each_from</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>) \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__sk\">__sk</a> && ({ <a class=\"id\" href=\"#node\">node</a> = &amp;(<a class=\"id\" href=\"#__sk\">__sk</a>)-><a class=\"id\" href=\"#sk_node\">sk_node</a>; 1; })) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_from\">hlist_for_each_entry_from</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#sk_node\">sk_node</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_nulls_for_each_from\">sk_nulls_for_each_from</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>) \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__sk\">__sk</a> && ({ <a class=\"id\" href=\"#node\">node</a> = &amp;(<a class=\"id\" href=\"#__sk\">__sk</a>)-><a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>; 1; })) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_nulls_for_each_entry_from\">hlist_nulls_for_each_entry_from</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#sk_nulls_node\">sk_nulls_node</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_for_each_continue\">sk_for_each_continue</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>) \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__sk\">__sk</a> && ({ <a class=\"id\" href=\"#node\">node</a> = &amp;(<a class=\"id\" href=\"#__sk\">__sk</a>)-><a class=\"id\" href=\"#sk_node\">sk_node</a>; 1; })) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_continue\">hlist_for_each_entry_continue</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#sk_node\">sk_node</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_for_each_safe\">sk_for_each_safe</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#list\">list</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_safe\">hlist_for_each_entry_safe</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#sk_node\">sk_node</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_for_each_bound\">sk_for_each_bound</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#sk_bind_node\">sk_bind_node</a>)", 
"", 
"<span class=\"comment\">/* Sock flags */</span>", 
"enum <a class=\"id\" href=\"#sock_flags\">sock_flags</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DONE\">SOCK_DONE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_URGINLINE\">SOCK_URGINLINE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_KEEPOPEN\">SOCK_KEEPOPEN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_LINGER\">SOCK_LINGER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DESTROY\">SOCK_DESTROY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_BROADCAST\">SOCK_BROADCAST</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_TIMESTAMP\">SOCK_TIMESTAMP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_ZAPPED\">SOCK_ZAPPED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_USE_WRITE_QUEUE\">SOCK_USE_WRITE_QUEUE</a>, <span class=\"comment\">/* whether to call sk-&gt;sk_write_space in sock_wfree */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DBG\">SOCK_DBG</a>, <span class=\"comment\">/* %SO_DEBUG setting */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_RCVTSTAMP\">SOCK_RCVTSTAMP</a>, <span class=\"comment\">/* %SO_TIMESTAMP setting */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_RCVTSTAMPNS\">SOCK_RCVTSTAMPNS</a>, <span class=\"comment\">/* %SO_TIMESTAMPNS setting */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_LOCALROUTE\">SOCK_LOCALROUTE</a>, <span class=\"comment\">/* route locally only, %SO_DONTROUTE setting */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_QUEUE_SHRUNK\">SOCK_QUEUE_SHRUNK</a>, <span class=\"comment\">/* write queue has been shrunk recently */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_TIMESTAMPING_TX_HARDWARE\">SOCK_TIMESTAMPING_TX_HARDWARE</a>,  <span class=\"comment\">/* %SOF_TIMESTAMPING_TX_HARDWARE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_TIMESTAMPING_TX_SOFTWARE\">SOCK_TIMESTAMPING_TX_SOFTWARE</a>,  <span class=\"comment\">/* %SOF_TIMESTAMPING_TX_SOFTWARE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_TIMESTAMPING_RX_HARDWARE\">SOCK_TIMESTAMPING_RX_HARDWARE</a>,  <span class=\"comment\">/* %SOF_TIMESTAMPING_RX_HARDWARE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_TIMESTAMPING_RX_SOFTWARE\">SOCK_TIMESTAMPING_RX_SOFTWARE</a>,  <span class=\"comment\">/* %SOF_TIMESTAMPING_RX_SOFTWARE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_TIMESTAMPING_SOFTWARE\">SOCK_TIMESTAMPING_SOFTWARE</a>,     <span class=\"comment\">/* %SOF_TIMESTAMPING_SOFTWARE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_TIMESTAMPING_RAW_HARDWARE\">SOCK_TIMESTAMPING_RAW_HARDWARE</a>, <span class=\"comment\">/* %SOF_TIMESTAMPING_RAW_HARDWARE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_TIMESTAMPING_SYS_HARDWARE\">SOCK_TIMESTAMPING_SYS_HARDWARE</a>, <span class=\"comment\">/* %SOF_TIMESTAMPING_SYS_HARDWARE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_FASYNC\">SOCK_FASYNC</a>, <span class=\"comment\">/* fasync() active */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_RXQ_OVFL\">SOCK_RXQ_OVFL</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sock_copy_flags\">sock_copy_flags</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#nsk\">nsk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#osk\">osk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsk\">nsk</a>-><a class=\"id\" href=\"#sk_flags\">sk_flags</a> = <a class=\"id\" href=\"#osk\">osk</a>-><a class=\"id\" href=\"#sk_flags\">sk_flags</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sock_set_flag\">sock_set_flag</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, enum <a class=\"id\" href=\"#sock_flags\">sock_flags</a> <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_flags\">sk_flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, enum <a class=\"id\" href=\"#sock_flags\">sock_flags</a> <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__clear_bit\">__clear_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_flags\">sk_flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sock_flag\">sock_flag</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, enum <a class=\"id\" href=\"#sock_flags\">sock_flags</a> <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_flags\">sk_flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sk_acceptq_removed\">sk_acceptq_removed</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_ack_backlog\">sk_ack_backlog</a>--;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sk_acceptq_added\">sk_acceptq_added</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_ack_backlog\">sk_ack_backlog</a>++;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sk_acceptq_is_full\">sk_acceptq_is_full</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_ack_backlog\">sk_ack_backlog</a> &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_max_ack_backlog\">sk_max_ack_backlog</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Compute minimal free write space needed to queue new packets.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sk_stream_min_wspace\">sk_stream_min_wspace</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a> >> 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sk_stream_wspace\">sk_stream_wspace</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a> - <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a>;", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#sk_stream_write_space\">sk_stream_write_space</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sk_stream_memory_free\">sk_stream_memory_free</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a> &lt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a>;", 
"}", 
"", 
"<span class=\"comment\">/* OOB backlog add */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__sk_add_backlog\">__sk_add_backlog</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* dont let skb dst not refcounted, we are going to leave rcu lock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_force\">skb_dst_force</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog\">sk_backlog</a>.<a class=\"id\" href=\"#tail\">tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog\">sk_backlog</a>.<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog\">sk_backlog</a>.<a class=\"id\" href=\"#tail\">tail</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog\">sk_backlog</a>.<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Take into account size of receive queue and backlog queue</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sk_rcvqueues_full\">sk_rcvqueues_full</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#qsize\">qsize</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog\">sk_backlog</a>.<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#qsize\">qsize</a> + <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>;", 
"}", 
"", 
"<span class=\"comment\">/* The per-socket spinlock must be held here. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__must_check\">__must_check</a> int <a class=\"id\" href=\"#sk_add_backlog\">sk_add_backlog</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_rcvqueues_full\">sk_rcvqueues_full</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__sk_add_backlog\">__sk_add_backlog</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog\">sk_backlog</a>.<a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sk_backlog_rcv\">sk_backlog_rcv</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog_rcv\">sk_backlog_rcv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sock_rps_record_flow\">sock_rps_record_flow</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RPS\">CONFIG_RPS</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rps_sock_flow_table\">rps_sock_flow_table</a> *<a class=\"id\" href=\"#sock_flow_table\">sock_flow_table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_flow_table\">sock_flow_table</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#rps_sock_flow_table\">rps_sock_flow_table</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rps_record_sock_flow\">rps_record_sock_flow</a>(<a class=\"id\" href=\"#sock_flow_table\">sock_flow_table</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rxhash\">sk_rxhash</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sock_rps_reset_flow\">sock_rps_reset_flow</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RPS\">CONFIG_RPS</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rps_sock_flow_table\">rps_sock_flow_table</a> *<a class=\"id\" href=\"#sock_flow_table\">sock_flow_table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_flow_table\">sock_flow_table</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#rps_sock_flow_table\">rps_sock_flow_table</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rps_reset_sock_flow\">rps_reset_sock_flow</a>(<a class=\"id\" href=\"#sock_flow_table\">sock_flow_table</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rxhash\">sk_rxhash</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sock_rps_save_rxhash\">sock_rps_save_rxhash</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rxhash\">rxhash</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RPS\">CONFIG_RPS</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rxhash\">sk_rxhash</a> != <a class=\"id\" href=\"#rxhash\">rxhash</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_rps_reset_flow\">sock_rps_reset_flow</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rxhash\">sk_rxhash</a> = <a class=\"id\" href=\"#rxhash\">rxhash</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sk_wait_event\">sk_wait_event</a>(<a class=\"id\" href=\"#__sk\">__sk</a>, <a class=\"id\" href=\"#__timeo\">__timeo</a>, <a class=\"id\" href=\"#__condition\">__condition</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>({<span class=\"ts\"/>int <a class=\"id\" href=\"#__rc\">__rc</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#__sk\">__sk</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rc\">__rc</a> = <a class=\"id\" href=\"#__condition\">__condition</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#__rc\">__rc</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#__timeo\">__timeo</a>) = <a class=\"id\" href=\"#schedule_timeout\">schedule_timeout</a>(*(<a class=\"id\" href=\"#__timeo\">__timeo</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#__sk\">__sk</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rc\">__rc</a> = <a class=\"id\" href=\"#__condition\">__condition</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rc\">__rc</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>})", 
"", 
"extern int <a class=\"id\" href=\"#sk_stream_wait_connect\">sk_stream_wait_connect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long *<a class=\"id\" href=\"#timeo_p\">timeo_p</a>);", 
"extern int <a class=\"id\" href=\"#sk_stream_wait_memory\">sk_stream_wait_memory</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long *<a class=\"id\" href=\"#timeo_p\">timeo_p</a>);", 
"extern void <a class=\"id\" href=\"#sk_stream_wait_close\">sk_stream_wait_close</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long <a class=\"id\" href=\"#timeo_p\">timeo_p</a>);", 
"extern int <a class=\"id\" href=\"#sk_stream_error\">sk_stream_error</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#err\">err</a>);", 
"extern void <a class=\"id\" href=\"#sk_stream_kill_queues\">sk_stream_kill_queues</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"extern int <a class=\"id\" href=\"#sk_wait_data\">sk_wait_data</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long *<a class=\"id\" href=\"#timeo\">timeo</a>);", 
"", 
"struct <a class=\"id\" href=\"#request_sock_ops\">request_sock_ops</a>;", 
"struct <a class=\"id\" href=\"#timewait_sock_ops\">timewait_sock_ops</a>;", 
"struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a>;", 
"struct <a class=\"id\" href=\"#raw_hashinfo\">raw_hashinfo</a>;", 
"", 
"<span class=\"comment\">/* Networking protocol blocks we attach to sockets.</span>", 
"<span class=\"comment\"> * socket layer -&gt; transport layer interface</span>", 
"<span class=\"comment\"> * transport -&gt; network interface is defined by struct inet_proto</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#proto\">proto</a> {", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#close\">close</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#connect\">connect</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>        struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#disconnect\">disconnect</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#accept\">accept</a>) (struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int *<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#ioctl\">ioctl</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#init\">init</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#destroy\">destroy</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#shutdown\">shutdown</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#how\">how</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#setsockopt\">setsockopt</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#getsockopt\">getsockopt</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#option\">option</a>);  <span class=\"ts\"/> ", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#compat_setsockopt\">compat_setsockopt</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#level\">level</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#compat_getsockopt\">compat_getsockopt</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#level\">level</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#option\">option</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sendmsg\">sendmsg</a>)(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#recvmsg\">recvmsg</a>)(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#noblock\">noblock</a>, int <a class=\"id\" href=\"#flags\">flags</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int *<a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sendpage\">sendpage</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#bind\">bind</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, int <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#backlog_rcv\">backlog_rcv</a>) (struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Keeping track of sk's, looking them up, and port selection methods. */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#hash\">hash</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#unhash\">unhash</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#rehash\">rehash</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#get_port\">get_port</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned short <a class=\"id\" href=\"#snum\">snum</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Keeping track of sockets in use */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inuse_idx\">inuse_idx</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Memory pressure */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#enter_memory_pressure\">enter_memory_pressure</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#memory_allocated\">memory_allocated</a>;<span class=\"ts\"/><span class=\"comment\">/* Current allocated memory. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a><span class=\"ts\"/>*<a class=\"id\" href=\"#sockets_allocated\">sockets_allocated</a>;<span class=\"ts\"/><span class=\"comment\">/* Current number of sockets. */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Pressure flag: try to collapse.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Technical note: it is used by multiple contexts non atomically.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All the __sk_mem_schedule() is of this nature: accounting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is strict, actions are advisory and have some latency.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#memory_pressure\">memory_pressure</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sysctl_mem\">sysctl_mem</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sysctl_wmem\">sysctl_wmem</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sysctl_rmem\">sysctl_rmem</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_header\">max_header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_autobind\">no_autobind</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a><span class=\"ts\"/>*<a class=\"id\" href=\"#slab\">slab</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_size\">obj_size</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slab_flags\">slab_flags</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a><span class=\"ts\"/>*<a class=\"id\" href=\"#orphan_count\">orphan_count</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock_ops\">request_sock_ops</a><span class=\"ts\"/>*<a class=\"id\" href=\"#rsk_prot\">rsk_prot</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timewait_sock_ops\">timewait_sock_ops</a> *<a class=\"id\" href=\"#twsk_prot\">twsk_prot</a>;", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a><span class=\"ts\"/>*<a class=\"id\" href=\"#hashinfo\">hashinfo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#udp_table\">udp_table</a><span class=\"ts\"/>*<a class=\"id\" href=\"#udp_table\">udp_table</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#raw_hashinfo\">raw_hashinfo</a><span class=\"ts\"/>*<a class=\"id\" href=\"#raw_hash\">raw_hash</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#owner\">owner</a>;", 
"", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[32];", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#SOCK_REFCNT_DEBUG\">SOCK_REFCNT_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#socks\">socks</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#proto_register\">proto_register</a>(struct <a class=\"id\" href=\"#proto\">proto</a> *<a class=\"id\" href=\"#prot\">prot</a>, int <a class=\"id\" href=\"#alloc_slab\">alloc_slab</a>);", 
"extern void <a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(struct <a class=\"id\" href=\"#proto\">proto</a> *<a class=\"id\" href=\"#prot\">prot</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#SOCK_REFCNT_DEBUG\">SOCK_REFCNT_DEBUG</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sk_refcnt_debug_inc\">sk_refcnt_debug_inc</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#socks\">socks</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sk_refcnt_debug_dec\">sk_refcnt_debug_dec</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#socks\">socks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%s socket %p released, %d are still alive\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#socks\">socks</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sk_refcnt_debug_release\">sk_refcnt_debug_release</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>) != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"Destruction of the %s socket %p delayed, refcnt=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>));", 
"}", 
];
xr_frag_insert('l/da/dd26812b67e1b4119162e2a10ffbeab12a56c4.xr', __xr_tmp);
