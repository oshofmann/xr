var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/jbd2/checkpoint.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by Stephen C. Tweedie &lt;sct@redhat.com&gt;, 1999</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 1999 Red Hat Software --- All Rights Reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is part of the Linux kernel and is made available under</span>", 
"<span class=\"comment\"> * the terms of the GNU General Public License, version 2, or at your</span>", 
"<span class=\"comment\"> * option, any later version, incorporated herein by reference.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Checkpoint routines for the generic filesystem journaling code.</span>", 
"<span class=\"comment\"> * Part of the ext2fs journaling system.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Checkpointing is the process of ensuring that a section of the log is</span>", 
"<span class=\"comment\"> * committed fully to disk, so that that portion of the log can be</span>", 
"<span class=\"comment\"> * reused.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Unlink a buffer from a transaction checkpoint list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__buffer_unlink_first\">__buffer_unlink_first</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> == <a class=\"id\" href=\"#jh\">jh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> == <a class=\"id\" href=\"#jh\">jh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Unlink a buffer from a transaction checkpoint(io) list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__buffer_unlink\">__buffer_unlink</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__buffer_unlink_first\">__buffer_unlink_first</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> == <a class=\"id\" href=\"#jh\">jh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> == <a class=\"id\" href=\"#jh\">jh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Move a buffer from the checkpoint list to the checkpoint io list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__buffer_relink_io\">__buffer_relink_io</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cp_transaction\">b_cp_transaction</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__buffer_unlink_first\">__buffer_unlink_first</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_cpnext\">b_cpnext</a>-><a class=\"id\" href=\"#b_cpprev\">b_cpprev</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a> = <a class=\"id\" href=\"#jh\">jh</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Try to release a checkpointed buffer from its transaction.</span>", 
"<span class=\"comment\"> * Returns 1 if we released it and 2 if we also released the</span>", 
"<span class=\"comment\"> * whole transaction.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Requires j_list_lock</span>", 
"<span class=\"comment\"> * Called under jbd_lock_bh_state(jh2bh(jh)), and drops it</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__try_to_free_cp_buf\">__try_to_free_cp_buf</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_jlist\">b_jlist</a> == <a class=\"id\" href=\"#BJ_None\">BJ_None</a> && !<a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#buffer_dirty\">buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>) && !<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"remove from checkpoint list\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__jbd2_journal_remove_checkpoint\">__jbd2_journal_remove_checkpoint</a>(<a class=\"id\" href=\"#jh\">jh</a>) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_remove_journal_head\">jbd2_journal_remove_journal_head</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"release\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * __jbd2_log_wait_for_space: wait until there is space in the journal.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called under j-state_lock *only*.  It will be unlocked if we have to wait</span>", 
"<span class=\"comment\"> * for a checkpoint to free up some space in the log.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__jbd2_log_wait_for_space\">__jbd2_log_wait_for_space</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nblocks\">nblocks</a>, <a class=\"id\" href=\"#space_left\">space_left</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* assert_spin_locked(&amp;journal-&gt;j_state_lock); */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#jbd_space_needed\">jbd_space_needed</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#__jbd2_log_space_left\">__jbd2_log_space_left</a>(<a class=\"id\" href=\"#journal\">journal</a>) &lt; <a class=\"id\" href=\"#nblocks\">nblocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_ABORT\">JBD2_ABORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Test again, another process may have checkpointed while we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * were waiting for the checkpoint lock. If there are no</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * transactions ready to be checkpointed, try to recover</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * journal space by calling cleanup_journal_tail(), and if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that doesn't work, by waiting for the currently committing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * transaction to complete.  If there is absolutely no way</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to make progress, this is either a BUG or corrupted</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * filesystem, so abort the journal and leave a stack</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * trace for forensic evidence.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#jbd_space_needed\">jbd_space_needed</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space_left\">space_left</a> = <a class=\"id\" href=\"#__jbd2_log_space_left\">__jbd2_log_space_left</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#space_left\">space_left</a> &lt; <a class=\"id\" href=\"#nblocks\">nblocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#chkpt\">chkpt</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid\">tid</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chkpt\">chkpt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_log_do_checkpoint\">jbd2_log_do_checkpoint</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#jbd2_cleanup_journal_tail\">jbd2_cleanup_journal_tail</a>(<a class=\"id\" href=\"#journal\">journal</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We were able to recover space; yay! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#tid\">tid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_log_wait_commit\">jbd2_log_wait_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: needed %d blocks and \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"only had %d space available\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#nblocks\">nblocks</a>, <a class=\"id\" href=\"#space_left\">space_left</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: no way to get more \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"journal space in %s\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_abort\">jbd2_journal_abort</a>(<a class=\"id\" href=\"#journal\">journal</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We were unable to perform jbd_trylock_bh_state() inside j_list_lock.</span>", 
"<span class=\"comment\"> * The caller must restart a list walk.  Wait for someone else to run</span>", 
"<span class=\"comment\"> * jbd_unlock_bh_state().</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#jbd_sync_bh\">jbd_sync_bh</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_bh\">get_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_lock_bh_state\">jbd_lock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Clean up transaction's list of buffers submitted for io.</span>", 
"<span class=\"comment\"> * We wait for any pending IO to complete and remove any clean</span>", 
"<span class=\"comment\"> * buffers. Note that we take the buffers in the opposite ordering</span>", 
"<span class=\"comment\"> * from the one in which they were submitted for IO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return 0 on success, and return &lt;0 if some buffers have failed</span>", 
"<span class=\"comment\"> * to be written out.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__wait_cp_io\">__wait_cp_io</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#this_tid\">this_tid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#released\">released</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_tid\">this_tid</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<a class=\"id\" href=\"#restart\">restart</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Did somebody clean up the transaction in the meanwhile? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> != <a class=\"id\" href=\"#transaction\">transaction</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a> != <a class=\"id\" href=\"#this_tid\">this_tid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#released\">released</a> && <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#jbd_trylock_bh_state\">jbd_trylock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_sync_bh\">jbd_sync_bh</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_buffer\">wait_on_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the journal_head may have gone by now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"brelse\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Now in whatever state the buffer currently is, we know that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * it has been written out and so we can drop it from the list</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#released\">released</a> = <a class=\"id\" href=\"#__jbd2_journal_remove_checkpoint\">__jbd2_journal_remove_checkpoint</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_remove_journal_head\">jbd2_journal_remove_journal_head</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#__flush_batch\">__flush_batch</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, int *<a class=\"id\" href=\"#batch_count\">batch_count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; *<a class=\"id\" href=\"#batch_count\">batch_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_dirty_buffer\">write_dirty_buffer</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_chkpt_bhs\">j_chkpt_bhs</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#WRITE\">WRITE</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; *<a class=\"id\" href=\"#batch_count\">batch_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_chkpt_bhs\">j_chkpt_bhs</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_jwrite\">clear_buffer_jwrite</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"brelse\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#batch_count\">batch_count</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Try to flush one buffer from the checkpoint list to disk.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return 1 if something happened which requires us to abort the current</span>", 
"<span class=\"comment\"> * scan of the checkpoint list.  Return &lt;0 if the buffer has failed to</span>", 
"<span class=\"comment\"> * be written out.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with j_list_lock held and drops it if 1 is returned</span>", 
"<span class=\"comment\"> * Called under jbd_lock_bh_state(jh2bh(jh)), and drops it</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__process_buffer\">__process_buffer</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int *<a class=\"id\" href=\"#batch_count\">batch_count</a>, <a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_buffer\">wait_on_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the journal_head may have gone by now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"brelse\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_transaction\">b_transaction</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_transaction\">b_transaction</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_chp_stats\">t_chp_stats</a>.<a class=\"id\" href=\"#cs_forced_to_close\">cs_forced_to_close</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_log_start_commit\">jbd2_log_start_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_log_wait_commit\">jbd2_log_wait_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#buffer_dirty\">buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, !<a class=\"id\" href=\"#buffer_jbddirty\">buffer_jbddirty</a>(<a class=\"id\" href=\"#bh\">bh</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"remove from checkpoint\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__jbd2_journal_remove_checkpoint\">__jbd2_journal_remove_checkpoint</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_remove_journal_head\">jbd2_journal_remove_journal_head</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>} else {", 
];
xr_frag_insert('l/db/217cb9b16584e2ca61ba64b91b47994a29c801.xr', __xr_tmp);
