var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__NET_PKT_CLS_H\">__NET_PKT_CLS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__NET_PKT_CLS_H\">__NET_PKT_CLS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pkt_cls\">pkt_cls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sch_generic\">sch_generic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#act_api\">act_api</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Basic packet classifier frontend definitions. */</span>", 
"", 
"struct <a class=\"id\" href=\"#tcf_walker\">tcf_walker</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#stop\">stop</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#skip\">skip</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *, unsigned long <a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#tcf_walker\">tcf_walker</a> *);", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#register_tcf_proto_ops\">register_tcf_proto_ops</a>(struct <a class=\"id\" href=\"#tcf_proto_ops\">tcf_proto_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"extern int <a class=\"id\" href=\"#unregister_tcf_proto_ops\">unregister_tcf_proto_ops</a>(struct <a class=\"id\" href=\"#tcf_proto_ops\">tcf_proto_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long", 
"<a class=\"id\" href=\"#__cls_set_class\">__cls_set_class</a>(unsigned long *<a class=\"id\" href=\"#clp\">clp</a>, unsigned long <a class=\"id\" href=\"#cl\">cl</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_cl\">old_cl</a>;", 
" ", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_cl\">old_cl</a> = *<a class=\"id\" href=\"#clp\">clp</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#clp\">clp</a> = <a class=\"id\" href=\"#cl\">cl</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old_cl\">old_cl</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long", 
"<a class=\"id\" href=\"#cls_set_class\">cls_set_class</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *<a class=\"id\" href=\"#tp\">tp</a>, unsigned long *<a class=\"id\" href=\"#clp\">clp</a>, ", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cl\">cl</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_cl\">old_cl</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcf_tree_lock\">tcf_tree_lock</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_cl\">old_cl</a> = <a class=\"id\" href=\"#__cls_set_class\">__cls_set_class</a>(<a class=\"id\" href=\"#clp\">clp</a>, <a class=\"id\" href=\"#cl\">cl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcf_tree_unlock\">tcf_tree_unlock</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
" ", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old_cl\">old_cl</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#tcf_bind_filter\">tcf_bind_filter</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *<a class=\"id\" href=\"#tp\">tp</a>, struct <a class=\"id\" href=\"#tcf_result\">tcf_result</a> *<a class=\"id\" href=\"#r\">r</a>, unsigned long <a class=\"id\" href=\"#base\">base</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cl\">cl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cl\">cl</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cl_ops\">cl_ops</a>-><a class=\"id\" href=\"#bind_tcf\">bind_tcf</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#classid\">classid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cl\">cl</a> = <a class=\"id\" href=\"#cls_set_class\">cls_set_class</a>(<a class=\"id\" href=\"#tp\">tp</a>, &amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#cl\">cl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cl\">cl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cl_ops\">cl_ops</a>-><a class=\"id\" href=\"#unbind_tcf\">unbind_tcf</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#cl\">cl</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#tcf_unbind_filter\">tcf_unbind_filter</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *<a class=\"id\" href=\"#tp\">tp</a>, struct <a class=\"id\" href=\"#tcf_result\">tcf_result</a> *<a class=\"id\" href=\"#r\">r</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cl\">cl</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cl\">cl</a> = <a class=\"id\" href=\"#__cls_set_class\">__cls_set_class</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#class\">class</a>, 0)) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cl_ops\">cl_ops</a>-><a class=\"id\" href=\"#unbind_tcf\">unbind_tcf</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#cl\">cl</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ACT\">CONFIG_NET_CLS_ACT</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tc_action\">tc_action</a> *<a class=\"id\" href=\"#action\">action</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"<span class=\"comment\">/* Map to export classifier specific extension TLV types to the</span>", 
"<span class=\"comment\"> * generic extensions API. Unsupported extensions must be set to 0.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tcf_ext_map\">tcf_ext_map</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#police\">police</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tcf_exts_is_predicative - check if a predicative extension is present</span>", 
"<span class=\"comment\"> * @exts: tc filter extensions handle</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 1 if a predicative extension is present, i.e. an extension which</span>", 
"<span class=\"comment\"> * might cause further actions and thus overrule the regular tcf_result.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#tcf_exts_is_predicative\">tcf_exts_is_predicative</a>(struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> *<a class=\"id\" href=\"#exts\">exts</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ACT\">CONFIG_NET_CLS_ACT</a>", 
"<span class=\"ts\"/>return !!<a class=\"id\" href=\"#exts\">exts</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"#else", 
"<span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tcf_exts_is_available - check if at least one extension is present</span>", 
"<span class=\"comment\"> * @exts: tc filter extensions handle</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 1 if at least one extension is present.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#tcf_exts_is_available\">tcf_exts_is_available</a>(struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> *<a class=\"id\" href=\"#exts\">exts</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* All non-predicative extensions must be added here. */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcf_exts_is_predicative\">tcf_exts_is_predicative</a>(<a class=\"id\" href=\"#exts\">exts</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tcf_exts_exec - execute tc filter extensions</span>", 
"<span class=\"comment\"> * @skb: socket buffer</span>", 
"<span class=\"comment\"> * @exts: tc filter extensions handle</span>", 
"<span class=\"comment\"> * @res: desired result</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Executes all configured extensions. Returns 0 on a normal execution,</span>", 
"<span class=\"comment\"> * a negative number if the filter must be considered unmatched or</span>", 
"<span class=\"comment\"> * a positive action code (TC_ACT_*) which must be returned to the</span>", 
"<span class=\"comment\"> * underlying layer.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#tcf_exts_exec\">tcf_exts_exec</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> *<a class=\"id\" href=\"#exts\">exts</a>,", 
"<span class=\"ts\"/>       struct <a class=\"id\" href=\"#tcf_result\">tcf_result</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ACT\">CONFIG_NET_CLS_ACT</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#exts\">exts</a>-><a class=\"id\" href=\"#action\">action</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tcf_action_exec\">tcf_action_exec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#exts\">exts</a>-><a class=\"id\" href=\"#action\">action</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#tcf_exts_validate\">tcf_exts_validate</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *<a class=\"id\" href=\"#tp\">tp</a>, struct <a class=\"id\" href=\"#nlattr\">nlattr</a> **<a class=\"id\" href=\"#tb\">tb</a>,", 
"<span class=\"ts\"/>                     struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#rate_tlv\">rate_tlv</a>, struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> *<a class=\"id\" href=\"#exts\">exts</a>,", 
"<span class=\"ts\"/>                     const struct <a class=\"id\" href=\"#tcf_ext_map\">tcf_ext_map</a> *<a class=\"id\" href=\"#map\">map</a>);", 
"extern void <a class=\"id\" href=\"#tcf_exts_destroy\">tcf_exts_destroy</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *<a class=\"id\" href=\"#tp\">tp</a>, struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> *<a class=\"id\" href=\"#exts\">exts</a>);", 
"extern void <a class=\"id\" href=\"#tcf_exts_change\">tcf_exts_change</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *<a class=\"id\" href=\"#tp\">tp</a>, struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/>                     struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> *<a class=\"id\" href=\"#src\">src</a>);", 
"extern int <a class=\"id\" href=\"#tcf_exts_dump\">tcf_exts_dump</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> *<a class=\"id\" href=\"#exts\">exts</a>,", 
];
xr_frag_insert('l/db/9ba11618f9e0cee62d5fe70b157ff898498568.xr', __xr_tmp);
