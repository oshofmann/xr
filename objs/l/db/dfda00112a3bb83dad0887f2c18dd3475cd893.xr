var __xr_tmp = [
"<span class=\"comment\">/* Request a key from userspace</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2004-2007 Red Hat, Inc. All Rights Reserved.</span>", 
"<span class=\"comment\"> * Written by David Howells (dhowells@redhat.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See Documentation/keys-request-key.txt</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#keyctl\">keyctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#key_negative_timeout\">key_negative_timeout</a><span class=\"ts\"/>60<span class=\"ts\"/><span class=\"comment\">/* default timeout on a negative key's existence */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * wait_on_bit() sleep function for uninterruptible waiting</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#key_wait_bit\">key_wait_bit</a>(void *<a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * wait_on_bit() sleep function for interruptible waiting</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#key_wait_bit_intr\">key_wait_bit_intr</a>(void *<a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>) ? -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a> : 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * call to complete the construction of a key</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#complete_request_key\">complete_request_key</a>(struct <a class=\"id\" href=\"#key_construction\">key_construction</a> *<a class=\"id\" href=\"#cons\">cons</a>, int <a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"{%d,%d},%d\", <a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_negate_and_link\">key_negate_and_link</a>(<a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#key_negative_timeout\">key_negative_timeout</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_revoke\">key_revoke</a>(<a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#authkey\">authkey</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cons\">cons</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#complete_request_key\">complete_request_key</a>);", 
"", 
"static int <a class=\"id\" href=\"#umh_keys_init\">umh_keys_init</a>(struct <a class=\"id\" href=\"#subprocess_info\">subprocess_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = (struct <a class=\"id\" href=\"#cred\">cred</a>*)<a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring\">keyring</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is called in context of freshly forked kthread before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * kernel_execve(), we can just change our -&gt;session_keyring.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#install_session_keyring_to_cred\">install_session_keyring_to_cred</a>(<a class=\"id\" href=\"#cred\">cred</a>, <a class=\"id\" href=\"#keyring\">keyring</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#umh_keys_cleanup\">umh_keys_cleanup</a>(struct <a class=\"id\" href=\"#subprocess_info\">subprocess_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring\">keyring</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#keyring\">keyring</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#call_usermodehelper_keys\">call_usermodehelper_keys</a>(char *<a class=\"id\" href=\"#path\">path</a>, char **<a class=\"id\" href=\"#argv\">argv</a>, char **<a class=\"id\" href=\"#envp\">envp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#session_keyring\">session_keyring</a>, enum <a class=\"id\" href=\"#umh_wait\">umh_wait</a> <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a> = (<a class=\"id\" href=\"#wait\">wait</a> == <a class=\"id\" href=\"#UMH_NO_WAIT\">UMH_NO_WAIT</a>) ? <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> : <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#subprocess_info\">subprocess_info</a> *<a class=\"id\" href=\"#info\">info</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_usermodehelper_setup\">call_usermodehelper_setup</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#argv\">argv</a>, <a class=\"id\" href=\"#envp\">envp</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_usermodehelper_setfns\">call_usermodehelper_setfns</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#umh_keys_init\">umh_keys_init</a>, <a class=\"id\" href=\"#umh_keys_cleanup\">umh_keys_cleanup</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#session_keyring\">session_keyring</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#call_usermodehelper_exec\">call_usermodehelper_exec</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * request userspace finish the construction of a key</span>", 
"<span class=\"comment\"> * - execute \"/sbin/request-key &lt;op&gt; &lt;key&gt; &lt;uid&gt; &lt;gid&gt; &lt;keyring&gt; &lt;keyring&gt; &lt;keyring&gt;\"</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#call_sbin_request_key\">call_sbin_request_key</a>(struct <a class=\"id\" href=\"#key_construction\">key_construction</a> *<a class=\"id\" href=\"#cons\">cons</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#aux\">aux</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#prkey\">prkey</a>, <a class=\"id\" href=\"#sskey\">sskey</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#key\">key</a>, *<a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#authkey\">authkey</a>, *<a class=\"id\" href=\"#keyring\">keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#session\">session</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#argv\">argv</a>[9], *<a class=\"id\" href=\"#envp\">envp</a>[3], <a class=\"id\" href=\"#uid_str\">uid_str</a>[12], <a class=\"id\" href=\"#gid_str\">gid_str</a>[12];", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#key_str\">key_str</a>[12], <a class=\"id\" href=\"#keyring_str\">keyring_str</a>[3][12];", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#desc\">desc</a>[20];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"{%d},{%d},%s\", <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#install_user_keyrings\">install_user_keyrings</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_alloc\">error_alloc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate a new session keyring */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#desc\">desc</a>, \"_req.%u\", <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#get_current_cred\">get_current_cred</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#keyring\">keyring</a> = <a class=\"id\" href=\"#keyring_alloc\">keyring_alloc</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a>, <a class=\"id\" href=\"#cred\">cred</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KEY_ALLOC_QUOTA_OVERRUN\">KEY_ALLOC_QUOTA_OVERRUN</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#keyring\">keyring</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#keyring\">keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_alloc\">error_alloc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* attach the auth key to the session keyring */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_link\">key_link</a>(<a class=\"id\" href=\"#keyring\">keyring</a>, <a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_link\">error_link</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* record the UID and GID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#uid_str\">uid_str</a>, \"%d\", <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#gid_str\">gid_str</a>, \"%d\", <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we say which key is under construction */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#key_str\">key_str</a>, \"%d\", <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we specify the process's default keyrings */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#keyring_str\">keyring_str</a>[0], \"%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#thread_keyring\">thread_keyring</a> ? <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#thread_keyring\">thread_keyring</a>-><a class=\"id\" href=\"#serial\">serial</a> : 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prkey\">prkey</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#tgcred\">tgcred</a>-><a class=\"id\" href=\"#process_keyring\">process_keyring</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prkey\">prkey</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#tgcred\">tgcred</a>-><a class=\"id\" href=\"#process_keyring\">process_keyring</a>-><a class=\"id\" href=\"#serial\">serial</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#keyring_str\">keyring_str</a>[1], \"%d\", <a class=\"id\" href=\"#prkey\">prkey</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#tgcred\">tgcred</a>-><a class=\"id\" href=\"#session_keyring\">session_keyring</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#session\">session</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#session_keyring\">session_keyring</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sskey\">sskey</a> = <a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#serial\">serial</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#keyring_str\">keyring_str</a>[2], \"%d\", <a class=\"id\" href=\"#sskey\">sskey</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set up a minimal environment */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#envp\">envp</a>[<a class=\"id\" href=\"#i\">i</a>++] = \"HOME=/\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#envp\">envp</a>[<a class=\"id\" href=\"#i\">i</a>++] = \"PATH=/sbin:/bin:/usr/sbin:/usr/bin\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#envp\">envp</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set up the argument list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#i\">i</a>++] = \"/sbin/request-key\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#i\">i</a>++] = (char *) <a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#key_str\">key_str</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#uid_str\">uid_str</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#gid_str\">gid_str</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#keyring_str\">keyring_str</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#keyring_str\">keyring_str</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#keyring_str\">keyring_str</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* do it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#call_usermodehelper_keys\">call_usermodehelper_keys</a>(<a class=\"id\" href=\"#argv\">argv</a>[0], <a class=\"id\" href=\"#argv\">argv</a>, <a class=\"id\" href=\"#envp\">envp</a>, <a class=\"id\" href=\"#keyring\">keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#UMH_WAIT_PROC\">UMH_WAIT_PROC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kdebug\">kdebug</a>(\"usermode -> 0x%x\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ret is the exit/wait code */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_USER_CONSTRUCT\">KEY_FLAG_USER_CONSTRUCT</a>, &amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#flags\">flags</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key_validate\">key_validate</a>(<a class=\"id\" href=\"#key\">key</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOKEY\">ENOKEY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ignore any errors from userspace if the key was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * instantiated */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#error_link\">error_link</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#keyring\">keyring</a>);", 
"", 
"<a class=\"id\" href=\"#error_alloc\">error_alloc</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete_request_key\">complete_request_key</a>(<a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = %d\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * call out to userspace for key construction</span>", 
"<span class=\"comment\"> * - we ignore program failure and go on key status instead</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#construct_key\">construct_key</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, const void *<a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>, void *<a class=\"id\" href=\"#aux\">aux</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key_construction\">key_construction</a> *<a class=\"id\" href=\"#cons\">cons</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#request_key_actor_t\">request_key_actor_t</a> <a class=\"id\" href=\"#actor\">actor</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#authkey\">authkey</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"%d,%p,%zu,%p\", <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>, <a class=\"id\" href=\"#callout_len\">callout_len</a>, <a class=\"id\" href=\"#aux\">aux</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cons\">cons</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#cons\">cons</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cons\">cons</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate an authorisation key */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#request_key_auth_new\">request_key_auth_new</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>, <a class=\"id\" href=\"#callout_len\">callout_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#authkey\">authkey</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cons\">cons</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* make the call */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#actor\">actor</a> = <a class=\"id\" href=\"#call_sbin_request_key\">call_sbin_request_key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#request_key\">request_key</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#actor\">actor</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#request_key\">request_key</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#actor\">actor</a>(<a class=\"id\" href=\"#cons\">cons</a>, \"create\", <a class=\"id\" href=\"#aux\">aux</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check that the actor called complete_request_key() prior to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * returning an error */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#ret\">ret</a> &lt; 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_REVOKED\">KEY_FLAG_REVOKED</a>, &amp;<a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#flags\">flags</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = %d\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * get the appropriate destination keyring for the request</span>", 
"<span class=\"comment\"> * - we return whatever keyring we select with an extra reference upon it which</span>", 
"<span class=\"comment\"> *   the caller must release</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#construct_get_dest_keyring\">construct_get_dest_keyring</a>(struct <a class=\"id\" href=\"#key\">key</a> **<a class=\"id\" href=\"#_dest_keyring\">_dest_keyring</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a> = *<a class=\"id\" href=\"#_dest_keyring\">_dest_keyring</a>, *<a class=\"id\" href=\"#authkey\">authkey</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"%p\", <a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the appropriate keyring */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the caller supplied one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* use a default keyring; falling through the cases until we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * find one that we actually have */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#jit_keyring\">jit_keyring</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_DEFAULT\">KEY_REQKEY_DEFL_DEFAULT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_REQUESTOR_KEYRING\">KEY_REQKEY_DEFL_REQUESTOR_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a> = <a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_REVOKED\">KEY_FLAG_REVOKED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_THREAD_KEYRING\">KEY_REQKEY_DEFL_THREAD_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#thread_keyring\">thread_keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_PROCESS_KEYRING\">KEY_REQKEY_DEFL_PROCESS_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#tgcred\">tgcred</a>-><a class=\"id\" href=\"#process_keyring\">process_keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_SESSION_KEYRING\">KEY_REQKEY_DEFL_SESSION_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#tgcred\">tgcred</a>-><a class=\"id\" href=\"#session_keyring\">session_keyring</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_USER_SESSION_KEYRING\">KEY_REQKEY_DEFL_USER_SESSION_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#session_keyring\">session_keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_USER_KEYRING\">KEY_REQKEY_DEFL_USER_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#uid_keyring\">uid_keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_GROUP_KEYRING\">KEY_REQKEY_DEFL_GROUP_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#_dest_keyring\">_dest_keyring</a> = <a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" [dk %d]\", <a class=\"id\" href=\"#key_serial\">key_serial</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>));", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * allocate a new key in under-construction state and attempt to link it in to</span>", 
"<span class=\"comment\"> * the requested place</span>", 
"<span class=\"comment\"> * - may return a key that's already under construction instead</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#construct_alloc_key\">construct_alloc_key</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#key_user\">key_user</a> *<a class=\"id\" href=\"#user\">user</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#key\">key</a> **<a class=\"id\" href=\"#_key\">_key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#keyring_list\">keyring_list</a> *<a class=\"id\" href=\"#prealloc\">prealloc</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"%s,%s,,,\", <a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#description\">description</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#_key\">_key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#cons_lock\">cons_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key_alloc\">key_alloc</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a>, <a class=\"id\" href=\"#cred\">cred</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KEY_POS_ALL\">KEY_POS_ALL</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key\">key</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#alloc_failed\">alloc_failed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_USER_CONSTRUCT\">KEY_FLAG_USER_CONSTRUCT</a>, &amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__key_link_begin\">__key_link_begin</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#prealloc\">prealloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#link_prealloc_failed\">link_prealloc_failed</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* attach the key to the destination keyring under lock, but we do need</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to do another check just in case someone beat us to it whilst we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * waited for locks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#key_construction_mutex\">key_construction_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#search_process_keyrings\">search_process_keyrings</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#match\">match</a>, <a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#key_already_present\">key_already_present</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__key_link\">__key_link</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#key\">key</a>, &amp;<a class=\"id\" href=\"#prealloc\">prealloc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#key_construction_mutex\">key_construction_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__key_link_end\">__key_link_end</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#prealloc\">prealloc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#cons_lock\">cons_lock</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#_key\">_key</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = 0 [%d]\", <a class=\"id\" href=\"#key_serial\">key_serial</a>(<a class=\"id\" href=\"#key\">key</a>));", 
"<span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the key is now present - we tell the caller that we found it by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * returning -EINPROGRESS  */</span>", 
"<a class=\"id\" href=\"#key_already_present\">key_already_present</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#key_construction_mutex\">key_construction_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__key_link_check_live_key\">__key_link_check_live_key</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__key_link\">__key_link</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#key\">key</a>, &amp;<a class=\"id\" href=\"#prealloc\">prealloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__key_link_end\">__key_link_end</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#prealloc\">prealloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#link_check_failed\">link_check_failed</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#cons_lock\">cons_lock</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#_key\">_key</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = -EINPROGRESS [%d]\", <a class=\"id\" href=\"#key_serial\">key_serial</a>(<a class=\"id\" href=\"#key\">key</a>));", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>;", 
"", 
"<a class=\"id\" href=\"#link_check_failed\">link_check_failed</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#cons_lock\">cons_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = %d [linkcheck]\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#link_prealloc_failed\">link_prealloc_failed</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#cons_lock\">cons_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = %d [prelink]\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#alloc_failed\">alloc_failed</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#cons_lock\">cons_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = %ld\", <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key\">key</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * commence key construction</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#construct_key_and_link\">construct_key_and_link</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#aux\">aux</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key_user\">key_user</a> *<a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#key_user_lookup\">key_user_lookup</a>(<a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>(), <a class=\"id\" href=\"#current_user_ns\">current_user_ns</a>());", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#user\">user</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#construct_get_dest_keyring\">construct_get_dest_keyring</a>(&amp;<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#construct_alloc_key\">construct_alloc_key</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#user\">user</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_user_put\">key_user_put</a>(<a class=\"id\" href=\"#user\">user</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#construct_key\">construct_key</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>, <a class=\"id\" href=\"#callout_len\">callout_len</a>, <a class=\"id\" href=\"#aux\">aux</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdebug\">kdebug</a>(\"cons failed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#construction_failed\">construction_failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = key %d\", <a class=\"id\" href=\"#key_serial\">key_serial</a>(<a class=\"id\" href=\"#key\">key</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<a class=\"id\" href=\"#construction_failed\">construction_failed</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_negate_and_link\">key_negate_and_link</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#key_negative_timeout\">key_negative_timeout</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = %d\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * request a key</span>", 
"<span class=\"comment\"> * - search the process's keyrings</span>", 
"<span class=\"comment\"> * - check the list of keys being created or updated</span>", 
"<span class=\"comment\"> * - call out to userspace for a key if supplementary info was provided</span>", 
"<span class=\"comment\"> * - cache the key in an appropriate keyring</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#request_key_and_link\">request_key_and_link</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const void *<a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#aux\">aux</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"%s,%s,%p,%zu,%p,%p,%lx\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>, <a class=\"id\" href=\"#callout_len\">callout_len</a>, <a class=\"id\" href=\"#aux\">aux</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* search all the process keyrings for a key */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#search_process_keyrings\">search_process_keyrings</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#match\">match</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#cred\">cred</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#construct_get_dest_keyring\">construct_get_dest_keyring</a>(&amp;<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_link\">key_link</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>) != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/>} else  {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the search failed, but the keyrings were searchable, so we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * should consult userspace if we can */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOKEY\">ENOKEY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#callout_info\">callout_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#construct_key_and_link\">construct_key_and_link</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#callout_len\">callout_len</a>, <a class=\"id\" href=\"#aux\">aux</a>, <a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = %p\", <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#key\">key</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * wait for construction of a key to complete</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#wait_for_key_construction\">wait_for_key_construction</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#intr\">intr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_on_bit\">wait_on_bit</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#KEY_FLAG_USER_CONSTRUCT\">KEY_FLAG_USER_CONSTRUCT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#intr\">intr</a> ? <a class=\"id\" href=\"#key_wait_bit_intr\">key_wait_bit_intr</a> : <a class=\"id\" href=\"#key_wait_bit\">key_wait_bit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#intr\">intr</a> ? <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a> : <a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_NEGATIVE\">KEY_FLAG_NEGATIVE</a>, &amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOKEY\">ENOKEY</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#key_validate\">key_validate</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#wait_for_key_construction\">wait_for_key_construction</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * request a key</span>", 
"<span class=\"comment\"> * - search the process's keyrings</span>", 
"<span class=\"comment\"> * - check the list of keys being created or updated</span>", 
"<span class=\"comment\"> * - call out to userspace for a key if supplementary info was provided</span>", 
"<span class=\"comment\"> * - waits uninterruptible for creation to complete</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#request_key\">request_key</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#callout_info\">callout_info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#callout_info\">callout_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#callout_len\">callout_len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#callout_info\">callout_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#request_key_and_link\">request_key_and_link</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>, <a class=\"id\" href=\"#callout_len\">callout_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#KEY_ALLOC_IN_QUOTA\">KEY_ALLOC_IN_QUOTA</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key\">key</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_for_key_construction\">wait_for_key_construction</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#key\">key</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#request_key\">request_key</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * request a key with auxiliary data for the upcaller</span>", 
"<span class=\"comment\"> * - search the process's keyrings</span>", 
"<span class=\"comment\"> * - check the list of keys being created or updated</span>", 
"<span class=\"comment\"> * - call out to userspace for a key if supplementary info was provided</span>", 
"<span class=\"comment\"> * - waits uninterruptible for creation to complete</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#request_key_with_auxdata\">request_key_with_auxdata</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const void *<a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#aux\">aux</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#request_key_and_link\">request_key_and_link</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>, <a class=\"id\" href=\"#callout_len\">callout_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#aux\">aux</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#KEY_ALLOC_IN_QUOTA\">KEY_ALLOC_IN_QUOTA</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key\">key</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_for_key_construction\">wait_for_key_construction</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#key\">key</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#request_key_with_auxdata\">request_key_with_auxdata</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * request a key (allow async construction)</span>", 
"<span class=\"comment\"> * - search the process's keyrings</span>", 
"<span class=\"comment\"> * - check the list of keys being created or updated</span>", 
"<span class=\"comment\"> * - call out to userspace for a key if supplementary info was provided</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#request_key_async\">request_key_async</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const void *<a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#request_key_and_link\">request_key_and_link</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#callout_len\">callout_len</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#KEY_ALLOC_IN_QUOTA\">KEY_ALLOC_IN_QUOTA</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#request_key_async\">request_key_async</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * request a key with auxiliary data for the upcaller (allow async construction)</span>", 
"<span class=\"comment\"> * - search the process's keyrings</span>", 
"<span class=\"comment\"> * - check the list of keys being created or updated</span>", 
"<span class=\"comment\"> * - call out to userspace for a key if supplementary info was provided</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#request_key_async_with_auxdata\">request_key_async_with_auxdata</a>(struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const void *<a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#aux\">aux</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#request_key_and_link\">request_key_and_link</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#callout_len\">callout_len</a>, <a class=\"id\" href=\"#aux\">aux</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#KEY_ALLOC_IN_QUOTA\">KEY_ALLOC_IN_QUOTA</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#request_key_async_with_auxdata\">request_key_async_with_auxdata</a>);", 
];
xr_frag_insert('l/db/dfda00112a3bb83dad0887f2c18dd3475cd893.xr', __xr_tmp);
