var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_PGTABLE_H\">_ASM_X86_PGTABLE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_PGTABLE_H\">_ASM_X86_PGTABLE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable_types\">pgtable_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Macro to mark a page protection value as UC-</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pgprot_noncached\">pgprot_noncached</a>(<a class=\"id\" href=\"#prot\">prot</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> &gt; 3)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/> ? (<a class=\"id\" href=\"#__pgprot\">__pgprot</a>(<a class=\"id\" href=\"#pgprot_val\">pgprot_val</a>(<a class=\"id\" href=\"#prot\">prot</a>) | <a class=\"id\" href=\"#_PAGE_CACHE_UC_MINUS\">_PAGE_CACHE_UC_MINUS</a>))<span class=\"ts\"/>\\", 
"<span class=\"ts\"/> : (<a class=\"id\" href=\"#prot\">prot</a>))", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ZERO_PAGE is a global shared page that is always zero: used</span>", 
"<span class=\"comment\"> * for zero-mapped memory areas etc..</span>", 
"<span class=\"comment\"> */</span>", 
"extern unsigned long <a class=\"id\" href=\"#empty_zero_page\">empty_zero_page</a>[<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> / sizeof(unsigned long)];", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ZERO_PAGE\">ZERO_PAGE</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>) (<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#empty_zero_page\">empty_zero_page</a>))", 
"", 
"extern <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#pgd_lock\">pgd_lock</a>;", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#pgd_list\">pgd_list</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PARAVIRT\">CONFIG_PARAVIRT</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#paravirt\">paravirt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#else  <span class=\"comment\">/* !CONFIG_PARAVIRT */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#set_pte\">set_pte</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#native_set_pte\">native_set_pte</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#set_pte_at\">set_pte_at</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_set_pte_at\">native_set_pte_at</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#set_pte_atomic\">set_pte_atomic</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#native_set_pte_atomic\">native_set_pte_atomic</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#set_pmd\">set_pmd</a>(<a class=\"id\" href=\"#pmdp\">pmdp</a>, <a class=\"id\" href=\"#pmd\">pmd</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#native_set_pmd\">native_set_pmd</a>(<a class=\"id\" href=\"#pmdp\">pmdp</a>, <a class=\"id\" href=\"#pmd\">pmd</a>)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__PAGETABLE_PUD_FOLDED\">__PAGETABLE_PUD_FOLDED</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#set_pgd\">set_pgd</a>(<a class=\"id\" href=\"#pgdp\">pgdp</a>, <a class=\"id\" href=\"#pgd\">pgd</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#native_set_pgd\">native_set_pgd</a>(<a class=\"id\" href=\"#pgdp\">pgdp</a>, <a class=\"id\" href=\"#pgd\">pgd</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pgd_clear\">pgd_clear</a>(<a class=\"id\" href=\"#pgd\">pgd</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#native_pgd_clear\">native_pgd_clear</a>(<a class=\"id\" href=\"#pgd\">pgd</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#set_pud\">set_pud</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#set_pud\">set_pud</a>(<a class=\"id\" href=\"#pudp\">pudp</a>, <a class=\"id\" href=\"#pud\">pud</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#native_set_pud\">native_set_pud</a>(<a class=\"id\" href=\"#pudp\">pudp</a>, <a class=\"id\" href=\"#pud\">pud</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__PAGETABLE_PMD_FOLDED\">__PAGETABLE_PMD_FOLDED</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pud_clear\">pud_clear</a>(<a class=\"id\" href=\"#pud\">pud</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#native_pud_clear\">native_pud_clear</a>(<a class=\"id\" href=\"#pud\">pud</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pte_clear\">pte_clear</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_pte_clear\">native_pte_clear</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pmd_clear\">pmd_clear</a>(<a class=\"id\" href=\"#pmd\">pmd</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#native_pmd_clear\">native_pmd_clear</a>(<a class=\"id\" href=\"#pmd\">pmd</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pte_update\">pte_update</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>)              do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pte_update_defer\">pte_update_defer</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>)        do { } while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pgd_val\">pgd_val</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_pgd_val\">native_pgd_val</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__pgd\">__pgd</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_make_pgd\">native_make_pgd</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__PAGETABLE_PUD_FOLDED\">__PAGETABLE_PUD_FOLDED</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pud_val\">pud_val</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_pud_val\">native_pud_val</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__pud\">__pud</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_make_pud\">native_make_pud</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__PAGETABLE_PMD_FOLDED\">__PAGETABLE_PMD_FOLDED</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pmd_val\">pmd_val</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_pmd_val\">native_pmd_val</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__pmd\">__pmd</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_make_pmd\">native_make_pmd</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pte_val\">pte_val</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_pte_val\">native_pte_val</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__pte\">__pte</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_make_pte\">native_make_pte</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#arch_end_context_switch\">arch_end_context_switch</a>(<a class=\"id\" href=\"#prev\">prev</a>)<span class=\"ts\"/>do {} while(0)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_PARAVIRT */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The following only work if pte_present() is true.</span>", 
"<span class=\"comment\"> * Undefined behaviour if not..</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_dirty\">pte_dirty</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#_PAGE_DIRTY\">_PAGE_DIRTY</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_young\">pte_young</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#_PAGE_ACCESSED\">_PAGE_ACCESSED</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_write\">pte_write</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#_PAGE_RW\">_PAGE_RW</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_file\">pte_file</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#_PAGE_FILE\">_PAGE_FILE</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_huge\">pte_huge</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_global\">pte_global</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#_PAGE_GLOBAL\">_PAGE_GLOBAL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_exec\">pte_exec</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return !(<a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#_PAGE_NX\">_PAGE_NX</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_special\">pte_special</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#_PAGE_SPECIAL\">_PAGE_SPECIAL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#pte_pfn\">pte_pfn</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pte_val\">pte_val</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#PTE_PFN_MASK\">PTE_PFN_MASK</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#pmd_pfn\">pmd_pfn</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pmd\">pmd</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pmd_val\">pmd_val</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) &amp; <a class=\"id\" href=\"#PTE_PFN_MASK\">PTE_PFN_MASK</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pte_page\">pte_page</a>(<a class=\"id\" href=\"#pte\">pte</a>)<span class=\"ts\"/><a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pte_pfn\">pte_pfn</a>(<a class=\"id\" href=\"#pte\">pte</a>))", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pmd_large\">pmd_large</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pmd_flags\">pmd_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; (<a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a> | <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>)) ==", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a> | <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_set_flags\">pte_set_flags</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#pteval_t\">pteval_t</a> <a class=\"id\" href=\"#set\">set</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pteval_t\">pteval_t</a> <a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#native_pte_val\">native_pte_val</a>(<a class=\"id\" href=\"#pte\">pte</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#native_make_pte\">native_make_pte</a>(<a class=\"id\" href=\"#v\">v</a> | <a class=\"id\" href=\"#set\">set</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_clear_flags\">pte_clear_flags</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#pteval_t\">pteval_t</a> <a class=\"id\" href=\"#clear\">clear</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pteval_t\">pteval_t</a> <a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#native_pte_val\">native_pte_val</a>(<a class=\"id\" href=\"#pte\">pte</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#native_make_pte\">native_make_pte</a>(<a class=\"id\" href=\"#v\">v</a> &amp; ~<a class=\"id\" href=\"#clear\">clear</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_mkclean\">pte_mkclean</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_clear_flags\">pte_clear_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_DIRTY\">_PAGE_DIRTY</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_mkold\">pte_mkold</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_clear_flags\">pte_clear_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_ACCESSED\">_PAGE_ACCESSED</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_wrprotect\">pte_wrprotect</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_clear_flags\">pte_clear_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_RW\">_PAGE_RW</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_mkexec\">pte_mkexec</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_clear_flags\">pte_clear_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_NX\">_PAGE_NX</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_mkdirty\">pte_mkdirty</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_set_flags\">pte_set_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_DIRTY\">_PAGE_DIRTY</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_mkyoung\">pte_mkyoung</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_set_flags\">pte_set_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_ACCESSED\">_PAGE_ACCESSED</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_mkwrite\">pte_mkwrite</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_set_flags\">pte_set_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_RW\">_PAGE_RW</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_mkhuge\">pte_mkhuge</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_set_flags\">pte_set_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_clrhuge\">pte_clrhuge</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_clear_flags\">pte_clear_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_mkglobal\">pte_mkglobal</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_set_flags\">pte_set_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_GLOBAL\">_PAGE_GLOBAL</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_clrglobal\">pte_clrglobal</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_clear_flags\">pte_clear_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_GLOBAL\">_PAGE_GLOBAL</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_mkspecial\">pte_mkspecial</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_set_flags\">pte_set_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#_PAGE_SPECIAL\">_PAGE_SPECIAL</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mask out unsupported bits in a present pgprot.  Non-present pgprots</span>", 
"<span class=\"comment\"> * can use those bits for other purposes, so leave them be.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pgprotval_t\">pgprotval_t</a> <a class=\"id\" href=\"#massage_pgprot\">massage_pgprot</a>(<a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#pgprot\">pgprot</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgprotval_t\">pgprotval_t</a> <a class=\"id\" href=\"#protval\">protval</a> = <a class=\"id\" href=\"#pgprot_val\">pgprot_val</a>(<a class=\"id\" href=\"#pgprot\">pgprot</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#protval\">protval</a> &amp; <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#protval\">protval</a> &= <a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#protval\">protval</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(unsigned long <a class=\"id\" href=\"#page_nr\">page_nr</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#pgprot\">pgprot</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__pte\">__pte</a>(((<a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a>)<a class=\"id\" href=\"#page_nr\">page_nr</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#massage_pgprot\">massage_pgprot</a>(<a class=\"id\" href=\"#pgprot\">pgprot</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pfn_pmd\">pfn_pmd</a>(unsigned long <a class=\"id\" href=\"#page_nr\">page_nr</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#pgprot\">pgprot</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__pmd\">__pmd</a>(((<a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a>)<a class=\"id\" href=\"#page_nr\">page_nr</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#massage_pgprot\">massage_pgprot</a>(<a class=\"id\" href=\"#pgprot\">pgprot</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte_modify\">pte_modify</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#newprot\">newprot</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pteval_t\">pteval_t</a> <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#pte_val\">pte_val</a>(<a class=\"id\" href=\"#pte\">pte</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Chop off the NX bit (if present), and add the NX portion of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the newprot (if present):</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> &= <a class=\"id\" href=\"#_PAGE_CHG_MASK\">_PAGE_CHG_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#massage_pgprot\">massage_pgprot</a>(<a class=\"id\" href=\"#newprot\">newprot</a>) &amp; ~<a class=\"id\" href=\"#_PAGE_CHG_MASK\">_PAGE_CHG_MASK</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__pte\">__pte</a>(<a class=\"id\" href=\"#val\">val</a>);", 
"}", 
"", 
"<span class=\"comment\">/* mprotect needs to preserve PAT bits when updating vm_page_prot */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pgprot_modify\">pgprot_modify</a> <a class=\"id\" href=\"#pgprot_modify\">pgprot_modify</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#pgprot_modify\">pgprot_modify</a>(<a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#oldprot\">oldprot</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#newprot\">newprot</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgprotval_t\">pgprotval_t</a> <a class=\"id\" href=\"#preservebits\">preservebits</a> = <a class=\"id\" href=\"#pgprot_val\">pgprot_val</a>(<a class=\"id\" href=\"#oldprot\">oldprot</a>) &amp; <a class=\"id\" href=\"#_PAGE_CHG_MASK\">_PAGE_CHG_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgprotval_t\">pgprotval_t</a> <a class=\"id\" href=\"#addbits\">addbits</a> = <a class=\"id\" href=\"#pgprot_val\">pgprot_val</a>(<a class=\"id\" href=\"#newprot\">newprot</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__pgprot\">__pgprot</a>(<a class=\"id\" href=\"#preservebits\">preservebits</a> | <a class=\"id\" href=\"#addbits\">addbits</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pte_pgprot\">pte_pgprot</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#__pgprot\">__pgprot</a>(<a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#x\">x</a>) &amp; <a class=\"id\" href=\"#PTE_FLAGS_MASK\">PTE_FLAGS_MASK</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#canon_pgprot\">canon_pgprot</a>(<a class=\"id\" href=\"#p\">p</a>) <a class=\"id\" href=\"#__pgprot\">__pgprot</a>(<a class=\"id\" href=\"#massage_pgprot\">massage_pgprot</a>(<a class=\"id\" href=\"#p\">p</a>))", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_new_memtype_allowed\">is_new_memtype_allowed</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#paddr\">paddr</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#new_flags\">new_flags</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PAT type is always WB for untracked ranges, so no need to check.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_platform\">x86_platform</a>.<a class=\"id\" href=\"#is_untracked_pat_range\">is_untracked_pat_range</a>(<a class=\"id\" href=\"#paddr\">paddr</a>, <a class=\"id\" href=\"#paddr\">paddr</a> + <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Certain new memtypes are not allowed with certain</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * requested memtype:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - request is uncached, return cannot be write-back</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - request is write-combine, return cannot be write-back</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> == <a class=\"id\" href=\"#_PAGE_CACHE_UC_MINUS\">_PAGE_CACHE_UC_MINUS</a> &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#new_flags\">new_flags</a> == <a class=\"id\" href=\"#_PAGE_CACHE_WB\">_PAGE_CACHE_WB</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#flags\">flags</a> == <a class=\"id\" href=\"#_PAGE_CACHE_WC\">_PAGE_CACHE_WC</a> &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#new_flags\">new_flags</a> == <a class=\"id\" href=\"#_PAGE_CACHE_WB\">_PAGE_CACHE_WB</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#populate_extra_pmd\">populate_extra_pmd</a>(unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#populate_extra_pte\">populate_extra_pte</a>(unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* __ASSEMBLY__ */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"# <a class=\"id\" href=\"#include\">include</a> \"pgtable_32.h\"", 
"#else", 
"# <a class=\"id\" href=\"#include\">include</a> \"pgtable_64.h\"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm_types\">mm_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_none\">pte_none</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#pte\">pte</a>.<a class=\"id\" href=\"#pte\">pte</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__HAVE_ARCH_PTE_SAME\">__HAVE_ARCH_PTE_SAME</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_same\">pte_same</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#pte\">pte</a> == <a class=\"id\" href=\"#b\">b</a>.<a class=\"id\" href=\"#pte\">pte</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_present\">pte_present</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#a\">a</a>) &amp; (<a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a> | <a class=\"id\" href=\"#_PAGE_PROTNONE\">_PAGE_PROTNONE</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pte_hidden\">pte_hidden</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_flags\">pte_flags</a>(<a class=\"id\" href=\"#pte\">pte</a>) &amp; <a class=\"id\" href=\"#_PAGE_HIDDEN\">_PAGE_HIDDEN</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pmd_present\">pmd_present</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pmd\">pmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pmd_flags\">pmd_flags</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) &amp; <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pmd_none\">pmd_none</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pmd\">pmd</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Only check low word on 32-bit platforms, since it might be</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   out of sync with upper half. */</span>", 
"<span class=\"ts\"/>return (unsigned long)<a class=\"id\" href=\"#native_pmd_val\">native_pmd_val</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) == 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#pmd_page_vaddr\">pmd_page_vaddr</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pmd\">pmd</a>)", 
"{", 
"<span class=\"ts\"/>return (unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#pmd_val\">pmd_val</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) &amp; <a class=\"id\" href=\"#PTE_PFN_MASK\">PTE_PFN_MASK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Currently stuck as a macro due to indirect forward reference to</span>", 
"<span class=\"comment\"> * linux/mmzone.h's __section_mem_map_addr() definition:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pmd_page\">pmd_page</a>(<a class=\"id\" href=\"#pmd\">pmd</a>)<span class=\"ts\"/><a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pmd_val\">pmd_val</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * the pmd page can be thought of an array like this: pmd_t[PTRS_PER_PMD]</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * this macro returns the index of the entry in the pmd page which would</span>", 
"<span class=\"comment\"> * control the given virtual address</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#pmd_index\">pmd_index</a>(unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#address\">address</a> >> <a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>) &amp; (<a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a> - 1);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Conversion functions: convert a page and protection to a page entry,</span>", 
"<span class=\"comment\"> * and a page entry and page directory to the page they refer to.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (Currently stuck as a macro because of indirect forward reference</span>", 
"<span class=\"comment\"> * to linux/mm.h:page_to_nid())</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#mk_pte\">mk_pte</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#pgprot\">pgprot</a>)   <a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#page\">page</a>), (<a class=\"id\" href=\"#pgprot\">pgprot</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * the pte page can be thought of an array like this: pte_t[PTRS_PER_PTE]</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * this function returns the index of the entry in the pte page which would</span>", 
"<span class=\"comment\"> * control the given virtual address</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#pte_index\">pte_index</a>(unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#address\">address</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) &amp; (<a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a> - 1);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte_offset_kernel\">pte_offset_kernel</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pmd_page_vaddr\">pmd_page_vaddr</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>) + <a class=\"id\" href=\"#pte_index\">pte_index</a>(<a class=\"id\" href=\"#address\">address</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pmd_bad\">pmd_bad</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pmd\">pmd</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pmd_flags\">pmd_flags</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) &amp; ~<a class=\"id\" href=\"#_PAGE_USER\">_PAGE_USER</a>) != <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#pages_to_mb\">pages_to_mb</a>(unsigned long <a class=\"id\" href=\"#npg\">npg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#npg\">npg</a> >> (20 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#io_remap_pfn_range\">io_remap_pfn_range</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#prot\">prot</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remap_pfn_range\">remap_pfn_range</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#prot\">prot</a>)", 
"", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> &gt; 2", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pud_none\">pud_none</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> <a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#native_pud_val\">native_pud_val</a>(<a class=\"id\" href=\"#pud\">pud</a>) == 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pud_present\">pud_present</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> <a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pud_flags\">pud_flags</a>(<a class=\"id\" href=\"#pud\">pud</a>) &amp; <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#pud_page_vaddr\">pud_page_vaddr</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> <a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/>return (unsigned long)<a class=\"id\" href=\"#__va\">__va</a>((unsigned long)<a class=\"id\" href=\"#pud_val\">pud_val</a>(<a class=\"id\" href=\"#pud\">pud</a>) &amp; <a class=\"id\" href=\"#PTE_PFN_MASK\">PTE_PFN_MASK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Currently stuck as a macro due to indirect forward reference to</span>", 
"<span class=\"comment\"> * linux/mmzone.h's __section_mem_map_addr() definition:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pud_page\">pud_page</a>(<a class=\"id\" href=\"#pud\">pud</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pud_val\">pud_val</a>(<a class=\"id\" href=\"#pud\">pud</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"", 
"<span class=\"comment\">/* Find an entry in the second-level page table.. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *)<a class=\"id\" href=\"#pud_page_vaddr\">pud_page_vaddr</a>(*<a class=\"id\" href=\"#pud\">pud</a>) + <a class=\"id\" href=\"#pmd_index\">pmd_index</a>(<a class=\"id\" href=\"#address\">address</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pud_large\">pud_large</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> <a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pud_val\">pud_val</a>(<a class=\"id\" href=\"#pud\">pud</a>) &amp; (<a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a> | <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>)) ==", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a> | <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pud_bad\">pud_bad</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> <a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pud_flags\">pud_flags</a>(<a class=\"id\" href=\"#pud\">pud</a>) &amp; ~(<a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a> | <a class=\"id\" href=\"#_PAGE_USER\">_PAGE_USER</a>)) != 0;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pud_large\">pud_large</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> <a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* PAGETABLE_LEVELS &gt; 2 */</span>", 
"", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> &gt; 3", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pgd_present\">pgd_present</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> <a class=\"id\" href=\"#pgd\">pgd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pgd_flags\">pgd_flags</a>(<a class=\"id\" href=\"#pgd\">pgd</a>) &amp; <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#pgd_page_vaddr\">pgd_page_vaddr</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> <a class=\"id\" href=\"#pgd\">pgd</a>)", 
"{", 
"<span class=\"ts\"/>return (unsigned long)<a class=\"id\" href=\"#__va\">__va</a>((unsigned long)<a class=\"id\" href=\"#pgd_val\">pgd_val</a>(<a class=\"id\" href=\"#pgd\">pgd</a>) &amp; <a class=\"id\" href=\"#PTE_PFN_MASK\">PTE_PFN_MASK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Currently stuck as a macro due to indirect forward reference to</span>", 
"<span class=\"comment\"> * linux/mmzone.h's __section_mem_map_addr() definition:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pgd_page\">pgd_page</a>(<a class=\"id\" href=\"#pgd\">pgd</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pgd_val\">pgd_val</a>(<a class=\"id\" href=\"#pgd\">pgd</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"", 
"<span class=\"comment\">/* to find an entry in a page-table-directory. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#pud_index\">pud_index</a>(unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#address\">address</a> >> <a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a>) &amp; (<a class=\"id\" href=\"#PTRS_PER_PUD\">PTRS_PER_PUD</a> - 1);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pud_t\">pud_t</a> *)<a class=\"id\" href=\"#pgd_page_vaddr\">pgd_page_vaddr</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>) + <a class=\"id\" href=\"#pud_index\">pud_index</a>(<a class=\"id\" href=\"#address\">address</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pgd_bad\">pgd_bad</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> <a class=\"id\" href=\"#pgd\">pgd</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pgd_flags\">pgd_flags</a>(<a class=\"id\" href=\"#pgd\">pgd</a>) &amp; ~<a class=\"id\" href=\"#_PAGE_USER\">_PAGE_USER</a>) != <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pgd_none\">pgd_none</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> <a class=\"id\" href=\"#pgd\">pgd</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#native_pgd_val\">native_pgd_val</a>(<a class=\"id\" href=\"#pgd\">pgd</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* PAGETABLE_LEVELS &gt; 3 */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* __ASSEMBLY__ */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * the pgd page can be thought of an array like this: pgd_t[PTRS_PER_PGD]</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * this macro returns the index of the entry in the pgd page which would</span>", 
"<span class=\"comment\"> * control the given virtual address</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pgd_index\">pgd_index</a>(<a class=\"id\" href=\"#address\">address</a>) (((<a class=\"id\" href=\"#address\">address</a>) >> <a class=\"id\" href=\"#PGDIR_SHIFT\">PGDIR_SHIFT</a>) &amp; (<a class=\"id\" href=\"#PTRS_PER_PGD\">PTRS_PER_PGD</a> - 1))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * pgd_offset() returns a (pgd_t *)</span>", 
"<span class=\"comment\"> * pgd_index() is used get the offset into the pgd page's array of pgd_t's;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pgd_offset\">pgd_offset</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#address\">address</a>) ((<a class=\"id\" href=\"#mm\">mm</a>)-><a class=\"id\" href=\"#pgd\">pgd</a> + <a class=\"id\" href=\"#pgd_index\">pgd_index</a>((<a class=\"id\" href=\"#address\">address</a>)))", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * a shortcut which implies the use of the kernel's pgd, instead</span>", 
"<span class=\"comment\"> * of a process's</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#address\">address</a>) <a class=\"id\" href=\"#pgd_offset\">pgd_offset</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, (<a class=\"id\" href=\"#address\">address</a>))", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KERNEL_PGD_BOUNDARY\">KERNEL_PGD_BOUNDARY</a><span class=\"ts\"/><a class=\"id\" href=\"#pgd_index\">pgd_index</a>(<a class=\"id\" href=\"#PAGE_OFFSET\">PAGE_OFFSET</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KERNEL_PGD_PTRS\">KERNEL_PGD_PTRS</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#PTRS_PER_PGD\">PTRS_PER_PGD</a> - <a class=\"id\" href=\"#KERNEL_PGD_BOUNDARY\">KERNEL_PGD_BOUNDARY</a>)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"", 
"extern int <a class=\"id\" href=\"#direct_gbpages\">direct_gbpages</a>;", 
"", 
"<span class=\"comment\">/* local pte updates need not use xchg for locking */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#native_local_ptep_get_and_clear\">native_local_ptep_get_and_clear</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#res\">res</a> = *<a class=\"id\" href=\"#ptep\">ptep</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Pure native function needs no input for mm, addr */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#native_pte_clear\">native_pte_clear</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#ptep\">ptep</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_set_pte_at\">native_set_pte_at</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a> , <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#native_set_pte\">native_set_pte</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_PARAVIRT\">CONFIG_PARAVIRT</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Rules for using pte_update - it must be called after any PTE update which</span>", 
"<span class=\"comment\"> * has not been done using the set_pte / clear_pte interfaces.  It is used by</span>", 
"<span class=\"comment\"> * shadow mode hypervisors to resynchronize the shadow page tables.  Kernel PTE</span>", 
"<span class=\"comment\"> * updates should either be sets, clears, or set_pte_atomic for P-&gt;P</span>", 
"<span class=\"comment\"> * transitions, which means this hook should only be called for user PTEs.</span>", 
"<span class=\"comment\"> * This hook implies a P-&gt;P protection or access change has taken place, which</span>", 
"<span class=\"comment\"> * requires a subsequent TLB flush.  The notification can optionally be delayed</span>", 
"<span class=\"comment\"> * until the TLB flush event by using the pte_update_defer form of the</span>", 
"<span class=\"comment\"> * interface, but care must be taken to assure that the flush happens while</span>", 
"<span class=\"comment\"> * still holding the same page table lock so that the shadow and primary pages</span>", 
"<span class=\"comment\"> * do not become out of sync on SMP.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pte_update\">pte_update</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>)<span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pte_update_defer\">pte_update_defer</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>)<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We only update the dirty/accessed state if we set</span>", 
"<span class=\"comment\"> * the dirty bit by hand in the kernel, since the hardware</span>", 
"<span class=\"comment\"> * will do the accessed bit for us, and we don't want to</span>", 
"<span class=\"comment\"> * race with other CPU's that might be updating the dirty</span>", 
"<span class=\"comment\"> * bit at the same time.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a>  <a class=\"id\" href=\"#__HAVE_ARCH_PTEP_SET_ACCESS_FLAGS\">__HAVE_ARCH_PTEP_SET_ACCESS_FLAGS</a>", 
"extern int <a class=\"id\" href=\"#ptep_set_access_flags\">ptep_set_access_flags</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#entry\">entry</a>, int <a class=\"id\" href=\"#dirty\">dirty</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG\">__HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG</a>", 
"extern int <a class=\"id\" href=\"#ptep_test_and_clear_young\">ptep_test_and_clear_young</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__HAVE_ARCH_PTEP_CLEAR_YOUNG_FLUSH\">__HAVE_ARCH_PTEP_CLEAR_YOUNG_FLUSH</a>", 
"extern int <a class=\"id\" href=\"#ptep_clear_flush_young\">ptep_clear_flush_young</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__HAVE_ARCH_PTEP_GET_AND_CLEAR\">__HAVE_ARCH_PTEP_GET_AND_CLEAR</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#ptep_get_and_clear\">ptep_get_and_clear</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#native_ptep_get_and_clear\">native_ptep_get_and_clear</a>(<a class=\"id\" href=\"#ptep\">ptep</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_update\">pte_update</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte\">pte</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__HAVE_ARCH_PTEP_GET_AND_CLEAR_FULL\">__HAVE_ARCH_PTEP_GET_AND_CLEAR_FULL</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#ptep_get_and_clear_full\">ptep_get_and_clear_full</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#full\">full</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#full\">full</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Full address destruction in progress; paravirt does not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * care about updates and native needs no locking</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#native_local_ptep_get_and_clear\">native_local_ptep_get_and_clear</a>(<a class=\"id\" href=\"#ptep\">ptep</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#ptep_get_and_clear\">ptep_get_and_clear</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte\">pte</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__HAVE_ARCH_PTEP_SET_WRPROTECT\">__HAVE_ARCH_PTEP_SET_WRPROTECT</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ptep_set_wrprotect\">ptep_set_wrprotect</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#_PAGE_BIT_RW\">_PAGE_BIT_RW</a>, (unsigned long *)&amp;<a class=\"id\" href=\"#ptep\">ptep</a>-><a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_update\">pte_update</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptep\">ptep</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * clone_pgd_range(pgd_t *dst, pgd_t *src, int count);</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  dst - pointer to pgd range anwhere on a pgd page</span>", 
"<span class=\"comment\"> *  src - \"\"</span>", 
"<span class=\"comment\"> *  count - the number of pgds to copy.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * dst and src can be on the same page, but the range must not overlap,</span>", 
"<span class=\"comment\"> * and must not cross a page boundary.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#clone_pgd_range\">clone_pgd_range</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#src\">src</a>, int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"       <a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#count\">count</a> * sizeof(<a class=\"id\" href=\"#pgd_t\">pgd_t</a>));", 
"}", 
"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>-<a class=\"id\" href=\"#generic\">generic</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* __ASSEMBLY__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_PGTABLE_H */</span>", 
];
xr_frag_insert('l/dc/1bde1ba1f418a1aa43e58116888c5502d0887e.xr', __xr_tmp);
