var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/drivers/char/core.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Driver core for serial ports</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Based on drivers/char/serial.c, by Linus Torvalds, Theodore Ts'o.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright 1999 ARM Limited</span>", 
"<span class=\"comment\"> *  Copyright (C) 2000-2001 Deep Blue Solutions Ltd.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty\">tty</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#serial\">serial</a>.<a class=\"id\" href=\"#h\">h</a>&gt; <span class=\"comment\">/* for serial_state and serial_icounter_struct */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#serial_core\">serial_core</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is used to lock changes in serial line configuration.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#port_mutex\">port_mutex</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * lockdep: port-&gt;lock is initialized in two places, but we</span>", 
"<span class=\"comment\"> *          want only one lock-class:</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#lock_class_key\">lock_class_key</a> <a class=\"id\" href=\"#port_lock_key\">port_lock_key</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HIGH_BITS_OFFSET\">HIGH_BITS_OFFSET</a><span class=\"ts\"/>((sizeof(long)-sizeof(int))*8)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SERIAL_CORE_CONSOLE\">CONFIG_SERIAL_CORE_CONSOLE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#port\">port</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#port\">port</a>)-><a class=\"id\" href=\"#cons\">cons</a> && (<a class=\"id\" href=\"#port\">port</a>)-><a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#index\">index</a> == (<a class=\"id\" href=\"#port\">port</a>)-><a class=\"id\" href=\"#line\">line</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#port\">port</a>)<span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#uart_change_speed\">uart_change_speed</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#old_termios\">old_termios</a>);", 
"static void <a class=\"id\" href=\"#__uart_wait_until_sent\">__uart_wait_until_sent</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"static void <a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>, int <a class=\"id\" href=\"#pm_state\">pm_state</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This routine is used by the interrupt handler to schedule processing in</span>", 
"<span class=\"comment\"> * the software interrupt portion of the driver.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#uart_write_wakeup\">uart_write_wakeup</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This means you called this function _after_ the port was</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * closed.  No cookie for you.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tasklet_schedule\">tasklet_schedule</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#tlet\">tlet</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_stop\">uart_stop</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#stop_tx\">stop_tx</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__uart_start\">__uart_start</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#uart_circ_empty\">uart_circ_empty</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>) && <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>.<a class=\"id\" href=\"#buf\">buf</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#stopped\">stopped</a> && !<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hw_stopped\">hw_stopped</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#start_tx\">start_tx</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_start\">uart_start</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__uart_start\">__uart_start</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_tasklet_action\">uart_tasklet_action</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = (struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *)<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_wakeup\">tty_wakeup</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#uart_update_mctrl\">uart_update_mctrl</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, unsigned int <a class=\"id\" href=\"#set\">set</a>, unsigned int <a class=\"id\" href=\"#clear\">clear</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mctrl\">mctrl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mctrl\">mctrl</a> = (<a class=\"id\" href=\"#old\">old</a> &amp; ~<a class=\"id\" href=\"#clear\">clear</a>) | <a class=\"id\" href=\"#set\">set</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a> != <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mctrl\">mctrl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_mctrl\">set_mctrl</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mctrl\">mctrl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#uart_set_mctrl\">uart_set_mctrl</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#set\">set</a>)<span class=\"ts\"/><a class=\"id\" href=\"#uart_update_mctrl\">uart_update_mctrl</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#set\">set</a>, 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#uart_clear_mctrl\">uart_clear_mctrl</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#clear\">clear</a>)<span class=\"ts\"/><a class=\"id\" href=\"#uart_update_mctrl\">uart_update_mctrl</a>(<a class=\"id\" href=\"#port\">port</a>, 0, <a class=\"id\" href=\"#clear\">clear</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Startup the port.  This will be called once per open.  All calls</span>", 
"<span class=\"comment\"> * will be serialised by the per-port mutex.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#uart_startup\">uart_startup</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>, int <a class=\"id\" href=\"#init_hw\">init_hw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_INITIALIZED\">ASYNC_INITIALIZED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set the TTY IO error marker - we will only clear this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * once we have successfully opened the port.  Also set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * up the tty-&gt;alt_speed kludge</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Initialise and allocate the transmit and temporary</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>.<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is protected by the per port mutex */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>.<a class=\"id\" href=\"#buf\">buf</a> = (unsigned char *) <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_circ_clear\">uart_circ_clear</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#startup\">startup</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#init_hw\">init_hw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Initialise the hardware port settings.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_speed\">uart_change_speed</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Setup the RTS and DTR signals once the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * port is open and ready to respond.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CBAUD\">CBAUD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_set_mctrl\">uart_set_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a> | <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_CTS_FLOW\">ASYNC_CTS_FLOW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_mctrl\">get_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>) &amp; <a class=\"id\" href=\"#TIOCM_CTS\">TIOCM_CTS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hw_stopped\">hw_stopped</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#ASYNCB_INITIALIZED\">ASYNCB_INITIALIZED</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This routine will shutdown a serial port; interrupts are disabled, and</span>", 
"<span class=\"comment\"> * DTR is dropped if the hangup on close termio flag is on.  Calls to</span>", 
"<span class=\"comment\"> * uart_shutdown are serialised by the per-port semaphore.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#uart_shutdown\">uart_shutdown</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set the TTY IO error marker</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#ASYNCB_INITIALIZED\">ASYNCB_INITIALIZED</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Turn off DTR and RTS early.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a> || (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#HUPCL\">HUPCL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_clear_mctrl\">uart_clear_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a> | <a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * clear delta_msr_wait queue to avoid mem leaks: we may free</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the irq here so the queue might never be woken up.  Note</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that we won't end up waiting on delta_msr_wait again since</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * any outstanding file descriptors should be pointing at</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hung_up_tty_fops now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#delta_msr_wait\">delta_msr_wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Free the IRQ and disable the port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Ensure that the IRQ handler isn't running on another CPU.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#synchronize_irq\">synchronize_irq</a>(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * kill off our tasklet</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tasklet_kill\">tasklet_kill</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#tlet\">tlet</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Free the transmit buffer page.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>.<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>.<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>.<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_update_timeout - update per-port FIFO timeout.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port:  uart_port structure describing the port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cflag: termios cflag value</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@baud:  speed of the port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set the port FIFO timeout value.  The @cflag value should</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reflect the actual hardware settings.</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#uart_update_timeout\">uart_update_timeout</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, unsigned int <a class=\"id\" href=\"#cflag\">cflag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#baud\">baud</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bits\">bits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* byte size and parity */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cflag\">cflag</a> &amp; <a class=\"id\" href=\"#CSIZE\">CSIZE</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CS5\">CS5</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a> = 7;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CS6\">CS6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CS7\">CS7</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a> = 9;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a> = 10;", 
"<span class=\"ts\"/><span class=\"ts\"/>break; <span class=\"comment\">/* CS8 */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cflag\">cflag</a> &amp; <a class=\"id\" href=\"#CSTOPB\">CSTOPB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a>++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cflag\">cflag</a> &amp; <a class=\"id\" href=\"#PARENB\">PARENB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The total number of bits to be transmitted in the fifo.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#bits\">bits</a> * <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#fifosize\">fifosize</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Figure the timeout to send the above number of bits.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Add .02 seconds of slop</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = (<a class=\"id\" href=\"#HZ\">HZ</a> * <a class=\"id\" href=\"#bits\">bits</a>) / <a class=\"id\" href=\"#baud\">baud</a> + <a class=\"id\" href=\"#HZ\">HZ</a>/50;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#uart_update_timeout\">uart_update_timeout</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_get_baud_rate - return baud rate for a particular port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: uart_port structure describing the port in question.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@termios: desired termios settings.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@old: old termios (or NULL)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@min: minimum acceptable baud rate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@max: maximum acceptable baud rate</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Decode the termios structure into a numeric baud rate,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>taking account of the magic 38400 baud rate (with spd_*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>flags), and mapping the %B0 rate to 9600 baud.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If the new baud rate is invalid, try the old termios setting.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If it's still invalid, we try 9600 baud.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Update the @termios structure to reflect the baud rate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>we're actually going to be using. Don't do this for the case</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>where B0 is requested (\"hang up\").</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int", 
"<a class=\"id\" href=\"#uart_get_baud_rate\">uart_get_baud_rate</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#termios\">termios</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#old\">old</a>, unsigned int <a class=\"id\" href=\"#min\">min</a>, unsigned int <a class=\"id\" href=\"#max\">max</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#try\">try</a>, <a class=\"id\" href=\"#baud\">baud</a>, <a class=\"id\" href=\"#altbaud\">altbaud</a> = 38400;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hung_up\">hung_up</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upf_t\">upf_t</a> <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_SPD_MASK\">UPF_SPD_MASK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> == <a class=\"id\" href=\"#UPF_SPD_HI\">UPF_SPD_HI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#altbaud\">altbaud</a> = 57600;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#flags\">flags</a> == <a class=\"id\" href=\"#UPF_SPD_VHI\">UPF_SPD_VHI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#altbaud\">altbaud</a> = 115200;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#flags\">flags</a> == <a class=\"id\" href=\"#UPF_SPD_SHI\">UPF_SPD_SHI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#altbaud\">altbaud</a> = 230400;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#flags\">flags</a> == <a class=\"id\" href=\"#UPF_SPD_WARP\">UPF_SPD_WARP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#altbaud\">altbaud</a> = 460800;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#try\">try</a> = 0; <a class=\"id\" href=\"#try\">try</a> &lt; 2; <a class=\"id\" href=\"#try\">try</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#baud\">baud</a> = <a class=\"id\" href=\"#tty_termios_baud_rate\">tty_termios_baud_rate</a>(<a class=\"id\" href=\"#termios\">termios</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The spd_hi, spd_vhi, spd_shi, spd_warp kludge...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Die! Die! Die!</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#baud\">baud</a> == 38400)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#baud\">baud</a> = <a class=\"id\" href=\"#altbaud\">altbaud</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Special case: B0 rate.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#baud\">baud</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hung_up\">hung_up</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#baud\">baud</a> = 9600;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#baud\">baud</a> >= <a class=\"id\" href=\"#min\">min</a> && <a class=\"id\" href=\"#baud\">baud</a> <= <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#baud\">baud</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Oops, the quotient was zero.  Try again with</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the old baud rate if possible.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &= ~<a class=\"id\" href=\"#CBAUD\">CBAUD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#baud\">baud</a> = <a class=\"id\" href=\"#tty_termios_baud_rate\">tty_termios_baud_rate</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#hung_up\">hung_up</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_termios_encode_baud_rate\">tty_termios_encode_baud_rate</a>(<a class=\"id\" href=\"#termios\">termios</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#baud\">baud</a>, <a class=\"id\" href=\"#baud\">baud</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * As a last resort, if the range cannot be met then clip to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the nearest chip supported rate.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#hung_up\">hung_up</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#baud\">baud</a> <= <a class=\"id\" href=\"#min\">min</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_termios_encode_baud_rate\">tty_termios_encode_baud_rate</a>(<a class=\"id\" href=\"#termios\">termios</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min\">min</a> + 1, <a class=\"id\" href=\"#min\">min</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_termios_encode_baud_rate\">tty_termios_encode_baud_rate</a>(<a class=\"id\" href=\"#termios\">termios</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> - 1, <a class=\"id\" href=\"#max\">max</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Should never happen */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#uart_get_baud_rate\">uart_get_baud_rate</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_get_divisor - return uart clock divisor</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: uart_port structure describing the port.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@baud: desired baud rate</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Calculate the uart clock divisor for the port.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int", 
"<a class=\"id\" href=\"#uart_get_divisor\">uart_get_divisor</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, unsigned int <a class=\"id\" href=\"#baud\">baud</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#quot\">quot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Old custom speed handling.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#baud\">baud</a> == 38400 && (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_SPD_MASK\">UPF_SPD_MASK</a>) == <a class=\"id\" href=\"#UPF_SPD_CUST\">UPF_SPD_CUST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quot\">quot</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#custom_divisor\">custom_divisor</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quot\">quot</a> = (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#uartclk\">uartclk</a> + (8 * <a class=\"id\" href=\"#baud\">baud</a>)) / (16 * <a class=\"id\" href=\"#baud\">baud</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#quot\">quot</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#uart_get_divisor\">uart_get_divisor</a>);", 
"", 
"<span class=\"comment\">/* FIXME: Consistent locking policy */</span>", 
"static void <a class=\"id\" href=\"#uart_change_speed\">uart_change_speed</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#old_termios\">old_termios</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#termios\">termios</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we have no tty, termios, or the port does not exist,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then we can't set the parameters for this port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a> || !<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a> || <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#termios\">termios</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set flags based on termios cflag</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#ASYNCB_CTS_FLOW\">ASYNCB_CTS_FLOW</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#ASYNCB_CTS_FLOW\">ASYNCB_CTS_FLOW</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CLOCAL\">CLOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#ASYNCB_CHECK_CD\">ASYNCB_CHECK_CD</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#ASYNCB_CHECK_CD\">ASYNCB_CHECK_CD</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_termios\">set_termios</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#termios\">termios</a>, <a class=\"id\" href=\"#old_termios\">old_termios</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__uart_put_char\">__uart_put_char</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#circ_buf\">circ_buf</a> *<a class=\"id\" href=\"#circ\">circ</a>, unsigned char <a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uart_circ_chars_free\">uart_circ_chars_free</a>(<a class=\"id\" href=\"#circ\">circ</a>) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#head\">head</a>] = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#head\">head</a> = (<a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#head\">head</a> + 1) &amp; (<a class=\"id\" href=\"#UART_XMIT_SIZE\">UART_XMIT_SIZE</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_put_char\">uart_put_char</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, unsigned char <a class=\"id\" href=\"#ch\">ch</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__uart_put_char\">__uart_put_char</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>, &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>, <a class=\"id\" href=\"#ch\">ch</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_flush_chars\">uart_flush_chars</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uart_start\">uart_start</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_write\">uart_write</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#circ_buf\">circ_buf</a> *<a class=\"id\" href=\"#circ\">circ</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This means you called this function _after_ the port was</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * closed.  No cookie for you.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EL3HLT\">EL3HLT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#circ\">circ</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#CIRC_SPACE_TO_END\">CIRC_SPACE_TO_END</a>(<a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#tail\">tail</a>, <a class=\"id\" href=\"#UART_XMIT_SIZE\">UART_XMIT_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#head\">head</a> = (<a class=\"id\" href=\"#circ\">circ</a>-><a class=\"id\" href=\"#head\">head</a> + <a class=\"id\" href=\"#c\">c</a>) &amp; (<a class=\"id\" href=\"#UART_XMIT_SIZE\">UART_XMIT_SIZE</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uart_start\">uart_start</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_write_room\">uart_write_room</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uart_circ_chars_free\">uart_circ_chars_free</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_chars_in_buffer\">uart_chars_in_buffer</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uart_circ_chars_pending\">uart_circ_chars_pending</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_flush_buffer\">uart_flush_buffer</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This means you called this function _after_ the port was</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * closed.  No cookie for you.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"uart_flush_buffer(%d) called\\n\", <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uart_circ_clear\">uart_circ_clear</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_buffer\">flush_buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_buffer\">flush_buffer</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_wakeup\">tty_wakeup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is used to send a high-priority XON/XOFF character to</span>", 
"<span class=\"comment\"> * the device</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#uart_send_xchar\">uart_send_xchar</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, char <a class=\"id\" href=\"#ch\">ch</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#send_xchar\">send_xchar</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#send_xchar\">send_xchar</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#ch\">ch</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#x_char\">x_char</a> = <a class=\"id\" href=\"#ch\">ch</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ch\">ch</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#start_tx\">start_tx</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_throttle\">uart_throttle</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IXOFF\">I_IXOFF</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_send_xchar\">uart_send_xchar</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#STOP_CHAR\">STOP_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_clear_mctrl\">uart_clear_mctrl</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>, <a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_unthrottle\">uart_unthrottle</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#I_IXOFF\">I_IXOFF</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#x_char\">x_char</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#x_char\">x_char</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_send_xchar\">uart_send_xchar</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#START_CHAR\">START_CHAR</a>(<a class=\"id\" href=\"#tty\">tty</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_set_mctrl\">uart_set_mctrl</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_get_info\">uart_get_info</a>(struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#serial_struct\">serial_struct</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#retinfo\">retinfo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#serial_struct\">serial_struct</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#tmp\">tmp</a>, 0, sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ensure the state we copy is consistent and no hardware changes</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   occur as we go */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#line\">line</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#port\">port</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iobase\">iobase</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HIGH_BITS_OFFSET\">HIGH_BITS_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#port_high\">port_high</a> = (long) <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iobase\">iobase</a> >> <a class=\"id\" href=\"#HIGH_BITS_OFFSET\">HIGH_BITS_OFFSET</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#irq\">irq</a><span class=\"ts\"/><span class=\"ts\"/>    = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#xmit_fifo_size\">xmit_fifo_size</a>  = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#fifosize\">fifosize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#baud_base\">baud_base</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#uartclk\">uartclk</a> / 16;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#close_delay\">close_delay</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#close_delay\">close_delay</a> / 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#closing_wait\">closing_wait</a>    = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#closing_wait\">closing_wait</a> == <a class=\"id\" href=\"#ASYNC_CLOSING_WAIT_NONE\">ASYNC_CLOSING_WAIT_NONE</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ASYNC_CLOSING_WAIT_NONE\">ASYNC_CLOSING_WAIT_NONE</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#closing_wait\">closing_wait</a> / 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#custom_divisor\">custom_divisor</a>  = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#custom_divisor\">custom_divisor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#hub6\">hub6</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#hub6\">hub6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#io_type\">io_type</a>         = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iotype\">iotype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#iomem_reg_shift\">iomem_reg_shift</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#regshift\">regshift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#iomem_base\">iomem_base</a>      = (void *)(unsigned long)<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#mapbase\">mapbase</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#retinfo\">retinfo</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>, sizeof(*<a class=\"id\" href=\"#retinfo\">retinfo</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_set_info\">uart_set_info</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#serial_struct\">serial_struct</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#newinfo\">newinfo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#serial_struct\">serial_struct</a> <a class=\"id\" href=\"#new_serial\">new_serial</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#new_port\">new_port</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#change_irq\">change_irq</a>, <a class=\"id\" href=\"#change_port\">change_port</a>, <a class=\"id\" href=\"#closing_wait\">closing_wait</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old_custom_divisor\">old_custom_divisor</a>, <a class=\"id\" href=\"#close_delay\">close_delay</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upf_t\">upf_t</a> <a class=\"id\" href=\"#old_flags\">old_flags</a>, <a class=\"id\" href=\"#new_flags\">new_flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#new_serial\">new_serial</a>, <a class=\"id\" href=\"#newinfo\">newinfo</a>, sizeof(<a class=\"id\" href=\"#new_serial\">new_serial</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_port\">new_port</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HIGH_BITS_OFFSET\">HIGH_BITS_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_port\">new_port</a> += (unsigned long) <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#port_high\">port_high</a> << <a class=\"id\" href=\"#HIGH_BITS_OFFSET\">HIGH_BITS_OFFSET</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#irq_canonicalize\">irq_canonicalize</a>(<a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#close_delay\">close_delay</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#close_delay\">close_delay</a> * 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#closing_wait\">closing_wait</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#closing_wait\">closing_wait</a> == <a class=\"id\" href=\"#ASYNC_CLOSING_WAIT_NONE\">ASYNC_CLOSING_WAIT_NONE</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ASYNC_CLOSING_WAIT_NONE\">ASYNC_CLOSING_WAIT_NONE</a> : <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#closing_wait\">closing_wait</a> * 10;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This semaphore protects port-&gt;count.  It is also</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * very useful to prevent opens.  Also, take the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * port configuration semaphore to make sure that a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * module insertion/removal doesn't change anything</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * under us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#change_irq\">change_irq</a>  = !(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_FIXED_PORT\">UPF_FIXED_PORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#irq\">irq</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Since changing the 'type' of the port changes its resource</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocations, we should treat type changes the same as</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * IO port changes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#change_port\">change_port</a> = !(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_FIXED_PORT\">UPF_FIXED_PORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&& (<a class=\"id\" href=\"#new_port\">new_port</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iobase\">iobase</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (unsigned long)<a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#iomem_base\">iomem_base</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#mapbase\">mapbase</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#hub6\">hub6</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#hub6\">hub6</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#io_type\">io_type</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iotype\">iotype</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#iomem_reg_shift\">iomem_reg_shift</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#regshift\">regshift</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_flags\">old_flags</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_flags\">new_flags</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_custom_divisor\">old_custom_divisor</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#custom_divisor\">custom_divisor</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#change_irq\">change_irq</a> || <a class=\"id\" href=\"#change_port\">change_port</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#baud_base\">baud_base</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#uartclk\">uartclk</a> / 16) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#close_delay\">close_delay</a> != <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#close_delay\">close_delay</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#closing_wait\">closing_wait</a> != <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#closing_wait\">closing_wait</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#xmit_fifo_size\">xmit_fifo_size</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#xmit_fifo_size\">xmit_fifo_size</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#fifosize\">fifosize</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (((<a class=\"id\" href=\"#new_flags\">new_flags</a> ^ <a class=\"id\" href=\"#old_flags\">old_flags</a>) &amp; ~<a class=\"id\" href=\"#UPF_USR_MASK\">UPF_USR_MASK</a>) != 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> = ((<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#UPF_USR_MASK\">UPF_USR_MASK</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#new_flags\">new_flags</a> &amp; <a class=\"id\" href=\"#UPF_USR_MASK\">UPF_USR_MASK</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#custom_divisor\">custom_divisor</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#custom_divisor\">custom_divisor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#check_and_exit\">check_and_exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ask the low level driver to verify the settings.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#verify_port\">verify_port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#verify_port\">verify_port</a>(<a class=\"id\" href=\"#uport\">uport</a>, &amp;<a class=\"id\" href=\"#new_serial\">new_serial</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#irq\">irq</a> >= <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>) || (<a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#irq\">irq</a> &lt; 0) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#baud_base\">baud_base</a> &lt; 9600))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#change_port\">change_port</a> || <a class=\"id\" href=\"#change_irq\">change_irq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Make sure that we are the sole user of this port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_port_users\">tty_port_users</a>(<a class=\"id\" href=\"#port\">port</a>) &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to shutdown the serial port at the old</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * port/type/irq combination.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_shutdown\">uart_shutdown</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#change_port\">change_port</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_iobase\">old_iobase</a>, <a class=\"id\" href=\"#old_mapbase\">old_mapbase</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old_type\">old_type</a>, <a class=\"id\" href=\"#old_iotype\">old_iotype</a>, <a class=\"id\" href=\"#old_hub6\">old_hub6</a>, <a class=\"id\" href=\"#old_shift\">old_shift</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_iobase\">old_iobase</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iobase\">iobase</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_mapbase\">old_mapbase</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#mapbase\">mapbase</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_type\">old_type</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_hub6\">old_hub6</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#hub6\">hub6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_iotype\">old_iotype</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iotype\">iotype</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_shift\">old_shift</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#regshift\">regshift</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Free and release old regions</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_type\">old_type</a> != <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#release_port\">release_port</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iobase\">iobase</a> = <a class=\"id\" href=\"#new_port\">new_port</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#hub6\">hub6</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#hub6\">hub6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iotype\">iotype</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#io_type\">io_type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#regshift\">regshift</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#iomem_reg_shift\">iomem_reg_shift</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#mapbase\">mapbase</a> = (unsigned long)<a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#iomem_base\">iomem_base</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Claim and map the new regions</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#request_port\">request_port</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Always success - Jean II */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we fail to request resources for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * new port, try to restore the old settings.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#old_type\">old_type</a> != <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iobase\">iobase</a> = <a class=\"id\" href=\"#old_iobase\">old_iobase</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#old_type\">old_type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#hub6\">hub6</a> = <a class=\"id\" href=\"#old_hub6\">old_hub6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iotype\">iotype</a> = <a class=\"id\" href=\"#old_iotype\">old_iotype</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#regshift\">regshift</a> = <a class=\"id\" href=\"#old_shift\">old_shift</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#mapbase\">mapbase</a> = <a class=\"id\" href=\"#old_mapbase\">old_mapbase</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#request_port\">request_port</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If we failed to restore the old settings,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we fail like this.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We failed anyway.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Added to return the correct error -Ram Gupta */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#change_irq\">change_irq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#irq\">irq</a>      = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_FIXED_PORT\">UPF_FIXED_PORT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#uartclk\">uartclk</a>  = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#baud_base\">baud_base</a> * 16;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a>            = (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#UPF_CHANGE_MASK\">UPF_CHANGE_MASK</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#new_flags\">new_flags</a> &amp; <a class=\"id\" href=\"#UPF_CHANGE_MASK\">UPF_CHANGE_MASK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#custom_divisor\">custom_divisor</a>   = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#custom_divisor\">custom_divisor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#close_delay\">close_delay</a>     = <a class=\"id\" href=\"#close_delay\">close_delay</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#closing_wait\">closing_wait</a>    = <a class=\"id\" href=\"#closing_wait\">closing_wait</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#xmit_fifo_size\">xmit_fifo_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#fifosize\">fifosize</a> = <a class=\"id\" href=\"#new_serial\">new_serial</a>.<a class=\"id\" href=\"#xmit_fifo_size\">xmit_fifo_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#low_latency\">low_latency</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_LOW_LATENCY\">UPF_LOW_LATENCY</a>) ? 1 : 0;", 
"", 
" <a class=\"id\" href=\"#check_and_exit\">check_and_exit</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_INITIALIZED\">ASYNC_INITIALIZED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (((<a class=\"id\" href=\"#old_flags\">old_flags</a> ^ <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a>) &amp; <a class=\"id\" href=\"#UPF_SPD_MASK\">UPF_SPD_MASK</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old_custom_divisor\">old_custom_divisor</a> != <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#custom_divisor\">custom_divisor</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If they're setting up a custom divisor or speed,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * instead of clearing it, then bitch about it. No</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * need to rate-limit; it's CAP_SYS_ADMIN only.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_SPD_MASK\">UPF_SPD_MASK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[64];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s sets custom speed on %s. This \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"is deprecated.\\n\", <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_speed\">uart_change_speed</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#uart_startup\">uart_startup</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, 1);", 
" <a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_get_lsr_info<span class=\"ts\"/>-<span class=\"ts\"/>get line status register info</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty associated with the UART</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@state: UART being queried</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@value: returned modem value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: uart_ioctl protects us against hangups.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#uart_get_lsr_info\">uart_get_lsr_info</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>, unsigned int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#tx_empty\">tx_empty</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we're about to load something into the transmit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * register, we'll pretend the transmitter isn't empty to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * avoid a race condition (depending on when the transmit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interrupt happens).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#x_char\">x_char</a> ||", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#uart_circ_chars_pending\">uart_circ_chars_pending</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xmit\">xmit</a>) &gt; 0) &&", 
"<span class=\"ts\"/>     !<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#stopped\">stopped</a> && !<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hw_stopped\">hw_stopped</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> &= ~<a class=\"id\" href=\"#TIOCSER_TEMT\">TIOCSER_TEMT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_tiocmget\">uart_tiocmget</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#file\">file</a> || !<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#file\">file</a>)) &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (1 << <a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#mctrl\">mctrl</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> |= <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_mctrl\">get_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#uart_tiocmset\">uart_tiocmset</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#set\">set</a>, unsigned int <a class=\"id\" href=\"#clear\">clear</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#file\">file</a> || !<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#file\">file</a>)) &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (1 << <a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_update_mctrl\">uart_update_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#clear\">clear</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_break_ctl\">uart_break_ctl</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#break_state\">break_state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#break_ctl\">break_ctl</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#break_state\">break_state</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_do_autoconfig\">uart_do_autoconfig</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Take the per-port semaphore.  This prevents count from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * changing, and hence any extra opens of the port while</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we're auto-configuring.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_port_users\">tty_port_users</a>(<a class=\"id\" href=\"#port\">port</a>) == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_shutdown\">uart_shutdown</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we already have a port type configured,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we must release its resources.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#release_port\">release_port</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#UART_CONFIG_TYPE\">UART_CONFIG_TYPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_AUTO_IRQ\">UPF_AUTO_IRQ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#UART_CONFIG_IRQ\">UART_CONFIG_IRQ</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This will claim the ports resources if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a port is found.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#config_port\">config_port</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uart_startup\">uart_startup</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wait for any of the 4 modem inputs (DCD,RI,DSR,CTS) to change</span>", 
"<span class=\"comment\"> * - mask passed in arg for lines of interest</span>", 
"<span class=\"comment\"> *   (use |'ed TIOCM_RNG/DSR/CD/CTS for masking)</span>", 
"<span class=\"comment\"> * Caller should use TIOCGICOUNT to see which one it was</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FIXME: This wants extracting into a common all driver implementation</span>", 
"<span class=\"comment\"> * of TIOCMWAIT using tty_port.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#uart_wait_modem_status\">uart_wait_modem_status</a>(struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_WAITQUEUE\">DECLARE_WAITQUEUE</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_icount\">uart_icount</a> <a class=\"id\" href=\"#cprev\">cprev</a>, <a class=\"id\" href=\"#cnow\">cnow</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * note the counters on entry</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#cprev\">cprev</a>, &amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>, sizeof(struct <a class=\"id\" href=\"#uart_icount\">uart_icount</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Force modem status interrupts on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#enable_ms\">enable_ms</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_wait_queue\">add_wait_queue</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#delta_msr_wait\">delta_msr_wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#cnow\">cnow</a>, &amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>, sizeof(struct <a class=\"id\" href=\"#uart_icount\">uart_icount</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (((<a class=\"id\" href=\"#arg\">arg</a> &amp; <a class=\"id\" href=\"#TIOCM_RNG\">TIOCM_RNG</a>) && (<a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#rng\">rng</a> != <a class=\"id\" href=\"#cprev\">cprev</a>.<a class=\"id\" href=\"#rng\">rng</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#arg\">arg</a> &amp; <a class=\"id\" href=\"#TIOCM_DSR\">TIOCM_DSR</a>) && (<a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#dsr\">dsr</a> != <a class=\"id\" href=\"#cprev\">cprev</a>.<a class=\"id\" href=\"#dsr\">dsr</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#arg\">arg</a> &amp; <a class=\"id\" href=\"#TIOCM_CD\">TIOCM_CD</a>)  && (<a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#dcd\">dcd</a> != <a class=\"id\" href=\"#cprev\">cprev</a>.<a class=\"id\" href=\"#dcd\">dcd</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#arg\">arg</a> &amp; <a class=\"id\" href=\"#TIOCM_CTS\">TIOCM_CTS</a>) && (<a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#cts\">cts</a> != <a class=\"id\" href=\"#cprev\">cprev</a>.<a class=\"id\" href=\"#cts\">cts</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* see if a signal did it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cprev\">cprev</a> = <a class=\"id\" href=\"#cnow\">cnow</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_wait_queue\">remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#delta_msr_wait\">delta_msr_wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get counter of input serial line interrupts (DCD,RI,DSR,CTS)</span>", 
"<span class=\"comment\"> * Return: write counters to the user passed counter struct</span>", 
"<span class=\"comment\"> * NB: both 1-&gt;0 and 0-&gt;1 transitions are counted except for</span>", 
"<span class=\"comment\"> *     RI where only 0-&gt;1 is counted.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#uart_get_count\">uart_get_count</a>(struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#serial_icounter_struct\">serial_icounter_struct</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#icnt\">icnt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#serial_icounter_struct\">serial_icounter_struct</a> <a class=\"id\" href=\"#icount\">icount</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_icount\">uart_icount</a> <a class=\"id\" href=\"#cnow\">cnow</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#cnow\">cnow</a>, &amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>, sizeof(struct <a class=\"id\" href=\"#uart_icount\">uart_icount</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#cts\">cts</a>         = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#cts\">cts</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#dsr\">dsr</a>         = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#dsr\">dsr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#rng\">rng</a>         = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#rng\">rng</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#dcd\">dcd</a>         = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#dcd\">dcd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#rx\">rx</a>          = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#rx\">rx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#tx\">tx</a>          = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#tx\">tx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#frame\">frame</a>       = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#frame\">frame</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#overrun\">overrun</a>     = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#overrun\">overrun</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#parity\">parity</a>      = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#parity\">parity</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#brk\">brk</a>         = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#brk\">brk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#buf_overrun\">buf_overrun</a> = <a class=\"id\" href=\"#cnow\">cnow</a>.<a class=\"id\" href=\"#buf_overrun\">buf_overrun</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#icnt\">icnt</a>, &amp;<a class=\"id\" href=\"#icount\">icount</a>, sizeof(<a class=\"id\" href=\"#icount\">icount</a>)) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called via sys_ioctl.  We can use spin_lock_irq() here.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#uart_ioctl\">uart_ioctl</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uarg\">uarg</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * These ioctls don't rely on the hardware to be present.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCGSERIAL\">TIOCGSERIAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uart_get_info\">uart_get_info</a>(<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#uarg\">uarg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSSERIAL\">TIOCSSERIAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uart_set_info\">uart_set_info</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#uarg\">uarg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSERCONFIG\">TIOCSERCONFIG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uart_do_autoconfig\">uart_do_autoconfig</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSERGWILD\">TIOCSERGWILD</a>: <span class=\"comment\">/* obsolete */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSERSWILD\">TIOCSERSWILD</a>: <span class=\"comment\">/* obsolete */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (1 << <a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The following should only be used when hardware is present.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCMIWAIT\">TIOCMIWAIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uart_wait_modem_status\">uart_wait_modem_status</a>(<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCGICOUNT\">TIOCGICOUNT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uart_get_count\">uart_get_count</a>(<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#uarg\">uarg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#filp\">filp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_up\">out_up</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All these rely on hardware being present and need to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * protected against the tty being hung up.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSERGETLSR\">TIOCSERGETLSR</a>: <span class=\"comment\">/* Get line status register */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uart_get_lsr_info\">uart_get_lsr_info</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#uarg\">uarg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out_up\">out_up</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_set_ldisc\">uart_set_ldisc</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_ldisc\">set_ldisc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_ldisc\">set_ldisc</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_line\">c_line</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_set_termios\">uart_set_termios</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#old_termios\">old_termios</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cflag\">cflag</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a>;", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * These are the bits that are used to setup various</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * flags in the low level driver. We can ignore the Bfoo</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * bits in c_cflag; c_[io]speed will always be set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * appropriately by set_termios() in tty_ioctl.c</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RELEVANT_IFLAG\">RELEVANT_IFLAG</a>(<a class=\"id\" href=\"#iflag\">iflag</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#iflag\">iflag</a>) &amp; (<a class=\"id\" href=\"#IGNBRK\">IGNBRK</a>|<a class=\"id\" href=\"#BRKINT\">BRKINT</a>|<a class=\"id\" href=\"#IGNPAR\">IGNPAR</a>|<a class=\"id\" href=\"#PARMRK\">PARMRK</a>|<a class=\"id\" href=\"#INPCK\">INPCK</a>))", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cflag\">cflag</a> ^ <a class=\"id\" href=\"#old_termios\">old_termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a>) == 0 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_ospeed\">c_ospeed</a> == <a class=\"id\" href=\"#old_termios\">old_termios</a>-><a class=\"id\" href=\"#c_ospeed\">c_ospeed</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_ispeed\">c_ispeed</a> == <a class=\"id\" href=\"#old_termios\">old_termios</a>-><a class=\"id\" href=\"#c_ispeed\">c_ispeed</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#RELEVANT_IFLAG\">RELEVANT_IFLAG</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_iflag\">c_iflag</a> ^ <a class=\"id\" href=\"#old_termios\">old_termios</a>-><a class=\"id\" href=\"#c_iflag\">c_iflag</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uart_change_speed\">uart_change_speed</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#old_termios\">old_termios</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Handle transition to B0 status */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#old_termios\">old_termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CBAUD\">CBAUD</a>) && !(<a class=\"id\" href=\"#cflag\">cflag</a> &amp; <a class=\"id\" href=\"#CBAUD\">CBAUD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_clear_mctrl\">uart_clear_mctrl</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>, <a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a> | <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Handle transition away from B0 status */</span>", 
"<span class=\"ts\"/>else if (!(<a class=\"id\" href=\"#old_termios\">old_termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CBAUD\">CBAUD</a>) && (<a class=\"id\" href=\"#cflag\">cflag</a> &amp; <a class=\"id\" href=\"#CBAUD\">CBAUD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#cflag\">cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_THROTTLED\">TTY_THROTTLED</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_set_mctrl\">uart_set_mctrl</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Handle turning off CRTSCTS */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#old_termios\">old_termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>) && !(<a class=\"id\" href=\"#cflag\">cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hw_stopped\">hw_stopped</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__uart_start\">__uart_start</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Handle turning on CRTSCTS */</span>", 
"<span class=\"ts\"/>else if (!(<a class=\"id\" href=\"#old_termios\">old_termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>) && (<a class=\"id\" href=\"#cflag\">cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_mctrl\">get_mctrl</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>) &amp; <a class=\"id\" href=\"#TIOCM_CTS\">TIOCM_CTS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hw_stopped\">hw_stopped</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#stop_tx\">stop_tx</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"#if 0", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No need to wake up processes in open wait, since they</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sample the CLOCAL flag once, and don't recheck it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX  It's not clear whether the current behavior is correct</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or not.  Hence, this may change.....</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#old_termios\">old_termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CLOCAL\">CLOCAL</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CLOCAL\">CLOCAL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>.<a class=\"id\" href=\"#open_wait\">open_wait</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * In 2.4.5, calls to this will be serialized via the BKL in</span>", 
"<span class=\"comment\"> *  linux/drivers/char/tty_io.c:tty_release()</span>", 
"<span class=\"comment\"> *  linux/drivers/char/tty_io.c:do_tty_handup()</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#uart_close\">uart_close</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#tty_locked\">tty_locked</a>());", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"uart_close(%d) called\\n\", <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#filp\">filp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a> == 1) && (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> != 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Uh, oh.  tty-&gt;count is 1, which means that the tty</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * structure will be freed.  port-&gt;count should always</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be one in these conditions.  If it's greater than</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * one, we've got real problems, since it means the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * serial port won't be shutdown.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"uart_close: bad serial port count; tty->count is 1, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"port->count is %d\\n\", <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (--<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"uart_close: bad serial port count for %s: %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now we wait for the transmit buffer to clear; and we notify</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the line discipline to only process XON/XOFF characters by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * setting tty-&gt;closing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#closing\">closing</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#closing_wait\">closing_wait</a> != <a class=\"id\" href=\"#ASYNC_CLOSING_WAIT_NONE\">ASYNC_CLOSING_WAIT_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hack: open-coded tty_wait_until_sent to avoid</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * recursive tty_lock</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#closing_wait\">closing_wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wait_event_interruptible_timeout\">wait_event_interruptible_timeout</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#tty_chars_in_buffer\">tty_chars_in_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>), <a class=\"id\" href=\"#timeout\">timeout</a>) >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__uart_wait_until_sent\">__uart_wait_until_sent</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * At this point, we stop accepting input.  To do this, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * disable the receive line status interrupts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_INITIALIZED\">ASYNC_INITIALIZED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#stop_rx\">stop_rx</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Before we drop DTR, make sure the UART transmitter</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * has completely drained; this is especially</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * important if there is a transmit FIFO!</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__uart_wait_until_sent\">__uart_wait_until_sent</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uart_shutdown\">uart_shutdown</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uart_flush_buffer\">uart_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_flush\">tty_ldisc_flush</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_port_tty_set\">tty_port_tty_set</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#closing\">closing</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#blocked_open\">blocked_open</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#close_delay\">close_delay</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep_interruptible\">msleep_interruptible</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#close_delay\">close_delay</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#uport\">uport</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(<a class=\"id\" href=\"#state\">state</a>, 3);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wake up anyone trying to open this port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#ASYNCB_NORMAL_ACTIVE\">ASYNCB_NORMAL_ACTIVE</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#open_wait\">open_wait</a>);", 
"", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__uart_wait_until_sent\">__uart_wait_until_sent</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#char_time\">char_time</a>, <a class=\"id\" href=\"#expire\">expire</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a> || <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#fifosize\">fifosize</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set the check interval to be 1/5 of the estimated time to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * send a single character, and make it at least 1.  The check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interval should also be less than the timeout.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: we have to use pretty tight timings here to satisfy</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the NIST-PCTS.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#char_time\">char_time</a> = (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#timeout\">timeout</a> - <a class=\"id\" href=\"#HZ\">HZ</a>/50) / <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#fifosize\">fifosize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#char_time\">char_time</a> = <a class=\"id\" href=\"#char_time\">char_time</a> / 5;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#char_time\">char_time</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#char_time\">char_time</a> = 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timeout\">timeout</a> && <a class=\"id\" href=\"#timeout\">timeout</a> &lt; <a class=\"id\" href=\"#char_time\">char_time</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#char_time\">char_time</a> = <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the transmitter hasn't cleared in twice the approximate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * amount of time to send the entire FIFO, it probably won't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ever clear.  This assumes the UART isn't doing flow</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * control, which is currently the case.  Hence, if it ever</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * takes longer than port-&gt;timeout, this is probably due to a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * UART bug of some kind.  So, we clamp the timeout parameter at</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 2*port-&gt;timeout.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timeout\">timeout</a> == 0 || <a class=\"id\" href=\"#timeout\">timeout</a> &gt; 2 * <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#timeout\">timeout</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = 2 * <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#timeout\">timeout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#expire\">expire</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"uart_wait_until_sent(%d), jiffies=%lu, expire=%lu...\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#expire\">expire</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check whether the transmitter is empty every 'char_time'.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 'timeout' / 'expire' give us the maximum amount of time</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we wait.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#tx_empty\">tx_empty</a>(<a class=\"id\" href=\"#port\">port</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep_interruptible\">msleep_interruptible</a>(<a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#char_time\">char_time</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#expire\">expire</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>); <span class=\"comment\">/* might not be needed */</span>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_wait_until_sent\">uart_wait_until_sent</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__uart_wait_until_sent\">__uart_wait_until_sent</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is called with the BKL held in</span>", 
"<span class=\"comment\"> *  linux/drivers/char/tty_io.c:do_tty_hangup()</span>", 
"<span class=\"comment\"> * We're called from the eventd thread, so we can sleep for</span>", 
"<span class=\"comment\"> * a _short_ time only.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#uart_hangup\">uart_hangup</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#tty_locked\">tty_locked</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"uart_hangup(%d)\\n\", <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#line\">line</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_NORMAL_ACTIVE\">ASYNC_NORMAL_ACTIVE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_flush_buffer\">uart_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_shutdown\">uart_shutdown</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#ASYNCB_NORMAL_ACTIVE\">ASYNCB_NORMAL_ACTIVE</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_port_tty_set\">tty_port_tty_set</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#open_wait\">open_wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#delta_msr_wait\">delta_msr_wait</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_update_termios<span class=\"ts\"/>-<span class=\"ts\"/>update the terminal hw settings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty associated with UART</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@state: UART to update</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copy across the serial console cflag setting into the termios settings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for the initial open of the port.  This allows continuity between the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>kernel settings, and the settings init adopts when it opens the port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for the first time.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#uart_update_termios\">uart_update_termios</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#port\">port</a>) && <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#cflag\">cflag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#cflag\">cflag</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#cflag\">cflag</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the device failed to grab its irq resources,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or some other error occurred, don't try to talk</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to the port hardware.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (1 << <a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Make termios settings take effect.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_speed\">uart_change_speed</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * And finally enable the RTS and DTR signals.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CBAUD\">CBAUD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_set_mctrl\">uart_set_mctrl</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a> | <a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_carrier_raised\">uart_carrier_raised</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#uart_state\">uart_state</a>, <a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mctrl\">mctrl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#enable_ms\">enable_ms</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mctrl\">mctrl</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_mctrl\">get_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mctrl\">mctrl</a> &amp; <a class=\"id\" href=\"#TIOCM_CAR\">TIOCM_CAR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_dtr_rts\">uart_dtr_rts</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>, int <a class=\"id\" href=\"#onoff\">onoff</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#uart_state\">uart_state</a>, <a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#onoff\">onoff</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_set_mctrl\">uart_set_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a> | <a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If this is the first open to succeed,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * adjust things to suit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#ASYNCB_NORMAL_ACTIVE\">ASYNCB_NORMAL_ACTIVE</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_update_termios\">uart_update_termios</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_clear_mctrl\">uart_clear_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a> | <a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#uart_get\">uart_get</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, int <a class=\"id\" href=\"#line\">line</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a> || <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_DEAD\">UPF_DEAD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_unlock\">err_unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#state\">state</a>;", 
"", 
" <a class=\"id\" href=\"#err_unlock\">err_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
" <a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * calls to uart_open are serialised by the BKL in</span>", 
"<span class=\"comment\"> *   fs/char_dev.c:chrdev_open()</span>", 
"<span class=\"comment\"> * Note that if this fails, then uart_close() _will_ be called.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In time, we want to scrap the \"opening nonpresent ports\"</span>", 
"<span class=\"comment\"> * behaviour and implement an alternative way for setserial</span>", 
"<span class=\"comment\"> * to set base addresses/ports/types.  This will allow us to</span>", 
"<span class=\"comment\"> * get rid of a certain amount of extra tests.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#uart_open\">uart_open</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = (struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *)<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#driver_state\">driver_state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>, <a class=\"id\" href=\"#line\">line</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#tty_locked\">tty_locked</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"uart_open(%d) called\\n\", <a class=\"id\" href=\"#line\">line</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tty-&gt;driver-&gt;num won't change, so we won't fail here with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tty-&gt;driver_data set to something non-NULL (and therefore</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we won't get caught by uart_close()).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#line\">line</a> >= <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We take the semaphore inside uart_get to guarantee that we won't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be re-entered while allocating the state structure, or while we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * request any IRQs that the driver may need.  This also has the nice</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * side-effect that it delays the action of uart_hangup, so we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * guarantee that state-&gt;port.tty will always contain something</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reasonable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#uart_get\">uart_get</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Once we set tty-&gt;driver_data here, we are guaranteed that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * uart_close() will decrement the driver module use count.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Any failures from here onwards should not touch the count.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#low_latency\">low_latency</a> = (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_LOW_LATENCY\">UPF_LOW_LATENCY</a>) ? 1 : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#alt_speed\">alt_speed</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_port_tty_set\">tty_port_tty_set</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the port is in the middle of closing, bail out now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#filp\">filp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure the device is in D0 state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(<a class=\"id\" href=\"#state\">state</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Start up the serial port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#uart_startup\">uart_startup</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we succeeded, wait until the port is ready.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_port_block_til_ready\">tty_port_block_til_ready</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static const char *<a class=\"id\" href=\"#uart_type\">uart_type</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#type\">type</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#str\">str</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = \"unknown\";", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#str\">str</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"", 
"static void <a class=\"id\" href=\"#uart_line_info\">uart_line_info</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, int <a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pm_state\">pm_state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#stat_buf\">stat_buf</a>[32];", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mmio\">mmio</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#uport\">uport</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmio\">mmio</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iotype\">iotype</a> >= <a class=\"id\" href=\"#UPIO_MEM\">UPIO_MEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%d: uart:%s %s%08llX irq:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#uart_type\">uart_type</a>(<a class=\"id\" href=\"#uport\">uport</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmio\">mmio</a> ? \"mmio:0x\" : \"port:\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmio\">mmio</a> ? (unsigned long long)<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#mapbase\">mapbase</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     : (unsigned long long)<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#iobase\">iobase</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_state\">pm_state</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#pm_state\">pm_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pm_state\">pm_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(<a class=\"id\" href=\"#state\">state</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_mctrl\">get_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pm_state\">pm_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#pm_state\">pm_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \" tx:%d rx:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#tx\">tx</a>, <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#rx\">rx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#frame\">frame</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \" fe:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#frame\">frame</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#parity\">parity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \" pe:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#parity\">parity</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#brk\">brk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \" brk:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#brk\">brk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#overrun\">overrun</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \" oe:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#icount\">icount</a>.<a class=\"id\" href=\"#overrun\">overrun</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INFOBIT\">INFOBIT</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#str\">str</a>) \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#mctrl\">mctrl</a> &amp; (<a class=\"id\" href=\"#bit\">bit</a>)) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strncat\">strncat</a>(<a class=\"id\" href=\"#stat_buf\">stat_buf</a>, (<a class=\"id\" href=\"#str\">str</a>), sizeof(<a class=\"id\" href=\"#stat_buf\">stat_buf</a>) - \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#stat_buf\">stat_buf</a>) - 2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#STATBIT\">STATBIT</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#str\">str</a>) \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#bit\">bit</a>)) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strncat\">strncat</a>(<a class=\"id\" href=\"#stat_buf\">stat_buf</a>, (<a class=\"id\" href=\"#str\">str</a>), sizeof(<a class=\"id\" href=\"#stat_buf\">stat_buf</a>) - \\", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#stat_buf\">stat_buf</a>) - 2)", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat_buf\">stat_buf</a>[0] = '\\0';", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat_buf\">stat_buf</a>[1] = '\\0';", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INFOBIT\">INFOBIT</a>(<a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>, \"|RTS\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#STATBIT\">STATBIT</a>(<a class=\"id\" href=\"#TIOCM_CTS\">TIOCM_CTS</a>, \"|CTS\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INFOBIT\">INFOBIT</a>(<a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a>, \"|DTR\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#STATBIT\">STATBIT</a>(<a class=\"id\" href=\"#TIOCM_DSR\">TIOCM_DSR</a>, \"|DSR\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#STATBIT\">STATBIT</a>(<a class=\"id\" href=\"#TIOCM_CAR\">TIOCM_CAR</a>, \"|CD\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#STATBIT\">STATBIT</a>(<a class=\"id\" href=\"#TIOCM_RNG\">TIOCM_RNG</a>, \"|RI\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#stat_buf\">stat_buf</a>[0])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat_buf\">stat_buf</a>[0] = ' ';", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#stat_buf\">stat_buf</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#STATBIT\">STATBIT</a>", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#INFOBIT\">INFOBIT</a>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_proc_show\">uart_proc_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#ttydrv\">ttydrv</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#ttydrv\">ttydrv</a>-><a class=\"id\" href=\"#driver_state\">driver_state</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"serinfo:1.0 driver%s%s revision:%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"\", \"\", \"\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#nr\">nr</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_line_info\">uart_line_info</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_proc_open\">uart_proc_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#uart_proc_show\">uart_proc_show</a>, <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#uart_proc_fops\">uart_proc_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_proc_open\">uart_proc_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SERIAL_CORE_CONSOLE\">CONFIG_SERIAL_CORE_CONSOLE</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_CONSOLE_POLL\">CONFIG_CONSOLE_POLL</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_console_write - write a console message to a serial port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: the port to write the message</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@s: array of characters</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@count: number of characters in string to write</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@write: function to write character to port</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#uart_console_write\">uart_console_write</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, const char *<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void (*<a class=\"id\" href=\"#putchar\">putchar</a>)(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *, int))", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#s\">s</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#s\">s</a> == '\\n')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#putchar\">putchar</a>(<a class=\"id\" href=\"#port\">port</a>, '\\r');", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#putchar\">putchar</a>(<a class=\"id\" href=\"#port\">port</a>, *<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#uart_console_write\">uart_console_write</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Check whether an invalid uart number has been specified, and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if so, search for the first available port that does have</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>console support.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#uart_port\">uart_port</a> * <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#uart_get_console\">uart_get_console</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#ports\">ports</a>, int <a class=\"id\" href=\"#nr\">nr</a>, struct <a class=\"id\" href=\"#console\">console</a> *<a class=\"id\" href=\"#co\">co</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#co\">co</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> &lt; 0 || <a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#nr\">nr</a> || (<a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#iobase\">iobase</a> == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#membase\">membase</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#idx\">idx</a> = 0; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#nr\">nr</a>; <a class=\"id\" href=\"#idx\">idx</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#iobase\">iobase</a> != 0 ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#membase\">membase</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#co\">co</a>-><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#idx\">idx</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ports\">ports</a> + <a class=\"id\" href=\"#idx\">idx</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_parse_options - Parse serial port baud/parity/bits/flow contro.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@options: pointer to option string</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@baud: pointer to an 'int' variable for the baud rate.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@parity: pointer to an 'int' variable for the parity.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bits: pointer to an 'int' variable for the number of data bits.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@flow: pointer to an 'int' variable for the flow control character.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_parse_options decodes a string containing the serial console</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>options.  The format of the string is &lt;baud&gt;&lt;parity&gt;&lt;bits&gt;&lt;flow&gt;,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>eg: 115200n8r</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#uart_parse_options\">uart_parse_options</a>(char *<a class=\"id\" href=\"#options\">options</a>, int *<a class=\"id\" href=\"#baud\">baud</a>, int *<a class=\"id\" href=\"#parity\">parity</a>, int *<a class=\"id\" href=\"#bits\">bits</a>, int *<a class=\"id\" href=\"#flow\">flow</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#options\">options</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#baud\">baud</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 10);", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#s\">s</a> >= '0' && *<a class=\"id\" href=\"#s\">s</a> <= '9')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>++;", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#parity\">parity</a> = *<a class=\"id\" href=\"#s\">s</a>++;", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bits\">bits</a> = *<a class=\"id\" href=\"#s\">s</a>++ - '0';", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#flow\">flow</a> = *<a class=\"id\" href=\"#s\">s</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#uart_parse_options\">uart_parse_options</a>);", 
"", 
"struct <a class=\"id\" href=\"#baud_rates\">baud_rates</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#rate\">rate</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cflag\">cflag</a>;", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#baud_rates\">baud_rates</a> <a class=\"id\" href=\"#baud_rates\">baud_rates</a>[] = {", 
"<span class=\"ts\"/>{ 921600, <a class=\"id\" href=\"#B921600\">B921600</a> },", 
"<span class=\"ts\"/>{ 460800, <a class=\"id\" href=\"#B460800\">B460800</a> },", 
"<span class=\"ts\"/>{ 230400, <a class=\"id\" href=\"#B230400\">B230400</a> },", 
"<span class=\"ts\"/>{ 115200, <a class=\"id\" href=\"#B115200\">B115200</a> },", 
"<span class=\"ts\"/>{  57600, <a class=\"id\" href=\"#B57600\">B57600</a>  },", 
"<span class=\"ts\"/>{  38400, <a class=\"id\" href=\"#B38400\">B38400</a>  },", 
"<span class=\"ts\"/>{  19200, <a class=\"id\" href=\"#B19200\">B19200</a>  },", 
"<span class=\"ts\"/>{   9600, <a class=\"id\" href=\"#B9600\">B9600</a>   },", 
"<span class=\"ts\"/>{   4800, <a class=\"id\" href=\"#B4800\">B4800</a>   },", 
"<span class=\"ts\"/>{   2400, <a class=\"id\" href=\"#B2400\">B2400</a>   },", 
"<span class=\"ts\"/>{   1200, <a class=\"id\" href=\"#B1200\">B1200</a>   },", 
"<span class=\"ts\"/>{      0, <a class=\"id\" href=\"#B38400\">B38400</a>  }", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_set_options - setup the serial console parameters</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: pointer to the serial ports uart_port structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@co: console pointer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@baud: baud rate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@parity: parity character - 'n' (none), 'o' (odd), 'e' (even)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bits: number of data bits</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@flow: flow control character - 'r' (rts)</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#uart_set_options\">uart_set_options</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#console\">console</a> *<a class=\"id\" href=\"#co\">co</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#baud\">baud</a>, int <a class=\"id\" href=\"#parity\">parity</a>, int <a class=\"id\" href=\"#bits\">bits</a>, int <a class=\"id\" href=\"#flow\">flow</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> <a class=\"id\" href=\"#termios\">termios</a>;", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#ktermios\">ktermios</a> <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ensure that the serial console lock is initialised</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * early.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lockdep_set_class\">lockdep_set_class</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, &amp;<a class=\"id\" href=\"#port_lock_key\">port_lock_key</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#termios\">termios</a>, 0, sizeof(struct <a class=\"id\" href=\"#ktermios\">ktermios</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a> = <a class=\"id\" href=\"#CREAD\">CREAD</a> | <a class=\"id\" href=\"#HUPCL\">HUPCL</a> | <a class=\"id\" href=\"#CLOCAL\">CLOCAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Construct a cflag setting.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#baud_rates\">baud_rates</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rate\">rate</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#baud_rates\">baud_rates</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rate\">rate</a> <= <a class=\"id\" href=\"#baud\">baud</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a> |= <a class=\"id\" href=\"#baud_rates\">baud_rates</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#cflag\">cflag</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bits\">bits</a> == 7)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a> |= <a class=\"id\" href=\"#CS7\">CS7</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a> |= <a class=\"id\" href=\"#CS8\">CS8</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#parity\">parity</a>) {", 
"<span class=\"ts\"/>case 'o': case 'O':", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a> |= <a class=\"id\" href=\"#PARODD\">PARODD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*fall through*/</span>", 
"<span class=\"ts\"/>case 'e': case 'E':", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a> |= <a class=\"id\" href=\"#PARENB\">PARENB</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flow\">flow</a> == 'r')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a> |= <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * some uarts on other side don't support no flow control.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So we set * DTR in host uart to make them happy</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mctrl\">mctrl</a> |= <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_termios\">set_termios</a>(<a class=\"id\" href=\"#port\">port</a>, &amp;<a class=\"id\" href=\"#termios\">termios</a>, &amp;<a class=\"id\" href=\"#dummy\">dummy</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allow the setting of the UART parameters with a NULL console</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * too:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#co\">co</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#co\">co</a>-><a class=\"id\" href=\"#cflag\">cflag</a> = <a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#uart_set_options\">uart_set_options</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SERIAL_CORE_CONSOLE */</span>", 
"", 
"static void <a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>, int <a class=\"id\" href=\"#pm_state\">pm_state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#pm_state\">pm_state</a> != <a class=\"id\" href=\"#pm_state\">pm_state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#pm\">pm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#pm\">pm</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#pm_state\">pm_state</a>, <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#pm_state\">pm_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#pm_state\">pm_state</a> = <a class=\"id\" href=\"#pm_state\">pm_state</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"struct <a class=\"id\" href=\"#uart_match\">uart_match</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#serial_match_port\">serial_match_port</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_match\">uart_match</a> *<a class=\"id\" href=\"#match\">match</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#tty_drv\">tty_drv</a> = <a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#tty_driver\">tty_driver</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#devt\">devt</a> = <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#tty_drv\">tty_drv</a>-><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#tty_drv\">tty_drv</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#line\">line</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a> == <a class=\"id\" href=\"#devt\">devt</a>; <span class=\"comment\">/* Actually, only one tty per port */</span>", 
"}", 
"", 
"int <a class=\"id\" href=\"#uart_suspend_port\">uart_suspend_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#tty_dev\">tty_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_match\">uart_match</a> <a class=\"id\" href=\"#match\">match</a> = {<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#drv\">drv</a>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Must be inside the mutex lock until we convert to tty_port */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_dev\">tty_dev</a> = <a class=\"id\" href=\"#device_find_child\">device_find_child</a>(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#match\">match</a>, <a class=\"id\" href=\"#serial_match_port\">serial_match_port</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#device_may_wakeup\">device_may_wakeup</a>(<a class=\"id\" href=\"#tty_dev\">tty_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enable_irq_wake\">enable_irq_wake</a>(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#tty_dev\">tty_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#console_suspend_enabled\">console_suspend_enabled</a> || !<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#uport\">uport</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#suspended\">suspended</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_INITIALIZED\">ASYNC_INITIALIZED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#uart_ops\">uart_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#tries\">tries</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#console_suspend_enabled\">console_suspend_enabled</a> || !<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#uport\">uport</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#ASYNCB_SUSPENDED\">ASYNCB_SUSPENDED</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#ASYNCB_INITIALIZED\">ASYNCB_INITIALIZED</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#stop_tx\">stop_tx</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_mctrl\">set_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#stop_rx\">stop_rx</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Wait for the transmitter to empty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#tries\">tries</a> = 3; !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#tx_empty\">tx_empty</a>(<a class=\"id\" href=\"#uport\">uport</a>) && <a class=\"id\" href=\"#tries\">tries</a>; <a class=\"id\" href=\"#tries\">tries</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(10);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tries\">tries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s%s%s%d: Unable to drain \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"transmitter\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#dev\">dev</a>) : \"\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#dev\">dev</a> ? \": \" : \"\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dev_name\">dev_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#tty_driver\">tty_driver</a>-><a class=\"id\" href=\"#name_base\">name_base</a> + <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#console_suspend_enabled\">console_suspend_enabled</a> || !<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#uport\">uport</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Disable the console device before suspending.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#console_suspend_enabled\">console_suspend_enabled</a> && <a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#uport\">uport</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#console_stop\">console_stop</a>(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#cons\">cons</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#console_suspend_enabled\">console_suspend_enabled</a> || !<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#uport\">uport</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(<a class=\"id\" href=\"#state\">state</a>, 3);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#uart_resume_port\">uart_resume_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#tty_dev\">tty_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_match\">uart_match</a> <a class=\"id\" href=\"#match\">match</a> = {<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#drv\">drv</a>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> <a class=\"id\" href=\"#termios\">termios</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_dev\">tty_dev</a> = <a class=\"id\" href=\"#device_find_child\">device_find_child</a>(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#match\">match</a>, <a class=\"id\" href=\"#serial_match_port\">serial_match_port</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#suspended\">suspended</a> && <a class=\"id\" href=\"#device_may_wakeup\">device_may_wakeup</a>(<a class=\"id\" href=\"#tty_dev\">tty_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_irq_wake\">disable_irq_wake</a>(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#suspended\">suspended</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Re-enable the console device after suspending.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#uport\">uport</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(<a class=\"id\" href=\"#state\">state</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_termios\">set_termios</a>(<a class=\"id\" href=\"#uport\">uport</a>, &amp;<a class=\"id\" href=\"#termios\">termios</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#console_start\">console_start</a>(<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#cons\">cons</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_SUSPENDED\">ASYNC_SUSPENDED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#uart_ops\">uart_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(<a class=\"id\" href=\"#state\">state</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_mctrl\">set_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#console_suspend_enabled\">console_suspend_enabled</a> || !<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#uport\">uport</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Protected by port mutex for now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#startup\">startup</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_speed\">uart_change_speed</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_mctrl\">set_mctrl</a>(<a class=\"id\" href=\"#uport\">uport</a>, <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#mctrl\">mctrl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#start_tx\">start_tx</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#ASYNCB_INITIALIZED\">ASYNCB_INITIALIZED</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Failed to resume - maybe hardware went away?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Clear the \"initialized\" flag so we won't try</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to call the low level drivers shutdown method.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_shutdown\">uart_shutdown</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#ASYNCB_SUSPENDED\">ASYNCB_SUSPENDED</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#uart_report_port\">uart_report_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#address\">address</a>[64];", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#iotype\">iotype</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_PORT\">UPIO_PORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#address\">address</a>, sizeof(<a class=\"id\" href=\"#address\">address</a>), \"I/O 0x%lx\", <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#iobase\">iobase</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_HUB6\">UPIO_HUB6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#address\">address</a>, sizeof(<a class=\"id\" href=\"#address\">address</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"I/O 0x%lx offset 0x%x\", <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#iobase\">iobase</a>, <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#hub6\">hub6</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_MEM\">UPIO_MEM</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_MEM32\">UPIO_MEM32</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_AU\">UPIO_AU</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_TSI\">UPIO_TSI</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_DWAPB\">UPIO_DWAPB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#address\">address</a>, sizeof(<a class=\"id\" href=\"#address\">address</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"MMIO 0x%llx\", (unsigned long long)<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mapbase\">mapbase</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#address\">address</a>, \"*unknown*\", sizeof(<a class=\"id\" href=\"#address\">address</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s%s%s%d at %s (irq = %d) is a %s\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#dev\">dev</a>) : \"\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#dev\">dev</a> ? \": \" : \"\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dev_name\">dev_name</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#tty_driver\">tty_driver</a>-><a class=\"id\" href=\"#name_base\">name_base</a> + <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#uart_type\">uart_type</a>(<a class=\"id\" href=\"#port\">port</a>));", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#uart_configure_port\">uart_configure_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there isn't a port here, don't do anything further.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#iobase\">iobase</a> && !<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mapbase\">mapbase</a> && !<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#membase\">membase</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now do the auto configuration stuff.  Note that config_port</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is expected to claim the resources and map the port for us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_AUTO_IRQ\">UPF_AUTO_IRQ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#UART_CONFIG_IRQ\">UART_CONFIG_IRQ</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_BOOT_AUTOCONF\">UPF_BOOT_AUTOCONF</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_FIXED_TYPE\">UPF_FIXED_TYPE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#UART_CONFIG_TYPE\">UART_CONFIG_TYPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#config_port\">config_port</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_report_port\">uart_report_port</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#port\">port</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Power up port for set_mctrl() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(<a class=\"id\" href=\"#state\">state</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Ensure that the modem control lines are de-activated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * keep the DTR setting that is set in uart_set_options()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We probably don't need a spinlock around this, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_mctrl\">set_mctrl</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mctrl\">mctrl</a> &amp; <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If this driver supports console, and it hasn't been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * successfully registered yet, try to re-register it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * It may be that the port was not available.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#cons\">cons</a> && !(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CON_ENABLED\">CON_ENABLED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#register_console\">register_console</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#cons\">cons</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Power down all ports by default, except the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * console if we have one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#port\">port</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_change_pm\">uart_change_pm</a>(<a class=\"id\" href=\"#state\">state</a>, 3);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CONSOLE_POLL\">CONFIG_CONSOLE_POLL</a>", 
"", 
"static int <a class=\"id\" href=\"#uart_poll_init\">uart_poll_init</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#line\">line</a>, char *<a class=\"id\" href=\"#options\">options</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#driver_state\">driver_state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#baud\">baud</a> = 9600;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bits\">bits</a> = 8;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#parity\">parity</a> = 'n';", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flow\">flow</a> = 'n';", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a> || !<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll_get_char\">poll_get_char</a> && <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll_put_char\">poll_put_char</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#options\">options</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uart_parse_options\">uart_parse_options</a>(<a class=\"id\" href=\"#options\">options</a>, &amp;<a class=\"id\" href=\"#baud\">baud</a>, &amp;<a class=\"id\" href=\"#parity\">parity</a>, &amp;<a class=\"id\" href=\"#bits\">bits</a>, &amp;<a class=\"id\" href=\"#flow\">flow</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#uart_set_options\">uart_set_options</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#baud\">baud</a>, <a class=\"id\" href=\"#parity\">parity</a>, <a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#flow\">flow</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#uart_poll_get_char\">uart_poll_get_char</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#line\">line</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#driver_state\">driver_state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a> || !<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll_get_char\">poll_get_char</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uart_poll_put_char\">uart_poll_put_char</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#line\">line</a>, char <a class=\"id\" href=\"#ch\">ch</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#driver_state\">driver_state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a> || !<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll_put_char\">poll_put_char</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#ch\">ch</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#tty_operations\">tty_operations</a> <a class=\"id\" href=\"#uart_ops\">uart_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_open\">uart_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#close\">close</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_close\">uart_close</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_write\">uart_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#put_char\">put_char</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_put_char\">uart_put_char</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_chars\">flush_chars</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_flush_chars\">uart_flush_chars</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_room\">write_room</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_write_room\">uart_write_room</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#chars_in_buffer\">chars_in_buffer</a>= <a class=\"id\" href=\"#uart_chars_in_buffer\">uart_chars_in_buffer</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_buffer\">flush_buffer</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_flush_buffer\">uart_flush_buffer</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_ioctl\">uart_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#throttle\">throttle</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_throttle\">uart_throttle</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unthrottle\">unthrottle</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_unthrottle\">uart_unthrottle</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#send_xchar\">send_xchar</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_send_xchar\">uart_send_xchar</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_termios\">set_termios</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_set_termios\">uart_set_termios</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_ldisc\">set_ldisc</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_set_ldisc\">uart_set_ldisc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_stop\">uart_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_start\">uart_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hangup\">hangup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_hangup\">uart_hangup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#break_ctl\">break_ctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_break_ctl\">uart_break_ctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#wait_until_sent\">wait_until_sent</a>= <a class=\"id\" href=\"#uart_wait_until_sent\">uart_wait_until_sent</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#proc_fops\">proc_fops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#uart_proc_fops\">uart_proc_fops</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#tiocmget\">tiocmget</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_tiocmget\">uart_tiocmget</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#tiocmset\">tiocmset</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_tiocmset\">uart_tiocmset</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CONSOLE_POLL\">CONFIG_CONSOLE_POLL</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll_init\">poll_init</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_poll_init\">uart_poll_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll_get_char\">poll_get_char</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_poll_get_char\">uart_poll_get_char</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll_put_char\">poll_put_char</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_poll_put_char\">uart_poll_put_char</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#tty_port_operations\">tty_port_operations</a> <a class=\"id\" href=\"#uart_port_ops\">uart_port_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#carrier_raised\">carrier_raised</a> = <a class=\"id\" href=\"#uart_carrier_raised\">uart_carrier_raised</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dtr_rts\">dtr_rts</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uart_dtr_rts\">uart_dtr_rts</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_register_driver - register a driver with the uart core layer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@drv: low level driver structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Register a uart driver with the core driver.  We in turn register</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with the tty layer, and initialise the core driver per-port state.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>We have a proc file in /proc/tty/driver which is named after the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>normal driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>drv-&gt;port should be NULL, and the per-port structures should be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>registered using uart_add_one_port after this call has succeeded.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#uart_register_driver\">uart_register_driver</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#normal\">normal</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Maybe we should be using a slab cache for this, especially if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we have a large number of ports to handle.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#uart_state\">uart_state</a>) * <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a> = <a class=\"id\" href=\"#alloc_tty_driver\">alloc_tty_driver</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#normal\">normal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_kfree\">out_kfree</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#tty_driver\">tty_driver</a> = <a class=\"id\" href=\"#normal\">normal</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#driver_name\">driver_name</a><span class=\"ts\"/>= <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#driver_name\">driver_name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dev_name\">dev_name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#major\">major</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#major\">major</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#minor\">minor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#TTY_DRIVER_TYPE_SERIAL\">TTY_DRIVER_TYPE_SERIAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#subtype\">subtype</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#SERIAL_TYPE_NORMAL\">SERIAL_TYPE_NORMAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#init_termios\">init_termios</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_std_termios\">tty_std_termios</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#init_termios\">init_termios</a>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a> = <a class=\"id\" href=\"#B9600\">B9600</a> | <a class=\"id\" href=\"#CS8\">CS8</a> | <a class=\"id\" href=\"#CREAD\">CREAD</a> | <a class=\"id\" href=\"#HUPCL\">HUPCL</a> | <a class=\"id\" href=\"#CLOCAL\">CLOCAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#init_termios\">init_termios</a>.<a class=\"id\" href=\"#c_ispeed\">c_ispeed</a> = <a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#init_termios\">init_termios</a>.<a class=\"id\" href=\"#c_ospeed\">c_ospeed</a> = 9600;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#TTY_DRIVER_REAL_RAW\">TTY_DRIVER_REAL_RAW</a> | <a class=\"id\" href=\"#TTY_DRIVER_DYNAMIC_DEV\">TTY_DRIVER_DYNAMIC_DEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#normal\">normal</a>-><a class=\"id\" href=\"#driver_state\">driver_state</a>    = <a class=\"id\" href=\"#drv\">drv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_set_operations\">tty_set_operations</a>(<a class=\"id\" href=\"#normal\">normal</a>, &amp;<a class=\"id\" href=\"#uart_ops\">uart_ops</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Initialise the UART state(s).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#nr\">nr</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_port_init\">tty_port_init</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#uart_port_ops\">uart_port_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#close_delay\">close_delay</a>     = 500;<span class=\"ts\"/><span class=\"comment\">/* .5 seconds */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#closing_wait\">closing_wait</a>    = 30000;<span class=\"ts\"/><span class=\"comment\">/* 30 seconds */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tasklet_init\">tasklet_init</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#tlet\">tlet</a>, <a class=\"id\" href=\"#uart_tasklet_action\">uart_tasklet_action</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long)<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_register_driver\">tty_register_driver</a>(<a class=\"id\" href=\"#normal\">normal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_tty_driver\">put_tty_driver</a>(<a class=\"id\" href=\"#normal\">normal</a>);", 
"<a class=\"id\" href=\"#out_kfree\">out_kfree</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_unregister_driver - remove a driver from the uart core layer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@drv: low level driver structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Remove all references to a driver from the core driver.  The low</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>level driver must have removed all its ports via the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_remove_one_port() if it registered them with uart_add_one_port().</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(ie, drv-&gt;port == NULL)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#uart_unregister_driver\">uart_unregister_driver</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#tty_driver\">tty_driver</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unregister_driver\">tty_unregister_driver</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_tty_driver\">put_tty_driver</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#tty_driver\">tty_driver</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#uart_console_device\">uart_console_device</a>(struct <a class=\"id\" href=\"#console\">console</a> *<a class=\"id\" href=\"#co\">co</a>, int *<a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#co\">co</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#co\">co</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#tty_driver\">tty_driver</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_add_one_port - attach a driver-defined port structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@drv: pointer to the uart low level driver structure for this port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@uport: uart port structure to use for this port.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This allows the driver to register its own uart_port structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with the core driver.  The main purpose is to allow the low</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>level uart drivers to expand uart_port, rather than having yet</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>more levels of structures.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#uart_add_one_port\">uart_add_one_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#tty_dev\">tty_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>());", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a> >= <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#nr\">nr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port_mutex\">port_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a> = <a class=\"id\" href=\"#uport\">uport</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#pm_state\">pm_state</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#cons\">cons</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#cons\">cons</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this port is a console, then the spinlock is already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * initialised.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#uart_console\">uart_console</a>(<a class=\"id\" href=\"#uport\">uport</a>) && (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#cons\">cons</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CON_ENABLED\">CON_ENABLED</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lockdep_set_class\">lockdep_set_class</a>(&amp;<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#lock\">lock</a>, &amp;<a class=\"id\" href=\"#port_lock_key\">port_lock_key</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uart_configure_port\">uart_configure_port</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#uport\">uport</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Register the port whether it's detected or not.  This allows</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * setserial to be used to alter this ports parameters.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_dev\">tty_dev</a> = <a class=\"id\" href=\"#tty_register_device\">tty_register_device</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#tty_driver\">tty_driver</a>, <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tty_dev\">tty_dev</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_init_wakeup\">device_init_wakeup</a>(<a class=\"id\" href=\"#tty_dev\">tty_dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_set_wakeup_enable\">device_set_wakeup_enable</a>(<a class=\"id\" href=\"#tty_dev\">tty_dev</a>, 0);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Cannot register tty device on line %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ensure UPF_DEAD is not set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#UPF_DEAD\">UPF_DEAD</a>;", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port_mutex\">port_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>uart_remove_one_port - detach a driver defined port structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@drv: pointer to the uart low level driver structure for this port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@uport: uart port structure for this port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This unhooks (and hangs up) the specified port structure from the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>core driver.  No further calls will be made to the low-level code</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for this port.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#uart_remove_one_port\">uart_remove_one_port</a>(struct <a class=\"id\" href=\"#uart_driver\">uart_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#uport\">uport</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_state\">uart_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#state\">state</a> + <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>());", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a> != <a class=\"id\" href=\"#uport\">uport</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ALERT\">KERN_ALERT</a> \"Removing wrong port: %p != %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#uart_port\">uart_port</a>, <a class=\"id\" href=\"#uport\">uport</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port_mutex\">port_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Mark the port \"dead\" - this prevents any opens from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * succeeding while we shut down the port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#UPF_DEAD\">UPF_DEAD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Remove the devices from the tty layer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unregister_device\">tty_unregister_device</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#tty_driver\">tty_driver</a>, <a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#line\">line</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_vhangup\">tty_vhangup</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Free the port IO and memory resources, if any.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#release_port\">release_port</a>(<a class=\"id\" href=\"#uport\">uport</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Indicate that there isn't a port here anymore.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uport\">uport</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>;", 
];
xr_frag_insert('l/dc/841be91991140bbc733316ebfeed2c65c5802d.xr', __xr_tmp);
