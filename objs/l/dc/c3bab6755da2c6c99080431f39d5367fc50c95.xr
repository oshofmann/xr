var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * vgaarb.c: Implements the VGA arbitration. For details refer to</span>", 
"<span class=\"comment\"> * Documentation/vgaarbiter.txt</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (C) Copyright 2005 Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;</span>", 
"<span class=\"comment\"> * (C) Copyright 2007 Paulo R. Zanoni &lt;przanoni@gmail.com&gt;</span>", 
"<span class=\"comment\"> * (C) Copyright 2007, 2009 Tiago Vignatti &lt;vignatti@freedesktop.org&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Permission is hereby granted, free of charge, to any person obtaining a</span>", 
"<span class=\"comment\"> * copy of this software and associated documentation files (the \"Software\"),</span>", 
"<span class=\"comment\"> * to deal in the Software without restriction, including without limitation</span>", 
"<span class=\"comment\"> * the rights to use, copy, modify, merge, publish, distribute, sublicense,</span>", 
"<span class=\"comment\"> * and/or sell copies of the Software, and to permit persons to whom the</span>", 
"<span class=\"comment\"> * Software is furnished to do so, subject to the following conditions:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The above copyright notice and this permission notice (including the next</span>", 
"<span class=\"comment\"> * paragraph) shall be included in all copies or substantial portions of the</span>", 
"<span class=\"comment\"> * Software.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>", 
"<span class=\"comment\"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>", 
"<span class=\"comment\"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL</span>", 
"<span class=\"comment\"> * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>", 
"<span class=\"comment\"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING</span>", 
"<span class=\"comment\"> * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER</span>", 
"<span class=\"comment\"> * DEALINGS</span>", 
"<span class=\"comment\"> * IN THE SOFTWARE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#miscdevice\">miscdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vgaarb\">vgaarb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static void <a class=\"id\" href=\"#vga_arbiter_notify_clients\">vga_arbiter_notify_clients</a>(void);", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We keep a list of all vga devices in the system to speed</span>", 
"<span class=\"comment\"> * up the various operations of the arbiter</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#vga_device\">vga_device</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#decodes\">decodes</a>;<span class=\"ts\"/><span class=\"comment\">/* what does it decodes */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#owns\">owns</a>;<span class=\"ts\"/><span class=\"comment\">/* what does it owns */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#locks\">locks</a>;<span class=\"ts\"/><span class=\"comment\">/* what does it locks */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#io_lock_cnt\">io_lock_cnt</a>;<span class=\"ts\"/><span class=\"comment\">/* legacy IO lock count */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mem_lock_cnt\">mem_lock_cnt</a>;<span class=\"ts\"/><span class=\"comment\">/* legacy MEM lock count */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#io_norm_cnt\">io_norm_cnt</a>;<span class=\"ts\"/><span class=\"comment\">/* normal IO count */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mem_norm_cnt\">mem_norm_cnt</a>;<span class=\"ts\"/><span class=\"comment\">/* normal MEM count */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allow IRQ enable/disable hook */</span>", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#cookie\">cookie</a>;", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#irq_set_state\">irq_set_state</a>)(void *<a class=\"id\" href=\"#cookie\">cookie</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#enable\">enable</a>);", 
"<span class=\"ts\"/>unsigned int (*<a class=\"id\" href=\"#set_vga_decode\">set_vga_decode</a>)(void *<a class=\"id\" href=\"#cookie\">cookie</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#decode\">decode</a>);", 
"};", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#vga_list\">vga_list</a>);", 
"static int <a class=\"id\" href=\"#vga_count\">vga_count</a>, <a class=\"id\" href=\"#vga_decode_count\">vga_decode_count</a>;", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#vga_arbiter_used\">vga_arbiter_used</a>;", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"static <a class=\"id\" href=\"#DECLARE_WAIT_QUEUE_HEAD\">DECLARE_WAIT_QUEUE_HEAD</a>(<a class=\"id\" href=\"#vga_wait_queue\">vga_wait_queue</a>);", 
"", 
"", 
"static const char *<a class=\"id\" href=\"#vga_iostate_to_str\">vga_iostate_to_str</a>(unsigned int <a class=\"id\" href=\"#iostate\">iostate</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Ignore VGA_RSRC_IO and VGA_RSRC_MEM */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iostate\">iostate</a> &= <a class=\"id\" href=\"#VGA_RSRC_LEGACY_IO\">VGA_RSRC_LEGACY_IO</a> | <a class=\"id\" href=\"#VGA_RSRC_LEGACY_MEM\">VGA_RSRC_LEGACY_MEM</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#iostate\">iostate</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VGA_RSRC_LEGACY_IO\">VGA_RSRC_LEGACY_IO</a> | <a class=\"id\" href=\"#VGA_RSRC_LEGACY_MEM\">VGA_RSRC_LEGACY_MEM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"io+mem\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VGA_RSRC_LEGACY_IO\">VGA_RSRC_LEGACY_IO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"io\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VGA_RSRC_LEGACY_MEM\">VGA_RSRC_LEGACY_MEM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"mem\";", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return \"none\";", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vga_str_to_iostate\">vga_str_to_iostate</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#str_size\">str_size</a>, int *<a class=\"id\" href=\"#io_state\">io_state</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* we could in theory hand out locks on IO and mem</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * separately to userspace but it can cause deadlocks */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"none\", 4) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#io_state\">io_state</a> = <a class=\"id\" href=\"#VGA_RSRC_NONE\">VGA_RSRC_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
];
xr_frag_insert('l/dc/c3bab6755da2c6c99080431f39d5367fc50c95.xr', __xr_tmp);
