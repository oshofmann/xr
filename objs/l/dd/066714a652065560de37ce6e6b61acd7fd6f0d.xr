var __xr_tmp = [
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"Num       RefCount Protocol Flags    Type St \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Inode Path\\n\");", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#unix_sock\">unix_sock</a> *<a class=\"id\" href=\"#u\">u</a> = <a class=\"id\" href=\"#unix_sk\">unix_sk</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_state_lock\">unix_state_lock</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%p: %08X %08X %08X %04X %02X %5lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a> ? <a class=\"id\" href=\"#__SO_ACCEPTCON\">__SO_ACCEPTCON</a> : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sk_type\">sk_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_ESTABLISHED\">TCP_ESTABLISHED</a> ? <a class=\"id\" href=\"#SS_CONNECTED\">SS_CONNECTED</a> : <a class=\"id\" href=\"#SS_UNCONNECTED\">SS_UNCONNECTED</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_ESTABLISHED\">TCP_ESTABLISHED</a> ? <a class=\"id\" href=\"#SS_CONNECTING\">SS_CONNECTING</a> : <a class=\"id\" href=\"#SS_DISCONNECTING\">SS_DISCONNECTING</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_i_ino\">sock_i_ino</a>(<a class=\"id\" href=\"#s\">s</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#seq\">seq</a>, ' ');", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#len\">len</a> - sizeof(short);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#UNIX_ABSTRACT\">UNIX_ABSTRACT</a>(<a class=\"id\" href=\"#s\">s</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#seq\">seq</a>, '@');", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for ( ; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#sun_path\">sun_path</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_state_unlock\">unix_state_unlock</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#seq\">seq</a>, '\\n');", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#unix_seq_ops\">unix_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a>  = <a class=\"id\" href=\"#unix_seq_start\">unix_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>   = <a class=\"id\" href=\"#unix_seq_next\">unix_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>   = <a class=\"id\" href=\"#unix_seq_stop\">unix_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>   = <a class=\"id\" href=\"#unix_seq_show\">unix_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#unix_seq_open\">unix_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#unix_seq_ops\">unix_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#unix_iter_state\">unix_iter_state</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#unix_seq_fops\">unix_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#unix_seq_open\">unix_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#net_proto_family\">net_proto_family</a> <a class=\"id\" href=\"#unix_family_ops\">unix_family_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#PF_UNIX\">PF_UNIX</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#create\">create</a> = <a class=\"id\" href=\"#unix_create\">unix_create</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#unix_net_init\">unix_net_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#unx\">unx</a>.<a class=\"id\" href=\"#sysctl_max_dgram_qlen\">sysctl_max_dgram_qlen</a> = 10;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unix_sysctl_register\">unix_sysctl_register</a>(<a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"unix\", 0, &amp;<a class=\"id\" href=\"#unix_seq_fops\">unix_seq_fops</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unix_sysctl_unregister\">unix_sysctl_unregister</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#unix_net_exit\">unix_net_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unix_sysctl_unregister\">unix_sysctl_unregister</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"unix\");", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#unix_net_ops\">unix_net_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#unix_net_init\">unix_net_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#unix_net_exit\">unix_net_exit</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#af_unix_init\">af_unix_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = -1;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#dummy_skb\">dummy_skb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(sizeof(struct <a class=\"id\" href=\"#unix_skb_parms\">unix_skb_parms</a>) &gt; sizeof(<a class=\"id\" href=\"#dummy_skb\">dummy_skb</a>-><a class=\"id\" href=\"#cb\">cb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#proto_register\">proto_register</a>(&amp;<a class=\"id\" href=\"#unix_proto\">unix_proto</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"%s: Cannot create unix_sock SLAB cache!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_register\">sock_register</a>(&amp;<a class=\"id\" href=\"#unix_family_ops\">unix_family_ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#unix_net_ops\">unix_net_ops</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#af_unix_exit\">af_unix_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_unregister\">sock_unregister</a>(<a class=\"id\" href=\"#PF_UNIX\">PF_UNIX</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#unix_proto\">unix_proto</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#unix_net_ops\">unix_net_ops</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Earlier than device_initcall() so that other drivers invoking</span>", 
"<span class=\"comment\">   request_module() don't end up in a loop when modprobe tries</span>", 
"<span class=\"comment\">   to use a UNIX socket. But later than subsys_initcall() because</span>", 
"<span class=\"comment\">   we depend on stuff initialised there */</span>", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#af_unix_init\">af_unix_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#af_unix_exit\">af_unix_exit</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_ALIAS_NETPROTO\">MODULE_ALIAS_NETPROTO</a>(<a class=\"id\" href=\"#PF_UNIX\">PF_UNIX</a>);", 
];
xr_frag_insert('l/dd/066714a652065560de37ce6e6b61acd7fd6f0d.xr', __xr_tmp);
