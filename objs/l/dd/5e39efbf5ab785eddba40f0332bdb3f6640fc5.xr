var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: tbxface - Public interfaces to the ACPI subsystem</span>", 
"<span class=\"comment\"> *                         ACPI table oriented interfaces</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acnamesp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"actables.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_TABLES\">ACPI_TABLES</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"tbxface\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_tb_load_namespace\">acpi_tb_load_namespace</a>(void);", 
"", 
"static int <a class=\"id\" href=\"#no_auto_ssdt\">no_auto_ssdt</a>;", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_allocate_root_table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  initial_table_count - Size of initial_table_array, in number of</span>", 
"<span class=\"comment\"> *                                    struct acpi_table_desc structures</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Allocate a root table array. Used by i_aSL compiler and</span>", 
"<span class=\"comment\"> *              acpi_initialize_tables.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_allocate_root_table\">acpi_allocate_root_table</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#initial_table_count\">initial_table_count</a>)", 
"{", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#max_table_count\">max_table_count</a> = <a class=\"id\" href=\"#initial_table_count\">initial_table_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_ROOT_ALLOW_RESIZE\">ACPI_ROOT_ALLOW_RESIZE</a>;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#acpi_tb_resize_root_table_list\">acpi_tb_resize_root_table_list</a>());", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_initialize_tables</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  initial_table_array - Pointer to an array of pre-allocated</span>", 
"<span class=\"comment\"> *                                    struct acpi_table_desc structures. If NULL, the</span>", 
"<span class=\"comment\"> *                                    array is dynamically allocated.</span>", 
"<span class=\"comment\"> *              initial_table_count - Size of initial_table_array, in number of</span>", 
"<span class=\"comment\"> *                                    struct acpi_table_desc structures</span>", 
"<span class=\"comment\"> *              allow_realloc       - Flag to tell Table Manager if resize of</span>", 
"<span class=\"comment\"> *                                    pre-allocated array is allowed. Ignored</span>", 
"<span class=\"comment\"> *                                    if initial_table_array is NULL.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Initialize the table manager, get the RSDP and RSDT/XSDT.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE:        Allows static allocation of the initial table array in order</span>", 
"<span class=\"comment\"> *              to avoid the use of dynamic memory in confined environments</span>", 
"<span class=\"comment\"> *              such as the kernel boot sequence where it may not be available.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              If the host OS memory managers are initialized, use NULL for</span>", 
"<span class=\"comment\"> *              initial_table_array, and the table will be dynamically allocated.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#acpi_initialize_tables\">acpi_initialize_tables</a>(struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a> * <a class=\"id\" href=\"#initial_table_array\">initial_table_array</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#initial_table_count\">initial_table_count</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#allow_resize\">allow_resize</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#rsdp_address\">rsdp_address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#acpi_initialize_tables\">acpi_initialize_tables</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set up the Root Table Array</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate the table array if requested</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#initial_table_array\">initial_table_array</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_allocate_root_table\">acpi_allocate_root_table</a>(<a class=\"id\" href=\"#initial_table_count\">initial_table_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Root Table Array has been statically allocated by the host */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMSET\">ACPI_MEMSET</a>(<a class=\"id\" href=\"#initial_table_array\">initial_table_array</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#acpi_size\">acpi_size</a>) <a class=\"id\" href=\"#initial_table_count\">initial_table_count</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a> = <a class=\"id\" href=\"#initial_table_array\">initial_table_array</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#max_table_count\">max_table_count</a> = <a class=\"id\" href=\"#initial_table_count\">initial_table_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_ROOT_ORIGIN_UNKNOWN\">ACPI_ROOT_ORIGIN_UNKNOWN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#allow_resize\">allow_resize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> |=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ROOT_ALLOW_RESIZE\">ACPI_ROOT_ALLOW_RESIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the address of the RSDP */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rsdp_address\">rsdp_address</a> = <a class=\"id\" href=\"#acpi_os_get_root_pointer\">acpi_os_get_root_pointer</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rsdp_address\">rsdp_address</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get the root table (RSDT or XSDT) and extract all entries to the local</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Root Table Array. This array contains the information of the RSDT/XSDT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in a common, more useable format.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_parse_root_table\">acpi_tb_parse_root_table</a>(<a class=\"id\" href=\"#rsdp_address\">rsdp_address</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_reallocate_root_table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Reallocate Root Table List into dynamic memory. Copies the</span>", 
"<span class=\"comment\"> *              root list from the previously provided scratch area. Should</span>", 
"<span class=\"comment\"> *              be called once dynamic memory allocation is available in the</span>", 
"<span class=\"comment\"> *              kernel</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_reallocate_root_table\">acpi_reallocate_root_table</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a> *<a class=\"id\" href=\"#tables\">tables</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#new_size\">new_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#current_size\">current_size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#acpi_reallocate_root_table\">acpi_reallocate_root_table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Only reallocate the root table if the host provided a static buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for the table array in the call to acpi_initialize_tables.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_ROOT_ORIGIN_ALLOCATED\">ACPI_ROOT_ORIGIN_ALLOCATED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_SUPPORT\">AE_SUPPORT</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get the current size of the root table and add the default</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * increment to create the new table size.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current_size\">current_size</a> = (<a class=\"id\" href=\"#acpi_size\">acpi_size</a>)", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a> *", 
"<span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_size\">new_size</a> = <a class=\"id\" href=\"#current_size\">current_size</a> +", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ACPI_ROOT_TABLE_SIZE_INCREMENT\">ACPI_ROOT_TABLE_SIZE_INCREMENT</a> * sizeof(struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create new array and copy the old array */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tables\">tables</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_ZEROED\">ACPI_ALLOCATE_ZEROED</a>(<a class=\"id\" href=\"#new_size\">new_size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tables\">tables</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#tables\">tables</a>, <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>, <a class=\"id\" href=\"#current_size\">current_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Update the root table descriptor. The new size will be the current</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * number of tables plus the increment, independent of the reserved</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * size of the original table list.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a> = <a class=\"id\" href=\"#tables\">tables</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#max_table_count\">max_table_count</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a> +", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ROOT_TABLE_SIZE_INCREMENT\">ACPI_ROOT_TABLE_SIZE_INCREMENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ROOT_ORIGIN_ALLOCATED\">ACPI_ROOT_ORIGIN_ALLOCATED</a> | <a class=\"id\" href=\"#ACPI_ROOT_ALLOW_RESIZE\">ACPI_ROOT_ALLOW_RESIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_load_table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_ptr       - pointer to a buffer containing the entire</span>", 
"<span class=\"comment\"> *                                table to be loaded</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: This function is called to load a table from the caller's</span>", 
"<span class=\"comment\"> *              buffer. The buffer must contain an entire ACPI Table including</span>", 
"<span class=\"comment\"> *              a valid header. The header fields will be verified, and if it</span>", 
"<span class=\"comment\"> *              is determined that the table is invalid, the call will fail.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_load_table\">acpi_load_table</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table_ptr\">table_ptr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a> <a class=\"id\" href=\"#table_desc\">table_desc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table_ptr\">table_ptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMSET\">ACPI_MEMSET</a>(&amp;<a class=\"id\" href=\"#table_desc\">table_desc</a>, 0, sizeof(struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#table_ptr\">table_ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#table_ptr\">table_ptr</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_UNKNOWN\">ACPI_TABLE_ORIGIN_UNKNOWN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Install the new table into the local data structures</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_add_table\">acpi_tb_add_table</a>(&amp;<a class=\"id\" href=\"#table_desc\">table_desc</a>, &amp;<a class=\"id\" href=\"#table_index\">table_index</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_load_table\">acpi_ns_load_table</a>(<a class=\"id\" href=\"#table_index\">table_index</a>, <a class=\"id\" href=\"#acpi_gbl_root_node\">acpi_gbl_root_node</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_load_table\">acpi_load_table</a>)", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_get_table_header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Signature           - ACPI signature of needed table</span>", 
"<span class=\"comment\"> *              Instance            - Which instance (for SSDTs)</span>", 
"<span class=\"comment\"> *              out_table_header    - The pointer to the table header to fill</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status and pointer to mapped table header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Finds an ACPI table header.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE:        Caller is responsible in unmapping the header with</span>", 
"<span class=\"comment\"> *              acpi_os_unmap_memory</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_get_table_header\">acpi_get_table_header</a>(char *<a class=\"id\" href=\"#signature\">signature</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#instance\">instance</a>, struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#out_table_header\">out_table_header</a>)", 
"{", 
"       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameter validation */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#signature\">signature</a> || !<a class=\"id\" href=\"#out_table_header\">out_table_header</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Walk the root table list */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (&amp;(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#signature\">signature</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#signature\">signature</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#instance\">instance</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#pointer\">pointer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#flags\">flags</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_MASK\">ACPI_TABLE_ORIGIN_MASK</a>) ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_MAPPED\">ACPI_TABLE_ORIGIN_MAPPED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       sizeof(struct", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#header\">header</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#out_table_header\">out_table_header</a>, <a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#out_table_header\">out_table_header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_get_table_header\">acpi_get_table_header</a>)", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_unload_table_id</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  id            - Owner ID of the table to be removed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: This routine is used to force the unload of a table (by id)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_unload_table_id\">acpi_unload_table_id</a>(<a class=\"id\" href=\"#acpi_owner_id\">acpi_owner_id</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_NOT_EXIST\">AE_NOT_EXIST</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#acpi_unload_table_id\">acpi_unload_table_id</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find table in the global table list */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> != <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#owner_id\">owner_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Delete all namespace objects owned by this table. Note that these</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * objects can appear anywhere in the namespace by virtue of the AML</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"Scope\" operator. Thus, we need to track ownership by an ID, not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * simply a position within the hierarchy</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_delete_namespace_by_owner\">acpi_tb_delete_namespace_by_owner</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_release_owner_id\">acpi_tb_release_owner_id</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_set_table_loaded_flag\">acpi_tb_set_table_loaded_flag</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#FALSE\">FALSE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_unload_table_id\">acpi_unload_table_id</a>)", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_get_table_with_size</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Signature           - ACPI signature of needed table</span>", 
"<span class=\"comment\"> *              Instance            - Which instance (for SSDTs)</span>", 
"<span class=\"comment\"> *              out_table           - Where the pointer to the table is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status and pointer to table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Finds and verifies an ACPI table.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_get_table_with_size\">acpi_get_table_with_size</a>(char *<a class=\"id\" href=\"#signature\">signature</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#instance\">instance</a>, struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> **<a class=\"id\" href=\"#out_table\">out_table</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#acpi_size\">acpi_size</a> *<a class=\"id\" href=\"#tbl_size\">tbl_size</a>)", 
"{", 
"       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameter validation */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#signature\">signature</a> || !<a class=\"id\" href=\"#out_table\">out_table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Walk the root table list */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (&amp;(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#signature\">signature</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#signature\">signature</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#instance\">instance</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_tb_verify_table\">acpi_tb_verify_table</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#out_table\">out_table</a> = <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tbl_size\">tbl_size</a> = <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_gbl_permanent_mmap\">acpi_gbl_permanent_mmap</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_get_table\">acpi_get_table</a>(char *<a class=\"id\" href=\"#signature\">signature</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#instance\">instance</a>, struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> **<a class=\"id\" href=\"#out_table\">out_table</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#tbl_size\">tbl_size</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_get_table_with_size\">acpi_get_table_with_size</a>(<a class=\"id\" href=\"#signature\">signature</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#instance\">instance</a>, <a class=\"id\" href=\"#out_table\">out_table</a>, &amp;<a class=\"id\" href=\"#tbl_size\">tbl_size</a>);", 
"}", 
"<a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_get_table\">acpi_get_table</a>)", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_get_table_by_index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_index         - Table index</span>", 
"<span class=\"comment\"> *              Table               - Where the pointer to the table is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status and pointer to the table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Obtain a table by an index into the global table list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_get_table_by_index\">acpi_get_table_by_index</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>, struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> **<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#acpi_get_table_by_index\">acpi_get_table_by_index</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameter validation */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Validate index */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_index\">table_index</a> >= <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#pointer\">pointer</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Table is not mapped, map it */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_tb_verify_table\">acpi_tb_verify_table</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_get_table_by_index\">acpi_get_table_by_index</a>)", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_load_namespace</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Load the namespace from the DSDT and all SSDTs/PSDTs found in</span>", 
"<span class=\"comment\"> *              the RSDT/XSDT.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_tb_load_namespace\">acpi_tb_load_namespace</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#new_dsdt\">new_dsdt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#tb_load_namespace\">tb_load_namespace</a>);", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Load the namespace. The DSDT is required, but any SSDT and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PSDT tables are optional. Verify the DSDT.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a> ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>(&amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#ACPI_TABLE_INDEX_DSDT\">ACPI_TABLE_INDEX_DSDT</a>].<a class=\"id\" href=\"#signature\">signature</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ACPI_SIG_DSDT\">ACPI_SIG_DSDT</a>)", 
"<span class=\"ts\"/>    ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#acpi_tb_verify_table\">acpi_tb_verify_table</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (&amp;<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#ACPI_TABLE_INDEX_DSDT\">ACPI_TABLE_INDEX_DSDT</a>]))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_NO_ACPI_TABLES\">AE_NO_ACPI_TABLES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock_and_exit\">unlock_and_exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Save the DSDT pointer for simple access. This is the mapped memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * address. We must take care here because the address of the .Tables</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * array can change dynamically as tables are loaded at run-time. Note:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * .Pointer field is not validated until after call to acpi_tb_verify_table.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_DSDT\">acpi_gbl_DSDT</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#ACPI_TABLE_INDEX_DSDT\">ACPI_TABLE_INDEX_DSDT</a>].<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Optionally copy the entire DSDT to local memory (instead of simply</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mapping it.) There are some BIOSs that corrupt or replace the original</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * DSDT, creating the need for this option. Default is FALSE, do not copy</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the DSDT.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_copy_dsdt_locally\">acpi_gbl_copy_dsdt_locally</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_dsdt\">new_dsdt</a> = <a class=\"id\" href=\"#acpi_tb_copy_dsdt\">acpi_tb_copy_dsdt</a>(<a class=\"id\" href=\"#ACPI_TABLE_INDEX_DSDT\">ACPI_TABLE_INDEX_DSDT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_dsdt\">new_dsdt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_DSDT\">acpi_gbl_DSDT</a> = <a class=\"id\" href=\"#new_dsdt\">new_dsdt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Save the original DSDT header for detection of table corruption</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and/or replacement of the DSDT from outside the OS.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_original_dsdt_header\">acpi_gbl_original_dsdt_header</a>, <a class=\"id\" href=\"#acpi_gbl_DSDT\">acpi_gbl_DSDT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a>));", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Load and parse tables */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_load_table\">acpi_ns_load_table</a>(<a class=\"id\" href=\"#ACPI_TABLE_INDEX_DSDT\">ACPI_TABLE_INDEX_DSDT</a>, <a class=\"id\" href=\"#acpi_gbl_root_node\">acpi_gbl_root_node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Load any SSDT or PSDT tables. Note: Loop leaves tables locked */</span>", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>     (&amp;(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#signature\">signature</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ACPI_SIG_SSDT\">ACPI_SIG_SSDT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>(&amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#signature\">signature</a>), <a class=\"id\" href=\"#ACPI_SIG_PSDT\">ACPI_SIG_PSDT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>    ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#acpi_tb_verify_table\">acpi_tb_verify_table</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (&amp;<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>]))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#no_auto_ssdt\">no_auto_ssdt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"ACPI: SSDT ignored due to \\\"acpi_no_auto_ssdt\\\"\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ignore errors while loading tables, get as many as possible */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ns_load_table\">acpi_ns_load_table</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#acpi_gbl_root_node\">acpi_gbl_root_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INIT\">ACPI_DB_INIT</a>, \"ACPI Tables successfully acquired\\n\"));", 
"", 
"      <a class=\"id\" href=\"#unlock_and_exit\">unlock_and_exit</a>:", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_load_tables</span>", 
];
xr_frag_insert('l/dd/5e39efbf5ab785eddba40f0332bdb3f6640fc5.xr', __xr_tmp);
