var __xr_tmp = [
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_uptodate\">clear_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * When an ext4 file is truncated, it is possible that some pages are not</span>", 
"<span class=\"comment\"> * successfully freed, because they are attached to a committing transaction.</span>", 
"<span class=\"comment\"> * After the transaction commits, these pages are left on the LRU, with no</span>", 
"<span class=\"comment\"> * -&gt;mapping, and with attached buffers.  These pages are trivially reclaimable</span>", 
"<span class=\"comment\"> * by the VM, but their apparent absence upsets the VM accounting, and it makes</span>", 
"<span class=\"comment\"> * the numbers in /proc/meminfo look odd.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * So here, we have a buffer which has just come off the forget list.  Look to</span>", 
"<span class=\"comment\"> * see if we can strip all buffers from the backing page.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called under lock_journal(), and possibly under journal_datalist_lock.  The</span>", 
"<span class=\"comment\"> * caller provided us with a ref against the buffer, and we drop that here.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#release_buffer_page\">release_buffer_page</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_dirty\">buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nope\">nope</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>) != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nope\">nope</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_page\">b_page</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nope\">nope</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nope\">nope</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, it's a truncated page */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#trylock_page\">trylock_page</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nope\">nope</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_cache_get\">page_cache_get</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#try_to_free_buffers\">try_to_free_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#nope\">nope</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__brelse\">__brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Done it all: now submit the commit record.  We should have</span>", 
"<span class=\"comment\"> * cleaned up our previous buffers by now, so if we are in abort</span>", 
"<span class=\"comment\"> * mode we can now just skip the rest of the journal write</span>", 
"<span class=\"comment\"> * entirely.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 1 if the journal needs to be aborted or 0 on success</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#journal_submit_commit_record\">journal_submit_commit_record</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#cbh\">cbh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#descriptor\">descriptor</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#commit_header\">commit_header</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#current_kernel_time\">current_kernel_time</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#journal\">journal</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#descriptor\">descriptor</a> = <a class=\"id\" href=\"#jbd2_journal_get_descriptor_buffer\">jbd2_journal_get_descriptor_buffer</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#descriptor\">descriptor</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#descriptor\">descriptor</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = (struct <a class=\"id\" href=\"#commit_header\">commit_header</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_magic\">h_magic</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_MAGIC_NUMBER\">JBD2_MAGIC_NUMBER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_blocktype\">h_blocktype</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_COMMIT_BLOCK\">JBD2_COMMIT_BLOCK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_sequence\">h_sequence</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_commit_sec\">h_commit_sec</a> = <a class=\"id\" href=\"#cpu_to_be64\">cpu_to_be64</a>(<a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_commit_nsec\">h_commit_nsec</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#JBD2_HAS_COMPAT_FEATURE\">JBD2_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#JBD2_FEATURE_COMPAT_CHECKSUM\">JBD2_FEATURE_COMPAT_CHECKSUM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_chksum_type\">h_chksum_type</a> <span class=\"ts\"/>= <a class=\"id\" href=\"#JBD2_CRC32_CHKSUM\">JBD2_CRC32_CHKSUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_chksum_size\">h_chksum_size</a> <span class=\"ts\"/>= <a class=\"id\" href=\"#JBD2_CRC32_CHKSUM_SIZE\">JBD2_CRC32_CHKSUM_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_chksum\">h_chksum</a>[0] <span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#descriptor\">descriptor</a>, \"submit commit block\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_dirty\">clear_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_end_io\">b_end_io</a> = <a class=\"id\" href=\"#journal_end_buffer_io_sync\">journal_end_buffer_io_sync</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_BARRIER\">JBD2_BARRIER</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#JBD2_HAS_INCOMPAT_FEATURE\">JBD2_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT\">JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#submit_bh\">submit_bh</a>(<a class=\"id\" href=\"#WRITE_SYNC_PLUG\">WRITE_SYNC_PLUG</a> | <a class=\"id\" href=\"#WRITE_BARRIER\">WRITE_BARRIER</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"JBD2: Disabling barriers on %s, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"not supported by device\\n\", <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &= ~<a class=\"id\" href=\"#JBD2_BARRIER\">JBD2_BARRIER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* And try again, without the barrier */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_dirty\">clear_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#submit_bh\">submit_bh</a>(<a class=\"id\" href=\"#WRITE_SYNC_PLUG\">WRITE_SYNC_PLUG</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#submit_bh\">submit_bh</a>(<a class=\"id\" href=\"#WRITE_SYNC_PLUG\">WRITE_SYNC_PLUG</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#cbh\">cbh</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function along with journal_submit_commit_record</span>", 
"<span class=\"comment\"> * allows to write the commit record asynchronously.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#journal_wait_on_commit_record\">journal_wait_on_commit_record</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_dirty\">clear_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_on_buffer\">wait_on_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_eopnotsupp\">buffer_eopnotsupp</a>(<a class=\"id\" href=\"#bh\">bh</a>) && (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_BARRIER\">JBD2_BARRIER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"JBD2: %s: disabling barries on %s - not supported \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"by device\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &= ~<a class=\"id\" href=\"#JBD2_BARRIER\">JBD2_BARRIER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_dirty\">clear_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_end_io\">b_end_io</a> = <a class=\"id\" href=\"#journal_end_buffer_io_sync\">journal_end_buffer_io_sync</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#submit_bh\">submit_bh</a>(<a class=\"id\" href=\"#WRITE_SYNC_PLUG\">WRITE_SYNC_PLUG</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);            <span class=\"comment\">/* One for getblk() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_put_journal_head\">jbd2_journal_put_journal_head</a>(<a class=\"id\" href=\"#bh2jh\">bh2jh</a>(<a class=\"id\" href=\"#bh\">bh</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * write the filemap data using writepage() address_space_operations.</span>", 
"<span class=\"comment\"> * We don't do block allocation here even for delalloc. We don't</span>", 
"<span class=\"comment\"> * use writepages() because with dealyed allocation we may be doing</span>", 
"<span class=\"comment\"> * block allocation in writepages().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#journal_submit_inode_data_buffers\">journal_submit_inode_data_buffers</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> <a class=\"id\" href=\"#wbc\">wbc</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sync_mode\">sync_mode</a> =  <a class=\"id\" href=\"#WB_SYNC_ALL\">WB_SYNC_ALL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#nr_to_write\">nr_to_write</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#nrpages\">nrpages</a> * 2,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#range_start\">range_start</a> = 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#range_end\">range_end</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>),", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#generic_writepages\">generic_writepages</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, &amp;<a class=\"id\" href=\"#wbc\">wbc</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Submit all the data buffers of inode associated with the transaction to</span>", 
"<span class=\"comment\"> * disk.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We are in a committing transaction. Therefore no new inode can be added to</span>", 
"<span class=\"comment\"> * our inode list. We use JI_COMMIT_RUNNING flag to protect inode we currently</span>", 
"<span class=\"comment\"> * operate on from being released while we write out pages.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#journal_submit_data_buffers\">journal_submit_data_buffers</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#jbd2_inode\">jbd2_inode</a> *<a class=\"id\" href=\"#jinode\">jinode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#jinode\">jinode</a>, &amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_inode_list\">t_inode_list</a>, <a class=\"id\" href=\"#i_list\">i_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_vfs_inode\">i_vfs_inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> |= <a class=\"id\" href=\"#JI_COMMIT_RUNNING\">JI_COMMIT_RUNNING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * submit the inode data buffers. We use writepage</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * instead of writepages. Because writepages can do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * block allocation  with delalloc. We need to write</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * only allocated blocks here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_jbd2_submit_inode_data\">trace_jbd2_submit_inode_data</a>(<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_vfs_inode\">i_vfs_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_submit_inode_data_buffers\">journal_submit_inode_data_buffers</a>(<a class=\"id\" href=\"#mapping\">mapping</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_transaction\">i_transaction</a> == <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_flushed_data_blocks\">t_flushed_data_blocks</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> &= ~<a class=\"id\" href=\"#JI_COMMIT_RUNNING\">JI_COMMIT_RUNNING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_bit\">wake_up_bit</a>(&amp;<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a>, <a class=\"id\" href=\"#__JI_COMMIT_RUNNING\">__JI_COMMIT_RUNNING</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wait for data submitted for writeout, refile inodes to proper</span>", 
"<span class=\"comment\"> * transaction if needed.</span>", 
];
xr_frag_insert('l/dd/8f0483b463c13422cd95b48b806b94af800b28.xr', __xr_tmp);
