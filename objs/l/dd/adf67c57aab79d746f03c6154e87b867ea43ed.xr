var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Definitions for the AF_INET socket handler.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version:<span class=\"ts\"/>@(#)sock.h<span class=\"ts\"/>1.0.4<span class=\"ts\"/>05/13/93</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Corey Minyard &lt;wf-rch!minyard@relay.EU.net&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Florian La Roche &lt;flla@stud.uni-sb.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Volatiles in skbuff pointers. See</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>skbuff comments. May be overdone,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>better to prove they can be removed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>than the reverse.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Added a zapped field for tcp to note</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>a socket is reset and must stay shut up</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>New fields for options</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pauline Middelink<span class=\"ts\"/>:<span class=\"ts\"/>identd support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Eliminate low level recv/recvfrom</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>David S. Miller<span class=\"ts\"/>:<span class=\"ts\"/>New socket lookup architecture.</span>", 
"<span class=\"comment\"> *              Steve Whitehouse:       Default routines for sock_ops</span>", 
"<span class=\"comment\"> *              Arnaldo C. Melo :<span class=\"ts\"/>removed net_pinfo, tp_pinfo and made</span>", 
"<span class=\"comment\"> *              <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>protinfo be just a void pointer, as the</span>", 
"<span class=\"comment\"> *              <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>protocol specific parts were moved to</span>", 
"<span class=\"comment\"> *              <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>respective headers and ipv4/v6, etc now</span>", 
"<span class=\"comment\"> *              <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>use private slabcaches for its socks</span>", 
"<span class=\"comment\"> *              Pedro Hortas<span class=\"ts\"/>:<span class=\"ts\"/>New flags field for socket options</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_SOCK_H\">_SOCK_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_SOCK_H\">_SOCK_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list_nulls\">list_nulls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#lockdep\">lockdep</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* struct sk_buff */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#filter\">filter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rculist_nulls\">rculist_nulls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#checksum\">checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This structure really needs to be cleaned up.</span>", 
"<span class=\"comment\"> * Most of it is for TCP, and not used by any of</span>", 
"<span class=\"comment\"> * the other protocols.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Define this to get the SOCK_DBG debugging facility. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SOCK_DEBUGGING\">SOCK_DEBUGGING</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#SOCK_DEBUGGING\">SOCK_DEBUGGING</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SOCK_DEBUG\">SOCK_DEBUG</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#msg\">msg</a>...) do { if ((<a class=\"id\" href=\"#sk\">sk</a>) && <a class=\"id\" href=\"#sock_flag\">sock_flag</a>((<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#SOCK_DBG\">SOCK_DBG</a>)) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#msg\">msg</a>); } while (0)", 
"#else", 
"<span class=\"comment\">/* Validate arguments and do nothing */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 2, 3)))", 
"<a class=\"id\" href=\"#SOCK_DEBUG\">SOCK_DEBUG</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const char *<a class=\"id\" href=\"#msg\">msg</a>, ...)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* This is the per-socket lock.  The spinlock provides a synchronization</span>", 
"<span class=\"comment\"> * between user contexts and software interrupt processing, whereas the</span>", 
"<span class=\"comment\"> * mini-semaphore synchronizes multiple users amongst themselves.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slock\">slock</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#owned\">owned</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#wq\">wq</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We express the mutex-alike socket_lock semantics</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to the lock validator by explicitly managing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the slock as a lock variant (in addition to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the slock itself):</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_LOCK_ALLOC\">CONFIG_DEBUG_LOCK_ALLOC</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#lockdep_map\">lockdep_map</a> <a class=\"id\" href=\"#dep_map\">dep_map</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"} <a class=\"id\" href=\"#socket_lock_t\">socket_lock_t</a>;", 
"", 
"struct <a class=\"id\" href=\"#sock\">sock</a>;", 
"struct <a class=\"id\" href=\"#proto\">proto</a>;", 
"struct <a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>struct sock_common - minimal network layer representation of sockets</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_node: main hash linkage for various protocol lookup tables</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_nulls_node: main hash linkage for TCP/UDP/UDP-Lite protocol</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_refcnt: reference count</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_tx_queue_mapping: tx queue number for this connection</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_hash: hash value used with various protocol lookup tables</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_u16hashes: two u16 hash values used by UDP lookup tables</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_family: network address family</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_state: Connection state</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_reuse: %SO_REUSEADDR setting</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_bound_dev_if: bound device index if != 0</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_bind_node: bind hash linkage for various protocol lookup tables</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_portaddr_node: second hash linkage for UDP/UDP-Lite protocol</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_prot: protocol handlers inside a network family</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@skc_net: reference to the network namespace of this socket</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is the minimal network layer representation of sockets, the header</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for struct sock and struct inet_timewait_sock.</span>", 
];
xr_frag_insert('l/dd/adf67c57aab79d746f03c6154e87b867ea43ed.xr', __xr_tmp);
