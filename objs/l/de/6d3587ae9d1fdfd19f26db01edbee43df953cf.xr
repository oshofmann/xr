var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#startbit\">startbit</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#startbit\">startbit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#maps\">maps</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#maps\">maps</a>, <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a> / 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#highbit\">highbit</a> = <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#highbit\">highbit</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NETLABEL\">CONFIG_NETLABEL</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ebitmap_netlbl_export - Export an ebitmap into a NetLabel category bitmap</span>", 
"<span class=\"comment\"> * @ebmap: the ebitmap to export</span>", 
"<span class=\"comment\"> * @catmap: the NetLabel category bitmap</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Export a SELinux extensibile bitmap into a NetLabel category bitmap.</span>", 
"<span class=\"comment\"> * Returns zero on success, negative values on error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ebitmap_netlbl_export\">ebitmap_netlbl_export</a>(struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#ebmap\">ebmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> **<a class=\"id\" href=\"#catmap\">catmap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#e_iter\">e_iter</a> = <a class=\"id\" href=\"#ebmap\">ebmap</a>-><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#c_iter\">c_iter</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cmap_idx\">cmap_idx</a>, <a class=\"id\" href=\"#cmap_sft\">cmap_sft</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NetLabel's NETLBL_CATMAP_MAPTYPE is defined as an array of u64,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * however, it is not always compatible with an array of unsigned long</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in ebitmap_node.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * In addition, you should pay attention the following implementation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * assumes unsigned long has a width equal with or less than 64-bit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e_iter\">e_iter</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#catmap\">catmap</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c_iter\">c_iter</a> = <a class=\"id\" href=\"#netlbl_secattr_catmap_alloc\">netlbl_secattr_catmap_alloc</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c_iter\">c_iter</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#catmap\">catmap</a> = <a class=\"id\" href=\"#c_iter\">c_iter</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> = <a class=\"id\" href=\"#e_iter\">e_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> &amp; ~(<a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a> - 1);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#e_iter\">e_iter</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#EBITMAP_UNIT_NUMS\">EBITMAP_UNIT_NUMS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#e_startbit\">e_startbit</a>, <a class=\"id\" href=\"#c_endbit\">c_endbit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e_startbit\">e_startbit</a> = <a class=\"id\" href=\"#e_iter\">e_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#i\">i</a> * <a class=\"id\" href=\"#EBITMAP_UNIT_SIZE\">EBITMAP_UNIT_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c_endbit\">c_endbit</a> = <a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e_startbit\">e_startbit</a> >= <a class=\"id\" href=\"#c_endbit\">c_endbit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#next\">next</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  = <a class=\"id\" href=\"#netlbl_secattr_catmap_alloc\">netlbl_secattr_catmap_alloc</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#next\">next</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#netlbl_export_failure\">netlbl_export_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c_iter\">c_iter</a> = <a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  = <a class=\"id\" href=\"#e_startbit\">e_startbit</a> &amp; ~(<a class=\"id\" href=\"#NETLBL_CATMAP_SIZE\">NETLBL_CATMAP_SIZE</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#e_startbit\">e_startbit</a> - <a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmap_idx\">cmap_idx</a> = <a class=\"id\" href=\"#delta\">delta</a> / <a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmap_sft\">cmap_sft</a> = <a class=\"id\" href=\"#delta\">delta</a> % <a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a>[<a class=\"id\" href=\"#cmap_idx\">cmap_idx</a>]", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>|= <a class=\"id\" href=\"#e_iter\">e_iter</a>-><a class=\"id\" href=\"#maps\">maps</a>[<a class=\"id\" href=\"#i\">i</a>] << <a class=\"id\" href=\"#cmap_sft\">cmap_sft</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e_iter\">e_iter</a> = <a class=\"id\" href=\"#e_iter\">e_iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#netlbl_export_failure\">netlbl_export_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_catmap_free\">netlbl_secattr_catmap_free</a>(*<a class=\"id\" href=\"#catmap\">catmap</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ebitmap_netlbl_import - Import a NetLabel category bitmap into an ebitmap</span>", 
"<span class=\"comment\"> * @ebmap: the ebitmap to import</span>", 
"<span class=\"comment\"> * @catmap: the NetLabel category bitmap</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Import a NetLabel category bitmap into a SELinux extensibile bitmap.</span>", 
"<span class=\"comment\"> * Returns zero on success, negative values on error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ebitmap_netlbl_import\">ebitmap_netlbl_import</a>(struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#ebmap\">ebmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#catmap\">catmap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#e_iter\">e_iter</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#emap_prev\">emap_prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr_catmap\">netlbl_lsm_secattr_catmap</a> *<a class=\"id\" href=\"#c_iter\">c_iter</a> = <a class=\"id\" href=\"#catmap\">catmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#c_idx\">c_idx</a>, <a class=\"id\" href=\"#c_pos\">c_pos</a>, <a class=\"id\" href=\"#e_idx\">e_idx</a>, <a class=\"id\" href=\"#e_sft\">e_sft</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NetLabel's NETLBL_CATMAP_MAPTYPE is defined as an array of u64,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * however, it is not always compatible with an array of unsigned long</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in ebitmap_node.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * In addition, you should pay attention the following implementation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * assumes unsigned long has a width equal with or less than 64-bit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#c_idx\">c_idx</a> = 0; <a class=\"id\" href=\"#c_idx\">c_idx</a> &lt; <a class=\"id\" href=\"#NETLBL_CATMAP_MAPCNT\">NETLBL_CATMAP_MAPCNT</a>; <a class=\"id\" href=\"#c_idx\">c_idx</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a>[<a class=\"id\" href=\"#c_idx\">c_idx</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#map\">map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c_pos\">c_pos</a> = <a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#c_idx\">c_idx</a> * <a class=\"id\" href=\"#NETLBL_CATMAP_MAPSIZE\">NETLBL_CATMAP_MAPSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#e_iter\">e_iter</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    || <a class=\"id\" href=\"#c_pos\">c_pos</a> >= <a class=\"id\" href=\"#e_iter\">e_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e_iter\">e_iter</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#e_iter\">e_iter</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#e_iter\">e_iter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#netlbl_import_failure\">netlbl_import_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e_iter\">e_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#c_pos\">c_pos</a> - (<a class=\"id\" href=\"#c_pos\">c_pos</a> % <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#emap_prev\">emap_prev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebmap\">ebmap</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#e_iter\">e_iter</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#emap_prev\">emap_prev</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#e_iter\">e_iter</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#emap_prev\">emap_prev</a> = <a class=\"id\" href=\"#e_iter\">e_iter</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#c_pos\">c_pos</a> - <a class=\"id\" href=\"#e_iter\">e_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e_idx\">e_idx</a> = <a class=\"id\" href=\"#delta\">delta</a> / <a class=\"id\" href=\"#EBITMAP_UNIT_SIZE\">EBITMAP_UNIT_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e_sft\">e_sft</a> = <a class=\"id\" href=\"#delta\">delta</a> % <a class=\"id\" href=\"#EBITMAP_UNIT_SIZE\">EBITMAP_UNIT_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#map\">map</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e_iter\">e_iter</a>-><a class=\"id\" href=\"#maps\">maps</a>[<a class=\"id\" href=\"#e_idx\">e_idx</a>++] |= <a class=\"id\" href=\"#map\">map</a> &amp; (-1UL);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#EBITMAP_SHIFT_UNIT_SIZE\">EBITMAP_SHIFT_UNIT_SIZE</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c_iter\">c_iter</a> = <a class=\"id\" href=\"#c_iter\">c_iter</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#c_iter\">c_iter</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e_iter\">e_iter</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebmap\">ebmap</a>-><a class=\"id\" href=\"#highbit\">highbit</a> = <a class=\"id\" href=\"#e_iter\">e_iter</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(<a class=\"id\" href=\"#ebmap\">ebmap</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#netlbl_import_failure\">netlbl_import_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(<a class=\"id\" href=\"#ebmap\">ebmap</a>);", 
];
xr_frag_insert('l/de/6d3587ae9d1fdfd19f26db01edbee43df953cf.xr', __xr_tmp);
