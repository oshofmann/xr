var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  pci_bind.c - ACPI PCI Device Binding ($Revision: 2 $)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Andy Grover &lt;andrew.grover@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Paul Diefenbaugh &lt;paul.s.diefenbaugh@intel.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2 of the License, or (at</span>", 
"<span class=\"comment\"> *  your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> *  WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>", 
"<span class=\"comment\"> *  General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License along</span>", 
"<span class=\"comment\"> *  with this program; if not, write to the Free Software Foundation, Inc.,</span>", 
"<span class=\"comment\"> *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>-<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm_runtime\">pm_runtime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_bus\">acpi_bus</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_drivers\">acpi_drivers</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_PCI_COMPONENT\">ACPI_PCI_COMPONENT</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"pci_bind\");", 
"", 
"static int <a class=\"id\" href=\"#acpi_pci_unbind\">acpi_pci_unbind</a>(struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#acpi_get_pci_dev\">acpi_get_pci_dev</a>(<a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_set_run_wake\">device_set_run_wake</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_acpi_remove_pm_notifier\">pci_acpi_remove_pm_notifier</a>(<a class=\"id\" href=\"#device\">device</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_pci_irq_del_prt\">acpi_pci_irq_del_prt</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#ops\">ops</a>.<a class=\"id\" href=\"#bind\">bind</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#ops\">ops</a>.<a class=\"id\" href=\"#unbind\">unbind</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_pci_bind\">acpi_pci_bind</a>(struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#acpi_get_pci_dev\">acpi_get_pci_dev</a>(<a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_acpi_add_pm_notifier\">pci_acpi_add_pm_notifier</a>(<a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#wakeup\">wakeup</a>.<a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#run_wake\">run_wake</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_set_run_wake\">device_set_run_wake</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Install the 'bind' function to facilitate callbacks for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * children of the P2P bridge.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Device %04x:%02x:%02x.%d is a PCI bridge\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>), <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>), <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#ops\">ops</a>.<a class=\"id\" href=\"#bind\">bind</a> = <a class=\"id\" href=\"#acpi_pci_bind\">acpi_pci_bind</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#ops\">ops</a>.<a class=\"id\" href=\"#unbind\">unbind</a> = <a class=\"id\" href=\"#acpi_pci_unbind\">acpi_pci_unbind</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Evaluate and parse _PRT, if exists.  This code allows parsing of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _PRT objects within the scope of non-bridge devices.  Note that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _PRTs within the scope of a PCI bridge assume the bridge's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * subordinate bus number.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TBD: Can _PRTs exist within the scope of non-bridge PCI devices?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_handle\">acpi_get_handle</a>(<a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#METHOD_NAME__PRT\">METHOD_NAME__PRT</a>, &amp;<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_pci_irq_add_prt\">acpi_pci_irq_add_prt</a>(<a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_pci_bind_root\">acpi_pci_bind_root</a>(struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#ops\">ops</a>.<a class=\"id\" href=\"#bind\">bind</a> = <a class=\"id\" href=\"#acpi_pci_bind\">acpi_pci_bind</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#ops\">ops</a>.<a class=\"id\" href=\"#unbind\">unbind</a> = <a class=\"id\" href=\"#acpi_pci_unbind\">acpi_pci_unbind</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/df/21f7d638bb0343645d353ca670344547e54b39.xr', __xr_tmp);
